; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0C\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare %struct.Memory* @sub_4006b0.strncmp_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400730.atol_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400710.fprintf_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400720.time_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4015e0.POUT(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401650.PA(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400740.sin_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400700.cos_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4006d0.atan_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401780.P3(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401800.P0(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4006f0.log_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4006c0.exp_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400750.sqrt_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4006e0.printf_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @main(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_400850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_400850, %struct.Memory** %MEMORY
  %loadMem_400851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1220 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1220
  %27 = load i64, i64* %PC.i1219
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1219
  store i64 %26, i64* %RBP.i1221, align 8
  store %struct.Memory* %loadMem_400851, %struct.Memory** %MEMORY
  %loadMem_400854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1217 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i1218 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i1218
  %36 = load i64, i64* %PC.i1217
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i1217
  %38 = sub i64 %35, 320
  store i64 %38, i64* %RSP.i1218, align 8
  %39 = icmp ult i64 %35, 320
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 320, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_400854, %struct.Memory** %MEMORY
  %loadMem_40085b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 15
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RBP.i1216 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %RBP.i1216
  %74 = sub i64 %73, 4
  %75 = load i64, i64* %PC.i1215
  %76 = add i64 %75, 7
  store i64 %76, i64* %PC.i1215
  %77 = inttoptr i64 %74 to i32*
  store i32 0, i32* %77
  store %struct.Memory* %loadMem_40085b, %struct.Memory** %MEMORY
  %loadMem_400862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 33
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %80 to i64*
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 11
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %83 to i32*
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %85 = getelementptr inbounds %struct.GPR, %struct.GPR* %84, i32 0, i32 15
  %86 = getelementptr inbounds %struct.Reg, %struct.Reg* %85, i32 0, i32 0
  %RBP.i1214 = bitcast %union.anon* %86 to i64*
  %87 = load i64, i64* %RBP.i1214
  %88 = sub i64 %87, 8
  %89 = load i32, i32* %EDI.i
  %90 = zext i32 %89 to i64
  %91 = load i64, i64* %PC.i1213
  %92 = add i64 %91, 3
  store i64 %92, i64* %PC.i1213
  %93 = inttoptr i64 %88 to i32*
  store i32 %89, i32* %93
  store %struct.Memory* %loadMem_400862, %struct.Memory** %MEMORY
  %loadMem_400865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %95 = getelementptr inbounds %struct.GPR, %struct.GPR* %94, i32 0, i32 33
  %96 = getelementptr inbounds %struct.Reg, %struct.Reg* %95, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %96 to i64*
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 9
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %RSI.i1211 = bitcast %union.anon* %99 to i64*
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %101 = getelementptr inbounds %struct.GPR, %struct.GPR* %100, i32 0, i32 15
  %102 = getelementptr inbounds %struct.Reg, %struct.Reg* %101, i32 0, i32 0
  %RBP.i1212 = bitcast %union.anon* %102 to i64*
  %103 = load i64, i64* %RBP.i1212
  %104 = sub i64 %103, 16
  %105 = load i64, i64* %RSI.i1211
  %106 = load i64, i64* %PC.i1210
  %107 = add i64 %106, 4
  store i64 %107, i64* %PC.i1210
  %108 = inttoptr i64 %104 to i64*
  store i64 %105, i64* %108
  store %struct.Memory* %loadMem_400865, %struct.Memory** %MEMORY
  %loadMem_400869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 33
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %111 to i64*
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 15
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %RBP.i1209 = bitcast %union.anon* %114 to i64*
  %115 = load i64, i64* %RBP.i1209
  %116 = sub i64 %115, 184
  %117 = load i64, i64* %PC.i1208
  %118 = add i64 %117, 11
  store i64 %118, i64* %PC.i1208
  %119 = inttoptr i64 %116 to i64*
  store i64 100000, i64* %119
  store %struct.Memory* %loadMem_400869, %struct.Memory** %MEMORY
  %loadMem_400874 = load %struct.Memory*, %struct.Memory** %MEMORY
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 33
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %PC.i1206 = bitcast %union.anon* %122 to i64*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 15
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %RBP.i1207 = bitcast %union.anon* %125 to i64*
  %126 = load i64, i64* %RBP.i1207
  %127 = sub i64 %126, 208
  %128 = load i64, i64* %PC.i1206
  %129 = add i64 %128, 10
  store i64 %129, i64* %PC.i1206
  %130 = inttoptr i64 %127 to i32*
  store i32 0, i32* %130
  store %struct.Memory* %loadMem_400874, %struct.Memory** %MEMORY
  %loadMem_40087e = load %struct.Memory*, %struct.Memory** %MEMORY
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 33
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 15
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %RBP.i1205 = bitcast %union.anon* %136 to i64*
  %137 = load i64, i64* %RBP.i1205
  %138 = sub i64 %137, 172
  %139 = load i64, i64* %PC.i1204
  %140 = add i64 %139, 10
  store i64 %140, i64* %PC.i1204
  %141 = inttoptr i64 %138 to i32*
  store i32 1, i32* %141
  store %struct.Memory* %loadMem_40087e, %struct.Memory** %MEMORY
  br label %block_.L_400888

block_.L_400888:                                  ; preds = %block_.L_40095d, %entry
  %loadMem_400888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.GPR, %struct.GPR* %142, i32 0, i32 33
  %144 = getelementptr inbounds %struct.Reg, %struct.Reg* %143, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %144 to i64*
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 1
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %RAX.i1202 = bitcast %union.anon* %147 to i64*
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %149 = getelementptr inbounds %struct.GPR, %struct.GPR* %148, i32 0, i32 15
  %150 = getelementptr inbounds %struct.Reg, %struct.Reg* %149, i32 0, i32 0
  %RBP.i1203 = bitcast %union.anon* %150 to i64*
  %151 = load i64, i64* %RBP.i1203
  %152 = sub i64 %151, 172
  %153 = load i64, i64* %PC.i1201
  %154 = add i64 %153, 6
  store i64 %154, i64* %PC.i1201
  %155 = inttoptr i64 %152 to i32*
  %156 = load i32, i32* %155
  %157 = zext i32 %156 to i64
  store i64 %157, i64* %RAX.i1202, align 8
  store %struct.Memory* %loadMem_400888, %struct.Memory** %MEMORY
  %loadMem_40088e = load %struct.Memory*, %struct.Memory** %MEMORY
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 33
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %160 to i64*
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 1
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %EAX.i1199 = bitcast %union.anon* %163 to i32*
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %165 = getelementptr inbounds %struct.GPR, %struct.GPR* %164, i32 0, i32 15
  %166 = getelementptr inbounds %struct.Reg, %struct.Reg* %165, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %166 to i64*
  %167 = load i32, i32* %EAX.i1199
  %168 = zext i32 %167 to i64
  %169 = load i64, i64* %RBP.i1200
  %170 = sub i64 %169, 8
  %171 = load i64, i64* %PC.i1198
  %172 = add i64 %171, 3
  store i64 %172, i64* %PC.i1198
  %173 = inttoptr i64 %170 to i32*
  %174 = load i32, i32* %173
  %175 = sub i32 %167, %174
  %176 = icmp ult i32 %167, %174
  %177 = zext i1 %176 to i8
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %177, i8* %178, align 1
  %179 = and i32 %175, 255
  %180 = call i32 @llvm.ctpop.i32(i32 %179)
  %181 = trunc i32 %180 to i8
  %182 = and i8 %181, 1
  %183 = xor i8 %182, 1
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %183, i8* %184, align 1
  %185 = xor i32 %174, %167
  %186 = xor i32 %185, %175
  %187 = lshr i32 %186, 4
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %189, i8* %190, align 1
  %191 = icmp eq i32 %175, 0
  %192 = zext i1 %191 to i8
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %192, i8* %193, align 1
  %194 = lshr i32 %175, 31
  %195 = trunc i32 %194 to i8
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %195, i8* %196, align 1
  %197 = lshr i32 %167, 31
  %198 = lshr i32 %174, 31
  %199 = xor i32 %198, %197
  %200 = xor i32 %194, %197
  %201 = add i32 %200, %199
  %202 = icmp eq i32 %201, 2
  %203 = zext i1 %202 to i8
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %203, i8* %204, align 1
  store %struct.Memory* %loadMem_40088e, %struct.Memory** %MEMORY
  %loadMem_400891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %206 = getelementptr inbounds %struct.GPR, %struct.GPR* %205, i32 0, i32 33
  %207 = getelementptr inbounds %struct.Reg, %struct.Reg* %206, i32 0, i32 0
  %PC.i1197 = bitcast %union.anon* %207 to i64*
  %208 = load i64, i64* %PC.i1197
  %209 = add i64 %208, 224
  %210 = load i64, i64* %PC.i1197
  %211 = add i64 %210, 6
  %212 = load i64, i64* %PC.i1197
  %213 = add i64 %212, 6
  store i64 %213, i64* %PC.i1197
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %215 = load i8, i8* %214, align 1
  %216 = icmp ne i8 %215, 0
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %218 = load i8, i8* %217, align 1
  %219 = icmp ne i8 %218, 0
  %220 = xor i1 %216, %219
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i8
  store i8 %222, i8* %BRANCH_TAKEN, align 1
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %224 = select i1 %220, i64 %211, i64 %209
  store i64 %224, i64* %223, align 8
  store %struct.Memory* %loadMem_400891, %struct.Memory** %MEMORY
  %loadBr_400891 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400891 = icmp eq i8 %loadBr_400891, 1
  br i1 %cmpBr_400891, label %block_.L_400971, label %block_400897

block_400897:                                     ; preds = %block_.L_400888
  %loadMem_400897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 33
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 9
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %RSI.i1196 = bitcast %union.anon* %230 to i64*
  %231 = load i64, i64* %PC.i1195
  %232 = add i64 %231, 10
  store i64 %232, i64* %PC.i1195
  store i64 4200760, i64* %RSI.i1196, align 8
  store %struct.Memory* %loadMem_400897, %struct.Memory** %MEMORY
  %loadMem_4008a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %234 = getelementptr inbounds %struct.GPR, %struct.GPR* %233, i32 0, i32 33
  %235 = getelementptr inbounds %struct.Reg, %struct.Reg* %234, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %235 to i64*
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %237 = getelementptr inbounds %struct.GPR, %struct.GPR* %236, i32 0, i32 1
  %238 = getelementptr inbounds %struct.Reg, %struct.Reg* %237, i32 0, i32 0
  %RAX.i1194 = bitcast %union.anon* %238 to i64*
  %239 = load i64, i64* %PC.i1193
  %240 = add i64 %239, 5
  store i64 %240, i64* %PC.i1193
  store i64 2, i64* %RAX.i1194, align 8
  store %struct.Memory* %loadMem_4008a1, %struct.Memory** %MEMORY
  %loadMem_4008a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %242 = getelementptr inbounds %struct.GPR, %struct.GPR* %241, i32 0, i32 33
  %243 = getelementptr inbounds %struct.Reg, %struct.Reg* %242, i32 0, i32 0
  %PC.i1190 = bitcast %union.anon* %243 to i64*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %245 = getelementptr inbounds %struct.GPR, %struct.GPR* %244, i32 0, i32 1
  %246 = getelementptr inbounds %struct.Reg, %struct.Reg* %245, i32 0, i32 0
  %EAX.i1191 = bitcast %union.anon* %246 to i32*
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %248 = getelementptr inbounds %struct.GPR, %struct.GPR* %247, i32 0, i32 7
  %249 = getelementptr inbounds %struct.Reg, %struct.Reg* %248, i32 0, i32 0
  %RDX.i1192 = bitcast %union.anon* %249 to i64*
  %250 = load i32, i32* %EAX.i1191
  %251 = zext i32 %250 to i64
  %252 = load i64, i64* %PC.i1190
  %253 = add i64 %252, 2
  store i64 %253, i64* %PC.i1190
  %254 = and i64 %251, 4294967295
  store i64 %254, i64* %RDX.i1192, align 8
  store %struct.Memory* %loadMem_4008a6, %struct.Memory** %MEMORY
  %loadMem_4008a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %256 = getelementptr inbounds %struct.GPR, %struct.GPR* %255, i32 0, i32 33
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %PC.i1187 = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %259 = getelementptr inbounds %struct.GPR, %struct.GPR* %258, i32 0, i32 5
  %260 = getelementptr inbounds %struct.Reg, %struct.Reg* %259, i32 0, i32 0
  %RCX.i1188 = bitcast %union.anon* %260 to i64*
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %262 = getelementptr inbounds %struct.GPR, %struct.GPR* %261, i32 0, i32 15
  %263 = getelementptr inbounds %struct.Reg, %struct.Reg* %262, i32 0, i32 0
  %RBP.i1189 = bitcast %union.anon* %263 to i64*
  %264 = load i64, i64* %RBP.i1189
  %265 = sub i64 %264, 16
  %266 = load i64, i64* %PC.i1187
  %267 = add i64 %266, 4
  store i64 %267, i64* %PC.i1187
  %268 = inttoptr i64 %265 to i64*
  %269 = load i64, i64* %268
  store i64 %269, i64* %RCX.i1188, align 8
  store %struct.Memory* %loadMem_4008a8, %struct.Memory** %MEMORY
  %loadMem_4008ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %271 = getelementptr inbounds %struct.GPR, %struct.GPR* %270, i32 0, i32 33
  %272 = getelementptr inbounds %struct.Reg, %struct.Reg* %271, i32 0, i32 0
  %PC.i1184 = bitcast %union.anon* %272 to i64*
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %274 = getelementptr inbounds %struct.GPR, %struct.GPR* %273, i32 0, i32 11
  %275 = getelementptr inbounds %struct.Reg, %struct.Reg* %274, i32 0, i32 0
  %RDI.i1185 = bitcast %union.anon* %275 to i64*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %277 = getelementptr inbounds %struct.GPR, %struct.GPR* %276, i32 0, i32 15
  %278 = getelementptr inbounds %struct.Reg, %struct.Reg* %277, i32 0, i32 0
  %RBP.i1186 = bitcast %union.anon* %278 to i64*
  %279 = load i64, i64* %RBP.i1186
  %280 = sub i64 %279, 172
  %281 = load i64, i64* %PC.i1184
  %282 = add i64 %281, 7
  store i64 %282, i64* %PC.i1184
  %283 = inttoptr i64 %280 to i32*
  %284 = load i32, i32* %283
  %285 = sext i32 %284 to i64
  store i64 %285, i64* %RDI.i1185, align 8
  store %struct.Memory* %loadMem_4008ac, %struct.Memory** %MEMORY
  %loadMem_4008b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %287 = getelementptr inbounds %struct.GPR, %struct.GPR* %286, i32 0, i32 33
  %288 = getelementptr inbounds %struct.Reg, %struct.Reg* %287, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %288 to i64*
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %290 = getelementptr inbounds %struct.GPR, %struct.GPR* %289, i32 0, i32 5
  %291 = getelementptr inbounds %struct.Reg, %struct.Reg* %290, i32 0, i32 0
  %RCX.i1182 = bitcast %union.anon* %291 to i64*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %293 = getelementptr inbounds %struct.GPR, %struct.GPR* %292, i32 0, i32 11
  %294 = getelementptr inbounds %struct.Reg, %struct.Reg* %293, i32 0, i32 0
  %RDI.i1183 = bitcast %union.anon* %294 to i64*
  %295 = load i64, i64* %RCX.i1182
  %296 = load i64, i64* %RDI.i1183
  %297 = mul i64 %296, 8
  %298 = add i64 %297, %295
  %299 = load i64, i64* %PC.i1181
  %300 = add i64 %299, 4
  store i64 %300, i64* %PC.i1181
  %301 = inttoptr i64 %298 to i64*
  %302 = load i64, i64* %301
  store i64 %302, i64* %RDI.i1183, align 8
  store %struct.Memory* %loadMem_4008b3, %struct.Memory** %MEMORY
  %loadMem1_4008b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %304 = getelementptr inbounds %struct.GPR, %struct.GPR* %303, i32 0, i32 33
  %305 = getelementptr inbounds %struct.Reg, %struct.Reg* %304, i32 0, i32 0
  %PC.i1180 = bitcast %union.anon* %305 to i64*
  %306 = load i64, i64* %PC.i1180
  %307 = add i64 %306, -519
  %308 = load i64, i64* %PC.i1180
  %309 = add i64 %308, 5
  %310 = load i64, i64* %PC.i1180
  %311 = add i64 %310, 5
  store i64 %311, i64* %PC.i1180
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %313 = load i64, i64* %312, align 8
  %314 = add i64 %313, -8
  %315 = inttoptr i64 %314 to i64*
  store i64 %309, i64* %315
  store i64 %314, i64* %312, align 8
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %307, i64* %316, align 8
  store %struct.Memory* %loadMem1_4008b7, %struct.Memory** %MEMORY
  %loadMem2_4008b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4008b7 = load i64, i64* %3
  %call2_4008b7 = call %struct.Memory* @sub_4006b0.strncmp_plt(%struct.State* %0, i64 %loadPC_4008b7, %struct.Memory* %loadMem2_4008b7)
  store %struct.Memory* %call2_4008b7, %struct.Memory** %MEMORY
  %loadMem_4008bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %318 = getelementptr inbounds %struct.GPR, %struct.GPR* %317, i32 0, i32 33
  %319 = getelementptr inbounds %struct.Reg, %struct.Reg* %318, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %319 to i64*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %321 = getelementptr inbounds %struct.GPR, %struct.GPR* %320, i32 0, i32 1
  %322 = getelementptr inbounds %struct.Reg, %struct.Reg* %321, i32 0, i32 0
  %EAX.i1179 = bitcast %union.anon* %322 to i32*
  %323 = load i32, i32* %EAX.i1179
  %324 = zext i32 %323 to i64
  %325 = load i64, i64* %PC.i1178
  %326 = add i64 %325, 3
  store i64 %326, i64* %PC.i1178
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %327, align 1
  %328 = and i32 %323, 255
  %329 = call i32 @llvm.ctpop.i32(i32 %328)
  %330 = trunc i32 %329 to i8
  %331 = and i8 %330, 1
  %332 = xor i8 %331, 1
  %333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %332, i8* %333, align 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %334, align 1
  %335 = icmp eq i32 %323, 0
  %336 = zext i1 %335 to i8
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %336, i8* %337, align 1
  %338 = lshr i32 %323, 31
  %339 = trunc i32 %338 to i8
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %339, i8* %340, align 1
  %341 = lshr i32 %323, 31
  %342 = xor i32 %338, %341
  %343 = add i32 %342, %341
  %344 = icmp eq i32 %343, 2
  %345 = zext i1 %344 to i8
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %345, i8* %346, align 1
  store %struct.Memory* %loadMem_4008bc, %struct.Memory** %MEMORY
  %loadMem_4008bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %348 = getelementptr inbounds %struct.GPR, %struct.GPR* %347, i32 0, i32 33
  %349 = getelementptr inbounds %struct.Reg, %struct.Reg* %348, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %349 to i64*
  %350 = load i64, i64* %PC.i1177
  %351 = add i64 %350, 33
  %352 = load i64, i64* %PC.i1177
  %353 = add i64 %352, 6
  %354 = load i64, i64* %PC.i1177
  %355 = add i64 %354, 6
  store i64 %355, i64* %PC.i1177
  %356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %357 = load i8, i8* %356, align 1
  store i8 %357, i8* %BRANCH_TAKEN, align 1
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %359 = icmp ne i8 %357, 0
  %360 = select i1 %359, i64 %351, i64 %353
  store i64 %360, i64* %358, align 8
  store %struct.Memory* %loadMem_4008bf, %struct.Memory** %MEMORY
  %loadBr_4008bf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4008bf = icmp eq i8 %loadBr_4008bf, 1
  br i1 %cmpBr_4008bf, label %block_.L_4008e0, label %block_4008c5

block_4008c5:                                     ; preds = %block_400897
  %loadMem_4008c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %362 = getelementptr inbounds %struct.GPR, %struct.GPR* %361, i32 0, i32 33
  %363 = getelementptr inbounds %struct.Reg, %struct.Reg* %362, i32 0, i32 0
  %PC.i1174 = bitcast %union.anon* %363 to i64*
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %365 = getelementptr inbounds %struct.GPR, %struct.GPR* %364, i32 0, i32 1
  %366 = getelementptr inbounds %struct.Reg, %struct.Reg* %365, i32 0, i32 0
  %RAX.i1175 = bitcast %union.anon* %366 to i64*
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %368 = getelementptr inbounds %struct.GPR, %struct.GPR* %367, i32 0, i32 15
  %369 = getelementptr inbounds %struct.Reg, %struct.Reg* %368, i32 0, i32 0
  %RBP.i1176 = bitcast %union.anon* %369 to i64*
  %370 = load i64, i64* %RBP.i1176
  %371 = sub i64 %370, 16
  %372 = load i64, i64* %PC.i1174
  %373 = add i64 %372, 4
  store i64 %373, i64* %PC.i1174
  %374 = inttoptr i64 %371 to i64*
  %375 = load i64, i64* %374
  store i64 %375, i64* %RAX.i1175, align 8
  store %struct.Memory* %loadMem_4008c5, %struct.Memory** %MEMORY
  %loadMem_4008c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %377 = getelementptr inbounds %struct.GPR, %struct.GPR* %376, i32 0, i32 33
  %378 = getelementptr inbounds %struct.Reg, %struct.Reg* %377, i32 0, i32 0
  %PC.i1171 = bitcast %union.anon* %378 to i64*
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %380 = getelementptr inbounds %struct.GPR, %struct.GPR* %379, i32 0, i32 5
  %381 = getelementptr inbounds %struct.Reg, %struct.Reg* %380, i32 0, i32 0
  %RCX.i1172 = bitcast %union.anon* %381 to i64*
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %383 = getelementptr inbounds %struct.GPR, %struct.GPR* %382, i32 0, i32 15
  %384 = getelementptr inbounds %struct.Reg, %struct.Reg* %383, i32 0, i32 0
  %RBP.i1173 = bitcast %union.anon* %384 to i64*
  %385 = load i64, i64* %RBP.i1173
  %386 = sub i64 %385, 172
  %387 = load i64, i64* %PC.i1171
  %388 = add i64 %387, 7
  store i64 %388, i64* %PC.i1171
  %389 = inttoptr i64 %386 to i32*
  %390 = load i32, i32* %389
  %391 = sext i32 %390 to i64
  store i64 %391, i64* %RCX.i1172, align 8
  store %struct.Memory* %loadMem_4008c9, %struct.Memory** %MEMORY
  %loadMem_4008d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %393 = getelementptr inbounds %struct.GPR, %struct.GPR* %392, i32 0, i32 33
  %394 = getelementptr inbounds %struct.Reg, %struct.Reg* %393, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %394 to i64*
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %396 = getelementptr inbounds %struct.GPR, %struct.GPR* %395, i32 0, i32 1
  %397 = getelementptr inbounds %struct.Reg, %struct.Reg* %396, i32 0, i32 0
  %RAX.i1169 = bitcast %union.anon* %397 to i64*
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %399 = getelementptr inbounds %struct.GPR, %struct.GPR* %398, i32 0, i32 5
  %400 = getelementptr inbounds %struct.Reg, %struct.Reg* %399, i32 0, i32 0
  %RCX.i1170 = bitcast %union.anon* %400 to i64*
  %401 = load i64, i64* %RAX.i1169
  %402 = load i64, i64* %RCX.i1170
  %403 = mul i64 %402, 8
  %404 = add i64 %403, %401
  %405 = load i64, i64* %PC.i1168
  %406 = add i64 %405, 4
  store i64 %406, i64* %PC.i1168
  %407 = inttoptr i64 %404 to i64*
  %408 = load i64, i64* %407
  store i64 %408, i64* %RAX.i1169, align 8
  store %struct.Memory* %loadMem_4008d0, %struct.Memory** %MEMORY
  %loadMem_4008d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %410 = getelementptr inbounds %struct.GPR, %struct.GPR* %409, i32 0, i32 33
  %411 = getelementptr inbounds %struct.Reg, %struct.Reg* %410, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %411 to i64*
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %413 = getelementptr inbounds %struct.GPR, %struct.GPR* %412, i32 0, i32 1
  %414 = getelementptr inbounds %struct.Reg, %struct.Reg* %413, i32 0, i32 0
  %RAX.i1166 = bitcast %union.anon* %414 to i64*
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %416 = getelementptr inbounds %struct.GPR, %struct.GPR* %415, i32 0, i32 7
  %417 = getelementptr inbounds %struct.Reg, %struct.Reg* %416, i32 0, i32 0
  %RDX.i1167 = bitcast %union.anon* %417 to i64*
  %418 = load i64, i64* %RAX.i1166
  %419 = load i64, i64* %PC.i1165
  %420 = add i64 %419, 3
  store i64 %420, i64* %PC.i1165
  %421 = inttoptr i64 %418 to i8*
  %422 = load i8, i8* %421
  %423 = sext i8 %422 to i64
  %424 = and i64 %423, 4294967295
  store i64 %424, i64* %RDX.i1167, align 8
  store %struct.Memory* %loadMem_4008d4, %struct.Memory** %MEMORY
  %loadMem_4008d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %426 = getelementptr inbounds %struct.GPR, %struct.GPR* %425, i32 0, i32 33
  %427 = getelementptr inbounds %struct.Reg, %struct.Reg* %426, i32 0, i32 0
  %PC.i1164 = bitcast %union.anon* %427 to i64*
  %428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %429 = getelementptr inbounds %struct.GPR, %struct.GPR* %428, i32 0, i32 7
  %430 = getelementptr inbounds %struct.Reg, %struct.Reg* %429, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %430 to i32*
  %431 = load i32, i32* %EDX.i
  %432 = zext i32 %431 to i64
  %433 = load i64, i64* %PC.i1164
  %434 = add i64 %433, 3
  store i64 %434, i64* %PC.i1164
  %435 = sub i32 %431, 99
  %436 = icmp ult i32 %431, 99
  %437 = zext i1 %436 to i8
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %437, i8* %438, align 1
  %439 = and i32 %435, 255
  %440 = call i32 @llvm.ctpop.i32(i32 %439)
  %441 = trunc i32 %440 to i8
  %442 = and i8 %441, 1
  %443 = xor i8 %442, 1
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %443, i8* %444, align 1
  %445 = xor i64 99, %432
  %446 = trunc i64 %445 to i32
  %447 = xor i32 %446, %435
  %448 = lshr i32 %447, 4
  %449 = trunc i32 %448 to i8
  %450 = and i8 %449, 1
  %451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %450, i8* %451, align 1
  %452 = icmp eq i32 %435, 0
  %453 = zext i1 %452 to i8
  %454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %453, i8* %454, align 1
  %455 = lshr i32 %435, 31
  %456 = trunc i32 %455 to i8
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %456, i8* %457, align 1
  %458 = lshr i32 %431, 31
  %459 = xor i32 %455, %458
  %460 = add i32 %459, %458
  %461 = icmp eq i32 %460, 2
  %462 = zext i1 %461 to i8
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %462, i8* %463, align 1
  store %struct.Memory* %loadMem_4008d7, %struct.Memory** %MEMORY
  %loadMem_4008da = load %struct.Memory*, %struct.Memory** %MEMORY
  %464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %465 = getelementptr inbounds %struct.GPR, %struct.GPR* %464, i32 0, i32 33
  %466 = getelementptr inbounds %struct.Reg, %struct.Reg* %465, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %466 to i64*
  %467 = load i64, i64* %PC.i1163
  %468 = add i64 %467, 21
  %469 = load i64, i64* %PC.i1163
  %470 = add i64 %469, 6
  %471 = load i64, i64* %PC.i1163
  %472 = add i64 %471, 6
  store i64 %472, i64* %PC.i1163
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 0
  %476 = zext i1 %475 to i8
  store i8 %476, i8* %BRANCH_TAKEN, align 1
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %478 = select i1 %475, i64 %468, i64 %470
  store i64 %478, i64* %477, align 8
  store %struct.Memory* %loadMem_4008da, %struct.Memory** %MEMORY
  %loadBr_4008da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4008da = icmp eq i8 %loadBr_4008da, 1
  br i1 %cmpBr_4008da, label %block_.L_4008ef, label %block_.L_4008e0

block_.L_4008e0:                                  ; preds = %block_4008c5, %block_400897
  %loadMem_4008e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %480 = getelementptr inbounds %struct.GPR, %struct.GPR* %479, i32 0, i32 33
  %481 = getelementptr inbounds %struct.Reg, %struct.Reg* %480, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %481 to i64*
  %482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %483 = getelementptr inbounds %struct.GPR, %struct.GPR* %482, i32 0, i32 15
  %484 = getelementptr inbounds %struct.Reg, %struct.Reg* %483, i32 0, i32 0
  %RBP.i1162 = bitcast %union.anon* %484 to i64*
  %485 = load i64, i64* %RBP.i1162
  %486 = sub i64 %485, 208
  %487 = load i64, i64* %PC.i1161
  %488 = add i64 %487, 10
  store i64 %488, i64* %PC.i1161
  %489 = inttoptr i64 %486 to i32*
  store i32 1, i32* %489
  store %struct.Memory* %loadMem_4008e0, %struct.Memory** %MEMORY
  %loadMem_4008ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %491 = getelementptr inbounds %struct.GPR, %struct.GPR* %490, i32 0, i32 33
  %492 = getelementptr inbounds %struct.Reg, %struct.Reg* %491, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %492 to i64*
  %493 = load i64, i64* %PC.i1160
  %494 = add i64 %493, 115
  %495 = load i64, i64* %PC.i1160
  %496 = add i64 %495, 5
  store i64 %496, i64* %PC.i1160
  %497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %494, i64* %497, align 8
  store %struct.Memory* %loadMem_4008ea, %struct.Memory** %MEMORY
  br label %block_.L_40095d

block_.L_4008ef:                                  ; preds = %block_4008c5
  %loadMem_4008ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %499 = getelementptr inbounds %struct.GPR, %struct.GPR* %498, i32 0, i32 33
  %500 = getelementptr inbounds %struct.Reg, %struct.Reg* %499, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %500 to i64*
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %502 = getelementptr inbounds %struct.GPR, %struct.GPR* %501, i32 0, i32 1
  %503 = getelementptr inbounds %struct.Reg, %struct.Reg* %502, i32 0, i32 0
  %RAX.i1158 = bitcast %union.anon* %503 to i64*
  %504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %505 = getelementptr inbounds %struct.GPR, %struct.GPR* %504, i32 0, i32 15
  %506 = getelementptr inbounds %struct.Reg, %struct.Reg* %505, i32 0, i32 0
  %RBP.i1159 = bitcast %union.anon* %506 to i64*
  %507 = load i64, i64* %RBP.i1159
  %508 = sub i64 %507, 16
  %509 = load i64, i64* %PC.i1157
  %510 = add i64 %509, 4
  store i64 %510, i64* %PC.i1157
  %511 = inttoptr i64 %508 to i64*
  %512 = load i64, i64* %511
  store i64 %512, i64* %RAX.i1158, align 8
  store %struct.Memory* %loadMem_4008ef, %struct.Memory** %MEMORY
  %loadMem_4008f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %514 = getelementptr inbounds %struct.GPR, %struct.GPR* %513, i32 0, i32 33
  %515 = getelementptr inbounds %struct.Reg, %struct.Reg* %514, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %515 to i64*
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %517 = getelementptr inbounds %struct.GPR, %struct.GPR* %516, i32 0, i32 5
  %518 = getelementptr inbounds %struct.Reg, %struct.Reg* %517, i32 0, i32 0
  %RCX.i1155 = bitcast %union.anon* %518 to i64*
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %520 = getelementptr inbounds %struct.GPR, %struct.GPR* %519, i32 0, i32 15
  %521 = getelementptr inbounds %struct.Reg, %struct.Reg* %520, i32 0, i32 0
  %RBP.i1156 = bitcast %union.anon* %521 to i64*
  %522 = load i64, i64* %RBP.i1156
  %523 = sub i64 %522, 172
  %524 = load i64, i64* %PC.i1154
  %525 = add i64 %524, 7
  store i64 %525, i64* %PC.i1154
  %526 = inttoptr i64 %523 to i32*
  %527 = load i32, i32* %526
  %528 = sext i32 %527 to i64
  store i64 %528, i64* %RCX.i1155, align 8
  store %struct.Memory* %loadMem_4008f3, %struct.Memory** %MEMORY
  %loadMem_4008fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 33
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %PC.i1150 = bitcast %union.anon* %531 to i64*
  %532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %533 = getelementptr inbounds %struct.GPR, %struct.GPR* %532, i32 0, i32 1
  %534 = getelementptr inbounds %struct.Reg, %struct.Reg* %533, i32 0, i32 0
  %RAX.i1151 = bitcast %union.anon* %534 to i64*
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %536 = getelementptr inbounds %struct.GPR, %struct.GPR* %535, i32 0, i32 5
  %537 = getelementptr inbounds %struct.Reg, %struct.Reg* %536, i32 0, i32 0
  %RCX.i1152 = bitcast %union.anon* %537 to i64*
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %539 = getelementptr inbounds %struct.GPR, %struct.GPR* %538, i32 0, i32 11
  %540 = getelementptr inbounds %struct.Reg, %struct.Reg* %539, i32 0, i32 0
  %RDI.i1153 = bitcast %union.anon* %540 to i64*
  %541 = load i64, i64* %RAX.i1151
  %542 = load i64, i64* %RCX.i1152
  %543 = mul i64 %542, 8
  %544 = add i64 %543, %541
  %545 = load i64, i64* %PC.i1150
  %546 = add i64 %545, 4
  store i64 %546, i64* %PC.i1150
  %547 = inttoptr i64 %544 to i64*
  %548 = load i64, i64* %547
  store i64 %548, i64* %RDI.i1153, align 8
  store %struct.Memory* %loadMem_4008fa, %struct.Memory** %MEMORY
  %loadMem1_4008fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %550 = getelementptr inbounds %struct.GPR, %struct.GPR* %549, i32 0, i32 33
  %551 = getelementptr inbounds %struct.Reg, %struct.Reg* %550, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %551 to i64*
  %552 = load i64, i64* %PC.i1149
  %553 = add i64 %552, -462
  %554 = load i64, i64* %PC.i1149
  %555 = add i64 %554, 5
  %556 = load i64, i64* %PC.i1149
  %557 = add i64 %556, 5
  store i64 %557, i64* %PC.i1149
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %559 = load i64, i64* %558, align 8
  %560 = add i64 %559, -8
  %561 = inttoptr i64 %560 to i64*
  store i64 %555, i64* %561
  store i64 %560, i64* %558, align 8
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %553, i64* %562, align 8
  store %struct.Memory* %loadMem1_4008fe, %struct.Memory** %MEMORY
  %loadMem2_4008fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4008fe = load i64, i64* %3
  %call2_4008fe = call %struct.Memory* @sub_400730.atol_plt(%struct.State* %0, i64 %loadPC_4008fe, %struct.Memory* %loadMem2_4008fe)
  store %struct.Memory* %call2_4008fe, %struct.Memory** %MEMORY
  %loadMem_400903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %564 = getelementptr inbounds %struct.GPR, %struct.GPR* %563, i32 0, i32 33
  %565 = getelementptr inbounds %struct.Reg, %struct.Reg* %564, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %565 to i64*
  %566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %567 = getelementptr inbounds %struct.GPR, %struct.GPR* %566, i32 0, i32 1
  %568 = getelementptr inbounds %struct.Reg, %struct.Reg* %567, i32 0, i32 0
  %RAX.i1148 = bitcast %union.anon* %568 to i64*
  %569 = load i64, i64* %RAX.i1148
  %570 = load i64, i64* %PC.i1147
  %571 = add i64 %570, 4
  store i64 %571, i64* %PC.i1147
  %572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %572, align 1
  %573 = trunc i64 %569 to i32
  %574 = and i32 %573, 255
  %575 = call i32 @llvm.ctpop.i32(i32 %574)
  %576 = trunc i32 %575 to i8
  %577 = and i8 %576, 1
  %578 = xor i8 %577, 1
  %579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %578, i8* %579, align 1
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %580, align 1
  %581 = icmp eq i64 %569, 0
  %582 = zext i1 %581 to i8
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %582, i8* %583, align 1
  %584 = lshr i64 %569, 63
  %585 = trunc i64 %584 to i8
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %585, i8* %586, align 1
  %587 = lshr i64 %569, 63
  %588 = xor i64 %584, %587
  %589 = add i64 %588, %587
  %590 = icmp eq i64 %589, 2
  %591 = zext i1 %590 to i8
  %592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %591, i8* %592, align 1
  store %struct.Memory* %loadMem_400903, %struct.Memory** %MEMORY
  %loadMem_400907 = load %struct.Memory*, %struct.Memory** %MEMORY
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %594 = getelementptr inbounds %struct.GPR, %struct.GPR* %593, i32 0, i32 33
  %595 = getelementptr inbounds %struct.Reg, %struct.Reg* %594, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %595 to i64*
  %596 = load i64, i64* %PC.i1146
  %597 = add i64 %596, 38
  %598 = load i64, i64* %PC.i1146
  %599 = add i64 %598, 6
  %600 = load i64, i64* %PC.i1146
  %601 = add i64 %600, 6
  store i64 %601, i64* %PC.i1146
  %602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %603 = load i8, i8* %602, align 1
  %604 = icmp ne i8 %603, 0
  %605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %606 = load i8, i8* %605, align 1
  %607 = icmp ne i8 %606, 0
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %609 = load i8, i8* %608, align 1
  %610 = icmp ne i8 %609, 0
  %611 = xor i1 %607, %610
  %612 = or i1 %604, %611
  %613 = zext i1 %612 to i8
  store i8 %613, i8* %BRANCH_TAKEN, align 1
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %615 = select i1 %612, i64 %597, i64 %599
  store i64 %615, i64* %614, align 8
  store %struct.Memory* %loadMem_400907, %struct.Memory** %MEMORY
  %loadBr_400907 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400907 = icmp eq i8 %loadBr_400907, 1
  br i1 %cmpBr_400907, label %block_.L_40092d, label %block_40090d

block_40090d:                                     ; preds = %block_.L_4008ef
  %loadMem_40090d = load %struct.Memory*, %struct.Memory** %MEMORY
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %617 = getelementptr inbounds %struct.GPR, %struct.GPR* %616, i32 0, i32 33
  %618 = getelementptr inbounds %struct.Reg, %struct.Reg* %617, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %618 to i64*
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %620 = getelementptr inbounds %struct.GPR, %struct.GPR* %619, i32 0, i32 1
  %621 = getelementptr inbounds %struct.Reg, %struct.Reg* %620, i32 0, i32 0
  %RAX.i1144 = bitcast %union.anon* %621 to i64*
  %622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %623 = getelementptr inbounds %struct.GPR, %struct.GPR* %622, i32 0, i32 15
  %624 = getelementptr inbounds %struct.Reg, %struct.Reg* %623, i32 0, i32 0
  %RBP.i1145 = bitcast %union.anon* %624 to i64*
  %625 = load i64, i64* %RBP.i1145
  %626 = sub i64 %625, 16
  %627 = load i64, i64* %PC.i1143
  %628 = add i64 %627, 4
  store i64 %628, i64* %PC.i1143
  %629 = inttoptr i64 %626 to i64*
  %630 = load i64, i64* %629
  store i64 %630, i64* %RAX.i1144, align 8
  store %struct.Memory* %loadMem_40090d, %struct.Memory** %MEMORY
  %loadMem_400911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %632 = getelementptr inbounds %struct.GPR, %struct.GPR* %631, i32 0, i32 33
  %633 = getelementptr inbounds %struct.Reg, %struct.Reg* %632, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %633 to i64*
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %635 = getelementptr inbounds %struct.GPR, %struct.GPR* %634, i32 0, i32 5
  %636 = getelementptr inbounds %struct.Reg, %struct.Reg* %635, i32 0, i32 0
  %RCX.i1141 = bitcast %union.anon* %636 to i64*
  %637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %638 = getelementptr inbounds %struct.GPR, %struct.GPR* %637, i32 0, i32 15
  %639 = getelementptr inbounds %struct.Reg, %struct.Reg* %638, i32 0, i32 0
  %RBP.i1142 = bitcast %union.anon* %639 to i64*
  %640 = load i64, i64* %RBP.i1142
  %641 = sub i64 %640, 172
  %642 = load i64, i64* %PC.i1140
  %643 = add i64 %642, 7
  store i64 %643, i64* %PC.i1140
  %644 = inttoptr i64 %641 to i32*
  %645 = load i32, i32* %644
  %646 = sext i32 %645 to i64
  store i64 %646, i64* %RCX.i1141, align 8
  store %struct.Memory* %loadMem_400911, %struct.Memory** %MEMORY
  %loadMem_400918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %648 = getelementptr inbounds %struct.GPR, %struct.GPR* %647, i32 0, i32 33
  %649 = getelementptr inbounds %struct.Reg, %struct.Reg* %648, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %649 to i64*
  %650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %651 = getelementptr inbounds %struct.GPR, %struct.GPR* %650, i32 0, i32 1
  %652 = getelementptr inbounds %struct.Reg, %struct.Reg* %651, i32 0, i32 0
  %RAX.i1137 = bitcast %union.anon* %652 to i64*
  %653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %654 = getelementptr inbounds %struct.GPR, %struct.GPR* %653, i32 0, i32 5
  %655 = getelementptr inbounds %struct.Reg, %struct.Reg* %654, i32 0, i32 0
  %RCX.i1138 = bitcast %union.anon* %655 to i64*
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %657 = getelementptr inbounds %struct.GPR, %struct.GPR* %656, i32 0, i32 11
  %658 = getelementptr inbounds %struct.Reg, %struct.Reg* %657, i32 0, i32 0
  %RDI.i1139 = bitcast %union.anon* %658 to i64*
  %659 = load i64, i64* %RAX.i1137
  %660 = load i64, i64* %RCX.i1138
  %661 = mul i64 %660, 8
  %662 = add i64 %661, %659
  %663 = load i64, i64* %PC.i1136
  %664 = add i64 %663, 4
  store i64 %664, i64* %PC.i1136
  %665 = inttoptr i64 %662 to i64*
  %666 = load i64, i64* %665
  store i64 %666, i64* %RDI.i1139, align 8
  store %struct.Memory* %loadMem_400918, %struct.Memory** %MEMORY
  %loadMem1_40091c = load %struct.Memory*, %struct.Memory** %MEMORY
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %668 = getelementptr inbounds %struct.GPR, %struct.GPR* %667, i32 0, i32 33
  %669 = getelementptr inbounds %struct.Reg, %struct.Reg* %668, i32 0, i32 0
  %PC.i1135 = bitcast %union.anon* %669 to i64*
  %670 = load i64, i64* %PC.i1135
  %671 = add i64 %670, -492
  %672 = load i64, i64* %PC.i1135
  %673 = add i64 %672, 5
  %674 = load i64, i64* %PC.i1135
  %675 = add i64 %674, 5
  store i64 %675, i64* %PC.i1135
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %677 = load i64, i64* %676, align 8
  %678 = add i64 %677, -8
  %679 = inttoptr i64 %678 to i64*
  store i64 %673, i64* %679
  store i64 %678, i64* %676, align 8
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %671, i64* %680, align 8
  store %struct.Memory* %loadMem1_40091c, %struct.Memory** %MEMORY
  %loadMem2_40091c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40091c = load i64, i64* %3
  %call2_40091c = call %struct.Memory* @sub_400730.atol_plt(%struct.State* %0, i64 %loadPC_40091c, %struct.Memory* %loadMem2_40091c)
  store %struct.Memory* %call2_40091c, %struct.Memory** %MEMORY
  %loadMem_400921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %682 = getelementptr inbounds %struct.GPR, %struct.GPR* %681, i32 0, i32 33
  %683 = getelementptr inbounds %struct.Reg, %struct.Reg* %682, i32 0, i32 0
  %PC.i1132 = bitcast %union.anon* %683 to i64*
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 1
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %RAX.i1133 = bitcast %union.anon* %686 to i64*
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %688 = getelementptr inbounds %struct.GPR, %struct.GPR* %687, i32 0, i32 15
  %689 = getelementptr inbounds %struct.Reg, %struct.Reg* %688, i32 0, i32 0
  %RBP.i1134 = bitcast %union.anon* %689 to i64*
  %690 = load i64, i64* %RBP.i1134
  %691 = sub i64 %690, 184
  %692 = load i64, i64* %RAX.i1133
  %693 = load i64, i64* %PC.i1132
  %694 = add i64 %693, 7
  store i64 %694, i64* %PC.i1132
  %695 = inttoptr i64 %691 to i64*
  store i64 %692, i64* %695
  store %struct.Memory* %loadMem_400921, %struct.Memory** %MEMORY
  %loadMem_400928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %697 = getelementptr inbounds %struct.GPR, %struct.GPR* %696, i32 0, i32 33
  %698 = getelementptr inbounds %struct.Reg, %struct.Reg* %697, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %698 to i64*
  %699 = load i64, i64* %PC.i1131
  %700 = add i64 %699, 48
  %701 = load i64, i64* %PC.i1131
  %702 = add i64 %701, 5
  store i64 %702, i64* %PC.i1131
  %703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %700, i64* %703, align 8
  store %struct.Memory* %loadMem_400928, %struct.Memory** %MEMORY
  br label %block_.L_400958

block_.L_40092d:                                  ; preds = %block_.L_4008ef
  %loadMem_40092d = load %struct.Memory*, %struct.Memory** %MEMORY
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %705 = getelementptr inbounds %struct.GPR, %struct.GPR* %704, i32 0, i32 33
  %706 = getelementptr inbounds %struct.Reg, %struct.Reg* %705, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %706 to i64*
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %708 = getelementptr inbounds %struct.GPR, %struct.GPR* %707, i32 0, i32 9
  %709 = getelementptr inbounds %struct.Reg, %struct.Reg* %708, i32 0, i32 0
  %RSI.i1130 = bitcast %union.anon* %709 to i64*
  %710 = load i64, i64* %PC.i1129
  %711 = add i64 %710, 10
  store i64 %711, i64* %PC.i1129
  store i64 4200763, i64* %RSI.i1130, align 8
  store %struct.Memory* %loadMem_40092d, %struct.Memory** %MEMORY
  %loadMem_400937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %713 = getelementptr inbounds %struct.GPR, %struct.GPR* %712, i32 0, i32 33
  %714 = getelementptr inbounds %struct.Reg, %struct.Reg* %713, i32 0, i32 0
  %PC.i1127 = bitcast %union.anon* %714 to i64*
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 11
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %RDI.i1128 = bitcast %union.anon* %717 to i64*
  %718 = load i64, i64* %PC.i1127
  %719 = add i64 %718, 8
  store i64 %719, i64* %PC.i1127
  %720 = load i64, i64* inttoptr (i64 6299776 to i64*)
  store i64 %720, i64* %RDI.i1128, align 8
  store %struct.Memory* %loadMem_400937, %struct.Memory** %MEMORY
  %loadMem_40093f = load %struct.Memory*, %struct.Memory** %MEMORY
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %722 = getelementptr inbounds %struct.GPR, %struct.GPR* %721, i32 0, i32 33
  %723 = getelementptr inbounds %struct.Reg, %struct.Reg* %722, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %723 to i64*
  %724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %725 = getelementptr inbounds %struct.GPR, %struct.GPR* %724, i32 0, i32 1
  %726 = getelementptr inbounds %struct.Reg, %struct.Reg* %725, i32 0, i32 0
  %727 = bitcast %union.anon* %726 to %struct.anon.2*
  %AL.i1126 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %727, i32 0, i32 0
  %728 = load i64, i64* %PC.i1125
  %729 = add i64 %728, 2
  store i64 %729, i64* %PC.i1125
  store i8 0, i8* %AL.i1126, align 1
  store %struct.Memory* %loadMem_40093f, %struct.Memory** %MEMORY
  %loadMem1_400941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %731 = getelementptr inbounds %struct.GPR, %struct.GPR* %730, i32 0, i32 33
  %732 = getelementptr inbounds %struct.Reg, %struct.Reg* %731, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %732 to i64*
  %733 = load i64, i64* %PC.i1124
  %734 = add i64 %733, -561
  %735 = load i64, i64* %PC.i1124
  %736 = add i64 %735, 5
  %737 = load i64, i64* %PC.i1124
  %738 = add i64 %737, 5
  store i64 %738, i64* %PC.i1124
  %739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %740 = load i64, i64* %739, align 8
  %741 = add i64 %740, -8
  %742 = inttoptr i64 %741 to i64*
  store i64 %736, i64* %742
  store i64 %741, i64* %739, align 8
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %734, i64* %743, align 8
  store %struct.Memory* %loadMem1_400941, %struct.Memory** %MEMORY
  %loadMem2_400941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400941 = load i64, i64* %3
  %call2_400941 = call %struct.Memory* @sub_400710.fprintf_plt(%struct.State* %0, i64 %loadPC_400941, %struct.Memory* %loadMem2_400941)
  store %struct.Memory* %call2_400941, %struct.Memory** %MEMORY
  %loadMem_400946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %745 = getelementptr inbounds %struct.GPR, %struct.GPR* %744, i32 0, i32 33
  %746 = getelementptr inbounds %struct.Reg, %struct.Reg* %745, i32 0, i32 0
  %PC.i1122 = bitcast %union.anon* %746 to i64*
  %747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %748 = getelementptr inbounds %struct.GPR, %struct.GPR* %747, i32 0, i32 15
  %749 = getelementptr inbounds %struct.Reg, %struct.Reg* %748, i32 0, i32 0
  %RBP.i1123 = bitcast %union.anon* %749 to i64*
  %750 = load i64, i64* %RBP.i1123
  %751 = sub i64 %750, 4
  %752 = load i64, i64* %PC.i1122
  %753 = add i64 %752, 7
  store i64 %753, i64* %PC.i1122
  %754 = inttoptr i64 %751 to i32*
  store i32 1, i32* %754
  store %struct.Memory* %loadMem_400946, %struct.Memory** %MEMORY
  %loadMem_40094d = load %struct.Memory*, %struct.Memory** %MEMORY
  %755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %756 = getelementptr inbounds %struct.GPR, %struct.GPR* %755, i32 0, i32 33
  %757 = getelementptr inbounds %struct.Reg, %struct.Reg* %756, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %757 to i64*
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %759 = getelementptr inbounds %struct.GPR, %struct.GPR* %758, i32 0, i32 1
  %760 = getelementptr inbounds %struct.Reg, %struct.Reg* %759, i32 0, i32 0
  %EAX.i1120 = bitcast %union.anon* %760 to i32*
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 15
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %RBP.i1121 = bitcast %union.anon* %763 to i64*
  %764 = load i64, i64* %RBP.i1121
  %765 = sub i64 %764, 212
  %766 = load i32, i32* %EAX.i1120
  %767 = zext i32 %766 to i64
  %768 = load i64, i64* %PC.i1119
  %769 = add i64 %768, 6
  store i64 %769, i64* %PC.i1119
  %770 = inttoptr i64 %765 to i32*
  store i32 %766, i32* %770
  store %struct.Memory* %loadMem_40094d, %struct.Memory** %MEMORY
  %loadMem_400953 = load %struct.Memory*, %struct.Memory** %MEMORY
  %771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %772 = getelementptr inbounds %struct.GPR, %struct.GPR* %771, i32 0, i32 33
  %773 = getelementptr inbounds %struct.Reg, %struct.Reg* %772, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %773 to i64*
  %774 = load i64, i64* %PC.i1118
  %775 = add i64 %774, 3197
  %776 = load i64, i64* %PC.i1118
  %777 = add i64 %776, 5
  store i64 %777, i64* %PC.i1118
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %775, i64* %778, align 8
  store %struct.Memory* %loadMem_400953, %struct.Memory** %MEMORY
  br label %block_.L_4015d0

block_.L_400958:                                  ; preds = %block_40090d
  %loadMem_400958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %780 = getelementptr inbounds %struct.GPR, %struct.GPR* %779, i32 0, i32 33
  %781 = getelementptr inbounds %struct.Reg, %struct.Reg* %780, i32 0, i32 0
  %PC.i1117 = bitcast %union.anon* %781 to i64*
  %782 = load i64, i64* %PC.i1117
  %783 = add i64 %782, 5
  %784 = load i64, i64* %PC.i1117
  %785 = add i64 %784, 5
  store i64 %785, i64* %PC.i1117
  %786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %783, i64* %786, align 8
  store %struct.Memory* %loadMem_400958, %struct.Memory** %MEMORY
  br label %block_.L_40095d

block_.L_40095d:                                  ; preds = %block_.L_400958, %block_.L_4008e0
  %loadMem_40095d = load %struct.Memory*, %struct.Memory** %MEMORY
  %787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %788 = getelementptr inbounds %struct.GPR, %struct.GPR* %787, i32 0, i32 33
  %789 = getelementptr inbounds %struct.Reg, %struct.Reg* %788, i32 0, i32 0
  %PC.i1114 = bitcast %union.anon* %789 to i64*
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %791 = getelementptr inbounds %struct.GPR, %struct.GPR* %790, i32 0, i32 1
  %792 = getelementptr inbounds %struct.Reg, %struct.Reg* %791, i32 0, i32 0
  %RAX.i1115 = bitcast %union.anon* %792 to i64*
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %794 = getelementptr inbounds %struct.GPR, %struct.GPR* %793, i32 0, i32 15
  %795 = getelementptr inbounds %struct.Reg, %struct.Reg* %794, i32 0, i32 0
  %RBP.i1116 = bitcast %union.anon* %795 to i64*
  %796 = load i64, i64* %RBP.i1116
  %797 = sub i64 %796, 172
  %798 = load i64, i64* %PC.i1114
  %799 = add i64 %798, 6
  store i64 %799, i64* %PC.i1114
  %800 = inttoptr i64 %797 to i32*
  %801 = load i32, i32* %800
  %802 = zext i32 %801 to i64
  store i64 %802, i64* %RAX.i1115, align 8
  store %struct.Memory* %loadMem_40095d, %struct.Memory** %MEMORY
  %loadMem_400963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %804 = getelementptr inbounds %struct.GPR, %struct.GPR* %803, i32 0, i32 33
  %805 = getelementptr inbounds %struct.Reg, %struct.Reg* %804, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %805 to i64*
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %807 = getelementptr inbounds %struct.GPR, %struct.GPR* %806, i32 0, i32 1
  %808 = getelementptr inbounds %struct.Reg, %struct.Reg* %807, i32 0, i32 0
  %RAX.i1113 = bitcast %union.anon* %808 to i64*
  %809 = load i64, i64* %RAX.i1113
  %810 = load i64, i64* %PC.i1112
  %811 = add i64 %810, 3
  store i64 %811, i64* %PC.i1112
  %812 = trunc i64 %809 to i32
  %813 = add i32 1, %812
  %814 = zext i32 %813 to i64
  store i64 %814, i64* %RAX.i1113, align 8
  %815 = icmp ult i32 %813, %812
  %816 = icmp ult i32 %813, 1
  %817 = or i1 %815, %816
  %818 = zext i1 %817 to i8
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %818, i8* %819, align 1
  %820 = and i32 %813, 255
  %821 = call i32 @llvm.ctpop.i32(i32 %820)
  %822 = trunc i32 %821 to i8
  %823 = and i8 %822, 1
  %824 = xor i8 %823, 1
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %824, i8* %825, align 1
  %826 = xor i64 1, %809
  %827 = trunc i64 %826 to i32
  %828 = xor i32 %827, %813
  %829 = lshr i32 %828, 4
  %830 = trunc i32 %829 to i8
  %831 = and i8 %830, 1
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %831, i8* %832, align 1
  %833 = icmp eq i32 %813, 0
  %834 = zext i1 %833 to i8
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %834, i8* %835, align 1
  %836 = lshr i32 %813, 31
  %837 = trunc i32 %836 to i8
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %837, i8* %838, align 1
  %839 = lshr i32 %812, 31
  %840 = xor i32 %836, %839
  %841 = add i32 %840, %836
  %842 = icmp eq i32 %841, 2
  %843 = zext i1 %842 to i8
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %843, i8* %844, align 1
  store %struct.Memory* %loadMem_400963, %struct.Memory** %MEMORY
  %loadMem_400966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %846 = getelementptr inbounds %struct.GPR, %struct.GPR* %845, i32 0, i32 33
  %847 = getelementptr inbounds %struct.Reg, %struct.Reg* %846, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %847 to i64*
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %849 = getelementptr inbounds %struct.GPR, %struct.GPR* %848, i32 0, i32 1
  %850 = getelementptr inbounds %struct.Reg, %struct.Reg* %849, i32 0, i32 0
  %EAX.i1110 = bitcast %union.anon* %850 to i32*
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %852 = getelementptr inbounds %struct.GPR, %struct.GPR* %851, i32 0, i32 15
  %853 = getelementptr inbounds %struct.Reg, %struct.Reg* %852, i32 0, i32 0
  %RBP.i1111 = bitcast %union.anon* %853 to i64*
  %854 = load i64, i64* %RBP.i1111
  %855 = sub i64 %854, 172
  %856 = load i32, i32* %EAX.i1110
  %857 = zext i32 %856 to i64
  %858 = load i64, i64* %PC.i1109
  %859 = add i64 %858, 6
  store i64 %859, i64* %PC.i1109
  %860 = inttoptr i64 %855 to i32*
  store i32 %856, i32* %860
  store %struct.Memory* %loadMem_400966, %struct.Memory** %MEMORY
  %loadMem_40096c = load %struct.Memory*, %struct.Memory** %MEMORY
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 33
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %863 to i64*
  %864 = load i64, i64* %PC.i1108
  %865 = add i64 %864, -228
  %866 = load i64, i64* %PC.i1108
  %867 = add i64 %866, 5
  store i64 %867, i64* %PC.i1108
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %865, i64* %868, align 8
  store %struct.Memory* %loadMem_40096c, %struct.Memory** %MEMORY
  br label %block_.L_400888

block_.L_400971:                                  ; preds = %block_.L_400888
  %loadMem_400971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %870 = getelementptr inbounds %struct.GPR, %struct.GPR* %869, i32 0, i32 33
  %871 = getelementptr inbounds %struct.Reg, %struct.Reg* %870, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %871 to i64*
  %872 = load i64, i64* %PC.i1107
  %873 = add i64 %872, 5
  %874 = load i64, i64* %PC.i1107
  %875 = add i64 %874, 5
  store i64 %875, i64* %PC.i1107
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %873, i64* %876, align 8
  store %struct.Memory* %loadMem_400971, %struct.Memory** %MEMORY
  br label %block_.L_400976

block_.L_400976:                                  ; preds = %block_4015c4, %block_.L_400971
  %loadMem_400976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %878 = getelementptr inbounds %struct.GPR, %struct.GPR* %877, i32 0, i32 33
  %879 = getelementptr inbounds %struct.Reg, %struct.Reg* %878, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %879 to i64*
  %880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %881 = getelementptr inbounds %struct.GPR, %struct.GPR* %880, i32 0, i32 1
  %882 = getelementptr inbounds %struct.Reg, %struct.Reg* %881, i32 0, i32 0
  %EAX.i1105 = bitcast %union.anon* %882 to i32*
  %883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %884 = getelementptr inbounds %struct.GPR, %struct.GPR* %883, i32 0, i32 1
  %885 = getelementptr inbounds %struct.Reg, %struct.Reg* %884, i32 0, i32 0
  %RAX.i1106 = bitcast %union.anon* %885 to i64*
  %886 = load i64, i64* %RAX.i1106
  %887 = load i32, i32* %EAX.i1105
  %888 = zext i32 %887 to i64
  %889 = load i64, i64* %PC.i1104
  %890 = add i64 %889, 2
  store i64 %890, i64* %PC.i1104
  %891 = xor i64 %888, %886
  %892 = trunc i64 %891 to i32
  %893 = and i64 %891, 4294967295
  store i64 %893, i64* %RAX.i1106, align 8
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %894, align 1
  %895 = and i32 %892, 255
  %896 = call i32 @llvm.ctpop.i32(i32 %895)
  %897 = trunc i32 %896 to i8
  %898 = and i8 %897, 1
  %899 = xor i8 %898, 1
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %899, i8* %900, align 1
  %901 = icmp eq i32 %892, 0
  %902 = zext i1 %901 to i8
  %903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %902, i8* %903, align 1
  %904 = lshr i32 %892, 31
  %905 = trunc i32 %904 to i8
  %906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %905, i8* %906, align 1
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %907, align 1
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %908, align 1
  store %struct.Memory* %loadMem_400976, %struct.Memory** %MEMORY
  %loadMem_400978 = load %struct.Memory*, %struct.Memory** %MEMORY
  %909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %910 = getelementptr inbounds %struct.GPR, %struct.GPR* %909, i32 0, i32 33
  %911 = getelementptr inbounds %struct.Reg, %struct.Reg* %910, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %911 to i64*
  %912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %913 = getelementptr inbounds %struct.GPR, %struct.GPR* %912, i32 0, i32 1
  %914 = getelementptr inbounds %struct.Reg, %struct.Reg* %913, i32 0, i32 0
  %EAX.i1102 = bitcast %union.anon* %914 to i32*
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %916 = getelementptr inbounds %struct.GPR, %struct.GPR* %915, i32 0, i32 11
  %917 = getelementptr inbounds %struct.Reg, %struct.Reg* %916, i32 0, i32 0
  %RDI.i1103 = bitcast %union.anon* %917 to i64*
  %918 = load i32, i32* %EAX.i1102
  %919 = zext i32 %918 to i64
  %920 = load i64, i64* %PC.i1101
  %921 = add i64 %920, 2
  store i64 %921, i64* %PC.i1101
  %922 = and i64 %919, 4294967295
  store i64 %922, i64* %RDI.i1103, align 8
  store %struct.Memory* %loadMem_400978, %struct.Memory** %MEMORY
  %loadMem1_40097a = load %struct.Memory*, %struct.Memory** %MEMORY
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %924 = getelementptr inbounds %struct.GPR, %struct.GPR* %923, i32 0, i32 33
  %925 = getelementptr inbounds %struct.Reg, %struct.Reg* %924, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %925 to i64*
  %926 = load i64, i64* %PC.i1100
  %927 = add i64 %926, -602
  %928 = load i64, i64* %PC.i1100
  %929 = add i64 %928, 5
  %930 = load i64, i64* %PC.i1100
  %931 = add i64 %930, 5
  store i64 %931, i64* %PC.i1100
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %933 = load i64, i64* %932, align 8
  %934 = add i64 %933, -8
  %935 = inttoptr i64 %934 to i64*
  store i64 %929, i64* %935
  store i64 %934, i64* %932, align 8
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %927, i64* %936, align 8
  store %struct.Memory* %loadMem1_40097a, %struct.Memory** %MEMORY
  %loadMem2_40097a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40097a = load i64, i64* %3
  %call2_40097a = call %struct.Memory* @sub_400720.time_plt(%struct.State* %0, i64 %loadPC_40097a, %struct.Memory* %loadMem2_40097a)
  store %struct.Memory* %call2_40097a, %struct.Memory** %MEMORY
  %loadMem_40097f = load %struct.Memory*, %struct.Memory** %MEMORY
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %938 = getelementptr inbounds %struct.GPR, %struct.GPR* %937, i32 0, i32 33
  %939 = getelementptr inbounds %struct.Reg, %struct.Reg* %938, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %939 to i64*
  %940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %941 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %940, i64 0, i64 0
  %YMM0.i1099 = bitcast %union.VectorReg* %941 to %"class.std::bitset"*
  %942 = bitcast %"class.std::bitset"* %YMM0.i1099 to i8*
  %943 = load i64, i64* %PC.i1098
  %944 = add i64 %943, 3961
  %945 = load i64, i64* %PC.i1098
  %946 = add i64 %945, 8
  store i64 %946, i64* %PC.i1098
  %947 = inttoptr i64 %944 to double*
  %948 = load double, double* %947
  %949 = bitcast i8* %942 to double*
  store double %948, double* %949, align 1
  %950 = getelementptr inbounds i8, i8* %942, i64 8
  %951 = bitcast i8* %950 to double*
  store double 0.000000e+00, double* %951, align 1
  store %struct.Memory* %loadMem_40097f, %struct.Memory** %MEMORY
  %loadMem_400987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %953 = getelementptr inbounds %struct.GPR, %struct.GPR* %952, i32 0, i32 33
  %954 = getelementptr inbounds %struct.Reg, %struct.Reg* %953, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %954 to i64*
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %956 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %955, i64 0, i64 1
  %YMM1.i1097 = bitcast %union.VectorReg* %956 to %"class.std::bitset"*
  %957 = bitcast %"class.std::bitset"* %YMM1.i1097 to i8*
  %958 = load i64, i64* %PC.i1096
  %959 = add i64 %958, 3961
  %960 = load i64, i64* %PC.i1096
  %961 = add i64 %960, 8
  store i64 %961, i64* %PC.i1096
  %962 = inttoptr i64 %959 to double*
  %963 = load double, double* %962
  %964 = bitcast i8* %957 to double*
  store double %963, double* %964, align 1
  %965 = getelementptr inbounds i8, i8* %957, i64 8
  %966 = bitcast i8* %965 to double*
  store double 0.000000e+00, double* %966, align 1
  store %struct.Memory* %loadMem_400987, %struct.Memory** %MEMORY
  %loadMem_40098f = load %struct.Memory*, %struct.Memory** %MEMORY
  %967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %968 = getelementptr inbounds %struct.GPR, %struct.GPR* %967, i32 0, i32 33
  %969 = getelementptr inbounds %struct.Reg, %struct.Reg* %968, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %969 to i64*
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %971 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %970, i64 0, i64 2
  %YMM2.i1095 = bitcast %union.VectorReg* %971 to %"class.std::bitset"*
  %972 = bitcast %"class.std::bitset"* %YMM2.i1095 to i8*
  %973 = load i64, i64* %PC.i1094
  %974 = add i64 %973, 3961
  %975 = load i64, i64* %PC.i1094
  %976 = add i64 %975, 8
  store i64 %976, i64* %PC.i1094
  %977 = inttoptr i64 %974 to double*
  %978 = load double, double* %977
  %979 = bitcast i8* %972 to double*
  store double %978, double* %979, align 1
  %980 = getelementptr inbounds i8, i8* %972, i64 8
  %981 = bitcast i8* %980 to double*
  store double 0.000000e+00, double* %981, align 1
  store %struct.Memory* %loadMem_40098f, %struct.Memory** %MEMORY
  %loadMem_400997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %983 = getelementptr inbounds %struct.GPR, %struct.GPR* %982, i32 0, i32 33
  %984 = getelementptr inbounds %struct.Reg, %struct.Reg* %983, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %984 to i64*
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %986 = getelementptr inbounds %struct.GPR, %struct.GPR* %985, i32 0, i32 1
  %987 = getelementptr inbounds %struct.Reg, %struct.Reg* %986, i32 0, i32 0
  %RAX.i1092 = bitcast %union.anon* %987 to i64*
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %989 = getelementptr inbounds %struct.GPR, %struct.GPR* %988, i32 0, i32 15
  %990 = getelementptr inbounds %struct.Reg, %struct.Reg* %989, i32 0, i32 0
  %RBP.i1093 = bitcast %union.anon* %990 to i64*
  %991 = load i64, i64* %RBP.i1093
  %992 = sub i64 %991, 192
  %993 = load i64, i64* %RAX.i1092
  %994 = load i64, i64* %PC.i1091
  %995 = add i64 %994, 7
  store i64 %995, i64* %PC.i1091
  %996 = inttoptr i64 %992 to i64*
  store i64 %993, i64* %996
  store %struct.Memory* %loadMem_400997, %struct.Memory** %MEMORY
  %loadMem_40099e = load %struct.Memory*, %struct.Memory** %MEMORY
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %998 = getelementptr inbounds %struct.GPR, %struct.GPR* %997, i32 0, i32 33
  %999 = getelementptr inbounds %struct.Reg, %struct.Reg* %998, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %999 to i64*
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1001 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1000, i64 0, i64 2
  %XMM2.i1090 = bitcast %union.VectorReg* %1001 to %union.vec128_t*
  %1002 = bitcast %union.vec128_t* %XMM2.i1090 to i8*
  %1003 = load i64, i64* %PC.i1089
  %1004 = add i64 %1003, 9
  store i64 %1004, i64* %PC.i1089
  %1005 = bitcast i8* %1002 to double*
  %1006 = load double, double* %1005, align 1
  store double %1006, double* inttoptr (i64 6299800 to double*)
  store %struct.Memory* %loadMem_40099e, %struct.Memory** %MEMORY
  %loadMem_4009a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1008 = getelementptr inbounds %struct.GPR, %struct.GPR* %1007, i32 0, i32 33
  %1009 = getelementptr inbounds %struct.Reg, %struct.Reg* %1008, i32 0, i32 0
  %PC.i1087 = bitcast %union.anon* %1009 to i64*
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1011 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1010, i64 0, i64 1
  %XMM1.i1088 = bitcast %union.VectorReg* %1011 to %union.vec128_t*
  %1012 = bitcast %union.vec128_t* %XMM1.i1088 to i8*
  %1013 = load i64, i64* %PC.i1087
  %1014 = add i64 %1013, 9
  store i64 %1014, i64* %PC.i1087
  %1015 = bitcast i8* %1012 to double*
  %1016 = load double, double* %1015, align 1
  store double %1016, double* inttoptr (i64 6299808 to double*)
  store %struct.Memory* %loadMem_4009a7, %struct.Memory** %MEMORY
  %loadMem_4009b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1018 = getelementptr inbounds %struct.GPR, %struct.GPR* %1017, i32 0, i32 33
  %1019 = getelementptr inbounds %struct.Reg, %struct.Reg* %1018, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %1019 to i64*
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1021 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1020, i64 0, i64 0
  %XMM0.i1086 = bitcast %union.VectorReg* %1021 to %union.vec128_t*
  %1022 = bitcast %union.vec128_t* %XMM0.i1086 to i8*
  %1023 = load i64, i64* %PC.i1085
  %1024 = add i64 %1023, 9
  store i64 %1024, i64* %PC.i1085
  %1025 = bitcast i8* %1022 to double*
  %1026 = load double, double* %1025, align 1
  store double %1026, double* inttoptr (i64 6299824 to double*)
  store %struct.Memory* %loadMem_4009b0, %struct.Memory** %MEMORY
  %loadMem_4009b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1028 = getelementptr inbounds %struct.GPR, %struct.GPR* %1027, i32 0, i32 33
  %1029 = getelementptr inbounds %struct.Reg, %struct.Reg* %1028, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %1029 to i64*
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1031 = getelementptr inbounds %struct.GPR, %struct.GPR* %1030, i32 0, i32 1
  %1032 = getelementptr inbounds %struct.Reg, %struct.Reg* %1031, i32 0, i32 0
  %RAX.i1083 = bitcast %union.anon* %1032 to i64*
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1034 = getelementptr inbounds %struct.GPR, %struct.GPR* %1033, i32 0, i32 15
  %1035 = getelementptr inbounds %struct.Reg, %struct.Reg* %1034, i32 0, i32 0
  %RBP.i1084 = bitcast %union.anon* %1035 to i64*
  %1036 = load i64, i64* %RBP.i1084
  %1037 = sub i64 %1036, 184
  %1038 = load i64, i64* %PC.i1082
  %1039 = add i64 %1038, 7
  store i64 %1039, i64* %PC.i1082
  %1040 = inttoptr i64 %1037 to i64*
  %1041 = load i64, i64* %1040
  store i64 %1041, i64* %RAX.i1083, align 8
  store %struct.Memory* %loadMem_4009b9, %struct.Memory** %MEMORY
  %loadMem_4009c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1043 = getelementptr inbounds %struct.GPR, %struct.GPR* %1042, i32 0, i32 33
  %1044 = getelementptr inbounds %struct.Reg, %struct.Reg* %1043, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %1044 to i64*
  %1045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1046 = getelementptr inbounds %struct.GPR, %struct.GPR* %1045, i32 0, i32 1
  %1047 = getelementptr inbounds %struct.Reg, %struct.Reg* %1046, i32 0, i32 0
  %RAX.i1080 = bitcast %union.anon* %1047 to i64*
  %1048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1049 = getelementptr inbounds %struct.GPR, %struct.GPR* %1048, i32 0, i32 15
  %1050 = getelementptr inbounds %struct.Reg, %struct.Reg* %1049, i32 0, i32 0
  %RBP.i1081 = bitcast %union.anon* %1050 to i64*
  %1051 = load i64, i64* %RBP.i1081
  %1052 = sub i64 %1051, 168
  %1053 = load i64, i64* %RAX.i1080
  %1054 = load i64, i64* %PC.i1079
  %1055 = add i64 %1054, 7
  store i64 %1055, i64* %PC.i1079
  %1056 = inttoptr i64 %1052 to i64*
  store i64 %1053, i64* %1056
  store %struct.Memory* %loadMem_4009c0, %struct.Memory** %MEMORY
  %loadMem_4009c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1058 = getelementptr inbounds %struct.GPR, %struct.GPR* %1057, i32 0, i32 33
  %1059 = getelementptr inbounds %struct.Reg, %struct.Reg* %1058, i32 0, i32 0
  %PC.i1077 = bitcast %union.anon* %1059 to i64*
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1061 = getelementptr inbounds %struct.GPR, %struct.GPR* %1060, i32 0, i32 15
  %1062 = getelementptr inbounds %struct.Reg, %struct.Reg* %1061, i32 0, i32 0
  %RBP.i1078 = bitcast %union.anon* %1062 to i64*
  %1063 = load i64, i64* %RBP.i1078
  %1064 = sub i64 %1063, 172
  %1065 = load i64, i64* %PC.i1077
  %1066 = add i64 %1065, 10
  store i64 %1066, i64* %PC.i1077
  %1067 = inttoptr i64 %1064 to i32*
  store i32 1, i32* %1067
  store %struct.Memory* %loadMem_4009c7, %struct.Memory** %MEMORY
  %loadMem_4009d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1069 = getelementptr inbounds %struct.GPR, %struct.GPR* %1068, i32 0, i32 33
  %1070 = getelementptr inbounds %struct.Reg, %struct.Reg* %1069, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %1070 to i64*
  %1071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1072 = getelementptr inbounds %struct.GPR, %struct.GPR* %1071, i32 0, i32 15
  %1073 = getelementptr inbounds %struct.Reg, %struct.Reg* %1072, i32 0, i32 0
  %RBP.i1076 = bitcast %union.anon* %1073 to i64*
  %1074 = load i64, i64* %RBP.i1076
  %1075 = sub i64 %1074, 176
  %1076 = load i64, i64* %PC.i1075
  %1077 = add i64 %1076, 10
  store i64 %1077, i64* %PC.i1075
  %1078 = inttoptr i64 %1075 to i32*
  store i32 1, i32* %1078
  store %struct.Memory* %loadMem_4009d1, %struct.Memory** %MEMORY
  br label %block_.L_4009db

block_.L_4009db:                                  ; preds = %block_40158b, %block_.L_400976
  %loadMem_4009db = load %struct.Memory*, %struct.Memory** %MEMORY
  %1079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1080 = getelementptr inbounds %struct.GPR, %struct.GPR* %1079, i32 0, i32 33
  %1081 = getelementptr inbounds %struct.Reg, %struct.Reg* %1080, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %1081 to i64*
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1083 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1082, i64 0, i64 0
  %YMM0.i1074 = bitcast %union.VectorReg* %1083 to %"class.std::bitset"*
  %1084 = bitcast %"class.std::bitset"* %YMM0.i1074 to i8*
  %1085 = load i64, i64* %PC.i1073
  %1086 = add i64 %1085, 3893
  %1087 = load i64, i64* %PC.i1073
  %1088 = add i64 %1087, 8
  store i64 %1088, i64* %PC.i1073
  %1089 = inttoptr i64 %1086 to double*
  %1090 = load double, double* %1089
  %1091 = bitcast i8* %1084 to double*
  store double %1090, double* %1091, align 1
  %1092 = getelementptr inbounds i8, i8* %1084, i64 8
  %1093 = bitcast i8* %1092 to double*
  store double 0.000000e+00, double* %1093, align 1
  store %struct.Memory* %loadMem_4009db, %struct.Memory** %MEMORY
  %loadMem_4009e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1095 = getelementptr inbounds %struct.GPR, %struct.GPR* %1094, i32 0, i32 33
  %1096 = getelementptr inbounds %struct.Reg, %struct.Reg* %1095, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %1096 to i64*
  %1097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1098 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1097, i64 0, i64 1
  %YMM1.i1072 = bitcast %union.VectorReg* %1098 to %"class.std::bitset"*
  %1099 = bitcast %"class.std::bitset"* %YMM1.i1072 to i8*
  %1100 = load i64, i64* %PC.i1071
  %1101 = add i64 %1100, 3893
  %1102 = load i64, i64* %PC.i1071
  %1103 = add i64 %1102, 8
  store i64 %1103, i64* %PC.i1071
  %1104 = inttoptr i64 %1101 to double*
  %1105 = load double, double* %1104
  %1106 = bitcast i8* %1099 to double*
  store double %1105, double* %1106, align 1
  %1107 = getelementptr inbounds i8, i8* %1099, i64 8
  %1108 = bitcast i8* %1107 to double*
  store double 0.000000e+00, double* %1108, align 1
  store %struct.Memory* %loadMem_4009e3, %struct.Memory** %MEMORY
  %loadMem_4009eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1110 = getelementptr inbounds %struct.GPR, %struct.GPR* %1109, i32 0, i32 33
  %1111 = getelementptr inbounds %struct.Reg, %struct.Reg* %1110, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %1111 to i64*
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1113 = getelementptr inbounds %struct.GPR, %struct.GPR* %1112, i32 0, i32 15
  %1114 = getelementptr inbounds %struct.Reg, %struct.Reg* %1113, i32 0, i32 0
  %RBP.i1070 = bitcast %union.anon* %1114 to i64*
  %1115 = load i64, i64* %RBP.i1070
  %1116 = sub i64 %1115, 32
  %1117 = load i64, i64* %PC.i1069
  %1118 = add i64 %1117, 8
  store i64 %1118, i64* %PC.i1069
  %1119 = inttoptr i64 %1116 to i64*
  store i64 0, i64* %1119
  store %struct.Memory* %loadMem_4009eb, %struct.Memory** %MEMORY
  %loadMem_4009f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1121 = getelementptr inbounds %struct.GPR, %struct.GPR* %1120, i32 0, i32 33
  %1122 = getelementptr inbounds %struct.Reg, %struct.Reg* %1121, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %1122 to i64*
  %1123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1124 = getelementptr inbounds %struct.GPR, %struct.GPR* %1123, i32 0, i32 1
  %1125 = getelementptr inbounds %struct.Reg, %struct.Reg* %1124, i32 0, i32 0
  %RAX.i1067 = bitcast %union.anon* %1125 to i64*
  %1126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1127 = getelementptr inbounds %struct.GPR, %struct.GPR* %1126, i32 0, i32 15
  %1128 = getelementptr inbounds %struct.Reg, %struct.Reg* %1127, i32 0, i32 0
  %RBP.i1068 = bitcast %union.anon* %1128 to i64*
  %1129 = load i64, i64* %RBP.i1068
  %1130 = sub i64 %1129, 168
  %1131 = load i64, i64* %PC.i1066
  %1132 = add i64 %1131, 8
  store i64 %1132, i64* %PC.i1066
  %1133 = inttoptr i64 %1130 to i64*
  %1134 = load i64, i64* %1133
  %1135 = sext i64 %1134 to i128
  %1136 = and i128 %1135, -18446744073709551616
  %1137 = zext i64 %1134 to i128
  %1138 = or i128 %1136, %1137
  %1139 = mul i128 %1138, 12
  %1140 = trunc i128 %1139 to i64
  store i64 %1140, i64* %RAX.i1067, align 8
  %1141 = sext i64 %1140 to i128
  %1142 = icmp ne i128 %1141, %1139
  %1143 = zext i1 %1142 to i8
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1143, i8* %1144, align 1
  %1145 = trunc i128 %1139 to i32
  %1146 = and i32 %1145, 255
  %1147 = call i32 @llvm.ctpop.i32(i32 %1146)
  %1148 = trunc i32 %1147 to i8
  %1149 = and i8 %1148, 1
  %1150 = xor i8 %1149, 1
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1150, i8* %1151, align 1
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1152, align 1
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1153, align 1
  %1154 = lshr i64 %1140, 63
  %1155 = trunc i64 %1154 to i8
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1155, i8* %1156, align 1
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1143, i8* %1157, align 1
  store %struct.Memory* %loadMem_4009f3, %struct.Memory** %MEMORY
  %loadMem_4009fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1159 = getelementptr inbounds %struct.GPR, %struct.GPR* %1158, i32 0, i32 33
  %1160 = getelementptr inbounds %struct.Reg, %struct.Reg* %1159, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %1160 to i64*
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1162 = getelementptr inbounds %struct.GPR, %struct.GPR* %1161, i32 0, i32 1
  %1163 = getelementptr inbounds %struct.Reg, %struct.Reg* %1162, i32 0, i32 0
  %RAX.i1064 = bitcast %union.anon* %1163 to i64*
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1165 = getelementptr inbounds %struct.GPR, %struct.GPR* %1164, i32 0, i32 15
  %1166 = getelementptr inbounds %struct.Reg, %struct.Reg* %1165, i32 0, i32 0
  %RBP.i1065 = bitcast %union.anon* %1166 to i64*
  %1167 = load i64, i64* %RBP.i1065
  %1168 = sub i64 %1167, 40
  %1169 = load i64, i64* %RAX.i1064
  %1170 = load i64, i64* %PC.i1063
  %1171 = add i64 %1170, 4
  store i64 %1171, i64* %PC.i1063
  %1172 = inttoptr i64 %1168 to i64*
  store i64 %1169, i64* %1172
  store %struct.Memory* %loadMem_4009fb, %struct.Memory** %MEMORY
  %loadMem_4009ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %1173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1174 = getelementptr inbounds %struct.GPR, %struct.GPR* %1173, i32 0, i32 33
  %1175 = getelementptr inbounds %struct.Reg, %struct.Reg* %1174, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %1175 to i64*
  %1176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1177 = getelementptr inbounds %struct.GPR, %struct.GPR* %1176, i32 0, i32 1
  %1178 = getelementptr inbounds %struct.Reg, %struct.Reg* %1177, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %1178 to i64*
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1180 = getelementptr inbounds %struct.GPR, %struct.GPR* %1179, i32 0, i32 15
  %1181 = getelementptr inbounds %struct.Reg, %struct.Reg* %1180, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %1181 to i64*
  %1182 = load i64, i64* %RBP.i1062
  %1183 = sub i64 %1182, 168
  %1184 = load i64, i64* %PC.i1060
  %1185 = add i64 %1184, 8
  store i64 %1185, i64* %PC.i1060
  %1186 = inttoptr i64 %1183 to i64*
  %1187 = load i64, i64* %1186
  %1188 = sext i64 %1187 to i128
  %1189 = and i128 %1188, -18446744073709551616
  %1190 = zext i64 %1187 to i128
  %1191 = or i128 %1189, %1190
  %1192 = mul i128 %1191, 14
  %1193 = trunc i128 %1192 to i64
  store i64 %1193, i64* %RAX.i1061, align 8
  %1194 = sext i64 %1193 to i128
  %1195 = icmp ne i128 %1194, %1192
  %1196 = zext i1 %1195 to i8
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1196, i8* %1197, align 1
  %1198 = trunc i128 %1192 to i32
  %1199 = and i32 %1198, 255
  %1200 = call i32 @llvm.ctpop.i32(i32 %1199)
  %1201 = trunc i32 %1200 to i8
  %1202 = and i8 %1201, 1
  %1203 = xor i8 %1202, 1
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1203, i8* %1204, align 1
  %1205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1205, align 1
  %1206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1206, align 1
  %1207 = lshr i64 %1193, 63
  %1208 = trunc i64 %1207 to i8
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1208, i8* %1209, align 1
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1196, i8* %1210, align 1
  store %struct.Memory* %loadMem_4009ff, %struct.Memory** %MEMORY
  %loadMem_400a07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1212 = getelementptr inbounds %struct.GPR, %struct.GPR* %1211, i32 0, i32 33
  %1213 = getelementptr inbounds %struct.Reg, %struct.Reg* %1212, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %1213 to i64*
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1215 = getelementptr inbounds %struct.GPR, %struct.GPR* %1214, i32 0, i32 1
  %1216 = getelementptr inbounds %struct.Reg, %struct.Reg* %1215, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %1216 to i64*
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1218 = getelementptr inbounds %struct.GPR, %struct.GPR* %1217, i32 0, i32 15
  %1219 = getelementptr inbounds %struct.Reg, %struct.Reg* %1218, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %1219 to i64*
  %1220 = load i64, i64* %RBP.i1059
  %1221 = sub i64 %1220, 48
  %1222 = load i64, i64* %RAX.i1058
  %1223 = load i64, i64* %PC.i1057
  %1224 = add i64 %1223, 4
  store i64 %1224, i64* %PC.i1057
  %1225 = inttoptr i64 %1221 to i64*
  store i64 %1222, i64* %1225
  store %struct.Memory* %loadMem_400a07, %struct.Memory** %MEMORY
  %loadMem_400a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1227 = getelementptr inbounds %struct.GPR, %struct.GPR* %1226, i32 0, i32 33
  %1228 = getelementptr inbounds %struct.Reg, %struct.Reg* %1227, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %1228 to i64*
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 1
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %1231 to i64*
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1233 = getelementptr inbounds %struct.GPR, %struct.GPR* %1232, i32 0, i32 15
  %1234 = getelementptr inbounds %struct.Reg, %struct.Reg* %1233, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %1234 to i64*
  %1235 = load i64, i64* %RBP.i1056
  %1236 = sub i64 %1235, 168
  %1237 = load i64, i64* %PC.i1054
  %1238 = add i64 %1237, 11
  store i64 %1238, i64* %PC.i1054
  %1239 = inttoptr i64 %1236 to i64*
  %1240 = load i64, i64* %1239
  %1241 = sext i64 %1240 to i128
  %1242 = and i128 %1241, -18446744073709551616
  %1243 = zext i64 %1240 to i128
  %1244 = or i128 %1242, %1243
  %1245 = mul i128 %1244, 345
  %1246 = trunc i128 %1245 to i64
  store i64 %1246, i64* %RAX.i1055, align 8
  %1247 = sext i64 %1246 to i128
  %1248 = icmp ne i128 %1247, %1245
  %1249 = zext i1 %1248 to i8
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1249, i8* %1250, align 1
  %1251 = trunc i128 %1245 to i32
  %1252 = and i32 %1251, 255
  %1253 = call i32 @llvm.ctpop.i32(i32 %1252)
  %1254 = trunc i32 %1253 to i8
  %1255 = and i8 %1254, 1
  %1256 = xor i8 %1255, 1
  %1257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1256, i8* %1257, align 1
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1258, align 1
  %1259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1259, align 1
  %1260 = lshr i64 %1246, 63
  %1261 = trunc i64 %1260 to i8
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1261, i8* %1262, align 1
  %1263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1249, i8* %1263, align 1
  store %struct.Memory* %loadMem_400a0b, %struct.Memory** %MEMORY
  %loadMem_400a16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 33
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %1266 to i64*
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1268 = getelementptr inbounds %struct.GPR, %struct.GPR* %1267, i32 0, i32 1
  %1269 = getelementptr inbounds %struct.Reg, %struct.Reg* %1268, i32 0, i32 0
  %RAX.i1052 = bitcast %union.anon* %1269 to i64*
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1271 = getelementptr inbounds %struct.GPR, %struct.GPR* %1270, i32 0, i32 15
  %1272 = getelementptr inbounds %struct.Reg, %struct.Reg* %1271, i32 0, i32 0
  %RBP.i1053 = bitcast %union.anon* %1272 to i64*
  %1273 = load i64, i64* %RBP.i1053
  %1274 = sub i64 %1273, 56
  %1275 = load i64, i64* %RAX.i1052
  %1276 = load i64, i64* %PC.i1051
  %1277 = add i64 %1276, 4
  store i64 %1277, i64* %PC.i1051
  %1278 = inttoptr i64 %1274 to i64*
  store i64 %1275, i64* %1278
  store %struct.Memory* %loadMem_400a16, %struct.Memory** %MEMORY
  %loadMem_400a1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1280 = getelementptr inbounds %struct.GPR, %struct.GPR* %1279, i32 0, i32 33
  %1281 = getelementptr inbounds %struct.Reg, %struct.Reg* %1280, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %1281 to i64*
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1283 = getelementptr inbounds %struct.GPR, %struct.GPR* %1282, i32 0, i32 1
  %1284 = getelementptr inbounds %struct.Reg, %struct.Reg* %1283, i32 0, i32 0
  %RAX.i1049 = bitcast %union.anon* %1284 to i64*
  %1285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1286 = getelementptr inbounds %struct.GPR, %struct.GPR* %1285, i32 0, i32 15
  %1287 = getelementptr inbounds %struct.Reg, %struct.Reg* %1286, i32 0, i32 0
  %RBP.i1050 = bitcast %union.anon* %1287 to i64*
  %1288 = load i64, i64* %RBP.i1050
  %1289 = sub i64 %1288, 168
  %1290 = load i64, i64* %PC.i1048
  %1291 = add i64 %1290, 11
  store i64 %1291, i64* %PC.i1048
  %1292 = inttoptr i64 %1289 to i64*
  %1293 = load i64, i64* %1292
  %1294 = sext i64 %1293 to i128
  %1295 = and i128 %1294, -18446744073709551616
  %1296 = zext i64 %1293 to i128
  %1297 = or i128 %1295, %1296
  %1298 = mul i128 %1297, 210
  %1299 = trunc i128 %1298 to i64
  store i64 %1299, i64* %RAX.i1049, align 8
  %1300 = sext i64 %1299 to i128
  %1301 = icmp ne i128 %1300, %1298
  %1302 = zext i1 %1301 to i8
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1302, i8* %1303, align 1
  %1304 = trunc i128 %1298 to i32
  %1305 = and i32 %1304, 255
  %1306 = call i32 @llvm.ctpop.i32(i32 %1305)
  %1307 = trunc i32 %1306 to i8
  %1308 = and i8 %1307, 1
  %1309 = xor i8 %1308, 1
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1309, i8* %1310, align 1
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1311, align 1
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1312, align 1
  %1313 = lshr i64 %1299, 63
  %1314 = trunc i64 %1313 to i8
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1314, i8* %1315, align 1
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1302, i8* %1316, align 1
  store %struct.Memory* %loadMem_400a1a, %struct.Memory** %MEMORY
  %loadMem_400a25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 33
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %1319 to i64*
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1321 = getelementptr inbounds %struct.GPR, %struct.GPR* %1320, i32 0, i32 1
  %1322 = getelementptr inbounds %struct.Reg, %struct.Reg* %1321, i32 0, i32 0
  %RAX.i1046 = bitcast %union.anon* %1322 to i64*
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1324 = getelementptr inbounds %struct.GPR, %struct.GPR* %1323, i32 0, i32 15
  %1325 = getelementptr inbounds %struct.Reg, %struct.Reg* %1324, i32 0, i32 0
  %RBP.i1047 = bitcast %union.anon* %1325 to i64*
  %1326 = load i64, i64* %RBP.i1047
  %1327 = sub i64 %1326, 64
  %1328 = load i64, i64* %RAX.i1046
  %1329 = load i64, i64* %PC.i1045
  %1330 = add i64 %1329, 4
  store i64 %1330, i64* %PC.i1045
  %1331 = inttoptr i64 %1327 to i64*
  store i64 %1328, i64* %1331
  store %struct.Memory* %loadMem_400a25, %struct.Memory** %MEMORY
  %loadMem_400a29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 33
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %1334 to i64*
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 1
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %1337 to i64*
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1339 = getelementptr inbounds %struct.GPR, %struct.GPR* %1338, i32 0, i32 15
  %1340 = getelementptr inbounds %struct.Reg, %struct.Reg* %1339, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %1340 to i64*
  %1341 = load i64, i64* %RBP.i1044
  %1342 = sub i64 %1341, 168
  %1343 = load i64, i64* %PC.i1042
  %1344 = add i64 %1343, 7
  store i64 %1344, i64* %PC.i1042
  %1345 = inttoptr i64 %1342 to i64*
  %1346 = load i64, i64* %1345
  store i64 %1346, i64* %RAX.i1043, align 8
  store %struct.Memory* %loadMem_400a29, %struct.Memory** %MEMORY
  %loadMem_400a30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1348 = getelementptr inbounds %struct.GPR, %struct.GPR* %1347, i32 0, i32 33
  %1349 = getelementptr inbounds %struct.Reg, %struct.Reg* %1348, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %1349 to i64*
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1351 = getelementptr inbounds %struct.GPR, %struct.GPR* %1350, i32 0, i32 1
  %1352 = getelementptr inbounds %struct.Reg, %struct.Reg* %1351, i32 0, i32 0
  %RAX.i1041 = bitcast %union.anon* %1352 to i64*
  %1353 = load i64, i64* %RAX.i1041
  %1354 = load i64, i64* %PC.i1040
  %1355 = add i64 %1354, 4
  store i64 %1355, i64* %PC.i1040
  %1356 = shl i64 %1353, 4
  %1357 = icmp slt i64 %1356, 0
  %1358 = shl i64 %1356, 1
  store i64 %1358, i64* %RAX.i1041, align 8
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1360 = zext i1 %1357 to i8
  store i8 %1360, i8* %1359, align 1
  %1361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1362 = trunc i64 %1358 to i32
  %1363 = and i32 %1362, 254
  %1364 = call i32 @llvm.ctpop.i32(i32 %1363)
  %1365 = trunc i32 %1364 to i8
  %1366 = and i8 %1365, 1
  %1367 = xor i8 %1366, 1
  store i8 %1367, i8* %1361, align 1
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1368, align 1
  %1369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1370 = icmp eq i64 %1358, 0
  %1371 = zext i1 %1370 to i8
  store i8 %1371, i8* %1369, align 1
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1373 = lshr i64 %1358, 63
  %1374 = trunc i64 %1373 to i8
  store i8 %1374, i8* %1372, align 1
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1375, align 1
  store %struct.Memory* %loadMem_400a30, %struct.Memory** %MEMORY
  %loadMem_400a34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1377 = getelementptr inbounds %struct.GPR, %struct.GPR* %1376, i32 0, i32 33
  %1378 = getelementptr inbounds %struct.Reg, %struct.Reg* %1377, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %1378 to i64*
  %1379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1380 = getelementptr inbounds %struct.GPR, %struct.GPR* %1379, i32 0, i32 1
  %1381 = getelementptr inbounds %struct.Reg, %struct.Reg* %1380, i32 0, i32 0
  %RAX.i1038 = bitcast %union.anon* %1381 to i64*
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1383 = getelementptr inbounds %struct.GPR, %struct.GPR* %1382, i32 0, i32 15
  %1384 = getelementptr inbounds %struct.Reg, %struct.Reg* %1383, i32 0, i32 0
  %RBP.i1039 = bitcast %union.anon* %1384 to i64*
  %1385 = load i64, i64* %RBP.i1039
  %1386 = sub i64 %1385, 72
  %1387 = load i64, i64* %RAX.i1038
  %1388 = load i64, i64* %PC.i1037
  %1389 = add i64 %1388, 4
  store i64 %1389, i64* %PC.i1037
  %1390 = inttoptr i64 %1386 to i64*
  store i64 %1387, i64* %1390
  store %struct.Memory* %loadMem_400a34, %struct.Memory** %MEMORY
  %loadMem_400a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1392 = getelementptr inbounds %struct.GPR, %struct.GPR* %1391, i32 0, i32 33
  %1393 = getelementptr inbounds %struct.Reg, %struct.Reg* %1392, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %1393 to i64*
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1395 = getelementptr inbounds %struct.GPR, %struct.GPR* %1394, i32 0, i32 1
  %1396 = getelementptr inbounds %struct.Reg, %struct.Reg* %1395, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %1396 to i64*
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1398 = getelementptr inbounds %struct.GPR, %struct.GPR* %1397, i32 0, i32 15
  %1399 = getelementptr inbounds %struct.Reg, %struct.Reg* %1398, i32 0, i32 0
  %RBP.i1036 = bitcast %union.anon* %1399 to i64*
  %1400 = load i64, i64* %RBP.i1036
  %1401 = sub i64 %1400, 168
  %1402 = load i64, i64* %PC.i1034
  %1403 = add i64 %1402, 11
  store i64 %1403, i64* %PC.i1034
  %1404 = inttoptr i64 %1401 to i64*
  %1405 = load i64, i64* %1404
  %1406 = sext i64 %1405 to i128
  %1407 = and i128 %1406, -18446744073709551616
  %1408 = zext i64 %1405 to i128
  %1409 = or i128 %1407, %1408
  %1410 = mul i128 %1409, 899
  %1411 = trunc i128 %1410 to i64
  store i64 %1411, i64* %RAX.i1035, align 8
  %1412 = sext i64 %1411 to i128
  %1413 = icmp ne i128 %1412, %1410
  %1414 = zext i1 %1413 to i8
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1414, i8* %1415, align 1
  %1416 = trunc i128 %1410 to i32
  %1417 = and i32 %1416, 255
  %1418 = call i32 @llvm.ctpop.i32(i32 %1417)
  %1419 = trunc i32 %1418 to i8
  %1420 = and i8 %1419, 1
  %1421 = xor i8 %1420, 1
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1421, i8* %1422, align 1
  %1423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1423, align 1
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1424, align 1
  %1425 = lshr i64 %1411, 63
  %1426 = trunc i64 %1425 to i8
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1426, i8* %1427, align 1
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1414, i8* %1428, align 1
  store %struct.Memory* %loadMem_400a38, %struct.Memory** %MEMORY
  %loadMem_400a43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1430 = getelementptr inbounds %struct.GPR, %struct.GPR* %1429, i32 0, i32 33
  %1431 = getelementptr inbounds %struct.Reg, %struct.Reg* %1430, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %1431 to i64*
  %1432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1433 = getelementptr inbounds %struct.GPR, %struct.GPR* %1432, i32 0, i32 1
  %1434 = getelementptr inbounds %struct.Reg, %struct.Reg* %1433, i32 0, i32 0
  %RAX.i1032 = bitcast %union.anon* %1434 to i64*
  %1435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1436 = getelementptr inbounds %struct.GPR, %struct.GPR* %1435, i32 0, i32 15
  %1437 = getelementptr inbounds %struct.Reg, %struct.Reg* %1436, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %1437 to i64*
  %1438 = load i64, i64* %RBP.i1033
  %1439 = sub i64 %1438, 80
  %1440 = load i64, i64* %RAX.i1032
  %1441 = load i64, i64* %PC.i1031
  %1442 = add i64 %1441, 4
  store i64 %1442, i64* %PC.i1031
  %1443 = inttoptr i64 %1439 to i64*
  store i64 %1440, i64* %1443
  store %struct.Memory* %loadMem_400a43, %struct.Memory** %MEMORY
  %loadMem_400a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1445 = getelementptr inbounds %struct.GPR, %struct.GPR* %1444, i32 0, i32 33
  %1446 = getelementptr inbounds %struct.Reg, %struct.Reg* %1445, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %1446 to i64*
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1448 = getelementptr inbounds %struct.GPR, %struct.GPR* %1447, i32 0, i32 1
  %1449 = getelementptr inbounds %struct.Reg, %struct.Reg* %1448, i32 0, i32 0
  %RAX.i1029 = bitcast %union.anon* %1449 to i64*
  %1450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1451 = getelementptr inbounds %struct.GPR, %struct.GPR* %1450, i32 0, i32 15
  %1452 = getelementptr inbounds %struct.Reg, %struct.Reg* %1451, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %1452 to i64*
  %1453 = load i64, i64* %RBP.i1030
  %1454 = sub i64 %1453, 168
  %1455 = load i64, i64* %PC.i1028
  %1456 = add i64 %1455, 11
  store i64 %1456, i64* %PC.i1028
  %1457 = inttoptr i64 %1454 to i64*
  %1458 = load i64, i64* %1457
  %1459 = sext i64 %1458 to i128
  %1460 = and i128 %1459, -18446744073709551616
  %1461 = zext i64 %1458 to i128
  %1462 = or i128 %1460, %1461
  %1463 = mul i128 %1462, 616
  %1464 = trunc i128 %1463 to i64
  store i64 %1464, i64* %RAX.i1029, align 8
  %1465 = sext i64 %1464 to i128
  %1466 = icmp ne i128 %1465, %1463
  %1467 = zext i1 %1466 to i8
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1467, i8* %1468, align 1
  %1469 = trunc i128 %1463 to i32
  %1470 = and i32 %1469, 255
  %1471 = call i32 @llvm.ctpop.i32(i32 %1470)
  %1472 = trunc i32 %1471 to i8
  %1473 = and i8 %1472, 1
  %1474 = xor i8 %1473, 1
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1474, i8* %1475, align 1
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1476, align 1
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1477, align 1
  %1478 = lshr i64 %1464, 63
  %1479 = trunc i64 %1478 to i8
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1479, i8* %1480, align 1
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1467, i8* %1481, align 1
  store %struct.Memory* %loadMem_400a47, %struct.Memory** %MEMORY
  %loadMem_400a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1483 = getelementptr inbounds %struct.GPR, %struct.GPR* %1482, i32 0, i32 33
  %1484 = getelementptr inbounds %struct.Reg, %struct.Reg* %1483, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %1484 to i64*
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1486 = getelementptr inbounds %struct.GPR, %struct.GPR* %1485, i32 0, i32 1
  %1487 = getelementptr inbounds %struct.Reg, %struct.Reg* %1486, i32 0, i32 0
  %RAX.i1026 = bitcast %union.anon* %1487 to i64*
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1489 = getelementptr inbounds %struct.GPR, %struct.GPR* %1488, i32 0, i32 15
  %1490 = getelementptr inbounds %struct.Reg, %struct.Reg* %1489, i32 0, i32 0
  %RBP.i1027 = bitcast %union.anon* %1490 to i64*
  %1491 = load i64, i64* %RBP.i1027
  %1492 = sub i64 %1491, 88
  %1493 = load i64, i64* %RAX.i1026
  %1494 = load i64, i64* %PC.i1025
  %1495 = add i64 %1494, 4
  store i64 %1495, i64* %PC.i1025
  %1496 = inttoptr i64 %1492 to i64*
  store i64 %1493, i64* %1496
  store %struct.Memory* %loadMem_400a52, %struct.Memory** %MEMORY
  %loadMem_400a56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1498 = getelementptr inbounds %struct.GPR, %struct.GPR* %1497, i32 0, i32 33
  %1499 = getelementptr inbounds %struct.Reg, %struct.Reg* %1498, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %1499 to i64*
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1501 = getelementptr inbounds %struct.GPR, %struct.GPR* %1500, i32 0, i32 15
  %1502 = getelementptr inbounds %struct.Reg, %struct.Reg* %1501, i32 0, i32 0
  %RBP.i1024 = bitcast %union.anon* %1502 to i64*
  %1503 = load i64, i64* %RBP.i1024
  %1504 = sub i64 %1503, 96
  %1505 = load i64, i64* %PC.i1023
  %1506 = add i64 %1505, 8
  store i64 %1506, i64* %PC.i1023
  %1507 = inttoptr i64 %1504 to i64*
  store i64 0, i64* %1507
  store %struct.Memory* %loadMem_400a56, %struct.Memory** %MEMORY
  %loadMem_400a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1509 = getelementptr inbounds %struct.GPR, %struct.GPR* %1508, i32 0, i32 33
  %1510 = getelementptr inbounds %struct.Reg, %struct.Reg* %1509, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %1510 to i64*
  %1511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1512 = getelementptr inbounds %struct.GPR, %struct.GPR* %1511, i32 0, i32 1
  %1513 = getelementptr inbounds %struct.Reg, %struct.Reg* %1512, i32 0, i32 0
  %RAX.i1021 = bitcast %union.anon* %1513 to i64*
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1515 = getelementptr inbounds %struct.GPR, %struct.GPR* %1514, i32 0, i32 15
  %1516 = getelementptr inbounds %struct.Reg, %struct.Reg* %1515, i32 0, i32 0
  %RBP.i1022 = bitcast %union.anon* %1516 to i64*
  %1517 = load i64, i64* %RBP.i1022
  %1518 = sub i64 %1517, 168
  %1519 = load i64, i64* %PC.i1020
  %1520 = add i64 %1519, 8
  store i64 %1520, i64* %PC.i1020
  %1521 = inttoptr i64 %1518 to i64*
  %1522 = load i64, i64* %1521
  %1523 = sext i64 %1522 to i128
  %1524 = and i128 %1523, -18446744073709551616
  %1525 = zext i64 %1522 to i128
  %1526 = or i128 %1524, %1525
  %1527 = mul i128 %1526, 93
  %1528 = trunc i128 %1527 to i64
  store i64 %1528, i64* %RAX.i1021, align 8
  %1529 = sext i64 %1528 to i128
  %1530 = icmp ne i128 %1529, %1527
  %1531 = zext i1 %1530 to i8
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1531, i8* %1532, align 1
  %1533 = trunc i128 %1527 to i32
  %1534 = and i32 %1533, 255
  %1535 = call i32 @llvm.ctpop.i32(i32 %1534)
  %1536 = trunc i32 %1535 to i8
  %1537 = and i8 %1536, 1
  %1538 = xor i8 %1537, 1
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1538, i8* %1539, align 1
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1540, align 1
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1541, align 1
  %1542 = lshr i64 %1528, 63
  %1543 = trunc i64 %1542 to i8
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1543, i8* %1544, align 1
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1531, i8* %1545, align 1
  store %struct.Memory* %loadMem_400a5e, %struct.Memory** %MEMORY
  %loadMem_400a66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1547 = getelementptr inbounds %struct.GPR, %struct.GPR* %1546, i32 0, i32 33
  %1548 = getelementptr inbounds %struct.Reg, %struct.Reg* %1547, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %1548 to i64*
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1550 = getelementptr inbounds %struct.GPR, %struct.GPR* %1549, i32 0, i32 1
  %1551 = getelementptr inbounds %struct.Reg, %struct.Reg* %1550, i32 0, i32 0
  %RAX.i1018 = bitcast %union.anon* %1551 to i64*
  %1552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1553 = getelementptr inbounds %struct.GPR, %struct.GPR* %1552, i32 0, i32 15
  %1554 = getelementptr inbounds %struct.Reg, %struct.Reg* %1553, i32 0, i32 0
  %RBP.i1019 = bitcast %union.anon* %1554 to i64*
  %1555 = load i64, i64* %RBP.i1019
  %1556 = sub i64 %1555, 104
  %1557 = load i64, i64* %RAX.i1018
  %1558 = load i64, i64* %PC.i1017
  %1559 = add i64 %1558, 4
  store i64 %1559, i64* %PC.i1017
  %1560 = inttoptr i64 %1556 to i64*
  store i64 %1557, i64* %1560
  store %struct.Memory* %loadMem_400a66, %struct.Memory** %MEMORY
  %loadMem_400a6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1562 = getelementptr inbounds %struct.GPR, %struct.GPR* %1561, i32 0, i32 33
  %1563 = getelementptr inbounds %struct.Reg, %struct.Reg* %1562, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %1563 to i64*
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1565 = getelementptr inbounds %struct.GPR, %struct.GPR* %1564, i32 0, i32 15
  %1566 = getelementptr inbounds %struct.Reg, %struct.Reg* %1565, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %1566 to i64*
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1568 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1567, i64 0, i64 1
  %XMM1.i1016 = bitcast %union.VectorReg* %1568 to %union.vec128_t*
  %1569 = load i64, i64* %RBP.i1015
  %1570 = sub i64 %1569, 112
  %1571 = bitcast %union.vec128_t* %XMM1.i1016 to i8*
  %1572 = load i64, i64* %PC.i1014
  %1573 = add i64 %1572, 5
  store i64 %1573, i64* %PC.i1014
  %1574 = bitcast i8* %1571 to double*
  %1575 = load double, double* %1574, align 1
  %1576 = inttoptr i64 %1570 to double*
  store double %1575, double* %1576
  store %struct.Memory* %loadMem_400a6a, %struct.Memory** %MEMORY
  %loadMem_400a6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1578 = getelementptr inbounds %struct.GPR, %struct.GPR* %1577, i32 0, i32 33
  %1579 = getelementptr inbounds %struct.Reg, %struct.Reg* %1578, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %1579 to i64*
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1581 = getelementptr inbounds %struct.GPR, %struct.GPR* %1580, i32 0, i32 15
  %1582 = getelementptr inbounds %struct.Reg, %struct.Reg* %1581, i32 0, i32 0
  %RBP.i1012 = bitcast %union.anon* %1582 to i64*
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1584 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1583, i64 0, i64 0
  %XMM0.i1013 = bitcast %union.VectorReg* %1584 to %union.vec128_t*
  %1585 = load i64, i64* %RBP.i1012
  %1586 = sub i64 %1585, 120
  %1587 = bitcast %union.vec128_t* %XMM0.i1013 to i8*
  %1588 = load i64, i64* %PC.i1011
  %1589 = add i64 %1588, 5
  store i64 %1589, i64* %PC.i1011
  %1590 = bitcast i8* %1587 to double*
  %1591 = load double, double* %1590, align 1
  %1592 = inttoptr i64 %1586 to double*
  store double %1591, double* %1592
  store %struct.Memory* %loadMem_400a6f, %struct.Memory** %MEMORY
  %loadMem_400a74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1594 = getelementptr inbounds %struct.GPR, %struct.GPR* %1593, i32 0, i32 33
  %1595 = getelementptr inbounds %struct.Reg, %struct.Reg* %1594, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %1595 to i64*
  %1596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1597 = getelementptr inbounds %struct.GPR, %struct.GPR* %1596, i32 0, i32 15
  %1598 = getelementptr inbounds %struct.Reg, %struct.Reg* %1597, i32 0, i32 0
  %RBP.i1009 = bitcast %union.anon* %1598 to i64*
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1600 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1599, i64 0, i64 0
  %XMM0.i1010 = bitcast %union.VectorReg* %1600 to %union.vec128_t*
  %1601 = load i64, i64* %RBP.i1009
  %1602 = sub i64 %1601, 128
  %1603 = bitcast %union.vec128_t* %XMM0.i1010 to i8*
  %1604 = load i64, i64* %PC.i1008
  %1605 = add i64 %1604, 5
  store i64 %1605, i64* %PC.i1008
  %1606 = bitcast i8* %1603 to double*
  %1607 = load double, double* %1606, align 1
  %1608 = inttoptr i64 %1602 to double*
  store double %1607, double* %1608
  store %struct.Memory* %loadMem_400a74, %struct.Memory** %MEMORY
  %loadMem_400a79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1610 = getelementptr inbounds %struct.GPR, %struct.GPR* %1609, i32 0, i32 33
  %1611 = getelementptr inbounds %struct.Reg, %struct.Reg* %1610, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %1611 to i64*
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1613 = getelementptr inbounds %struct.GPR, %struct.GPR* %1612, i32 0, i32 15
  %1614 = getelementptr inbounds %struct.Reg, %struct.Reg* %1613, i32 0, i32 0
  %RBP.i1006 = bitcast %union.anon* %1614 to i64*
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1616 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1615, i64 0, i64 0
  %XMM0.i1007 = bitcast %union.VectorReg* %1616 to %union.vec128_t*
  %1617 = load i64, i64* %RBP.i1006
  %1618 = sub i64 %1617, 136
  %1619 = bitcast %union.vec128_t* %XMM0.i1007 to i8*
  %1620 = load i64, i64* %PC.i1005
  %1621 = add i64 %1620, 8
  store i64 %1621, i64* %PC.i1005
  %1622 = bitcast i8* %1619 to double*
  %1623 = load double, double* %1622, align 1
  %1624 = inttoptr i64 %1618 to double*
  store double %1623, double* %1624
  store %struct.Memory* %loadMem_400a79, %struct.Memory** %MEMORY
  %loadMem_400a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1626 = getelementptr inbounds %struct.GPR, %struct.GPR* %1625, i32 0, i32 33
  %1627 = getelementptr inbounds %struct.Reg, %struct.Reg* %1626, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %1627 to i64*
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1629 = getelementptr inbounds %struct.GPR, %struct.GPR* %1628, i32 0, i32 15
  %1630 = getelementptr inbounds %struct.Reg, %struct.Reg* %1629, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %1630 to i64*
  %1631 = load i64, i64* %RBP.i1004
  %1632 = sub i64 %1631, 24
  %1633 = load i64, i64* %PC.i1003
  %1634 = add i64 %1633, 8
  store i64 %1634, i64* %PC.i1003
  %1635 = inttoptr i64 %1632 to i64*
  store i64 1, i64* %1635
  store %struct.Memory* %loadMem_400a81, %struct.Memory** %MEMORY
  br label %block_.L_400a89

block_.L_400a89:                                  ; preds = %block_400a97, %block_.L_4009db
  %loadMem_400a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1637 = getelementptr inbounds %struct.GPR, %struct.GPR* %1636, i32 0, i32 33
  %1638 = getelementptr inbounds %struct.Reg, %struct.Reg* %1637, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %1638 to i64*
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1640 = getelementptr inbounds %struct.GPR, %struct.GPR* %1639, i32 0, i32 1
  %1641 = getelementptr inbounds %struct.Reg, %struct.Reg* %1640, i32 0, i32 0
  %RAX.i1001 = bitcast %union.anon* %1641 to i64*
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1643 = getelementptr inbounds %struct.GPR, %struct.GPR* %1642, i32 0, i32 15
  %1644 = getelementptr inbounds %struct.Reg, %struct.Reg* %1643, i32 0, i32 0
  %RBP.i1002 = bitcast %union.anon* %1644 to i64*
  %1645 = load i64, i64* %RBP.i1002
  %1646 = sub i64 %1645, 24
  %1647 = load i64, i64* %PC.i1000
  %1648 = add i64 %1647, 4
  store i64 %1648, i64* %PC.i1000
  %1649 = inttoptr i64 %1646 to i64*
  %1650 = load i64, i64* %1649
  store i64 %1650, i64* %RAX.i1001, align 8
  store %struct.Memory* %loadMem_400a89, %struct.Memory** %MEMORY
  %loadMem_400a8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1652 = getelementptr inbounds %struct.GPR, %struct.GPR* %1651, i32 0, i32 33
  %1653 = getelementptr inbounds %struct.Reg, %struct.Reg* %1652, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %1653 to i64*
  %1654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1655 = getelementptr inbounds %struct.GPR, %struct.GPR* %1654, i32 0, i32 1
  %1656 = getelementptr inbounds %struct.Reg, %struct.Reg* %1655, i32 0, i32 0
  %RAX.i998 = bitcast %union.anon* %1656 to i64*
  %1657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1658 = getelementptr inbounds %struct.GPR, %struct.GPR* %1657, i32 0, i32 15
  %1659 = getelementptr inbounds %struct.Reg, %struct.Reg* %1658, i32 0, i32 0
  %RBP.i999 = bitcast %union.anon* %1659 to i64*
  %1660 = load i64, i64* %RAX.i998
  %1661 = load i64, i64* %RBP.i999
  %1662 = sub i64 %1661, 32
  %1663 = load i64, i64* %PC.i997
  %1664 = add i64 %1663, 4
  store i64 %1664, i64* %PC.i997
  %1665 = inttoptr i64 %1662 to i64*
  %1666 = load i64, i64* %1665
  %1667 = sub i64 %1660, %1666
  %1668 = icmp ugt i64 %1666, %1660
  %1669 = zext i1 %1668 to i8
  %1670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1669, i8* %1670, align 1
  %1671 = trunc i64 %1667 to i32
  %1672 = and i32 %1671, 255
  %1673 = call i32 @llvm.ctpop.i32(i32 %1672)
  %1674 = trunc i32 %1673 to i8
  %1675 = and i8 %1674, 1
  %1676 = xor i8 %1675, 1
  %1677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1676, i8* %1677, align 1
  %1678 = xor i64 %1666, %1660
  %1679 = xor i64 %1678, %1667
  %1680 = lshr i64 %1679, 4
  %1681 = trunc i64 %1680 to i8
  %1682 = and i8 %1681, 1
  %1683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1682, i8* %1683, align 1
  %1684 = icmp eq i64 %1667, 0
  %1685 = zext i1 %1684 to i8
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1685, i8* %1686, align 1
  %1687 = lshr i64 %1667, 63
  %1688 = trunc i64 %1687 to i8
  %1689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1688, i8* %1689, align 1
  %1690 = lshr i64 %1660, 63
  %1691 = lshr i64 %1666, 63
  %1692 = xor i64 %1691, %1690
  %1693 = xor i64 %1687, %1690
  %1694 = add i64 %1693, %1692
  %1695 = icmp eq i64 %1694, 2
  %1696 = zext i1 %1695 to i8
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1696, i8* %1697, align 1
  store %struct.Memory* %loadMem_400a8d, %struct.Memory** %MEMORY
  %loadMem_400a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1699 = getelementptr inbounds %struct.GPR, %struct.GPR* %1698, i32 0, i32 33
  %1700 = getelementptr inbounds %struct.Reg, %struct.Reg* %1699, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %1700 to i64*
  %1701 = load i64, i64* %PC.i996
  %1702 = add i64 %1701, 197
  %1703 = load i64, i64* %PC.i996
  %1704 = add i64 %1703, 6
  %1705 = load i64, i64* %PC.i996
  %1706 = add i64 %1705, 6
  store i64 %1706, i64* %PC.i996
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1708 = load i8, i8* %1707, align 1
  %1709 = icmp eq i8 %1708, 0
  %1710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1711 = load i8, i8* %1710, align 1
  %1712 = icmp ne i8 %1711, 0
  %1713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1714 = load i8, i8* %1713, align 1
  %1715 = icmp ne i8 %1714, 0
  %1716 = xor i1 %1712, %1715
  %1717 = xor i1 %1716, true
  %1718 = and i1 %1709, %1717
  %1719 = zext i1 %1718 to i8
  store i8 %1719, i8* %BRANCH_TAKEN, align 1
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1721 = select i1 %1718, i64 %1702, i64 %1704
  store i64 %1721, i64* %1720, align 8
  store %struct.Memory* %loadMem_400a91, %struct.Memory** %MEMORY
  %loadBr_400a91 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400a91 = icmp eq i8 %loadBr_400a91, 1
  br i1 %cmpBr_400a91, label %block_.L_400b56, label %block_400a97

block_400a97:                                     ; preds = %block_.L_400a89
  %loadMem_400a97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1723 = getelementptr inbounds %struct.GPR, %struct.GPR* %1722, i32 0, i32 33
  %1724 = getelementptr inbounds %struct.Reg, %struct.Reg* %1723, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %1724 to i64*
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1726 = getelementptr inbounds %struct.GPR, %struct.GPR* %1725, i32 0, i32 1
  %1727 = getelementptr inbounds %struct.Reg, %struct.Reg* %1726, i32 0, i32 0
  %RAX.i995 = bitcast %union.anon* %1727 to i64*
  %1728 = load i64, i64* %PC.i994
  %1729 = add i64 %1728, 10
  store i64 %1729, i64* %PC.i994
  store i64 -9223372036854775808, i64* %RAX.i995, align 8
  store %struct.Memory* %loadMem_400a97, %struct.Memory** %MEMORY
  %loadMem_400aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 33
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %1732 to i64*
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1734 = getelementptr inbounds %struct.GPR, %struct.GPR* %1733, i32 0, i32 15
  %1735 = getelementptr inbounds %struct.Reg, %struct.Reg* %1734, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %1735 to i64*
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1737 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1736, i64 0, i64 0
  %YMM0.i993 = bitcast %union.VectorReg* %1737 to %"class.std::bitset"*
  %1738 = bitcast %"class.std::bitset"* %YMM0.i993 to i8*
  %1739 = load i64, i64* %RBP.i992
  %1740 = sub i64 %1739, 112
  %1741 = load i64, i64* %PC.i991
  %1742 = add i64 %1741, 5
  store i64 %1742, i64* %PC.i991
  %1743 = inttoptr i64 %1740 to double*
  %1744 = load double, double* %1743
  %1745 = bitcast i8* %1738 to double*
  store double %1744, double* %1745, align 1
  %1746 = getelementptr inbounds i8, i8* %1738, i64 8
  %1747 = bitcast i8* %1746 to double*
  store double 0.000000e+00, double* %1747, align 1
  store %struct.Memory* %loadMem_400aa1, %struct.Memory** %MEMORY
  %loadMem_400aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1749 = getelementptr inbounds %struct.GPR, %struct.GPR* %1748, i32 0, i32 33
  %1750 = getelementptr inbounds %struct.Reg, %struct.Reg* %1749, i32 0, i32 0
  %PC.i988 = bitcast %union.anon* %1750 to i64*
  %1751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1752 = getelementptr inbounds %struct.GPR, %struct.GPR* %1751, i32 0, i32 15
  %1753 = getelementptr inbounds %struct.Reg, %struct.Reg* %1752, i32 0, i32 0
  %RBP.i989 = bitcast %union.anon* %1753 to i64*
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1755 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1754, i64 0, i64 0
  %YMM0.i990 = bitcast %union.VectorReg* %1755 to %"class.std::bitset"*
  %1756 = bitcast %"class.std::bitset"* %YMM0.i990 to i8*
  %1757 = bitcast %"class.std::bitset"* %YMM0.i990 to i8*
  %1758 = load i64, i64* %RBP.i989
  %1759 = sub i64 %1758, 120
  %1760 = load i64, i64* %PC.i988
  %1761 = add i64 %1760, 5
  store i64 %1761, i64* %PC.i988
  %1762 = bitcast i8* %1757 to double*
  %1763 = load double, double* %1762, align 1
  %1764 = getelementptr inbounds i8, i8* %1757, i64 8
  %1765 = bitcast i8* %1764 to i64*
  %1766 = load i64, i64* %1765, align 1
  %1767 = inttoptr i64 %1759 to double*
  %1768 = load double, double* %1767
  %1769 = fadd double %1763, %1768
  %1770 = bitcast i8* %1756 to double*
  store double %1769, double* %1770, align 1
  %1771 = getelementptr inbounds i8, i8* %1756, i64 8
  %1772 = bitcast i8* %1771 to i64*
  store i64 %1766, i64* %1772, align 1
  store %struct.Memory* %loadMem_400aa6, %struct.Memory** %MEMORY
  %loadMem_400aab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1774 = getelementptr inbounds %struct.GPR, %struct.GPR* %1773, i32 0, i32 33
  %1775 = getelementptr inbounds %struct.Reg, %struct.Reg* %1774, i32 0, i32 0
  %PC.i985 = bitcast %union.anon* %1775 to i64*
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1777 = getelementptr inbounds %struct.GPR, %struct.GPR* %1776, i32 0, i32 15
  %1778 = getelementptr inbounds %struct.Reg, %struct.Reg* %1777, i32 0, i32 0
  %RBP.i986 = bitcast %union.anon* %1778 to i64*
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1780 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1779, i64 0, i64 0
  %YMM0.i987 = bitcast %union.VectorReg* %1780 to %"class.std::bitset"*
  %1781 = bitcast %"class.std::bitset"* %YMM0.i987 to i8*
  %1782 = bitcast %"class.std::bitset"* %YMM0.i987 to i8*
  %1783 = load i64, i64* %RBP.i986
  %1784 = sub i64 %1783, 128
  %1785 = load i64, i64* %PC.i985
  %1786 = add i64 %1785, 5
  store i64 %1786, i64* %PC.i985
  %1787 = bitcast i8* %1782 to double*
  %1788 = load double, double* %1787, align 1
  %1789 = getelementptr inbounds i8, i8* %1782, i64 8
  %1790 = bitcast i8* %1789 to i64*
  %1791 = load i64, i64* %1790, align 1
  %1792 = inttoptr i64 %1784 to double*
  %1793 = load double, double* %1792
  %1794 = fadd double %1788, %1793
  %1795 = bitcast i8* %1781 to double*
  store double %1794, double* %1795, align 1
  %1796 = getelementptr inbounds i8, i8* %1781, i64 8
  %1797 = bitcast i8* %1796 to i64*
  store i64 %1791, i64* %1797, align 1
  store %struct.Memory* %loadMem_400aab, %struct.Memory** %MEMORY
  %loadMem_400ab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1799 = getelementptr inbounds %struct.GPR, %struct.GPR* %1798, i32 0, i32 33
  %1800 = getelementptr inbounds %struct.Reg, %struct.Reg* %1799, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %1800 to i64*
  %1801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1802 = getelementptr inbounds %struct.GPR, %struct.GPR* %1801, i32 0, i32 15
  %1803 = getelementptr inbounds %struct.Reg, %struct.Reg* %1802, i32 0, i32 0
  %RBP.i983 = bitcast %union.anon* %1803 to i64*
  %1804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1805 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1804, i64 0, i64 0
  %YMM0.i984 = bitcast %union.VectorReg* %1805 to %"class.std::bitset"*
  %1806 = bitcast %"class.std::bitset"* %YMM0.i984 to i8*
  %1807 = bitcast %"class.std::bitset"* %YMM0.i984 to i8*
  %1808 = load i64, i64* %RBP.i983
  %1809 = sub i64 %1808, 136
  %1810 = load i64, i64* %PC.i982
  %1811 = add i64 %1810, 8
  store i64 %1811, i64* %PC.i982
  %1812 = bitcast i8* %1807 to double*
  %1813 = load double, double* %1812, align 1
  %1814 = getelementptr inbounds i8, i8* %1807, i64 8
  %1815 = bitcast i8* %1814 to i64*
  %1816 = load i64, i64* %1815, align 1
  %1817 = inttoptr i64 %1809 to double*
  %1818 = load double, double* %1817
  %1819 = fsub double %1813, %1818
  %1820 = bitcast i8* %1806 to double*
  store double %1819, double* %1820, align 1
  %1821 = getelementptr inbounds i8, i8* %1806, i64 8
  %1822 = bitcast i8* %1821 to i64*
  store i64 %1816, i64* %1822, align 1
  store %struct.Memory* %loadMem_400ab0, %struct.Memory** %MEMORY
  %loadMem_400ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1824 = getelementptr inbounds %struct.GPR, %struct.GPR* %1823, i32 0, i32 33
  %1825 = getelementptr inbounds %struct.Reg, %struct.Reg* %1824, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %1825 to i64*
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1827 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1826, i64 0, i64 0
  %YMM0.i981 = bitcast %union.VectorReg* %1827 to %"class.std::bitset"*
  %1828 = bitcast %"class.std::bitset"* %YMM0.i981 to i8*
  %1829 = bitcast %"class.std::bitset"* %YMM0.i981 to i8*
  %1830 = load i64, i64* %PC.i980
  %1831 = add i64 %1830, 9
  store i64 %1831, i64* %PC.i980
  %1832 = bitcast i8* %1829 to double*
  %1833 = load double, double* %1832, align 1
  %1834 = getelementptr inbounds i8, i8* %1829, i64 8
  %1835 = bitcast i8* %1834 to i64*
  %1836 = load i64, i64* %1835, align 1
  %1837 = load double, double* inttoptr (i64 6299800 to double*)
  %1838 = fmul double %1833, %1837
  %1839 = bitcast i8* %1828 to double*
  store double %1838, double* %1839, align 1
  %1840 = getelementptr inbounds i8, i8* %1828, i64 8
  %1841 = bitcast i8* %1840 to i64*
  store i64 %1836, i64* %1841, align 1
  store %struct.Memory* %loadMem_400ab8, %struct.Memory** %MEMORY
  %loadMem_400ac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1843 = getelementptr inbounds %struct.GPR, %struct.GPR* %1842, i32 0, i32 33
  %1844 = getelementptr inbounds %struct.Reg, %struct.Reg* %1843, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %1844 to i64*
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1846 = getelementptr inbounds %struct.GPR, %struct.GPR* %1845, i32 0, i32 15
  %1847 = getelementptr inbounds %struct.Reg, %struct.Reg* %1846, i32 0, i32 0
  %RBP.i978 = bitcast %union.anon* %1847 to i64*
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1849 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1848, i64 0, i64 0
  %XMM0.i979 = bitcast %union.VectorReg* %1849 to %union.vec128_t*
  %1850 = load i64, i64* %RBP.i978
  %1851 = sub i64 %1850, 112
  %1852 = bitcast %union.vec128_t* %XMM0.i979 to i8*
  %1853 = load i64, i64* %PC.i977
  %1854 = add i64 %1853, 5
  store i64 %1854, i64* %PC.i977
  %1855 = bitcast i8* %1852 to double*
  %1856 = load double, double* %1855, align 1
  %1857 = inttoptr i64 %1851 to double*
  store double %1856, double* %1857
  store %struct.Memory* %loadMem_400ac1, %struct.Memory** %MEMORY
  %loadMem_400ac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1859 = getelementptr inbounds %struct.GPR, %struct.GPR* %1858, i32 0, i32 33
  %1860 = getelementptr inbounds %struct.Reg, %struct.Reg* %1859, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %1860 to i64*
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1862 = getelementptr inbounds %struct.GPR, %struct.GPR* %1861, i32 0, i32 15
  %1863 = getelementptr inbounds %struct.Reg, %struct.Reg* %1862, i32 0, i32 0
  %RBP.i975 = bitcast %union.anon* %1863 to i64*
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1865 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1864, i64 0, i64 0
  %YMM0.i976 = bitcast %union.VectorReg* %1865 to %"class.std::bitset"*
  %1866 = bitcast %"class.std::bitset"* %YMM0.i976 to i8*
  %1867 = load i64, i64* %RBP.i975
  %1868 = sub i64 %1867, 112
  %1869 = load i64, i64* %PC.i974
  %1870 = add i64 %1869, 5
  store i64 %1870, i64* %PC.i974
  %1871 = inttoptr i64 %1868 to double*
  %1872 = load double, double* %1871
  %1873 = bitcast i8* %1866 to double*
  store double %1872, double* %1873, align 1
  %1874 = getelementptr inbounds i8, i8* %1866, i64 8
  %1875 = bitcast i8* %1874 to double*
  store double 0.000000e+00, double* %1875, align 1
  store %struct.Memory* %loadMem_400ac6, %struct.Memory** %MEMORY
  %loadMem_400acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1877 = getelementptr inbounds %struct.GPR, %struct.GPR* %1876, i32 0, i32 33
  %1878 = getelementptr inbounds %struct.Reg, %struct.Reg* %1877, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %1878 to i64*
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1880 = getelementptr inbounds %struct.GPR, %struct.GPR* %1879, i32 0, i32 15
  %1881 = getelementptr inbounds %struct.Reg, %struct.Reg* %1880, i32 0, i32 0
  %RBP.i972 = bitcast %union.anon* %1881 to i64*
  %1882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1883 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1882, i64 0, i64 0
  %YMM0.i973 = bitcast %union.VectorReg* %1883 to %"class.std::bitset"*
  %1884 = bitcast %"class.std::bitset"* %YMM0.i973 to i8*
  %1885 = bitcast %"class.std::bitset"* %YMM0.i973 to i8*
  %1886 = load i64, i64* %RBP.i972
  %1887 = sub i64 %1886, 120
  %1888 = load i64, i64* %PC.i971
  %1889 = add i64 %1888, 5
  store i64 %1889, i64* %PC.i971
  %1890 = bitcast i8* %1885 to double*
  %1891 = load double, double* %1890, align 1
  %1892 = getelementptr inbounds i8, i8* %1885, i64 8
  %1893 = bitcast i8* %1892 to i64*
  %1894 = load i64, i64* %1893, align 1
  %1895 = inttoptr i64 %1887 to double*
  %1896 = load double, double* %1895
  %1897 = fadd double %1891, %1896
  %1898 = bitcast i8* %1884 to double*
  store double %1897, double* %1898, align 1
  %1899 = getelementptr inbounds i8, i8* %1884, i64 8
  %1900 = bitcast i8* %1899 to i64*
  store i64 %1894, i64* %1900, align 1
  store %struct.Memory* %loadMem_400acb, %struct.Memory** %MEMORY
  %loadMem_400ad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1902 = getelementptr inbounds %struct.GPR, %struct.GPR* %1901, i32 0, i32 33
  %1903 = getelementptr inbounds %struct.Reg, %struct.Reg* %1902, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %1903 to i64*
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1905 = getelementptr inbounds %struct.GPR, %struct.GPR* %1904, i32 0, i32 15
  %1906 = getelementptr inbounds %struct.Reg, %struct.Reg* %1905, i32 0, i32 0
  %RBP.i969 = bitcast %union.anon* %1906 to i64*
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1908 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1907, i64 0, i64 0
  %YMM0.i970 = bitcast %union.VectorReg* %1908 to %"class.std::bitset"*
  %1909 = bitcast %"class.std::bitset"* %YMM0.i970 to i8*
  %1910 = bitcast %"class.std::bitset"* %YMM0.i970 to i8*
  %1911 = load i64, i64* %RBP.i969
  %1912 = sub i64 %1911, 128
  %1913 = load i64, i64* %PC.i968
  %1914 = add i64 %1913, 5
  store i64 %1914, i64* %PC.i968
  %1915 = bitcast i8* %1910 to double*
  %1916 = load double, double* %1915, align 1
  %1917 = getelementptr inbounds i8, i8* %1910, i64 8
  %1918 = bitcast i8* %1917 to i64*
  %1919 = load i64, i64* %1918, align 1
  %1920 = inttoptr i64 %1912 to double*
  %1921 = load double, double* %1920
  %1922 = fsub double %1916, %1921
  %1923 = bitcast i8* %1909 to double*
  store double %1922, double* %1923, align 1
  %1924 = getelementptr inbounds i8, i8* %1909, i64 8
  %1925 = bitcast i8* %1924 to i64*
  store i64 %1919, i64* %1925, align 1
  store %struct.Memory* %loadMem_400ad0, %struct.Memory** %MEMORY
  %loadMem_400ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1927 = getelementptr inbounds %struct.GPR, %struct.GPR* %1926, i32 0, i32 33
  %1928 = getelementptr inbounds %struct.Reg, %struct.Reg* %1927, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %1928 to i64*
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1930 = getelementptr inbounds %struct.GPR, %struct.GPR* %1929, i32 0, i32 15
  %1931 = getelementptr inbounds %struct.Reg, %struct.Reg* %1930, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %1931 to i64*
  %1932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1933 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1932, i64 0, i64 0
  %YMM0.i967 = bitcast %union.VectorReg* %1933 to %"class.std::bitset"*
  %1934 = bitcast %"class.std::bitset"* %YMM0.i967 to i8*
  %1935 = bitcast %"class.std::bitset"* %YMM0.i967 to i8*
  %1936 = load i64, i64* %RBP.i966
  %1937 = sub i64 %1936, 136
  %1938 = load i64, i64* %PC.i965
  %1939 = add i64 %1938, 8
  store i64 %1939, i64* %PC.i965
  %1940 = bitcast i8* %1935 to double*
  %1941 = load double, double* %1940, align 1
  %1942 = getelementptr inbounds i8, i8* %1935, i64 8
  %1943 = bitcast i8* %1942 to i64*
  %1944 = load i64, i64* %1943, align 1
  %1945 = inttoptr i64 %1937 to double*
  %1946 = load double, double* %1945
  %1947 = fadd double %1941, %1946
  %1948 = bitcast i8* %1934 to double*
  store double %1947, double* %1948, align 1
  %1949 = getelementptr inbounds i8, i8* %1934, i64 8
  %1950 = bitcast i8* %1949 to i64*
  store i64 %1944, i64* %1950, align 1
  store %struct.Memory* %loadMem_400ad5, %struct.Memory** %MEMORY
  %loadMem_400add = load %struct.Memory*, %struct.Memory** %MEMORY
  %1951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1952 = getelementptr inbounds %struct.GPR, %struct.GPR* %1951, i32 0, i32 33
  %1953 = getelementptr inbounds %struct.Reg, %struct.Reg* %1952, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %1953 to i64*
  %1954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1955 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1954, i64 0, i64 0
  %YMM0.i964 = bitcast %union.VectorReg* %1955 to %"class.std::bitset"*
  %1956 = bitcast %"class.std::bitset"* %YMM0.i964 to i8*
  %1957 = bitcast %"class.std::bitset"* %YMM0.i964 to i8*
  %1958 = load i64, i64* %PC.i963
  %1959 = add i64 %1958, 9
  store i64 %1959, i64* %PC.i963
  %1960 = bitcast i8* %1957 to double*
  %1961 = load double, double* %1960, align 1
  %1962 = getelementptr inbounds i8, i8* %1957, i64 8
  %1963 = bitcast i8* %1962 to i64*
  %1964 = load i64, i64* %1963, align 1
  %1965 = load double, double* inttoptr (i64 6299800 to double*)
  %1966 = fmul double %1961, %1965
  %1967 = bitcast i8* %1956 to double*
  store double %1966, double* %1967, align 1
  %1968 = getelementptr inbounds i8, i8* %1956, i64 8
  %1969 = bitcast i8* %1968 to i64*
  store i64 %1964, i64* %1969, align 1
  store %struct.Memory* %loadMem_400add, %struct.Memory** %MEMORY
  %loadMem_400ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1971 = getelementptr inbounds %struct.GPR, %struct.GPR* %1970, i32 0, i32 33
  %1972 = getelementptr inbounds %struct.Reg, %struct.Reg* %1971, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %1972 to i64*
  %1973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1974 = getelementptr inbounds %struct.GPR, %struct.GPR* %1973, i32 0, i32 15
  %1975 = getelementptr inbounds %struct.Reg, %struct.Reg* %1974, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %1975 to i64*
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1977 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1976, i64 0, i64 0
  %XMM0.i962 = bitcast %union.VectorReg* %1977 to %union.vec128_t*
  %1978 = load i64, i64* %RBP.i961
  %1979 = sub i64 %1978, 120
  %1980 = bitcast %union.vec128_t* %XMM0.i962 to i8*
  %1981 = load i64, i64* %PC.i960
  %1982 = add i64 %1981, 5
  store i64 %1982, i64* %PC.i960
  %1983 = bitcast i8* %1980 to double*
  %1984 = load double, double* %1983, align 1
  %1985 = inttoptr i64 %1979 to double*
  store double %1984, double* %1985
  store %struct.Memory* %loadMem_400ae6, %struct.Memory** %MEMORY
  %loadMem_400aeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1987 = getelementptr inbounds %struct.GPR, %struct.GPR* %1986, i32 0, i32 33
  %1988 = getelementptr inbounds %struct.Reg, %struct.Reg* %1987, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %1988 to i64*
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1990 = getelementptr inbounds %struct.GPR, %struct.GPR* %1989, i32 0, i32 15
  %1991 = getelementptr inbounds %struct.Reg, %struct.Reg* %1990, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %1991 to i64*
  %1992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1993 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1992, i64 0, i64 0
  %YMM0.i959 = bitcast %union.VectorReg* %1993 to %"class.std::bitset"*
  %1994 = bitcast %"class.std::bitset"* %YMM0.i959 to i8*
  %1995 = load i64, i64* %RBP.i958
  %1996 = sub i64 %1995, 112
  %1997 = load i64, i64* %PC.i957
  %1998 = add i64 %1997, 5
  store i64 %1998, i64* %PC.i957
  %1999 = inttoptr i64 %1996 to double*
  %2000 = load double, double* %1999
  %2001 = bitcast i8* %1994 to double*
  store double %2000, double* %2001, align 1
  %2002 = getelementptr inbounds i8, i8* %1994, i64 8
  %2003 = bitcast i8* %2002 to double*
  store double 0.000000e+00, double* %2003, align 1
  store %struct.Memory* %loadMem_400aeb, %struct.Memory** %MEMORY
  %loadMem_400af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2005 = getelementptr inbounds %struct.GPR, %struct.GPR* %2004, i32 0, i32 33
  %2006 = getelementptr inbounds %struct.Reg, %struct.Reg* %2005, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %2006 to i64*
  %2007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2008 = getelementptr inbounds %struct.GPR, %struct.GPR* %2007, i32 0, i32 15
  %2009 = getelementptr inbounds %struct.Reg, %struct.Reg* %2008, i32 0, i32 0
  %RBP.i955 = bitcast %union.anon* %2009 to i64*
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2011 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2010, i64 0, i64 0
  %YMM0.i956 = bitcast %union.VectorReg* %2011 to %"class.std::bitset"*
  %2012 = bitcast %"class.std::bitset"* %YMM0.i956 to i8*
  %2013 = bitcast %"class.std::bitset"* %YMM0.i956 to i8*
  %2014 = load i64, i64* %RBP.i955
  %2015 = sub i64 %2014, 120
  %2016 = load i64, i64* %PC.i954
  %2017 = add i64 %2016, 5
  store i64 %2017, i64* %PC.i954
  %2018 = bitcast i8* %2013 to double*
  %2019 = load double, double* %2018, align 1
  %2020 = getelementptr inbounds i8, i8* %2013, i64 8
  %2021 = bitcast i8* %2020 to i64*
  %2022 = load i64, i64* %2021, align 1
  %2023 = inttoptr i64 %2015 to double*
  %2024 = load double, double* %2023
  %2025 = fsub double %2019, %2024
  %2026 = bitcast i8* %2012 to double*
  store double %2025, double* %2026, align 1
  %2027 = getelementptr inbounds i8, i8* %2012, i64 8
  %2028 = bitcast i8* %2027 to i64*
  store i64 %2022, i64* %2028, align 1
  store %struct.Memory* %loadMem_400af0, %struct.Memory** %MEMORY
  %loadMem_400af5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2030 = getelementptr inbounds %struct.GPR, %struct.GPR* %2029, i32 0, i32 33
  %2031 = getelementptr inbounds %struct.Reg, %struct.Reg* %2030, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %2031 to i64*
  %2032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2033 = getelementptr inbounds %struct.GPR, %struct.GPR* %2032, i32 0, i32 15
  %2034 = getelementptr inbounds %struct.Reg, %struct.Reg* %2033, i32 0, i32 0
  %RBP.i952 = bitcast %union.anon* %2034 to i64*
  %2035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2036 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2035, i64 0, i64 0
  %YMM0.i953 = bitcast %union.VectorReg* %2036 to %"class.std::bitset"*
  %2037 = bitcast %"class.std::bitset"* %YMM0.i953 to i8*
  %2038 = bitcast %"class.std::bitset"* %YMM0.i953 to i8*
  %2039 = load i64, i64* %RBP.i952
  %2040 = sub i64 %2039, 128
  %2041 = load i64, i64* %PC.i951
  %2042 = add i64 %2041, 5
  store i64 %2042, i64* %PC.i951
  %2043 = bitcast i8* %2038 to double*
  %2044 = load double, double* %2043, align 1
  %2045 = getelementptr inbounds i8, i8* %2038, i64 8
  %2046 = bitcast i8* %2045 to i64*
  %2047 = load i64, i64* %2046, align 1
  %2048 = inttoptr i64 %2040 to double*
  %2049 = load double, double* %2048
  %2050 = fadd double %2044, %2049
  %2051 = bitcast i8* %2037 to double*
  store double %2050, double* %2051, align 1
  %2052 = getelementptr inbounds i8, i8* %2037, i64 8
  %2053 = bitcast i8* %2052 to i64*
  store i64 %2047, i64* %2053, align 1
  store %struct.Memory* %loadMem_400af5, %struct.Memory** %MEMORY
  %loadMem_400afa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2055 = getelementptr inbounds %struct.GPR, %struct.GPR* %2054, i32 0, i32 33
  %2056 = getelementptr inbounds %struct.Reg, %struct.Reg* %2055, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %2056 to i64*
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2058 = getelementptr inbounds %struct.GPR, %struct.GPR* %2057, i32 0, i32 15
  %2059 = getelementptr inbounds %struct.Reg, %struct.Reg* %2058, i32 0, i32 0
  %RBP.i949 = bitcast %union.anon* %2059 to i64*
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2061 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2060, i64 0, i64 0
  %YMM0.i950 = bitcast %union.VectorReg* %2061 to %"class.std::bitset"*
  %2062 = bitcast %"class.std::bitset"* %YMM0.i950 to i8*
  %2063 = bitcast %"class.std::bitset"* %YMM0.i950 to i8*
  %2064 = load i64, i64* %RBP.i949
  %2065 = sub i64 %2064, 136
  %2066 = load i64, i64* %PC.i948
  %2067 = add i64 %2066, 8
  store i64 %2067, i64* %PC.i948
  %2068 = bitcast i8* %2063 to double*
  %2069 = load double, double* %2068, align 1
  %2070 = getelementptr inbounds i8, i8* %2063, i64 8
  %2071 = bitcast i8* %2070 to i64*
  %2072 = load i64, i64* %2071, align 1
  %2073 = inttoptr i64 %2065 to double*
  %2074 = load double, double* %2073
  %2075 = fadd double %2069, %2074
  %2076 = bitcast i8* %2062 to double*
  store double %2075, double* %2076, align 1
  %2077 = getelementptr inbounds i8, i8* %2062, i64 8
  %2078 = bitcast i8* %2077 to i64*
  store i64 %2072, i64* %2078, align 1
  store %struct.Memory* %loadMem_400afa, %struct.Memory** %MEMORY
  %loadMem_400b02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2080 = getelementptr inbounds %struct.GPR, %struct.GPR* %2079, i32 0, i32 33
  %2081 = getelementptr inbounds %struct.Reg, %struct.Reg* %2080, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %2081 to i64*
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2083 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2082, i64 0, i64 0
  %YMM0.i947 = bitcast %union.VectorReg* %2083 to %"class.std::bitset"*
  %2084 = bitcast %"class.std::bitset"* %YMM0.i947 to i8*
  %2085 = bitcast %"class.std::bitset"* %YMM0.i947 to i8*
  %2086 = load i64, i64* %PC.i946
  %2087 = add i64 %2086, 9
  store i64 %2087, i64* %PC.i946
  %2088 = bitcast i8* %2085 to double*
  %2089 = load double, double* %2088, align 1
  %2090 = getelementptr inbounds i8, i8* %2085, i64 8
  %2091 = bitcast i8* %2090 to i64*
  %2092 = load i64, i64* %2091, align 1
  %2093 = load double, double* inttoptr (i64 6299800 to double*)
  %2094 = fmul double %2089, %2093
  %2095 = bitcast i8* %2084 to double*
  store double %2094, double* %2095, align 1
  %2096 = getelementptr inbounds i8, i8* %2084, i64 8
  %2097 = bitcast i8* %2096 to i64*
  store i64 %2092, i64* %2097, align 1
  store %struct.Memory* %loadMem_400b02, %struct.Memory** %MEMORY
  %loadMem_400b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2099 = getelementptr inbounds %struct.GPR, %struct.GPR* %2098, i32 0, i32 33
  %2100 = getelementptr inbounds %struct.Reg, %struct.Reg* %2099, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %2100 to i64*
  %2101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2102 = getelementptr inbounds %struct.GPR, %struct.GPR* %2101, i32 0, i32 15
  %2103 = getelementptr inbounds %struct.Reg, %struct.Reg* %2102, i32 0, i32 0
  %RBP.i944 = bitcast %union.anon* %2103 to i64*
  %2104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2105 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2104, i64 0, i64 0
  %XMM0.i945 = bitcast %union.VectorReg* %2105 to %union.vec128_t*
  %2106 = load i64, i64* %RBP.i944
  %2107 = sub i64 %2106, 128
  %2108 = bitcast %union.vec128_t* %XMM0.i945 to i8*
  %2109 = load i64, i64* %PC.i943
  %2110 = add i64 %2109, 5
  store i64 %2110, i64* %PC.i943
  %2111 = bitcast i8* %2108 to double*
  %2112 = load double, double* %2111, align 1
  %2113 = inttoptr i64 %2107 to double*
  store double %2112, double* %2113
  store %struct.Memory* %loadMem_400b0b, %struct.Memory** %MEMORY
  %loadMem_400b10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2115 = getelementptr inbounds %struct.GPR, %struct.GPR* %2114, i32 0, i32 33
  %2116 = getelementptr inbounds %struct.Reg, %struct.Reg* %2115, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %2116 to i64*
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2118 = getelementptr inbounds %struct.GPR, %struct.GPR* %2117, i32 0, i32 15
  %2119 = getelementptr inbounds %struct.Reg, %struct.Reg* %2118, i32 0, i32 0
  %RBP.i941 = bitcast %union.anon* %2119 to i64*
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2121 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2120, i64 0, i64 0
  %YMM0.i942 = bitcast %union.VectorReg* %2121 to %"class.std::bitset"*
  %2122 = bitcast %"class.std::bitset"* %YMM0.i942 to i8*
  %2123 = load i64, i64* %RBP.i941
  %2124 = sub i64 %2123, 112
  %2125 = load i64, i64* %PC.i940
  %2126 = add i64 %2125, 5
  store i64 %2126, i64* %PC.i940
  %2127 = inttoptr i64 %2124 to double*
  %2128 = load double, double* %2127
  %2129 = bitcast i8* %2122 to double*
  store double %2128, double* %2129, align 1
  %2130 = getelementptr inbounds i8, i8* %2122, i64 8
  %2131 = bitcast i8* %2130 to double*
  store double 0.000000e+00, double* %2131, align 1
  store %struct.Memory* %loadMem_400b10, %struct.Memory** %MEMORY
  %loadMem_400b15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2133 = getelementptr inbounds %struct.GPR, %struct.GPR* %2132, i32 0, i32 33
  %2134 = getelementptr inbounds %struct.Reg, %struct.Reg* %2133, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %2134 to i64*
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2136 = getelementptr inbounds %struct.GPR, %struct.GPR* %2135, i32 0, i32 5
  %2137 = getelementptr inbounds %struct.Reg, %struct.Reg* %2136, i32 0, i32 0
  %RCX.i938 = bitcast %union.anon* %2137 to i64*
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2139 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2138, i64 0, i64 0
  %XMM0.i939 = bitcast %union.VectorReg* %2139 to %union.vec128_t*
  %2140 = bitcast %union.vec128_t* %XMM0.i939 to i8*
  %2141 = load i64, i64* %PC.i937
  %2142 = add i64 %2141, 5
  store i64 %2142, i64* %PC.i937
  %2143 = bitcast i8* %2140 to i64*
  %2144 = load i64, i64* %2143, align 1
  store i64 %2144, i64* %RCX.i938, align 1
  store %struct.Memory* %loadMem_400b15, %struct.Memory** %MEMORY
  %loadMem_400b1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2146 = getelementptr inbounds %struct.GPR, %struct.GPR* %2145, i32 0, i32 33
  %2147 = getelementptr inbounds %struct.Reg, %struct.Reg* %2146, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %2147 to i64*
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2149 = getelementptr inbounds %struct.GPR, %struct.GPR* %2148, i32 0, i32 1
  %2150 = getelementptr inbounds %struct.Reg, %struct.Reg* %2149, i32 0, i32 0
  %RAX.i935 = bitcast %union.anon* %2150 to i64*
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2152 = getelementptr inbounds %struct.GPR, %struct.GPR* %2151, i32 0, i32 5
  %2153 = getelementptr inbounds %struct.Reg, %struct.Reg* %2152, i32 0, i32 0
  %RCX.i936 = bitcast %union.anon* %2153 to i64*
  %2154 = load i64, i64* %RCX.i936
  %2155 = load i64, i64* %RAX.i935
  %2156 = load i64, i64* %PC.i934
  %2157 = add i64 %2156, 3
  store i64 %2157, i64* %PC.i934
  %2158 = xor i64 %2155, %2154
  store i64 %2158, i64* %RCX.i936, align 8
  %2159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2159, align 1
  %2160 = trunc i64 %2158 to i32
  %2161 = and i32 %2160, 255
  %2162 = call i32 @llvm.ctpop.i32(i32 %2161)
  %2163 = trunc i32 %2162 to i8
  %2164 = and i8 %2163, 1
  %2165 = xor i8 %2164, 1
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2165, i8* %2166, align 1
  %2167 = icmp eq i64 %2158, 0
  %2168 = zext i1 %2167 to i8
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2168, i8* %2169, align 1
  %2170 = lshr i64 %2158, 63
  %2171 = trunc i64 %2170 to i8
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2171, i8* %2172, align 1
  %2173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2173, align 1
  %2174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2174, align 1
  store %struct.Memory* %loadMem_400b1a, %struct.Memory** %MEMORY
  %loadMem_400b1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 33
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %2177 to i64*
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 5
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %RCX.i932 = bitcast %union.anon* %2180 to i64*
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2182 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2181, i64 0, i64 0
  %YMM0.i933 = bitcast %union.VectorReg* %2182 to %"class.std::bitset"*
  %2183 = bitcast %"class.std::bitset"* %YMM0.i933 to i8*
  %2184 = load i64, i64* %RCX.i932
  %2185 = load i64, i64* %PC.i931
  %2186 = add i64 %2185, 5
  store i64 %2186, i64* %PC.i931
  %2187 = bitcast i8* %2183 to i64*
  store i64 %2184, i64* %2187, align 1
  %2188 = getelementptr inbounds i8, i8* %2183, i64 8
  %2189 = bitcast i8* %2188 to i64*
  store i64 0, i64* %2189, align 1
  store %struct.Memory* %loadMem_400b1d, %struct.Memory** %MEMORY
  %loadMem_400b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2191 = getelementptr inbounds %struct.GPR, %struct.GPR* %2190, i32 0, i32 33
  %2192 = getelementptr inbounds %struct.Reg, %struct.Reg* %2191, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %2192 to i64*
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2194 = getelementptr inbounds %struct.GPR, %struct.GPR* %2193, i32 0, i32 15
  %2195 = getelementptr inbounds %struct.Reg, %struct.Reg* %2194, i32 0, i32 0
  %RBP.i929 = bitcast %union.anon* %2195 to i64*
  %2196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2197 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2196, i64 0, i64 0
  %YMM0.i930 = bitcast %union.VectorReg* %2197 to %"class.std::bitset"*
  %2198 = bitcast %"class.std::bitset"* %YMM0.i930 to i8*
  %2199 = bitcast %"class.std::bitset"* %YMM0.i930 to i8*
  %2200 = load i64, i64* %RBP.i929
  %2201 = sub i64 %2200, 120
  %2202 = load i64, i64* %PC.i928
  %2203 = add i64 %2202, 5
  store i64 %2203, i64* %PC.i928
  %2204 = bitcast i8* %2199 to double*
  %2205 = load double, double* %2204, align 1
  %2206 = getelementptr inbounds i8, i8* %2199, i64 8
  %2207 = bitcast i8* %2206 to i64*
  %2208 = load i64, i64* %2207, align 1
  %2209 = inttoptr i64 %2201 to double*
  %2210 = load double, double* %2209
  %2211 = fadd double %2205, %2210
  %2212 = bitcast i8* %2198 to double*
  store double %2211, double* %2212, align 1
  %2213 = getelementptr inbounds i8, i8* %2198, i64 8
  %2214 = bitcast i8* %2213 to i64*
  store i64 %2208, i64* %2214, align 1
  store %struct.Memory* %loadMem_400b22, %struct.Memory** %MEMORY
  %loadMem_400b27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2216 = getelementptr inbounds %struct.GPR, %struct.GPR* %2215, i32 0, i32 33
  %2217 = getelementptr inbounds %struct.Reg, %struct.Reg* %2216, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %2217 to i64*
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2219 = getelementptr inbounds %struct.GPR, %struct.GPR* %2218, i32 0, i32 15
  %2220 = getelementptr inbounds %struct.Reg, %struct.Reg* %2219, i32 0, i32 0
  %RBP.i926 = bitcast %union.anon* %2220 to i64*
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2222 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2221, i64 0, i64 0
  %YMM0.i927 = bitcast %union.VectorReg* %2222 to %"class.std::bitset"*
  %2223 = bitcast %"class.std::bitset"* %YMM0.i927 to i8*
  %2224 = bitcast %"class.std::bitset"* %YMM0.i927 to i8*
  %2225 = load i64, i64* %RBP.i926
  %2226 = sub i64 %2225, 128
  %2227 = load i64, i64* %PC.i925
  %2228 = add i64 %2227, 5
  store i64 %2228, i64* %PC.i925
  %2229 = bitcast i8* %2224 to double*
  %2230 = load double, double* %2229, align 1
  %2231 = getelementptr inbounds i8, i8* %2224, i64 8
  %2232 = bitcast i8* %2231 to i64*
  %2233 = load i64, i64* %2232, align 1
  %2234 = inttoptr i64 %2226 to double*
  %2235 = load double, double* %2234
  %2236 = fadd double %2230, %2235
  %2237 = bitcast i8* %2223 to double*
  store double %2236, double* %2237, align 1
  %2238 = getelementptr inbounds i8, i8* %2223, i64 8
  %2239 = bitcast i8* %2238 to i64*
  store i64 %2233, i64* %2239, align 1
  store %struct.Memory* %loadMem_400b27, %struct.Memory** %MEMORY
  %loadMem_400b2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2241 = getelementptr inbounds %struct.GPR, %struct.GPR* %2240, i32 0, i32 33
  %2242 = getelementptr inbounds %struct.Reg, %struct.Reg* %2241, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %2242 to i64*
  %2243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2244 = getelementptr inbounds %struct.GPR, %struct.GPR* %2243, i32 0, i32 15
  %2245 = getelementptr inbounds %struct.Reg, %struct.Reg* %2244, i32 0, i32 0
  %RBP.i923 = bitcast %union.anon* %2245 to i64*
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2247 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2246, i64 0, i64 0
  %YMM0.i924 = bitcast %union.VectorReg* %2247 to %"class.std::bitset"*
  %2248 = bitcast %"class.std::bitset"* %YMM0.i924 to i8*
  %2249 = bitcast %"class.std::bitset"* %YMM0.i924 to i8*
  %2250 = load i64, i64* %RBP.i923
  %2251 = sub i64 %2250, 136
  %2252 = load i64, i64* %PC.i922
  %2253 = add i64 %2252, 8
  store i64 %2253, i64* %PC.i922
  %2254 = bitcast i8* %2249 to double*
  %2255 = load double, double* %2254, align 1
  %2256 = getelementptr inbounds i8, i8* %2249, i64 8
  %2257 = bitcast i8* %2256 to i64*
  %2258 = load i64, i64* %2257, align 1
  %2259 = inttoptr i64 %2251 to double*
  %2260 = load double, double* %2259
  %2261 = fadd double %2255, %2260
  %2262 = bitcast i8* %2248 to double*
  store double %2261, double* %2262, align 1
  %2263 = getelementptr inbounds i8, i8* %2248, i64 8
  %2264 = bitcast i8* %2263 to i64*
  store i64 %2258, i64* %2264, align 1
  store %struct.Memory* %loadMem_400b2c, %struct.Memory** %MEMORY
  %loadMem_400b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2266 = getelementptr inbounds %struct.GPR, %struct.GPR* %2265, i32 0, i32 33
  %2267 = getelementptr inbounds %struct.Reg, %struct.Reg* %2266, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %2267 to i64*
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2268, i64 0, i64 0
  %YMM0.i921 = bitcast %union.VectorReg* %2269 to %"class.std::bitset"*
  %2270 = bitcast %"class.std::bitset"* %YMM0.i921 to i8*
  %2271 = bitcast %"class.std::bitset"* %YMM0.i921 to i8*
  %2272 = load i64, i64* %PC.i920
  %2273 = add i64 %2272, 9
  store i64 %2273, i64* %PC.i920
  %2274 = bitcast i8* %2271 to double*
  %2275 = load double, double* %2274, align 1
  %2276 = getelementptr inbounds i8, i8* %2271, i64 8
  %2277 = bitcast i8* %2276 to i64*
  %2278 = load i64, i64* %2277, align 1
  %2279 = load double, double* inttoptr (i64 6299800 to double*)
  %2280 = fmul double %2275, %2279
  %2281 = bitcast i8* %2270 to double*
  store double %2280, double* %2281, align 1
  %2282 = getelementptr inbounds i8, i8* %2270, i64 8
  %2283 = bitcast i8* %2282 to i64*
  store i64 %2278, i64* %2283, align 1
  store %struct.Memory* %loadMem_400b34, %struct.Memory** %MEMORY
  %loadMem_400b3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2285 = getelementptr inbounds %struct.GPR, %struct.GPR* %2284, i32 0, i32 33
  %2286 = getelementptr inbounds %struct.Reg, %struct.Reg* %2285, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %2286 to i64*
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2288 = getelementptr inbounds %struct.GPR, %struct.GPR* %2287, i32 0, i32 15
  %2289 = getelementptr inbounds %struct.Reg, %struct.Reg* %2288, i32 0, i32 0
  %RBP.i918 = bitcast %union.anon* %2289 to i64*
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2290, i64 0, i64 0
  %XMM0.i919 = bitcast %union.VectorReg* %2291 to %union.vec128_t*
  %2292 = load i64, i64* %RBP.i918
  %2293 = sub i64 %2292, 136
  %2294 = bitcast %union.vec128_t* %XMM0.i919 to i8*
  %2295 = load i64, i64* %PC.i917
  %2296 = add i64 %2295, 8
  store i64 %2296, i64* %PC.i917
  %2297 = bitcast i8* %2294 to double*
  %2298 = load double, double* %2297, align 1
  %2299 = inttoptr i64 %2293 to double*
  store double %2298, double* %2299
  store %struct.Memory* %loadMem_400b3d, %struct.Memory** %MEMORY
  %loadMem_400b45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2301 = getelementptr inbounds %struct.GPR, %struct.GPR* %2300, i32 0, i32 33
  %2302 = getelementptr inbounds %struct.Reg, %struct.Reg* %2301, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %2302 to i64*
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2304 = getelementptr inbounds %struct.GPR, %struct.GPR* %2303, i32 0, i32 1
  %2305 = getelementptr inbounds %struct.Reg, %struct.Reg* %2304, i32 0, i32 0
  %RAX.i915 = bitcast %union.anon* %2305 to i64*
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2307 = getelementptr inbounds %struct.GPR, %struct.GPR* %2306, i32 0, i32 15
  %2308 = getelementptr inbounds %struct.Reg, %struct.Reg* %2307, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %2308 to i64*
  %2309 = load i64, i64* %RBP.i916
  %2310 = sub i64 %2309, 24
  %2311 = load i64, i64* %PC.i914
  %2312 = add i64 %2311, 4
  store i64 %2312, i64* %PC.i914
  %2313 = inttoptr i64 %2310 to i64*
  %2314 = load i64, i64* %2313
  store i64 %2314, i64* %RAX.i915, align 8
  store %struct.Memory* %loadMem_400b45, %struct.Memory** %MEMORY
  %loadMem_400b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2316 = getelementptr inbounds %struct.GPR, %struct.GPR* %2315, i32 0, i32 33
  %2317 = getelementptr inbounds %struct.Reg, %struct.Reg* %2316, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %2317 to i64*
  %2318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2319 = getelementptr inbounds %struct.GPR, %struct.GPR* %2318, i32 0, i32 1
  %2320 = getelementptr inbounds %struct.Reg, %struct.Reg* %2319, i32 0, i32 0
  %RAX.i913 = bitcast %union.anon* %2320 to i64*
  %2321 = load i64, i64* %RAX.i913
  %2322 = load i64, i64* %PC.i912
  %2323 = add i64 %2322, 4
  store i64 %2323, i64* %PC.i912
  %2324 = add i64 1, %2321
  store i64 %2324, i64* %RAX.i913, align 8
  %2325 = icmp ult i64 %2324, %2321
  %2326 = icmp ult i64 %2324, 1
  %2327 = or i1 %2325, %2326
  %2328 = zext i1 %2327 to i8
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2328, i8* %2329, align 1
  %2330 = trunc i64 %2324 to i32
  %2331 = and i32 %2330, 255
  %2332 = call i32 @llvm.ctpop.i32(i32 %2331)
  %2333 = trunc i32 %2332 to i8
  %2334 = and i8 %2333, 1
  %2335 = xor i8 %2334, 1
  %2336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2335, i8* %2336, align 1
  %2337 = xor i64 1, %2321
  %2338 = xor i64 %2337, %2324
  %2339 = lshr i64 %2338, 4
  %2340 = trunc i64 %2339 to i8
  %2341 = and i8 %2340, 1
  %2342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2341, i8* %2342, align 1
  %2343 = icmp eq i64 %2324, 0
  %2344 = zext i1 %2343 to i8
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2344, i8* %2345, align 1
  %2346 = lshr i64 %2324, 63
  %2347 = trunc i64 %2346 to i8
  %2348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2347, i8* %2348, align 1
  %2349 = lshr i64 %2321, 63
  %2350 = xor i64 %2346, %2349
  %2351 = add i64 %2350, %2346
  %2352 = icmp eq i64 %2351, 2
  %2353 = zext i1 %2352 to i8
  %2354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2353, i8* %2354, align 1
  store %struct.Memory* %loadMem_400b49, %struct.Memory** %MEMORY
  %loadMem_400b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2356 = getelementptr inbounds %struct.GPR, %struct.GPR* %2355, i32 0, i32 33
  %2357 = getelementptr inbounds %struct.Reg, %struct.Reg* %2356, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %2357 to i64*
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2359 = getelementptr inbounds %struct.GPR, %struct.GPR* %2358, i32 0, i32 1
  %2360 = getelementptr inbounds %struct.Reg, %struct.Reg* %2359, i32 0, i32 0
  %RAX.i910 = bitcast %union.anon* %2360 to i64*
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2362 = getelementptr inbounds %struct.GPR, %struct.GPR* %2361, i32 0, i32 15
  %2363 = getelementptr inbounds %struct.Reg, %struct.Reg* %2362, i32 0, i32 0
  %RBP.i911 = bitcast %union.anon* %2363 to i64*
  %2364 = load i64, i64* %RBP.i911
  %2365 = sub i64 %2364, 24
  %2366 = load i64, i64* %RAX.i910
  %2367 = load i64, i64* %PC.i909
  %2368 = add i64 %2367, 4
  store i64 %2368, i64* %PC.i909
  %2369 = inttoptr i64 %2365 to i64*
  store i64 %2366, i64* %2369
  store %struct.Memory* %loadMem_400b4d, %struct.Memory** %MEMORY
  %loadMem_400b51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2371 = getelementptr inbounds %struct.GPR, %struct.GPR* %2370, i32 0, i32 33
  %2372 = getelementptr inbounds %struct.Reg, %struct.Reg* %2371, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %2372 to i64*
  %2373 = load i64, i64* %PC.i908
  %2374 = add i64 %2373, -200
  %2375 = load i64, i64* %PC.i908
  %2376 = add i64 %2375, 5
  store i64 %2376, i64* %PC.i908
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2374, i64* %2377, align 8
  store %struct.Memory* %loadMem_400b51, %struct.Memory** %MEMORY
  br label %block_.L_400a89

block_.L_400b56:                                  ; preds = %block_.L_400a89
  %loadMem_400b56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2379 = getelementptr inbounds %struct.GPR, %struct.GPR* %2378, i32 0, i32 33
  %2380 = getelementptr inbounds %struct.Reg, %struct.Reg* %2379, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %2380 to i64*
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2382 = getelementptr inbounds %struct.GPR, %struct.GPR* %2381, i32 0, i32 1
  %2383 = getelementptr inbounds %struct.Reg, %struct.Reg* %2382, i32 0, i32 0
  %RAX.i906 = bitcast %union.anon* %2383 to i64*
  %2384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2385 = getelementptr inbounds %struct.GPR, %struct.GPR* %2384, i32 0, i32 15
  %2386 = getelementptr inbounds %struct.Reg, %struct.Reg* %2385, i32 0, i32 0
  %RBP.i907 = bitcast %union.anon* %2386 to i64*
  %2387 = load i64, i64* %RBP.i907
  %2388 = sub i64 %2387, 176
  %2389 = load i64, i64* %PC.i905
  %2390 = add i64 %2389, 6
  store i64 %2390, i64* %PC.i905
  %2391 = inttoptr i64 %2388 to i32*
  %2392 = load i32, i32* %2391
  %2393 = zext i32 %2392 to i64
  store i64 %2393, i64* %RAX.i906, align 8
  store %struct.Memory* %loadMem_400b56, %struct.Memory** %MEMORY
  %loadMem_400b5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2395 = getelementptr inbounds %struct.GPR, %struct.GPR* %2394, i32 0, i32 33
  %2396 = getelementptr inbounds %struct.Reg, %struct.Reg* %2395, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %2396 to i64*
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2398 = getelementptr inbounds %struct.GPR, %struct.GPR* %2397, i32 0, i32 1
  %2399 = getelementptr inbounds %struct.Reg, %struct.Reg* %2398, i32 0, i32 0
  %EAX.i903 = bitcast %union.anon* %2399 to i32*
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2401 = getelementptr inbounds %struct.GPR, %struct.GPR* %2400, i32 0, i32 15
  %2402 = getelementptr inbounds %struct.Reg, %struct.Reg* %2401, i32 0, i32 0
  %RBP.i904 = bitcast %union.anon* %2402 to i64*
  %2403 = load i32, i32* %EAX.i903
  %2404 = zext i32 %2403 to i64
  %2405 = load i64, i64* %RBP.i904
  %2406 = sub i64 %2405, 172
  %2407 = load i64, i64* %PC.i902
  %2408 = add i64 %2407, 6
  store i64 %2408, i64* %PC.i902
  %2409 = inttoptr i64 %2406 to i32*
  %2410 = load i32, i32* %2409
  %2411 = sub i32 %2403, %2410
  %2412 = icmp ult i32 %2403, %2410
  %2413 = zext i1 %2412 to i8
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2413, i8* %2414, align 1
  %2415 = and i32 %2411, 255
  %2416 = call i32 @llvm.ctpop.i32(i32 %2415)
  %2417 = trunc i32 %2416 to i8
  %2418 = and i8 %2417, 1
  %2419 = xor i8 %2418, 1
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2419, i8* %2420, align 1
  %2421 = xor i32 %2410, %2403
  %2422 = xor i32 %2421, %2411
  %2423 = lshr i32 %2422, 4
  %2424 = trunc i32 %2423 to i8
  %2425 = and i8 %2424, 1
  %2426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2425, i8* %2426, align 1
  %2427 = icmp eq i32 %2411, 0
  %2428 = zext i1 %2427 to i8
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2428, i8* %2429, align 1
  %2430 = lshr i32 %2411, 31
  %2431 = trunc i32 %2430 to i8
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2431, i8* %2432, align 1
  %2433 = lshr i32 %2403, 31
  %2434 = lshr i32 %2410, 31
  %2435 = xor i32 %2434, %2433
  %2436 = xor i32 %2430, %2433
  %2437 = add i32 %2436, %2435
  %2438 = icmp eq i32 %2437, 2
  %2439 = zext i1 %2438 to i8
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2439, i8* %2440, align 1
  store %struct.Memory* %loadMem_400b5c, %struct.Memory** %MEMORY
  %loadMem_400b62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2442 = getelementptr inbounds %struct.GPR, %struct.GPR* %2441, i32 0, i32 33
  %2443 = getelementptr inbounds %struct.Reg, %struct.Reg* %2442, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %2443 to i64*
  %2444 = load i64, i64* %PC.i901
  %2445 = add i64 %2444, 46
  %2446 = load i64, i64* %PC.i901
  %2447 = add i64 %2446, 6
  %2448 = load i64, i64* %PC.i901
  %2449 = add i64 %2448, 6
  store i64 %2449, i64* %PC.i901
  %2450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2451 = load i8, i8* %2450, align 1
  %2452 = icmp eq i8 %2451, 0
  %2453 = zext i1 %2452 to i8
  store i8 %2453, i8* %BRANCH_TAKEN, align 1
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2455 = select i1 %2452, i64 %2445, i64 %2447
  store i64 %2455, i64* %2454, align 8
  store %struct.Memory* %loadMem_400b62, %struct.Memory** %MEMORY
  %loadBr_400b62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400b62 = icmp eq i8 %loadBr_400b62, 1
  br i1 %cmpBr_400b62, label %block_.L_400b90, label %block_400b68

block_400b68:                                     ; preds = %block_.L_400b56
  %loadMem_400b68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2457 = getelementptr inbounds %struct.GPR, %struct.GPR* %2456, i32 0, i32 33
  %2458 = getelementptr inbounds %struct.Reg, %struct.Reg* %2457, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %2458 to i64*
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2460 = getelementptr inbounds %struct.GPR, %struct.GPR* %2459, i32 0, i32 11
  %2461 = getelementptr inbounds %struct.Reg, %struct.Reg* %2460, i32 0, i32 0
  %RDI.i899 = bitcast %union.anon* %2461 to i64*
  %2462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2463 = getelementptr inbounds %struct.GPR, %struct.GPR* %2462, i32 0, i32 15
  %2464 = getelementptr inbounds %struct.Reg, %struct.Reg* %2463, i32 0, i32 0
  %RBP.i900 = bitcast %union.anon* %2464 to i64*
  %2465 = load i64, i64* %RBP.i900
  %2466 = sub i64 %2465, 32
  %2467 = load i64, i64* %PC.i898
  %2468 = add i64 %2467, 4
  store i64 %2468, i64* %PC.i898
  %2469 = inttoptr i64 %2466 to i64*
  %2470 = load i64, i64* %2469
  store i64 %2470, i64* %RDI.i899, align 8
  store %struct.Memory* %loadMem_400b68, %struct.Memory** %MEMORY
  %loadMem_400b6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2472 = getelementptr inbounds %struct.GPR, %struct.GPR* %2471, i32 0, i32 33
  %2473 = getelementptr inbounds %struct.Reg, %struct.Reg* %2472, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %2473 to i64*
  %2474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2475 = getelementptr inbounds %struct.GPR, %struct.GPR* %2474, i32 0, i32 9
  %2476 = getelementptr inbounds %struct.Reg, %struct.Reg* %2475, i32 0, i32 0
  %RSI.i896 = bitcast %union.anon* %2476 to i64*
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 15
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %RBP.i897 = bitcast %union.anon* %2479 to i64*
  %2480 = load i64, i64* %RBP.i897
  %2481 = sub i64 %2480, 32
  %2482 = load i64, i64* %PC.i895
  %2483 = add i64 %2482, 4
  store i64 %2483, i64* %PC.i895
  %2484 = inttoptr i64 %2481 to i64*
  %2485 = load i64, i64* %2484
  store i64 %2485, i64* %RSI.i896, align 8
  store %struct.Memory* %loadMem_400b6c, %struct.Memory** %MEMORY
  %loadMem_400b70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2487 = getelementptr inbounds %struct.GPR, %struct.GPR* %2486, i32 0, i32 33
  %2488 = getelementptr inbounds %struct.Reg, %struct.Reg* %2487, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %2488 to i64*
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2490 = getelementptr inbounds %struct.GPR, %struct.GPR* %2489, i32 0, i32 7
  %2491 = getelementptr inbounds %struct.Reg, %struct.Reg* %2490, i32 0, i32 0
  %RDX.i893 = bitcast %union.anon* %2491 to i64*
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2493 = getelementptr inbounds %struct.GPR, %struct.GPR* %2492, i32 0, i32 15
  %2494 = getelementptr inbounds %struct.Reg, %struct.Reg* %2493, i32 0, i32 0
  %RBP.i894 = bitcast %union.anon* %2494 to i64*
  %2495 = load i64, i64* %RBP.i894
  %2496 = sub i64 %2495, 32
  %2497 = load i64, i64* %PC.i892
  %2498 = add i64 %2497, 4
  store i64 %2498, i64* %PC.i892
  %2499 = inttoptr i64 %2496 to i64*
  %2500 = load i64, i64* %2499
  store i64 %2500, i64* %RDX.i893, align 8
  store %struct.Memory* %loadMem_400b70, %struct.Memory** %MEMORY
  %loadMem_400b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2502 = getelementptr inbounds %struct.GPR, %struct.GPR* %2501, i32 0, i32 33
  %2503 = getelementptr inbounds %struct.Reg, %struct.Reg* %2502, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %2503 to i64*
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2505 = getelementptr inbounds %struct.GPR, %struct.GPR* %2504, i32 0, i32 15
  %2506 = getelementptr inbounds %struct.Reg, %struct.Reg* %2505, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %2506 to i64*
  %2507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2508 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2507, i64 0, i64 0
  %YMM0.i891 = bitcast %union.VectorReg* %2508 to %"class.std::bitset"*
  %2509 = bitcast %"class.std::bitset"* %YMM0.i891 to i8*
  %2510 = load i64, i64* %RBP.i890
  %2511 = sub i64 %2510, 112
  %2512 = load i64, i64* %PC.i889
  %2513 = add i64 %2512, 5
  store i64 %2513, i64* %PC.i889
  %2514 = inttoptr i64 %2511 to double*
  %2515 = load double, double* %2514
  %2516 = bitcast i8* %2509 to double*
  store double %2515, double* %2516, align 1
  %2517 = getelementptr inbounds i8, i8* %2509, i64 8
  %2518 = bitcast i8* %2517 to double*
  store double 0.000000e+00, double* %2518, align 1
  store %struct.Memory* %loadMem_400b74, %struct.Memory** %MEMORY
  %loadMem_400b79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2520 = getelementptr inbounds %struct.GPR, %struct.GPR* %2519, i32 0, i32 33
  %2521 = getelementptr inbounds %struct.Reg, %struct.Reg* %2520, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %2521 to i64*
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2523 = getelementptr inbounds %struct.GPR, %struct.GPR* %2522, i32 0, i32 15
  %2524 = getelementptr inbounds %struct.Reg, %struct.Reg* %2523, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %2524 to i64*
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2526 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2525, i64 0, i64 1
  %YMM1.i888 = bitcast %union.VectorReg* %2526 to %"class.std::bitset"*
  %2527 = bitcast %"class.std::bitset"* %YMM1.i888 to i8*
  %2528 = load i64, i64* %RBP.i887
  %2529 = sub i64 %2528, 120
  %2530 = load i64, i64* %PC.i886
  %2531 = add i64 %2530, 5
  store i64 %2531, i64* %PC.i886
  %2532 = inttoptr i64 %2529 to double*
  %2533 = load double, double* %2532
  %2534 = bitcast i8* %2527 to double*
  store double %2533, double* %2534, align 1
  %2535 = getelementptr inbounds i8, i8* %2527, i64 8
  %2536 = bitcast i8* %2535 to double*
  store double 0.000000e+00, double* %2536, align 1
  store %struct.Memory* %loadMem_400b79, %struct.Memory** %MEMORY
  %loadMem_400b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2538 = getelementptr inbounds %struct.GPR, %struct.GPR* %2537, i32 0, i32 33
  %2539 = getelementptr inbounds %struct.Reg, %struct.Reg* %2538, i32 0, i32 0
  %PC.i883 = bitcast %union.anon* %2539 to i64*
  %2540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2541 = getelementptr inbounds %struct.GPR, %struct.GPR* %2540, i32 0, i32 15
  %2542 = getelementptr inbounds %struct.Reg, %struct.Reg* %2541, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %2542 to i64*
  %2543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2544 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2543, i64 0, i64 2
  %YMM2.i885 = bitcast %union.VectorReg* %2544 to %"class.std::bitset"*
  %2545 = bitcast %"class.std::bitset"* %YMM2.i885 to i8*
  %2546 = load i64, i64* %RBP.i884
  %2547 = sub i64 %2546, 128
  %2548 = load i64, i64* %PC.i883
  %2549 = add i64 %2548, 5
  store i64 %2549, i64* %PC.i883
  %2550 = inttoptr i64 %2547 to double*
  %2551 = load double, double* %2550
  %2552 = bitcast i8* %2545 to double*
  store double %2551, double* %2552, align 1
  %2553 = getelementptr inbounds i8, i8* %2545, i64 8
  %2554 = bitcast i8* %2553 to double*
  store double 0.000000e+00, double* %2554, align 1
  store %struct.Memory* %loadMem_400b7e, %struct.Memory** %MEMORY
  %loadMem_400b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2556 = getelementptr inbounds %struct.GPR, %struct.GPR* %2555, i32 0, i32 33
  %2557 = getelementptr inbounds %struct.Reg, %struct.Reg* %2556, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %2557 to i64*
  %2558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2559 = getelementptr inbounds %struct.GPR, %struct.GPR* %2558, i32 0, i32 15
  %2560 = getelementptr inbounds %struct.Reg, %struct.Reg* %2559, i32 0, i32 0
  %RBP.i881 = bitcast %union.anon* %2560 to i64*
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2562 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2561, i64 0, i64 3
  %YMM3.i882 = bitcast %union.VectorReg* %2562 to %"class.std::bitset"*
  %2563 = bitcast %"class.std::bitset"* %YMM3.i882 to i8*
  %2564 = load i64, i64* %RBP.i881
  %2565 = sub i64 %2564, 136
  %2566 = load i64, i64* %PC.i880
  %2567 = add i64 %2566, 8
  store i64 %2567, i64* %PC.i880
  %2568 = inttoptr i64 %2565 to double*
  %2569 = load double, double* %2568
  %2570 = bitcast i8* %2563 to double*
  store double %2569, double* %2570, align 1
  %2571 = getelementptr inbounds i8, i8* %2563, i64 8
  %2572 = bitcast i8* %2571 to double*
  store double 0.000000e+00, double* %2572, align 1
  store %struct.Memory* %loadMem_400b83, %struct.Memory** %MEMORY
  %loadMem1_400b8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2574 = getelementptr inbounds %struct.GPR, %struct.GPR* %2573, i32 0, i32 33
  %2575 = getelementptr inbounds %struct.Reg, %struct.Reg* %2574, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %2575 to i64*
  %2576 = load i64, i64* %PC.i879
  %2577 = add i64 %2576, 2645
  %2578 = load i64, i64* %PC.i879
  %2579 = add i64 %2578, 5
  %2580 = load i64, i64* %PC.i879
  %2581 = add i64 %2580, 5
  store i64 %2581, i64* %PC.i879
  %2582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2583 = load i64, i64* %2582, align 8
  %2584 = add i64 %2583, -8
  %2585 = inttoptr i64 %2584 to i64*
  store i64 %2579, i64* %2585
  store i64 %2584, i64* %2582, align 8
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2577, i64* %2586, align 8
  store %struct.Memory* %loadMem1_400b8b, %struct.Memory** %MEMORY
  %loadMem2_400b8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400b8b = load i64, i64* %3
  %call2_400b8b = call %struct.Memory* @sub_4015e0.POUT(%struct.State* %0, i64 %loadPC_400b8b, %struct.Memory* %loadMem2_400b8b)
  store %struct.Memory* %call2_400b8b, %struct.Memory** %MEMORY
  br label %block_.L_400b90

block_.L_400b90:                                  ; preds = %block_400b68, %block_.L_400b56
  %loadMem_400b90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2588 = getelementptr inbounds %struct.GPR, %struct.GPR* %2587, i32 0, i32 33
  %2589 = getelementptr inbounds %struct.Reg, %struct.Reg* %2588, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %2589 to i64*
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2591 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2590, i64 0, i64 0
  %YMM0.i878 = bitcast %union.VectorReg* %2591 to %"class.std::bitset"*
  %2592 = bitcast %"class.std::bitset"* %YMM0.i878 to i8*
  %2593 = load i64, i64* %PC.i877
  %2594 = add i64 %2593, 3456
  %2595 = load i64, i64* %PC.i877
  %2596 = add i64 %2595, 8
  store i64 %2596, i64* %PC.i877
  %2597 = inttoptr i64 %2594 to double*
  %2598 = load double, double* %2597
  %2599 = bitcast i8* %2592 to double*
  store double %2598, double* %2599, align 1
  %2600 = getelementptr inbounds i8, i8* %2592, i64 8
  %2601 = bitcast i8* %2600 to double*
  store double 0.000000e+00, double* %2601, align 1
  store %struct.Memory* %loadMem_400b90, %struct.Memory** %MEMORY
  %loadMem_400b98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2603 = getelementptr inbounds %struct.GPR, %struct.GPR* %2602, i32 0, i32 33
  %2604 = getelementptr inbounds %struct.Reg, %struct.Reg* %2603, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %2604 to i64*
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2606 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2605, i64 0, i64 1
  %YMM1.i876 = bitcast %union.VectorReg* %2606 to %"class.std::bitset"*
  %2607 = bitcast %"class.std::bitset"* %YMM1.i876 to i8*
  %2608 = load i64, i64* %PC.i875
  %2609 = add i64 %2608, 3456
  %2610 = load i64, i64* %PC.i875
  %2611 = add i64 %2610, 8
  store i64 %2611, i64* %PC.i875
  %2612 = inttoptr i64 %2609 to double*
  %2613 = load double, double* %2612
  %2614 = bitcast i8* %2607 to double*
  store double %2613, double* %2614, align 1
  %2615 = getelementptr inbounds i8, i8* %2607, i64 8
  %2616 = bitcast i8* %2615 to double*
  store double 0.000000e+00, double* %2616, align 1
  store %struct.Memory* %loadMem_400b98, %struct.Memory** %MEMORY
  %loadMem_400ba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2618 = getelementptr inbounds %struct.GPR, %struct.GPR* %2617, i32 0, i32 33
  %2619 = getelementptr inbounds %struct.Reg, %struct.Reg* %2618, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %2619 to i64*
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2621 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2620, i64 0, i64 1
  %XMM1.i874 = bitcast %union.VectorReg* %2621 to %union.vec128_t*
  %2622 = bitcast %union.vec128_t* %XMM1.i874 to i8*
  %2623 = load i64, i64* %PC.i873
  %2624 = add i64 %2623, 9
  store i64 %2624, i64* %PC.i873
  %2625 = bitcast i8* %2622 to double*
  %2626 = load double, double* %2625, align 1
  store double %2626, double* inttoptr (i64 6299848 to double*)
  store %struct.Memory* %loadMem_400ba0, %struct.Memory** %MEMORY
  %loadMem_400ba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2628 = getelementptr inbounds %struct.GPR, %struct.GPR* %2627, i32 0, i32 33
  %2629 = getelementptr inbounds %struct.Reg, %struct.Reg* %2628, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %2629 to i64*
  %2630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2631 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2630, i64 0, i64 0
  %XMM0.i872 = bitcast %union.VectorReg* %2631 to %union.vec128_t*
  %2632 = bitcast %union.vec128_t* %XMM0.i872 to i8*
  %2633 = load i64, i64* %PC.i871
  %2634 = add i64 %2633, 9
  store i64 %2634, i64* %PC.i871
  %2635 = bitcast i8* %2632 to double*
  %2636 = load double, double* %2635, align 1
  store double %2636, double* inttoptr (i64 6299856 to double*)
  store %struct.Memory* %loadMem_400ba9, %struct.Memory** %MEMORY
  %loadMem_400bb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2638 = getelementptr inbounds %struct.GPR, %struct.GPR* %2637, i32 0, i32 33
  %2639 = getelementptr inbounds %struct.Reg, %struct.Reg* %2638, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %2639 to i64*
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2641 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2640, i64 0, i64 0
  %XMM0.i870 = bitcast %union.VectorReg* %2641 to %union.vec128_t*
  %2642 = bitcast %union.vec128_t* %XMM0.i870 to i8*
  %2643 = load i64, i64* %PC.i869
  %2644 = add i64 %2643, 9
  store i64 %2644, i64* %PC.i869
  %2645 = bitcast i8* %2642 to double*
  %2646 = load double, double* %2645, align 1
  store double %2646, double* inttoptr (i64 6299864 to double*)
  store %struct.Memory* %loadMem_400bb2, %struct.Memory** %MEMORY
  %loadMem_400bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2648 = getelementptr inbounds %struct.GPR, %struct.GPR* %2647, i32 0, i32 33
  %2649 = getelementptr inbounds %struct.Reg, %struct.Reg* %2648, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %2649 to i64*
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2651 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2650, i64 0, i64 0
  %XMM0.i868 = bitcast %union.VectorReg* %2651 to %union.vec128_t*
  %2652 = bitcast %union.vec128_t* %XMM0.i868 to i8*
  %2653 = load i64, i64* %PC.i867
  %2654 = add i64 %2653, 9
  store i64 %2654, i64* %PC.i867
  %2655 = bitcast i8* %2652 to double*
  %2656 = load double, double* %2655, align 1
  store double %2656, double* inttoptr (i64 6299872 to double*)
  store %struct.Memory* %loadMem_400bbb, %struct.Memory** %MEMORY
  %loadMem_400bc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2658 = getelementptr inbounds %struct.GPR, %struct.GPR* %2657, i32 0, i32 33
  %2659 = getelementptr inbounds %struct.Reg, %struct.Reg* %2658, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %2659 to i64*
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2661 = getelementptr inbounds %struct.GPR, %struct.GPR* %2660, i32 0, i32 15
  %2662 = getelementptr inbounds %struct.Reg, %struct.Reg* %2661, i32 0, i32 0
  %RBP.i866 = bitcast %union.anon* %2662 to i64*
  %2663 = load i64, i64* %RBP.i866
  %2664 = sub i64 %2663, 24
  %2665 = load i64, i64* %PC.i865
  %2666 = add i64 %2665, 8
  store i64 %2666, i64* %PC.i865
  %2667 = inttoptr i64 %2664 to i64*
  store i64 1, i64* %2667
  store %struct.Memory* %loadMem_400bc4, %struct.Memory** %MEMORY
  br label %block_.L_400bcc

block_.L_400bcc:                                  ; preds = %block_400bda, %block_.L_400b90
  %loadMem_400bcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2669 = getelementptr inbounds %struct.GPR, %struct.GPR* %2668, i32 0, i32 33
  %2670 = getelementptr inbounds %struct.Reg, %struct.Reg* %2669, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %2670 to i64*
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2672 = getelementptr inbounds %struct.GPR, %struct.GPR* %2671, i32 0, i32 1
  %2673 = getelementptr inbounds %struct.Reg, %struct.Reg* %2672, i32 0, i32 0
  %RAX.i863 = bitcast %union.anon* %2673 to i64*
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2675 = getelementptr inbounds %struct.GPR, %struct.GPR* %2674, i32 0, i32 15
  %2676 = getelementptr inbounds %struct.Reg, %struct.Reg* %2675, i32 0, i32 0
  %RBP.i864 = bitcast %union.anon* %2676 to i64*
  %2677 = load i64, i64* %RBP.i864
  %2678 = sub i64 %2677, 24
  %2679 = load i64, i64* %PC.i862
  %2680 = add i64 %2679, 4
  store i64 %2680, i64* %PC.i862
  %2681 = inttoptr i64 %2678 to i64*
  %2682 = load i64, i64* %2681
  store i64 %2682, i64* %RAX.i863, align 8
  store %struct.Memory* %loadMem_400bcc, %struct.Memory** %MEMORY
  %loadMem_400bd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2684 = getelementptr inbounds %struct.GPR, %struct.GPR* %2683, i32 0, i32 33
  %2685 = getelementptr inbounds %struct.Reg, %struct.Reg* %2684, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %2685 to i64*
  %2686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2687 = getelementptr inbounds %struct.GPR, %struct.GPR* %2686, i32 0, i32 1
  %2688 = getelementptr inbounds %struct.Reg, %struct.Reg* %2687, i32 0, i32 0
  %RAX.i860 = bitcast %union.anon* %2688 to i64*
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2690 = getelementptr inbounds %struct.GPR, %struct.GPR* %2689, i32 0, i32 15
  %2691 = getelementptr inbounds %struct.Reg, %struct.Reg* %2690, i32 0, i32 0
  %RBP.i861 = bitcast %union.anon* %2691 to i64*
  %2692 = load i64, i64* %RAX.i860
  %2693 = load i64, i64* %RBP.i861
  %2694 = sub i64 %2693, 40
  %2695 = load i64, i64* %PC.i859
  %2696 = add i64 %2695, 4
  store i64 %2696, i64* %PC.i859
  %2697 = inttoptr i64 %2694 to i64*
  %2698 = load i64, i64* %2697
  %2699 = sub i64 %2692, %2698
  %2700 = icmp ugt i64 %2698, %2692
  %2701 = zext i1 %2700 to i8
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2701, i8* %2702, align 1
  %2703 = trunc i64 %2699 to i32
  %2704 = and i32 %2703, 255
  %2705 = call i32 @llvm.ctpop.i32(i32 %2704)
  %2706 = trunc i32 %2705 to i8
  %2707 = and i8 %2706, 1
  %2708 = xor i8 %2707, 1
  %2709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2708, i8* %2709, align 1
  %2710 = xor i64 %2698, %2692
  %2711 = xor i64 %2710, %2699
  %2712 = lshr i64 %2711, 4
  %2713 = trunc i64 %2712 to i8
  %2714 = and i8 %2713, 1
  %2715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2714, i8* %2715, align 1
  %2716 = icmp eq i64 %2699, 0
  %2717 = zext i1 %2716 to i8
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2717, i8* %2718, align 1
  %2719 = lshr i64 %2699, 63
  %2720 = trunc i64 %2719 to i8
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2720, i8* %2721, align 1
  %2722 = lshr i64 %2692, 63
  %2723 = lshr i64 %2698, 63
  %2724 = xor i64 %2723, %2722
  %2725 = xor i64 %2719, %2722
  %2726 = add i64 %2725, %2724
  %2727 = icmp eq i64 %2726, 2
  %2728 = zext i1 %2727 to i8
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2728, i8* %2729, align 1
  store %struct.Memory* %loadMem_400bd0, %struct.Memory** %MEMORY
  %loadMem_400bd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2731 = getelementptr inbounds %struct.GPR, %struct.GPR* %2730, i32 0, i32 33
  %2732 = getelementptr inbounds %struct.Reg, %struct.Reg* %2731, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %2732 to i64*
  %2733 = load i64, i64* %PC.i858
  %2734 = add i64 %2733, 262
  %2735 = load i64, i64* %PC.i858
  %2736 = add i64 %2735, 6
  %2737 = load i64, i64* %PC.i858
  %2738 = add i64 %2737, 6
  store i64 %2738, i64* %PC.i858
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2740 = load i8, i8* %2739, align 1
  %2741 = icmp eq i8 %2740, 0
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2743 = load i8, i8* %2742, align 1
  %2744 = icmp ne i8 %2743, 0
  %2745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2746 = load i8, i8* %2745, align 1
  %2747 = icmp ne i8 %2746, 0
  %2748 = xor i1 %2744, %2747
  %2749 = xor i1 %2748, true
  %2750 = and i1 %2741, %2749
  %2751 = zext i1 %2750 to i8
  store i8 %2751, i8* %BRANCH_TAKEN, align 1
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2753 = select i1 %2750, i64 %2734, i64 %2736
  store i64 %2753, i64* %2752, align 8
  store %struct.Memory* %loadMem_400bd4, %struct.Memory** %MEMORY
  %loadBr_400bd4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400bd4 = icmp eq i8 %loadBr_400bd4, 1
  br i1 %cmpBr_400bd4, label %block_.L_400cda, label %block_400bda

block_400bda:                                     ; preds = %block_.L_400bcc
  %loadMem_400bda = load %struct.Memory*, %struct.Memory** %MEMORY
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2755 = getelementptr inbounds %struct.GPR, %struct.GPR* %2754, i32 0, i32 33
  %2756 = getelementptr inbounds %struct.Reg, %struct.Reg* %2755, i32 0, i32 0
  %PC.i856 = bitcast %union.anon* %2756 to i64*
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2758 = getelementptr inbounds %struct.GPR, %struct.GPR* %2757, i32 0, i32 1
  %2759 = getelementptr inbounds %struct.Reg, %struct.Reg* %2758, i32 0, i32 0
  %RAX.i857 = bitcast %union.anon* %2759 to i64*
  %2760 = load i64, i64* %PC.i856
  %2761 = add i64 %2760, 10
  store i64 %2761, i64* %PC.i856
  store i64 -9223372036854775808, i64* %RAX.i857, align 8
  store %struct.Memory* %loadMem_400bda, %struct.Memory** %MEMORY
  %loadMem_400be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2763 = getelementptr inbounds %struct.GPR, %struct.GPR* %2762, i32 0, i32 33
  %2764 = getelementptr inbounds %struct.Reg, %struct.Reg* %2763, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %2764 to i64*
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2766 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2765, i64 0, i64 0
  %YMM0.i855 = bitcast %union.VectorReg* %2766 to %"class.std::bitset"*
  %2767 = bitcast %"class.std::bitset"* %YMM0.i855 to i8*
  %2768 = load i64, i64* %PC.i854
  %2769 = add i64 %2768, 9
  store i64 %2769, i64* %PC.i854
  %2770 = load double, double* inttoptr (i64 6299848 to double*)
  %2771 = bitcast i8* %2767 to double*
  store double %2770, double* %2771, align 1
  %2772 = getelementptr inbounds i8, i8* %2767, i64 8
  %2773 = bitcast i8* %2772 to double*
  store double 0.000000e+00, double* %2773, align 1
  store %struct.Memory* %loadMem_400be4, %struct.Memory** %MEMORY
  %loadMem_400bed = load %struct.Memory*, %struct.Memory** %MEMORY
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2775 = getelementptr inbounds %struct.GPR, %struct.GPR* %2774, i32 0, i32 33
  %2776 = getelementptr inbounds %struct.Reg, %struct.Reg* %2775, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %2776 to i64*
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2778 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2777, i64 0, i64 0
  %YMM0.i853 = bitcast %union.VectorReg* %2778 to %"class.std::bitset"*
  %2779 = bitcast %"class.std::bitset"* %YMM0.i853 to i8*
  %2780 = bitcast %"class.std::bitset"* %YMM0.i853 to i8*
  %2781 = load i64, i64* %PC.i852
  %2782 = add i64 %2781, 9
  store i64 %2782, i64* %PC.i852
  %2783 = bitcast i8* %2780 to double*
  %2784 = load double, double* %2783, align 1
  %2785 = getelementptr inbounds i8, i8* %2780, i64 8
  %2786 = bitcast i8* %2785 to i64*
  %2787 = load i64, i64* %2786, align 1
  %2788 = load double, double* inttoptr (i64 6299856 to double*)
  %2789 = fadd double %2784, %2788
  %2790 = bitcast i8* %2779 to double*
  store double %2789, double* %2790, align 1
  %2791 = getelementptr inbounds i8, i8* %2779, i64 8
  %2792 = bitcast i8* %2791 to i64*
  store i64 %2787, i64* %2792, align 1
  store %struct.Memory* %loadMem_400bed, %struct.Memory** %MEMORY
  %loadMem_400bf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2794 = getelementptr inbounds %struct.GPR, %struct.GPR* %2793, i32 0, i32 33
  %2795 = getelementptr inbounds %struct.Reg, %struct.Reg* %2794, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %2795 to i64*
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2797 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2796, i64 0, i64 0
  %YMM0.i851 = bitcast %union.VectorReg* %2797 to %"class.std::bitset"*
  %2798 = bitcast %"class.std::bitset"* %YMM0.i851 to i8*
  %2799 = bitcast %"class.std::bitset"* %YMM0.i851 to i8*
  %2800 = load i64, i64* %PC.i850
  %2801 = add i64 %2800, 9
  store i64 %2801, i64* %PC.i850
  %2802 = bitcast i8* %2799 to double*
  %2803 = load double, double* %2802, align 1
  %2804 = getelementptr inbounds i8, i8* %2799, i64 8
  %2805 = bitcast i8* %2804 to i64*
  %2806 = load i64, i64* %2805, align 1
  %2807 = load double, double* inttoptr (i64 6299864 to double*)
  %2808 = fadd double %2803, %2807
  %2809 = bitcast i8* %2798 to double*
  store double %2808, double* %2809, align 1
  %2810 = getelementptr inbounds i8, i8* %2798, i64 8
  %2811 = bitcast i8* %2810 to i64*
  store i64 %2806, i64* %2811, align 1
  store %struct.Memory* %loadMem_400bf6, %struct.Memory** %MEMORY
  %loadMem_400bff = load %struct.Memory*, %struct.Memory** %MEMORY
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2813 = getelementptr inbounds %struct.GPR, %struct.GPR* %2812, i32 0, i32 33
  %2814 = getelementptr inbounds %struct.Reg, %struct.Reg* %2813, i32 0, i32 0
  %PC.i848 = bitcast %union.anon* %2814 to i64*
  %2815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2816 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2815, i64 0, i64 0
  %YMM0.i849 = bitcast %union.VectorReg* %2816 to %"class.std::bitset"*
  %2817 = bitcast %"class.std::bitset"* %YMM0.i849 to i8*
  %2818 = bitcast %"class.std::bitset"* %YMM0.i849 to i8*
  %2819 = load i64, i64* %PC.i848
  %2820 = add i64 %2819, 9
  store i64 %2820, i64* %PC.i848
  %2821 = bitcast i8* %2818 to double*
  %2822 = load double, double* %2821, align 1
  %2823 = getelementptr inbounds i8, i8* %2818, i64 8
  %2824 = bitcast i8* %2823 to i64*
  %2825 = load i64, i64* %2824, align 1
  %2826 = load double, double* inttoptr (i64 6299872 to double*)
  %2827 = fsub double %2822, %2826
  %2828 = bitcast i8* %2817 to double*
  store double %2827, double* %2828, align 1
  %2829 = getelementptr inbounds i8, i8* %2817, i64 8
  %2830 = bitcast i8* %2829 to i64*
  store i64 %2825, i64* %2830, align 1
  store %struct.Memory* %loadMem_400bff, %struct.Memory** %MEMORY
  %loadMem_400c08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2832 = getelementptr inbounds %struct.GPR, %struct.GPR* %2831, i32 0, i32 33
  %2833 = getelementptr inbounds %struct.Reg, %struct.Reg* %2832, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %2833 to i64*
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2835 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2834, i64 0, i64 0
  %YMM0.i847 = bitcast %union.VectorReg* %2835 to %"class.std::bitset"*
  %2836 = bitcast %"class.std::bitset"* %YMM0.i847 to i8*
  %2837 = bitcast %"class.std::bitset"* %YMM0.i847 to i8*
  %2838 = load i64, i64* %PC.i846
  %2839 = add i64 %2838, 9
  store i64 %2839, i64* %PC.i846
  %2840 = bitcast i8* %2837 to double*
  %2841 = load double, double* %2840, align 1
  %2842 = getelementptr inbounds i8, i8* %2837, i64 8
  %2843 = bitcast i8* %2842 to i64*
  %2844 = load i64, i64* %2843, align 1
  %2845 = load double, double* inttoptr (i64 6299800 to double*)
  %2846 = fmul double %2841, %2845
  %2847 = bitcast i8* %2836 to double*
  store double %2846, double* %2847, align 1
  %2848 = getelementptr inbounds i8, i8* %2836, i64 8
  %2849 = bitcast i8* %2848 to i64*
  store i64 %2844, i64* %2849, align 1
  store %struct.Memory* %loadMem_400c08, %struct.Memory** %MEMORY
  %loadMem_400c11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2851 = getelementptr inbounds %struct.GPR, %struct.GPR* %2850, i32 0, i32 33
  %2852 = getelementptr inbounds %struct.Reg, %struct.Reg* %2851, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %2852 to i64*
  %2853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2854 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2853, i64 0, i64 0
  %XMM0.i845 = bitcast %union.VectorReg* %2854 to %union.vec128_t*
  %2855 = bitcast %union.vec128_t* %XMM0.i845 to i8*
  %2856 = load i64, i64* %PC.i844
  %2857 = add i64 %2856, 9
  store i64 %2857, i64* %PC.i844
  %2858 = bitcast i8* %2855 to double*
  %2859 = load double, double* %2858, align 1
  store double %2859, double* inttoptr (i64 6299848 to double*)
  store %struct.Memory* %loadMem_400c11, %struct.Memory** %MEMORY
  %loadMem_400c1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2861 = getelementptr inbounds %struct.GPR, %struct.GPR* %2860, i32 0, i32 33
  %2862 = getelementptr inbounds %struct.Reg, %struct.Reg* %2861, i32 0, i32 0
  %PC.i842 = bitcast %union.anon* %2862 to i64*
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2864 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2863, i64 0, i64 0
  %YMM0.i843 = bitcast %union.VectorReg* %2864 to %"class.std::bitset"*
  %2865 = bitcast %"class.std::bitset"* %YMM0.i843 to i8*
  %2866 = load i64, i64* %PC.i842
  %2867 = add i64 %2866, 9
  store i64 %2867, i64* %PC.i842
  %2868 = load double, double* inttoptr (i64 6299848 to double*)
  %2869 = bitcast i8* %2865 to double*
  store double %2868, double* %2869, align 1
  %2870 = getelementptr inbounds i8, i8* %2865, i64 8
  %2871 = bitcast i8* %2870 to double*
  store double 0.000000e+00, double* %2871, align 1
  store %struct.Memory* %loadMem_400c1a, %struct.Memory** %MEMORY
  %loadMem_400c23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2873 = getelementptr inbounds %struct.GPR, %struct.GPR* %2872, i32 0, i32 33
  %2874 = getelementptr inbounds %struct.Reg, %struct.Reg* %2873, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %2874 to i64*
  %2875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2876 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2875, i64 0, i64 0
  %YMM0.i841 = bitcast %union.VectorReg* %2876 to %"class.std::bitset"*
  %2877 = bitcast %"class.std::bitset"* %YMM0.i841 to i8*
  %2878 = bitcast %"class.std::bitset"* %YMM0.i841 to i8*
  %2879 = load i64, i64* %PC.i840
  %2880 = add i64 %2879, 9
  store i64 %2880, i64* %PC.i840
  %2881 = bitcast i8* %2878 to double*
  %2882 = load double, double* %2881, align 1
  %2883 = getelementptr inbounds i8, i8* %2878, i64 8
  %2884 = bitcast i8* %2883 to i64*
  %2885 = load i64, i64* %2884, align 1
  %2886 = load double, double* inttoptr (i64 6299856 to double*)
  %2887 = fadd double %2882, %2886
  %2888 = bitcast i8* %2877 to double*
  store double %2887, double* %2888, align 1
  %2889 = getelementptr inbounds i8, i8* %2877, i64 8
  %2890 = bitcast i8* %2889 to i64*
  store i64 %2885, i64* %2890, align 1
  store %struct.Memory* %loadMem_400c23, %struct.Memory** %MEMORY
  %loadMem_400c2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2892 = getelementptr inbounds %struct.GPR, %struct.GPR* %2891, i32 0, i32 33
  %2893 = getelementptr inbounds %struct.Reg, %struct.Reg* %2892, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %2893 to i64*
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2895 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2894, i64 0, i64 0
  %YMM0.i839 = bitcast %union.VectorReg* %2895 to %"class.std::bitset"*
  %2896 = bitcast %"class.std::bitset"* %YMM0.i839 to i8*
  %2897 = bitcast %"class.std::bitset"* %YMM0.i839 to i8*
  %2898 = load i64, i64* %PC.i838
  %2899 = add i64 %2898, 9
  store i64 %2899, i64* %PC.i838
  %2900 = bitcast i8* %2897 to double*
  %2901 = load double, double* %2900, align 1
  %2902 = getelementptr inbounds i8, i8* %2897, i64 8
  %2903 = bitcast i8* %2902 to i64*
  %2904 = load i64, i64* %2903, align 1
  %2905 = load double, double* inttoptr (i64 6299864 to double*)
  %2906 = fsub double %2901, %2905
  %2907 = bitcast i8* %2896 to double*
  store double %2906, double* %2907, align 1
  %2908 = getelementptr inbounds i8, i8* %2896, i64 8
  %2909 = bitcast i8* %2908 to i64*
  store i64 %2904, i64* %2909, align 1
  store %struct.Memory* %loadMem_400c2c, %struct.Memory** %MEMORY
  %loadMem_400c35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2911 = getelementptr inbounds %struct.GPR, %struct.GPR* %2910, i32 0, i32 33
  %2912 = getelementptr inbounds %struct.Reg, %struct.Reg* %2911, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %2912 to i64*
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2914 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2913, i64 0, i64 0
  %YMM0.i837 = bitcast %union.VectorReg* %2914 to %"class.std::bitset"*
  %2915 = bitcast %"class.std::bitset"* %YMM0.i837 to i8*
  %2916 = bitcast %"class.std::bitset"* %YMM0.i837 to i8*
  %2917 = load i64, i64* %PC.i836
  %2918 = add i64 %2917, 9
  store i64 %2918, i64* %PC.i836
  %2919 = bitcast i8* %2916 to double*
  %2920 = load double, double* %2919, align 1
  %2921 = getelementptr inbounds i8, i8* %2916, i64 8
  %2922 = bitcast i8* %2921 to i64*
  %2923 = load i64, i64* %2922, align 1
  %2924 = load double, double* inttoptr (i64 6299872 to double*)
  %2925 = fadd double %2920, %2924
  %2926 = bitcast i8* %2915 to double*
  store double %2925, double* %2926, align 1
  %2927 = getelementptr inbounds i8, i8* %2915, i64 8
  %2928 = bitcast i8* %2927 to i64*
  store i64 %2923, i64* %2928, align 1
  store %struct.Memory* %loadMem_400c35, %struct.Memory** %MEMORY
  %loadMem_400c3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2930 = getelementptr inbounds %struct.GPR, %struct.GPR* %2929, i32 0, i32 33
  %2931 = getelementptr inbounds %struct.Reg, %struct.Reg* %2930, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %2931 to i64*
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2933 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2932, i64 0, i64 0
  %YMM0.i835 = bitcast %union.VectorReg* %2933 to %"class.std::bitset"*
  %2934 = bitcast %"class.std::bitset"* %YMM0.i835 to i8*
  %2935 = bitcast %"class.std::bitset"* %YMM0.i835 to i8*
  %2936 = load i64, i64* %PC.i834
  %2937 = add i64 %2936, 9
  store i64 %2937, i64* %PC.i834
  %2938 = bitcast i8* %2935 to double*
  %2939 = load double, double* %2938, align 1
  %2940 = getelementptr inbounds i8, i8* %2935, i64 8
  %2941 = bitcast i8* %2940 to i64*
  %2942 = load i64, i64* %2941, align 1
  %2943 = load double, double* inttoptr (i64 6299800 to double*)
  %2944 = fmul double %2939, %2943
  %2945 = bitcast i8* %2934 to double*
  store double %2944, double* %2945, align 1
  %2946 = getelementptr inbounds i8, i8* %2934, i64 8
  %2947 = bitcast i8* %2946 to i64*
  store i64 %2942, i64* %2947, align 1
  store %struct.Memory* %loadMem_400c3e, %struct.Memory** %MEMORY
  %loadMem_400c47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2949 = getelementptr inbounds %struct.GPR, %struct.GPR* %2948, i32 0, i32 33
  %2950 = getelementptr inbounds %struct.Reg, %struct.Reg* %2949, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %2950 to i64*
  %2951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2952 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2951, i64 0, i64 0
  %XMM0.i833 = bitcast %union.VectorReg* %2952 to %union.vec128_t*
  %2953 = bitcast %union.vec128_t* %XMM0.i833 to i8*
  %2954 = load i64, i64* %PC.i832
  %2955 = add i64 %2954, 9
  store i64 %2955, i64* %PC.i832
  %2956 = bitcast i8* %2953 to double*
  %2957 = load double, double* %2956, align 1
  store double %2957, double* inttoptr (i64 6299856 to double*)
  store %struct.Memory* %loadMem_400c47, %struct.Memory** %MEMORY
  %loadMem_400c50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2959 = getelementptr inbounds %struct.GPR, %struct.GPR* %2958, i32 0, i32 33
  %2960 = getelementptr inbounds %struct.Reg, %struct.Reg* %2959, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %2960 to i64*
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2962 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2961, i64 0, i64 0
  %YMM0.i831 = bitcast %union.VectorReg* %2962 to %"class.std::bitset"*
  %2963 = bitcast %"class.std::bitset"* %YMM0.i831 to i8*
  %2964 = load i64, i64* %PC.i830
  %2965 = add i64 %2964, 9
  store i64 %2965, i64* %PC.i830
  %2966 = load double, double* inttoptr (i64 6299848 to double*)
  %2967 = bitcast i8* %2963 to double*
  store double %2966, double* %2967, align 1
  %2968 = getelementptr inbounds i8, i8* %2963, i64 8
  %2969 = bitcast i8* %2968 to double*
  store double 0.000000e+00, double* %2969, align 1
  store %struct.Memory* %loadMem_400c50, %struct.Memory** %MEMORY
  %loadMem_400c59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2971 = getelementptr inbounds %struct.GPR, %struct.GPR* %2970, i32 0, i32 33
  %2972 = getelementptr inbounds %struct.Reg, %struct.Reg* %2971, i32 0, i32 0
  %PC.i828 = bitcast %union.anon* %2972 to i64*
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2974 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2973, i64 0, i64 0
  %YMM0.i829 = bitcast %union.VectorReg* %2974 to %"class.std::bitset"*
  %2975 = bitcast %"class.std::bitset"* %YMM0.i829 to i8*
  %2976 = bitcast %"class.std::bitset"* %YMM0.i829 to i8*
  %2977 = load i64, i64* %PC.i828
  %2978 = add i64 %2977, 9
  store i64 %2978, i64* %PC.i828
  %2979 = bitcast i8* %2976 to double*
  %2980 = load double, double* %2979, align 1
  %2981 = getelementptr inbounds i8, i8* %2976, i64 8
  %2982 = bitcast i8* %2981 to i64*
  %2983 = load i64, i64* %2982, align 1
  %2984 = load double, double* inttoptr (i64 6299856 to double*)
  %2985 = fsub double %2980, %2984
  %2986 = bitcast i8* %2975 to double*
  store double %2985, double* %2986, align 1
  %2987 = getelementptr inbounds i8, i8* %2975, i64 8
  %2988 = bitcast i8* %2987 to i64*
  store i64 %2983, i64* %2988, align 1
  store %struct.Memory* %loadMem_400c59, %struct.Memory** %MEMORY
  %loadMem_400c62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2990 = getelementptr inbounds %struct.GPR, %struct.GPR* %2989, i32 0, i32 33
  %2991 = getelementptr inbounds %struct.Reg, %struct.Reg* %2990, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %2991 to i64*
  %2992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2993 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2992, i64 0, i64 0
  %YMM0.i827 = bitcast %union.VectorReg* %2993 to %"class.std::bitset"*
  %2994 = bitcast %"class.std::bitset"* %YMM0.i827 to i8*
  %2995 = bitcast %"class.std::bitset"* %YMM0.i827 to i8*
  %2996 = load i64, i64* %PC.i826
  %2997 = add i64 %2996, 9
  store i64 %2997, i64* %PC.i826
  %2998 = bitcast i8* %2995 to double*
  %2999 = load double, double* %2998, align 1
  %3000 = getelementptr inbounds i8, i8* %2995, i64 8
  %3001 = bitcast i8* %3000 to i64*
  %3002 = load i64, i64* %3001, align 1
  %3003 = load double, double* inttoptr (i64 6299864 to double*)
  %3004 = fadd double %2999, %3003
  %3005 = bitcast i8* %2994 to double*
  store double %3004, double* %3005, align 1
  %3006 = getelementptr inbounds i8, i8* %2994, i64 8
  %3007 = bitcast i8* %3006 to i64*
  store i64 %3002, i64* %3007, align 1
  store %struct.Memory* %loadMem_400c62, %struct.Memory** %MEMORY
  %loadMem_400c6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3009 = getelementptr inbounds %struct.GPR, %struct.GPR* %3008, i32 0, i32 33
  %3010 = getelementptr inbounds %struct.Reg, %struct.Reg* %3009, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %3010 to i64*
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3012 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3011, i64 0, i64 0
  %YMM0.i825 = bitcast %union.VectorReg* %3012 to %"class.std::bitset"*
  %3013 = bitcast %"class.std::bitset"* %YMM0.i825 to i8*
  %3014 = bitcast %"class.std::bitset"* %YMM0.i825 to i8*
  %3015 = load i64, i64* %PC.i824
  %3016 = add i64 %3015, 9
  store i64 %3016, i64* %PC.i824
  %3017 = bitcast i8* %3014 to double*
  %3018 = load double, double* %3017, align 1
  %3019 = getelementptr inbounds i8, i8* %3014, i64 8
  %3020 = bitcast i8* %3019 to i64*
  %3021 = load i64, i64* %3020, align 1
  %3022 = load double, double* inttoptr (i64 6299872 to double*)
  %3023 = fadd double %3018, %3022
  %3024 = bitcast i8* %3013 to double*
  store double %3023, double* %3024, align 1
  %3025 = getelementptr inbounds i8, i8* %3013, i64 8
  %3026 = bitcast i8* %3025 to i64*
  store i64 %3021, i64* %3026, align 1
  store %struct.Memory* %loadMem_400c6b, %struct.Memory** %MEMORY
  %loadMem_400c74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3028 = getelementptr inbounds %struct.GPR, %struct.GPR* %3027, i32 0, i32 33
  %3029 = getelementptr inbounds %struct.Reg, %struct.Reg* %3028, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %3029 to i64*
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3031 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3030, i64 0, i64 0
  %YMM0.i823 = bitcast %union.VectorReg* %3031 to %"class.std::bitset"*
  %3032 = bitcast %"class.std::bitset"* %YMM0.i823 to i8*
  %3033 = bitcast %"class.std::bitset"* %YMM0.i823 to i8*
  %3034 = load i64, i64* %PC.i822
  %3035 = add i64 %3034, 9
  store i64 %3035, i64* %PC.i822
  %3036 = bitcast i8* %3033 to double*
  %3037 = load double, double* %3036, align 1
  %3038 = getelementptr inbounds i8, i8* %3033, i64 8
  %3039 = bitcast i8* %3038 to i64*
  %3040 = load i64, i64* %3039, align 1
  %3041 = load double, double* inttoptr (i64 6299800 to double*)
  %3042 = fmul double %3037, %3041
  %3043 = bitcast i8* %3032 to double*
  store double %3042, double* %3043, align 1
  %3044 = getelementptr inbounds i8, i8* %3032, i64 8
  %3045 = bitcast i8* %3044 to i64*
  store i64 %3040, i64* %3045, align 1
  store %struct.Memory* %loadMem_400c74, %struct.Memory** %MEMORY
  %loadMem_400c7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3047 = getelementptr inbounds %struct.GPR, %struct.GPR* %3046, i32 0, i32 33
  %3048 = getelementptr inbounds %struct.Reg, %struct.Reg* %3047, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %3048 to i64*
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3050 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3049, i64 0, i64 0
  %XMM0.i821 = bitcast %union.VectorReg* %3050 to %union.vec128_t*
  %3051 = bitcast %union.vec128_t* %XMM0.i821 to i8*
  %3052 = load i64, i64* %PC.i820
  %3053 = add i64 %3052, 9
  store i64 %3053, i64* %PC.i820
  %3054 = bitcast i8* %3051 to double*
  %3055 = load double, double* %3054, align 1
  store double %3055, double* inttoptr (i64 6299864 to double*)
  store %struct.Memory* %loadMem_400c7d, %struct.Memory** %MEMORY
  %loadMem_400c86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3057 = getelementptr inbounds %struct.GPR, %struct.GPR* %3056, i32 0, i32 33
  %3058 = getelementptr inbounds %struct.Reg, %struct.Reg* %3057, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %3058 to i64*
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3060 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3059, i64 0, i64 0
  %YMM0.i819 = bitcast %union.VectorReg* %3060 to %"class.std::bitset"*
  %3061 = bitcast %"class.std::bitset"* %YMM0.i819 to i8*
  %3062 = load i64, i64* %PC.i818
  %3063 = add i64 %3062, 9
  store i64 %3063, i64* %PC.i818
  %3064 = load double, double* inttoptr (i64 6299848 to double*)
  %3065 = bitcast i8* %3061 to double*
  store double %3064, double* %3065, align 1
  %3066 = getelementptr inbounds i8, i8* %3061, i64 8
  %3067 = bitcast i8* %3066 to double*
  store double 0.000000e+00, double* %3067, align 1
  store %struct.Memory* %loadMem_400c86, %struct.Memory** %MEMORY
  %loadMem_400c8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3069 = getelementptr inbounds %struct.GPR, %struct.GPR* %3068, i32 0, i32 33
  %3070 = getelementptr inbounds %struct.Reg, %struct.Reg* %3069, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %3070 to i64*
  %3071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3072 = getelementptr inbounds %struct.GPR, %struct.GPR* %3071, i32 0, i32 5
  %3073 = getelementptr inbounds %struct.Reg, %struct.Reg* %3072, i32 0, i32 0
  %RCX.i816 = bitcast %union.anon* %3073 to i64*
  %3074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3075 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3074, i64 0, i64 0
  %XMM0.i817 = bitcast %union.VectorReg* %3075 to %union.vec128_t*
  %3076 = bitcast %union.vec128_t* %XMM0.i817 to i8*
  %3077 = load i64, i64* %PC.i815
  %3078 = add i64 %3077, 5
  store i64 %3078, i64* %PC.i815
  %3079 = bitcast i8* %3076 to i64*
  %3080 = load i64, i64* %3079, align 1
  store i64 %3080, i64* %RCX.i816, align 1
  store %struct.Memory* %loadMem_400c8f, %struct.Memory** %MEMORY
  %loadMem_400c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3082 = getelementptr inbounds %struct.GPR, %struct.GPR* %3081, i32 0, i32 33
  %3083 = getelementptr inbounds %struct.Reg, %struct.Reg* %3082, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %3083 to i64*
  %3084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3085 = getelementptr inbounds %struct.GPR, %struct.GPR* %3084, i32 0, i32 1
  %3086 = getelementptr inbounds %struct.Reg, %struct.Reg* %3085, i32 0, i32 0
  %RAX.i813 = bitcast %union.anon* %3086 to i64*
  %3087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3088 = getelementptr inbounds %struct.GPR, %struct.GPR* %3087, i32 0, i32 5
  %3089 = getelementptr inbounds %struct.Reg, %struct.Reg* %3088, i32 0, i32 0
  %RCX.i814 = bitcast %union.anon* %3089 to i64*
  %3090 = load i64, i64* %RCX.i814
  %3091 = load i64, i64* %RAX.i813
  %3092 = load i64, i64* %PC.i812
  %3093 = add i64 %3092, 3
  store i64 %3093, i64* %PC.i812
  %3094 = xor i64 %3091, %3090
  store i64 %3094, i64* %RCX.i814, align 8
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3095, align 1
  %3096 = trunc i64 %3094 to i32
  %3097 = and i32 %3096, 255
  %3098 = call i32 @llvm.ctpop.i32(i32 %3097)
  %3099 = trunc i32 %3098 to i8
  %3100 = and i8 %3099, 1
  %3101 = xor i8 %3100, 1
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3101, i8* %3102, align 1
  %3103 = icmp eq i64 %3094, 0
  %3104 = zext i1 %3103 to i8
  %3105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3104, i8* %3105, align 1
  %3106 = lshr i64 %3094, 63
  %3107 = trunc i64 %3106 to i8
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3107, i8* %3108, align 1
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3109, align 1
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3110, align 1
  store %struct.Memory* %loadMem_400c94, %struct.Memory** %MEMORY
  %loadMem_400c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3112 = getelementptr inbounds %struct.GPR, %struct.GPR* %3111, i32 0, i32 33
  %3113 = getelementptr inbounds %struct.Reg, %struct.Reg* %3112, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %3113 to i64*
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3115 = getelementptr inbounds %struct.GPR, %struct.GPR* %3114, i32 0, i32 5
  %3116 = getelementptr inbounds %struct.Reg, %struct.Reg* %3115, i32 0, i32 0
  %RCX.i810 = bitcast %union.anon* %3116 to i64*
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3118 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3117, i64 0, i64 0
  %YMM0.i811 = bitcast %union.VectorReg* %3118 to %"class.std::bitset"*
  %3119 = bitcast %"class.std::bitset"* %YMM0.i811 to i8*
  %3120 = load i64, i64* %RCX.i810
  %3121 = load i64, i64* %PC.i809
  %3122 = add i64 %3121, 5
  store i64 %3122, i64* %PC.i809
  %3123 = bitcast i8* %3119 to i64*
  store i64 %3120, i64* %3123, align 1
  %3124 = getelementptr inbounds i8, i8* %3119, i64 8
  %3125 = bitcast i8* %3124 to i64*
  store i64 0, i64* %3125, align 1
  store %struct.Memory* %loadMem_400c97, %struct.Memory** %MEMORY
  %loadMem_400c9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3127 = getelementptr inbounds %struct.GPR, %struct.GPR* %3126, i32 0, i32 33
  %3128 = getelementptr inbounds %struct.Reg, %struct.Reg* %3127, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %3128 to i64*
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3130 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3129, i64 0, i64 0
  %YMM0.i808 = bitcast %union.VectorReg* %3130 to %"class.std::bitset"*
  %3131 = bitcast %"class.std::bitset"* %YMM0.i808 to i8*
  %3132 = bitcast %"class.std::bitset"* %YMM0.i808 to i8*
  %3133 = load i64, i64* %PC.i807
  %3134 = add i64 %3133, 9
  store i64 %3134, i64* %PC.i807
  %3135 = bitcast i8* %3132 to double*
  %3136 = load double, double* %3135, align 1
  %3137 = getelementptr inbounds i8, i8* %3132, i64 8
  %3138 = bitcast i8* %3137 to i64*
  %3139 = load i64, i64* %3138, align 1
  %3140 = load double, double* inttoptr (i64 6299856 to double*)
  %3141 = fadd double %3136, %3140
  %3142 = bitcast i8* %3131 to double*
  store double %3141, double* %3142, align 1
  %3143 = getelementptr inbounds i8, i8* %3131, i64 8
  %3144 = bitcast i8* %3143 to i64*
  store i64 %3139, i64* %3144, align 1
  store %struct.Memory* %loadMem_400c9c, %struct.Memory** %MEMORY
  %loadMem_400ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3146 = getelementptr inbounds %struct.GPR, %struct.GPR* %3145, i32 0, i32 33
  %3147 = getelementptr inbounds %struct.Reg, %struct.Reg* %3146, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %3147 to i64*
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3149 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3148, i64 0, i64 0
  %YMM0.i806 = bitcast %union.VectorReg* %3149 to %"class.std::bitset"*
  %3150 = bitcast %"class.std::bitset"* %YMM0.i806 to i8*
  %3151 = bitcast %"class.std::bitset"* %YMM0.i806 to i8*
  %3152 = load i64, i64* %PC.i805
  %3153 = add i64 %3152, 9
  store i64 %3153, i64* %PC.i805
  %3154 = bitcast i8* %3151 to double*
  %3155 = load double, double* %3154, align 1
  %3156 = getelementptr inbounds i8, i8* %3151, i64 8
  %3157 = bitcast i8* %3156 to i64*
  %3158 = load i64, i64* %3157, align 1
  %3159 = load double, double* inttoptr (i64 6299864 to double*)
  %3160 = fadd double %3155, %3159
  %3161 = bitcast i8* %3150 to double*
  store double %3160, double* %3161, align 1
  %3162 = getelementptr inbounds i8, i8* %3150, i64 8
  %3163 = bitcast i8* %3162 to i64*
  store i64 %3158, i64* %3163, align 1
  store %struct.Memory* %loadMem_400ca5, %struct.Memory** %MEMORY
  %loadMem_400cae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3165 = getelementptr inbounds %struct.GPR, %struct.GPR* %3164, i32 0, i32 33
  %3166 = getelementptr inbounds %struct.Reg, %struct.Reg* %3165, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %3166 to i64*
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3168 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3167, i64 0, i64 0
  %YMM0.i804 = bitcast %union.VectorReg* %3168 to %"class.std::bitset"*
  %3169 = bitcast %"class.std::bitset"* %YMM0.i804 to i8*
  %3170 = bitcast %"class.std::bitset"* %YMM0.i804 to i8*
  %3171 = load i64, i64* %PC.i803
  %3172 = add i64 %3171, 9
  store i64 %3172, i64* %PC.i803
  %3173 = bitcast i8* %3170 to double*
  %3174 = load double, double* %3173, align 1
  %3175 = getelementptr inbounds i8, i8* %3170, i64 8
  %3176 = bitcast i8* %3175 to i64*
  %3177 = load i64, i64* %3176, align 1
  %3178 = load double, double* inttoptr (i64 6299872 to double*)
  %3179 = fadd double %3174, %3178
  %3180 = bitcast i8* %3169 to double*
  store double %3179, double* %3180, align 1
  %3181 = getelementptr inbounds i8, i8* %3169, i64 8
  %3182 = bitcast i8* %3181 to i64*
  store i64 %3177, i64* %3182, align 1
  store %struct.Memory* %loadMem_400cae, %struct.Memory** %MEMORY
  %loadMem_400cb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3184 = getelementptr inbounds %struct.GPR, %struct.GPR* %3183, i32 0, i32 33
  %3185 = getelementptr inbounds %struct.Reg, %struct.Reg* %3184, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %3185 to i64*
  %3186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3187 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3186, i64 0, i64 0
  %YMM0.i802 = bitcast %union.VectorReg* %3187 to %"class.std::bitset"*
  %3188 = bitcast %"class.std::bitset"* %YMM0.i802 to i8*
  %3189 = bitcast %"class.std::bitset"* %YMM0.i802 to i8*
  %3190 = load i64, i64* %PC.i801
  %3191 = add i64 %3190, 9
  store i64 %3191, i64* %PC.i801
  %3192 = bitcast i8* %3189 to double*
  %3193 = load double, double* %3192, align 1
  %3194 = getelementptr inbounds i8, i8* %3189, i64 8
  %3195 = bitcast i8* %3194 to i64*
  %3196 = load i64, i64* %3195, align 1
  %3197 = load double, double* inttoptr (i64 6299800 to double*)
  %3198 = fmul double %3193, %3197
  %3199 = bitcast i8* %3188 to double*
  store double %3198, double* %3199, align 1
  %3200 = getelementptr inbounds i8, i8* %3188, i64 8
  %3201 = bitcast i8* %3200 to i64*
  store i64 %3196, i64* %3201, align 1
  store %struct.Memory* %loadMem_400cb7, %struct.Memory** %MEMORY
  %loadMem_400cc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3203 = getelementptr inbounds %struct.GPR, %struct.GPR* %3202, i32 0, i32 33
  %3204 = getelementptr inbounds %struct.Reg, %struct.Reg* %3203, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %3204 to i64*
  %3205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3206 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3205, i64 0, i64 0
  %XMM0.i800 = bitcast %union.VectorReg* %3206 to %union.vec128_t*
  %3207 = bitcast %union.vec128_t* %XMM0.i800 to i8*
  %3208 = load i64, i64* %PC.i799
  %3209 = add i64 %3208, 9
  store i64 %3209, i64* %PC.i799
  %3210 = bitcast i8* %3207 to double*
  %3211 = load double, double* %3210, align 1
  store double %3211, double* inttoptr (i64 6299872 to double*)
  store %struct.Memory* %loadMem_400cc0, %struct.Memory** %MEMORY
  %loadMem_400cc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3213 = getelementptr inbounds %struct.GPR, %struct.GPR* %3212, i32 0, i32 33
  %3214 = getelementptr inbounds %struct.Reg, %struct.Reg* %3213, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %3214 to i64*
  %3215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3216 = getelementptr inbounds %struct.GPR, %struct.GPR* %3215, i32 0, i32 1
  %3217 = getelementptr inbounds %struct.Reg, %struct.Reg* %3216, i32 0, i32 0
  %RAX.i797 = bitcast %union.anon* %3217 to i64*
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3219 = getelementptr inbounds %struct.GPR, %struct.GPR* %3218, i32 0, i32 15
  %3220 = getelementptr inbounds %struct.Reg, %struct.Reg* %3219, i32 0, i32 0
  %RBP.i798 = bitcast %union.anon* %3220 to i64*
  %3221 = load i64, i64* %RBP.i798
  %3222 = sub i64 %3221, 24
  %3223 = load i64, i64* %PC.i796
  %3224 = add i64 %3223, 4
  store i64 %3224, i64* %PC.i796
  %3225 = inttoptr i64 %3222 to i64*
  %3226 = load i64, i64* %3225
  store i64 %3226, i64* %RAX.i797, align 8
  store %struct.Memory* %loadMem_400cc9, %struct.Memory** %MEMORY
  %loadMem_400ccd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3228 = getelementptr inbounds %struct.GPR, %struct.GPR* %3227, i32 0, i32 33
  %3229 = getelementptr inbounds %struct.Reg, %struct.Reg* %3228, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %3229 to i64*
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3231 = getelementptr inbounds %struct.GPR, %struct.GPR* %3230, i32 0, i32 1
  %3232 = getelementptr inbounds %struct.Reg, %struct.Reg* %3231, i32 0, i32 0
  %RAX.i795 = bitcast %union.anon* %3232 to i64*
  %3233 = load i64, i64* %RAX.i795
  %3234 = load i64, i64* %PC.i794
  %3235 = add i64 %3234, 4
  store i64 %3235, i64* %PC.i794
  %3236 = add i64 1, %3233
  store i64 %3236, i64* %RAX.i795, align 8
  %3237 = icmp ult i64 %3236, %3233
  %3238 = icmp ult i64 %3236, 1
  %3239 = or i1 %3237, %3238
  %3240 = zext i1 %3239 to i8
  %3241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3240, i8* %3241, align 1
  %3242 = trunc i64 %3236 to i32
  %3243 = and i32 %3242, 255
  %3244 = call i32 @llvm.ctpop.i32(i32 %3243)
  %3245 = trunc i32 %3244 to i8
  %3246 = and i8 %3245, 1
  %3247 = xor i8 %3246, 1
  %3248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3247, i8* %3248, align 1
  %3249 = xor i64 1, %3233
  %3250 = xor i64 %3249, %3236
  %3251 = lshr i64 %3250, 4
  %3252 = trunc i64 %3251 to i8
  %3253 = and i8 %3252, 1
  %3254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3253, i8* %3254, align 1
  %3255 = icmp eq i64 %3236, 0
  %3256 = zext i1 %3255 to i8
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3256, i8* %3257, align 1
  %3258 = lshr i64 %3236, 63
  %3259 = trunc i64 %3258 to i8
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3259, i8* %3260, align 1
  %3261 = lshr i64 %3233, 63
  %3262 = xor i64 %3258, %3261
  %3263 = add i64 %3262, %3258
  %3264 = icmp eq i64 %3263, 2
  %3265 = zext i1 %3264 to i8
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3265, i8* %3266, align 1
  store %struct.Memory* %loadMem_400ccd, %struct.Memory** %MEMORY
  %loadMem_400cd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3268 = getelementptr inbounds %struct.GPR, %struct.GPR* %3267, i32 0, i32 33
  %3269 = getelementptr inbounds %struct.Reg, %struct.Reg* %3268, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %3269 to i64*
  %3270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3271 = getelementptr inbounds %struct.GPR, %struct.GPR* %3270, i32 0, i32 1
  %3272 = getelementptr inbounds %struct.Reg, %struct.Reg* %3271, i32 0, i32 0
  %RAX.i792 = bitcast %union.anon* %3272 to i64*
  %3273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3274 = getelementptr inbounds %struct.GPR, %struct.GPR* %3273, i32 0, i32 15
  %3275 = getelementptr inbounds %struct.Reg, %struct.Reg* %3274, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %3275 to i64*
  %3276 = load i64, i64* %RBP.i793
  %3277 = sub i64 %3276, 24
  %3278 = load i64, i64* %RAX.i792
  %3279 = load i64, i64* %PC.i791
  %3280 = add i64 %3279, 4
  store i64 %3280, i64* %PC.i791
  %3281 = inttoptr i64 %3277 to i64*
  store i64 %3278, i64* %3281
  store %struct.Memory* %loadMem_400cd1, %struct.Memory** %MEMORY
  %loadMem_400cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3283 = getelementptr inbounds %struct.GPR, %struct.GPR* %3282, i32 0, i32 33
  %3284 = getelementptr inbounds %struct.Reg, %struct.Reg* %3283, i32 0, i32 0
  %PC.i790 = bitcast %union.anon* %3284 to i64*
  %3285 = load i64, i64* %PC.i790
  %3286 = add i64 %3285, -265
  %3287 = load i64, i64* %PC.i790
  %3288 = add i64 %3287, 5
  store i64 %3288, i64* %PC.i790
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3286, i64* %3289, align 8
  store %struct.Memory* %loadMem_400cd5, %struct.Memory** %MEMORY
  br label %block_.L_400bcc

block_.L_400cda:                                  ; preds = %block_.L_400bcc
  %loadMem_400cda = load %struct.Memory*, %struct.Memory** %MEMORY
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3291 = getelementptr inbounds %struct.GPR, %struct.GPR* %3290, i32 0, i32 33
  %3292 = getelementptr inbounds %struct.Reg, %struct.Reg* %3291, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %3292 to i64*
  %3293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3294 = getelementptr inbounds %struct.GPR, %struct.GPR* %3293, i32 0, i32 1
  %3295 = getelementptr inbounds %struct.Reg, %struct.Reg* %3294, i32 0, i32 0
  %RAX.i788 = bitcast %union.anon* %3295 to i64*
  %3296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3297 = getelementptr inbounds %struct.GPR, %struct.GPR* %3296, i32 0, i32 15
  %3298 = getelementptr inbounds %struct.Reg, %struct.Reg* %3297, i32 0, i32 0
  %RBP.i789 = bitcast %union.anon* %3298 to i64*
  %3299 = load i64, i64* %RBP.i789
  %3300 = sub i64 %3299, 176
  %3301 = load i64, i64* %PC.i787
  %3302 = add i64 %3301, 6
  store i64 %3302, i64* %PC.i787
  %3303 = inttoptr i64 %3300 to i32*
  %3304 = load i32, i32* %3303
  %3305 = zext i32 %3304 to i64
  store i64 %3305, i64* %RAX.i788, align 8
  store %struct.Memory* %loadMem_400cda, %struct.Memory** %MEMORY
  %loadMem_400ce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3307 = getelementptr inbounds %struct.GPR, %struct.GPR* %3306, i32 0, i32 33
  %3308 = getelementptr inbounds %struct.Reg, %struct.Reg* %3307, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %3308 to i64*
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3310 = getelementptr inbounds %struct.GPR, %struct.GPR* %3309, i32 0, i32 1
  %3311 = getelementptr inbounds %struct.Reg, %struct.Reg* %3310, i32 0, i32 0
  %EAX.i785 = bitcast %union.anon* %3311 to i32*
  %3312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3313 = getelementptr inbounds %struct.GPR, %struct.GPR* %3312, i32 0, i32 15
  %3314 = getelementptr inbounds %struct.Reg, %struct.Reg* %3313, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %3314 to i64*
  %3315 = load i32, i32* %EAX.i785
  %3316 = zext i32 %3315 to i64
  %3317 = load i64, i64* %RBP.i786
  %3318 = sub i64 %3317, 172
  %3319 = load i64, i64* %PC.i784
  %3320 = add i64 %3319, 6
  store i64 %3320, i64* %PC.i784
  %3321 = inttoptr i64 %3318 to i32*
  %3322 = load i32, i32* %3321
  %3323 = sub i32 %3315, %3322
  %3324 = icmp ult i32 %3315, %3322
  %3325 = zext i1 %3324 to i8
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3325, i8* %3326, align 1
  %3327 = and i32 %3323, 255
  %3328 = call i32 @llvm.ctpop.i32(i32 %3327)
  %3329 = trunc i32 %3328 to i8
  %3330 = and i8 %3329, 1
  %3331 = xor i8 %3330, 1
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3331, i8* %3332, align 1
  %3333 = xor i32 %3322, %3315
  %3334 = xor i32 %3333, %3323
  %3335 = lshr i32 %3334, 4
  %3336 = trunc i32 %3335 to i8
  %3337 = and i8 %3336, 1
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3337, i8* %3338, align 1
  %3339 = icmp eq i32 %3323, 0
  %3340 = zext i1 %3339 to i8
  %3341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3340, i8* %3341, align 1
  %3342 = lshr i32 %3323, 31
  %3343 = trunc i32 %3342 to i8
  %3344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3343, i8* %3344, align 1
  %3345 = lshr i32 %3315, 31
  %3346 = lshr i32 %3322, 31
  %3347 = xor i32 %3346, %3345
  %3348 = xor i32 %3342, %3345
  %3349 = add i32 %3348, %3347
  %3350 = icmp eq i32 %3349, 2
  %3351 = zext i1 %3350 to i8
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3351, i8* %3352, align 1
  store %struct.Memory* %loadMem_400ce0, %struct.Memory** %MEMORY
  %loadMem_400ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3354 = getelementptr inbounds %struct.GPR, %struct.GPR* %3353, i32 0, i32 33
  %3355 = getelementptr inbounds %struct.Reg, %struct.Reg* %3354, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %3355 to i64*
  %3356 = load i64, i64* %PC.i783
  %3357 = add i64 %3356, 59
  %3358 = load i64, i64* %PC.i783
  %3359 = add i64 %3358, 6
  %3360 = load i64, i64* %PC.i783
  %3361 = add i64 %3360, 6
  store i64 %3361, i64* %PC.i783
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3363 = load i8, i8* %3362, align 1
  %3364 = icmp eq i8 %3363, 0
  %3365 = zext i1 %3364 to i8
  store i8 %3365, i8* %BRANCH_TAKEN, align 1
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3367 = select i1 %3364, i64 %3357, i64 %3359
  store i64 %3367, i64* %3366, align 8
  store %struct.Memory* %loadMem_400ce6, %struct.Memory** %MEMORY
  %loadBr_400ce6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400ce6 = icmp eq i8 %loadBr_400ce6, 1
  br i1 %cmpBr_400ce6, label %block_.L_400d21, label %block_400cec

block_400cec:                                     ; preds = %block_.L_400cda
  %loadMem_400cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %3368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3369 = getelementptr inbounds %struct.GPR, %struct.GPR* %3368, i32 0, i32 33
  %3370 = getelementptr inbounds %struct.Reg, %struct.Reg* %3369, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %3370 to i64*
  %3371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3372 = getelementptr inbounds %struct.GPR, %struct.GPR* %3371, i32 0, i32 11
  %3373 = getelementptr inbounds %struct.Reg, %struct.Reg* %3372, i32 0, i32 0
  %RDI.i781 = bitcast %union.anon* %3373 to i64*
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3375 = getelementptr inbounds %struct.GPR, %struct.GPR* %3374, i32 0, i32 15
  %3376 = getelementptr inbounds %struct.Reg, %struct.Reg* %3375, i32 0, i32 0
  %RBP.i782 = bitcast %union.anon* %3376 to i64*
  %3377 = load i64, i64* %RBP.i782
  %3378 = sub i64 %3377, 40
  %3379 = load i64, i64* %PC.i780
  %3380 = add i64 %3379, 4
  store i64 %3380, i64* %PC.i780
  %3381 = inttoptr i64 %3378 to i64*
  %3382 = load i64, i64* %3381
  store i64 %3382, i64* %RDI.i781, align 8
  store %struct.Memory* %loadMem_400cec, %struct.Memory** %MEMORY
  %loadMem_400cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3384 = getelementptr inbounds %struct.GPR, %struct.GPR* %3383, i32 0, i32 33
  %3385 = getelementptr inbounds %struct.Reg, %struct.Reg* %3384, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %3385 to i64*
  %3386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3387 = getelementptr inbounds %struct.GPR, %struct.GPR* %3386, i32 0, i32 9
  %3388 = getelementptr inbounds %struct.Reg, %struct.Reg* %3387, i32 0, i32 0
  %RSI.i778 = bitcast %union.anon* %3388 to i64*
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3390 = getelementptr inbounds %struct.GPR, %struct.GPR* %3389, i32 0, i32 15
  %3391 = getelementptr inbounds %struct.Reg, %struct.Reg* %3390, i32 0, i32 0
  %RBP.i779 = bitcast %union.anon* %3391 to i64*
  %3392 = load i64, i64* %RBP.i779
  %3393 = sub i64 %3392, 48
  %3394 = load i64, i64* %PC.i777
  %3395 = add i64 %3394, 4
  store i64 %3395, i64* %PC.i777
  %3396 = inttoptr i64 %3393 to i64*
  %3397 = load i64, i64* %3396
  store i64 %3397, i64* %RSI.i778, align 8
  store %struct.Memory* %loadMem_400cf0, %struct.Memory** %MEMORY
  %loadMem_400cf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3399 = getelementptr inbounds %struct.GPR, %struct.GPR* %3398, i32 0, i32 33
  %3400 = getelementptr inbounds %struct.Reg, %struct.Reg* %3399, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %3400 to i64*
  %3401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3402 = getelementptr inbounds %struct.GPR, %struct.GPR* %3401, i32 0, i32 7
  %3403 = getelementptr inbounds %struct.Reg, %struct.Reg* %3402, i32 0, i32 0
  %RDX.i775 = bitcast %union.anon* %3403 to i64*
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3405 = getelementptr inbounds %struct.GPR, %struct.GPR* %3404, i32 0, i32 15
  %3406 = getelementptr inbounds %struct.Reg, %struct.Reg* %3405, i32 0, i32 0
  %RBP.i776 = bitcast %union.anon* %3406 to i64*
  %3407 = load i64, i64* %RBP.i776
  %3408 = sub i64 %3407, 40
  %3409 = load i64, i64* %PC.i774
  %3410 = add i64 %3409, 4
  store i64 %3410, i64* %PC.i774
  %3411 = inttoptr i64 %3408 to i64*
  %3412 = load i64, i64* %3411
  store i64 %3412, i64* %RDX.i775, align 8
  store %struct.Memory* %loadMem_400cf4, %struct.Memory** %MEMORY
  %loadMem_400cf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3414 = getelementptr inbounds %struct.GPR, %struct.GPR* %3413, i32 0, i32 33
  %3415 = getelementptr inbounds %struct.Reg, %struct.Reg* %3414, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %3415 to i64*
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3417 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3416, i64 0, i64 0
  %YMM0.i773 = bitcast %union.VectorReg* %3417 to %"class.std::bitset"*
  %3418 = bitcast %"class.std::bitset"* %YMM0.i773 to i8*
  %3419 = load i64, i64* %PC.i772
  %3420 = add i64 %3419, 9
  store i64 %3420, i64* %PC.i772
  %3421 = load double, double* inttoptr (i64 6299848 to double*)
  %3422 = bitcast i8* %3418 to double*
  store double %3421, double* %3422, align 1
  %3423 = getelementptr inbounds i8, i8* %3418, i64 8
  %3424 = bitcast i8* %3423 to double*
  store double 0.000000e+00, double* %3424, align 1
  store %struct.Memory* %loadMem_400cf8, %struct.Memory** %MEMORY
  %loadMem_400d01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3426 = getelementptr inbounds %struct.GPR, %struct.GPR* %3425, i32 0, i32 33
  %3427 = getelementptr inbounds %struct.Reg, %struct.Reg* %3426, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %3427 to i64*
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3429 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3428, i64 0, i64 1
  %YMM1.i771 = bitcast %union.VectorReg* %3429 to %"class.std::bitset"*
  %3430 = bitcast %"class.std::bitset"* %YMM1.i771 to i8*
  %3431 = load i64, i64* %PC.i770
  %3432 = add i64 %3431, 9
  store i64 %3432, i64* %PC.i770
  %3433 = load double, double* inttoptr (i64 6299856 to double*)
  %3434 = bitcast i8* %3430 to double*
  store double %3433, double* %3434, align 1
  %3435 = getelementptr inbounds i8, i8* %3430, i64 8
  %3436 = bitcast i8* %3435 to double*
  store double 0.000000e+00, double* %3436, align 1
  store %struct.Memory* %loadMem_400d01, %struct.Memory** %MEMORY
  %loadMem_400d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3438 = getelementptr inbounds %struct.GPR, %struct.GPR* %3437, i32 0, i32 33
  %3439 = getelementptr inbounds %struct.Reg, %struct.Reg* %3438, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %3439 to i64*
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3441 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3440, i64 0, i64 2
  %YMM2.i769 = bitcast %union.VectorReg* %3441 to %"class.std::bitset"*
  %3442 = bitcast %"class.std::bitset"* %YMM2.i769 to i8*
  %3443 = load i64, i64* %PC.i768
  %3444 = add i64 %3443, 9
  store i64 %3444, i64* %PC.i768
  %3445 = load double, double* inttoptr (i64 6299864 to double*)
  %3446 = bitcast i8* %3442 to double*
  store double %3445, double* %3446, align 1
  %3447 = getelementptr inbounds i8, i8* %3442, i64 8
  %3448 = bitcast i8* %3447 to double*
  store double 0.000000e+00, double* %3448, align 1
  store %struct.Memory* %loadMem_400d0a, %struct.Memory** %MEMORY
  %loadMem_400d13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3450 = getelementptr inbounds %struct.GPR, %struct.GPR* %3449, i32 0, i32 33
  %3451 = getelementptr inbounds %struct.Reg, %struct.Reg* %3450, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %3451 to i64*
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3453 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3452, i64 0, i64 3
  %YMM3.i767 = bitcast %union.VectorReg* %3453 to %"class.std::bitset"*
  %3454 = bitcast %"class.std::bitset"* %YMM3.i767 to i8*
  %3455 = load i64, i64* %PC.i766
  %3456 = add i64 %3455, 9
  store i64 %3456, i64* %PC.i766
  %3457 = load double, double* inttoptr (i64 6299872 to double*)
  %3458 = bitcast i8* %3454 to double*
  store double %3457, double* %3458, align 1
  %3459 = getelementptr inbounds i8, i8* %3454, i64 8
  %3460 = bitcast i8* %3459 to double*
  store double 0.000000e+00, double* %3460, align 1
  store %struct.Memory* %loadMem_400d13, %struct.Memory** %MEMORY
  %loadMem1_400d1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3462 = getelementptr inbounds %struct.GPR, %struct.GPR* %3461, i32 0, i32 33
  %3463 = getelementptr inbounds %struct.Reg, %struct.Reg* %3462, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %3463 to i64*
  %3464 = load i64, i64* %PC.i765
  %3465 = add i64 %3464, 2244
  %3466 = load i64, i64* %PC.i765
  %3467 = add i64 %3466, 5
  %3468 = load i64, i64* %PC.i765
  %3469 = add i64 %3468, 5
  store i64 %3469, i64* %PC.i765
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3471 = load i64, i64* %3470, align 8
  %3472 = add i64 %3471, -8
  %3473 = inttoptr i64 %3472 to i64*
  store i64 %3467, i64* %3473
  store i64 %3472, i64* %3470, align 8
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3465, i64* %3474, align 8
  store %struct.Memory* %loadMem1_400d1c, %struct.Memory** %MEMORY
  %loadMem2_400d1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400d1c = load i64, i64* %3
  %call2_400d1c = call %struct.Memory* @sub_4015e0.POUT(%struct.State* %0, i64 %loadPC_400d1c, %struct.Memory* %loadMem2_400d1c)
  store %struct.Memory* %call2_400d1c, %struct.Memory** %MEMORY
  br label %block_.L_400d21

block_.L_400d21:                                  ; preds = %block_400cec, %block_.L_400cda
  %loadMem_400d21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3476 = getelementptr inbounds %struct.GPR, %struct.GPR* %3475, i32 0, i32 33
  %3477 = getelementptr inbounds %struct.Reg, %struct.Reg* %3476, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %3477 to i64*
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3479 = getelementptr inbounds %struct.GPR, %struct.GPR* %3478, i32 0, i32 15
  %3480 = getelementptr inbounds %struct.Reg, %struct.Reg* %3479, i32 0, i32 0
  %RBP.i764 = bitcast %union.anon* %3480 to i64*
  %3481 = load i64, i64* %RBP.i764
  %3482 = sub i64 %3481, 24
  %3483 = load i64, i64* %PC.i763
  %3484 = add i64 %3483, 8
  store i64 %3484, i64* %PC.i763
  %3485 = inttoptr i64 %3482 to i64*
  store i64 1, i64* %3485
  store %struct.Memory* %loadMem_400d21, %struct.Memory** %MEMORY
  br label %block_.L_400d29

block_.L_400d29:                                  ; preds = %block_400d37, %block_.L_400d21
  %loadMem_400d29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3487 = getelementptr inbounds %struct.GPR, %struct.GPR* %3486, i32 0, i32 33
  %3488 = getelementptr inbounds %struct.Reg, %struct.Reg* %3487, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %3488 to i64*
  %3489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3490 = getelementptr inbounds %struct.GPR, %struct.GPR* %3489, i32 0, i32 1
  %3491 = getelementptr inbounds %struct.Reg, %struct.Reg* %3490, i32 0, i32 0
  %RAX.i761 = bitcast %union.anon* %3491 to i64*
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 15
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %RBP.i762 = bitcast %union.anon* %3494 to i64*
  %3495 = load i64, i64* %RBP.i762
  %3496 = sub i64 %3495, 24
  %3497 = load i64, i64* %PC.i760
  %3498 = add i64 %3497, 4
  store i64 %3498, i64* %PC.i760
  %3499 = inttoptr i64 %3496 to i64*
  %3500 = load i64, i64* %3499
  store i64 %3500, i64* %RAX.i761, align 8
  store %struct.Memory* %loadMem_400d29, %struct.Memory** %MEMORY
  %loadMem_400d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3502 = getelementptr inbounds %struct.GPR, %struct.GPR* %3501, i32 0, i32 33
  %3503 = getelementptr inbounds %struct.Reg, %struct.Reg* %3502, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %3503 to i64*
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3505 = getelementptr inbounds %struct.GPR, %struct.GPR* %3504, i32 0, i32 1
  %3506 = getelementptr inbounds %struct.Reg, %struct.Reg* %3505, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %3506 to i64*
  %3507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3508 = getelementptr inbounds %struct.GPR, %struct.GPR* %3507, i32 0, i32 15
  %3509 = getelementptr inbounds %struct.Reg, %struct.Reg* %3508, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %3509 to i64*
  %3510 = load i64, i64* %RAX.i758
  %3511 = load i64, i64* %RBP.i759
  %3512 = sub i64 %3511, 48
  %3513 = load i64, i64* %PC.i757
  %3514 = add i64 %3513, 4
  store i64 %3514, i64* %PC.i757
  %3515 = inttoptr i64 %3512 to i64*
  %3516 = load i64, i64* %3515
  %3517 = sub i64 %3510, %3516
  %3518 = icmp ugt i64 %3516, %3510
  %3519 = zext i1 %3518 to i8
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3519, i8* %3520, align 1
  %3521 = trunc i64 %3517 to i32
  %3522 = and i32 %3521, 255
  %3523 = call i32 @llvm.ctpop.i32(i32 %3522)
  %3524 = trunc i32 %3523 to i8
  %3525 = and i8 %3524, 1
  %3526 = xor i8 %3525, 1
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3526, i8* %3527, align 1
  %3528 = xor i64 %3516, %3510
  %3529 = xor i64 %3528, %3517
  %3530 = lshr i64 %3529, 4
  %3531 = trunc i64 %3530 to i8
  %3532 = and i8 %3531, 1
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3532, i8* %3533, align 1
  %3534 = icmp eq i64 %3517, 0
  %3535 = zext i1 %3534 to i8
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3535, i8* %3536, align 1
  %3537 = lshr i64 %3517, 63
  %3538 = trunc i64 %3537 to i8
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3538, i8* %3539, align 1
  %3540 = lshr i64 %3510, 63
  %3541 = lshr i64 %3516, 63
  %3542 = xor i64 %3541, %3540
  %3543 = xor i64 %3537, %3540
  %3544 = add i64 %3543, %3542
  %3545 = icmp eq i64 %3544, 2
  %3546 = zext i1 %3545 to i8
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3546, i8* %3547, align 1
  store %struct.Memory* %loadMem_400d2d, %struct.Memory** %MEMORY
  %loadMem_400d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3549 = getelementptr inbounds %struct.GPR, %struct.GPR* %3548, i32 0, i32 33
  %3550 = getelementptr inbounds %struct.Reg, %struct.Reg* %3549, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %3550 to i64*
  %3551 = load i64, i64* %PC.i756
  %3552 = add i64 %3551, 38
  %3553 = load i64, i64* %PC.i756
  %3554 = add i64 %3553, 6
  %3555 = load i64, i64* %PC.i756
  %3556 = add i64 %3555, 6
  store i64 %3556, i64* %PC.i756
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3558 = load i8, i8* %3557, align 1
  %3559 = icmp eq i8 %3558, 0
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3561 = load i8, i8* %3560, align 1
  %3562 = icmp ne i8 %3561, 0
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3564 = load i8, i8* %3563, align 1
  %3565 = icmp ne i8 %3564, 0
  %3566 = xor i1 %3562, %3565
  %3567 = xor i1 %3566, true
  %3568 = and i1 %3559, %3567
  %3569 = zext i1 %3568 to i8
  store i8 %3569, i8* %BRANCH_TAKEN, align 1
  %3570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3571 = select i1 %3568, i64 %3552, i64 %3554
  store i64 %3571, i64* %3570, align 8
  store %struct.Memory* %loadMem_400d31, %struct.Memory** %MEMORY
  %loadBr_400d31 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d31 = icmp eq i8 %loadBr_400d31, 1
  br i1 %cmpBr_400d31, label %block_.L_400d57, label %block_400d37

block_400d37:                                     ; preds = %block_.L_400d29
  %loadMem_400d37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3573 = getelementptr inbounds %struct.GPR, %struct.GPR* %3572, i32 0, i32 33
  %3574 = getelementptr inbounds %struct.Reg, %struct.Reg* %3573, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %3574 to i64*
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3576 = getelementptr inbounds %struct.GPR, %struct.GPR* %3575, i32 0, i32 11
  %3577 = getelementptr inbounds %struct.Reg, %struct.Reg* %3576, i32 0, i32 0
  %RDI.i755 = bitcast %union.anon* %3577 to i64*
  %3578 = load i64, i64* %PC.i754
  %3579 = add i64 %3578, 10
  store i64 %3579, i64* %PC.i754
  store i64 6299840, i64* %RDI.i755, align 8
  store %struct.Memory* %loadMem_400d37, %struct.Memory** %MEMORY
  %loadMem1_400d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3581 = getelementptr inbounds %struct.GPR, %struct.GPR* %3580, i32 0, i32 33
  %3582 = getelementptr inbounds %struct.Reg, %struct.Reg* %3581, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %3582 to i64*
  %3583 = load i64, i64* %PC.i753
  %3584 = add i64 %3583, 2319
  %3585 = load i64, i64* %PC.i753
  %3586 = add i64 %3585, 5
  %3587 = load i64, i64* %PC.i753
  %3588 = add i64 %3587, 5
  store i64 %3588, i64* %PC.i753
  %3589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3590 = load i64, i64* %3589, align 8
  %3591 = add i64 %3590, -8
  %3592 = inttoptr i64 %3591 to i64*
  store i64 %3586, i64* %3592
  store i64 %3591, i64* %3589, align 8
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3584, i64* %3593, align 8
  store %struct.Memory* %loadMem1_400d41, %struct.Memory** %MEMORY
  %loadMem2_400d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400d41 = load i64, i64* %3
  %call2_400d41 = call %struct.Memory* @sub_401650.PA(%struct.State* %0, i64 %loadPC_400d41, %struct.Memory* %loadMem2_400d41)
  store %struct.Memory* %call2_400d41, %struct.Memory** %MEMORY
  %loadMem_400d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3595 = getelementptr inbounds %struct.GPR, %struct.GPR* %3594, i32 0, i32 33
  %3596 = getelementptr inbounds %struct.Reg, %struct.Reg* %3595, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %3596 to i64*
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 1
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %RAX.i751 = bitcast %union.anon* %3599 to i64*
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3601 = getelementptr inbounds %struct.GPR, %struct.GPR* %3600, i32 0, i32 15
  %3602 = getelementptr inbounds %struct.Reg, %struct.Reg* %3601, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %3602 to i64*
  %3603 = load i64, i64* %RBP.i752
  %3604 = sub i64 %3603, 24
  %3605 = load i64, i64* %PC.i750
  %3606 = add i64 %3605, 4
  store i64 %3606, i64* %PC.i750
  %3607 = inttoptr i64 %3604 to i64*
  %3608 = load i64, i64* %3607
  store i64 %3608, i64* %RAX.i751, align 8
  store %struct.Memory* %loadMem_400d46, %struct.Memory** %MEMORY
  %loadMem_400d4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3610 = getelementptr inbounds %struct.GPR, %struct.GPR* %3609, i32 0, i32 33
  %3611 = getelementptr inbounds %struct.Reg, %struct.Reg* %3610, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %3611 to i64*
  %3612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3613 = getelementptr inbounds %struct.GPR, %struct.GPR* %3612, i32 0, i32 1
  %3614 = getelementptr inbounds %struct.Reg, %struct.Reg* %3613, i32 0, i32 0
  %RAX.i749 = bitcast %union.anon* %3614 to i64*
  %3615 = load i64, i64* %RAX.i749
  %3616 = load i64, i64* %PC.i748
  %3617 = add i64 %3616, 4
  store i64 %3617, i64* %PC.i748
  %3618 = add i64 1, %3615
  store i64 %3618, i64* %RAX.i749, align 8
  %3619 = icmp ult i64 %3618, %3615
  %3620 = icmp ult i64 %3618, 1
  %3621 = or i1 %3619, %3620
  %3622 = zext i1 %3621 to i8
  %3623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3622, i8* %3623, align 1
  %3624 = trunc i64 %3618 to i32
  %3625 = and i32 %3624, 255
  %3626 = call i32 @llvm.ctpop.i32(i32 %3625)
  %3627 = trunc i32 %3626 to i8
  %3628 = and i8 %3627, 1
  %3629 = xor i8 %3628, 1
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3629, i8* %3630, align 1
  %3631 = xor i64 1, %3615
  %3632 = xor i64 %3631, %3618
  %3633 = lshr i64 %3632, 4
  %3634 = trunc i64 %3633 to i8
  %3635 = and i8 %3634, 1
  %3636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3635, i8* %3636, align 1
  %3637 = icmp eq i64 %3618, 0
  %3638 = zext i1 %3637 to i8
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3638, i8* %3639, align 1
  %3640 = lshr i64 %3618, 63
  %3641 = trunc i64 %3640 to i8
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3641, i8* %3642, align 1
  %3643 = lshr i64 %3615, 63
  %3644 = xor i64 %3640, %3643
  %3645 = add i64 %3644, %3640
  %3646 = icmp eq i64 %3645, 2
  %3647 = zext i1 %3646 to i8
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3647, i8* %3648, align 1
  store %struct.Memory* %loadMem_400d4a, %struct.Memory** %MEMORY
  %loadMem_400d4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3650 = getelementptr inbounds %struct.GPR, %struct.GPR* %3649, i32 0, i32 33
  %3651 = getelementptr inbounds %struct.Reg, %struct.Reg* %3650, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %3651 to i64*
  %3652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3653 = getelementptr inbounds %struct.GPR, %struct.GPR* %3652, i32 0, i32 1
  %3654 = getelementptr inbounds %struct.Reg, %struct.Reg* %3653, i32 0, i32 0
  %RAX.i746 = bitcast %union.anon* %3654 to i64*
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3656 = getelementptr inbounds %struct.GPR, %struct.GPR* %3655, i32 0, i32 15
  %3657 = getelementptr inbounds %struct.Reg, %struct.Reg* %3656, i32 0, i32 0
  %RBP.i747 = bitcast %union.anon* %3657 to i64*
  %3658 = load i64, i64* %RBP.i747
  %3659 = sub i64 %3658, 24
  %3660 = load i64, i64* %RAX.i746
  %3661 = load i64, i64* %PC.i745
  %3662 = add i64 %3661, 4
  store i64 %3662, i64* %PC.i745
  %3663 = inttoptr i64 %3659 to i64*
  store i64 %3660, i64* %3663
  store %struct.Memory* %loadMem_400d4e, %struct.Memory** %MEMORY
  %loadMem_400d52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3665 = getelementptr inbounds %struct.GPR, %struct.GPR* %3664, i32 0, i32 33
  %3666 = getelementptr inbounds %struct.Reg, %struct.Reg* %3665, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %3666 to i64*
  %3667 = load i64, i64* %PC.i744
  %3668 = add i64 %3667, -41
  %3669 = load i64, i64* %PC.i744
  %3670 = add i64 %3669, 5
  store i64 %3670, i64* %PC.i744
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3668, i64* %3671, align 8
  store %struct.Memory* %loadMem_400d52, %struct.Memory** %MEMORY
  br label %block_.L_400d29

block_.L_400d57:                                  ; preds = %block_.L_400d29
  %loadMem_400d57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3673 = getelementptr inbounds %struct.GPR, %struct.GPR* %3672, i32 0, i32 33
  %3674 = getelementptr inbounds %struct.Reg, %struct.Reg* %3673, i32 0, i32 0
  %PC.i741 = bitcast %union.anon* %3674 to i64*
  %3675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3676 = getelementptr inbounds %struct.GPR, %struct.GPR* %3675, i32 0, i32 1
  %3677 = getelementptr inbounds %struct.Reg, %struct.Reg* %3676, i32 0, i32 0
  %RAX.i742 = bitcast %union.anon* %3677 to i64*
  %3678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3679 = getelementptr inbounds %struct.GPR, %struct.GPR* %3678, i32 0, i32 15
  %3680 = getelementptr inbounds %struct.Reg, %struct.Reg* %3679, i32 0, i32 0
  %RBP.i743 = bitcast %union.anon* %3680 to i64*
  %3681 = load i64, i64* %RBP.i743
  %3682 = sub i64 %3681, 176
  %3683 = load i64, i64* %PC.i741
  %3684 = add i64 %3683, 6
  store i64 %3684, i64* %PC.i741
  %3685 = inttoptr i64 %3682 to i32*
  %3686 = load i32, i32* %3685
  %3687 = zext i32 %3686 to i64
  store i64 %3687, i64* %RAX.i742, align 8
  store %struct.Memory* %loadMem_400d57, %struct.Memory** %MEMORY
  %loadMem_400d5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3689 = getelementptr inbounds %struct.GPR, %struct.GPR* %3688, i32 0, i32 33
  %3690 = getelementptr inbounds %struct.Reg, %struct.Reg* %3689, i32 0, i32 0
  %PC.i738 = bitcast %union.anon* %3690 to i64*
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3692 = getelementptr inbounds %struct.GPR, %struct.GPR* %3691, i32 0, i32 1
  %3693 = getelementptr inbounds %struct.Reg, %struct.Reg* %3692, i32 0, i32 0
  %EAX.i739 = bitcast %union.anon* %3693 to i32*
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3695 = getelementptr inbounds %struct.GPR, %struct.GPR* %3694, i32 0, i32 15
  %3696 = getelementptr inbounds %struct.Reg, %struct.Reg* %3695, i32 0, i32 0
  %RBP.i740 = bitcast %union.anon* %3696 to i64*
  %3697 = load i32, i32* %EAX.i739
  %3698 = zext i32 %3697 to i64
  %3699 = load i64, i64* %RBP.i740
  %3700 = sub i64 %3699, 172
  %3701 = load i64, i64* %PC.i738
  %3702 = add i64 %3701, 6
  store i64 %3702, i64* %PC.i738
  %3703 = inttoptr i64 %3700 to i32*
  %3704 = load i32, i32* %3703
  %3705 = sub i32 %3697, %3704
  %3706 = icmp ult i32 %3697, %3704
  %3707 = zext i1 %3706 to i8
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3707, i8* %3708, align 1
  %3709 = and i32 %3705, 255
  %3710 = call i32 @llvm.ctpop.i32(i32 %3709)
  %3711 = trunc i32 %3710 to i8
  %3712 = and i8 %3711, 1
  %3713 = xor i8 %3712, 1
  %3714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3713, i8* %3714, align 1
  %3715 = xor i32 %3704, %3697
  %3716 = xor i32 %3715, %3705
  %3717 = lshr i32 %3716, 4
  %3718 = trunc i32 %3717 to i8
  %3719 = and i8 %3718, 1
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3719, i8* %3720, align 1
  %3721 = icmp eq i32 %3705, 0
  %3722 = zext i1 %3721 to i8
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3722, i8* %3723, align 1
  %3724 = lshr i32 %3705, 31
  %3725 = trunc i32 %3724 to i8
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3725, i8* %3726, align 1
  %3727 = lshr i32 %3697, 31
  %3728 = lshr i32 %3704, 31
  %3729 = xor i32 %3728, %3727
  %3730 = xor i32 %3724, %3727
  %3731 = add i32 %3730, %3729
  %3732 = icmp eq i32 %3731, 2
  %3733 = zext i1 %3732 to i8
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3733, i8* %3734, align 1
  store %struct.Memory* %loadMem_400d5d, %struct.Memory** %MEMORY
  %loadMem_400d63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3736 = getelementptr inbounds %struct.GPR, %struct.GPR* %3735, i32 0, i32 33
  %3737 = getelementptr inbounds %struct.Reg, %struct.Reg* %3736, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %3737 to i64*
  %3738 = load i64, i64* %PC.i737
  %3739 = add i64 %3738, 59
  %3740 = load i64, i64* %PC.i737
  %3741 = add i64 %3740, 6
  %3742 = load i64, i64* %PC.i737
  %3743 = add i64 %3742, 6
  store i64 %3743, i64* %PC.i737
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3745 = load i8, i8* %3744, align 1
  %3746 = icmp eq i8 %3745, 0
  %3747 = zext i1 %3746 to i8
  store i8 %3747, i8* %BRANCH_TAKEN, align 1
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3749 = select i1 %3746, i64 %3739, i64 %3741
  store i64 %3749, i64* %3748, align 8
  store %struct.Memory* %loadMem_400d63, %struct.Memory** %MEMORY
  %loadBr_400d63 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d63 = icmp eq i8 %loadBr_400d63, 1
  br i1 %cmpBr_400d63, label %block_.L_400d9e, label %block_400d69

block_400d69:                                     ; preds = %block_.L_400d57
  %loadMem_400d69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3751 = getelementptr inbounds %struct.GPR, %struct.GPR* %3750, i32 0, i32 33
  %3752 = getelementptr inbounds %struct.Reg, %struct.Reg* %3751, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %3752 to i64*
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3754 = getelementptr inbounds %struct.GPR, %struct.GPR* %3753, i32 0, i32 11
  %3755 = getelementptr inbounds %struct.Reg, %struct.Reg* %3754, i32 0, i32 0
  %RDI.i735 = bitcast %union.anon* %3755 to i64*
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3757 = getelementptr inbounds %struct.GPR, %struct.GPR* %3756, i32 0, i32 15
  %3758 = getelementptr inbounds %struct.Reg, %struct.Reg* %3757, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %3758 to i64*
  %3759 = load i64, i64* %RBP.i736
  %3760 = sub i64 %3759, 48
  %3761 = load i64, i64* %PC.i734
  %3762 = add i64 %3761, 4
  store i64 %3762, i64* %PC.i734
  %3763 = inttoptr i64 %3760 to i64*
  %3764 = load i64, i64* %3763
  store i64 %3764, i64* %RDI.i735, align 8
  store %struct.Memory* %loadMem_400d69, %struct.Memory** %MEMORY
  %loadMem_400d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3766 = getelementptr inbounds %struct.GPR, %struct.GPR* %3765, i32 0, i32 33
  %3767 = getelementptr inbounds %struct.Reg, %struct.Reg* %3766, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %3767 to i64*
  %3768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3769 = getelementptr inbounds %struct.GPR, %struct.GPR* %3768, i32 0, i32 9
  %3770 = getelementptr inbounds %struct.Reg, %struct.Reg* %3769, i32 0, i32 0
  %RSI.i732 = bitcast %union.anon* %3770 to i64*
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3772 = getelementptr inbounds %struct.GPR, %struct.GPR* %3771, i32 0, i32 15
  %3773 = getelementptr inbounds %struct.Reg, %struct.Reg* %3772, i32 0, i32 0
  %RBP.i733 = bitcast %union.anon* %3773 to i64*
  %3774 = load i64, i64* %RBP.i733
  %3775 = sub i64 %3774, 40
  %3776 = load i64, i64* %PC.i731
  %3777 = add i64 %3776, 4
  store i64 %3777, i64* %PC.i731
  %3778 = inttoptr i64 %3775 to i64*
  %3779 = load i64, i64* %3778
  store i64 %3779, i64* %RSI.i732, align 8
  store %struct.Memory* %loadMem_400d6d, %struct.Memory** %MEMORY
  %loadMem_400d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3781 = getelementptr inbounds %struct.GPR, %struct.GPR* %3780, i32 0, i32 33
  %3782 = getelementptr inbounds %struct.Reg, %struct.Reg* %3781, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %3782 to i64*
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3784 = getelementptr inbounds %struct.GPR, %struct.GPR* %3783, i32 0, i32 7
  %3785 = getelementptr inbounds %struct.Reg, %struct.Reg* %3784, i32 0, i32 0
  %RDX.i729 = bitcast %union.anon* %3785 to i64*
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 15
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %RBP.i730 = bitcast %union.anon* %3788 to i64*
  %3789 = load i64, i64* %RBP.i730
  %3790 = sub i64 %3789, 40
  %3791 = load i64, i64* %PC.i728
  %3792 = add i64 %3791, 4
  store i64 %3792, i64* %PC.i728
  %3793 = inttoptr i64 %3790 to i64*
  %3794 = load i64, i64* %3793
  store i64 %3794, i64* %RDX.i729, align 8
  store %struct.Memory* %loadMem_400d71, %struct.Memory** %MEMORY
  %loadMem_400d75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3796 = getelementptr inbounds %struct.GPR, %struct.GPR* %3795, i32 0, i32 33
  %3797 = getelementptr inbounds %struct.Reg, %struct.Reg* %3796, i32 0, i32 0
  %PC.i726 = bitcast %union.anon* %3797 to i64*
  %3798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3799 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3798, i64 0, i64 0
  %YMM0.i727 = bitcast %union.VectorReg* %3799 to %"class.std::bitset"*
  %3800 = bitcast %"class.std::bitset"* %YMM0.i727 to i8*
  %3801 = load i64, i64* %PC.i726
  %3802 = add i64 %3801, 9
  store i64 %3802, i64* %PC.i726
  %3803 = load double, double* inttoptr (i64 6299848 to double*)
  %3804 = bitcast i8* %3800 to double*
  store double %3803, double* %3804, align 1
  %3805 = getelementptr inbounds i8, i8* %3800, i64 8
  %3806 = bitcast i8* %3805 to double*
  store double 0.000000e+00, double* %3806, align 1
  store %struct.Memory* %loadMem_400d75, %struct.Memory** %MEMORY
  %loadMem_400d7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3808 = getelementptr inbounds %struct.GPR, %struct.GPR* %3807, i32 0, i32 33
  %3809 = getelementptr inbounds %struct.Reg, %struct.Reg* %3808, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %3809 to i64*
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3811 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3810, i64 0, i64 1
  %YMM1.i725 = bitcast %union.VectorReg* %3811 to %"class.std::bitset"*
  %3812 = bitcast %"class.std::bitset"* %YMM1.i725 to i8*
  %3813 = load i64, i64* %PC.i724
  %3814 = add i64 %3813, 9
  store i64 %3814, i64* %PC.i724
  %3815 = load double, double* inttoptr (i64 6299856 to double*)
  %3816 = bitcast i8* %3812 to double*
  store double %3815, double* %3816, align 1
  %3817 = getelementptr inbounds i8, i8* %3812, i64 8
  %3818 = bitcast i8* %3817 to double*
  store double 0.000000e+00, double* %3818, align 1
  store %struct.Memory* %loadMem_400d7e, %struct.Memory** %MEMORY
  %loadMem_400d87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3820 = getelementptr inbounds %struct.GPR, %struct.GPR* %3819, i32 0, i32 33
  %3821 = getelementptr inbounds %struct.Reg, %struct.Reg* %3820, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %3821 to i64*
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3823 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3822, i64 0, i64 2
  %YMM2.i723 = bitcast %union.VectorReg* %3823 to %"class.std::bitset"*
  %3824 = bitcast %"class.std::bitset"* %YMM2.i723 to i8*
  %3825 = load i64, i64* %PC.i722
  %3826 = add i64 %3825, 9
  store i64 %3826, i64* %PC.i722
  %3827 = load double, double* inttoptr (i64 6299864 to double*)
  %3828 = bitcast i8* %3824 to double*
  store double %3827, double* %3828, align 1
  %3829 = getelementptr inbounds i8, i8* %3824, i64 8
  %3830 = bitcast i8* %3829 to double*
  store double 0.000000e+00, double* %3830, align 1
  store %struct.Memory* %loadMem_400d87, %struct.Memory** %MEMORY
  %loadMem_400d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3832 = getelementptr inbounds %struct.GPR, %struct.GPR* %3831, i32 0, i32 33
  %3833 = getelementptr inbounds %struct.Reg, %struct.Reg* %3832, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %3833 to i64*
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3835 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3834, i64 0, i64 3
  %YMM3.i721 = bitcast %union.VectorReg* %3835 to %"class.std::bitset"*
  %3836 = bitcast %"class.std::bitset"* %YMM3.i721 to i8*
  %3837 = load i64, i64* %PC.i720
  %3838 = add i64 %3837, 9
  store i64 %3838, i64* %PC.i720
  %3839 = load double, double* inttoptr (i64 6299872 to double*)
  %3840 = bitcast i8* %3836 to double*
  store double %3839, double* %3840, align 1
  %3841 = getelementptr inbounds i8, i8* %3836, i64 8
  %3842 = bitcast i8* %3841 to double*
  store double 0.000000e+00, double* %3842, align 1
  store %struct.Memory* %loadMem_400d90, %struct.Memory** %MEMORY
  %loadMem1_400d99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3844 = getelementptr inbounds %struct.GPR, %struct.GPR* %3843, i32 0, i32 33
  %3845 = getelementptr inbounds %struct.Reg, %struct.Reg* %3844, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %3845 to i64*
  %3846 = load i64, i64* %PC.i719
  %3847 = add i64 %3846, 2119
  %3848 = load i64, i64* %PC.i719
  %3849 = add i64 %3848, 5
  %3850 = load i64, i64* %PC.i719
  %3851 = add i64 %3850, 5
  store i64 %3851, i64* %PC.i719
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3853 = load i64, i64* %3852, align 8
  %3854 = add i64 %3853, -8
  %3855 = inttoptr i64 %3854 to i64*
  store i64 %3849, i64* %3855
  store i64 %3854, i64* %3852, align 8
  %3856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3847, i64* %3856, align 8
  store %struct.Memory* %loadMem1_400d99, %struct.Memory** %MEMORY
  %loadMem2_400d99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400d99 = load i64, i64* %3
  %call2_400d99 = call %struct.Memory* @sub_4015e0.POUT(%struct.State* %0, i64 %loadPC_400d99, %struct.Memory* %loadMem2_400d99)
  store %struct.Memory* %call2_400d99, %struct.Memory** %MEMORY
  br label %block_.L_400d9e

block_.L_400d9e:                                  ; preds = %block_400d69, %block_.L_400d57
  %loadMem_400d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3858 = getelementptr inbounds %struct.GPR, %struct.GPR* %3857, i32 0, i32 33
  %3859 = getelementptr inbounds %struct.Reg, %struct.Reg* %3858, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %3859 to i64*
  %3860 = load i64, i64* %PC.i718
  %3861 = add i64 %3860, 11
  store i64 %3861, i64* %PC.i718
  store i32 1, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_400d9e, %struct.Memory** %MEMORY
  %loadMem_400da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3863 = getelementptr inbounds %struct.GPR, %struct.GPR* %3862, i32 0, i32 33
  %3864 = getelementptr inbounds %struct.Reg, %struct.Reg* %3863, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %3864 to i64*
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3866 = getelementptr inbounds %struct.GPR, %struct.GPR* %3865, i32 0, i32 15
  %3867 = getelementptr inbounds %struct.Reg, %struct.Reg* %3866, i32 0, i32 0
  %RBP.i717 = bitcast %union.anon* %3867 to i64*
  %3868 = load i64, i64* %RBP.i717
  %3869 = sub i64 %3868, 24
  %3870 = load i64, i64* %PC.i716
  %3871 = add i64 %3870, 8
  store i64 %3871, i64* %PC.i716
  %3872 = inttoptr i64 %3869 to i64*
  store i64 1, i64* %3872
  store %struct.Memory* %loadMem_400da9, %struct.Memory** %MEMORY
  br label %block_.L_400db1

block_.L_400db1:                                  ; preds = %block_.L_400e3f, %block_.L_400d9e
  %loadMem_400db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3874 = getelementptr inbounds %struct.GPR, %struct.GPR* %3873, i32 0, i32 33
  %3875 = getelementptr inbounds %struct.Reg, %struct.Reg* %3874, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %3875 to i64*
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3877 = getelementptr inbounds %struct.GPR, %struct.GPR* %3876, i32 0, i32 1
  %3878 = getelementptr inbounds %struct.Reg, %struct.Reg* %3877, i32 0, i32 0
  %RAX.i714 = bitcast %union.anon* %3878 to i64*
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3880 = getelementptr inbounds %struct.GPR, %struct.GPR* %3879, i32 0, i32 15
  %3881 = getelementptr inbounds %struct.Reg, %struct.Reg* %3880, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %3881 to i64*
  %3882 = load i64, i64* %RBP.i715
  %3883 = sub i64 %3882, 24
  %3884 = load i64, i64* %PC.i713
  %3885 = add i64 %3884, 4
  store i64 %3885, i64* %PC.i713
  %3886 = inttoptr i64 %3883 to i64*
  %3887 = load i64, i64* %3886
  store i64 %3887, i64* %RAX.i714, align 8
  store %struct.Memory* %loadMem_400db1, %struct.Memory** %MEMORY
  %loadMem_400db5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3889 = getelementptr inbounds %struct.GPR, %struct.GPR* %3888, i32 0, i32 33
  %3890 = getelementptr inbounds %struct.Reg, %struct.Reg* %3889, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %3890 to i64*
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3892 = getelementptr inbounds %struct.GPR, %struct.GPR* %3891, i32 0, i32 1
  %3893 = getelementptr inbounds %struct.Reg, %struct.Reg* %3892, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %3893 to i64*
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3895 = getelementptr inbounds %struct.GPR, %struct.GPR* %3894, i32 0, i32 15
  %3896 = getelementptr inbounds %struct.Reg, %struct.Reg* %3895, i32 0, i32 0
  %RBP.i712 = bitcast %union.anon* %3896 to i64*
  %3897 = load i64, i64* %RAX.i711
  %3898 = load i64, i64* %RBP.i712
  %3899 = sub i64 %3898, 56
  %3900 = load i64, i64* %PC.i710
  %3901 = add i64 %3900, 4
  store i64 %3901, i64* %PC.i710
  %3902 = inttoptr i64 %3899 to i64*
  %3903 = load i64, i64* %3902
  %3904 = sub i64 %3897, %3903
  %3905 = icmp ugt i64 %3903, %3897
  %3906 = zext i1 %3905 to i8
  %3907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3906, i8* %3907, align 1
  %3908 = trunc i64 %3904 to i32
  %3909 = and i32 %3908, 255
  %3910 = call i32 @llvm.ctpop.i32(i32 %3909)
  %3911 = trunc i32 %3910 to i8
  %3912 = and i8 %3911, 1
  %3913 = xor i8 %3912, 1
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3913, i8* %3914, align 1
  %3915 = xor i64 %3903, %3897
  %3916 = xor i64 %3915, %3904
  %3917 = lshr i64 %3916, 4
  %3918 = trunc i64 %3917 to i8
  %3919 = and i8 %3918, 1
  %3920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3919, i8* %3920, align 1
  %3921 = icmp eq i64 %3904, 0
  %3922 = zext i1 %3921 to i8
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3922, i8* %3923, align 1
  %3924 = lshr i64 %3904, 63
  %3925 = trunc i64 %3924 to i8
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3925, i8* %3926, align 1
  %3927 = lshr i64 %3897, 63
  %3928 = lshr i64 %3903, 63
  %3929 = xor i64 %3928, %3927
  %3930 = xor i64 %3924, %3927
  %3931 = add i64 %3930, %3929
  %3932 = icmp eq i64 %3931, 2
  %3933 = zext i1 %3932 to i8
  %3934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3933, i8* %3934, align 1
  store %struct.Memory* %loadMem_400db5, %struct.Memory** %MEMORY
  %loadMem_400db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3936 = getelementptr inbounds %struct.GPR, %struct.GPR* %3935, i32 0, i32 33
  %3937 = getelementptr inbounds %struct.Reg, %struct.Reg* %3936, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %3937 to i64*
  %3938 = load i64, i64* %PC.i709
  %3939 = add i64 %3938, 151
  %3940 = load i64, i64* %PC.i709
  %3941 = add i64 %3940, 6
  %3942 = load i64, i64* %PC.i709
  %3943 = add i64 %3942, 6
  store i64 %3943, i64* %PC.i709
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3945 = load i8, i8* %3944, align 1
  %3946 = icmp eq i8 %3945, 0
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3948 = load i8, i8* %3947, align 1
  %3949 = icmp ne i8 %3948, 0
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3951 = load i8, i8* %3950, align 1
  %3952 = icmp ne i8 %3951, 0
  %3953 = xor i1 %3949, %3952
  %3954 = xor i1 %3953, true
  %3955 = and i1 %3946, %3954
  %3956 = zext i1 %3955 to i8
  store i8 %3956, i8* %BRANCH_TAKEN, align 1
  %3957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3958 = select i1 %3955, i64 %3939, i64 %3941
  store i64 %3958, i64* %3957, align 8
  store %struct.Memory* %loadMem_400db9, %struct.Memory** %MEMORY
  %loadBr_400db9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400db9 = icmp eq i8 %loadBr_400db9, 1
  br i1 %cmpBr_400db9, label %block_.L_400e50, label %block_400dbf

block_400dbf:                                     ; preds = %block_.L_400db1
  %loadMem_400dbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3960 = getelementptr inbounds %struct.GPR, %struct.GPR* %3959, i32 0, i32 33
  %3961 = getelementptr inbounds %struct.Reg, %struct.Reg* %3960, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %3961 to i64*
  %3962 = load i64, i64* %PC.i708
  %3963 = add i64 %3962, 8
  store i64 %3963, i64* %PC.i708
  %3964 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %3965 = sub i32 %3964, 1
  %3966 = icmp ult i32 %3964, 1
  %3967 = zext i1 %3966 to i8
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3967, i8* %3968, align 1
  %3969 = and i32 %3965, 255
  %3970 = call i32 @llvm.ctpop.i32(i32 %3969)
  %3971 = trunc i32 %3970 to i8
  %3972 = and i8 %3971, 1
  %3973 = xor i8 %3972, 1
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3973, i8* %3974, align 1
  %3975 = xor i32 %3964, 1
  %3976 = xor i32 %3975, %3965
  %3977 = lshr i32 %3976, 4
  %3978 = trunc i32 %3977 to i8
  %3979 = and i8 %3978, 1
  %3980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3979, i8* %3980, align 1
  %3981 = icmp eq i32 %3965, 0
  %3982 = zext i1 %3981 to i8
  %3983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3982, i8* %3983, align 1
  %3984 = lshr i32 %3965, 31
  %3985 = trunc i32 %3984 to i8
  %3986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3985, i8* %3986, align 1
  %3987 = lshr i32 %3964, 31
  %3988 = xor i32 %3984, %3987
  %3989 = add i32 %3988, %3987
  %3990 = icmp eq i32 %3989, 2
  %3991 = zext i1 %3990 to i8
  %3992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3991, i8* %3992, align 1
  store %struct.Memory* %loadMem_400dbf, %struct.Memory** %MEMORY
  %loadMem_400dc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3994 = getelementptr inbounds %struct.GPR, %struct.GPR* %3993, i32 0, i32 33
  %3995 = getelementptr inbounds %struct.Reg, %struct.Reg* %3994, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %3995 to i64*
  %3996 = load i64, i64* %PC.i707
  %3997 = add i64 %3996, 22
  %3998 = load i64, i64* %PC.i707
  %3999 = add i64 %3998, 6
  %4000 = load i64, i64* %PC.i707
  %4001 = add i64 %4000, 6
  store i64 %4001, i64* %PC.i707
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4003 = load i8, i8* %4002, align 1
  %4004 = icmp eq i8 %4003, 0
  %4005 = zext i1 %4004 to i8
  store i8 %4005, i8* %BRANCH_TAKEN, align 1
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4007 = select i1 %4004, i64 %3997, i64 %3999
  store i64 %4007, i64* %4006, align 8
  store %struct.Memory* %loadMem_400dc7, %struct.Memory** %MEMORY
  %loadBr_400dc7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400dc7 = icmp eq i8 %loadBr_400dc7, 1
  br i1 %cmpBr_400dc7, label %block_.L_400ddd, label %block_400dcd

block_400dcd:                                     ; preds = %block_400dbf
  %loadMem_400dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4009 = getelementptr inbounds %struct.GPR, %struct.GPR* %4008, i32 0, i32 33
  %4010 = getelementptr inbounds %struct.Reg, %struct.Reg* %4009, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %4010 to i64*
  %4011 = load i64, i64* %PC.i706
  %4012 = add i64 %4011, 11
  store i64 %4012, i64* %PC.i706
  store i32 2, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_400dcd, %struct.Memory** %MEMORY
  %loadMem_400dd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 33
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %4015 to i64*
  %4016 = load i64, i64* %PC.i705
  %4017 = add i64 %4016, 16
  %4018 = load i64, i64* %PC.i705
  %4019 = add i64 %4018, 5
  store i64 %4019, i64* %PC.i705
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4017, i64* %4020, align 8
  store %struct.Memory* %loadMem_400dd8, %struct.Memory** %MEMORY
  br label %block_.L_400de8

block_.L_400ddd:                                  ; preds = %block_400dbf
  %loadMem_400ddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4022 = getelementptr inbounds %struct.GPR, %struct.GPR* %4021, i32 0, i32 33
  %4023 = getelementptr inbounds %struct.Reg, %struct.Reg* %4022, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %4023 to i64*
  %4024 = load i64, i64* %PC.i704
  %4025 = add i64 %4024, 11
  store i64 %4025, i64* %PC.i704
  store i32 3, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_400ddd, %struct.Memory** %MEMORY
  br label %block_.L_400de8

block_.L_400de8:                                  ; preds = %block_.L_400ddd, %block_400dcd
  %loadMem_400de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4027 = getelementptr inbounds %struct.GPR, %struct.GPR* %4026, i32 0, i32 33
  %4028 = getelementptr inbounds %struct.Reg, %struct.Reg* %4027, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %4028 to i64*
  %4029 = load i64, i64* %PC.i703
  %4030 = add i64 %4029, 8
  store i64 %4030, i64* %PC.i703
  %4031 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %4032 = sub i32 %4031, 2
  %4033 = icmp ult i32 %4031, 2
  %4034 = zext i1 %4033 to i8
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4034, i8* %4035, align 1
  %4036 = and i32 %4032, 255
  %4037 = call i32 @llvm.ctpop.i32(i32 %4036)
  %4038 = trunc i32 %4037 to i8
  %4039 = and i8 %4038, 1
  %4040 = xor i8 %4039, 1
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4040, i8* %4041, align 1
  %4042 = xor i32 %4031, 2
  %4043 = xor i32 %4042, %4032
  %4044 = lshr i32 %4043, 4
  %4045 = trunc i32 %4044 to i8
  %4046 = and i8 %4045, 1
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4046, i8* %4047, align 1
  %4048 = icmp eq i32 %4032, 0
  %4049 = zext i1 %4048 to i8
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4049, i8* %4050, align 1
  %4051 = lshr i32 %4032, 31
  %4052 = trunc i32 %4051 to i8
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4052, i8* %4053, align 1
  %4054 = lshr i32 %4031, 31
  %4055 = xor i32 %4051, %4054
  %4056 = add i32 %4055, %4054
  %4057 = icmp eq i32 %4056, 2
  %4058 = zext i1 %4057 to i8
  %4059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4058, i8* %4059, align 1
  store %struct.Memory* %loadMem_400de8, %struct.Memory** %MEMORY
  %loadMem_400df0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4061 = getelementptr inbounds %struct.GPR, %struct.GPR* %4060, i32 0, i32 33
  %4062 = getelementptr inbounds %struct.Reg, %struct.Reg* %4061, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %4062 to i64*
  %4063 = load i64, i64* %PC.i702
  %4064 = add i64 %4063, 22
  %4065 = load i64, i64* %PC.i702
  %4066 = add i64 %4065, 6
  %4067 = load i64, i64* %PC.i702
  %4068 = add i64 %4067, 6
  store i64 %4068, i64* %PC.i702
  %4069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4070 = load i8, i8* %4069, align 1
  %4071 = icmp ne i8 %4070, 0
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4073 = load i8, i8* %4072, align 1
  %4074 = icmp ne i8 %4073, 0
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4076 = load i8, i8* %4075, align 1
  %4077 = icmp ne i8 %4076, 0
  %4078 = xor i1 %4074, %4077
  %4079 = or i1 %4071, %4078
  %4080 = zext i1 %4079 to i8
  store i8 %4080, i8* %BRANCH_TAKEN, align 1
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4082 = select i1 %4079, i64 %4064, i64 %4066
  store i64 %4082, i64* %4081, align 8
  store %struct.Memory* %loadMem_400df0, %struct.Memory** %MEMORY
  %loadBr_400df0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400df0 = icmp eq i8 %loadBr_400df0, 1
  br i1 %cmpBr_400df0, label %block_.L_400e06, label %block_400df6

block_400df6:                                     ; preds = %block_.L_400de8
  %loadMem_400df6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4084 = getelementptr inbounds %struct.GPR, %struct.GPR* %4083, i32 0, i32 33
  %4085 = getelementptr inbounds %struct.Reg, %struct.Reg* %4084, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %4085 to i64*
  %4086 = load i64, i64* %PC.i701
  %4087 = add i64 %4086, 11
  store i64 %4087, i64* %PC.i701
  store i32 0, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_400df6, %struct.Memory** %MEMORY
  %loadMem_400e01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4089 = getelementptr inbounds %struct.GPR, %struct.GPR* %4088, i32 0, i32 33
  %4090 = getelementptr inbounds %struct.Reg, %struct.Reg* %4089, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %4090 to i64*
  %4091 = load i64, i64* %PC.i700
  %4092 = add i64 %4091, 16
  %4093 = load i64, i64* %PC.i700
  %4094 = add i64 %4093, 5
  store i64 %4094, i64* %PC.i700
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4092, i64* %4095, align 8
  store %struct.Memory* %loadMem_400e01, %struct.Memory** %MEMORY
  br label %block_.L_400e11

block_.L_400e06:                                  ; preds = %block_.L_400de8
  %loadMem_400e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4097 = getelementptr inbounds %struct.GPR, %struct.GPR* %4096, i32 0, i32 33
  %4098 = getelementptr inbounds %struct.Reg, %struct.Reg* %4097, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %4098 to i64*
  %4099 = load i64, i64* %PC.i699
  %4100 = add i64 %4099, 11
  store i64 %4100, i64* %PC.i699
  store i32 1, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_400e06, %struct.Memory** %MEMORY
  br label %block_.L_400e11

block_.L_400e11:                                  ; preds = %block_.L_400e06, %block_400df6
  %loadMem_400e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4102 = getelementptr inbounds %struct.GPR, %struct.GPR* %4101, i32 0, i32 33
  %4103 = getelementptr inbounds %struct.Reg, %struct.Reg* %4102, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %4103 to i64*
  %4104 = load i64, i64* %PC.i698
  %4105 = add i64 %4104, 8
  store i64 %4105, i64* %PC.i698
  %4106 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %4107 = sub i32 %4106, 1
  %4108 = icmp ult i32 %4106, 1
  %4109 = zext i1 %4108 to i8
  %4110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4109, i8* %4110, align 1
  %4111 = and i32 %4107, 255
  %4112 = call i32 @llvm.ctpop.i32(i32 %4111)
  %4113 = trunc i32 %4112 to i8
  %4114 = and i8 %4113, 1
  %4115 = xor i8 %4114, 1
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4115, i8* %4116, align 1
  %4117 = xor i32 %4106, 1
  %4118 = xor i32 %4117, %4107
  %4119 = lshr i32 %4118, 4
  %4120 = trunc i32 %4119 to i8
  %4121 = and i8 %4120, 1
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4121, i8* %4122, align 1
  %4123 = icmp eq i32 %4107, 0
  %4124 = zext i1 %4123 to i8
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4124, i8* %4125, align 1
  %4126 = lshr i32 %4107, 31
  %4127 = trunc i32 %4126 to i8
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4127, i8* %4128, align 1
  %4129 = lshr i32 %4106, 31
  %4130 = xor i32 %4126, %4129
  %4131 = add i32 %4130, %4129
  %4132 = icmp eq i32 %4131, 2
  %4133 = zext i1 %4132 to i8
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4133, i8* %4134, align 1
  store %struct.Memory* %loadMem_400e11, %struct.Memory** %MEMORY
  %loadMem_400e19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4136 = getelementptr inbounds %struct.GPR, %struct.GPR* %4135, i32 0, i32 33
  %4137 = getelementptr inbounds %struct.Reg, %struct.Reg* %4136, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %4137 to i64*
  %4138 = load i64, i64* %PC.i697
  %4139 = add i64 %4138, 22
  %4140 = load i64, i64* %PC.i697
  %4141 = add i64 %4140, 6
  %4142 = load i64, i64* %PC.i697
  %4143 = add i64 %4142, 6
  store i64 %4143, i64* %PC.i697
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4145 = load i8, i8* %4144, align 1
  %4146 = icmp ne i8 %4145, 0
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4148 = load i8, i8* %4147, align 1
  %4149 = icmp ne i8 %4148, 0
  %4150 = xor i1 %4146, %4149
  %4151 = xor i1 %4150, true
  %4152 = zext i1 %4151 to i8
  store i8 %4152, i8* %BRANCH_TAKEN, align 1
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4154 = select i1 %4150, i64 %4141, i64 %4139
  store i64 %4154, i64* %4153, align 8
  store %struct.Memory* %loadMem_400e19, %struct.Memory** %MEMORY
  %loadBr_400e19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e19 = icmp eq i8 %loadBr_400e19, 1
  br i1 %cmpBr_400e19, label %block_.L_400e2f, label %block_400e1f

block_400e1f:                                     ; preds = %block_.L_400e11
  %loadMem_400e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4156 = getelementptr inbounds %struct.GPR, %struct.GPR* %4155, i32 0, i32 33
  %4157 = getelementptr inbounds %struct.Reg, %struct.Reg* %4156, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %4157 to i64*
  %4158 = load i64, i64* %PC.i696
  %4159 = add i64 %4158, 11
  store i64 %4159, i64* %PC.i696
  store i32 1, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_400e1f, %struct.Memory** %MEMORY
  %loadMem_400e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4161 = getelementptr inbounds %struct.GPR, %struct.GPR* %4160, i32 0, i32 33
  %4162 = getelementptr inbounds %struct.Reg, %struct.Reg* %4161, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %4162 to i64*
  %4163 = load i64, i64* %PC.i695
  %4164 = add i64 %4163, 16
  %4165 = load i64, i64* %PC.i695
  %4166 = add i64 %4165, 5
  store i64 %4166, i64* %PC.i695
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4164, i64* %4167, align 8
  store %struct.Memory* %loadMem_400e2a, %struct.Memory** %MEMORY
  br label %block_.L_400e3a

block_.L_400e2f:                                  ; preds = %block_.L_400e11
  %loadMem_400e2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4169 = getelementptr inbounds %struct.GPR, %struct.GPR* %4168, i32 0, i32 33
  %4170 = getelementptr inbounds %struct.Reg, %struct.Reg* %4169, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %4170 to i64*
  %4171 = load i64, i64* %PC.i694
  %4172 = add i64 %4171, 11
  store i64 %4172, i64* %PC.i694
  store i32 0, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_400e2f, %struct.Memory** %MEMORY
  br label %block_.L_400e3a

block_.L_400e3a:                                  ; preds = %block_.L_400e2f, %block_400e1f
  %loadMem_400e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4174 = getelementptr inbounds %struct.GPR, %struct.GPR* %4173, i32 0, i32 33
  %4175 = getelementptr inbounds %struct.Reg, %struct.Reg* %4174, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %4175 to i64*
  %4176 = load i64, i64* %PC.i693
  %4177 = add i64 %4176, 5
  %4178 = load i64, i64* %PC.i693
  %4179 = add i64 %4178, 5
  store i64 %4179, i64* %PC.i693
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4177, i64* %4180, align 8
  store %struct.Memory* %loadMem_400e3a, %struct.Memory** %MEMORY
  br label %block_.L_400e3f

block_.L_400e3f:                                  ; preds = %block_.L_400e3a
  %loadMem_400e3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4182 = getelementptr inbounds %struct.GPR, %struct.GPR* %4181, i32 0, i32 33
  %4183 = getelementptr inbounds %struct.Reg, %struct.Reg* %4182, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %4183 to i64*
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4185 = getelementptr inbounds %struct.GPR, %struct.GPR* %4184, i32 0, i32 1
  %4186 = getelementptr inbounds %struct.Reg, %struct.Reg* %4185, i32 0, i32 0
  %RAX.i691 = bitcast %union.anon* %4186 to i64*
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4188 = getelementptr inbounds %struct.GPR, %struct.GPR* %4187, i32 0, i32 15
  %4189 = getelementptr inbounds %struct.Reg, %struct.Reg* %4188, i32 0, i32 0
  %RBP.i692 = bitcast %union.anon* %4189 to i64*
  %4190 = load i64, i64* %RBP.i692
  %4191 = sub i64 %4190, 24
  %4192 = load i64, i64* %PC.i690
  %4193 = add i64 %4192, 4
  store i64 %4193, i64* %PC.i690
  %4194 = inttoptr i64 %4191 to i64*
  %4195 = load i64, i64* %4194
  store i64 %4195, i64* %RAX.i691, align 8
  store %struct.Memory* %loadMem_400e3f, %struct.Memory** %MEMORY
  %loadMem_400e43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4197 = getelementptr inbounds %struct.GPR, %struct.GPR* %4196, i32 0, i32 33
  %4198 = getelementptr inbounds %struct.Reg, %struct.Reg* %4197, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %4198 to i64*
  %4199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4200 = getelementptr inbounds %struct.GPR, %struct.GPR* %4199, i32 0, i32 1
  %4201 = getelementptr inbounds %struct.Reg, %struct.Reg* %4200, i32 0, i32 0
  %RAX.i689 = bitcast %union.anon* %4201 to i64*
  %4202 = load i64, i64* %RAX.i689
  %4203 = load i64, i64* %PC.i688
  %4204 = add i64 %4203, 4
  store i64 %4204, i64* %PC.i688
  %4205 = add i64 1, %4202
  store i64 %4205, i64* %RAX.i689, align 8
  %4206 = icmp ult i64 %4205, %4202
  %4207 = icmp ult i64 %4205, 1
  %4208 = or i1 %4206, %4207
  %4209 = zext i1 %4208 to i8
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4209, i8* %4210, align 1
  %4211 = trunc i64 %4205 to i32
  %4212 = and i32 %4211, 255
  %4213 = call i32 @llvm.ctpop.i32(i32 %4212)
  %4214 = trunc i32 %4213 to i8
  %4215 = and i8 %4214, 1
  %4216 = xor i8 %4215, 1
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4216, i8* %4217, align 1
  %4218 = xor i64 1, %4202
  %4219 = xor i64 %4218, %4205
  %4220 = lshr i64 %4219, 4
  %4221 = trunc i64 %4220 to i8
  %4222 = and i8 %4221, 1
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4222, i8* %4223, align 1
  %4224 = icmp eq i64 %4205, 0
  %4225 = zext i1 %4224 to i8
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4225, i8* %4226, align 1
  %4227 = lshr i64 %4205, 63
  %4228 = trunc i64 %4227 to i8
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4228, i8* %4229, align 1
  %4230 = lshr i64 %4202, 63
  %4231 = xor i64 %4227, %4230
  %4232 = add i64 %4231, %4227
  %4233 = icmp eq i64 %4232, 2
  %4234 = zext i1 %4233 to i8
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4234, i8* %4235, align 1
  store %struct.Memory* %loadMem_400e43, %struct.Memory** %MEMORY
  %loadMem_400e47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4237 = getelementptr inbounds %struct.GPR, %struct.GPR* %4236, i32 0, i32 33
  %4238 = getelementptr inbounds %struct.Reg, %struct.Reg* %4237, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %4238 to i64*
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4240 = getelementptr inbounds %struct.GPR, %struct.GPR* %4239, i32 0, i32 1
  %4241 = getelementptr inbounds %struct.Reg, %struct.Reg* %4240, i32 0, i32 0
  %RAX.i686 = bitcast %union.anon* %4241 to i64*
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4243 = getelementptr inbounds %struct.GPR, %struct.GPR* %4242, i32 0, i32 15
  %4244 = getelementptr inbounds %struct.Reg, %struct.Reg* %4243, i32 0, i32 0
  %RBP.i687 = bitcast %union.anon* %4244 to i64*
  %4245 = load i64, i64* %RBP.i687
  %4246 = sub i64 %4245, 24
  %4247 = load i64, i64* %RAX.i686
  %4248 = load i64, i64* %PC.i685
  %4249 = add i64 %4248, 4
  store i64 %4249, i64* %PC.i685
  %4250 = inttoptr i64 %4246 to i64*
  store i64 %4247, i64* %4250
  store %struct.Memory* %loadMem_400e47, %struct.Memory** %MEMORY
  %loadMem_400e4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4252 = getelementptr inbounds %struct.GPR, %struct.GPR* %4251, i32 0, i32 33
  %4253 = getelementptr inbounds %struct.Reg, %struct.Reg* %4252, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %4253 to i64*
  %4254 = load i64, i64* %PC.i684
  %4255 = add i64 %4254, -154
  %4256 = load i64, i64* %PC.i684
  %4257 = add i64 %4256, 5
  store i64 %4257, i64* %PC.i684
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4255, i64* %4258, align 8
  store %struct.Memory* %loadMem_400e4b, %struct.Memory** %MEMORY
  br label %block_.L_400db1

block_.L_400e50:                                  ; preds = %block_.L_400db1
  %loadMem_400e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4260 = getelementptr inbounds %struct.GPR, %struct.GPR* %4259, i32 0, i32 33
  %4261 = getelementptr inbounds %struct.Reg, %struct.Reg* %4260, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %4261 to i64*
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4263 = getelementptr inbounds %struct.GPR, %struct.GPR* %4262, i32 0, i32 1
  %4264 = getelementptr inbounds %struct.Reg, %struct.Reg* %4263, i32 0, i32 0
  %RAX.i682 = bitcast %union.anon* %4264 to i64*
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4266 = getelementptr inbounds %struct.GPR, %struct.GPR* %4265, i32 0, i32 15
  %4267 = getelementptr inbounds %struct.Reg, %struct.Reg* %4266, i32 0, i32 0
  %RBP.i683 = bitcast %union.anon* %4267 to i64*
  %4268 = load i64, i64* %RBP.i683
  %4269 = sub i64 %4268, 176
  %4270 = load i64, i64* %PC.i681
  %4271 = add i64 %4270, 6
  store i64 %4271, i64* %PC.i681
  %4272 = inttoptr i64 %4269 to i32*
  %4273 = load i32, i32* %4272
  %4274 = zext i32 %4273 to i64
  store i64 %4274, i64* %RAX.i682, align 8
  store %struct.Memory* %loadMem_400e50, %struct.Memory** %MEMORY
  %loadMem_400e56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4276 = getelementptr inbounds %struct.GPR, %struct.GPR* %4275, i32 0, i32 33
  %4277 = getelementptr inbounds %struct.Reg, %struct.Reg* %4276, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %4277 to i64*
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4279 = getelementptr inbounds %struct.GPR, %struct.GPR* %4278, i32 0, i32 1
  %4280 = getelementptr inbounds %struct.Reg, %struct.Reg* %4279, i32 0, i32 0
  %EAX.i679 = bitcast %union.anon* %4280 to i32*
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4282 = getelementptr inbounds %struct.GPR, %struct.GPR* %4281, i32 0, i32 15
  %4283 = getelementptr inbounds %struct.Reg, %struct.Reg* %4282, i32 0, i32 0
  %RBP.i680 = bitcast %union.anon* %4283 to i64*
  %4284 = load i32, i32* %EAX.i679
  %4285 = zext i32 %4284 to i64
  %4286 = load i64, i64* %RBP.i680
  %4287 = sub i64 %4286, 172
  %4288 = load i64, i64* %PC.i678
  %4289 = add i64 %4288, 6
  store i64 %4289, i64* %PC.i678
  %4290 = inttoptr i64 %4287 to i32*
  %4291 = load i32, i32* %4290
  %4292 = sub i32 %4284, %4291
  %4293 = icmp ult i32 %4284, %4291
  %4294 = zext i1 %4293 to i8
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4294, i8* %4295, align 1
  %4296 = and i32 %4292, 255
  %4297 = call i32 @llvm.ctpop.i32(i32 %4296)
  %4298 = trunc i32 %4297 to i8
  %4299 = and i8 %4298, 1
  %4300 = xor i8 %4299, 1
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4300, i8* %4301, align 1
  %4302 = xor i32 %4291, %4284
  %4303 = xor i32 %4302, %4292
  %4304 = lshr i32 %4303, 4
  %4305 = trunc i32 %4304 to i8
  %4306 = and i8 %4305, 1
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4306, i8* %4307, align 1
  %4308 = icmp eq i32 %4292, 0
  %4309 = zext i1 %4308 to i8
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4309, i8* %4310, align 1
  %4311 = lshr i32 %4292, 31
  %4312 = trunc i32 %4311 to i8
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4312, i8* %4313, align 1
  %4314 = lshr i32 %4284, 31
  %4315 = lshr i32 %4291, 31
  %4316 = xor i32 %4315, %4314
  %4317 = xor i32 %4311, %4314
  %4318 = add i32 %4317, %4316
  %4319 = icmp eq i32 %4318, 2
  %4320 = zext i1 %4319 to i8
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4320, i8* %4321, align 1
  store %struct.Memory* %loadMem_400e56, %struct.Memory** %MEMORY
  %loadMem_400e5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 33
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %PC.i677 = bitcast %union.anon* %4324 to i64*
  %4325 = load i64, i64* %PC.i677
  %4326 = add i64 %4325, 54
  %4327 = load i64, i64* %PC.i677
  %4328 = add i64 %4327, 6
  %4329 = load i64, i64* %PC.i677
  %4330 = add i64 %4329, 6
  store i64 %4330, i64* %PC.i677
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4332 = load i8, i8* %4331, align 1
  %4333 = icmp eq i8 %4332, 0
  %4334 = zext i1 %4333 to i8
  store i8 %4334, i8* %BRANCH_TAKEN, align 1
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4336 = select i1 %4333, i64 %4326, i64 %4328
  store i64 %4336, i64* %4335, align 8
  store %struct.Memory* %loadMem_400e5c, %struct.Memory** %MEMORY
  %loadBr_400e5c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e5c = icmp eq i8 %loadBr_400e5c, 1
  br i1 %cmpBr_400e5c, label %block_.L_400e92, label %block_400e62

block_400e62:                                     ; preds = %block_.L_400e50
  %loadMem_400e62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4338 = getelementptr inbounds %struct.GPR, %struct.GPR* %4337, i32 0, i32 33
  %4339 = getelementptr inbounds %struct.Reg, %struct.Reg* %4338, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %4339 to i64*
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4341 = getelementptr inbounds %struct.GPR, %struct.GPR* %4340, i32 0, i32 11
  %4342 = getelementptr inbounds %struct.Reg, %struct.Reg* %4341, i32 0, i32 0
  %RDI.i675 = bitcast %union.anon* %4342 to i64*
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4344 = getelementptr inbounds %struct.GPR, %struct.GPR* %4343, i32 0, i32 15
  %4345 = getelementptr inbounds %struct.Reg, %struct.Reg* %4344, i32 0, i32 0
  %RBP.i676 = bitcast %union.anon* %4345 to i64*
  %4346 = load i64, i64* %RBP.i676
  %4347 = sub i64 %4346, 56
  %4348 = load i64, i64* %PC.i674
  %4349 = add i64 %4348, 4
  store i64 %4349, i64* %PC.i674
  %4350 = inttoptr i64 %4347 to i64*
  %4351 = load i64, i64* %4350
  store i64 %4351, i64* %RDI.i675, align 8
  store %struct.Memory* %loadMem_400e62, %struct.Memory** %MEMORY
  %loadMem_400e66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4353 = getelementptr inbounds %struct.GPR, %struct.GPR* %4352, i32 0, i32 33
  %4354 = getelementptr inbounds %struct.Reg, %struct.Reg* %4353, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %4354 to i64*
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4356 = getelementptr inbounds %struct.GPR, %struct.GPR* %4355, i32 0, i32 9
  %4357 = getelementptr inbounds %struct.Reg, %struct.Reg* %4356, i32 0, i32 0
  %RSI.i673 = bitcast %union.anon* %4357 to i64*
  %4358 = load i64, i64* %PC.i672
  %4359 = add i64 %4358, 8
  store i64 %4359, i64* %PC.i672
  %4360 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %4361 = sext i32 %4360 to i64
  store i64 %4361, i64* %RSI.i673, align 8
  store %struct.Memory* %loadMem_400e66, %struct.Memory** %MEMORY
  %loadMem_400e6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4363 = getelementptr inbounds %struct.GPR, %struct.GPR* %4362, i32 0, i32 33
  %4364 = getelementptr inbounds %struct.Reg, %struct.Reg* %4363, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %4364 to i64*
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4366 = getelementptr inbounds %struct.GPR, %struct.GPR* %4365, i32 0, i32 7
  %4367 = getelementptr inbounds %struct.Reg, %struct.Reg* %4366, i32 0, i32 0
  %RDX.i671 = bitcast %union.anon* %4367 to i64*
  %4368 = load i64, i64* %PC.i670
  %4369 = add i64 %4368, 8
  store i64 %4369, i64* %PC.i670
  %4370 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %4371 = sext i32 %4370 to i64
  store i64 %4371, i64* %RDX.i671, align 8
  store %struct.Memory* %loadMem_400e6e, %struct.Memory** %MEMORY
  %loadMem_400e76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4373 = getelementptr inbounds %struct.GPR, %struct.GPR* %4372, i32 0, i32 33
  %4374 = getelementptr inbounds %struct.Reg, %struct.Reg* %4373, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %4374 to i64*
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4376 = getelementptr inbounds %struct.GPR, %struct.GPR* %4375, i32 0, i32 15
  %4377 = getelementptr inbounds %struct.Reg, %struct.Reg* %4376, i32 0, i32 0
  %RBP.i668 = bitcast %union.anon* %4377 to i64*
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4379 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4378, i64 0, i64 0
  %YMM0.i669 = bitcast %union.VectorReg* %4379 to %"class.std::bitset"*
  %4380 = bitcast %"class.std::bitset"* %YMM0.i669 to i8*
  %4381 = load i64, i64* %RBP.i668
  %4382 = sub i64 %4381, 112
  %4383 = load i64, i64* %PC.i667
  %4384 = add i64 %4383, 5
  store i64 %4384, i64* %PC.i667
  %4385 = inttoptr i64 %4382 to double*
  %4386 = load double, double* %4385
  %4387 = bitcast i8* %4380 to double*
  store double %4386, double* %4387, align 1
  %4388 = getelementptr inbounds i8, i8* %4380, i64 8
  %4389 = bitcast i8* %4388 to double*
  store double 0.000000e+00, double* %4389, align 1
  store %struct.Memory* %loadMem_400e76, %struct.Memory** %MEMORY
  %loadMem_400e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 33
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %4392 to i64*
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4394 = getelementptr inbounds %struct.GPR, %struct.GPR* %4393, i32 0, i32 15
  %4395 = getelementptr inbounds %struct.Reg, %struct.Reg* %4394, i32 0, i32 0
  %RBP.i665 = bitcast %union.anon* %4395 to i64*
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4397 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4396, i64 0, i64 1
  %YMM1.i666 = bitcast %union.VectorReg* %4397 to %"class.std::bitset"*
  %4398 = bitcast %"class.std::bitset"* %YMM1.i666 to i8*
  %4399 = load i64, i64* %RBP.i665
  %4400 = sub i64 %4399, 120
  %4401 = load i64, i64* %PC.i664
  %4402 = add i64 %4401, 5
  store i64 %4402, i64* %PC.i664
  %4403 = inttoptr i64 %4400 to double*
  %4404 = load double, double* %4403
  %4405 = bitcast i8* %4398 to double*
  store double %4404, double* %4405, align 1
  %4406 = getelementptr inbounds i8, i8* %4398, i64 8
  %4407 = bitcast i8* %4406 to double*
  store double 0.000000e+00, double* %4407, align 1
  store %struct.Memory* %loadMem_400e7b, %struct.Memory** %MEMORY
  %loadMem_400e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4409 = getelementptr inbounds %struct.GPR, %struct.GPR* %4408, i32 0, i32 33
  %4410 = getelementptr inbounds %struct.Reg, %struct.Reg* %4409, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %4410 to i64*
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4412 = getelementptr inbounds %struct.GPR, %struct.GPR* %4411, i32 0, i32 15
  %4413 = getelementptr inbounds %struct.Reg, %struct.Reg* %4412, i32 0, i32 0
  %RBP.i662 = bitcast %union.anon* %4413 to i64*
  %4414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4415 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4414, i64 0, i64 2
  %YMM2.i663 = bitcast %union.VectorReg* %4415 to %"class.std::bitset"*
  %4416 = bitcast %"class.std::bitset"* %YMM2.i663 to i8*
  %4417 = load i64, i64* %RBP.i662
  %4418 = sub i64 %4417, 128
  %4419 = load i64, i64* %PC.i661
  %4420 = add i64 %4419, 5
  store i64 %4420, i64* %PC.i661
  %4421 = inttoptr i64 %4418 to double*
  %4422 = load double, double* %4421
  %4423 = bitcast i8* %4416 to double*
  store double %4422, double* %4423, align 1
  %4424 = getelementptr inbounds i8, i8* %4416, i64 8
  %4425 = bitcast i8* %4424 to double*
  store double 0.000000e+00, double* %4425, align 1
  store %struct.Memory* %loadMem_400e80, %struct.Memory** %MEMORY
  %loadMem_400e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4427 = getelementptr inbounds %struct.GPR, %struct.GPR* %4426, i32 0, i32 33
  %4428 = getelementptr inbounds %struct.Reg, %struct.Reg* %4427, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %4428 to i64*
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4430 = getelementptr inbounds %struct.GPR, %struct.GPR* %4429, i32 0, i32 15
  %4431 = getelementptr inbounds %struct.Reg, %struct.Reg* %4430, i32 0, i32 0
  %RBP.i659 = bitcast %union.anon* %4431 to i64*
  %4432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4433 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4432, i64 0, i64 3
  %YMM3.i660 = bitcast %union.VectorReg* %4433 to %"class.std::bitset"*
  %4434 = bitcast %"class.std::bitset"* %YMM3.i660 to i8*
  %4435 = load i64, i64* %RBP.i659
  %4436 = sub i64 %4435, 136
  %4437 = load i64, i64* %PC.i658
  %4438 = add i64 %4437, 8
  store i64 %4438, i64* %PC.i658
  %4439 = inttoptr i64 %4436 to double*
  %4440 = load double, double* %4439
  %4441 = bitcast i8* %4434 to double*
  store double %4440, double* %4441, align 1
  %4442 = getelementptr inbounds i8, i8* %4434, i64 8
  %4443 = bitcast i8* %4442 to double*
  store double 0.000000e+00, double* %4443, align 1
  store %struct.Memory* %loadMem_400e85, %struct.Memory** %MEMORY
  %loadMem1_400e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4445 = getelementptr inbounds %struct.GPR, %struct.GPR* %4444, i32 0, i32 33
  %4446 = getelementptr inbounds %struct.Reg, %struct.Reg* %4445, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %4446 to i64*
  %4447 = load i64, i64* %PC.i657
  %4448 = add i64 %4447, 1875
  %4449 = load i64, i64* %PC.i657
  %4450 = add i64 %4449, 5
  %4451 = load i64, i64* %PC.i657
  %4452 = add i64 %4451, 5
  store i64 %4452, i64* %PC.i657
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4454 = load i64, i64* %4453, align 8
  %4455 = add i64 %4454, -8
  %4456 = inttoptr i64 %4455 to i64*
  store i64 %4450, i64* %4456
  store i64 %4455, i64* %4453, align 8
  %4457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4448, i64* %4457, align 8
  store %struct.Memory* %loadMem1_400e8d, %struct.Memory** %MEMORY
  %loadMem2_400e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400e8d = load i64, i64* %3
  %call2_400e8d = call %struct.Memory* @sub_4015e0.POUT(%struct.State* %0, i64 %loadPC_400e8d, %struct.Memory* %loadMem2_400e8d)
  store %struct.Memory* %call2_400e8d, %struct.Memory** %MEMORY
  br label %block_.L_400e92

block_.L_400e92:                                  ; preds = %block_400e62, %block_.L_400e50
  %loadMem_400e92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4459 = getelementptr inbounds %struct.GPR, %struct.GPR* %4458, i32 0, i32 33
  %4460 = getelementptr inbounds %struct.Reg, %struct.Reg* %4459, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %4460 to i64*
  %4461 = load i64, i64* %PC.i656
  %4462 = add i64 %4461, 11
  store i64 %4462, i64* %PC.i656
  store i32 1, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_400e92, %struct.Memory** %MEMORY
  %loadMem_400e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4464 = getelementptr inbounds %struct.GPR, %struct.GPR* %4463, i32 0, i32 33
  %4465 = getelementptr inbounds %struct.Reg, %struct.Reg* %4464, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %4465 to i64*
  %4466 = load i64, i64* %PC.i655
  %4467 = add i64 %4466, 11
  store i64 %4467, i64* %PC.i655
  store i32 2, i32* inttoptr (i64 6299820 to i32*)
  store %struct.Memory* %loadMem_400e9d, %struct.Memory** %MEMORY
  %loadMem_400ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4469 = getelementptr inbounds %struct.GPR, %struct.GPR* %4468, i32 0, i32 33
  %4470 = getelementptr inbounds %struct.Reg, %struct.Reg* %4469, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %4470 to i64*
  %4471 = load i64, i64* %PC.i654
  %4472 = add i64 %4471, 11
  store i64 %4472, i64* %PC.i654
  store i32 3, i32* inttoptr (i64 6299816 to i32*)
  store %struct.Memory* %loadMem_400ea8, %struct.Memory** %MEMORY
  %loadMem_400eb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4474 = getelementptr inbounds %struct.GPR, %struct.GPR* %4473, i32 0, i32 33
  %4475 = getelementptr inbounds %struct.Reg, %struct.Reg* %4474, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %4475 to i64*
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4477 = getelementptr inbounds %struct.GPR, %struct.GPR* %4476, i32 0, i32 15
  %4478 = getelementptr inbounds %struct.Reg, %struct.Reg* %4477, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %4478 to i64*
  %4479 = load i64, i64* %RBP.i653
  %4480 = sub i64 %4479, 24
  %4481 = load i64, i64* %PC.i652
  %4482 = add i64 %4481, 8
  store i64 %4482, i64* %PC.i652
  %4483 = inttoptr i64 %4480 to i64*
  store i64 1, i64* %4483
  store %struct.Memory* %loadMem_400eb3, %struct.Memory** %MEMORY
  br label %block_.L_400ebb

block_.L_400ebb:                                  ; preds = %block_400ec9, %block_.L_400e92
  %loadMem_400ebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4485 = getelementptr inbounds %struct.GPR, %struct.GPR* %4484, i32 0, i32 33
  %4486 = getelementptr inbounds %struct.Reg, %struct.Reg* %4485, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %4486 to i64*
  %4487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4488 = getelementptr inbounds %struct.GPR, %struct.GPR* %4487, i32 0, i32 1
  %4489 = getelementptr inbounds %struct.Reg, %struct.Reg* %4488, i32 0, i32 0
  %RAX.i650 = bitcast %union.anon* %4489 to i64*
  %4490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4491 = getelementptr inbounds %struct.GPR, %struct.GPR* %4490, i32 0, i32 15
  %4492 = getelementptr inbounds %struct.Reg, %struct.Reg* %4491, i32 0, i32 0
  %RBP.i651 = bitcast %union.anon* %4492 to i64*
  %4493 = load i64, i64* %RBP.i651
  %4494 = sub i64 %4493, 24
  %4495 = load i64, i64* %PC.i649
  %4496 = add i64 %4495, 4
  store i64 %4496, i64* %PC.i649
  %4497 = inttoptr i64 %4494 to i64*
  %4498 = load i64, i64* %4497
  store i64 %4498, i64* %RAX.i650, align 8
  store %struct.Memory* %loadMem_400ebb, %struct.Memory** %MEMORY
  %loadMem_400ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4500 = getelementptr inbounds %struct.GPR, %struct.GPR* %4499, i32 0, i32 33
  %4501 = getelementptr inbounds %struct.Reg, %struct.Reg* %4500, i32 0, i32 0
  %PC.i646 = bitcast %union.anon* %4501 to i64*
  %4502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4503 = getelementptr inbounds %struct.GPR, %struct.GPR* %4502, i32 0, i32 1
  %4504 = getelementptr inbounds %struct.Reg, %struct.Reg* %4503, i32 0, i32 0
  %RAX.i647 = bitcast %union.anon* %4504 to i64*
  %4505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4506 = getelementptr inbounds %struct.GPR, %struct.GPR* %4505, i32 0, i32 15
  %4507 = getelementptr inbounds %struct.Reg, %struct.Reg* %4506, i32 0, i32 0
  %RBP.i648 = bitcast %union.anon* %4507 to i64*
  %4508 = load i64, i64* %RAX.i647
  %4509 = load i64, i64* %RBP.i648
  %4510 = sub i64 %4509, 64
  %4511 = load i64, i64* %PC.i646
  %4512 = add i64 %4511, 4
  store i64 %4512, i64* %PC.i646
  %4513 = inttoptr i64 %4510 to i64*
  %4514 = load i64, i64* %4513
  %4515 = sub i64 %4508, %4514
  %4516 = icmp ugt i64 %4514, %4508
  %4517 = zext i1 %4516 to i8
  %4518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4517, i8* %4518, align 1
  %4519 = trunc i64 %4515 to i32
  %4520 = and i32 %4519, 255
  %4521 = call i32 @llvm.ctpop.i32(i32 %4520)
  %4522 = trunc i32 %4521 to i8
  %4523 = and i8 %4522, 1
  %4524 = xor i8 %4523, 1
  %4525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4524, i8* %4525, align 1
  %4526 = xor i64 %4514, %4508
  %4527 = xor i64 %4526, %4515
  %4528 = lshr i64 %4527, 4
  %4529 = trunc i64 %4528 to i8
  %4530 = and i8 %4529, 1
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4530, i8* %4531, align 1
  %4532 = icmp eq i64 %4515, 0
  %4533 = zext i1 %4532 to i8
  %4534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4533, i8* %4534, align 1
  %4535 = lshr i64 %4515, 63
  %4536 = trunc i64 %4535 to i8
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4536, i8* %4537, align 1
  %4538 = lshr i64 %4508, 63
  %4539 = lshr i64 %4514, 63
  %4540 = xor i64 %4539, %4538
  %4541 = xor i64 %4535, %4538
  %4542 = add i64 %4541, %4540
  %4543 = icmp eq i64 %4542, 2
  %4544 = zext i1 %4543 to i8
  %4545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4544, i8* %4545, align 1
  store %struct.Memory* %loadMem_400ebf, %struct.Memory** %MEMORY
  %loadMem_400ec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4547 = getelementptr inbounds %struct.GPR, %struct.GPR* %4546, i32 0, i32 33
  %4548 = getelementptr inbounds %struct.Reg, %struct.Reg* %4547, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %4548 to i64*
  %4549 = load i64, i64* %PC.i645
  %4550 = add i64 %4549, 251
  %4551 = load i64, i64* %PC.i645
  %4552 = add i64 %4551, 6
  %4553 = load i64, i64* %PC.i645
  %4554 = add i64 %4553, 6
  store i64 %4554, i64* %PC.i645
  %4555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4556 = load i8, i8* %4555, align 1
  %4557 = icmp eq i8 %4556, 0
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4559 = load i8, i8* %4558, align 1
  %4560 = icmp ne i8 %4559, 0
  %4561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4562 = load i8, i8* %4561, align 1
  %4563 = icmp ne i8 %4562, 0
  %4564 = xor i1 %4560, %4563
  %4565 = xor i1 %4564, true
  %4566 = and i1 %4557, %4565
  %4567 = zext i1 %4566 to i8
  store i8 %4567, i8* %BRANCH_TAKEN, align 1
  %4568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4569 = select i1 %4566, i64 %4550, i64 %4552
  store i64 %4569, i64* %4568, align 8
  store %struct.Memory* %loadMem_400ec3, %struct.Memory** %MEMORY
  %loadBr_400ec3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400ec3 = icmp eq i8 %loadBr_400ec3, 1
  br i1 %cmpBr_400ec3, label %block_.L_400fbe, label %block_400ec9

block_400ec9:                                     ; preds = %block_.L_400ebb
  %loadMem_400ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4571 = getelementptr inbounds %struct.GPR, %struct.GPR* %4570, i32 0, i32 33
  %4572 = getelementptr inbounds %struct.Reg, %struct.Reg* %4571, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %4572 to i64*
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4574 = getelementptr inbounds %struct.GPR, %struct.GPR* %4573, i32 0, i32 1
  %4575 = getelementptr inbounds %struct.Reg, %struct.Reg* %4574, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %4575 to i64*
  %4576 = load i64, i64* %PC.i643
  %4577 = add i64 %4576, 7
  store i64 %4577, i64* %PC.i643
  %4578 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %4579 = zext i32 %4578 to i64
  store i64 %4579, i64* %RAX.i644, align 8
  store %struct.Memory* %loadMem_400ec9, %struct.Memory** %MEMORY
  %loadMem_400ed0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4581 = getelementptr inbounds %struct.GPR, %struct.GPR* %4580, i32 0, i32 33
  %4582 = getelementptr inbounds %struct.Reg, %struct.Reg* %4581, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %4582 to i64*
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4584 = getelementptr inbounds %struct.GPR, %struct.GPR* %4583, i32 0, i32 5
  %4585 = getelementptr inbounds %struct.Reg, %struct.Reg* %4584, i32 0, i32 0
  %RCX.i642 = bitcast %union.anon* %4585 to i64*
  %4586 = load i64, i64* %PC.i641
  %4587 = add i64 %4586, 7
  store i64 %4587, i64* %PC.i641
  %4588 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %4589 = zext i32 %4588 to i64
  store i64 %4589, i64* %RCX.i642, align 8
  store %struct.Memory* %loadMem_400ed0, %struct.Memory** %MEMORY
  %loadMem_400ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4591 = getelementptr inbounds %struct.GPR, %struct.GPR* %4590, i32 0, i32 33
  %4592 = getelementptr inbounds %struct.Reg, %struct.Reg* %4591, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %4592 to i64*
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4594 = getelementptr inbounds %struct.GPR, %struct.GPR* %4593, i32 0, i32 5
  %4595 = getelementptr inbounds %struct.Reg, %struct.Reg* %4594, i32 0, i32 0
  %RCX.i640 = bitcast %union.anon* %4595 to i64*
  %4596 = load i64, i64* %RCX.i640
  %4597 = load i64, i64* %PC.i639
  %4598 = add i64 %4597, 7
  store i64 %4598, i64* %PC.i639
  %4599 = trunc i64 %4596 to i32
  %4600 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %4601 = sub i32 %4599, %4600
  %4602 = zext i32 %4601 to i64
  store i64 %4602, i64* %RCX.i640, align 8
  %4603 = icmp ult i32 %4599, %4600
  %4604 = zext i1 %4603 to i8
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4604, i8* %4605, align 1
  %4606 = and i32 %4601, 255
  %4607 = call i32 @llvm.ctpop.i32(i32 %4606)
  %4608 = trunc i32 %4607 to i8
  %4609 = and i8 %4608, 1
  %4610 = xor i8 %4609, 1
  %4611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4610, i8* %4611, align 1
  %4612 = xor i32 %4600, %4599
  %4613 = xor i32 %4612, %4601
  %4614 = lshr i32 %4613, 4
  %4615 = trunc i32 %4614 to i8
  %4616 = and i8 %4615, 1
  %4617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4616, i8* %4617, align 1
  %4618 = icmp eq i32 %4601, 0
  %4619 = zext i1 %4618 to i8
  %4620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4619, i8* %4620, align 1
  %4621 = lshr i32 %4601, 31
  %4622 = trunc i32 %4621 to i8
  %4623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4622, i8* %4623, align 1
  %4624 = lshr i32 %4599, 31
  %4625 = lshr i32 %4600, 31
  %4626 = xor i32 %4625, %4624
  %4627 = xor i32 %4621, %4624
  %4628 = add i32 %4627, %4626
  %4629 = icmp eq i32 %4628, 2
  %4630 = zext i1 %4629 to i8
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4630, i8* %4631, align 1
  store %struct.Memory* %loadMem_400ed7, %struct.Memory** %MEMORY
  %loadMem_400ede = load %struct.Memory*, %struct.Memory** %MEMORY
  %4632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4633 = getelementptr inbounds %struct.GPR, %struct.GPR* %4632, i32 0, i32 33
  %4634 = getelementptr inbounds %struct.Reg, %struct.Reg* %4633, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %4634 to i64*
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4636 = getelementptr inbounds %struct.GPR, %struct.GPR* %4635, i32 0, i32 5
  %4637 = getelementptr inbounds %struct.Reg, %struct.Reg* %4636, i32 0, i32 0
  %ECX.i637 = bitcast %union.anon* %4637 to i32*
  %4638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4639 = getelementptr inbounds %struct.GPR, %struct.GPR* %4638, i32 0, i32 1
  %4640 = getelementptr inbounds %struct.Reg, %struct.Reg* %4639, i32 0, i32 0
  %RAX.i638 = bitcast %union.anon* %4640 to i64*
  %4641 = load i64, i64* %RAX.i638
  %4642 = load i32, i32* %ECX.i637
  %4643 = zext i32 %4642 to i64
  %4644 = load i64, i64* %PC.i636
  %4645 = add i64 %4644, 3
  store i64 %4645, i64* %PC.i636
  %4646 = shl i64 %4641, 32
  %4647 = ashr exact i64 %4646, 32
  %4648 = shl i64 %4643, 32
  %4649 = ashr exact i64 %4648, 32
  %4650 = mul i64 %4649, %4647
  %4651 = trunc i64 %4650 to i32
  %4652 = and i64 %4650, 4294967295
  store i64 %4652, i64* %RAX.i638, align 8
  %4653 = shl i64 %4650, 32
  %4654 = ashr exact i64 %4653, 32
  %4655 = icmp ne i64 %4654, %4650
  %4656 = zext i1 %4655 to i8
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4656, i8* %4657, align 1
  %4658 = and i32 %4651, 255
  %4659 = call i32 @llvm.ctpop.i32(i32 %4658)
  %4660 = trunc i32 %4659 to i8
  %4661 = and i8 %4660, 1
  %4662 = xor i8 %4661, 1
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4662, i8* %4663, align 1
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4664, align 1
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4665, align 1
  %4666 = lshr i32 %4651, 31
  %4667 = trunc i32 %4666 to i8
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4667, i8* %4668, align 1
  %4669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4656, i8* %4669, align 1
  store %struct.Memory* %loadMem_400ede, %struct.Memory** %MEMORY
  %loadMem_400ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4671 = getelementptr inbounds %struct.GPR, %struct.GPR* %4670, i32 0, i32 33
  %4672 = getelementptr inbounds %struct.Reg, %struct.Reg* %4671, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %4672 to i64*
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4674 = getelementptr inbounds %struct.GPR, %struct.GPR* %4673, i32 0, i32 5
  %4675 = getelementptr inbounds %struct.Reg, %struct.Reg* %4674, i32 0, i32 0
  %RCX.i635 = bitcast %union.anon* %4675 to i64*
  %4676 = load i64, i64* %PC.i634
  %4677 = add i64 %4676, 7
  store i64 %4677, i64* %PC.i634
  %4678 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %4679 = zext i32 %4678 to i64
  store i64 %4679, i64* %RCX.i635, align 8
  store %struct.Memory* %loadMem_400ee1, %struct.Memory** %MEMORY
  %loadMem_400ee8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4681 = getelementptr inbounds %struct.GPR, %struct.GPR* %4680, i32 0, i32 33
  %4682 = getelementptr inbounds %struct.Reg, %struct.Reg* %4681, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %4682 to i64*
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 5
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %RCX.i633 = bitcast %union.anon* %4685 to i64*
  %4686 = load i64, i64* %RCX.i633
  %4687 = load i64, i64* %PC.i632
  %4688 = add i64 %4687, 7
  store i64 %4688, i64* %PC.i632
  %4689 = trunc i64 %4686 to i32
  %4690 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %4691 = sub i32 %4689, %4690
  %4692 = zext i32 %4691 to i64
  store i64 %4692, i64* %RCX.i633, align 8
  %4693 = icmp ult i32 %4689, %4690
  %4694 = zext i1 %4693 to i8
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4694, i8* %4695, align 1
  %4696 = and i32 %4691, 255
  %4697 = call i32 @llvm.ctpop.i32(i32 %4696)
  %4698 = trunc i32 %4697 to i8
  %4699 = and i8 %4698, 1
  %4700 = xor i8 %4699, 1
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4700, i8* %4701, align 1
  %4702 = xor i32 %4690, %4689
  %4703 = xor i32 %4702, %4691
  %4704 = lshr i32 %4703, 4
  %4705 = trunc i32 %4704 to i8
  %4706 = and i8 %4705, 1
  %4707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4706, i8* %4707, align 1
  %4708 = icmp eq i32 %4691, 0
  %4709 = zext i1 %4708 to i8
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4709, i8* %4710, align 1
  %4711 = lshr i32 %4691, 31
  %4712 = trunc i32 %4711 to i8
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4712, i8* %4713, align 1
  %4714 = lshr i32 %4689, 31
  %4715 = lshr i32 %4690, 31
  %4716 = xor i32 %4715, %4714
  %4717 = xor i32 %4711, %4714
  %4718 = add i32 %4717, %4716
  %4719 = icmp eq i32 %4718, 2
  %4720 = zext i1 %4719 to i8
  %4721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4720, i8* %4721, align 1
  store %struct.Memory* %loadMem_400ee8, %struct.Memory** %MEMORY
  %loadMem_400eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %4722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4723 = getelementptr inbounds %struct.GPR, %struct.GPR* %4722, i32 0, i32 33
  %4724 = getelementptr inbounds %struct.Reg, %struct.Reg* %4723, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %4724 to i64*
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4726 = getelementptr inbounds %struct.GPR, %struct.GPR* %4725, i32 0, i32 5
  %4727 = getelementptr inbounds %struct.Reg, %struct.Reg* %4726, i32 0, i32 0
  %ECX.i630 = bitcast %union.anon* %4727 to i32*
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4729 = getelementptr inbounds %struct.GPR, %struct.GPR* %4728, i32 0, i32 1
  %4730 = getelementptr inbounds %struct.Reg, %struct.Reg* %4729, i32 0, i32 0
  %RAX.i631 = bitcast %union.anon* %4730 to i64*
  %4731 = load i64, i64* %RAX.i631
  %4732 = load i32, i32* %ECX.i630
  %4733 = zext i32 %4732 to i64
  %4734 = load i64, i64* %PC.i629
  %4735 = add i64 %4734, 3
  store i64 %4735, i64* %PC.i629
  %4736 = shl i64 %4731, 32
  %4737 = ashr exact i64 %4736, 32
  %4738 = shl i64 %4733, 32
  %4739 = ashr exact i64 %4738, 32
  %4740 = mul i64 %4739, %4737
  %4741 = trunc i64 %4740 to i32
  %4742 = and i64 %4740, 4294967295
  store i64 %4742, i64* %RAX.i631, align 8
  %4743 = shl i64 %4740, 32
  %4744 = ashr exact i64 %4743, 32
  %4745 = icmp ne i64 %4744, %4740
  %4746 = zext i1 %4745 to i8
  %4747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4746, i8* %4747, align 1
  %4748 = and i32 %4741, 255
  %4749 = call i32 @llvm.ctpop.i32(i32 %4748)
  %4750 = trunc i32 %4749 to i8
  %4751 = and i8 %4750, 1
  %4752 = xor i8 %4751, 1
  %4753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4752, i8* %4753, align 1
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4754, align 1
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4755, align 1
  %4756 = lshr i32 %4741, 31
  %4757 = trunc i32 %4756 to i8
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4757, i8* %4758, align 1
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4746, i8* %4759, align 1
  store %struct.Memory* %loadMem_400eef, %struct.Memory** %MEMORY
  %loadMem_400ef2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4761 = getelementptr inbounds %struct.GPR, %struct.GPR* %4760, i32 0, i32 33
  %4762 = getelementptr inbounds %struct.Reg, %struct.Reg* %4761, i32 0, i32 0
  %PC.i627 = bitcast %union.anon* %4762 to i64*
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4764 = getelementptr inbounds %struct.GPR, %struct.GPR* %4763, i32 0, i32 1
  %4765 = getelementptr inbounds %struct.Reg, %struct.Reg* %4764, i32 0, i32 0
  %EAX.i628 = bitcast %union.anon* %4765 to i32*
  %4766 = load i32, i32* %EAX.i628
  %4767 = zext i32 %4766 to i64
  %4768 = load i64, i64* %PC.i627
  %4769 = add i64 %4768, 7
  store i64 %4769, i64* %PC.i627
  store i32 %4766, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_400ef2, %struct.Memory** %MEMORY
  %loadMem_400ef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4771 = getelementptr inbounds %struct.GPR, %struct.GPR* %4770, i32 0, i32 33
  %4772 = getelementptr inbounds %struct.Reg, %struct.Reg* %4771, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %4772 to i64*
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4774 = getelementptr inbounds %struct.GPR, %struct.GPR* %4773, i32 0, i32 1
  %4775 = getelementptr inbounds %struct.Reg, %struct.Reg* %4774, i32 0, i32 0
  %RAX.i626 = bitcast %union.anon* %4775 to i64*
  %4776 = load i64, i64* %PC.i625
  %4777 = add i64 %4776, 7
  store i64 %4777, i64* %PC.i625
  %4778 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %4779 = zext i32 %4778 to i64
  store i64 %4779, i64* %RAX.i626, align 8
  store %struct.Memory* %loadMem_400ef9, %struct.Memory** %MEMORY
  %loadMem_400f00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4781 = getelementptr inbounds %struct.GPR, %struct.GPR* %4780, i32 0, i32 33
  %4782 = getelementptr inbounds %struct.Reg, %struct.Reg* %4781, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %4782 to i64*
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4784 = getelementptr inbounds %struct.GPR, %struct.GPR* %4783, i32 0, i32 1
  %4785 = getelementptr inbounds %struct.Reg, %struct.Reg* %4784, i32 0, i32 0
  %RAX.i624 = bitcast %union.anon* %4785 to i64*
  %4786 = load i64, i64* %RAX.i624
  %4787 = load i64, i64* %PC.i623
  %4788 = add i64 %4787, 8
  store i64 %4788, i64* %PC.i623
  %4789 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %4790 = shl i64 %4786, 32
  %4791 = ashr exact i64 %4790, 32
  %4792 = sext i32 %4789 to i64
  %4793 = mul i64 %4792, %4791
  %4794 = trunc i64 %4793 to i32
  %4795 = and i64 %4793, 4294967295
  store i64 %4795, i64* %RAX.i624, align 8
  %4796 = shl i64 %4793, 32
  %4797 = ashr exact i64 %4796, 32
  %4798 = icmp ne i64 %4797, %4793
  %4799 = zext i1 %4798 to i8
  %4800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4799, i8* %4800, align 1
  %4801 = and i32 %4794, 255
  %4802 = call i32 @llvm.ctpop.i32(i32 %4801)
  %4803 = trunc i32 %4802 to i8
  %4804 = and i8 %4803, 1
  %4805 = xor i8 %4804, 1
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4805, i8* %4806, align 1
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4807, align 1
  %4808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4808, align 1
  %4809 = lshr i32 %4794, 31
  %4810 = trunc i32 %4809 to i8
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4810, i8* %4811, align 1
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4799, i8* %4812, align 1
  store %struct.Memory* %loadMem_400f00, %struct.Memory** %MEMORY
  %loadMem_400f08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4814 = getelementptr inbounds %struct.GPR, %struct.GPR* %4813, i32 0, i32 33
  %4815 = getelementptr inbounds %struct.Reg, %struct.Reg* %4814, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %4815 to i64*
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4817 = getelementptr inbounds %struct.GPR, %struct.GPR* %4816, i32 0, i32 5
  %4818 = getelementptr inbounds %struct.Reg, %struct.Reg* %4817, i32 0, i32 0
  %RCX.i622 = bitcast %union.anon* %4818 to i64*
  %4819 = load i64, i64* %PC.i621
  %4820 = add i64 %4819, 7
  store i64 %4820, i64* %PC.i621
  %4821 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %4822 = zext i32 %4821 to i64
  store i64 %4822, i64* %RCX.i622, align 8
  store %struct.Memory* %loadMem_400f08, %struct.Memory** %MEMORY
  %loadMem_400f0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4824 = getelementptr inbounds %struct.GPR, %struct.GPR* %4823, i32 0, i32 33
  %4825 = getelementptr inbounds %struct.Reg, %struct.Reg* %4824, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %4825 to i64*
  %4826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4827 = getelementptr inbounds %struct.GPR, %struct.GPR* %4826, i32 0, i32 5
  %4828 = getelementptr inbounds %struct.Reg, %struct.Reg* %4827, i32 0, i32 0
  %RCX.i620 = bitcast %union.anon* %4828 to i64*
  %4829 = load i64, i64* %RCX.i620
  %4830 = load i64, i64* %PC.i619
  %4831 = add i64 %4830, 7
  store i64 %4831, i64* %PC.i619
  %4832 = trunc i64 %4829 to i32
  %4833 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %4834 = sub i32 %4832, %4833
  %4835 = zext i32 %4834 to i64
  store i64 %4835, i64* %RCX.i620, align 8
  %4836 = icmp ult i32 %4832, %4833
  %4837 = zext i1 %4836 to i8
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4837, i8* %4838, align 1
  %4839 = and i32 %4834, 255
  %4840 = call i32 @llvm.ctpop.i32(i32 %4839)
  %4841 = trunc i32 %4840 to i8
  %4842 = and i8 %4841, 1
  %4843 = xor i8 %4842, 1
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4843, i8* %4844, align 1
  %4845 = xor i32 %4833, %4832
  %4846 = xor i32 %4845, %4834
  %4847 = lshr i32 %4846, 4
  %4848 = trunc i32 %4847 to i8
  %4849 = and i8 %4848, 1
  %4850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4849, i8* %4850, align 1
  %4851 = icmp eq i32 %4834, 0
  %4852 = zext i1 %4851 to i8
  %4853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4852, i8* %4853, align 1
  %4854 = lshr i32 %4834, 31
  %4855 = trunc i32 %4854 to i8
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4855, i8* %4856, align 1
  %4857 = lshr i32 %4832, 31
  %4858 = lshr i32 %4833, 31
  %4859 = xor i32 %4858, %4857
  %4860 = xor i32 %4854, %4857
  %4861 = add i32 %4860, %4859
  %4862 = icmp eq i32 %4861, 2
  %4863 = zext i1 %4862 to i8
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4863, i8* %4864, align 1
  store %struct.Memory* %loadMem_400f0f, %struct.Memory** %MEMORY
  %loadMem_400f16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4866 = getelementptr inbounds %struct.GPR, %struct.GPR* %4865, i32 0, i32 33
  %4867 = getelementptr inbounds %struct.Reg, %struct.Reg* %4866, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %4867 to i64*
  %4868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4869 = getelementptr inbounds %struct.GPR, %struct.GPR* %4868, i32 0, i32 5
  %4870 = getelementptr inbounds %struct.Reg, %struct.Reg* %4869, i32 0, i32 0
  %RCX.i618 = bitcast %union.anon* %4870 to i64*
  %4871 = load i64, i64* %RCX.i618
  %4872 = load i64, i64* %PC.i617
  %4873 = add i64 %4872, 8
  store i64 %4873, i64* %PC.i617
  %4874 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %4875 = shl i64 %4871, 32
  %4876 = ashr exact i64 %4875, 32
  %4877 = sext i32 %4874 to i64
  %4878 = mul i64 %4877, %4876
  %4879 = trunc i64 %4878 to i32
  %4880 = and i64 %4878, 4294967295
  store i64 %4880, i64* %RCX.i618, align 8
  %4881 = shl i64 %4878, 32
  %4882 = ashr exact i64 %4881, 32
  %4883 = icmp ne i64 %4882, %4878
  %4884 = zext i1 %4883 to i8
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4884, i8* %4885, align 1
  %4886 = and i32 %4879, 255
  %4887 = call i32 @llvm.ctpop.i32(i32 %4886)
  %4888 = trunc i32 %4887 to i8
  %4889 = and i8 %4888, 1
  %4890 = xor i8 %4889, 1
  %4891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4890, i8* %4891, align 1
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4892, align 1
  %4893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4893, align 1
  %4894 = lshr i32 %4879, 31
  %4895 = trunc i32 %4894 to i8
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4895, i8* %4896, align 1
  %4897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4884, i8* %4897, align 1
  store %struct.Memory* %loadMem_400f16, %struct.Memory** %MEMORY
  %loadMem_400f1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4899 = getelementptr inbounds %struct.GPR, %struct.GPR* %4898, i32 0, i32 33
  %4900 = getelementptr inbounds %struct.Reg, %struct.Reg* %4899, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %4900 to i64*
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4902 = getelementptr inbounds %struct.GPR, %struct.GPR* %4901, i32 0, i32 5
  %4903 = getelementptr inbounds %struct.Reg, %struct.Reg* %4902, i32 0, i32 0
  %ECX.i615 = bitcast %union.anon* %4903 to i32*
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4905 = getelementptr inbounds %struct.GPR, %struct.GPR* %4904, i32 0, i32 1
  %4906 = getelementptr inbounds %struct.Reg, %struct.Reg* %4905, i32 0, i32 0
  %RAX.i616 = bitcast %union.anon* %4906 to i64*
  %4907 = load i64, i64* %RAX.i616
  %4908 = load i32, i32* %ECX.i615
  %4909 = zext i32 %4908 to i64
  %4910 = load i64, i64* %PC.i614
  %4911 = add i64 %4910, 2
  store i64 %4911, i64* %PC.i614
  %4912 = trunc i64 %4907 to i32
  %4913 = sub i32 %4912, %4908
  %4914 = zext i32 %4913 to i64
  store i64 %4914, i64* %RAX.i616, align 8
  %4915 = icmp ult i32 %4912, %4908
  %4916 = zext i1 %4915 to i8
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4916, i8* %4917, align 1
  %4918 = and i32 %4913, 255
  %4919 = call i32 @llvm.ctpop.i32(i32 %4918)
  %4920 = trunc i32 %4919 to i8
  %4921 = and i8 %4920, 1
  %4922 = xor i8 %4921, 1
  %4923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4922, i8* %4923, align 1
  %4924 = xor i64 %4909, %4907
  %4925 = trunc i64 %4924 to i32
  %4926 = xor i32 %4925, %4913
  %4927 = lshr i32 %4926, 4
  %4928 = trunc i32 %4927 to i8
  %4929 = and i8 %4928, 1
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4929, i8* %4930, align 1
  %4931 = icmp eq i32 %4913, 0
  %4932 = zext i1 %4931 to i8
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4932, i8* %4933, align 1
  %4934 = lshr i32 %4913, 31
  %4935 = trunc i32 %4934 to i8
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4935, i8* %4936, align 1
  %4937 = lshr i32 %4912, 31
  %4938 = lshr i32 %4908, 31
  %4939 = xor i32 %4938, %4937
  %4940 = xor i32 %4934, %4937
  %4941 = add i32 %4940, %4939
  %4942 = icmp eq i32 %4941, 2
  %4943 = zext i1 %4942 to i8
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4943, i8* %4944, align 1
  store %struct.Memory* %loadMem_400f1e, %struct.Memory** %MEMORY
  %loadMem_400f20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4946 = getelementptr inbounds %struct.GPR, %struct.GPR* %4945, i32 0, i32 33
  %4947 = getelementptr inbounds %struct.Reg, %struct.Reg* %4946, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %4947 to i64*
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4949 = getelementptr inbounds %struct.GPR, %struct.GPR* %4948, i32 0, i32 1
  %4950 = getelementptr inbounds %struct.Reg, %struct.Reg* %4949, i32 0, i32 0
  %EAX.i613 = bitcast %union.anon* %4950 to i32*
  %4951 = load i32, i32* %EAX.i613
  %4952 = zext i32 %4951 to i64
  %4953 = load i64, i64* %PC.i612
  %4954 = add i64 %4953, 7
  store i64 %4954, i64* %PC.i612
  store i32 %4951, i32* inttoptr (i64 6299820 to i32*)
  store %struct.Memory* %loadMem_400f20, %struct.Memory** %MEMORY
  %loadMem_400f27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4956 = getelementptr inbounds %struct.GPR, %struct.GPR* %4955, i32 0, i32 33
  %4957 = getelementptr inbounds %struct.Reg, %struct.Reg* %4956, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %4957 to i64*
  %4958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4959 = getelementptr inbounds %struct.GPR, %struct.GPR* %4958, i32 0, i32 1
  %4960 = getelementptr inbounds %struct.Reg, %struct.Reg* %4959, i32 0, i32 0
  %RAX.i611 = bitcast %union.anon* %4960 to i64*
  %4961 = load i64, i64* %PC.i610
  %4962 = add i64 %4961, 7
  store i64 %4962, i64* %PC.i610
  %4963 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %4964 = zext i32 %4963 to i64
  store i64 %4964, i64* %RAX.i611, align 8
  store %struct.Memory* %loadMem_400f27, %struct.Memory** %MEMORY
  %loadMem_400f2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4966 = getelementptr inbounds %struct.GPR, %struct.GPR* %4965, i32 0, i32 33
  %4967 = getelementptr inbounds %struct.Reg, %struct.Reg* %4966, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %4967 to i64*
  %4968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4969 = getelementptr inbounds %struct.GPR, %struct.GPR* %4968, i32 0, i32 1
  %4970 = getelementptr inbounds %struct.Reg, %struct.Reg* %4969, i32 0, i32 0
  %RAX.i609 = bitcast %union.anon* %4970 to i64*
  %4971 = load i64, i64* %RAX.i609
  %4972 = load i64, i64* %PC.i608
  %4973 = add i64 %4972, 7
  store i64 %4973, i64* %PC.i608
  %4974 = trunc i64 %4971 to i32
  %4975 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %4976 = sub i32 %4974, %4975
  %4977 = zext i32 %4976 to i64
  store i64 %4977, i64* %RAX.i609, align 8
  %4978 = icmp ult i32 %4974, %4975
  %4979 = zext i1 %4978 to i8
  %4980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4979, i8* %4980, align 1
  %4981 = and i32 %4976, 255
  %4982 = call i32 @llvm.ctpop.i32(i32 %4981)
  %4983 = trunc i32 %4982 to i8
  %4984 = and i8 %4983, 1
  %4985 = xor i8 %4984, 1
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4985, i8* %4986, align 1
  %4987 = xor i32 %4975, %4974
  %4988 = xor i32 %4987, %4976
  %4989 = lshr i32 %4988, 4
  %4990 = trunc i32 %4989 to i8
  %4991 = and i8 %4990, 1
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4991, i8* %4992, align 1
  %4993 = icmp eq i32 %4976, 0
  %4994 = zext i1 %4993 to i8
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4994, i8* %4995, align 1
  %4996 = lshr i32 %4976, 31
  %4997 = trunc i32 %4996 to i8
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4997, i8* %4998, align 1
  %4999 = lshr i32 %4974, 31
  %5000 = lshr i32 %4975, 31
  %5001 = xor i32 %5000, %4999
  %5002 = xor i32 %4996, %4999
  %5003 = add i32 %5002, %5001
  %5004 = icmp eq i32 %5003, 2
  %5005 = zext i1 %5004 to i8
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5005, i8* %5006, align 1
  store %struct.Memory* %loadMem_400f2e, %struct.Memory** %MEMORY
  %loadMem_400f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5008 = getelementptr inbounds %struct.GPR, %struct.GPR* %5007, i32 0, i32 33
  %5009 = getelementptr inbounds %struct.Reg, %struct.Reg* %5008, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %5009 to i64*
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5011 = getelementptr inbounds %struct.GPR, %struct.GPR* %5010, i32 0, i32 5
  %5012 = getelementptr inbounds %struct.Reg, %struct.Reg* %5011, i32 0, i32 0
  %RCX.i607 = bitcast %union.anon* %5012 to i64*
  %5013 = load i64, i64* %PC.i606
  %5014 = add i64 %5013, 7
  store i64 %5014, i64* %PC.i606
  %5015 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %5016 = zext i32 %5015 to i64
  store i64 %5016, i64* %RCX.i607, align 8
  store %struct.Memory* %loadMem_400f35, %struct.Memory** %MEMORY
  %loadMem_400f3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5018 = getelementptr inbounds %struct.GPR, %struct.GPR* %5017, i32 0, i32 33
  %5019 = getelementptr inbounds %struct.Reg, %struct.Reg* %5018, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %5019 to i64*
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5021 = getelementptr inbounds %struct.GPR, %struct.GPR* %5020, i32 0, i32 5
  %5022 = getelementptr inbounds %struct.Reg, %struct.Reg* %5021, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %5022 to i64*
  %5023 = load i64, i64* %RCX.i
  %5024 = load i64, i64* %PC.i605
  %5025 = add i64 %5024, 7
  store i64 %5025, i64* %PC.i605
  %5026 = trunc i64 %5023 to i32
  %5027 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %5028 = add i32 %5027, %5026
  %5029 = zext i32 %5028 to i64
  store i64 %5029, i64* %RCX.i, align 8
  %5030 = icmp ult i32 %5028, %5026
  %5031 = icmp ult i32 %5028, %5027
  %5032 = or i1 %5030, %5031
  %5033 = zext i1 %5032 to i8
  %5034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5033, i8* %5034, align 1
  %5035 = and i32 %5028, 255
  %5036 = call i32 @llvm.ctpop.i32(i32 %5035)
  %5037 = trunc i32 %5036 to i8
  %5038 = and i8 %5037, 1
  %5039 = xor i8 %5038, 1
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5039, i8* %5040, align 1
  %5041 = xor i32 %5027, %5026
  %5042 = xor i32 %5041, %5028
  %5043 = lshr i32 %5042, 4
  %5044 = trunc i32 %5043 to i8
  %5045 = and i8 %5044, 1
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5045, i8* %5046, align 1
  %5047 = icmp eq i32 %5028, 0
  %5048 = zext i1 %5047 to i8
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5048, i8* %5049, align 1
  %5050 = lshr i32 %5028, 31
  %5051 = trunc i32 %5050 to i8
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5051, i8* %5052, align 1
  %5053 = lshr i32 %5026, 31
  %5054 = lshr i32 %5027, 31
  %5055 = xor i32 %5050, %5053
  %5056 = xor i32 %5050, %5054
  %5057 = add i32 %5055, %5056
  %5058 = icmp eq i32 %5057, 2
  %5059 = zext i1 %5058 to i8
  %5060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5059, i8* %5060, align 1
  store %struct.Memory* %loadMem_400f3c, %struct.Memory** %MEMORY
  %loadMem_400f43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 33
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %5063 to i64*
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5065 = getelementptr inbounds %struct.GPR, %struct.GPR* %5064, i32 0, i32 5
  %5066 = getelementptr inbounds %struct.Reg, %struct.Reg* %5065, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %5066 to i32*
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5068 = getelementptr inbounds %struct.GPR, %struct.GPR* %5067, i32 0, i32 1
  %5069 = getelementptr inbounds %struct.Reg, %struct.Reg* %5068, i32 0, i32 0
  %RAX.i604 = bitcast %union.anon* %5069 to i64*
  %5070 = load i64, i64* %RAX.i604
  %5071 = load i32, i32* %ECX.i
  %5072 = zext i32 %5071 to i64
  %5073 = load i64, i64* %PC.i603
  %5074 = add i64 %5073, 3
  store i64 %5074, i64* %PC.i603
  %5075 = shl i64 %5070, 32
  %5076 = ashr exact i64 %5075, 32
  %5077 = shl i64 %5072, 32
  %5078 = ashr exact i64 %5077, 32
  %5079 = mul i64 %5078, %5076
  %5080 = trunc i64 %5079 to i32
  %5081 = and i64 %5079, 4294967295
  store i64 %5081, i64* %RAX.i604, align 8
  %5082 = shl i64 %5079, 32
  %5083 = ashr exact i64 %5082, 32
  %5084 = icmp ne i64 %5083, %5079
  %5085 = zext i1 %5084 to i8
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5085, i8* %5086, align 1
  %5087 = and i32 %5080, 255
  %5088 = call i32 @llvm.ctpop.i32(i32 %5087)
  %5089 = trunc i32 %5088 to i8
  %5090 = and i8 %5089, 1
  %5091 = xor i8 %5090, 1
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5091, i8* %5092, align 1
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5093, align 1
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5094, align 1
  %5095 = lshr i32 %5080, 31
  %5096 = trunc i32 %5095 to i8
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5096, i8* %5097, align 1
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5085, i8* %5098, align 1
  store %struct.Memory* %loadMem_400f43, %struct.Memory** %MEMORY
  %loadMem_400f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5100 = getelementptr inbounds %struct.GPR, %struct.GPR* %5099, i32 0, i32 33
  %5101 = getelementptr inbounds %struct.Reg, %struct.Reg* %5100, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %5101 to i64*
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5103 = getelementptr inbounds %struct.GPR, %struct.GPR* %5102, i32 0, i32 1
  %5104 = getelementptr inbounds %struct.Reg, %struct.Reg* %5103, i32 0, i32 0
  %EAX.i602 = bitcast %union.anon* %5104 to i32*
  %5105 = load i32, i32* %EAX.i602
  %5106 = zext i32 %5105 to i64
  %5107 = load i64, i64* %PC.i601
  %5108 = add i64 %5107, 7
  store i64 %5108, i64* %PC.i601
  store i32 %5105, i32* inttoptr (i64 6299816 to i32*)
  store %struct.Memory* %loadMem_400f46, %struct.Memory** %MEMORY
  %loadMem_400f4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5110 = getelementptr inbounds %struct.GPR, %struct.GPR* %5109, i32 0, i32 33
  %5111 = getelementptr inbounds %struct.Reg, %struct.Reg* %5110, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %5111 to i64*
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5113 = getelementptr inbounds %struct.GPR, %struct.GPR* %5112, i32 0, i32 1
  %5114 = getelementptr inbounds %struct.Reg, %struct.Reg* %5113, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %5114 to i64*
  %5115 = load i64, i64* %PC.i599
  %5116 = add i64 %5115, 7
  store i64 %5116, i64* %PC.i599
  %5117 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %5118 = zext i32 %5117 to i64
  store i64 %5118, i64* %RAX.i600, align 8
  store %struct.Memory* %loadMem_400f4d, %struct.Memory** %MEMORY
  %loadMem_400f54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5120 = getelementptr inbounds %struct.GPR, %struct.GPR* %5119, i32 0, i32 33
  %5121 = getelementptr inbounds %struct.Reg, %struct.Reg* %5120, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %5121 to i64*
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5123 = getelementptr inbounds %struct.GPR, %struct.GPR* %5122, i32 0, i32 1
  %5124 = getelementptr inbounds %struct.Reg, %struct.Reg* %5123, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %5124 to i64*
  %5125 = load i64, i64* %RAX.i598
  %5126 = load i64, i64* %PC.i597
  %5127 = add i64 %5126, 7
  store i64 %5127, i64* %PC.i597
  %5128 = trunc i64 %5125 to i32
  %5129 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %5130 = add i32 %5129, %5128
  %5131 = zext i32 %5130 to i64
  store i64 %5131, i64* %RAX.i598, align 8
  %5132 = icmp ult i32 %5130, %5128
  %5133 = icmp ult i32 %5130, %5129
  %5134 = or i1 %5132, %5133
  %5135 = zext i1 %5134 to i8
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5135, i8* %5136, align 1
  %5137 = and i32 %5130, 255
  %5138 = call i32 @llvm.ctpop.i32(i32 %5137)
  %5139 = trunc i32 %5138 to i8
  %5140 = and i8 %5139, 1
  %5141 = xor i8 %5140, 1
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5141, i8* %5142, align 1
  %5143 = xor i32 %5129, %5128
  %5144 = xor i32 %5143, %5130
  %5145 = lshr i32 %5144, 4
  %5146 = trunc i32 %5145 to i8
  %5147 = and i8 %5146, 1
  %5148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5147, i8* %5148, align 1
  %5149 = icmp eq i32 %5130, 0
  %5150 = zext i1 %5149 to i8
  %5151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5150, i8* %5151, align 1
  %5152 = lshr i32 %5130, 31
  %5153 = trunc i32 %5152 to i8
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5153, i8* %5154, align 1
  %5155 = lshr i32 %5128, 31
  %5156 = lshr i32 %5129, 31
  %5157 = xor i32 %5152, %5155
  %5158 = xor i32 %5152, %5156
  %5159 = add i32 %5157, %5158
  %5160 = icmp eq i32 %5159, 2
  %5161 = zext i1 %5160 to i8
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5161, i8* %5162, align 1
  store %struct.Memory* %loadMem_400f54, %struct.Memory** %MEMORY
  %loadMem_400f5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5164 = getelementptr inbounds %struct.GPR, %struct.GPR* %5163, i32 0, i32 33
  %5165 = getelementptr inbounds %struct.Reg, %struct.Reg* %5164, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %5165 to i64*
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5167 = getelementptr inbounds %struct.GPR, %struct.GPR* %5166, i32 0, i32 1
  %5168 = getelementptr inbounds %struct.Reg, %struct.Reg* %5167, i32 0, i32 0
  %RAX.i596 = bitcast %union.anon* %5168 to i64*
  %5169 = load i64, i64* %RAX.i596
  %5170 = load i64, i64* %PC.i595
  %5171 = add i64 %5170, 7
  store i64 %5171, i64* %PC.i595
  %5172 = trunc i64 %5169 to i32
  %5173 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %5174 = add i32 %5173, %5172
  %5175 = zext i32 %5174 to i64
  store i64 %5175, i64* %RAX.i596, align 8
  %5176 = icmp ult i32 %5174, %5172
  %5177 = icmp ult i32 %5174, %5173
  %5178 = or i1 %5176, %5177
  %5179 = zext i1 %5178 to i8
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5179, i8* %5180, align 1
  %5181 = and i32 %5174, 255
  %5182 = call i32 @llvm.ctpop.i32(i32 %5181)
  %5183 = trunc i32 %5182 to i8
  %5184 = and i8 %5183, 1
  %5185 = xor i8 %5184, 1
  %5186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5185, i8* %5186, align 1
  %5187 = xor i32 %5173, %5172
  %5188 = xor i32 %5187, %5174
  %5189 = lshr i32 %5188, 4
  %5190 = trunc i32 %5189 to i8
  %5191 = and i8 %5190, 1
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5191, i8* %5192, align 1
  %5193 = icmp eq i32 %5174, 0
  %5194 = zext i1 %5193 to i8
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5194, i8* %5195, align 1
  %5196 = lshr i32 %5174, 31
  %5197 = trunc i32 %5196 to i8
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5197, i8* %5198, align 1
  %5199 = lshr i32 %5172, 31
  %5200 = lshr i32 %5173, 31
  %5201 = xor i32 %5196, %5199
  %5202 = xor i32 %5196, %5200
  %5203 = add i32 %5201, %5202
  %5204 = icmp eq i32 %5203, 2
  %5205 = zext i1 %5204 to i8
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5205, i8* %5206, align 1
  store %struct.Memory* %loadMem_400f5b, %struct.Memory** %MEMORY
  %loadMem_400f62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5208 = getelementptr inbounds %struct.GPR, %struct.GPR* %5207, i32 0, i32 33
  %5209 = getelementptr inbounds %struct.Reg, %struct.Reg* %5208, i32 0, i32 0
  %PC.i592 = bitcast %union.anon* %5209 to i64*
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5211 = getelementptr inbounds %struct.GPR, %struct.GPR* %5210, i32 0, i32 1
  %5212 = getelementptr inbounds %struct.Reg, %struct.Reg* %5211, i32 0, i32 0
  %EAX.i593 = bitcast %union.anon* %5212 to i32*
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5214 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5213, i64 0, i64 0
  %YMM0.i594 = bitcast %union.VectorReg* %5214 to %"class.std::bitset"*
  %5215 = bitcast %"class.std::bitset"* %YMM0.i594 to i8*
  %5216 = load i32, i32* %EAX.i593
  %5217 = zext i32 %5216 to i64
  %5218 = load i64, i64* %PC.i592
  %5219 = add i64 %5218, 4
  store i64 %5219, i64* %PC.i592
  %5220 = sitofp i32 %5216 to double
  %5221 = bitcast i8* %5215 to double*
  store double %5220, double* %5221, align 1
  store %struct.Memory* %loadMem_400f62, %struct.Memory** %MEMORY
  %loadMem_400f66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5223 = getelementptr inbounds %struct.GPR, %struct.GPR* %5222, i32 0, i32 33
  %5224 = getelementptr inbounds %struct.Reg, %struct.Reg* %5223, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %5224 to i64*
  %5225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5226 = getelementptr inbounds %struct.GPR, %struct.GPR* %5225, i32 0, i32 1
  %5227 = getelementptr inbounds %struct.Reg, %struct.Reg* %5226, i32 0, i32 0
  %RAX.i591 = bitcast %union.anon* %5227 to i64*
  %5228 = load i64, i64* %PC.i590
  %5229 = add i64 %5228, 7
  store i64 %5229, i64* %PC.i590
  %5230 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %5231 = zext i32 %5230 to i64
  store i64 %5231, i64* %RAX.i591, align 8
  store %struct.Memory* %loadMem_400f66, %struct.Memory** %MEMORY
  %loadMem_400f6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5233 = getelementptr inbounds %struct.GPR, %struct.GPR* %5232, i32 0, i32 33
  %5234 = getelementptr inbounds %struct.Reg, %struct.Reg* %5233, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %5234 to i64*
  %5235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5236 = getelementptr inbounds %struct.GPR, %struct.GPR* %5235, i32 0, i32 1
  %5237 = getelementptr inbounds %struct.Reg, %struct.Reg* %5236, i32 0, i32 0
  %RAX.i589 = bitcast %union.anon* %5237 to i64*
  %5238 = load i64, i64* %RAX.i589
  %5239 = load i64, i64* %PC.i588
  %5240 = add i64 %5239, 3
  store i64 %5240, i64* %PC.i588
  %5241 = trunc i64 %5238 to i32
  %5242 = sub i32 %5241, 1
  %5243 = zext i32 %5242 to i64
  store i64 %5243, i64* %RAX.i589, align 8
  %5244 = icmp ult i32 %5241, 1
  %5245 = zext i1 %5244 to i8
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5245, i8* %5246, align 1
  %5247 = and i32 %5242, 255
  %5248 = call i32 @llvm.ctpop.i32(i32 %5247)
  %5249 = trunc i32 %5248 to i8
  %5250 = and i8 %5249, 1
  %5251 = xor i8 %5250, 1
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5251, i8* %5252, align 1
  %5253 = xor i64 1, %5238
  %5254 = trunc i64 %5253 to i32
  %5255 = xor i32 %5254, %5242
  %5256 = lshr i32 %5255, 4
  %5257 = trunc i32 %5256 to i8
  %5258 = and i8 %5257, 1
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5258, i8* %5259, align 1
  %5260 = icmp eq i32 %5242, 0
  %5261 = zext i1 %5260 to i8
  %5262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5261, i8* %5262, align 1
  %5263 = lshr i32 %5242, 31
  %5264 = trunc i32 %5263 to i8
  %5265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5264, i8* %5265, align 1
  %5266 = lshr i32 %5241, 31
  %5267 = xor i32 %5263, %5266
  %5268 = add i32 %5267, %5266
  %5269 = icmp eq i32 %5268, 2
  %5270 = zext i1 %5269 to i8
  %5271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5270, i8* %5271, align 1
  store %struct.Memory* %loadMem_400f6d, %struct.Memory** %MEMORY
  %loadMem_400f70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5273 = getelementptr inbounds %struct.GPR, %struct.GPR* %5272, i32 0, i32 33
  %5274 = getelementptr inbounds %struct.Reg, %struct.Reg* %5273, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %5274 to i64*
  %5275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5276 = getelementptr inbounds %struct.GPR, %struct.GPR* %5275, i32 0, i32 1
  %5277 = getelementptr inbounds %struct.Reg, %struct.Reg* %5276, i32 0, i32 0
  %EAX.i586 = bitcast %union.anon* %5277 to i32*
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5279 = getelementptr inbounds %struct.GPR, %struct.GPR* %5278, i32 0, i32 7
  %5280 = getelementptr inbounds %struct.Reg, %struct.Reg* %5279, i32 0, i32 0
  %RDX.i587 = bitcast %union.anon* %5280 to i64*
  %5281 = load i32, i32* %EAX.i586
  %5282 = zext i32 %5281 to i64
  %5283 = load i64, i64* %PC.i585
  %5284 = add i64 %5283, 3
  store i64 %5284, i64* %PC.i585
  %5285 = shl i64 %5282, 32
  %5286 = ashr exact i64 %5285, 32
  store i64 %5286, i64* %RDX.i587, align 8
  store %struct.Memory* %loadMem_400f70, %struct.Memory** %MEMORY
  %loadMem_400f73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5288 = getelementptr inbounds %struct.GPR, %struct.GPR* %5287, i32 0, i32 33
  %5289 = getelementptr inbounds %struct.Reg, %struct.Reg* %5288, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %5289 to i64*
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5291 = getelementptr inbounds %struct.GPR, %struct.GPR* %5290, i32 0, i32 7
  %5292 = getelementptr inbounds %struct.Reg, %struct.Reg* %5291, i32 0, i32 0
  %RDX.i583 = bitcast %union.anon* %5292 to i64*
  %5293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5294 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5293, i64 0, i64 0
  %XMM0.i584 = bitcast %union.VectorReg* %5294 to %union.vec128_t*
  %5295 = load i64, i64* %RDX.i583
  %5296 = mul i64 %5295, 8
  %5297 = add i64 %5296, 6299840
  %5298 = bitcast %union.vec128_t* %XMM0.i584 to i8*
  %5299 = load i64, i64* %PC.i582
  %5300 = add i64 %5299, 9
  store i64 %5300, i64* %PC.i582
  %5301 = bitcast i8* %5298 to double*
  %5302 = load double, double* %5301, align 1
  %5303 = inttoptr i64 %5297 to double*
  store double %5302, double* %5303
  store %struct.Memory* %loadMem_400f73, %struct.Memory** %MEMORY
  %loadMem_400f7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5305 = getelementptr inbounds %struct.GPR, %struct.GPR* %5304, i32 0, i32 33
  %5306 = getelementptr inbounds %struct.Reg, %struct.Reg* %5305, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %5306 to i64*
  %5307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5308 = getelementptr inbounds %struct.GPR, %struct.GPR* %5307, i32 0, i32 1
  %5309 = getelementptr inbounds %struct.Reg, %struct.Reg* %5308, i32 0, i32 0
  %RAX.i581 = bitcast %union.anon* %5309 to i64*
  %5310 = load i64, i64* %PC.i580
  %5311 = add i64 %5310, 7
  store i64 %5311, i64* %PC.i580
  %5312 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %5313 = zext i32 %5312 to i64
  store i64 %5313, i64* %RAX.i581, align 8
  store %struct.Memory* %loadMem_400f7c, %struct.Memory** %MEMORY
  %loadMem_400f83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5315 = getelementptr inbounds %struct.GPR, %struct.GPR* %5314, i32 0, i32 33
  %5316 = getelementptr inbounds %struct.Reg, %struct.Reg* %5315, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %5316 to i64*
  %5317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5318 = getelementptr inbounds %struct.GPR, %struct.GPR* %5317, i32 0, i32 1
  %5319 = getelementptr inbounds %struct.Reg, %struct.Reg* %5318, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %5319 to i64*
  %5320 = load i64, i64* %RAX.i579
  %5321 = load i64, i64* %PC.i578
  %5322 = add i64 %5321, 8
  store i64 %5322, i64* %PC.i578
  %5323 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %5324 = shl i64 %5320, 32
  %5325 = ashr exact i64 %5324, 32
  %5326 = sext i32 %5323 to i64
  %5327 = mul i64 %5326, %5325
  %5328 = trunc i64 %5327 to i32
  %5329 = and i64 %5327, 4294967295
  store i64 %5329, i64* %RAX.i579, align 8
  %5330 = shl i64 %5327, 32
  %5331 = ashr exact i64 %5330, 32
  %5332 = icmp ne i64 %5331, %5327
  %5333 = zext i1 %5332 to i8
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5333, i8* %5334, align 1
  %5335 = and i32 %5328, 255
  %5336 = call i32 @llvm.ctpop.i32(i32 %5335)
  %5337 = trunc i32 %5336 to i8
  %5338 = and i8 %5337, 1
  %5339 = xor i8 %5338, 1
  %5340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5339, i8* %5340, align 1
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5341, align 1
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5342, align 1
  %5343 = lshr i32 %5328, 31
  %5344 = trunc i32 %5343 to i8
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5344, i8* %5345, align 1
  %5346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5333, i8* %5346, align 1
  store %struct.Memory* %loadMem_400f83, %struct.Memory** %MEMORY
  %loadMem_400f8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5348 = getelementptr inbounds %struct.GPR, %struct.GPR* %5347, i32 0, i32 33
  %5349 = getelementptr inbounds %struct.Reg, %struct.Reg* %5348, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %5349 to i64*
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5351 = getelementptr inbounds %struct.GPR, %struct.GPR* %5350, i32 0, i32 1
  %5352 = getelementptr inbounds %struct.Reg, %struct.Reg* %5351, i32 0, i32 0
  %RAX.i577 = bitcast %union.anon* %5352 to i64*
  %5353 = load i64, i64* %RAX.i577
  %5354 = load i64, i64* %PC.i576
  %5355 = add i64 %5354, 8
  store i64 %5355, i64* %PC.i576
  %5356 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %5357 = shl i64 %5353, 32
  %5358 = ashr exact i64 %5357, 32
  %5359 = sext i32 %5356 to i64
  %5360 = mul i64 %5359, %5358
  %5361 = trunc i64 %5360 to i32
  %5362 = and i64 %5360, 4294967295
  store i64 %5362, i64* %RAX.i577, align 8
  %5363 = shl i64 %5360, 32
  %5364 = ashr exact i64 %5363, 32
  %5365 = icmp ne i64 %5364, %5360
  %5366 = zext i1 %5365 to i8
  %5367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5366, i8* %5367, align 1
  %5368 = and i32 %5361, 255
  %5369 = call i32 @llvm.ctpop.i32(i32 %5368)
  %5370 = trunc i32 %5369 to i8
  %5371 = and i8 %5370, 1
  %5372 = xor i8 %5371, 1
  %5373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5372, i8* %5373, align 1
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5374, align 1
  %5375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5375, align 1
  %5376 = lshr i32 %5361, 31
  %5377 = trunc i32 %5376 to i8
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5377, i8* %5378, align 1
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5366, i8* %5379, align 1
  store %struct.Memory* %loadMem_400f8b, %struct.Memory** %MEMORY
  %loadMem_400f93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5381 = getelementptr inbounds %struct.GPR, %struct.GPR* %5380, i32 0, i32 33
  %5382 = getelementptr inbounds %struct.Reg, %struct.Reg* %5381, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %5382 to i64*
  %5383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5384 = getelementptr inbounds %struct.GPR, %struct.GPR* %5383, i32 0, i32 1
  %5385 = getelementptr inbounds %struct.Reg, %struct.Reg* %5384, i32 0, i32 0
  %EAX.i574 = bitcast %union.anon* %5385 to i32*
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5387 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5386, i64 0, i64 0
  %YMM0.i575 = bitcast %union.VectorReg* %5387 to %"class.std::bitset"*
  %5388 = bitcast %"class.std::bitset"* %YMM0.i575 to i8*
  %5389 = load i32, i32* %EAX.i574
  %5390 = zext i32 %5389 to i64
  %5391 = load i64, i64* %PC.i573
  %5392 = add i64 %5391, 4
  store i64 %5392, i64* %PC.i573
  %5393 = sitofp i32 %5389 to double
  %5394 = bitcast i8* %5388 to double*
  store double %5393, double* %5394, align 1
  store %struct.Memory* %loadMem_400f93, %struct.Memory** %MEMORY
  %loadMem_400f97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5396 = getelementptr inbounds %struct.GPR, %struct.GPR* %5395, i32 0, i32 33
  %5397 = getelementptr inbounds %struct.Reg, %struct.Reg* %5396, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %5397 to i64*
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5399 = getelementptr inbounds %struct.GPR, %struct.GPR* %5398, i32 0, i32 1
  %5400 = getelementptr inbounds %struct.Reg, %struct.Reg* %5399, i32 0, i32 0
  %RAX.i572 = bitcast %union.anon* %5400 to i64*
  %5401 = load i64, i64* %PC.i571
  %5402 = add i64 %5401, 7
  store i64 %5402, i64* %PC.i571
  %5403 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %5404 = zext i32 %5403 to i64
  store i64 %5404, i64* %RAX.i572, align 8
  store %struct.Memory* %loadMem_400f97, %struct.Memory** %MEMORY
  %loadMem_400f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5406 = getelementptr inbounds %struct.GPR, %struct.GPR* %5405, i32 0, i32 33
  %5407 = getelementptr inbounds %struct.Reg, %struct.Reg* %5406, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %5407 to i64*
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5409 = getelementptr inbounds %struct.GPR, %struct.GPR* %5408, i32 0, i32 1
  %5410 = getelementptr inbounds %struct.Reg, %struct.Reg* %5409, i32 0, i32 0
  %RAX.i570 = bitcast %union.anon* %5410 to i64*
  %5411 = load i64, i64* %RAX.i570
  %5412 = load i64, i64* %PC.i569
  %5413 = add i64 %5412, 3
  store i64 %5413, i64* %PC.i569
  %5414 = trunc i64 %5411 to i32
  %5415 = sub i32 %5414, 1
  %5416 = zext i32 %5415 to i64
  store i64 %5416, i64* %RAX.i570, align 8
  %5417 = icmp ult i32 %5414, 1
  %5418 = zext i1 %5417 to i8
  %5419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5418, i8* %5419, align 1
  %5420 = and i32 %5415, 255
  %5421 = call i32 @llvm.ctpop.i32(i32 %5420)
  %5422 = trunc i32 %5421 to i8
  %5423 = and i8 %5422, 1
  %5424 = xor i8 %5423, 1
  %5425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5424, i8* %5425, align 1
  %5426 = xor i64 1, %5411
  %5427 = trunc i64 %5426 to i32
  %5428 = xor i32 %5427, %5415
  %5429 = lshr i32 %5428, 4
  %5430 = trunc i32 %5429 to i8
  %5431 = and i8 %5430, 1
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5431, i8* %5432, align 1
  %5433 = icmp eq i32 %5415, 0
  %5434 = zext i1 %5433 to i8
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5434, i8* %5435, align 1
  %5436 = lshr i32 %5415, 31
  %5437 = trunc i32 %5436 to i8
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5437, i8* %5438, align 1
  %5439 = lshr i32 %5414, 31
  %5440 = xor i32 %5436, %5439
  %5441 = add i32 %5440, %5439
  %5442 = icmp eq i32 %5441, 2
  %5443 = zext i1 %5442 to i8
  %5444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5443, i8* %5444, align 1
  store %struct.Memory* %loadMem_400f9e, %struct.Memory** %MEMORY
  %loadMem_400fa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5446 = getelementptr inbounds %struct.GPR, %struct.GPR* %5445, i32 0, i32 33
  %5447 = getelementptr inbounds %struct.Reg, %struct.Reg* %5446, i32 0, i32 0
  %PC.i566 = bitcast %union.anon* %5447 to i64*
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5449 = getelementptr inbounds %struct.GPR, %struct.GPR* %5448, i32 0, i32 1
  %5450 = getelementptr inbounds %struct.Reg, %struct.Reg* %5449, i32 0, i32 0
  %EAX.i567 = bitcast %union.anon* %5450 to i32*
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5452 = getelementptr inbounds %struct.GPR, %struct.GPR* %5451, i32 0, i32 7
  %5453 = getelementptr inbounds %struct.Reg, %struct.Reg* %5452, i32 0, i32 0
  %RDX.i568 = bitcast %union.anon* %5453 to i64*
  %5454 = load i32, i32* %EAX.i567
  %5455 = zext i32 %5454 to i64
  %5456 = load i64, i64* %PC.i566
  %5457 = add i64 %5456, 3
  store i64 %5457, i64* %PC.i566
  %5458 = shl i64 %5455, 32
  %5459 = ashr exact i64 %5458, 32
  store i64 %5459, i64* %RDX.i568, align 8
  store %struct.Memory* %loadMem_400fa1, %struct.Memory** %MEMORY
  %loadMem_400fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5461 = getelementptr inbounds %struct.GPR, %struct.GPR* %5460, i32 0, i32 33
  %5462 = getelementptr inbounds %struct.Reg, %struct.Reg* %5461, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %5462 to i64*
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5464 = getelementptr inbounds %struct.GPR, %struct.GPR* %5463, i32 0, i32 7
  %5465 = getelementptr inbounds %struct.Reg, %struct.Reg* %5464, i32 0, i32 0
  %RDX.i564 = bitcast %union.anon* %5465 to i64*
  %5466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5467 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5466, i64 0, i64 0
  %XMM0.i565 = bitcast %union.VectorReg* %5467 to %union.vec128_t*
  %5468 = load i64, i64* %RDX.i564
  %5469 = mul i64 %5468, 8
  %5470 = add i64 %5469, 6299840
  %5471 = bitcast %union.vec128_t* %XMM0.i565 to i8*
  %5472 = load i64, i64* %PC.i563
  %5473 = add i64 %5472, 9
  store i64 %5473, i64* %PC.i563
  %5474 = bitcast i8* %5471 to double*
  %5475 = load double, double* %5474, align 1
  %5476 = inttoptr i64 %5470 to double*
  store double %5475, double* %5476
  store %struct.Memory* %loadMem_400fa4, %struct.Memory** %MEMORY
  %loadMem_400fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %5477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5478 = getelementptr inbounds %struct.GPR, %struct.GPR* %5477, i32 0, i32 33
  %5479 = getelementptr inbounds %struct.Reg, %struct.Reg* %5478, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %5479 to i64*
  %5480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5481 = getelementptr inbounds %struct.GPR, %struct.GPR* %5480, i32 0, i32 1
  %5482 = getelementptr inbounds %struct.Reg, %struct.Reg* %5481, i32 0, i32 0
  %RAX.i561 = bitcast %union.anon* %5482 to i64*
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5484 = getelementptr inbounds %struct.GPR, %struct.GPR* %5483, i32 0, i32 15
  %5485 = getelementptr inbounds %struct.Reg, %struct.Reg* %5484, i32 0, i32 0
  %RBP.i562 = bitcast %union.anon* %5485 to i64*
  %5486 = load i64, i64* %RBP.i562
  %5487 = sub i64 %5486, 24
  %5488 = load i64, i64* %PC.i560
  %5489 = add i64 %5488, 4
  store i64 %5489, i64* %PC.i560
  %5490 = inttoptr i64 %5487 to i64*
  %5491 = load i64, i64* %5490
  store i64 %5491, i64* %RAX.i561, align 8
  store %struct.Memory* %loadMem_400fad, %struct.Memory** %MEMORY
  %loadMem_400fb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5493 = getelementptr inbounds %struct.GPR, %struct.GPR* %5492, i32 0, i32 33
  %5494 = getelementptr inbounds %struct.Reg, %struct.Reg* %5493, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %5494 to i64*
  %5495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5496 = getelementptr inbounds %struct.GPR, %struct.GPR* %5495, i32 0, i32 1
  %5497 = getelementptr inbounds %struct.Reg, %struct.Reg* %5496, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %5497 to i64*
  %5498 = load i64, i64* %RAX.i559
  %5499 = load i64, i64* %PC.i558
  %5500 = add i64 %5499, 4
  store i64 %5500, i64* %PC.i558
  %5501 = add i64 1, %5498
  store i64 %5501, i64* %RAX.i559, align 8
  %5502 = icmp ult i64 %5501, %5498
  %5503 = icmp ult i64 %5501, 1
  %5504 = or i1 %5502, %5503
  %5505 = zext i1 %5504 to i8
  %5506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5505, i8* %5506, align 1
  %5507 = trunc i64 %5501 to i32
  %5508 = and i32 %5507, 255
  %5509 = call i32 @llvm.ctpop.i32(i32 %5508)
  %5510 = trunc i32 %5509 to i8
  %5511 = and i8 %5510, 1
  %5512 = xor i8 %5511, 1
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5512, i8* %5513, align 1
  %5514 = xor i64 1, %5498
  %5515 = xor i64 %5514, %5501
  %5516 = lshr i64 %5515, 4
  %5517 = trunc i64 %5516 to i8
  %5518 = and i8 %5517, 1
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5518, i8* %5519, align 1
  %5520 = icmp eq i64 %5501, 0
  %5521 = zext i1 %5520 to i8
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5521, i8* %5522, align 1
  %5523 = lshr i64 %5501, 63
  %5524 = trunc i64 %5523 to i8
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5524, i8* %5525, align 1
  %5526 = lshr i64 %5498, 63
  %5527 = xor i64 %5523, %5526
  %5528 = add i64 %5527, %5523
  %5529 = icmp eq i64 %5528, 2
  %5530 = zext i1 %5529 to i8
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5530, i8* %5531, align 1
  store %struct.Memory* %loadMem_400fb1, %struct.Memory** %MEMORY
  %loadMem_400fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5533 = getelementptr inbounds %struct.GPR, %struct.GPR* %5532, i32 0, i32 33
  %5534 = getelementptr inbounds %struct.Reg, %struct.Reg* %5533, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %5534 to i64*
  %5535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5536 = getelementptr inbounds %struct.GPR, %struct.GPR* %5535, i32 0, i32 1
  %5537 = getelementptr inbounds %struct.Reg, %struct.Reg* %5536, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %5537 to i64*
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5539 = getelementptr inbounds %struct.GPR, %struct.GPR* %5538, i32 0, i32 15
  %5540 = getelementptr inbounds %struct.Reg, %struct.Reg* %5539, i32 0, i32 0
  %RBP.i557 = bitcast %union.anon* %5540 to i64*
  %5541 = load i64, i64* %RBP.i557
  %5542 = sub i64 %5541, 24
  %5543 = load i64, i64* %RAX.i556
  %5544 = load i64, i64* %PC.i555
  %5545 = add i64 %5544, 4
  store i64 %5545, i64* %PC.i555
  %5546 = inttoptr i64 %5542 to i64*
  store i64 %5543, i64* %5546
  store %struct.Memory* %loadMem_400fb5, %struct.Memory** %MEMORY
  %loadMem_400fb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5548 = getelementptr inbounds %struct.GPR, %struct.GPR* %5547, i32 0, i32 33
  %5549 = getelementptr inbounds %struct.Reg, %struct.Reg* %5548, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %5549 to i64*
  %5550 = load i64, i64* %PC.i554
  %5551 = add i64 %5550, -254
  %5552 = load i64, i64* %PC.i554
  %5553 = add i64 %5552, 5
  store i64 %5553, i64* %PC.i554
  %5554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5551, i64* %5554, align 8
  store %struct.Memory* %loadMem_400fb9, %struct.Memory** %MEMORY
  br label %block_.L_400ebb

block_.L_400fbe:                                  ; preds = %block_.L_400ebb
  %loadMem_400fbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5556 = getelementptr inbounds %struct.GPR, %struct.GPR* %5555, i32 0, i32 33
  %5557 = getelementptr inbounds %struct.Reg, %struct.Reg* %5556, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %5557 to i64*
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5559 = getelementptr inbounds %struct.GPR, %struct.GPR* %5558, i32 0, i32 1
  %5560 = getelementptr inbounds %struct.Reg, %struct.Reg* %5559, i32 0, i32 0
  %RAX.i552 = bitcast %union.anon* %5560 to i64*
  %5561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5562 = getelementptr inbounds %struct.GPR, %struct.GPR* %5561, i32 0, i32 15
  %5563 = getelementptr inbounds %struct.Reg, %struct.Reg* %5562, i32 0, i32 0
  %RBP.i553 = bitcast %union.anon* %5563 to i64*
  %5564 = load i64, i64* %RBP.i553
  %5565 = sub i64 %5564, 176
  %5566 = load i64, i64* %PC.i551
  %5567 = add i64 %5566, 6
  store i64 %5567, i64* %PC.i551
  %5568 = inttoptr i64 %5565 to i32*
  %5569 = load i32, i32* %5568
  %5570 = zext i32 %5569 to i64
  store i64 %5570, i64* %RAX.i552, align 8
  store %struct.Memory* %loadMem_400fbe, %struct.Memory** %MEMORY
  %loadMem_400fc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5572 = getelementptr inbounds %struct.GPR, %struct.GPR* %5571, i32 0, i32 33
  %5573 = getelementptr inbounds %struct.Reg, %struct.Reg* %5572, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %5573 to i64*
  %5574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5575 = getelementptr inbounds %struct.GPR, %struct.GPR* %5574, i32 0, i32 1
  %5576 = getelementptr inbounds %struct.Reg, %struct.Reg* %5575, i32 0, i32 0
  %EAX.i549 = bitcast %union.anon* %5576 to i32*
  %5577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5578 = getelementptr inbounds %struct.GPR, %struct.GPR* %5577, i32 0, i32 15
  %5579 = getelementptr inbounds %struct.Reg, %struct.Reg* %5578, i32 0, i32 0
  %RBP.i550 = bitcast %union.anon* %5579 to i64*
  %5580 = load i32, i32* %EAX.i549
  %5581 = zext i32 %5580 to i64
  %5582 = load i64, i64* %RBP.i550
  %5583 = sub i64 %5582, 172
  %5584 = load i64, i64* %PC.i548
  %5585 = add i64 %5584, 6
  store i64 %5585, i64* %PC.i548
  %5586 = inttoptr i64 %5583 to i32*
  %5587 = load i32, i32* %5586
  %5588 = sub i32 %5580, %5587
  %5589 = icmp ult i32 %5580, %5587
  %5590 = zext i1 %5589 to i8
  %5591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5590, i8* %5591, align 1
  %5592 = and i32 %5588, 255
  %5593 = call i32 @llvm.ctpop.i32(i32 %5592)
  %5594 = trunc i32 %5593 to i8
  %5595 = and i8 %5594, 1
  %5596 = xor i8 %5595, 1
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5596, i8* %5597, align 1
  %5598 = xor i32 %5587, %5580
  %5599 = xor i32 %5598, %5588
  %5600 = lshr i32 %5599, 4
  %5601 = trunc i32 %5600 to i8
  %5602 = and i8 %5601, 1
  %5603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5602, i8* %5603, align 1
  %5604 = icmp eq i32 %5588, 0
  %5605 = zext i1 %5604 to i8
  %5606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5605, i8* %5606, align 1
  %5607 = lshr i32 %5588, 31
  %5608 = trunc i32 %5607 to i8
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5608, i8* %5609, align 1
  %5610 = lshr i32 %5580, 31
  %5611 = lshr i32 %5587, 31
  %5612 = xor i32 %5611, %5610
  %5613 = xor i32 %5607, %5610
  %5614 = add i32 %5613, %5612
  %5615 = icmp eq i32 %5614, 2
  %5616 = zext i1 %5615 to i8
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5616, i8* %5617, align 1
  store %struct.Memory* %loadMem_400fc4, %struct.Memory** %MEMORY
  %loadMem_400fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5619 = getelementptr inbounds %struct.GPR, %struct.GPR* %5618, i32 0, i32 33
  %5620 = getelementptr inbounds %struct.Reg, %struct.Reg* %5619, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %5620 to i64*
  %5621 = load i64, i64* %PC.i547
  %5622 = add i64 %5621, 67
  %5623 = load i64, i64* %PC.i547
  %5624 = add i64 %5623, 6
  %5625 = load i64, i64* %PC.i547
  %5626 = add i64 %5625, 6
  store i64 %5626, i64* %PC.i547
  %5627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5628 = load i8, i8* %5627, align 1
  %5629 = icmp eq i8 %5628, 0
  %5630 = zext i1 %5629 to i8
  store i8 %5630, i8* %BRANCH_TAKEN, align 1
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5632 = select i1 %5629, i64 %5622, i64 %5624
  store i64 %5632, i64* %5631, align 8
  store %struct.Memory* %loadMem_400fca, %struct.Memory** %MEMORY
  %loadBr_400fca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400fca = icmp eq i8 %loadBr_400fca, 1
  br i1 %cmpBr_400fca, label %block_.L_40100d, label %block_400fd0

block_400fd0:                                     ; preds = %block_.L_400fbe
  %loadMem_400fd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5634 = getelementptr inbounds %struct.GPR, %struct.GPR* %5633, i32 0, i32 33
  %5635 = getelementptr inbounds %struct.Reg, %struct.Reg* %5634, i32 0, i32 0
  %PC.i544 = bitcast %union.anon* %5635 to i64*
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5637 = getelementptr inbounds %struct.GPR, %struct.GPR* %5636, i32 0, i32 11
  %5638 = getelementptr inbounds %struct.Reg, %struct.Reg* %5637, i32 0, i32 0
  %RDI.i545 = bitcast %union.anon* %5638 to i64*
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5640 = getelementptr inbounds %struct.GPR, %struct.GPR* %5639, i32 0, i32 15
  %5641 = getelementptr inbounds %struct.Reg, %struct.Reg* %5640, i32 0, i32 0
  %RBP.i546 = bitcast %union.anon* %5641 to i64*
  %5642 = load i64, i64* %RBP.i546
  %5643 = sub i64 %5642, 64
  %5644 = load i64, i64* %PC.i544
  %5645 = add i64 %5644, 4
  store i64 %5645, i64* %PC.i544
  %5646 = inttoptr i64 %5643 to i64*
  %5647 = load i64, i64* %5646
  store i64 %5647, i64* %RDI.i545, align 8
  store %struct.Memory* %loadMem_400fd0, %struct.Memory** %MEMORY
  %loadMem_400fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5649 = getelementptr inbounds %struct.GPR, %struct.GPR* %5648, i32 0, i32 33
  %5650 = getelementptr inbounds %struct.Reg, %struct.Reg* %5649, i32 0, i32 0
  %PC.i542 = bitcast %union.anon* %5650 to i64*
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5652 = getelementptr inbounds %struct.GPR, %struct.GPR* %5651, i32 0, i32 9
  %5653 = getelementptr inbounds %struct.Reg, %struct.Reg* %5652, i32 0, i32 0
  %RSI.i543 = bitcast %union.anon* %5653 to i64*
  %5654 = load i64, i64* %PC.i542
  %5655 = add i64 %5654, 8
  store i64 %5655, i64* %PC.i542
  %5656 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %5657 = sext i32 %5656 to i64
  store i64 %5657, i64* %RSI.i543, align 8
  store %struct.Memory* %loadMem_400fd4, %struct.Memory** %MEMORY
  %loadMem_400fdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5659 = getelementptr inbounds %struct.GPR, %struct.GPR* %5658, i32 0, i32 33
  %5660 = getelementptr inbounds %struct.Reg, %struct.Reg* %5659, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %5660 to i64*
  %5661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5662 = getelementptr inbounds %struct.GPR, %struct.GPR* %5661, i32 0, i32 7
  %5663 = getelementptr inbounds %struct.Reg, %struct.Reg* %5662, i32 0, i32 0
  %RDX.i541 = bitcast %union.anon* %5663 to i64*
  %5664 = load i64, i64* %PC.i540
  %5665 = add i64 %5664, 8
  store i64 %5665, i64* %PC.i540
  %5666 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %5667 = sext i32 %5666 to i64
  store i64 %5667, i64* %RDX.i541, align 8
  store %struct.Memory* %loadMem_400fdc, %struct.Memory** %MEMORY
  %loadMem_400fe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5669 = getelementptr inbounds %struct.GPR, %struct.GPR* %5668, i32 0, i32 33
  %5670 = getelementptr inbounds %struct.Reg, %struct.Reg* %5669, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %5670 to i64*
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5672 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5671, i64 0, i64 0
  %YMM0.i539 = bitcast %union.VectorReg* %5672 to %"class.std::bitset"*
  %5673 = bitcast %"class.std::bitset"* %YMM0.i539 to i8*
  %5674 = load i64, i64* %PC.i538
  %5675 = add i64 %5674, 9
  store i64 %5675, i64* %PC.i538
  %5676 = load double, double* inttoptr (i64 6299848 to double*)
  %5677 = bitcast i8* %5673 to double*
  store double %5676, double* %5677, align 1
  %5678 = getelementptr inbounds i8, i8* %5673, i64 8
  %5679 = bitcast i8* %5678 to double*
  store double 0.000000e+00, double* %5679, align 1
  store %struct.Memory* %loadMem_400fe4, %struct.Memory** %MEMORY
  %loadMem_400fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5681 = getelementptr inbounds %struct.GPR, %struct.GPR* %5680, i32 0, i32 33
  %5682 = getelementptr inbounds %struct.Reg, %struct.Reg* %5681, i32 0, i32 0
  %PC.i536 = bitcast %union.anon* %5682 to i64*
  %5683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5684 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5683, i64 0, i64 1
  %YMM1.i537 = bitcast %union.VectorReg* %5684 to %"class.std::bitset"*
  %5685 = bitcast %"class.std::bitset"* %YMM1.i537 to i8*
  %5686 = load i64, i64* %PC.i536
  %5687 = add i64 %5686, 9
  store i64 %5687, i64* %PC.i536
  %5688 = load double, double* inttoptr (i64 6299856 to double*)
  %5689 = bitcast i8* %5685 to double*
  store double %5688, double* %5689, align 1
  %5690 = getelementptr inbounds i8, i8* %5685, i64 8
  %5691 = bitcast i8* %5690 to double*
  store double 0.000000e+00, double* %5691, align 1
  store %struct.Memory* %loadMem_400fed, %struct.Memory** %MEMORY
  %loadMem_400ff6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5693 = getelementptr inbounds %struct.GPR, %struct.GPR* %5692, i32 0, i32 33
  %5694 = getelementptr inbounds %struct.Reg, %struct.Reg* %5693, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %5694 to i64*
  %5695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5696 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5695, i64 0, i64 2
  %YMM2.i535 = bitcast %union.VectorReg* %5696 to %"class.std::bitset"*
  %5697 = bitcast %"class.std::bitset"* %YMM2.i535 to i8*
  %5698 = load i64, i64* %PC.i534
  %5699 = add i64 %5698, 9
  store i64 %5699, i64* %PC.i534
  %5700 = load double, double* inttoptr (i64 6299864 to double*)
  %5701 = bitcast i8* %5697 to double*
  store double %5700, double* %5701, align 1
  %5702 = getelementptr inbounds i8, i8* %5697, i64 8
  %5703 = bitcast i8* %5702 to double*
  store double 0.000000e+00, double* %5703, align 1
  store %struct.Memory* %loadMem_400ff6, %struct.Memory** %MEMORY
  %loadMem_400fff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5705 = getelementptr inbounds %struct.GPR, %struct.GPR* %5704, i32 0, i32 33
  %5706 = getelementptr inbounds %struct.Reg, %struct.Reg* %5705, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %5706 to i64*
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5708 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5707, i64 0, i64 3
  %YMM3.i533 = bitcast %union.VectorReg* %5708 to %"class.std::bitset"*
  %5709 = bitcast %"class.std::bitset"* %YMM3.i533 to i8*
  %5710 = load i64, i64* %PC.i532
  %5711 = add i64 %5710, 9
  store i64 %5711, i64* %PC.i532
  %5712 = load double, double* inttoptr (i64 6299872 to double*)
  %5713 = bitcast i8* %5709 to double*
  store double %5712, double* %5713, align 1
  %5714 = getelementptr inbounds i8, i8* %5709, i64 8
  %5715 = bitcast i8* %5714 to double*
  store double 0.000000e+00, double* %5715, align 1
  store %struct.Memory* %loadMem_400fff, %struct.Memory** %MEMORY
  %loadMem1_401008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5717 = getelementptr inbounds %struct.GPR, %struct.GPR* %5716, i32 0, i32 33
  %5718 = getelementptr inbounds %struct.Reg, %struct.Reg* %5717, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %5718 to i64*
  %5719 = load i64, i64* %PC.i531
  %5720 = add i64 %5719, 1496
  %5721 = load i64, i64* %PC.i531
  %5722 = add i64 %5721, 5
  %5723 = load i64, i64* %PC.i531
  %5724 = add i64 %5723, 5
  store i64 %5724, i64* %PC.i531
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5726 = load i64, i64* %5725, align 8
  %5727 = add i64 %5726, -8
  %5728 = inttoptr i64 %5727 to i64*
  store i64 %5722, i64* %5728
  store i64 %5727, i64* %5725, align 8
  %5729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5720, i64* %5729, align 8
  store %struct.Memory* %loadMem1_401008, %struct.Memory** %MEMORY
  %loadMem2_401008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401008 = load i64, i64* %3
  %call2_401008 = call %struct.Memory* @sub_4015e0.POUT(%struct.State* %0, i64 %loadPC_401008, %struct.Memory* %loadMem2_401008)
  store %struct.Memory* %call2_401008, %struct.Memory** %MEMORY
  br label %block_.L_40100d

block_.L_40100d:                                  ; preds = %block_400fd0, %block_.L_400fbe
  %loadMem_40100d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5731 = getelementptr inbounds %struct.GPR, %struct.GPR* %5730, i32 0, i32 33
  %5732 = getelementptr inbounds %struct.Reg, %struct.Reg* %5731, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %5732 to i64*
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5734 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5733, i64 0, i64 0
  %YMM0.i530 = bitcast %union.VectorReg* %5734 to %"class.std::bitset"*
  %5735 = bitcast %"class.std::bitset"* %YMM0.i530 to i8*
  %5736 = load i64, i64* %PC.i529
  %5737 = add i64 %5736, 2323
  %5738 = load i64, i64* %PC.i529
  %5739 = add i64 %5738, 8
  store i64 %5739, i64* %PC.i529
  %5740 = inttoptr i64 %5737 to double*
  %5741 = load double, double* %5740
  %5742 = bitcast i8* %5735 to double*
  store double %5741, double* %5742, align 1
  %5743 = getelementptr inbounds i8, i8* %5735, i64 8
  %5744 = bitcast i8* %5743 to double*
  store double 0.000000e+00, double* %5744, align 1
  store %struct.Memory* %loadMem_40100d, %struct.Memory** %MEMORY
  %loadMem_401015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5746 = getelementptr inbounds %struct.GPR, %struct.GPR* %5745, i32 0, i32 33
  %5747 = getelementptr inbounds %struct.Reg, %struct.Reg* %5746, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %5747 to i64*
  %5748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5749 = getelementptr inbounds %struct.GPR, %struct.GPR* %5748, i32 0, i32 15
  %5750 = getelementptr inbounds %struct.Reg, %struct.Reg* %5749, i32 0, i32 0
  %RBP.i527 = bitcast %union.anon* %5750 to i64*
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5752 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5751, i64 0, i64 0
  %XMM0.i528 = bitcast %union.VectorReg* %5752 to %union.vec128_t*
  %5753 = load i64, i64* %RBP.i527
  %5754 = sub i64 %5753, 144
  %5755 = bitcast %union.vec128_t* %XMM0.i528 to i8*
  %5756 = load i64, i64* %PC.i526
  %5757 = add i64 %5756, 8
  store i64 %5757, i64* %PC.i526
  %5758 = bitcast i8* %5755 to double*
  %5759 = load double, double* %5758, align 1
  %5760 = inttoptr i64 %5754 to double*
  store double %5759, double* %5760
  store %struct.Memory* %loadMem_401015, %struct.Memory** %MEMORY
  %loadMem_40101d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5762 = getelementptr inbounds %struct.GPR, %struct.GPR* %5761, i32 0, i32 33
  %5763 = getelementptr inbounds %struct.Reg, %struct.Reg* %5762, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %5763 to i64*
  %5764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5765 = getelementptr inbounds %struct.GPR, %struct.GPR* %5764, i32 0, i32 15
  %5766 = getelementptr inbounds %struct.Reg, %struct.Reg* %5765, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %5766 to i64*
  %5767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5768 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5767, i64 0, i64 0
  %XMM0.i525 = bitcast %union.VectorReg* %5768 to %union.vec128_t*
  %5769 = load i64, i64* %RBP.i524
  %5770 = sub i64 %5769, 152
  %5771 = bitcast %union.vec128_t* %XMM0.i525 to i8*
  %5772 = load i64, i64* %PC.i523
  %5773 = add i64 %5772, 8
  store i64 %5773, i64* %PC.i523
  %5774 = bitcast i8* %5771 to double*
  %5775 = load double, double* %5774, align 1
  %5776 = inttoptr i64 %5770 to double*
  store double %5775, double* %5776
  store %struct.Memory* %loadMem_40101d, %struct.Memory** %MEMORY
  %loadMem_401025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 33
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %5779 to i64*
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5781 = getelementptr inbounds %struct.GPR, %struct.GPR* %5780, i32 0, i32 15
  %5782 = getelementptr inbounds %struct.Reg, %struct.Reg* %5781, i32 0, i32 0
  %RBP.i522 = bitcast %union.anon* %5782 to i64*
  %5783 = load i64, i64* %RBP.i522
  %5784 = sub i64 %5783, 24
  %5785 = load i64, i64* %PC.i521
  %5786 = add i64 %5785, 8
  store i64 %5786, i64* %PC.i521
  %5787 = inttoptr i64 %5784 to i64*
  store i64 1, i64* %5787
  store %struct.Memory* %loadMem_401025, %struct.Memory** %MEMORY
  br label %block_.L_40102d

block_.L_40102d:                                  ; preds = %block_40103b, %block_.L_40100d
  %loadMem_40102d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5789 = getelementptr inbounds %struct.GPR, %struct.GPR* %5788, i32 0, i32 33
  %5790 = getelementptr inbounds %struct.Reg, %struct.Reg* %5789, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %5790 to i64*
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5792 = getelementptr inbounds %struct.GPR, %struct.GPR* %5791, i32 0, i32 1
  %5793 = getelementptr inbounds %struct.Reg, %struct.Reg* %5792, i32 0, i32 0
  %RAX.i519 = bitcast %union.anon* %5793 to i64*
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5795 = getelementptr inbounds %struct.GPR, %struct.GPR* %5794, i32 0, i32 15
  %5796 = getelementptr inbounds %struct.Reg, %struct.Reg* %5795, i32 0, i32 0
  %RBP.i520 = bitcast %union.anon* %5796 to i64*
  %5797 = load i64, i64* %RBP.i520
  %5798 = sub i64 %5797, 24
  %5799 = load i64, i64* %PC.i518
  %5800 = add i64 %5799, 4
  store i64 %5800, i64* %PC.i518
  %5801 = inttoptr i64 %5798 to i64*
  %5802 = load i64, i64* %5801
  store i64 %5802, i64* %RAX.i519, align 8
  store %struct.Memory* %loadMem_40102d, %struct.Memory** %MEMORY
  %loadMem_401031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5804 = getelementptr inbounds %struct.GPR, %struct.GPR* %5803, i32 0, i32 33
  %5805 = getelementptr inbounds %struct.Reg, %struct.Reg* %5804, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %5805 to i64*
  %5806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5807 = getelementptr inbounds %struct.GPR, %struct.GPR* %5806, i32 0, i32 1
  %5808 = getelementptr inbounds %struct.Reg, %struct.Reg* %5807, i32 0, i32 0
  %RAX.i516 = bitcast %union.anon* %5808 to i64*
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5810 = getelementptr inbounds %struct.GPR, %struct.GPR* %5809, i32 0, i32 15
  %5811 = getelementptr inbounds %struct.Reg, %struct.Reg* %5810, i32 0, i32 0
  %RBP.i517 = bitcast %union.anon* %5811 to i64*
  %5812 = load i64, i64* %RAX.i516
  %5813 = load i64, i64* %RBP.i517
  %5814 = sub i64 %5813, 72
  %5815 = load i64, i64* %PC.i515
  %5816 = add i64 %5815, 4
  store i64 %5816, i64* %PC.i515
  %5817 = inttoptr i64 %5814 to i64*
  %5818 = load i64, i64* %5817
  %5819 = sub i64 %5812, %5818
  %5820 = icmp ugt i64 %5818, %5812
  %5821 = zext i1 %5820 to i8
  %5822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5821, i8* %5822, align 1
  %5823 = trunc i64 %5819 to i32
  %5824 = and i32 %5823, 255
  %5825 = call i32 @llvm.ctpop.i32(i32 %5824)
  %5826 = trunc i32 %5825 to i8
  %5827 = and i8 %5826, 1
  %5828 = xor i8 %5827, 1
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5828, i8* %5829, align 1
  %5830 = xor i64 %5818, %5812
  %5831 = xor i64 %5830, %5819
  %5832 = lshr i64 %5831, 4
  %5833 = trunc i64 %5832 to i8
  %5834 = and i8 %5833, 1
  %5835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5834, i8* %5835, align 1
  %5836 = icmp eq i64 %5819, 0
  %5837 = zext i1 %5836 to i8
  %5838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5837, i8* %5838, align 1
  %5839 = lshr i64 %5819, 63
  %5840 = trunc i64 %5839 to i8
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5840, i8* %5841, align 1
  %5842 = lshr i64 %5812, 63
  %5843 = lshr i64 %5818, 63
  %5844 = xor i64 %5843, %5842
  %5845 = xor i64 %5839, %5842
  %5846 = add i64 %5845, %5844
  %5847 = icmp eq i64 %5846, 2
  %5848 = zext i1 %5847 to i8
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5848, i8* %5849, align 1
  store %struct.Memory* %loadMem_401031, %struct.Memory** %MEMORY
  %loadMem_401035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5851 = getelementptr inbounds %struct.GPR, %struct.GPR* %5850, i32 0, i32 33
  %5852 = getelementptr inbounds %struct.Reg, %struct.Reg* %5851, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %5852 to i64*
  %5853 = load i64, i64* %PC.i514
  %5854 = add i64 %5853, 495
  %5855 = load i64, i64* %PC.i514
  %5856 = add i64 %5855, 6
  %5857 = load i64, i64* %PC.i514
  %5858 = add i64 %5857, 6
  store i64 %5858, i64* %PC.i514
  %5859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5860 = load i8, i8* %5859, align 1
  %5861 = icmp eq i8 %5860, 0
  %5862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5863 = load i8, i8* %5862, align 1
  %5864 = icmp ne i8 %5863, 0
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5866 = load i8, i8* %5865, align 1
  %5867 = icmp ne i8 %5866, 0
  %5868 = xor i1 %5864, %5867
  %5869 = xor i1 %5868, true
  %5870 = and i1 %5861, %5869
  %5871 = zext i1 %5870 to i8
  store i8 %5871, i8* %BRANCH_TAKEN, align 1
  %5872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5873 = select i1 %5870, i64 %5854, i64 %5856
  store i64 %5873, i64* %5872, align 8
  store %struct.Memory* %loadMem_401035, %struct.Memory** %MEMORY
  %loadBr_401035 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401035 = icmp eq i8 %loadBr_401035, 1
  br i1 %cmpBr_401035, label %block_.L_401224, label %block_40103b

block_40103b:                                     ; preds = %block_.L_40102d
  %loadMem_40103b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5875 = getelementptr inbounds %struct.GPR, %struct.GPR* %5874, i32 0, i32 33
  %5876 = getelementptr inbounds %struct.Reg, %struct.Reg* %5875, i32 0, i32 0
  %PC.i512 = bitcast %union.anon* %5876 to i64*
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5878 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5877, i64 0, i64 0
  %YMM0.i513 = bitcast %union.VectorReg* %5878 to %"class.std::bitset"*
  %5879 = bitcast %"class.std::bitset"* %YMM0.i513 to i8*
  %5880 = load i64, i64* %PC.i512
  %5881 = add i64 %5880, 2269
  %5882 = load i64, i64* %PC.i512
  %5883 = add i64 %5882, 8
  store i64 %5883, i64* %PC.i512
  %5884 = inttoptr i64 %5881 to double*
  %5885 = load double, double* %5884
  %5886 = bitcast i8* %5879 to double*
  store double %5885, double* %5886, align 1
  %5887 = getelementptr inbounds i8, i8* %5879, i64 8
  %5888 = bitcast i8* %5887 to double*
  store double 0.000000e+00, double* %5888, align 1
  store %struct.Memory* %loadMem_40103b, %struct.Memory** %MEMORY
  %loadMem_401043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5890 = getelementptr inbounds %struct.GPR, %struct.GPR* %5889, i32 0, i32 33
  %5891 = getelementptr inbounds %struct.Reg, %struct.Reg* %5890, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %5891 to i64*
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5893 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5892, i64 0, i64 1
  %YMM1.i511 = bitcast %union.VectorReg* %5893 to %"class.std::bitset"*
  %5894 = bitcast %"class.std::bitset"* %YMM1.i511 to i8*
  %5895 = load i64, i64* %PC.i510
  %5896 = add i64 %5895, 9
  store i64 %5896, i64* %PC.i510
  %5897 = load double, double* inttoptr (i64 6299800 to double*)
  %5898 = bitcast i8* %5894 to double*
  store double %5897, double* %5898, align 1
  %5899 = getelementptr inbounds i8, i8* %5894, i64 8
  %5900 = bitcast i8* %5899 to double*
  store double 0.000000e+00, double* %5900, align 1
  store %struct.Memory* %loadMem_401043, %struct.Memory** %MEMORY
  %loadMem_40104c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5902 = getelementptr inbounds %struct.GPR, %struct.GPR* %5901, i32 0, i32 33
  %5903 = getelementptr inbounds %struct.Reg, %struct.Reg* %5902, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %5903 to i64*
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5905 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5904, i64 0, i64 2
  %YMM2.i509 = bitcast %union.VectorReg* %5905 to %"class.std::bitset"*
  %5906 = bitcast %"class.std::bitset"* %YMM2.i509 to i8*
  %5907 = load i64, i64* %PC.i508
  %5908 = add i64 %5907, 9
  store i64 %5908, i64* %PC.i508
  %5909 = load double, double* inttoptr (i64 6299824 to double*)
  %5910 = bitcast i8* %5906 to double*
  store double %5909, double* %5910, align 1
  %5911 = getelementptr inbounds i8, i8* %5906, i64 8
  %5912 = bitcast i8* %5911 to double*
  store double 0.000000e+00, double* %5912, align 1
  store %struct.Memory* %loadMem_40104c, %struct.Memory** %MEMORY
  %loadMem_401055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5914 = getelementptr inbounds %struct.GPR, %struct.GPR* %5913, i32 0, i32 33
  %5915 = getelementptr inbounds %struct.Reg, %struct.Reg* %5914, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %5915 to i64*
  %5916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5917 = getelementptr inbounds %struct.GPR, %struct.GPR* %5916, i32 0, i32 15
  %5918 = getelementptr inbounds %struct.Reg, %struct.Reg* %5917, i32 0, i32 0
  %RBP.i506 = bitcast %union.anon* %5918 to i64*
  %5919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5920 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5919, i64 0, i64 3
  %YMM3.i507 = bitcast %union.VectorReg* %5920 to %"class.std::bitset"*
  %5921 = bitcast %"class.std::bitset"* %YMM3.i507 to i8*
  %5922 = load i64, i64* %RBP.i506
  %5923 = sub i64 %5922, 144
  %5924 = load i64, i64* %PC.i505
  %5925 = add i64 %5924, 8
  store i64 %5925, i64* %PC.i505
  %5926 = inttoptr i64 %5923 to double*
  %5927 = load double, double* %5926
  %5928 = bitcast i8* %5921 to double*
  store double %5927, double* %5928, align 1
  %5929 = getelementptr inbounds i8, i8* %5921, i64 8
  %5930 = bitcast i8* %5929 to double*
  store double 0.000000e+00, double* %5930, align 1
  store %struct.Memory* %loadMem_401055, %struct.Memory** %MEMORY
  %loadMem_40105d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5932 = getelementptr inbounds %struct.GPR, %struct.GPR* %5931, i32 0, i32 33
  %5933 = getelementptr inbounds %struct.Reg, %struct.Reg* %5932, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %5933 to i64*
  %5934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5935 = getelementptr inbounds %struct.GPR, %struct.GPR* %5934, i32 0, i32 15
  %5936 = getelementptr inbounds %struct.Reg, %struct.Reg* %5935, i32 0, i32 0
  %RBP.i503 = bitcast %union.anon* %5936 to i64*
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5938 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5937, i64 0, i64 0
  %XMM0.i504 = bitcast %union.VectorReg* %5938 to %union.vec128_t*
  %5939 = load i64, i64* %RBP.i503
  %5940 = sub i64 %5939, 224
  %5941 = bitcast %union.vec128_t* %XMM0.i504 to i8*
  %5942 = load i64, i64* %PC.i502
  %5943 = add i64 %5942, 8
  store i64 %5943, i64* %PC.i502
  %5944 = bitcast i8* %5941 to double*
  %5945 = load double, double* %5944, align 1
  %5946 = inttoptr i64 %5940 to double*
  store double %5945, double* %5946
  store %struct.Memory* %loadMem_40105d, %struct.Memory** %MEMORY
  %loadMem_401065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5948 = getelementptr inbounds %struct.GPR, %struct.GPR* %5947, i32 0, i32 33
  %5949 = getelementptr inbounds %struct.Reg, %struct.Reg* %5948, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %5949 to i64*
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5951 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5950, i64 0, i64 0
  %YMM0.i500 = bitcast %union.VectorReg* %5951 to %"class.std::bitset"*
  %5952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5953 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5952, i64 0, i64 3
  %XMM3.i501 = bitcast %union.VectorReg* %5953 to %union.vec128_t*
  %5954 = bitcast %"class.std::bitset"* %YMM0.i500 to i8*
  %5955 = bitcast %union.vec128_t* %XMM3.i501 to i8*
  %5956 = load i64, i64* %PC.i499
  %5957 = add i64 %5956, 3
  store i64 %5957, i64* %PC.i499
  %5958 = bitcast i8* %5955 to <2 x i32>*
  %5959 = load <2 x i32>, <2 x i32>* %5958, align 1
  %5960 = getelementptr inbounds i8, i8* %5955, i64 8
  %5961 = bitcast i8* %5960 to <2 x i32>*
  %5962 = load <2 x i32>, <2 x i32>* %5961, align 1
  %5963 = extractelement <2 x i32> %5959, i32 0
  %5964 = bitcast i8* %5954 to i32*
  store i32 %5963, i32* %5964, align 1
  %5965 = extractelement <2 x i32> %5959, i32 1
  %5966 = getelementptr inbounds i8, i8* %5954, i64 4
  %5967 = bitcast i8* %5966 to i32*
  store i32 %5965, i32* %5967, align 1
  %5968 = extractelement <2 x i32> %5962, i32 0
  %5969 = getelementptr inbounds i8, i8* %5954, i64 8
  %5970 = bitcast i8* %5969 to i32*
  store i32 %5968, i32* %5970, align 1
  %5971 = extractelement <2 x i32> %5962, i32 1
  %5972 = getelementptr inbounds i8, i8* %5954, i64 12
  %5973 = bitcast i8* %5972 to i32*
  store i32 %5971, i32* %5973, align 1
  store %struct.Memory* %loadMem_401065, %struct.Memory** %MEMORY
  %loadMem_401068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5975 = getelementptr inbounds %struct.GPR, %struct.GPR* %5974, i32 0, i32 33
  %5976 = getelementptr inbounds %struct.Reg, %struct.Reg* %5975, i32 0, i32 0
  %PC.i496 = bitcast %union.anon* %5976 to i64*
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5978 = getelementptr inbounds %struct.GPR, %struct.GPR* %5977, i32 0, i32 15
  %5979 = getelementptr inbounds %struct.Reg, %struct.Reg* %5978, i32 0, i32 0
  %RBP.i497 = bitcast %union.anon* %5979 to i64*
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5981 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5980, i64 0, i64 2
  %XMM2.i498 = bitcast %union.VectorReg* %5981 to %union.vec128_t*
  %5982 = load i64, i64* %RBP.i497
  %5983 = sub i64 %5982, 232
  %5984 = bitcast %union.vec128_t* %XMM2.i498 to i8*
  %5985 = load i64, i64* %PC.i496
  %5986 = add i64 %5985, 8
  store i64 %5986, i64* %PC.i496
  %5987 = bitcast i8* %5984 to double*
  %5988 = load double, double* %5987, align 1
  %5989 = inttoptr i64 %5983 to double*
  store double %5988, double* %5989
  store %struct.Memory* %loadMem_401068, %struct.Memory** %MEMORY
  %loadMem_401070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5991 = getelementptr inbounds %struct.GPR, %struct.GPR* %5990, i32 0, i32 33
  %5992 = getelementptr inbounds %struct.Reg, %struct.Reg* %5991, i32 0, i32 0
  %PC.i493 = bitcast %union.anon* %5992 to i64*
  %5993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5994 = getelementptr inbounds %struct.GPR, %struct.GPR* %5993, i32 0, i32 15
  %5995 = getelementptr inbounds %struct.Reg, %struct.Reg* %5994, i32 0, i32 0
  %RBP.i494 = bitcast %union.anon* %5995 to i64*
  %5996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5997 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5996, i64 0, i64 1
  %XMM1.i495 = bitcast %union.VectorReg* %5997 to %union.vec128_t*
  %5998 = load i64, i64* %RBP.i494
  %5999 = sub i64 %5998, 240
  %6000 = bitcast %union.vec128_t* %XMM1.i495 to i8*
  %6001 = load i64, i64* %PC.i493
  %6002 = add i64 %6001, 8
  store i64 %6002, i64* %PC.i493
  %6003 = bitcast i8* %6000 to double*
  %6004 = load double, double* %6003, align 1
  %6005 = inttoptr i64 %5999 to double*
  store double %6004, double* %6005
  store %struct.Memory* %loadMem_401070, %struct.Memory** %MEMORY
  %loadMem1_401078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6007 = getelementptr inbounds %struct.GPR, %struct.GPR* %6006, i32 0, i32 33
  %6008 = getelementptr inbounds %struct.Reg, %struct.Reg* %6007, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %6008 to i64*
  %6009 = load i64, i64* %PC.i492
  %6010 = add i64 %6009, -2360
  %6011 = load i64, i64* %PC.i492
  %6012 = add i64 %6011, 5
  %6013 = load i64, i64* %PC.i492
  %6014 = add i64 %6013, 5
  store i64 %6014, i64* %PC.i492
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6016 = load i64, i64* %6015, align 8
  %6017 = add i64 %6016, -8
  %6018 = inttoptr i64 %6017 to i64*
  store i64 %6012, i64* %6018
  store i64 %6017, i64* %6015, align 8
  %6019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6010, i64* %6019, align 8
  store %struct.Memory* %loadMem1_401078, %struct.Memory** %MEMORY
  %loadMem2_401078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401078 = load i64, i64* %3
  %call2_401078 = call %struct.Memory* @sub_400740.sin_plt(%struct.State* %0, i64 %loadPC_401078, %struct.Memory* %loadMem2_401078)
  store %struct.Memory* %call2_401078, %struct.Memory** %MEMORY
  %loadMem_40107d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6021 = getelementptr inbounds %struct.GPR, %struct.GPR* %6020, i32 0, i32 33
  %6022 = getelementptr inbounds %struct.Reg, %struct.Reg* %6021, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %6022 to i64*
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6024 = getelementptr inbounds %struct.GPR, %struct.GPR* %6023, i32 0, i32 15
  %6025 = getelementptr inbounds %struct.Reg, %struct.Reg* %6024, i32 0, i32 0
  %RBP.i490 = bitcast %union.anon* %6025 to i64*
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6027 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6026, i64 0, i64 1
  %YMM1.i491 = bitcast %union.VectorReg* %6027 to %"class.std::bitset"*
  %6028 = bitcast %"class.std::bitset"* %YMM1.i491 to i8*
  %6029 = load i64, i64* %RBP.i490
  %6030 = sub i64 %6029, 232
  %6031 = load i64, i64* %PC.i489
  %6032 = add i64 %6031, 8
  store i64 %6032, i64* %PC.i489
  %6033 = inttoptr i64 %6030 to double*
  %6034 = load double, double* %6033
  %6035 = bitcast i8* %6028 to double*
  store double %6034, double* %6035, align 1
  %6036 = getelementptr inbounds i8, i8* %6028, i64 8
  %6037 = bitcast i8* %6036 to double*
  store double 0.000000e+00, double* %6037, align 1
  store %struct.Memory* %loadMem_40107d, %struct.Memory** %MEMORY
  %loadMem_401085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6039 = getelementptr inbounds %struct.GPR, %struct.GPR* %6038, i32 0, i32 33
  %6040 = getelementptr inbounds %struct.Reg, %struct.Reg* %6039, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %6040 to i64*
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6042 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6041, i64 0, i64 1
  %YMM1.i487 = bitcast %union.VectorReg* %6042 to %"class.std::bitset"*
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6044 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6043, i64 0, i64 0
  %XMM0.i488 = bitcast %union.VectorReg* %6044 to %union.vec128_t*
  %6045 = bitcast %"class.std::bitset"* %YMM1.i487 to i8*
  %6046 = bitcast %"class.std::bitset"* %YMM1.i487 to i8*
  %6047 = bitcast %union.vec128_t* %XMM0.i488 to i8*
  %6048 = load i64, i64* %PC.i486
  %6049 = add i64 %6048, 4
  store i64 %6049, i64* %PC.i486
  %6050 = bitcast i8* %6046 to double*
  %6051 = load double, double* %6050, align 1
  %6052 = getelementptr inbounds i8, i8* %6046, i64 8
  %6053 = bitcast i8* %6052 to i64*
  %6054 = load i64, i64* %6053, align 1
  %6055 = bitcast i8* %6047 to double*
  %6056 = load double, double* %6055, align 1
  %6057 = fmul double %6051, %6056
  %6058 = bitcast i8* %6045 to double*
  store double %6057, double* %6058, align 1
  %6059 = getelementptr inbounds i8, i8* %6045, i64 8
  %6060 = bitcast i8* %6059 to i64*
  store i64 %6054, i64* %6060, align 1
  store %struct.Memory* %loadMem_401085, %struct.Memory** %MEMORY
  %loadMem_401089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6062 = getelementptr inbounds %struct.GPR, %struct.GPR* %6061, i32 0, i32 33
  %6063 = getelementptr inbounds %struct.Reg, %struct.Reg* %6062, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %6063 to i64*
  %6064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6065 = getelementptr inbounds %struct.GPR, %struct.GPR* %6064, i32 0, i32 15
  %6066 = getelementptr inbounds %struct.Reg, %struct.Reg* %6065, i32 0, i32 0
  %RBP.i484 = bitcast %union.anon* %6066 to i64*
  %6067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6068 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6067, i64 0, i64 0
  %YMM0.i485 = bitcast %union.VectorReg* %6068 to %"class.std::bitset"*
  %6069 = bitcast %"class.std::bitset"* %YMM0.i485 to i8*
  %6070 = load i64, i64* %RBP.i484
  %6071 = sub i64 %6070, 144
  %6072 = load i64, i64* %PC.i483
  %6073 = add i64 %6072, 8
  store i64 %6073, i64* %PC.i483
  %6074 = inttoptr i64 %6071 to double*
  %6075 = load double, double* %6074
  %6076 = bitcast i8* %6069 to double*
  store double %6075, double* %6076, align 1
  %6077 = getelementptr inbounds i8, i8* %6069, i64 8
  %6078 = bitcast i8* %6077 to double*
  store double 0.000000e+00, double* %6078, align 1
  store %struct.Memory* %loadMem_401089, %struct.Memory** %MEMORY
  %loadMem_401091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6080 = getelementptr inbounds %struct.GPR, %struct.GPR* %6079, i32 0, i32 33
  %6081 = getelementptr inbounds %struct.Reg, %struct.Reg* %6080, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %6081 to i64*
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 15
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %RBP.i481 = bitcast %union.anon* %6084 to i64*
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6086 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6085, i64 0, i64 1
  %XMM1.i482 = bitcast %union.VectorReg* %6086 to %union.vec128_t*
  %6087 = load i64, i64* %RBP.i481
  %6088 = sub i64 %6087, 248
  %6089 = bitcast %union.vec128_t* %XMM1.i482 to i8*
  %6090 = load i64, i64* %PC.i480
  %6091 = add i64 %6090, 8
  store i64 %6091, i64* %PC.i480
  %6092 = bitcast i8* %6089 to double*
  %6093 = load double, double* %6092, align 1
  %6094 = inttoptr i64 %6088 to double*
  store double %6093, double* %6094
  store %struct.Memory* %loadMem_401091, %struct.Memory** %MEMORY
  %loadMem1_401099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6096 = getelementptr inbounds %struct.GPR, %struct.GPR* %6095, i32 0, i32 33
  %6097 = getelementptr inbounds %struct.Reg, %struct.Reg* %6096, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %6097 to i64*
  %6098 = load i64, i64* %PC.i479
  %6099 = add i64 %6098, -2457
  %6100 = load i64, i64* %PC.i479
  %6101 = add i64 %6100, 5
  %6102 = load i64, i64* %PC.i479
  %6103 = add i64 %6102, 5
  store i64 %6103, i64* %PC.i479
  %6104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6105 = load i64, i64* %6104, align 8
  %6106 = add i64 %6105, -8
  %6107 = inttoptr i64 %6106 to i64*
  store i64 %6101, i64* %6107
  store i64 %6106, i64* %6104, align 8
  %6108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6099, i64* %6108, align 8
  store %struct.Memory* %loadMem1_401099, %struct.Memory** %MEMORY
  %loadMem2_401099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401099 = load i64, i64* %3
  %call2_401099 = call %struct.Memory* @sub_400700.cos_plt(%struct.State* %0, i64 %loadPC_401099, %struct.Memory* %loadMem2_401099)
  store %struct.Memory* %call2_401099, %struct.Memory** %MEMORY
  %loadMem_40109e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6110 = getelementptr inbounds %struct.GPR, %struct.GPR* %6109, i32 0, i32 33
  %6111 = getelementptr inbounds %struct.Reg, %struct.Reg* %6110, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %6111 to i64*
  %6112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6113 = getelementptr inbounds %struct.GPR, %struct.GPR* %6112, i32 0, i32 15
  %6114 = getelementptr inbounds %struct.Reg, %struct.Reg* %6113, i32 0, i32 0
  %RBP.i477 = bitcast %union.anon* %6114 to i64*
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6116 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6115, i64 0, i64 1
  %YMM1.i478 = bitcast %union.VectorReg* %6116 to %"class.std::bitset"*
  %6117 = bitcast %"class.std::bitset"* %YMM1.i478 to i8*
  %6118 = load i64, i64* %RBP.i477
  %6119 = sub i64 %6118, 248
  %6120 = load i64, i64* %PC.i476
  %6121 = add i64 %6120, 8
  store i64 %6121, i64* %PC.i476
  %6122 = inttoptr i64 %6119 to double*
  %6123 = load double, double* %6122
  %6124 = bitcast i8* %6117 to double*
  store double %6123, double* %6124, align 1
  %6125 = getelementptr inbounds i8, i8* %6117, i64 8
  %6126 = bitcast i8* %6125 to double*
  store double 0.000000e+00, double* %6126, align 1
  store %struct.Memory* %loadMem_40109e, %struct.Memory** %MEMORY
  %loadMem_4010a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6128 = getelementptr inbounds %struct.GPR, %struct.GPR* %6127, i32 0, i32 33
  %6129 = getelementptr inbounds %struct.Reg, %struct.Reg* %6128, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %6129 to i64*
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6131 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6130, i64 0, i64 1
  %YMM1.i474 = bitcast %union.VectorReg* %6131 to %"class.std::bitset"*
  %6132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6133 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6132, i64 0, i64 0
  %XMM0.i475 = bitcast %union.VectorReg* %6133 to %union.vec128_t*
  %6134 = bitcast %"class.std::bitset"* %YMM1.i474 to i8*
  %6135 = bitcast %"class.std::bitset"* %YMM1.i474 to i8*
  %6136 = bitcast %union.vec128_t* %XMM0.i475 to i8*
  %6137 = load i64, i64* %PC.i473
  %6138 = add i64 %6137, 4
  store i64 %6138, i64* %PC.i473
  %6139 = bitcast i8* %6135 to double*
  %6140 = load double, double* %6139, align 1
  %6141 = getelementptr inbounds i8, i8* %6135, i64 8
  %6142 = bitcast i8* %6141 to i64*
  %6143 = load i64, i64* %6142, align 1
  %6144 = bitcast i8* %6136 to double*
  %6145 = load double, double* %6144, align 1
  %6146 = fmul double %6140, %6145
  %6147 = bitcast i8* %6134 to double*
  store double %6146, double* %6147, align 1
  %6148 = getelementptr inbounds i8, i8* %6134, i64 8
  %6149 = bitcast i8* %6148 to i64*
  store i64 %6143, i64* %6149, align 1
  store %struct.Memory* %loadMem_4010a6, %struct.Memory** %MEMORY
  %loadMem_4010aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %6150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6151 = getelementptr inbounds %struct.GPR, %struct.GPR* %6150, i32 0, i32 33
  %6152 = getelementptr inbounds %struct.Reg, %struct.Reg* %6151, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %6152 to i64*
  %6153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6154 = getelementptr inbounds %struct.GPR, %struct.GPR* %6153, i32 0, i32 15
  %6155 = getelementptr inbounds %struct.Reg, %struct.Reg* %6154, i32 0, i32 0
  %RBP.i471 = bitcast %union.anon* %6155 to i64*
  %6156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6157 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6156, i64 0, i64 0
  %YMM0.i472 = bitcast %union.VectorReg* %6157 to %"class.std::bitset"*
  %6158 = bitcast %"class.std::bitset"* %YMM0.i472 to i8*
  %6159 = load i64, i64* %RBP.i471
  %6160 = sub i64 %6159, 144
  %6161 = load i64, i64* %PC.i470
  %6162 = add i64 %6161, 8
  store i64 %6162, i64* %PC.i470
  %6163 = inttoptr i64 %6160 to double*
  %6164 = load double, double* %6163
  %6165 = bitcast i8* %6158 to double*
  store double %6164, double* %6165, align 1
  %6166 = getelementptr inbounds i8, i8* %6158, i64 8
  %6167 = bitcast i8* %6166 to double*
  store double 0.000000e+00, double* %6167, align 1
  store %struct.Memory* %loadMem_4010aa, %struct.Memory** %MEMORY
  %loadMem_4010b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6169 = getelementptr inbounds %struct.GPR, %struct.GPR* %6168, i32 0, i32 33
  %6170 = getelementptr inbounds %struct.Reg, %struct.Reg* %6169, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %6170 to i64*
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 15
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %RBP.i468 = bitcast %union.anon* %6173 to i64*
  %6174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6175 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6174, i64 0, i64 0
  %YMM0.i469 = bitcast %union.VectorReg* %6175 to %"class.std::bitset"*
  %6176 = bitcast %"class.std::bitset"* %YMM0.i469 to i8*
  %6177 = bitcast %"class.std::bitset"* %YMM0.i469 to i8*
  %6178 = load i64, i64* %RBP.i468
  %6179 = sub i64 %6178, 152
  %6180 = load i64, i64* %PC.i467
  %6181 = add i64 %6180, 8
  store i64 %6181, i64* %PC.i467
  %6182 = bitcast i8* %6177 to double*
  %6183 = load double, double* %6182, align 1
  %6184 = getelementptr inbounds i8, i8* %6177, i64 8
  %6185 = bitcast i8* %6184 to i64*
  %6186 = load i64, i64* %6185, align 1
  %6187 = inttoptr i64 %6179 to double*
  %6188 = load double, double* %6187
  %6189 = fadd double %6183, %6188
  %6190 = bitcast i8* %6176 to double*
  store double %6189, double* %6190, align 1
  %6191 = getelementptr inbounds i8, i8* %6176, i64 8
  %6192 = bitcast i8* %6191 to i64*
  store i64 %6186, i64* %6192, align 1
  store %struct.Memory* %loadMem_4010b2, %struct.Memory** %MEMORY
  %loadMem_4010ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %6193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6194 = getelementptr inbounds %struct.GPR, %struct.GPR* %6193, i32 0, i32 33
  %6195 = getelementptr inbounds %struct.Reg, %struct.Reg* %6194, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %6195 to i64*
  %6196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6197 = getelementptr inbounds %struct.GPR, %struct.GPR* %6196, i32 0, i32 15
  %6198 = getelementptr inbounds %struct.Reg, %struct.Reg* %6197, i32 0, i32 0
  %RBP.i465 = bitcast %union.anon* %6198 to i64*
  %6199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6200 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6199, i64 0, i64 1
  %XMM1.i466 = bitcast %union.VectorReg* %6200 to %union.vec128_t*
  %6201 = load i64, i64* %RBP.i465
  %6202 = sub i64 %6201, 256
  %6203 = bitcast %union.vec128_t* %XMM1.i466 to i8*
  %6204 = load i64, i64* %PC.i464
  %6205 = add i64 %6204, 8
  store i64 %6205, i64* %PC.i464
  %6206 = bitcast i8* %6203 to double*
  %6207 = load double, double* %6206, align 1
  %6208 = inttoptr i64 %6202 to double*
  store double %6207, double* %6208
  store %struct.Memory* %loadMem_4010ba, %struct.Memory** %MEMORY
  %loadMem1_4010c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6210 = getelementptr inbounds %struct.GPR, %struct.GPR* %6209, i32 0, i32 33
  %6211 = getelementptr inbounds %struct.Reg, %struct.Reg* %6210, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %6211 to i64*
  %6212 = load i64, i64* %PC.i463
  %6213 = add i64 %6212, -2498
  %6214 = load i64, i64* %PC.i463
  %6215 = add i64 %6214, 5
  %6216 = load i64, i64* %PC.i463
  %6217 = add i64 %6216, 5
  store i64 %6217, i64* %PC.i463
  %6218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6219 = load i64, i64* %6218, align 8
  %6220 = add i64 %6219, -8
  %6221 = inttoptr i64 %6220 to i64*
  store i64 %6215, i64* %6221
  store i64 %6220, i64* %6218, align 8
  %6222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6213, i64* %6222, align 8
  store %struct.Memory* %loadMem1_4010c2, %struct.Memory** %MEMORY
  %loadMem2_4010c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4010c2 = load i64, i64* %3
  %call2_4010c2 = call %struct.Memory* @sub_400700.cos_plt(%struct.State* %0, i64 %loadPC_4010c2, %struct.Memory* %loadMem2_4010c2)
  store %struct.Memory* %call2_4010c2, %struct.Memory** %MEMORY
  %loadMem_4010c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6224 = getelementptr inbounds %struct.GPR, %struct.GPR* %6223, i32 0, i32 33
  %6225 = getelementptr inbounds %struct.Reg, %struct.Reg* %6224, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %6225 to i64*
  %6226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6227 = getelementptr inbounds %struct.GPR, %struct.GPR* %6226, i32 0, i32 15
  %6228 = getelementptr inbounds %struct.Reg, %struct.Reg* %6227, i32 0, i32 0
  %RBP.i461 = bitcast %union.anon* %6228 to i64*
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6230 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6229, i64 0, i64 1
  %YMM1.i462 = bitcast %union.VectorReg* %6230 to %"class.std::bitset"*
  %6231 = bitcast %"class.std::bitset"* %YMM1.i462 to i8*
  %6232 = load i64, i64* %RBP.i461
  %6233 = sub i64 %6232, 144
  %6234 = load i64, i64* %PC.i460
  %6235 = add i64 %6234, 8
  store i64 %6235, i64* %PC.i460
  %6236 = inttoptr i64 %6233 to double*
  %6237 = load double, double* %6236
  %6238 = bitcast i8* %6231 to double*
  store double %6237, double* %6238, align 1
  %6239 = getelementptr inbounds i8, i8* %6231, i64 8
  %6240 = bitcast i8* %6239 to double*
  store double 0.000000e+00, double* %6240, align 1
  store %struct.Memory* %loadMem_4010c7, %struct.Memory** %MEMORY
  %loadMem_4010cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6242 = getelementptr inbounds %struct.GPR, %struct.GPR* %6241, i32 0, i32 33
  %6243 = getelementptr inbounds %struct.Reg, %struct.Reg* %6242, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %6243 to i64*
  %6244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6245 = getelementptr inbounds %struct.GPR, %struct.GPR* %6244, i32 0, i32 15
  %6246 = getelementptr inbounds %struct.Reg, %struct.Reg* %6245, i32 0, i32 0
  %RBP.i458 = bitcast %union.anon* %6246 to i64*
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6248 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6247, i64 0, i64 1
  %YMM1.i459 = bitcast %union.VectorReg* %6248 to %"class.std::bitset"*
  %6249 = bitcast %"class.std::bitset"* %YMM1.i459 to i8*
  %6250 = bitcast %"class.std::bitset"* %YMM1.i459 to i8*
  %6251 = load i64, i64* %RBP.i458
  %6252 = sub i64 %6251, 152
  %6253 = load i64, i64* %PC.i457
  %6254 = add i64 %6253, 8
  store i64 %6254, i64* %PC.i457
  %6255 = bitcast i8* %6250 to double*
  %6256 = load double, double* %6255, align 1
  %6257 = getelementptr inbounds i8, i8* %6250, i64 8
  %6258 = bitcast i8* %6257 to i64*
  %6259 = load i64, i64* %6258, align 1
  %6260 = inttoptr i64 %6252 to double*
  %6261 = load double, double* %6260
  %6262 = fsub double %6256, %6261
  %6263 = bitcast i8* %6249 to double*
  store double %6262, double* %6263, align 1
  %6264 = getelementptr inbounds i8, i8* %6249, i64 8
  %6265 = bitcast i8* %6264 to i64*
  store i64 %6259, i64* %6265, align 1
  store %struct.Memory* %loadMem_4010cf, %struct.Memory** %MEMORY
  %loadMem_4010d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6267 = getelementptr inbounds %struct.GPR, %struct.GPR* %6266, i32 0, i32 33
  %6268 = getelementptr inbounds %struct.Reg, %struct.Reg* %6267, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %6268 to i64*
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6270 = getelementptr inbounds %struct.GPR, %struct.GPR* %6269, i32 0, i32 15
  %6271 = getelementptr inbounds %struct.Reg, %struct.Reg* %6270, i32 0, i32 0
  %RBP.i455 = bitcast %union.anon* %6271 to i64*
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6272, i64 0, i64 0
  %XMM0.i456 = bitcast %union.VectorReg* %6273 to %union.vec128_t*
  %6274 = load i64, i64* %RBP.i455
  %6275 = sub i64 %6274, 264
  %6276 = bitcast %union.vec128_t* %XMM0.i456 to i8*
  %6277 = load i64, i64* %PC.i454
  %6278 = add i64 %6277, 8
  store i64 %6278, i64* %PC.i454
  %6279 = bitcast i8* %6276 to double*
  %6280 = load double, double* %6279, align 1
  %6281 = inttoptr i64 %6275 to double*
  store double %6280, double* %6281
  store %struct.Memory* %loadMem_4010d7, %struct.Memory** %MEMORY
  %loadMem_4010df = load %struct.Memory*, %struct.Memory** %MEMORY
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6283 = getelementptr inbounds %struct.GPR, %struct.GPR* %6282, i32 0, i32 33
  %6284 = getelementptr inbounds %struct.Reg, %struct.Reg* %6283, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %6284 to i64*
  %6285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6286 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6285, i64 0, i64 0
  %YMM0.i452 = bitcast %union.VectorReg* %6286 to %"class.std::bitset"*
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6288 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6287, i64 0, i64 1
  %XMM1.i453 = bitcast %union.VectorReg* %6288 to %union.vec128_t*
  %6289 = bitcast %"class.std::bitset"* %YMM0.i452 to i8*
  %6290 = bitcast %union.vec128_t* %XMM1.i453 to i8*
  %6291 = load i64, i64* %PC.i451
  %6292 = add i64 %6291, 3
  store i64 %6292, i64* %PC.i451
  %6293 = bitcast i8* %6290 to <2 x i32>*
  %6294 = load <2 x i32>, <2 x i32>* %6293, align 1
  %6295 = getelementptr inbounds i8, i8* %6290, i64 8
  %6296 = bitcast i8* %6295 to <2 x i32>*
  %6297 = load <2 x i32>, <2 x i32>* %6296, align 1
  %6298 = extractelement <2 x i32> %6294, i32 0
  %6299 = bitcast i8* %6289 to i32*
  store i32 %6298, i32* %6299, align 1
  %6300 = extractelement <2 x i32> %6294, i32 1
  %6301 = getelementptr inbounds i8, i8* %6289, i64 4
  %6302 = bitcast i8* %6301 to i32*
  store i32 %6300, i32* %6302, align 1
  %6303 = extractelement <2 x i32> %6297, i32 0
  %6304 = getelementptr inbounds i8, i8* %6289, i64 8
  %6305 = bitcast i8* %6304 to i32*
  store i32 %6303, i32* %6305, align 1
  %6306 = extractelement <2 x i32> %6297, i32 1
  %6307 = getelementptr inbounds i8, i8* %6289, i64 12
  %6308 = bitcast i8* %6307 to i32*
  store i32 %6306, i32* %6308, align 1
  store %struct.Memory* %loadMem_4010df, %struct.Memory** %MEMORY
  %loadMem1_4010e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6310 = getelementptr inbounds %struct.GPR, %struct.GPR* %6309, i32 0, i32 33
  %6311 = getelementptr inbounds %struct.Reg, %struct.Reg* %6310, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %6311 to i64*
  %6312 = load i64, i64* %PC.i450
  %6313 = add i64 %6312, -2530
  %6314 = load i64, i64* %PC.i450
  %6315 = add i64 %6314, 5
  %6316 = load i64, i64* %PC.i450
  %6317 = add i64 %6316, 5
  store i64 %6317, i64* %PC.i450
  %6318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6319 = load i64, i64* %6318, align 8
  %6320 = add i64 %6319, -8
  %6321 = inttoptr i64 %6320 to i64*
  store i64 %6315, i64* %6321
  store i64 %6320, i64* %6318, align 8
  %6322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6313, i64* %6322, align 8
  store %struct.Memory* %loadMem1_4010e2, %struct.Memory** %MEMORY
  %loadMem2_4010e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4010e2 = load i64, i64* %3
  %call2_4010e2 = call %struct.Memory* @sub_400700.cos_plt(%struct.State* %0, i64 %loadPC_4010e2, %struct.Memory* %loadMem2_4010e2)
  store %struct.Memory* %call2_4010e2, %struct.Memory** %MEMORY
  %loadMem_4010e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6324 = getelementptr inbounds %struct.GPR, %struct.GPR* %6323, i32 0, i32 33
  %6325 = getelementptr inbounds %struct.Reg, %struct.Reg* %6324, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %6325 to i64*
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6327 = getelementptr inbounds %struct.GPR, %struct.GPR* %6326, i32 0, i32 15
  %6328 = getelementptr inbounds %struct.Reg, %struct.Reg* %6327, i32 0, i32 0
  %RBP.i448 = bitcast %union.anon* %6328 to i64*
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6330 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6329, i64 0, i64 1
  %YMM1.i449 = bitcast %union.VectorReg* %6330 to %"class.std::bitset"*
  %6331 = bitcast %"class.std::bitset"* %YMM1.i449 to i8*
  %6332 = load i64, i64* %RBP.i448
  %6333 = sub i64 %6332, 264
  %6334 = load i64, i64* %PC.i447
  %6335 = add i64 %6334, 8
  store i64 %6335, i64* %PC.i447
  %6336 = inttoptr i64 %6333 to double*
  %6337 = load double, double* %6336
  %6338 = bitcast i8* %6331 to double*
  store double %6337, double* %6338, align 1
  %6339 = getelementptr inbounds i8, i8* %6331, i64 8
  %6340 = bitcast i8* %6339 to double*
  store double 0.000000e+00, double* %6340, align 1
  store %struct.Memory* %loadMem_4010e7, %struct.Memory** %MEMORY
  %loadMem_4010ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %6341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6342 = getelementptr inbounds %struct.GPR, %struct.GPR* %6341, i32 0, i32 33
  %6343 = getelementptr inbounds %struct.Reg, %struct.Reg* %6342, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %6343 to i64*
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6345 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6344, i64 0, i64 1
  %YMM1.i445 = bitcast %union.VectorReg* %6345 to %"class.std::bitset"*
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6347 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6346, i64 0, i64 0
  %XMM0.i446 = bitcast %union.VectorReg* %6347 to %union.vec128_t*
  %6348 = bitcast %"class.std::bitset"* %YMM1.i445 to i8*
  %6349 = bitcast %"class.std::bitset"* %YMM1.i445 to i8*
  %6350 = bitcast %union.vec128_t* %XMM0.i446 to i8*
  %6351 = load i64, i64* %PC.i444
  %6352 = add i64 %6351, 4
  store i64 %6352, i64* %PC.i444
  %6353 = bitcast i8* %6349 to double*
  %6354 = load double, double* %6353, align 1
  %6355 = getelementptr inbounds i8, i8* %6349, i64 8
  %6356 = bitcast i8* %6355 to i64*
  %6357 = load i64, i64* %6356, align 1
  %6358 = bitcast i8* %6350 to double*
  %6359 = load double, double* %6358, align 1
  %6360 = fadd double %6354, %6359
  %6361 = bitcast i8* %6348 to double*
  store double %6360, double* %6361, align 1
  %6362 = getelementptr inbounds i8, i8* %6348, i64 8
  %6363 = bitcast i8* %6362 to i64*
  store i64 %6357, i64* %6363, align 1
  store %struct.Memory* %loadMem_4010ef, %struct.Memory** %MEMORY
  %loadMem_4010f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6365 = getelementptr inbounds %struct.GPR, %struct.GPR* %6364, i32 0, i32 33
  %6366 = getelementptr inbounds %struct.Reg, %struct.Reg* %6365, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %6366 to i64*
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6368 = getelementptr inbounds %struct.GPR, %struct.GPR* %6367, i32 0, i32 15
  %6369 = getelementptr inbounds %struct.Reg, %struct.Reg* %6368, i32 0, i32 0
  %RBP.i442 = bitcast %union.anon* %6369 to i64*
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6371 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6370, i64 0, i64 0
  %YMM0.i443 = bitcast %union.VectorReg* %6371 to %"class.std::bitset"*
  %6372 = bitcast %"class.std::bitset"* %YMM0.i443 to i8*
  %6373 = load i64, i64* %RBP.i442
  %6374 = sub i64 %6373, 224
  %6375 = load i64, i64* %PC.i441
  %6376 = add i64 %6375, 8
  store i64 %6376, i64* %PC.i441
  %6377 = inttoptr i64 %6374 to double*
  %6378 = load double, double* %6377
  %6379 = bitcast i8* %6372 to double*
  store double %6378, double* %6379, align 1
  %6380 = getelementptr inbounds i8, i8* %6372, i64 8
  %6381 = bitcast i8* %6380 to double*
  store double 0.000000e+00, double* %6381, align 1
  store %struct.Memory* %loadMem_4010f3, %struct.Memory** %MEMORY
  %loadMem_4010fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6383 = getelementptr inbounds %struct.GPR, %struct.GPR* %6382, i32 0, i32 33
  %6384 = getelementptr inbounds %struct.Reg, %struct.Reg* %6383, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %6384 to i64*
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6386 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6385, i64 0, i64 1
  %YMM1.i439 = bitcast %union.VectorReg* %6386 to %"class.std::bitset"*
  %6387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6388 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6387, i64 0, i64 0
  %XMM0.i440 = bitcast %union.VectorReg* %6388 to %union.vec128_t*
  %6389 = bitcast %"class.std::bitset"* %YMM1.i439 to i8*
  %6390 = bitcast %"class.std::bitset"* %YMM1.i439 to i8*
  %6391 = bitcast %union.vec128_t* %XMM0.i440 to i8*
  %6392 = load i64, i64* %PC.i438
  %6393 = add i64 %6392, 4
  store i64 %6393, i64* %PC.i438
  %6394 = bitcast i8* %6390 to double*
  %6395 = load double, double* %6394, align 1
  %6396 = getelementptr inbounds i8, i8* %6390, i64 8
  %6397 = bitcast i8* %6396 to i64*
  %6398 = load i64, i64* %6397, align 1
  %6399 = bitcast i8* %6391 to double*
  %6400 = load double, double* %6399, align 1
  %6401 = fsub double %6395, %6400
  %6402 = bitcast i8* %6389 to double*
  store double %6401, double* %6402, align 1
  %6403 = getelementptr inbounds i8, i8* %6389, i64 8
  %6404 = bitcast i8* %6403 to i64*
  store i64 %6398, i64* %6404, align 1
  store %struct.Memory* %loadMem_4010fb, %struct.Memory** %MEMORY
  %loadMem_4010ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %6405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6406 = getelementptr inbounds %struct.GPR, %struct.GPR* %6405, i32 0, i32 33
  %6407 = getelementptr inbounds %struct.Reg, %struct.Reg* %6406, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %6407 to i64*
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6409 = getelementptr inbounds %struct.GPR, %struct.GPR* %6408, i32 0, i32 15
  %6410 = getelementptr inbounds %struct.Reg, %struct.Reg* %6409, i32 0, i32 0
  %RBP.i436 = bitcast %union.anon* %6410 to i64*
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6412 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6411, i64 0, i64 2
  %YMM2.i437 = bitcast %union.VectorReg* %6412 to %"class.std::bitset"*
  %6413 = bitcast %"class.std::bitset"* %YMM2.i437 to i8*
  %6414 = load i64, i64* %RBP.i436
  %6415 = sub i64 %6414, 256
  %6416 = load i64, i64* %PC.i435
  %6417 = add i64 %6416, 8
  store i64 %6417, i64* %PC.i435
  %6418 = inttoptr i64 %6415 to double*
  %6419 = load double, double* %6418
  %6420 = bitcast i8* %6413 to double*
  store double %6419, double* %6420, align 1
  %6421 = getelementptr inbounds i8, i8* %6413, i64 8
  %6422 = bitcast i8* %6421 to double*
  store double 0.000000e+00, double* %6422, align 1
  store %struct.Memory* %loadMem_4010ff, %struct.Memory** %MEMORY
  %loadMem_401107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6424 = getelementptr inbounds %struct.GPR, %struct.GPR* %6423, i32 0, i32 33
  %6425 = getelementptr inbounds %struct.Reg, %struct.Reg* %6424, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %6425 to i64*
  %6426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6427 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6426, i64 0, i64 2
  %YMM2.i433 = bitcast %union.VectorReg* %6427 to %"class.std::bitset"*
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6429 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6428, i64 0, i64 1
  %XMM1.i434 = bitcast %union.VectorReg* %6429 to %union.vec128_t*
  %6430 = bitcast %"class.std::bitset"* %YMM2.i433 to i8*
  %6431 = bitcast %"class.std::bitset"* %YMM2.i433 to i8*
  %6432 = bitcast %union.vec128_t* %XMM1.i434 to i8*
  %6433 = load i64, i64* %PC.i432
  %6434 = add i64 %6433, 4
  store i64 %6434, i64* %PC.i432
  %6435 = bitcast i8* %6431 to double*
  %6436 = load double, double* %6435, align 1
  %6437 = getelementptr inbounds i8, i8* %6431, i64 8
  %6438 = bitcast i8* %6437 to i64*
  %6439 = load i64, i64* %6438, align 1
  %6440 = bitcast i8* %6432 to double*
  %6441 = load double, double* %6440, align 1
  %6442 = fdiv double %6436, %6441
  %6443 = bitcast i8* %6430 to double*
  store double %6442, double* %6443, align 1
  %6444 = getelementptr inbounds i8, i8* %6430, i64 8
  %6445 = bitcast i8* %6444 to i64*
  store i64 %6439, i64* %6445, align 1
  store %struct.Memory* %loadMem_401107, %struct.Memory** %MEMORY
  %loadMem_40110b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6447 = getelementptr inbounds %struct.GPR, %struct.GPR* %6446, i32 0, i32 33
  %6448 = getelementptr inbounds %struct.Reg, %struct.Reg* %6447, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %6448 to i64*
  %6449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6450 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6449, i64 0, i64 0
  %YMM0.i430 = bitcast %union.VectorReg* %6450 to %"class.std::bitset"*
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6452 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6451, i64 0, i64 2
  %XMM2.i431 = bitcast %union.VectorReg* %6452 to %union.vec128_t*
  %6453 = bitcast %"class.std::bitset"* %YMM0.i430 to i8*
  %6454 = bitcast %union.vec128_t* %XMM2.i431 to i8*
  %6455 = load i64, i64* %PC.i429
  %6456 = add i64 %6455, 3
  store i64 %6456, i64* %PC.i429
  %6457 = bitcast i8* %6454 to <2 x i32>*
  %6458 = load <2 x i32>, <2 x i32>* %6457, align 1
  %6459 = getelementptr inbounds i8, i8* %6454, i64 8
  %6460 = bitcast i8* %6459 to <2 x i32>*
  %6461 = load <2 x i32>, <2 x i32>* %6460, align 1
  %6462 = extractelement <2 x i32> %6458, i32 0
  %6463 = bitcast i8* %6453 to i32*
  store i32 %6462, i32* %6463, align 1
  %6464 = extractelement <2 x i32> %6458, i32 1
  %6465 = getelementptr inbounds i8, i8* %6453, i64 4
  %6466 = bitcast i8* %6465 to i32*
  store i32 %6464, i32* %6466, align 1
  %6467 = extractelement <2 x i32> %6461, i32 0
  %6468 = getelementptr inbounds i8, i8* %6453, i64 8
  %6469 = bitcast i8* %6468 to i32*
  store i32 %6467, i32* %6469, align 1
  %6470 = extractelement <2 x i32> %6461, i32 1
  %6471 = getelementptr inbounds i8, i8* %6453, i64 12
  %6472 = bitcast i8* %6471 to i32*
  store i32 %6470, i32* %6472, align 1
  store %struct.Memory* %loadMem_40110b, %struct.Memory** %MEMORY
  %loadMem1_40110e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6474 = getelementptr inbounds %struct.GPR, %struct.GPR* %6473, i32 0, i32 33
  %6475 = getelementptr inbounds %struct.Reg, %struct.Reg* %6474, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %6475 to i64*
  %6476 = load i64, i64* %PC.i428
  %6477 = add i64 %6476, -2622
  %6478 = load i64, i64* %PC.i428
  %6479 = add i64 %6478, 5
  %6480 = load i64, i64* %PC.i428
  %6481 = add i64 %6480, 5
  store i64 %6481, i64* %PC.i428
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6483 = load i64, i64* %6482, align 8
  %6484 = add i64 %6483, -8
  %6485 = inttoptr i64 %6484 to i64*
  store i64 %6479, i64* %6485
  store i64 %6484, i64* %6482, align 8
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6477, i64* %6486, align 8
  store %struct.Memory* %loadMem1_40110e, %struct.Memory** %MEMORY
  %loadMem2_40110e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40110e = load i64, i64* %3
  %call2_40110e = call %struct.Memory* @sub_4006d0.atan_plt(%struct.State* %0, i64 %loadPC_40110e, %struct.Memory* %loadMem2_40110e)
  store %struct.Memory* %call2_40110e, %struct.Memory** %MEMORY
  %loadMem_401113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6488 = getelementptr inbounds %struct.GPR, %struct.GPR* %6487, i32 0, i32 33
  %6489 = getelementptr inbounds %struct.Reg, %struct.Reg* %6488, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %6489 to i64*
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6491 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6490, i64 0, i64 1
  %YMM1.i427 = bitcast %union.VectorReg* %6491 to %"class.std::bitset"*
  %6492 = bitcast %"class.std::bitset"* %YMM1.i427 to i8*
  %6493 = load i64, i64* %PC.i426
  %6494 = add i64 %6493, 2053
  %6495 = load i64, i64* %PC.i426
  %6496 = add i64 %6495, 8
  store i64 %6496, i64* %PC.i426
  %6497 = inttoptr i64 %6494 to double*
  %6498 = load double, double* %6497
  %6499 = bitcast i8* %6492 to double*
  store double %6498, double* %6499, align 1
  %6500 = getelementptr inbounds i8, i8* %6492, i64 8
  %6501 = bitcast i8* %6500 to double*
  store double 0.000000e+00, double* %6501, align 1
  store %struct.Memory* %loadMem_401113, %struct.Memory** %MEMORY
  %loadMem_40111b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6503 = getelementptr inbounds %struct.GPR, %struct.GPR* %6502, i32 0, i32 33
  %6504 = getelementptr inbounds %struct.Reg, %struct.Reg* %6503, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %6504 to i64*
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6506 = getelementptr inbounds %struct.GPR, %struct.GPR* %6505, i32 0, i32 15
  %6507 = getelementptr inbounds %struct.Reg, %struct.Reg* %6506, i32 0, i32 0
  %RBP.i424 = bitcast %union.anon* %6507 to i64*
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6509 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6508, i64 0, i64 2
  %YMM2.i425 = bitcast %union.VectorReg* %6509 to %"class.std::bitset"*
  %6510 = bitcast %"class.std::bitset"* %YMM2.i425 to i8*
  %6511 = load i64, i64* %RBP.i424
  %6512 = sub i64 %6511, 240
  %6513 = load i64, i64* %PC.i423
  %6514 = add i64 %6513, 8
  store i64 %6514, i64* %PC.i423
  %6515 = inttoptr i64 %6512 to double*
  %6516 = load double, double* %6515
  %6517 = bitcast i8* %6510 to double*
  store double %6516, double* %6517, align 1
  %6518 = getelementptr inbounds i8, i8* %6510, i64 8
  %6519 = bitcast i8* %6518 to double*
  store double 0.000000e+00, double* %6519, align 1
  store %struct.Memory* %loadMem_40111b, %struct.Memory** %MEMORY
  %loadMem_401123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6521 = getelementptr inbounds %struct.GPR, %struct.GPR* %6520, i32 0, i32 33
  %6522 = getelementptr inbounds %struct.Reg, %struct.Reg* %6521, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %6522 to i64*
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6524 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6523, i64 0, i64 2
  %YMM2.i421 = bitcast %union.VectorReg* %6524 to %"class.std::bitset"*
  %6525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6526 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6525, i64 0, i64 0
  %XMM0.i422 = bitcast %union.VectorReg* %6526 to %union.vec128_t*
  %6527 = bitcast %"class.std::bitset"* %YMM2.i421 to i8*
  %6528 = bitcast %"class.std::bitset"* %YMM2.i421 to i8*
  %6529 = bitcast %union.vec128_t* %XMM0.i422 to i8*
  %6530 = load i64, i64* %PC.i420
  %6531 = add i64 %6530, 4
  store i64 %6531, i64* %PC.i420
  %6532 = bitcast i8* %6528 to double*
  %6533 = load double, double* %6532, align 1
  %6534 = getelementptr inbounds i8, i8* %6528, i64 8
  %6535 = bitcast i8* %6534 to i64*
  %6536 = load i64, i64* %6535, align 1
  %6537 = bitcast i8* %6529 to double*
  %6538 = load double, double* %6537, align 1
  %6539 = fmul double %6533, %6538
  %6540 = bitcast i8* %6527 to double*
  store double %6539, double* %6540, align 1
  %6541 = getelementptr inbounds i8, i8* %6527, i64 8
  %6542 = bitcast i8* %6541 to i64*
  store i64 %6536, i64* %6542, align 1
  store %struct.Memory* %loadMem_401123, %struct.Memory** %MEMORY
  %loadMem_401127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6544 = getelementptr inbounds %struct.GPR, %struct.GPR* %6543, i32 0, i32 33
  %6545 = getelementptr inbounds %struct.Reg, %struct.Reg* %6544, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %6545 to i64*
  %6546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6547 = getelementptr inbounds %struct.GPR, %struct.GPR* %6546, i32 0, i32 15
  %6548 = getelementptr inbounds %struct.Reg, %struct.Reg* %6547, i32 0, i32 0
  %RBP.i418 = bitcast %union.anon* %6548 to i64*
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6550 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6549, i64 0, i64 2
  %XMM2.i419 = bitcast %union.VectorReg* %6550 to %union.vec128_t*
  %6551 = load i64, i64* %RBP.i418
  %6552 = sub i64 %6551, 144
  %6553 = bitcast %union.vec128_t* %XMM2.i419 to i8*
  %6554 = load i64, i64* %PC.i417
  %6555 = add i64 %6554, 8
  store i64 %6555, i64* %PC.i417
  %6556 = bitcast i8* %6553 to double*
  %6557 = load double, double* %6556, align 1
  %6558 = inttoptr i64 %6552 to double*
  store double %6557, double* %6558
  store %struct.Memory* %loadMem_401127, %struct.Memory** %MEMORY
  %loadMem_40112f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6560 = getelementptr inbounds %struct.GPR, %struct.GPR* %6559, i32 0, i32 33
  %6561 = getelementptr inbounds %struct.Reg, %struct.Reg* %6560, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %6561 to i64*
  %6562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6563 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6562, i64 0, i64 0
  %YMM0.i416 = bitcast %union.VectorReg* %6563 to %"class.std::bitset"*
  %6564 = bitcast %"class.std::bitset"* %YMM0.i416 to i8*
  %6565 = load i64, i64* %PC.i415
  %6566 = add i64 %6565, 9
  store i64 %6566, i64* %PC.i415
  %6567 = load double, double* inttoptr (i64 6299800 to double*)
  %6568 = bitcast i8* %6564 to double*
  store double %6567, double* %6568, align 1
  %6569 = getelementptr inbounds i8, i8* %6564, i64 8
  %6570 = bitcast i8* %6569 to double*
  store double 0.000000e+00, double* %6570, align 1
  store %struct.Memory* %loadMem_40112f, %struct.Memory** %MEMORY
  %loadMem_401138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6572 = getelementptr inbounds %struct.GPR, %struct.GPR* %6571, i32 0, i32 33
  %6573 = getelementptr inbounds %struct.Reg, %struct.Reg* %6572, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %6573 to i64*
  %6574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6575 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6574, i64 0, i64 2
  %YMM2.i414 = bitcast %union.VectorReg* %6575 to %"class.std::bitset"*
  %6576 = bitcast %"class.std::bitset"* %YMM2.i414 to i8*
  %6577 = load i64, i64* %PC.i413
  %6578 = add i64 %6577, 9
  store i64 %6578, i64* %PC.i413
  %6579 = load double, double* inttoptr (i64 6299824 to double*)
  %6580 = bitcast i8* %6576 to double*
  store double %6579, double* %6580, align 1
  %6581 = getelementptr inbounds i8, i8* %6576, i64 8
  %6582 = bitcast i8* %6581 to double*
  store double 0.000000e+00, double* %6582, align 1
  store %struct.Memory* %loadMem_401138, %struct.Memory** %MEMORY
  %loadMem_401141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6584 = getelementptr inbounds %struct.GPR, %struct.GPR* %6583, i32 0, i32 33
  %6585 = getelementptr inbounds %struct.Reg, %struct.Reg* %6584, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %6585 to i64*
  %6586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6587 = getelementptr inbounds %struct.GPR, %struct.GPR* %6586, i32 0, i32 15
  %6588 = getelementptr inbounds %struct.Reg, %struct.Reg* %6587, i32 0, i32 0
  %RBP.i411 = bitcast %union.anon* %6588 to i64*
  %6589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6590 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6589, i64 0, i64 3
  %YMM3.i412 = bitcast %union.VectorReg* %6590 to %"class.std::bitset"*
  %6591 = bitcast %"class.std::bitset"* %YMM3.i412 to i8*
  %6592 = load i64, i64* %RBP.i411
  %6593 = sub i64 %6592, 152
  %6594 = load i64, i64* %PC.i410
  %6595 = add i64 %6594, 8
  store i64 %6595, i64* %PC.i410
  %6596 = inttoptr i64 %6593 to double*
  %6597 = load double, double* %6596
  %6598 = bitcast i8* %6591 to double*
  store double %6597, double* %6598, align 1
  %6599 = getelementptr inbounds i8, i8* %6591, i64 8
  %6600 = bitcast i8* %6599 to double*
  store double 0.000000e+00, double* %6600, align 1
  store %struct.Memory* %loadMem_401141, %struct.Memory** %MEMORY
  %loadMem_401149 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6602 = getelementptr inbounds %struct.GPR, %struct.GPR* %6601, i32 0, i32 33
  %6603 = getelementptr inbounds %struct.Reg, %struct.Reg* %6602, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %6603 to i64*
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6605 = getelementptr inbounds %struct.GPR, %struct.GPR* %6604, i32 0, i32 15
  %6606 = getelementptr inbounds %struct.Reg, %struct.Reg* %6605, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %6606 to i64*
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6608 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6607, i64 0, i64 0
  %XMM0.i409 = bitcast %union.VectorReg* %6608 to %union.vec128_t*
  %6609 = load i64, i64* %RBP.i408
  %6610 = sub i64 %6609, 272
  %6611 = bitcast %union.vec128_t* %XMM0.i409 to i8*
  %6612 = load i64, i64* %PC.i407
  %6613 = add i64 %6612, 8
  store i64 %6613, i64* %PC.i407
  %6614 = bitcast i8* %6611 to double*
  %6615 = load double, double* %6614, align 1
  %6616 = inttoptr i64 %6610 to double*
  store double %6615, double* %6616
  store %struct.Memory* %loadMem_401149, %struct.Memory** %MEMORY
  %loadMem_401151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6618 = getelementptr inbounds %struct.GPR, %struct.GPR* %6617, i32 0, i32 33
  %6619 = getelementptr inbounds %struct.Reg, %struct.Reg* %6618, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %6619 to i64*
  %6620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6621 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6620, i64 0, i64 0
  %YMM0.i406 = bitcast %union.VectorReg* %6621 to %"class.std::bitset"*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6623 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6622, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %6623 to %union.vec128_t*
  %6624 = bitcast %"class.std::bitset"* %YMM0.i406 to i8*
  %6625 = bitcast %union.vec128_t* %XMM3.i to i8*
  %6626 = load i64, i64* %PC.i405
  %6627 = add i64 %6626, 3
  store i64 %6627, i64* %PC.i405
  %6628 = bitcast i8* %6625 to <2 x i32>*
  %6629 = load <2 x i32>, <2 x i32>* %6628, align 1
  %6630 = getelementptr inbounds i8, i8* %6625, i64 8
  %6631 = bitcast i8* %6630 to <2 x i32>*
  %6632 = load <2 x i32>, <2 x i32>* %6631, align 1
  %6633 = extractelement <2 x i32> %6629, i32 0
  %6634 = bitcast i8* %6624 to i32*
  store i32 %6633, i32* %6634, align 1
  %6635 = extractelement <2 x i32> %6629, i32 1
  %6636 = getelementptr inbounds i8, i8* %6624, i64 4
  %6637 = bitcast i8* %6636 to i32*
  store i32 %6635, i32* %6637, align 1
  %6638 = extractelement <2 x i32> %6632, i32 0
  %6639 = getelementptr inbounds i8, i8* %6624, i64 8
  %6640 = bitcast i8* %6639 to i32*
  store i32 %6638, i32* %6640, align 1
  %6641 = extractelement <2 x i32> %6632, i32 1
  %6642 = getelementptr inbounds i8, i8* %6624, i64 12
  %6643 = bitcast i8* %6642 to i32*
  store i32 %6641, i32* %6643, align 1
  store %struct.Memory* %loadMem_401151, %struct.Memory** %MEMORY
  %loadMem_401154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6645 = getelementptr inbounds %struct.GPR, %struct.GPR* %6644, i32 0, i32 33
  %6646 = getelementptr inbounds %struct.Reg, %struct.Reg* %6645, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %6646 to i64*
  %6647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6648 = getelementptr inbounds %struct.GPR, %struct.GPR* %6647, i32 0, i32 15
  %6649 = getelementptr inbounds %struct.Reg, %struct.Reg* %6648, i32 0, i32 0
  %RBP.i403 = bitcast %union.anon* %6649 to i64*
  %6650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6651 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6650, i64 0, i64 1
  %XMM1.i404 = bitcast %union.VectorReg* %6651 to %union.vec128_t*
  %6652 = load i64, i64* %RBP.i403
  %6653 = sub i64 %6652, 280
  %6654 = bitcast %union.vec128_t* %XMM1.i404 to i8*
  %6655 = load i64, i64* %PC.i402
  %6656 = add i64 %6655, 8
  store i64 %6656, i64* %PC.i402
  %6657 = bitcast i8* %6654 to double*
  %6658 = load double, double* %6657, align 1
  %6659 = inttoptr i64 %6653 to double*
  store double %6658, double* %6659
  store %struct.Memory* %loadMem_401154, %struct.Memory** %MEMORY
  %loadMem_40115c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6661 = getelementptr inbounds %struct.GPR, %struct.GPR* %6660, i32 0, i32 33
  %6662 = getelementptr inbounds %struct.Reg, %struct.Reg* %6661, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %6662 to i64*
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6664 = getelementptr inbounds %struct.GPR, %struct.GPR* %6663, i32 0, i32 15
  %6665 = getelementptr inbounds %struct.Reg, %struct.Reg* %6664, i32 0, i32 0
  %RBP.i400 = bitcast %union.anon* %6665 to i64*
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6667 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6666, i64 0, i64 2
  %XMM2.i401 = bitcast %union.VectorReg* %6667 to %union.vec128_t*
  %6668 = load i64, i64* %RBP.i400
  %6669 = sub i64 %6668, 288
  %6670 = bitcast %union.vec128_t* %XMM2.i401 to i8*
  %6671 = load i64, i64* %PC.i399
  %6672 = add i64 %6671, 8
  store i64 %6672, i64* %PC.i399
  %6673 = bitcast i8* %6670 to double*
  %6674 = load double, double* %6673, align 1
  %6675 = inttoptr i64 %6669 to double*
  store double %6674, double* %6675
  store %struct.Memory* %loadMem_40115c, %struct.Memory** %MEMORY
  %loadMem1_401164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6677 = getelementptr inbounds %struct.GPR, %struct.GPR* %6676, i32 0, i32 33
  %6678 = getelementptr inbounds %struct.Reg, %struct.Reg* %6677, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %6678 to i64*
  %6679 = load i64, i64* %PC.i398
  %6680 = add i64 %6679, -2596
  %6681 = load i64, i64* %PC.i398
  %6682 = add i64 %6681, 5
  %6683 = load i64, i64* %PC.i398
  %6684 = add i64 %6683, 5
  store i64 %6684, i64* %PC.i398
  %6685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6686 = load i64, i64* %6685, align 8
  %6687 = add i64 %6686, -8
  %6688 = inttoptr i64 %6687 to i64*
  store i64 %6682, i64* %6688
  store i64 %6687, i64* %6685, align 8
  %6689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6680, i64* %6689, align 8
  store %struct.Memory* %loadMem1_401164, %struct.Memory** %MEMORY
  %loadMem2_401164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401164 = load i64, i64* %3
  %call2_401164 = call %struct.Memory* @sub_400740.sin_plt(%struct.State* %0, i64 %loadPC_401164, %struct.Memory* %loadMem2_401164)
  store %struct.Memory* %call2_401164, %struct.Memory** %MEMORY
  %loadMem_401169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6691 = getelementptr inbounds %struct.GPR, %struct.GPR* %6690, i32 0, i32 33
  %6692 = getelementptr inbounds %struct.Reg, %struct.Reg* %6691, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %6692 to i64*
  %6693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6694 = getelementptr inbounds %struct.GPR, %struct.GPR* %6693, i32 0, i32 15
  %6695 = getelementptr inbounds %struct.Reg, %struct.Reg* %6694, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %6695 to i64*
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6697 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6696, i64 0, i64 1
  %YMM1.i397 = bitcast %union.VectorReg* %6697 to %"class.std::bitset"*
  %6698 = bitcast %"class.std::bitset"* %YMM1.i397 to i8*
  %6699 = load i64, i64* %RBP.i396
  %6700 = sub i64 %6699, 288
  %6701 = load i64, i64* %PC.i395
  %6702 = add i64 %6701, 8
  store i64 %6702, i64* %PC.i395
  %6703 = inttoptr i64 %6700 to double*
  %6704 = load double, double* %6703
  %6705 = bitcast i8* %6698 to double*
  store double %6704, double* %6705, align 1
  %6706 = getelementptr inbounds i8, i8* %6698, i64 8
  %6707 = bitcast i8* %6706 to double*
  store double 0.000000e+00, double* %6707, align 1
  store %struct.Memory* %loadMem_401169, %struct.Memory** %MEMORY
  %loadMem_401171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6709 = getelementptr inbounds %struct.GPR, %struct.GPR* %6708, i32 0, i32 33
  %6710 = getelementptr inbounds %struct.Reg, %struct.Reg* %6709, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %6710 to i64*
  %6711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6712 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6711, i64 0, i64 1
  %YMM1.i393 = bitcast %union.VectorReg* %6712 to %"class.std::bitset"*
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6714 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6713, i64 0, i64 0
  %XMM0.i394 = bitcast %union.VectorReg* %6714 to %union.vec128_t*
  %6715 = bitcast %"class.std::bitset"* %YMM1.i393 to i8*
  %6716 = bitcast %"class.std::bitset"* %YMM1.i393 to i8*
  %6717 = bitcast %union.vec128_t* %XMM0.i394 to i8*
  %6718 = load i64, i64* %PC.i392
  %6719 = add i64 %6718, 4
  store i64 %6719, i64* %PC.i392
  %6720 = bitcast i8* %6716 to double*
  %6721 = load double, double* %6720, align 1
  %6722 = getelementptr inbounds i8, i8* %6716, i64 8
  %6723 = bitcast i8* %6722 to i64*
  %6724 = load i64, i64* %6723, align 1
  %6725 = bitcast i8* %6717 to double*
  %6726 = load double, double* %6725, align 1
  %6727 = fmul double %6721, %6726
  %6728 = bitcast i8* %6715 to double*
  store double %6727, double* %6728, align 1
  %6729 = getelementptr inbounds i8, i8* %6715, i64 8
  %6730 = bitcast i8* %6729 to i64*
  store i64 %6724, i64* %6730, align 1
  store %struct.Memory* %loadMem_401171, %struct.Memory** %MEMORY
  %loadMem_401175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6732 = getelementptr inbounds %struct.GPR, %struct.GPR* %6731, i32 0, i32 33
  %6733 = getelementptr inbounds %struct.Reg, %struct.Reg* %6732, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %6733 to i64*
  %6734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6735 = getelementptr inbounds %struct.GPR, %struct.GPR* %6734, i32 0, i32 15
  %6736 = getelementptr inbounds %struct.Reg, %struct.Reg* %6735, i32 0, i32 0
  %RBP.i390 = bitcast %union.anon* %6736 to i64*
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6738 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6737, i64 0, i64 0
  %YMM0.i391 = bitcast %union.VectorReg* %6738 to %"class.std::bitset"*
  %6739 = bitcast %"class.std::bitset"* %YMM0.i391 to i8*
  %6740 = load i64, i64* %RBP.i390
  %6741 = sub i64 %6740, 152
  %6742 = load i64, i64* %PC.i389
  %6743 = add i64 %6742, 8
  store i64 %6743, i64* %PC.i389
  %6744 = inttoptr i64 %6741 to double*
  %6745 = load double, double* %6744
  %6746 = bitcast i8* %6739 to double*
  store double %6745, double* %6746, align 1
  %6747 = getelementptr inbounds i8, i8* %6739, i64 8
  %6748 = bitcast i8* %6747 to double*
  store double 0.000000e+00, double* %6748, align 1
  store %struct.Memory* %loadMem_401175, %struct.Memory** %MEMORY
  %loadMem_40117d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6750 = getelementptr inbounds %struct.GPR, %struct.GPR* %6749, i32 0, i32 33
  %6751 = getelementptr inbounds %struct.Reg, %struct.Reg* %6750, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %6751 to i64*
  %6752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6753 = getelementptr inbounds %struct.GPR, %struct.GPR* %6752, i32 0, i32 15
  %6754 = getelementptr inbounds %struct.Reg, %struct.Reg* %6753, i32 0, i32 0
  %RBP.i387 = bitcast %union.anon* %6754 to i64*
  %6755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6756 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6755, i64 0, i64 1
  %XMM1.i388 = bitcast %union.VectorReg* %6756 to %union.vec128_t*
  %6757 = load i64, i64* %RBP.i387
  %6758 = sub i64 %6757, 296
  %6759 = bitcast %union.vec128_t* %XMM1.i388 to i8*
  %6760 = load i64, i64* %PC.i386
  %6761 = add i64 %6760, 8
  store i64 %6761, i64* %PC.i386
  %6762 = bitcast i8* %6759 to double*
  %6763 = load double, double* %6762, align 1
  %6764 = inttoptr i64 %6758 to double*
  store double %6763, double* %6764
  store %struct.Memory* %loadMem_40117d, %struct.Memory** %MEMORY
  %loadMem1_401185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6766 = getelementptr inbounds %struct.GPR, %struct.GPR* %6765, i32 0, i32 33
  %6767 = getelementptr inbounds %struct.Reg, %struct.Reg* %6766, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %6767 to i64*
  %6768 = load i64, i64* %PC.i385
  %6769 = add i64 %6768, -2693
  %6770 = load i64, i64* %PC.i385
  %6771 = add i64 %6770, 5
  %6772 = load i64, i64* %PC.i385
  %6773 = add i64 %6772, 5
  store i64 %6773, i64* %PC.i385
  %6774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6775 = load i64, i64* %6774, align 8
  %6776 = add i64 %6775, -8
  %6777 = inttoptr i64 %6776 to i64*
  store i64 %6771, i64* %6777
  store i64 %6776, i64* %6774, align 8
  %6778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6769, i64* %6778, align 8
  store %struct.Memory* %loadMem1_401185, %struct.Memory** %MEMORY
  %loadMem2_401185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401185 = load i64, i64* %3
  %call2_401185 = call %struct.Memory* @sub_400700.cos_plt(%struct.State* %0, i64 %loadPC_401185, %struct.Memory* %loadMem2_401185)
  store %struct.Memory* %call2_401185, %struct.Memory** %MEMORY
  %loadMem_40118a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6780 = getelementptr inbounds %struct.GPR, %struct.GPR* %6779, i32 0, i32 33
  %6781 = getelementptr inbounds %struct.Reg, %struct.Reg* %6780, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %6781 to i64*
  %6782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6783 = getelementptr inbounds %struct.GPR, %struct.GPR* %6782, i32 0, i32 15
  %6784 = getelementptr inbounds %struct.Reg, %struct.Reg* %6783, i32 0, i32 0
  %RBP.i383 = bitcast %union.anon* %6784 to i64*
  %6785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6786 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6785, i64 0, i64 1
  %YMM1.i384 = bitcast %union.VectorReg* %6786 to %"class.std::bitset"*
  %6787 = bitcast %"class.std::bitset"* %YMM1.i384 to i8*
  %6788 = load i64, i64* %RBP.i383
  %6789 = sub i64 %6788, 296
  %6790 = load i64, i64* %PC.i382
  %6791 = add i64 %6790, 8
  store i64 %6791, i64* %PC.i382
  %6792 = inttoptr i64 %6789 to double*
  %6793 = load double, double* %6792
  %6794 = bitcast i8* %6787 to double*
  store double %6793, double* %6794, align 1
  %6795 = getelementptr inbounds i8, i8* %6787, i64 8
  %6796 = bitcast i8* %6795 to double*
  store double 0.000000e+00, double* %6796, align 1
  store %struct.Memory* %loadMem_40118a, %struct.Memory** %MEMORY
  %loadMem_401192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6798 = getelementptr inbounds %struct.GPR, %struct.GPR* %6797, i32 0, i32 33
  %6799 = getelementptr inbounds %struct.Reg, %struct.Reg* %6798, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %6799 to i64*
  %6800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6801 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6800, i64 0, i64 1
  %YMM1.i380 = bitcast %union.VectorReg* %6801 to %"class.std::bitset"*
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6803 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6802, i64 0, i64 0
  %XMM0.i381 = bitcast %union.VectorReg* %6803 to %union.vec128_t*
  %6804 = bitcast %"class.std::bitset"* %YMM1.i380 to i8*
  %6805 = bitcast %"class.std::bitset"* %YMM1.i380 to i8*
  %6806 = bitcast %union.vec128_t* %XMM0.i381 to i8*
  %6807 = load i64, i64* %PC.i379
  %6808 = add i64 %6807, 4
  store i64 %6808, i64* %PC.i379
  %6809 = bitcast i8* %6805 to double*
  %6810 = load double, double* %6809, align 1
  %6811 = getelementptr inbounds i8, i8* %6805, i64 8
  %6812 = bitcast i8* %6811 to i64*
  %6813 = load i64, i64* %6812, align 1
  %6814 = bitcast i8* %6806 to double*
  %6815 = load double, double* %6814, align 1
  %6816 = fmul double %6810, %6815
  %6817 = bitcast i8* %6804 to double*
  store double %6816, double* %6817, align 1
  %6818 = getelementptr inbounds i8, i8* %6804, i64 8
  %6819 = bitcast i8* %6818 to i64*
  store i64 %6813, i64* %6819, align 1
  store %struct.Memory* %loadMem_401192, %struct.Memory** %MEMORY
  %loadMem_401196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6821 = getelementptr inbounds %struct.GPR, %struct.GPR* %6820, i32 0, i32 33
  %6822 = getelementptr inbounds %struct.Reg, %struct.Reg* %6821, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %6822 to i64*
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6824 = getelementptr inbounds %struct.GPR, %struct.GPR* %6823, i32 0, i32 15
  %6825 = getelementptr inbounds %struct.Reg, %struct.Reg* %6824, i32 0, i32 0
  %RBP.i377 = bitcast %union.anon* %6825 to i64*
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6827 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6826, i64 0, i64 0
  %YMM0.i378 = bitcast %union.VectorReg* %6827 to %"class.std::bitset"*
  %6828 = bitcast %"class.std::bitset"* %YMM0.i378 to i8*
  %6829 = load i64, i64* %RBP.i377
  %6830 = sub i64 %6829, 144
  %6831 = load i64, i64* %PC.i376
  %6832 = add i64 %6831, 8
  store i64 %6832, i64* %PC.i376
  %6833 = inttoptr i64 %6830 to double*
  %6834 = load double, double* %6833
  %6835 = bitcast i8* %6828 to double*
  store double %6834, double* %6835, align 1
  %6836 = getelementptr inbounds i8, i8* %6828, i64 8
  %6837 = bitcast i8* %6836 to double*
  store double 0.000000e+00, double* %6837, align 1
  store %struct.Memory* %loadMem_401196, %struct.Memory** %MEMORY
  %loadMem_40119e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6839 = getelementptr inbounds %struct.GPR, %struct.GPR* %6838, i32 0, i32 33
  %6840 = getelementptr inbounds %struct.Reg, %struct.Reg* %6839, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %6840 to i64*
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6842 = getelementptr inbounds %struct.GPR, %struct.GPR* %6841, i32 0, i32 15
  %6843 = getelementptr inbounds %struct.Reg, %struct.Reg* %6842, i32 0, i32 0
  %RBP.i374 = bitcast %union.anon* %6843 to i64*
  %6844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6845 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6844, i64 0, i64 0
  %YMM0.i375 = bitcast %union.VectorReg* %6845 to %"class.std::bitset"*
  %6846 = bitcast %"class.std::bitset"* %YMM0.i375 to i8*
  %6847 = bitcast %"class.std::bitset"* %YMM0.i375 to i8*
  %6848 = load i64, i64* %RBP.i374
  %6849 = sub i64 %6848, 152
  %6850 = load i64, i64* %PC.i373
  %6851 = add i64 %6850, 8
  store i64 %6851, i64* %PC.i373
  %6852 = bitcast i8* %6847 to double*
  %6853 = load double, double* %6852, align 1
  %6854 = getelementptr inbounds i8, i8* %6847, i64 8
  %6855 = bitcast i8* %6854 to i64*
  %6856 = load i64, i64* %6855, align 1
  %6857 = inttoptr i64 %6849 to double*
  %6858 = load double, double* %6857
  %6859 = fadd double %6853, %6858
  %6860 = bitcast i8* %6846 to double*
  store double %6859, double* %6860, align 1
  %6861 = getelementptr inbounds i8, i8* %6846, i64 8
  %6862 = bitcast i8* %6861 to i64*
  store i64 %6856, i64* %6862, align 1
  store %struct.Memory* %loadMem_40119e, %struct.Memory** %MEMORY
  %loadMem_4011a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6864 = getelementptr inbounds %struct.GPR, %struct.GPR* %6863, i32 0, i32 33
  %6865 = getelementptr inbounds %struct.Reg, %struct.Reg* %6864, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %6865 to i64*
  %6866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6867 = getelementptr inbounds %struct.GPR, %struct.GPR* %6866, i32 0, i32 15
  %6868 = getelementptr inbounds %struct.Reg, %struct.Reg* %6867, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %6868 to i64*
  %6869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6870 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6869, i64 0, i64 1
  %XMM1.i372 = bitcast %union.VectorReg* %6870 to %union.vec128_t*
  %6871 = load i64, i64* %RBP.i371
  %6872 = sub i64 %6871, 304
  %6873 = bitcast %union.vec128_t* %XMM1.i372 to i8*
  %6874 = load i64, i64* %PC.i370
  %6875 = add i64 %6874, 8
  store i64 %6875, i64* %PC.i370
  %6876 = bitcast i8* %6873 to double*
  %6877 = load double, double* %6876, align 1
  %6878 = inttoptr i64 %6872 to double*
  store double %6877, double* %6878
  store %struct.Memory* %loadMem_4011a6, %struct.Memory** %MEMORY
  %loadMem1_4011ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6880 = getelementptr inbounds %struct.GPR, %struct.GPR* %6879, i32 0, i32 33
  %6881 = getelementptr inbounds %struct.Reg, %struct.Reg* %6880, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %6881 to i64*
  %6882 = load i64, i64* %PC.i369
  %6883 = add i64 %6882, -2734
  %6884 = load i64, i64* %PC.i369
  %6885 = add i64 %6884, 5
  %6886 = load i64, i64* %PC.i369
  %6887 = add i64 %6886, 5
  store i64 %6887, i64* %PC.i369
  %6888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6889 = load i64, i64* %6888, align 8
  %6890 = add i64 %6889, -8
  %6891 = inttoptr i64 %6890 to i64*
  store i64 %6885, i64* %6891
  store i64 %6890, i64* %6888, align 8
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6883, i64* %6892, align 8
  store %struct.Memory* %loadMem1_4011ae, %struct.Memory** %MEMORY
  %loadMem2_4011ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011ae = load i64, i64* %3
  %call2_4011ae = call %struct.Memory* @sub_400700.cos_plt(%struct.State* %0, i64 %loadPC_4011ae, %struct.Memory* %loadMem2_4011ae)
  store %struct.Memory* %call2_4011ae, %struct.Memory** %MEMORY
  %loadMem_4011b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6894 = getelementptr inbounds %struct.GPR, %struct.GPR* %6893, i32 0, i32 33
  %6895 = getelementptr inbounds %struct.Reg, %struct.Reg* %6894, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %6895 to i64*
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6897 = getelementptr inbounds %struct.GPR, %struct.GPR* %6896, i32 0, i32 15
  %6898 = getelementptr inbounds %struct.Reg, %struct.Reg* %6897, i32 0, i32 0
  %RBP.i367 = bitcast %union.anon* %6898 to i64*
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6900 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6899, i64 0, i64 1
  %YMM1.i368 = bitcast %union.VectorReg* %6900 to %"class.std::bitset"*
  %6901 = bitcast %"class.std::bitset"* %YMM1.i368 to i8*
  %6902 = load i64, i64* %RBP.i367
  %6903 = sub i64 %6902, 144
  %6904 = load i64, i64* %PC.i366
  %6905 = add i64 %6904, 8
  store i64 %6905, i64* %PC.i366
  %6906 = inttoptr i64 %6903 to double*
  %6907 = load double, double* %6906
  %6908 = bitcast i8* %6901 to double*
  store double %6907, double* %6908, align 1
  %6909 = getelementptr inbounds i8, i8* %6901, i64 8
  %6910 = bitcast i8* %6909 to double*
  store double 0.000000e+00, double* %6910, align 1
  store %struct.Memory* %loadMem_4011b3, %struct.Memory** %MEMORY
  %loadMem_4011bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6912 = getelementptr inbounds %struct.GPR, %struct.GPR* %6911, i32 0, i32 33
  %6913 = getelementptr inbounds %struct.Reg, %struct.Reg* %6912, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %6913 to i64*
  %6914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6915 = getelementptr inbounds %struct.GPR, %struct.GPR* %6914, i32 0, i32 15
  %6916 = getelementptr inbounds %struct.Reg, %struct.Reg* %6915, i32 0, i32 0
  %RBP.i364 = bitcast %union.anon* %6916 to i64*
  %6917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6918 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6917, i64 0, i64 1
  %YMM1.i365 = bitcast %union.VectorReg* %6918 to %"class.std::bitset"*
  %6919 = bitcast %"class.std::bitset"* %YMM1.i365 to i8*
  %6920 = bitcast %"class.std::bitset"* %YMM1.i365 to i8*
  %6921 = load i64, i64* %RBP.i364
  %6922 = sub i64 %6921, 152
  %6923 = load i64, i64* %PC.i363
  %6924 = add i64 %6923, 8
  store i64 %6924, i64* %PC.i363
  %6925 = bitcast i8* %6920 to double*
  %6926 = load double, double* %6925, align 1
  %6927 = getelementptr inbounds i8, i8* %6920, i64 8
  %6928 = bitcast i8* %6927 to i64*
  %6929 = load i64, i64* %6928, align 1
  %6930 = inttoptr i64 %6922 to double*
  %6931 = load double, double* %6930
  %6932 = fsub double %6926, %6931
  %6933 = bitcast i8* %6919 to double*
  store double %6932, double* %6933, align 1
  %6934 = getelementptr inbounds i8, i8* %6919, i64 8
  %6935 = bitcast i8* %6934 to i64*
  store i64 %6929, i64* %6935, align 1
  store %struct.Memory* %loadMem_4011bb, %struct.Memory** %MEMORY
  %loadMem_4011c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6937 = getelementptr inbounds %struct.GPR, %struct.GPR* %6936, i32 0, i32 33
  %6938 = getelementptr inbounds %struct.Reg, %struct.Reg* %6937, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %6938 to i64*
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6940 = getelementptr inbounds %struct.GPR, %struct.GPR* %6939, i32 0, i32 15
  %6941 = getelementptr inbounds %struct.Reg, %struct.Reg* %6940, i32 0, i32 0
  %RBP.i361 = bitcast %union.anon* %6941 to i64*
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6943 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6942, i64 0, i64 0
  %XMM0.i362 = bitcast %union.VectorReg* %6943 to %union.vec128_t*
  %6944 = load i64, i64* %RBP.i361
  %6945 = sub i64 %6944, 312
  %6946 = bitcast %union.vec128_t* %XMM0.i362 to i8*
  %6947 = load i64, i64* %PC.i360
  %6948 = add i64 %6947, 8
  store i64 %6948, i64* %PC.i360
  %6949 = bitcast i8* %6946 to double*
  %6950 = load double, double* %6949, align 1
  %6951 = inttoptr i64 %6945 to double*
  store double %6950, double* %6951
  store %struct.Memory* %loadMem_4011c3, %struct.Memory** %MEMORY
  %loadMem_4011cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6953 = getelementptr inbounds %struct.GPR, %struct.GPR* %6952, i32 0, i32 33
  %6954 = getelementptr inbounds %struct.Reg, %struct.Reg* %6953, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %6954 to i64*
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6956 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6955, i64 0, i64 0
  %YMM0.i358 = bitcast %union.VectorReg* %6956 to %"class.std::bitset"*
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6958 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6957, i64 0, i64 1
  %XMM1.i359 = bitcast %union.VectorReg* %6958 to %union.vec128_t*
  %6959 = bitcast %"class.std::bitset"* %YMM0.i358 to i8*
  %6960 = bitcast %union.vec128_t* %XMM1.i359 to i8*
  %6961 = load i64, i64* %PC.i357
  %6962 = add i64 %6961, 3
  store i64 %6962, i64* %PC.i357
  %6963 = bitcast i8* %6960 to <2 x i32>*
  %6964 = load <2 x i32>, <2 x i32>* %6963, align 1
  %6965 = getelementptr inbounds i8, i8* %6960, i64 8
  %6966 = bitcast i8* %6965 to <2 x i32>*
  %6967 = load <2 x i32>, <2 x i32>* %6966, align 1
  %6968 = extractelement <2 x i32> %6964, i32 0
  %6969 = bitcast i8* %6959 to i32*
  store i32 %6968, i32* %6969, align 1
  %6970 = extractelement <2 x i32> %6964, i32 1
  %6971 = getelementptr inbounds i8, i8* %6959, i64 4
  %6972 = bitcast i8* %6971 to i32*
  store i32 %6970, i32* %6972, align 1
  %6973 = extractelement <2 x i32> %6967, i32 0
  %6974 = getelementptr inbounds i8, i8* %6959, i64 8
  %6975 = bitcast i8* %6974 to i32*
  store i32 %6973, i32* %6975, align 1
  %6976 = extractelement <2 x i32> %6967, i32 1
  %6977 = getelementptr inbounds i8, i8* %6959, i64 12
  %6978 = bitcast i8* %6977 to i32*
  store i32 %6976, i32* %6978, align 1
  store %struct.Memory* %loadMem_4011cb, %struct.Memory** %MEMORY
  %loadMem1_4011ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %6979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6980 = getelementptr inbounds %struct.GPR, %struct.GPR* %6979, i32 0, i32 33
  %6981 = getelementptr inbounds %struct.Reg, %struct.Reg* %6980, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %6981 to i64*
  %6982 = load i64, i64* %PC.i356
  %6983 = add i64 %6982, -2766
  %6984 = load i64, i64* %PC.i356
  %6985 = add i64 %6984, 5
  %6986 = load i64, i64* %PC.i356
  %6987 = add i64 %6986, 5
  store i64 %6987, i64* %PC.i356
  %6988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6989 = load i64, i64* %6988, align 8
  %6990 = add i64 %6989, -8
  %6991 = inttoptr i64 %6990 to i64*
  store i64 %6985, i64* %6991
  store i64 %6990, i64* %6988, align 8
  %6992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6983, i64* %6992, align 8
  store %struct.Memory* %loadMem1_4011ce, %struct.Memory** %MEMORY
  %loadMem2_4011ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011ce = load i64, i64* %3
  %call2_4011ce = call %struct.Memory* @sub_400700.cos_plt(%struct.State* %0, i64 %loadPC_4011ce, %struct.Memory* %loadMem2_4011ce)
  store %struct.Memory* %call2_4011ce, %struct.Memory** %MEMORY
  %loadMem_4011d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6994 = getelementptr inbounds %struct.GPR, %struct.GPR* %6993, i32 0, i32 33
  %6995 = getelementptr inbounds %struct.Reg, %struct.Reg* %6994, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %6995 to i64*
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 15
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %6998 to i64*
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7000 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6999, i64 0, i64 1
  %YMM1.i355 = bitcast %union.VectorReg* %7000 to %"class.std::bitset"*
  %7001 = bitcast %"class.std::bitset"* %YMM1.i355 to i8*
  %7002 = load i64, i64* %RBP.i354
  %7003 = sub i64 %7002, 312
  %7004 = load i64, i64* %PC.i353
  %7005 = add i64 %7004, 8
  store i64 %7005, i64* %PC.i353
  %7006 = inttoptr i64 %7003 to double*
  %7007 = load double, double* %7006
  %7008 = bitcast i8* %7001 to double*
  store double %7007, double* %7008, align 1
  %7009 = getelementptr inbounds i8, i8* %7001, i64 8
  %7010 = bitcast i8* %7009 to double*
  store double 0.000000e+00, double* %7010, align 1
  store %struct.Memory* %loadMem_4011d3, %struct.Memory** %MEMORY
  %loadMem_4011db = load %struct.Memory*, %struct.Memory** %MEMORY
  %7011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7012 = getelementptr inbounds %struct.GPR, %struct.GPR* %7011, i32 0, i32 33
  %7013 = getelementptr inbounds %struct.Reg, %struct.Reg* %7012, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %7013 to i64*
  %7014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7015 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7014, i64 0, i64 1
  %YMM1.i351 = bitcast %union.VectorReg* %7015 to %"class.std::bitset"*
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7017 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7016, i64 0, i64 0
  %XMM0.i352 = bitcast %union.VectorReg* %7017 to %union.vec128_t*
  %7018 = bitcast %"class.std::bitset"* %YMM1.i351 to i8*
  %7019 = bitcast %"class.std::bitset"* %YMM1.i351 to i8*
  %7020 = bitcast %union.vec128_t* %XMM0.i352 to i8*
  %7021 = load i64, i64* %PC.i350
  %7022 = add i64 %7021, 4
  store i64 %7022, i64* %PC.i350
  %7023 = bitcast i8* %7019 to double*
  %7024 = load double, double* %7023, align 1
  %7025 = getelementptr inbounds i8, i8* %7019, i64 8
  %7026 = bitcast i8* %7025 to i64*
  %7027 = load i64, i64* %7026, align 1
  %7028 = bitcast i8* %7020 to double*
  %7029 = load double, double* %7028, align 1
  %7030 = fadd double %7024, %7029
  %7031 = bitcast i8* %7018 to double*
  store double %7030, double* %7031, align 1
  %7032 = getelementptr inbounds i8, i8* %7018, i64 8
  %7033 = bitcast i8* %7032 to i64*
  store i64 %7027, i64* %7033, align 1
  store %struct.Memory* %loadMem_4011db, %struct.Memory** %MEMORY
  %loadMem_4011df = load %struct.Memory*, %struct.Memory** %MEMORY
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7035 = getelementptr inbounds %struct.GPR, %struct.GPR* %7034, i32 0, i32 33
  %7036 = getelementptr inbounds %struct.Reg, %struct.Reg* %7035, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %7036 to i64*
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7038 = getelementptr inbounds %struct.GPR, %struct.GPR* %7037, i32 0, i32 15
  %7039 = getelementptr inbounds %struct.Reg, %struct.Reg* %7038, i32 0, i32 0
  %RBP.i348 = bitcast %union.anon* %7039 to i64*
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7041 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7040, i64 0, i64 0
  %YMM0.i349 = bitcast %union.VectorReg* %7041 to %"class.std::bitset"*
  %7042 = bitcast %"class.std::bitset"* %YMM0.i349 to i8*
  %7043 = load i64, i64* %RBP.i348
  %7044 = sub i64 %7043, 280
  %7045 = load i64, i64* %PC.i347
  %7046 = add i64 %7045, 8
  store i64 %7046, i64* %PC.i347
  %7047 = inttoptr i64 %7044 to double*
  %7048 = load double, double* %7047
  %7049 = bitcast i8* %7042 to double*
  store double %7048, double* %7049, align 1
  %7050 = getelementptr inbounds i8, i8* %7042, i64 8
  %7051 = bitcast i8* %7050 to double*
  store double 0.000000e+00, double* %7051, align 1
  store %struct.Memory* %loadMem_4011df, %struct.Memory** %MEMORY
  %loadMem_4011e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7053 = getelementptr inbounds %struct.GPR, %struct.GPR* %7052, i32 0, i32 33
  %7054 = getelementptr inbounds %struct.Reg, %struct.Reg* %7053, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %7054 to i64*
  %7055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7056 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7055, i64 0, i64 1
  %YMM1.i345 = bitcast %union.VectorReg* %7056 to %"class.std::bitset"*
  %7057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7058 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7057, i64 0, i64 0
  %XMM0.i346 = bitcast %union.VectorReg* %7058 to %union.vec128_t*
  %7059 = bitcast %"class.std::bitset"* %YMM1.i345 to i8*
  %7060 = bitcast %"class.std::bitset"* %YMM1.i345 to i8*
  %7061 = bitcast %union.vec128_t* %XMM0.i346 to i8*
  %7062 = load i64, i64* %PC.i344
  %7063 = add i64 %7062, 4
  store i64 %7063, i64* %PC.i344
  %7064 = bitcast i8* %7060 to double*
  %7065 = load double, double* %7064, align 1
  %7066 = getelementptr inbounds i8, i8* %7060, i64 8
  %7067 = bitcast i8* %7066 to i64*
  %7068 = load i64, i64* %7067, align 1
  %7069 = bitcast i8* %7061 to double*
  %7070 = load double, double* %7069, align 1
  %7071 = fsub double %7065, %7070
  %7072 = bitcast i8* %7059 to double*
  store double %7071, double* %7072, align 1
  %7073 = getelementptr inbounds i8, i8* %7059, i64 8
  %7074 = bitcast i8* %7073 to i64*
  store i64 %7068, i64* %7074, align 1
  store %struct.Memory* %loadMem_4011e7, %struct.Memory** %MEMORY
  %loadMem_4011eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7076 = getelementptr inbounds %struct.GPR, %struct.GPR* %7075, i32 0, i32 33
  %7077 = getelementptr inbounds %struct.Reg, %struct.Reg* %7076, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %7077 to i64*
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7079 = getelementptr inbounds %struct.GPR, %struct.GPR* %7078, i32 0, i32 15
  %7080 = getelementptr inbounds %struct.Reg, %struct.Reg* %7079, i32 0, i32 0
  %RBP.i342 = bitcast %union.anon* %7080 to i64*
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7082 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7081, i64 0, i64 2
  %YMM2.i343 = bitcast %union.VectorReg* %7082 to %"class.std::bitset"*
  %7083 = bitcast %"class.std::bitset"* %YMM2.i343 to i8*
  %7084 = load i64, i64* %RBP.i342
  %7085 = sub i64 %7084, 304
  %7086 = load i64, i64* %PC.i341
  %7087 = add i64 %7086, 8
  store i64 %7087, i64* %PC.i341
  %7088 = inttoptr i64 %7085 to double*
  %7089 = load double, double* %7088
  %7090 = bitcast i8* %7083 to double*
  store double %7089, double* %7090, align 1
  %7091 = getelementptr inbounds i8, i8* %7083, i64 8
  %7092 = bitcast i8* %7091 to double*
  store double 0.000000e+00, double* %7092, align 1
  store %struct.Memory* %loadMem_4011eb, %struct.Memory** %MEMORY
  %loadMem_4011f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7094 = getelementptr inbounds %struct.GPR, %struct.GPR* %7093, i32 0, i32 33
  %7095 = getelementptr inbounds %struct.Reg, %struct.Reg* %7094, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %7095 to i64*
  %7096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7097 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7096, i64 0, i64 2
  %YMM2.i339 = bitcast %union.VectorReg* %7097 to %"class.std::bitset"*
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7099 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7098, i64 0, i64 1
  %XMM1.i340 = bitcast %union.VectorReg* %7099 to %union.vec128_t*
  %7100 = bitcast %"class.std::bitset"* %YMM2.i339 to i8*
  %7101 = bitcast %"class.std::bitset"* %YMM2.i339 to i8*
  %7102 = bitcast %union.vec128_t* %XMM1.i340 to i8*
  %7103 = load i64, i64* %PC.i338
  %7104 = add i64 %7103, 4
  store i64 %7104, i64* %PC.i338
  %7105 = bitcast i8* %7101 to double*
  %7106 = load double, double* %7105, align 1
  %7107 = getelementptr inbounds i8, i8* %7101, i64 8
  %7108 = bitcast i8* %7107 to i64*
  %7109 = load i64, i64* %7108, align 1
  %7110 = bitcast i8* %7102 to double*
  %7111 = load double, double* %7110, align 1
  %7112 = fdiv double %7106, %7111
  %7113 = bitcast i8* %7100 to double*
  store double %7112, double* %7113, align 1
  %7114 = getelementptr inbounds i8, i8* %7100, i64 8
  %7115 = bitcast i8* %7114 to i64*
  store i64 %7109, i64* %7115, align 1
  store %struct.Memory* %loadMem_4011f3, %struct.Memory** %MEMORY
  %loadMem_4011f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7117 = getelementptr inbounds %struct.GPR, %struct.GPR* %7116, i32 0, i32 33
  %7118 = getelementptr inbounds %struct.Reg, %struct.Reg* %7117, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %7118 to i64*
  %7119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7120 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7119, i64 0, i64 0
  %YMM0.i336 = bitcast %union.VectorReg* %7120 to %"class.std::bitset"*
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7122 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7121, i64 0, i64 2
  %XMM2.i337 = bitcast %union.VectorReg* %7122 to %union.vec128_t*
  %7123 = bitcast %"class.std::bitset"* %YMM0.i336 to i8*
  %7124 = bitcast %union.vec128_t* %XMM2.i337 to i8*
  %7125 = load i64, i64* %PC.i335
  %7126 = add i64 %7125, 3
  store i64 %7126, i64* %PC.i335
  %7127 = bitcast i8* %7124 to <2 x i32>*
  %7128 = load <2 x i32>, <2 x i32>* %7127, align 1
  %7129 = getelementptr inbounds i8, i8* %7124, i64 8
  %7130 = bitcast i8* %7129 to <2 x i32>*
  %7131 = load <2 x i32>, <2 x i32>* %7130, align 1
  %7132 = extractelement <2 x i32> %7128, i32 0
  %7133 = bitcast i8* %7123 to i32*
  store i32 %7132, i32* %7133, align 1
  %7134 = extractelement <2 x i32> %7128, i32 1
  %7135 = getelementptr inbounds i8, i8* %7123, i64 4
  %7136 = bitcast i8* %7135 to i32*
  store i32 %7134, i32* %7136, align 1
  %7137 = extractelement <2 x i32> %7131, i32 0
  %7138 = getelementptr inbounds i8, i8* %7123, i64 8
  %7139 = bitcast i8* %7138 to i32*
  store i32 %7137, i32* %7139, align 1
  %7140 = extractelement <2 x i32> %7131, i32 1
  %7141 = getelementptr inbounds i8, i8* %7123, i64 12
  %7142 = bitcast i8* %7141 to i32*
  store i32 %7140, i32* %7142, align 1
  store %struct.Memory* %loadMem_4011f7, %struct.Memory** %MEMORY
  %loadMem1_4011fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7144 = getelementptr inbounds %struct.GPR, %struct.GPR* %7143, i32 0, i32 33
  %7145 = getelementptr inbounds %struct.Reg, %struct.Reg* %7144, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %7145 to i64*
  %7146 = load i64, i64* %PC.i334
  %7147 = add i64 %7146, -2858
  %7148 = load i64, i64* %PC.i334
  %7149 = add i64 %7148, 5
  %7150 = load i64, i64* %PC.i334
  %7151 = add i64 %7150, 5
  store i64 %7151, i64* %PC.i334
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7153 = load i64, i64* %7152, align 8
  %7154 = add i64 %7153, -8
  %7155 = inttoptr i64 %7154 to i64*
  store i64 %7149, i64* %7155
  store i64 %7154, i64* %7152, align 8
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7147, i64* %7156, align 8
  store %struct.Memory* %loadMem1_4011fa, %struct.Memory** %MEMORY
  %loadMem2_4011fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011fa = load i64, i64* %3
  %call2_4011fa = call %struct.Memory* @sub_4006d0.atan_plt(%struct.State* %0, i64 %loadPC_4011fa, %struct.Memory* %loadMem2_4011fa)
  store %struct.Memory* %call2_4011fa, %struct.Memory** %MEMORY
  %loadMem_4011ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7158 = getelementptr inbounds %struct.GPR, %struct.GPR* %7157, i32 0, i32 33
  %7159 = getelementptr inbounds %struct.Reg, %struct.Reg* %7158, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %7159 to i64*
  %7160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7161 = getelementptr inbounds %struct.GPR, %struct.GPR* %7160, i32 0, i32 15
  %7162 = getelementptr inbounds %struct.Reg, %struct.Reg* %7161, i32 0, i32 0
  %RBP.i332 = bitcast %union.anon* %7162 to i64*
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7164 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7163, i64 0, i64 1
  %YMM1.i333 = bitcast %union.VectorReg* %7164 to %"class.std::bitset"*
  %7165 = bitcast %"class.std::bitset"* %YMM1.i333 to i8*
  %7166 = load i64, i64* %RBP.i332
  %7167 = sub i64 %7166, 272
  %7168 = load i64, i64* %PC.i331
  %7169 = add i64 %7168, 8
  store i64 %7169, i64* %PC.i331
  %7170 = inttoptr i64 %7167 to double*
  %7171 = load double, double* %7170
  %7172 = bitcast i8* %7165 to double*
  store double %7171, double* %7172, align 1
  %7173 = getelementptr inbounds i8, i8* %7165, i64 8
  %7174 = bitcast i8* %7173 to double*
  store double 0.000000e+00, double* %7174, align 1
  store %struct.Memory* %loadMem_4011ff, %struct.Memory** %MEMORY
  %loadMem_401207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7176 = getelementptr inbounds %struct.GPR, %struct.GPR* %7175, i32 0, i32 33
  %7177 = getelementptr inbounds %struct.Reg, %struct.Reg* %7176, i32 0, i32 0
  %PC.i328 = bitcast %union.anon* %7177 to i64*
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7179 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7178, i64 0, i64 1
  %YMM1.i329 = bitcast %union.VectorReg* %7179 to %"class.std::bitset"*
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7181 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7180, i64 0, i64 0
  %XMM0.i330 = bitcast %union.VectorReg* %7181 to %union.vec128_t*
  %7182 = bitcast %"class.std::bitset"* %YMM1.i329 to i8*
  %7183 = bitcast %"class.std::bitset"* %YMM1.i329 to i8*
  %7184 = bitcast %union.vec128_t* %XMM0.i330 to i8*
  %7185 = load i64, i64* %PC.i328
  %7186 = add i64 %7185, 4
  store i64 %7186, i64* %PC.i328
  %7187 = bitcast i8* %7183 to double*
  %7188 = load double, double* %7187, align 1
  %7189 = getelementptr inbounds i8, i8* %7183, i64 8
  %7190 = bitcast i8* %7189 to i64*
  %7191 = load i64, i64* %7190, align 1
  %7192 = bitcast i8* %7184 to double*
  %7193 = load double, double* %7192, align 1
  %7194 = fmul double %7188, %7193
  %7195 = bitcast i8* %7182 to double*
  store double %7194, double* %7195, align 1
  %7196 = getelementptr inbounds i8, i8* %7182, i64 8
  %7197 = bitcast i8* %7196 to i64*
  store i64 %7191, i64* %7197, align 1
  store %struct.Memory* %loadMem_401207, %struct.Memory** %MEMORY
  %loadMem_40120b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7199 = getelementptr inbounds %struct.GPR, %struct.GPR* %7198, i32 0, i32 33
  %7200 = getelementptr inbounds %struct.Reg, %struct.Reg* %7199, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %7200 to i64*
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7202 = getelementptr inbounds %struct.GPR, %struct.GPR* %7201, i32 0, i32 15
  %7203 = getelementptr inbounds %struct.Reg, %struct.Reg* %7202, i32 0, i32 0
  %RBP.i326 = bitcast %union.anon* %7203 to i64*
  %7204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7205 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7204, i64 0, i64 1
  %XMM1.i327 = bitcast %union.VectorReg* %7205 to %union.vec128_t*
  %7206 = load i64, i64* %RBP.i326
  %7207 = sub i64 %7206, 152
  %7208 = bitcast %union.vec128_t* %XMM1.i327 to i8*
  %7209 = load i64, i64* %PC.i325
  %7210 = add i64 %7209, 8
  store i64 %7210, i64* %PC.i325
  %7211 = bitcast i8* %7208 to double*
  %7212 = load double, double* %7211, align 1
  %7213 = inttoptr i64 %7207 to double*
  store double %7212, double* %7213
  store %struct.Memory* %loadMem_40120b, %struct.Memory** %MEMORY
  %loadMem_401213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7215 = getelementptr inbounds %struct.GPR, %struct.GPR* %7214, i32 0, i32 33
  %7216 = getelementptr inbounds %struct.Reg, %struct.Reg* %7215, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %7216 to i64*
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7218 = getelementptr inbounds %struct.GPR, %struct.GPR* %7217, i32 0, i32 1
  %7219 = getelementptr inbounds %struct.Reg, %struct.Reg* %7218, i32 0, i32 0
  %RAX.i323 = bitcast %union.anon* %7219 to i64*
  %7220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7221 = getelementptr inbounds %struct.GPR, %struct.GPR* %7220, i32 0, i32 15
  %7222 = getelementptr inbounds %struct.Reg, %struct.Reg* %7221, i32 0, i32 0
  %RBP.i324 = bitcast %union.anon* %7222 to i64*
  %7223 = load i64, i64* %RBP.i324
  %7224 = sub i64 %7223, 24
  %7225 = load i64, i64* %PC.i322
  %7226 = add i64 %7225, 4
  store i64 %7226, i64* %PC.i322
  %7227 = inttoptr i64 %7224 to i64*
  %7228 = load i64, i64* %7227
  store i64 %7228, i64* %RAX.i323, align 8
  store %struct.Memory* %loadMem_401213, %struct.Memory** %MEMORY
  %loadMem_401217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7230 = getelementptr inbounds %struct.GPR, %struct.GPR* %7229, i32 0, i32 33
  %7231 = getelementptr inbounds %struct.Reg, %struct.Reg* %7230, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %7231 to i64*
  %7232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7233 = getelementptr inbounds %struct.GPR, %struct.GPR* %7232, i32 0, i32 1
  %7234 = getelementptr inbounds %struct.Reg, %struct.Reg* %7233, i32 0, i32 0
  %RAX.i321 = bitcast %union.anon* %7234 to i64*
  %7235 = load i64, i64* %RAX.i321
  %7236 = load i64, i64* %PC.i320
  %7237 = add i64 %7236, 4
  store i64 %7237, i64* %PC.i320
  %7238 = add i64 1, %7235
  store i64 %7238, i64* %RAX.i321, align 8
  %7239 = icmp ult i64 %7238, %7235
  %7240 = icmp ult i64 %7238, 1
  %7241 = or i1 %7239, %7240
  %7242 = zext i1 %7241 to i8
  %7243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7242, i8* %7243, align 1
  %7244 = trunc i64 %7238 to i32
  %7245 = and i32 %7244, 255
  %7246 = call i32 @llvm.ctpop.i32(i32 %7245)
  %7247 = trunc i32 %7246 to i8
  %7248 = and i8 %7247, 1
  %7249 = xor i8 %7248, 1
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7249, i8* %7250, align 1
  %7251 = xor i64 1, %7235
  %7252 = xor i64 %7251, %7238
  %7253 = lshr i64 %7252, 4
  %7254 = trunc i64 %7253 to i8
  %7255 = and i8 %7254, 1
  %7256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7255, i8* %7256, align 1
  %7257 = icmp eq i64 %7238, 0
  %7258 = zext i1 %7257 to i8
  %7259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7258, i8* %7259, align 1
  %7260 = lshr i64 %7238, 63
  %7261 = trunc i64 %7260 to i8
  %7262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7261, i8* %7262, align 1
  %7263 = lshr i64 %7235, 63
  %7264 = xor i64 %7260, %7263
  %7265 = add i64 %7264, %7260
  %7266 = icmp eq i64 %7265, 2
  %7267 = zext i1 %7266 to i8
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7267, i8* %7268, align 1
  store %struct.Memory* %loadMem_401217, %struct.Memory** %MEMORY
  %loadMem_40121b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7270 = getelementptr inbounds %struct.GPR, %struct.GPR* %7269, i32 0, i32 33
  %7271 = getelementptr inbounds %struct.Reg, %struct.Reg* %7270, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %7271 to i64*
  %7272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7273 = getelementptr inbounds %struct.GPR, %struct.GPR* %7272, i32 0, i32 1
  %7274 = getelementptr inbounds %struct.Reg, %struct.Reg* %7273, i32 0, i32 0
  %RAX.i318 = bitcast %union.anon* %7274 to i64*
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7276 = getelementptr inbounds %struct.GPR, %struct.GPR* %7275, i32 0, i32 15
  %7277 = getelementptr inbounds %struct.Reg, %struct.Reg* %7276, i32 0, i32 0
  %RBP.i319 = bitcast %union.anon* %7277 to i64*
  %7278 = load i64, i64* %RBP.i319
  %7279 = sub i64 %7278, 24
  %7280 = load i64, i64* %RAX.i318
  %7281 = load i64, i64* %PC.i317
  %7282 = add i64 %7281, 4
  store i64 %7282, i64* %PC.i317
  %7283 = inttoptr i64 %7279 to i64*
  store i64 %7280, i64* %7283
  store %struct.Memory* %loadMem_40121b, %struct.Memory** %MEMORY
  %loadMem_40121f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 33
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %7286 to i64*
  %7287 = load i64, i64* %PC.i316
  %7288 = add i64 %7287, -498
  %7289 = load i64, i64* %PC.i316
  %7290 = add i64 %7289, 5
  store i64 %7290, i64* %PC.i316
  %7291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7288, i64* %7291, align 8
  store %struct.Memory* %loadMem_40121f, %struct.Memory** %MEMORY
  br label %block_.L_40102d

block_.L_401224:                                  ; preds = %block_.L_40102d
  %loadMem_401224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7293 = getelementptr inbounds %struct.GPR, %struct.GPR* %7292, i32 0, i32 33
  %7294 = getelementptr inbounds %struct.Reg, %struct.Reg* %7293, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %7294 to i64*
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7296 = getelementptr inbounds %struct.GPR, %struct.GPR* %7295, i32 0, i32 1
  %7297 = getelementptr inbounds %struct.Reg, %struct.Reg* %7296, i32 0, i32 0
  %RAX.i314 = bitcast %union.anon* %7297 to i64*
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7299 = getelementptr inbounds %struct.GPR, %struct.GPR* %7298, i32 0, i32 15
  %7300 = getelementptr inbounds %struct.Reg, %struct.Reg* %7299, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %7300 to i64*
  %7301 = load i64, i64* %RBP.i315
  %7302 = sub i64 %7301, 176
  %7303 = load i64, i64* %PC.i313
  %7304 = add i64 %7303, 6
  store i64 %7304, i64* %PC.i313
  %7305 = inttoptr i64 %7302 to i32*
  %7306 = load i32, i32* %7305
  %7307 = zext i32 %7306 to i64
  store i64 %7307, i64* %RAX.i314, align 8
  store %struct.Memory* %loadMem_401224, %struct.Memory** %MEMORY
  %loadMem_40122a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7309 = getelementptr inbounds %struct.GPR, %struct.GPR* %7308, i32 0, i32 33
  %7310 = getelementptr inbounds %struct.Reg, %struct.Reg* %7309, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %7310 to i64*
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7312 = getelementptr inbounds %struct.GPR, %struct.GPR* %7311, i32 0, i32 1
  %7313 = getelementptr inbounds %struct.Reg, %struct.Reg* %7312, i32 0, i32 0
  %EAX.i311 = bitcast %union.anon* %7313 to i32*
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7315 = getelementptr inbounds %struct.GPR, %struct.GPR* %7314, i32 0, i32 15
  %7316 = getelementptr inbounds %struct.Reg, %struct.Reg* %7315, i32 0, i32 0
  %RBP.i312 = bitcast %union.anon* %7316 to i64*
  %7317 = load i32, i32* %EAX.i311
  %7318 = zext i32 %7317 to i64
  %7319 = load i64, i64* %RBP.i312
  %7320 = sub i64 %7319, 172
  %7321 = load i64, i64* %PC.i310
  %7322 = add i64 %7321, 6
  store i64 %7322, i64* %PC.i310
  %7323 = inttoptr i64 %7320 to i32*
  %7324 = load i32, i32* %7323
  %7325 = sub i32 %7317, %7324
  %7326 = icmp ult i32 %7317, %7324
  %7327 = zext i1 %7326 to i8
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7327, i8* %7328, align 1
  %7329 = and i32 %7325, 255
  %7330 = call i32 @llvm.ctpop.i32(i32 %7329)
  %7331 = trunc i32 %7330 to i8
  %7332 = and i8 %7331, 1
  %7333 = xor i8 %7332, 1
  %7334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7333, i8* %7334, align 1
  %7335 = xor i32 %7324, %7317
  %7336 = xor i32 %7335, %7325
  %7337 = lshr i32 %7336, 4
  %7338 = trunc i32 %7337 to i8
  %7339 = and i8 %7338, 1
  %7340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7339, i8* %7340, align 1
  %7341 = icmp eq i32 %7325, 0
  %7342 = zext i1 %7341 to i8
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7342, i8* %7343, align 1
  %7344 = lshr i32 %7325, 31
  %7345 = trunc i32 %7344 to i8
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7345, i8* %7346, align 1
  %7347 = lshr i32 %7317, 31
  %7348 = lshr i32 %7324, 31
  %7349 = xor i32 %7348, %7347
  %7350 = xor i32 %7344, %7347
  %7351 = add i32 %7350, %7349
  %7352 = icmp eq i32 %7351, 2
  %7353 = zext i1 %7352 to i8
  %7354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7353, i8* %7354, align 1
  store %struct.Memory* %loadMem_40122a, %struct.Memory** %MEMORY
  %loadMem_401230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 33
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %7357 to i64*
  %7358 = load i64, i64* %PC.i309
  %7359 = add i64 %7358, 63
  %7360 = load i64, i64* %PC.i309
  %7361 = add i64 %7360, 6
  %7362 = load i64, i64* %PC.i309
  %7363 = add i64 %7362, 6
  store i64 %7363, i64* %PC.i309
  %7364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7365 = load i8, i8* %7364, align 1
  %7366 = icmp eq i8 %7365, 0
  %7367 = zext i1 %7366 to i8
  store i8 %7367, i8* %BRANCH_TAKEN, align 1
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7369 = select i1 %7366, i64 %7359, i64 %7361
  store i64 %7369, i64* %7368, align 8
  store %struct.Memory* %loadMem_401230, %struct.Memory** %MEMORY
  %loadBr_401230 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401230 = icmp eq i8 %loadBr_401230, 1
  br i1 %cmpBr_401230, label %block_.L_40126f, label %block_401236

block_401236:                                     ; preds = %block_.L_401224
  %loadMem_401236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7371 = getelementptr inbounds %struct.GPR, %struct.GPR* %7370, i32 0, i32 33
  %7372 = getelementptr inbounds %struct.Reg, %struct.Reg* %7371, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %7372 to i64*
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7374 = getelementptr inbounds %struct.GPR, %struct.GPR* %7373, i32 0, i32 11
  %7375 = getelementptr inbounds %struct.Reg, %struct.Reg* %7374, i32 0, i32 0
  %RDI.i307 = bitcast %union.anon* %7375 to i64*
  %7376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7377 = getelementptr inbounds %struct.GPR, %struct.GPR* %7376, i32 0, i32 15
  %7378 = getelementptr inbounds %struct.Reg, %struct.Reg* %7377, i32 0, i32 0
  %RBP.i308 = bitcast %union.anon* %7378 to i64*
  %7379 = load i64, i64* %RBP.i308
  %7380 = sub i64 %7379, 72
  %7381 = load i64, i64* %PC.i306
  %7382 = add i64 %7381, 4
  store i64 %7382, i64* %PC.i306
  %7383 = inttoptr i64 %7380 to i64*
  %7384 = load i64, i64* %7383
  store i64 %7384, i64* %RDI.i307, align 8
  store %struct.Memory* %loadMem_401236, %struct.Memory** %MEMORY
  %loadMem_40123a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7386 = getelementptr inbounds %struct.GPR, %struct.GPR* %7385, i32 0, i32 33
  %7387 = getelementptr inbounds %struct.Reg, %struct.Reg* %7386, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %7387 to i64*
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7389 = getelementptr inbounds %struct.GPR, %struct.GPR* %7388, i32 0, i32 9
  %7390 = getelementptr inbounds %struct.Reg, %struct.Reg* %7389, i32 0, i32 0
  %RSI.i305 = bitcast %union.anon* %7390 to i64*
  %7391 = load i64, i64* %PC.i304
  %7392 = add i64 %7391, 8
  store i64 %7392, i64* %PC.i304
  %7393 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %7394 = sext i32 %7393 to i64
  store i64 %7394, i64* %RSI.i305, align 8
  store %struct.Memory* %loadMem_40123a, %struct.Memory** %MEMORY
  %loadMem_401242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7396 = getelementptr inbounds %struct.GPR, %struct.GPR* %7395, i32 0, i32 33
  %7397 = getelementptr inbounds %struct.Reg, %struct.Reg* %7396, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %7397 to i64*
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7399 = getelementptr inbounds %struct.GPR, %struct.GPR* %7398, i32 0, i32 7
  %7400 = getelementptr inbounds %struct.Reg, %struct.Reg* %7399, i32 0, i32 0
  %RDX.i303 = bitcast %union.anon* %7400 to i64*
  %7401 = load i64, i64* %PC.i302
  %7402 = add i64 %7401, 8
  store i64 %7402, i64* %PC.i302
  %7403 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %7404 = sext i32 %7403 to i64
  store i64 %7404, i64* %RDX.i303, align 8
  store %struct.Memory* %loadMem_401242, %struct.Memory** %MEMORY
  %loadMem_40124a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7406 = getelementptr inbounds %struct.GPR, %struct.GPR* %7405, i32 0, i32 33
  %7407 = getelementptr inbounds %struct.Reg, %struct.Reg* %7406, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %7407 to i64*
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7409 = getelementptr inbounds %struct.GPR, %struct.GPR* %7408, i32 0, i32 15
  %7410 = getelementptr inbounds %struct.Reg, %struct.Reg* %7409, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %7410 to i64*
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7412 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7411, i64 0, i64 0
  %YMM0.i301 = bitcast %union.VectorReg* %7412 to %"class.std::bitset"*
  %7413 = bitcast %"class.std::bitset"* %YMM0.i301 to i8*
  %7414 = load i64, i64* %RBP.i300
  %7415 = sub i64 %7414, 144
  %7416 = load i64, i64* %PC.i299
  %7417 = add i64 %7416, 8
  store i64 %7417, i64* %PC.i299
  %7418 = inttoptr i64 %7415 to double*
  %7419 = load double, double* %7418
  %7420 = bitcast i8* %7413 to double*
  store double %7419, double* %7420, align 1
  %7421 = getelementptr inbounds i8, i8* %7413, i64 8
  %7422 = bitcast i8* %7421 to double*
  store double 0.000000e+00, double* %7422, align 1
  store %struct.Memory* %loadMem_40124a, %struct.Memory** %MEMORY
  %loadMem_401252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7424 = getelementptr inbounds %struct.GPR, %struct.GPR* %7423, i32 0, i32 33
  %7425 = getelementptr inbounds %struct.Reg, %struct.Reg* %7424, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %7425 to i64*
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7427 = getelementptr inbounds %struct.GPR, %struct.GPR* %7426, i32 0, i32 15
  %7428 = getelementptr inbounds %struct.Reg, %struct.Reg* %7427, i32 0, i32 0
  %RBP.i297 = bitcast %union.anon* %7428 to i64*
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7430 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7429, i64 0, i64 1
  %YMM1.i298 = bitcast %union.VectorReg* %7430 to %"class.std::bitset"*
  %7431 = bitcast %"class.std::bitset"* %YMM1.i298 to i8*
  %7432 = load i64, i64* %RBP.i297
  %7433 = sub i64 %7432, 144
  %7434 = load i64, i64* %PC.i296
  %7435 = add i64 %7434, 8
  store i64 %7435, i64* %PC.i296
  %7436 = inttoptr i64 %7433 to double*
  %7437 = load double, double* %7436
  %7438 = bitcast i8* %7431 to double*
  store double %7437, double* %7438, align 1
  %7439 = getelementptr inbounds i8, i8* %7431, i64 8
  %7440 = bitcast i8* %7439 to double*
  store double 0.000000e+00, double* %7440, align 1
  store %struct.Memory* %loadMem_401252, %struct.Memory** %MEMORY
  %loadMem_40125a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7442 = getelementptr inbounds %struct.GPR, %struct.GPR* %7441, i32 0, i32 33
  %7443 = getelementptr inbounds %struct.Reg, %struct.Reg* %7442, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %7443 to i64*
  %7444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7445 = getelementptr inbounds %struct.GPR, %struct.GPR* %7444, i32 0, i32 15
  %7446 = getelementptr inbounds %struct.Reg, %struct.Reg* %7445, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %7446 to i64*
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7448 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7447, i64 0, i64 2
  %YMM2.i295 = bitcast %union.VectorReg* %7448 to %"class.std::bitset"*
  %7449 = bitcast %"class.std::bitset"* %YMM2.i295 to i8*
  %7450 = load i64, i64* %RBP.i294
  %7451 = sub i64 %7450, 152
  %7452 = load i64, i64* %PC.i293
  %7453 = add i64 %7452, 8
  store i64 %7453, i64* %PC.i293
  %7454 = inttoptr i64 %7451 to double*
  %7455 = load double, double* %7454
  %7456 = bitcast i8* %7449 to double*
  store double %7455, double* %7456, align 1
  %7457 = getelementptr inbounds i8, i8* %7449, i64 8
  %7458 = bitcast i8* %7457 to double*
  store double 0.000000e+00, double* %7458, align 1
  store %struct.Memory* %loadMem_40125a, %struct.Memory** %MEMORY
  %loadMem_401262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7460 = getelementptr inbounds %struct.GPR, %struct.GPR* %7459, i32 0, i32 33
  %7461 = getelementptr inbounds %struct.Reg, %struct.Reg* %7460, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %7461 to i64*
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7463 = getelementptr inbounds %struct.GPR, %struct.GPR* %7462, i32 0, i32 15
  %7464 = getelementptr inbounds %struct.Reg, %struct.Reg* %7463, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %7464 to i64*
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7466 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7465, i64 0, i64 3
  %YMM3.i292 = bitcast %union.VectorReg* %7466 to %"class.std::bitset"*
  %7467 = bitcast %"class.std::bitset"* %YMM3.i292 to i8*
  %7468 = load i64, i64* %RBP.i291
  %7469 = sub i64 %7468, 152
  %7470 = load i64, i64* %PC.i290
  %7471 = add i64 %7470, 8
  store i64 %7471, i64* %PC.i290
  %7472 = inttoptr i64 %7469 to double*
  %7473 = load double, double* %7472
  %7474 = bitcast i8* %7467 to double*
  store double %7473, double* %7474, align 1
  %7475 = getelementptr inbounds i8, i8* %7467, i64 8
  %7476 = bitcast i8* %7475 to double*
  store double 0.000000e+00, double* %7476, align 1
  store %struct.Memory* %loadMem_401262, %struct.Memory** %MEMORY
  %loadMem1_40126a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7478 = getelementptr inbounds %struct.GPR, %struct.GPR* %7477, i32 0, i32 33
  %7479 = getelementptr inbounds %struct.Reg, %struct.Reg* %7478, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %7479 to i64*
  %7480 = load i64, i64* %PC.i289
  %7481 = add i64 %7480, 886
  %7482 = load i64, i64* %PC.i289
  %7483 = add i64 %7482, 5
  %7484 = load i64, i64* %PC.i289
  %7485 = add i64 %7484, 5
  store i64 %7485, i64* %PC.i289
  %7486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7487 = load i64, i64* %7486, align 8
  %7488 = add i64 %7487, -8
  %7489 = inttoptr i64 %7488 to i64*
  store i64 %7483, i64* %7489
  store i64 %7488, i64* %7486, align 8
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7481, i64* %7490, align 8
  store %struct.Memory* %loadMem1_40126a, %struct.Memory** %MEMORY
  %loadMem2_40126a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40126a = load i64, i64* %3
  %call2_40126a = call %struct.Memory* @sub_4015e0.POUT(%struct.State* %0, i64 %loadPC_40126a, %struct.Memory* %loadMem2_40126a)
  store %struct.Memory* %call2_40126a, %struct.Memory** %MEMORY
  br label %block_.L_40126f

block_.L_40126f:                                  ; preds = %block_401236, %block_.L_401224
  %loadMem_40126f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7492 = getelementptr inbounds %struct.GPR, %struct.GPR* %7491, i32 0, i32 33
  %7493 = getelementptr inbounds %struct.Reg, %struct.Reg* %7492, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %7493 to i64*
  %7494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7495 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7494, i64 0, i64 0
  %YMM0.i288 = bitcast %union.VectorReg* %7495 to %"class.std::bitset"*
  %7496 = bitcast %"class.std::bitset"* %YMM0.i288 to i8*
  %7497 = load i64, i64* %PC.i287
  %7498 = add i64 %7497, 1705
  %7499 = load i64, i64* %PC.i287
  %7500 = add i64 %7499, 8
  store i64 %7500, i64* %PC.i287
  %7501 = inttoptr i64 %7498 to double*
  %7502 = load double, double* %7501
  %7503 = bitcast i8* %7496 to double*
  store double %7502, double* %7503, align 1
  %7504 = getelementptr inbounds i8, i8* %7496, i64 8
  %7505 = bitcast i8* %7504 to double*
  store double 0.000000e+00, double* %7505, align 1
  store %struct.Memory* %loadMem_40126f, %struct.Memory** %MEMORY
  %loadMem_401277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7507 = getelementptr inbounds %struct.GPR, %struct.GPR* %7506, i32 0, i32 33
  %7508 = getelementptr inbounds %struct.Reg, %struct.Reg* %7507, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %7508 to i64*
  %7509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7510 = getelementptr inbounds %struct.GPR, %struct.GPR* %7509, i32 0, i32 15
  %7511 = getelementptr inbounds %struct.Reg, %struct.Reg* %7510, i32 0, i32 0
  %RBP.i285 = bitcast %union.anon* %7511 to i64*
  %7512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7513 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7512, i64 0, i64 0
  %XMM0.i286 = bitcast %union.VectorReg* %7513 to %union.vec128_t*
  %7514 = load i64, i64* %RBP.i285
  %7515 = sub i64 %7514, 144
  %7516 = bitcast %union.vec128_t* %XMM0.i286 to i8*
  %7517 = load i64, i64* %PC.i284
  %7518 = add i64 %7517, 8
  store i64 %7518, i64* %PC.i284
  %7519 = bitcast i8* %7516 to double*
  %7520 = load double, double* %7519, align 1
  %7521 = inttoptr i64 %7515 to double*
  store double %7520, double* %7521
  store %struct.Memory* %loadMem_401277, %struct.Memory** %MEMORY
  %loadMem_40127f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7523 = getelementptr inbounds %struct.GPR, %struct.GPR* %7522, i32 0, i32 33
  %7524 = getelementptr inbounds %struct.Reg, %struct.Reg* %7523, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %7524 to i64*
  %7525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7526 = getelementptr inbounds %struct.GPR, %struct.GPR* %7525, i32 0, i32 15
  %7527 = getelementptr inbounds %struct.Reg, %struct.Reg* %7526, i32 0, i32 0
  %RBP.i282 = bitcast %union.anon* %7527 to i64*
  %7528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7529 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7528, i64 0, i64 0
  %XMM0.i283 = bitcast %union.VectorReg* %7529 to %union.vec128_t*
  %7530 = load i64, i64* %RBP.i282
  %7531 = sub i64 %7530, 152
  %7532 = bitcast %union.vec128_t* %XMM0.i283 to i8*
  %7533 = load i64, i64* %PC.i281
  %7534 = add i64 %7533, 8
  store i64 %7534, i64* %PC.i281
  %7535 = bitcast i8* %7532 to double*
  %7536 = load double, double* %7535, align 1
  %7537 = inttoptr i64 %7531 to double*
  store double %7536, double* %7537
  store %struct.Memory* %loadMem_40127f, %struct.Memory** %MEMORY
  %loadMem_401287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7539 = getelementptr inbounds %struct.GPR, %struct.GPR* %7538, i32 0, i32 33
  %7540 = getelementptr inbounds %struct.Reg, %struct.Reg* %7539, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %7540 to i64*
  %7541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7542 = getelementptr inbounds %struct.GPR, %struct.GPR* %7541, i32 0, i32 15
  %7543 = getelementptr inbounds %struct.Reg, %struct.Reg* %7542, i32 0, i32 0
  %RBP.i279 = bitcast %union.anon* %7543 to i64*
  %7544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7545 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7544, i64 0, i64 0
  %XMM0.i280 = bitcast %union.VectorReg* %7545 to %union.vec128_t*
  %7546 = load i64, i64* %RBP.i279
  %7547 = sub i64 %7546, 160
  %7548 = bitcast %union.vec128_t* %XMM0.i280 to i8*
  %7549 = load i64, i64* %PC.i278
  %7550 = add i64 %7549, 8
  store i64 %7550, i64* %PC.i278
  %7551 = bitcast i8* %7548 to double*
  %7552 = load double, double* %7551, align 1
  %7553 = inttoptr i64 %7547 to double*
  store double %7552, double* %7553
  store %struct.Memory* %loadMem_401287, %struct.Memory** %MEMORY
  %loadMem_40128f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7555 = getelementptr inbounds %struct.GPR, %struct.GPR* %7554, i32 0, i32 33
  %7556 = getelementptr inbounds %struct.Reg, %struct.Reg* %7555, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %7556 to i64*
  %7557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7558 = getelementptr inbounds %struct.GPR, %struct.GPR* %7557, i32 0, i32 15
  %7559 = getelementptr inbounds %struct.Reg, %struct.Reg* %7558, i32 0, i32 0
  %RBP.i277 = bitcast %union.anon* %7559 to i64*
  %7560 = load i64, i64* %RBP.i277
  %7561 = sub i64 %7560, 24
  %7562 = load i64, i64* %PC.i276
  %7563 = add i64 %7562, 8
  store i64 %7563, i64* %PC.i276
  %7564 = inttoptr i64 %7561 to i64*
  store i64 1, i64* %7564
  store %struct.Memory* %loadMem_40128f, %struct.Memory** %MEMORY
  br label %block_.L_401297

block_.L_401297:                                  ; preds = %block_4012a5, %block_.L_40126f
  %loadMem_401297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7566 = getelementptr inbounds %struct.GPR, %struct.GPR* %7565, i32 0, i32 33
  %7567 = getelementptr inbounds %struct.Reg, %struct.Reg* %7566, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %7567 to i64*
  %7568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7569 = getelementptr inbounds %struct.GPR, %struct.GPR* %7568, i32 0, i32 1
  %7570 = getelementptr inbounds %struct.Reg, %struct.Reg* %7569, i32 0, i32 0
  %RAX.i274 = bitcast %union.anon* %7570 to i64*
  %7571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7572 = getelementptr inbounds %struct.GPR, %struct.GPR* %7571, i32 0, i32 15
  %7573 = getelementptr inbounds %struct.Reg, %struct.Reg* %7572, i32 0, i32 0
  %RBP.i275 = bitcast %union.anon* %7573 to i64*
  %7574 = load i64, i64* %RBP.i275
  %7575 = sub i64 %7574, 24
  %7576 = load i64, i64* %PC.i273
  %7577 = add i64 %7576, 4
  store i64 %7577, i64* %PC.i273
  %7578 = inttoptr i64 %7575 to i64*
  %7579 = load i64, i64* %7578
  store i64 %7579, i64* %RAX.i274, align 8
  store %struct.Memory* %loadMem_401297, %struct.Memory** %MEMORY
  %loadMem_40129b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7581 = getelementptr inbounds %struct.GPR, %struct.GPR* %7580, i32 0, i32 33
  %7582 = getelementptr inbounds %struct.Reg, %struct.Reg* %7581, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %7582 to i64*
  %7583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7584 = getelementptr inbounds %struct.GPR, %struct.GPR* %7583, i32 0, i32 1
  %7585 = getelementptr inbounds %struct.Reg, %struct.Reg* %7584, i32 0, i32 0
  %RAX.i271 = bitcast %union.anon* %7585 to i64*
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7587 = getelementptr inbounds %struct.GPR, %struct.GPR* %7586, i32 0, i32 15
  %7588 = getelementptr inbounds %struct.Reg, %struct.Reg* %7587, i32 0, i32 0
  %RBP.i272 = bitcast %union.anon* %7588 to i64*
  %7589 = load i64, i64* %RAX.i271
  %7590 = load i64, i64* %RBP.i272
  %7591 = sub i64 %7590, 80
  %7592 = load i64, i64* %PC.i270
  %7593 = add i64 %7592, 4
  store i64 %7593, i64* %PC.i270
  %7594 = inttoptr i64 %7591 to i64*
  %7595 = load i64, i64* %7594
  %7596 = sub i64 %7589, %7595
  %7597 = icmp ugt i64 %7595, %7589
  %7598 = zext i1 %7597 to i8
  %7599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7598, i8* %7599, align 1
  %7600 = trunc i64 %7596 to i32
  %7601 = and i32 %7600, 255
  %7602 = call i32 @llvm.ctpop.i32(i32 %7601)
  %7603 = trunc i32 %7602 to i8
  %7604 = and i8 %7603, 1
  %7605 = xor i8 %7604, 1
  %7606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7605, i8* %7606, align 1
  %7607 = xor i64 %7595, %7589
  %7608 = xor i64 %7607, %7596
  %7609 = lshr i64 %7608, 4
  %7610 = trunc i64 %7609 to i8
  %7611 = and i8 %7610, 1
  %7612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7611, i8* %7612, align 1
  %7613 = icmp eq i64 %7596, 0
  %7614 = zext i1 %7613 to i8
  %7615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7614, i8* %7615, align 1
  %7616 = lshr i64 %7596, 63
  %7617 = trunc i64 %7616 to i8
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7617, i8* %7618, align 1
  %7619 = lshr i64 %7589, 63
  %7620 = lshr i64 %7595, 63
  %7621 = xor i64 %7620, %7619
  %7622 = xor i64 %7616, %7619
  %7623 = add i64 %7622, %7621
  %7624 = icmp eq i64 %7623, 2
  %7625 = zext i1 %7624 to i8
  %7626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7625, i8* %7626, align 1
  store %struct.Memory* %loadMem_40129b, %struct.Memory** %MEMORY
  %loadMem_40129f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7628 = getelementptr inbounds %struct.GPR, %struct.GPR* %7627, i32 0, i32 33
  %7629 = getelementptr inbounds %struct.Reg, %struct.Reg* %7628, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %7629 to i64*
  %7630 = load i64, i64* %PC.i269
  %7631 = add i64 %7630, 51
  %7632 = load i64, i64* %PC.i269
  %7633 = add i64 %7632, 6
  %7634 = load i64, i64* %PC.i269
  %7635 = add i64 %7634, 6
  store i64 %7635, i64* %PC.i269
  %7636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7637 = load i8, i8* %7636, align 1
  %7638 = icmp eq i8 %7637, 0
  %7639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7640 = load i8, i8* %7639, align 1
  %7641 = icmp ne i8 %7640, 0
  %7642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7643 = load i8, i8* %7642, align 1
  %7644 = icmp ne i8 %7643, 0
  %7645 = xor i1 %7641, %7644
  %7646 = xor i1 %7645, true
  %7647 = and i1 %7638, %7646
  %7648 = zext i1 %7647 to i8
  store i8 %7648, i8* %BRANCH_TAKEN, align 1
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7650 = select i1 %7647, i64 %7631, i64 %7633
  store i64 %7650, i64* %7649, align 8
  store %struct.Memory* %loadMem_40129f, %struct.Memory** %MEMORY
  %loadBr_40129f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40129f = icmp eq i8 %loadBr_40129f, 1
  br i1 %cmpBr_40129f, label %block_.L_4012d2, label %block_4012a5

block_4012a5:                                     ; preds = %block_.L_401297
  %loadMem_4012a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7652 = getelementptr inbounds %struct.GPR, %struct.GPR* %7651, i32 0, i32 33
  %7653 = getelementptr inbounds %struct.Reg, %struct.Reg* %7652, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %7653 to i64*
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7655 = getelementptr inbounds %struct.GPR, %struct.GPR* %7654, i32 0, i32 11
  %7656 = getelementptr inbounds %struct.Reg, %struct.Reg* %7655, i32 0, i32 0
  %RDI.i267 = bitcast %union.anon* %7656 to i64*
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7658 = getelementptr inbounds %struct.GPR, %struct.GPR* %7657, i32 0, i32 15
  %7659 = getelementptr inbounds %struct.Reg, %struct.Reg* %7658, i32 0, i32 0
  %RBP.i268 = bitcast %union.anon* %7659 to i64*
  %7660 = load i64, i64* %RBP.i268
  %7661 = sub i64 %7660, 160
  %7662 = load i64, i64* %PC.i266
  %7663 = add i64 %7662, 7
  store i64 %7663, i64* %PC.i266
  store i64 %7661, i64* %RDI.i267, align 8
  store %struct.Memory* %loadMem_4012a5, %struct.Memory** %MEMORY
  %loadMem_4012ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7665 = getelementptr inbounds %struct.GPR, %struct.GPR* %7664, i32 0, i32 33
  %7666 = getelementptr inbounds %struct.Reg, %struct.Reg* %7665, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %7666 to i64*
  %7667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7668 = getelementptr inbounds %struct.GPR, %struct.GPR* %7667, i32 0, i32 15
  %7669 = getelementptr inbounds %struct.Reg, %struct.Reg* %7668, i32 0, i32 0
  %RBP.i264 = bitcast %union.anon* %7669 to i64*
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7671 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7670, i64 0, i64 0
  %YMM0.i265 = bitcast %union.VectorReg* %7671 to %"class.std::bitset"*
  %7672 = bitcast %"class.std::bitset"* %YMM0.i265 to i8*
  %7673 = load i64, i64* %RBP.i264
  %7674 = sub i64 %7673, 144
  %7675 = load i64, i64* %PC.i263
  %7676 = add i64 %7675, 8
  store i64 %7676, i64* %PC.i263
  %7677 = inttoptr i64 %7674 to double*
  %7678 = load double, double* %7677
  %7679 = bitcast i8* %7672 to double*
  store double %7678, double* %7679, align 1
  %7680 = getelementptr inbounds i8, i8* %7672, i64 8
  %7681 = bitcast i8* %7680 to double*
  store double 0.000000e+00, double* %7681, align 1
  store %struct.Memory* %loadMem_4012ac, %struct.Memory** %MEMORY
  %loadMem_4012b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7683 = getelementptr inbounds %struct.GPR, %struct.GPR* %7682, i32 0, i32 33
  %7684 = getelementptr inbounds %struct.Reg, %struct.Reg* %7683, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %7684 to i64*
  %7685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7686 = getelementptr inbounds %struct.GPR, %struct.GPR* %7685, i32 0, i32 15
  %7687 = getelementptr inbounds %struct.Reg, %struct.Reg* %7686, i32 0, i32 0
  %RBP.i261 = bitcast %union.anon* %7687 to i64*
  %7688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7689 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7688, i64 0, i64 1
  %YMM1.i262 = bitcast %union.VectorReg* %7689 to %"class.std::bitset"*
  %7690 = bitcast %"class.std::bitset"* %YMM1.i262 to i8*
  %7691 = load i64, i64* %RBP.i261
  %7692 = sub i64 %7691, 152
  %7693 = load i64, i64* %PC.i260
  %7694 = add i64 %7693, 8
  store i64 %7694, i64* %PC.i260
  %7695 = inttoptr i64 %7692 to double*
  %7696 = load double, double* %7695
  %7697 = bitcast i8* %7690 to double*
  store double %7696, double* %7697, align 1
  %7698 = getelementptr inbounds i8, i8* %7690, i64 8
  %7699 = bitcast i8* %7698 to double*
  store double 0.000000e+00, double* %7699, align 1
  store %struct.Memory* %loadMem_4012b4, %struct.Memory** %MEMORY
  %loadMem1_4012bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7701 = getelementptr inbounds %struct.GPR, %struct.GPR* %7700, i32 0, i32 33
  %7702 = getelementptr inbounds %struct.Reg, %struct.Reg* %7701, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %7702 to i64*
  %7703 = load i64, i64* %PC.i259
  %7704 = add i64 %7703, 1220
  %7705 = load i64, i64* %PC.i259
  %7706 = add i64 %7705, 5
  %7707 = load i64, i64* %PC.i259
  %7708 = add i64 %7707, 5
  store i64 %7708, i64* %PC.i259
  %7709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7710 = load i64, i64* %7709, align 8
  %7711 = add i64 %7710, -8
  %7712 = inttoptr i64 %7711 to i64*
  store i64 %7706, i64* %7712
  store i64 %7711, i64* %7709, align 8
  %7713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7704, i64* %7713, align 8
  store %struct.Memory* %loadMem1_4012bc, %struct.Memory** %MEMORY
  %loadMem2_4012bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4012bc = load i64, i64* %3
  %call2_4012bc = call %struct.Memory* @sub_401780.P3(%struct.State* %0, i64 %loadPC_4012bc, %struct.Memory* %loadMem2_4012bc)
  store %struct.Memory* %call2_4012bc, %struct.Memory** %MEMORY
  %loadMem_4012c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7715 = getelementptr inbounds %struct.GPR, %struct.GPR* %7714, i32 0, i32 33
  %7716 = getelementptr inbounds %struct.Reg, %struct.Reg* %7715, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %7716 to i64*
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7718 = getelementptr inbounds %struct.GPR, %struct.GPR* %7717, i32 0, i32 1
  %7719 = getelementptr inbounds %struct.Reg, %struct.Reg* %7718, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %7719 to i64*
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7721 = getelementptr inbounds %struct.GPR, %struct.GPR* %7720, i32 0, i32 15
  %7722 = getelementptr inbounds %struct.Reg, %struct.Reg* %7721, i32 0, i32 0
  %RBP.i258 = bitcast %union.anon* %7722 to i64*
  %7723 = load i64, i64* %RBP.i258
  %7724 = sub i64 %7723, 24
  %7725 = load i64, i64* %PC.i256
  %7726 = add i64 %7725, 4
  store i64 %7726, i64* %PC.i256
  %7727 = inttoptr i64 %7724 to i64*
  %7728 = load i64, i64* %7727
  store i64 %7728, i64* %RAX.i257, align 8
  store %struct.Memory* %loadMem_4012c1, %struct.Memory** %MEMORY
  %loadMem_4012c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7730 = getelementptr inbounds %struct.GPR, %struct.GPR* %7729, i32 0, i32 33
  %7731 = getelementptr inbounds %struct.Reg, %struct.Reg* %7730, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %7731 to i64*
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7733 = getelementptr inbounds %struct.GPR, %struct.GPR* %7732, i32 0, i32 1
  %7734 = getelementptr inbounds %struct.Reg, %struct.Reg* %7733, i32 0, i32 0
  %RAX.i255 = bitcast %union.anon* %7734 to i64*
  %7735 = load i64, i64* %RAX.i255
  %7736 = load i64, i64* %PC.i254
  %7737 = add i64 %7736, 4
  store i64 %7737, i64* %PC.i254
  %7738 = add i64 1, %7735
  store i64 %7738, i64* %RAX.i255, align 8
  %7739 = icmp ult i64 %7738, %7735
  %7740 = icmp ult i64 %7738, 1
  %7741 = or i1 %7739, %7740
  %7742 = zext i1 %7741 to i8
  %7743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7742, i8* %7743, align 1
  %7744 = trunc i64 %7738 to i32
  %7745 = and i32 %7744, 255
  %7746 = call i32 @llvm.ctpop.i32(i32 %7745)
  %7747 = trunc i32 %7746 to i8
  %7748 = and i8 %7747, 1
  %7749 = xor i8 %7748, 1
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7749, i8* %7750, align 1
  %7751 = xor i64 1, %7735
  %7752 = xor i64 %7751, %7738
  %7753 = lshr i64 %7752, 4
  %7754 = trunc i64 %7753 to i8
  %7755 = and i8 %7754, 1
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7755, i8* %7756, align 1
  %7757 = icmp eq i64 %7738, 0
  %7758 = zext i1 %7757 to i8
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7758, i8* %7759, align 1
  %7760 = lshr i64 %7738, 63
  %7761 = trunc i64 %7760 to i8
  %7762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7761, i8* %7762, align 1
  %7763 = lshr i64 %7735, 63
  %7764 = xor i64 %7760, %7763
  %7765 = add i64 %7764, %7760
  %7766 = icmp eq i64 %7765, 2
  %7767 = zext i1 %7766 to i8
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7767, i8* %7768, align 1
  store %struct.Memory* %loadMem_4012c5, %struct.Memory** %MEMORY
  %loadMem_4012c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7770 = getelementptr inbounds %struct.GPR, %struct.GPR* %7769, i32 0, i32 33
  %7771 = getelementptr inbounds %struct.Reg, %struct.Reg* %7770, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %7771 to i64*
  %7772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7773 = getelementptr inbounds %struct.GPR, %struct.GPR* %7772, i32 0, i32 1
  %7774 = getelementptr inbounds %struct.Reg, %struct.Reg* %7773, i32 0, i32 0
  %RAX.i252 = bitcast %union.anon* %7774 to i64*
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7776 = getelementptr inbounds %struct.GPR, %struct.GPR* %7775, i32 0, i32 15
  %7777 = getelementptr inbounds %struct.Reg, %struct.Reg* %7776, i32 0, i32 0
  %RBP.i253 = bitcast %union.anon* %7777 to i64*
  %7778 = load i64, i64* %RBP.i253
  %7779 = sub i64 %7778, 24
  %7780 = load i64, i64* %RAX.i252
  %7781 = load i64, i64* %PC.i251
  %7782 = add i64 %7781, 4
  store i64 %7782, i64* %PC.i251
  %7783 = inttoptr i64 %7779 to i64*
  store i64 %7780, i64* %7783
  store %struct.Memory* %loadMem_4012c9, %struct.Memory** %MEMORY
  %loadMem_4012cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7785 = getelementptr inbounds %struct.GPR, %struct.GPR* %7784, i32 0, i32 33
  %7786 = getelementptr inbounds %struct.Reg, %struct.Reg* %7785, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %7786 to i64*
  %7787 = load i64, i64* %PC.i250
  %7788 = add i64 %7787, -54
  %7789 = load i64, i64* %PC.i250
  %7790 = add i64 %7789, 5
  store i64 %7790, i64* %PC.i250
  %7791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7788, i64* %7791, align 8
  store %struct.Memory* %loadMem_4012cd, %struct.Memory** %MEMORY
  br label %block_.L_401297

block_.L_4012d2:                                  ; preds = %block_.L_401297
  %loadMem_4012d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7793 = getelementptr inbounds %struct.GPR, %struct.GPR* %7792, i32 0, i32 33
  %7794 = getelementptr inbounds %struct.Reg, %struct.Reg* %7793, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %7794 to i64*
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7796 = getelementptr inbounds %struct.GPR, %struct.GPR* %7795, i32 0, i32 1
  %7797 = getelementptr inbounds %struct.Reg, %struct.Reg* %7796, i32 0, i32 0
  %RAX.i248 = bitcast %union.anon* %7797 to i64*
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7799 = getelementptr inbounds %struct.GPR, %struct.GPR* %7798, i32 0, i32 15
  %7800 = getelementptr inbounds %struct.Reg, %struct.Reg* %7799, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %7800 to i64*
  %7801 = load i64, i64* %RBP.i249
  %7802 = sub i64 %7801, 176
  %7803 = load i64, i64* %PC.i247
  %7804 = add i64 %7803, 6
  store i64 %7804, i64* %PC.i247
  %7805 = inttoptr i64 %7802 to i32*
  %7806 = load i32, i32* %7805
  %7807 = zext i32 %7806 to i64
  store i64 %7807, i64* %RAX.i248, align 8
  store %struct.Memory* %loadMem_4012d2, %struct.Memory** %MEMORY
  %loadMem_4012d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7809 = getelementptr inbounds %struct.GPR, %struct.GPR* %7808, i32 0, i32 33
  %7810 = getelementptr inbounds %struct.Reg, %struct.Reg* %7809, i32 0, i32 0
  %PC.i244 = bitcast %union.anon* %7810 to i64*
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7812 = getelementptr inbounds %struct.GPR, %struct.GPR* %7811, i32 0, i32 1
  %7813 = getelementptr inbounds %struct.Reg, %struct.Reg* %7812, i32 0, i32 0
  %EAX.i245 = bitcast %union.anon* %7813 to i32*
  %7814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7815 = getelementptr inbounds %struct.GPR, %struct.GPR* %7814, i32 0, i32 15
  %7816 = getelementptr inbounds %struct.Reg, %struct.Reg* %7815, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %7816 to i64*
  %7817 = load i32, i32* %EAX.i245
  %7818 = zext i32 %7817 to i64
  %7819 = load i64, i64* %RBP.i246
  %7820 = sub i64 %7819, 172
  %7821 = load i64, i64* %PC.i244
  %7822 = add i64 %7821, 6
  store i64 %7822, i64* %PC.i244
  %7823 = inttoptr i64 %7820 to i32*
  %7824 = load i32, i32* %7823
  %7825 = sub i32 %7817, %7824
  %7826 = icmp ult i32 %7817, %7824
  %7827 = zext i1 %7826 to i8
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7827, i8* %7828, align 1
  %7829 = and i32 %7825, 255
  %7830 = call i32 @llvm.ctpop.i32(i32 %7829)
  %7831 = trunc i32 %7830 to i8
  %7832 = and i8 %7831, 1
  %7833 = xor i8 %7832, 1
  %7834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7833, i8* %7834, align 1
  %7835 = xor i32 %7824, %7817
  %7836 = xor i32 %7835, %7825
  %7837 = lshr i32 %7836, 4
  %7838 = trunc i32 %7837 to i8
  %7839 = and i8 %7838, 1
  %7840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7839, i8* %7840, align 1
  %7841 = icmp eq i32 %7825, 0
  %7842 = zext i1 %7841 to i8
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7842, i8* %7843, align 1
  %7844 = lshr i32 %7825, 31
  %7845 = trunc i32 %7844 to i8
  %7846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7845, i8* %7846, align 1
  %7847 = lshr i32 %7817, 31
  %7848 = lshr i32 %7824, 31
  %7849 = xor i32 %7848, %7847
  %7850 = xor i32 %7844, %7847
  %7851 = add i32 %7850, %7849
  %7852 = icmp eq i32 %7851, 2
  %7853 = zext i1 %7852 to i8
  %7854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7853, i8* %7854, align 1
  store %struct.Memory* %loadMem_4012d8, %struct.Memory** %MEMORY
  %loadMem_4012de = load %struct.Memory*, %struct.Memory** %MEMORY
  %7855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7856 = getelementptr inbounds %struct.GPR, %struct.GPR* %7855, i32 0, i32 33
  %7857 = getelementptr inbounds %struct.Reg, %struct.Reg* %7856, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %7857 to i64*
  %7858 = load i64, i64* %PC.i243
  %7859 = add i64 %7858, 63
  %7860 = load i64, i64* %PC.i243
  %7861 = add i64 %7860, 6
  %7862 = load i64, i64* %PC.i243
  %7863 = add i64 %7862, 6
  store i64 %7863, i64* %PC.i243
  %7864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7865 = load i8, i8* %7864, align 1
  %7866 = icmp eq i8 %7865, 0
  %7867 = zext i1 %7866 to i8
  store i8 %7867, i8* %BRANCH_TAKEN, align 1
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7869 = select i1 %7866, i64 %7859, i64 %7861
  store i64 %7869, i64* %7868, align 8
  store %struct.Memory* %loadMem_4012de, %struct.Memory** %MEMORY
  %loadBr_4012de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4012de = icmp eq i8 %loadBr_4012de, 1
  br i1 %cmpBr_4012de, label %block_.L_40131d, label %block_4012e4

block_4012e4:                                     ; preds = %block_.L_4012d2
  %loadMem_4012e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7871 = getelementptr inbounds %struct.GPR, %struct.GPR* %7870, i32 0, i32 33
  %7872 = getelementptr inbounds %struct.Reg, %struct.Reg* %7871, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %7872 to i64*
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7874 = getelementptr inbounds %struct.GPR, %struct.GPR* %7873, i32 0, i32 11
  %7875 = getelementptr inbounds %struct.Reg, %struct.Reg* %7874, i32 0, i32 0
  %RDI.i241 = bitcast %union.anon* %7875 to i64*
  %7876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7877 = getelementptr inbounds %struct.GPR, %struct.GPR* %7876, i32 0, i32 15
  %7878 = getelementptr inbounds %struct.Reg, %struct.Reg* %7877, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %7878 to i64*
  %7879 = load i64, i64* %RBP.i242
  %7880 = sub i64 %7879, 80
  %7881 = load i64, i64* %PC.i240
  %7882 = add i64 %7881, 4
  store i64 %7882, i64* %PC.i240
  %7883 = inttoptr i64 %7880 to i64*
  %7884 = load i64, i64* %7883
  store i64 %7884, i64* %RDI.i241, align 8
  store %struct.Memory* %loadMem_4012e4, %struct.Memory** %MEMORY
  %loadMem_4012e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7886 = getelementptr inbounds %struct.GPR, %struct.GPR* %7885, i32 0, i32 33
  %7887 = getelementptr inbounds %struct.Reg, %struct.Reg* %7886, i32 0, i32 0
  %PC.i238 = bitcast %union.anon* %7887 to i64*
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7889 = getelementptr inbounds %struct.GPR, %struct.GPR* %7888, i32 0, i32 9
  %7890 = getelementptr inbounds %struct.Reg, %struct.Reg* %7889, i32 0, i32 0
  %RSI.i239 = bitcast %union.anon* %7890 to i64*
  %7891 = load i64, i64* %PC.i238
  %7892 = add i64 %7891, 8
  store i64 %7892, i64* %PC.i238
  %7893 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %7894 = sext i32 %7893 to i64
  store i64 %7894, i64* %RSI.i239, align 8
  store %struct.Memory* %loadMem_4012e8, %struct.Memory** %MEMORY
  %loadMem_4012f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7896 = getelementptr inbounds %struct.GPR, %struct.GPR* %7895, i32 0, i32 33
  %7897 = getelementptr inbounds %struct.Reg, %struct.Reg* %7896, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %7897 to i64*
  %7898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7899 = getelementptr inbounds %struct.GPR, %struct.GPR* %7898, i32 0, i32 7
  %7900 = getelementptr inbounds %struct.Reg, %struct.Reg* %7899, i32 0, i32 0
  %RDX.i237 = bitcast %union.anon* %7900 to i64*
  %7901 = load i64, i64* %PC.i236
  %7902 = add i64 %7901, 8
  store i64 %7902, i64* %PC.i236
  %7903 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %7904 = sext i32 %7903 to i64
  store i64 %7904, i64* %RDX.i237, align 8
  store %struct.Memory* %loadMem_4012f0, %struct.Memory** %MEMORY
  %loadMem_4012f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7906 = getelementptr inbounds %struct.GPR, %struct.GPR* %7905, i32 0, i32 33
  %7907 = getelementptr inbounds %struct.Reg, %struct.Reg* %7906, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %7907 to i64*
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7909 = getelementptr inbounds %struct.GPR, %struct.GPR* %7908, i32 0, i32 15
  %7910 = getelementptr inbounds %struct.Reg, %struct.Reg* %7909, i32 0, i32 0
  %RBP.i234 = bitcast %union.anon* %7910 to i64*
  %7911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7912 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7911, i64 0, i64 0
  %YMM0.i235 = bitcast %union.VectorReg* %7912 to %"class.std::bitset"*
  %7913 = bitcast %"class.std::bitset"* %YMM0.i235 to i8*
  %7914 = load i64, i64* %RBP.i234
  %7915 = sub i64 %7914, 144
  %7916 = load i64, i64* %PC.i233
  %7917 = add i64 %7916, 8
  store i64 %7917, i64* %PC.i233
  %7918 = inttoptr i64 %7915 to double*
  %7919 = load double, double* %7918
  %7920 = bitcast i8* %7913 to double*
  store double %7919, double* %7920, align 1
  %7921 = getelementptr inbounds i8, i8* %7913, i64 8
  %7922 = bitcast i8* %7921 to double*
  store double 0.000000e+00, double* %7922, align 1
  store %struct.Memory* %loadMem_4012f8, %struct.Memory** %MEMORY
  %loadMem_401300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7924 = getelementptr inbounds %struct.GPR, %struct.GPR* %7923, i32 0, i32 33
  %7925 = getelementptr inbounds %struct.Reg, %struct.Reg* %7924, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %7925 to i64*
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 15
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %RBP.i231 = bitcast %union.anon* %7928 to i64*
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7930 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7929, i64 0, i64 1
  %YMM1.i232 = bitcast %union.VectorReg* %7930 to %"class.std::bitset"*
  %7931 = bitcast %"class.std::bitset"* %YMM1.i232 to i8*
  %7932 = load i64, i64* %RBP.i231
  %7933 = sub i64 %7932, 152
  %7934 = load i64, i64* %PC.i230
  %7935 = add i64 %7934, 8
  store i64 %7935, i64* %PC.i230
  %7936 = inttoptr i64 %7933 to double*
  %7937 = load double, double* %7936
  %7938 = bitcast i8* %7931 to double*
  store double %7937, double* %7938, align 1
  %7939 = getelementptr inbounds i8, i8* %7931, i64 8
  %7940 = bitcast i8* %7939 to double*
  store double 0.000000e+00, double* %7940, align 1
  store %struct.Memory* %loadMem_401300, %struct.Memory** %MEMORY
  %loadMem_401308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7942 = getelementptr inbounds %struct.GPR, %struct.GPR* %7941, i32 0, i32 33
  %7943 = getelementptr inbounds %struct.Reg, %struct.Reg* %7942, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %7943 to i64*
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7945 = getelementptr inbounds %struct.GPR, %struct.GPR* %7944, i32 0, i32 15
  %7946 = getelementptr inbounds %struct.Reg, %struct.Reg* %7945, i32 0, i32 0
  %RBP.i228 = bitcast %union.anon* %7946 to i64*
  %7947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7948 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7947, i64 0, i64 2
  %YMM2.i229 = bitcast %union.VectorReg* %7948 to %"class.std::bitset"*
  %7949 = bitcast %"class.std::bitset"* %YMM2.i229 to i8*
  %7950 = load i64, i64* %RBP.i228
  %7951 = sub i64 %7950, 160
  %7952 = load i64, i64* %PC.i227
  %7953 = add i64 %7952, 8
  store i64 %7953, i64* %PC.i227
  %7954 = inttoptr i64 %7951 to double*
  %7955 = load double, double* %7954
  %7956 = bitcast i8* %7949 to double*
  store double %7955, double* %7956, align 1
  %7957 = getelementptr inbounds i8, i8* %7949, i64 8
  %7958 = bitcast i8* %7957 to double*
  store double 0.000000e+00, double* %7958, align 1
  store %struct.Memory* %loadMem_401308, %struct.Memory** %MEMORY
  %loadMem_401310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7960 = getelementptr inbounds %struct.GPR, %struct.GPR* %7959, i32 0, i32 33
  %7961 = getelementptr inbounds %struct.Reg, %struct.Reg* %7960, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %7961 to i64*
  %7962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7963 = getelementptr inbounds %struct.GPR, %struct.GPR* %7962, i32 0, i32 15
  %7964 = getelementptr inbounds %struct.Reg, %struct.Reg* %7963, i32 0, i32 0
  %RBP.i225 = bitcast %union.anon* %7964 to i64*
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7966 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7965, i64 0, i64 3
  %YMM3.i226 = bitcast %union.VectorReg* %7966 to %"class.std::bitset"*
  %7967 = bitcast %"class.std::bitset"* %YMM3.i226 to i8*
  %7968 = load i64, i64* %RBP.i225
  %7969 = sub i64 %7968, 160
  %7970 = load i64, i64* %PC.i224
  %7971 = add i64 %7970, 8
  store i64 %7971, i64* %PC.i224
  %7972 = inttoptr i64 %7969 to double*
  %7973 = load double, double* %7972
  %7974 = bitcast i8* %7967 to double*
  store double %7973, double* %7974, align 1
  %7975 = getelementptr inbounds i8, i8* %7967, i64 8
  %7976 = bitcast i8* %7975 to double*
  store double 0.000000e+00, double* %7976, align 1
  store %struct.Memory* %loadMem_401310, %struct.Memory** %MEMORY
  %loadMem1_401318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7978 = getelementptr inbounds %struct.GPR, %struct.GPR* %7977, i32 0, i32 33
  %7979 = getelementptr inbounds %struct.Reg, %struct.Reg* %7978, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %7979 to i64*
  %7980 = load i64, i64* %PC.i223
  %7981 = add i64 %7980, 712
  %7982 = load i64, i64* %PC.i223
  %7983 = add i64 %7982, 5
  %7984 = load i64, i64* %PC.i223
  %7985 = add i64 %7984, 5
  store i64 %7985, i64* %PC.i223
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7987 = load i64, i64* %7986, align 8
  %7988 = add i64 %7987, -8
  %7989 = inttoptr i64 %7988 to i64*
  store i64 %7983, i64* %7989
  store i64 %7988, i64* %7986, align 8
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7981, i64* %7990, align 8
  store %struct.Memory* %loadMem1_401318, %struct.Memory** %MEMORY
  %loadMem2_401318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401318 = load i64, i64* %3
  %call2_401318 = call %struct.Memory* @sub_4015e0.POUT(%struct.State* %0, i64 %loadPC_401318, %struct.Memory* %loadMem2_401318)
  store %struct.Memory* %call2_401318, %struct.Memory** %MEMORY
  br label %block_.L_40131d

block_.L_40131d:                                  ; preds = %block_4012e4, %block_.L_4012d2
  %loadMem_40131d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7992 = getelementptr inbounds %struct.GPR, %struct.GPR* %7991, i32 0, i32 33
  %7993 = getelementptr inbounds %struct.Reg, %struct.Reg* %7992, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %7993 to i64*
  %7994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7995 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7994, i64 0, i64 0
  %YMM0.i222 = bitcast %union.VectorReg* %7995 to %"class.std::bitset"*
  %7996 = bitcast %"class.std::bitset"* %YMM0.i222 to i8*
  %7997 = load i64, i64* %PC.i221
  %7998 = add i64 %7997, 1547
  %7999 = load i64, i64* %PC.i221
  %8000 = add i64 %7999, 8
  store i64 %8000, i64* %PC.i221
  %8001 = inttoptr i64 %7998 to double*
  %8002 = load double, double* %8001
  %8003 = bitcast i8* %7996 to double*
  store double %8002, double* %8003, align 1
  %8004 = getelementptr inbounds i8, i8* %7996, i64 8
  %8005 = bitcast i8* %8004 to double*
  store double 0.000000e+00, double* %8005, align 1
  store %struct.Memory* %loadMem_40131d, %struct.Memory** %MEMORY
  %loadMem_401325 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8007 = getelementptr inbounds %struct.GPR, %struct.GPR* %8006, i32 0, i32 33
  %8008 = getelementptr inbounds %struct.Reg, %struct.Reg* %8007, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %8008 to i64*
  %8009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8010 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8009, i64 0, i64 1
  %YMM1.i220 = bitcast %union.VectorReg* %8010 to %"class.std::bitset"*
  %8011 = bitcast %"class.std::bitset"* %YMM1.i220 to i8*
  %8012 = load i64, i64* %PC.i219
  %8013 = add i64 %8012, 1491
  %8014 = load i64, i64* %PC.i219
  %8015 = add i64 %8014, 8
  store i64 %8015, i64* %PC.i219
  %8016 = inttoptr i64 %8013 to double*
  %8017 = load double, double* %8016
  %8018 = bitcast i8* %8011 to double*
  store double %8017, double* %8018, align 1
  %8019 = getelementptr inbounds i8, i8* %8011, i64 8
  %8020 = bitcast i8* %8019 to double*
  store double 0.000000e+00, double* %8020, align 1
  store %struct.Memory* %loadMem_401325, %struct.Memory** %MEMORY
  %loadMem_40132d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8022 = getelementptr inbounds %struct.GPR, %struct.GPR* %8021, i32 0, i32 33
  %8023 = getelementptr inbounds %struct.Reg, %struct.Reg* %8022, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %8023 to i64*
  %8024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8025 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8024, i64 0, i64 2
  %YMM2.i218 = bitcast %union.VectorReg* %8025 to %"class.std::bitset"*
  %8026 = bitcast %"class.std::bitset"* %YMM2.i218 to i8*
  %8027 = load i64, i64* %PC.i217
  %8028 = add i64 %8027, 1515
  %8029 = load i64, i64* %PC.i217
  %8030 = add i64 %8029, 8
  store i64 %8030, i64* %PC.i217
  %8031 = inttoptr i64 %8028 to double*
  %8032 = load double, double* %8031
  %8033 = bitcast i8* %8026 to double*
  store double %8032, double* %8033, align 1
  %8034 = getelementptr inbounds i8, i8* %8026, i64 8
  %8035 = bitcast i8* %8034 to double*
  store double 0.000000e+00, double* %8035, align 1
  store %struct.Memory* %loadMem_40132d, %struct.Memory** %MEMORY
  %loadMem_401335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8037 = getelementptr inbounds %struct.GPR, %struct.GPR* %8036, i32 0, i32 33
  %8038 = getelementptr inbounds %struct.Reg, %struct.Reg* %8037, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %8038 to i64*
  %8039 = load i64, i64* %PC.i216
  %8040 = add i64 %8039, 11
  store i64 %8040, i64* %PC.i216
  store i32 1, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_401335, %struct.Memory** %MEMORY
  %loadMem_401340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8042 = getelementptr inbounds %struct.GPR, %struct.GPR* %8041, i32 0, i32 33
  %8043 = getelementptr inbounds %struct.Reg, %struct.Reg* %8042, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %8043 to i64*
  %8044 = load i64, i64* %PC.i215
  %8045 = add i64 %8044, 11
  store i64 %8045, i64* %PC.i215
  store i32 2, i32* inttoptr (i64 6299820 to i32*)
  store %struct.Memory* %loadMem_401340, %struct.Memory** %MEMORY
  %loadMem_40134b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8047 = getelementptr inbounds %struct.GPR, %struct.GPR* %8046, i32 0, i32 33
  %8048 = getelementptr inbounds %struct.Reg, %struct.Reg* %8047, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %8048 to i64*
  %8049 = load i64, i64* %PC.i214
  %8050 = add i64 %8049, 11
  store i64 %8050, i64* %PC.i214
  store i32 3, i32* inttoptr (i64 6299816 to i32*)
  store %struct.Memory* %loadMem_40134b, %struct.Memory** %MEMORY
  %loadMem_401356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8052 = getelementptr inbounds %struct.GPR, %struct.GPR* %8051, i32 0, i32 33
  %8053 = getelementptr inbounds %struct.Reg, %struct.Reg* %8052, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %8053 to i64*
  %8054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8055 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8054, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %8055 to %union.vec128_t*
  %8056 = bitcast %union.vec128_t* %XMM2.i to i8*
  %8057 = load i64, i64* %PC.i213
  %8058 = add i64 %8057, 9
  store i64 %8058, i64* %PC.i213
  %8059 = bitcast i8* %8056 to double*
  %8060 = load double, double* %8059, align 1
  store double %8060, double* inttoptr (i64 6299848 to double*)
  store %struct.Memory* %loadMem_401356, %struct.Memory** %MEMORY
  %loadMem_40135f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8062 = getelementptr inbounds %struct.GPR, %struct.GPR* %8061, i32 0, i32 33
  %8063 = getelementptr inbounds %struct.Reg, %struct.Reg* %8062, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %8063 to i64*
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8065 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8064, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %8065 to %union.vec128_t*
  %8066 = bitcast %union.vec128_t* %XMM1.i to i8*
  %8067 = load i64, i64* %PC.i212
  %8068 = add i64 %8067, 9
  store i64 %8068, i64* %PC.i212
  %8069 = bitcast i8* %8066 to double*
  %8070 = load double, double* %8069, align 1
  store double %8070, double* inttoptr (i64 6299856 to double*)
  store %struct.Memory* %loadMem_40135f, %struct.Memory** %MEMORY
  %loadMem_401368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8072 = getelementptr inbounds %struct.GPR, %struct.GPR* %8071, i32 0, i32 33
  %8073 = getelementptr inbounds %struct.Reg, %struct.Reg* %8072, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %8073 to i64*
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8075 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8074, i64 0, i64 0
  %XMM0.i211 = bitcast %union.VectorReg* %8075 to %union.vec128_t*
  %8076 = bitcast %union.vec128_t* %XMM0.i211 to i8*
  %8077 = load i64, i64* %PC.i210
  %8078 = add i64 %8077, 9
  store i64 %8078, i64* %PC.i210
  %8079 = bitcast i8* %8076 to double*
  %8080 = load double, double* %8079, align 1
  store double %8080, double* inttoptr (i64 6299864 to double*)
  store %struct.Memory* %loadMem_401368, %struct.Memory** %MEMORY
  %loadMem_401371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8082 = getelementptr inbounds %struct.GPR, %struct.GPR* %8081, i32 0, i32 33
  %8083 = getelementptr inbounds %struct.Reg, %struct.Reg* %8082, i32 0, i32 0
  %PC.i208 = bitcast %union.anon* %8083 to i64*
  %8084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8085 = getelementptr inbounds %struct.GPR, %struct.GPR* %8084, i32 0, i32 15
  %8086 = getelementptr inbounds %struct.Reg, %struct.Reg* %8085, i32 0, i32 0
  %RBP.i209 = bitcast %union.anon* %8086 to i64*
  %8087 = load i64, i64* %RBP.i209
  %8088 = sub i64 %8087, 24
  %8089 = load i64, i64* %PC.i208
  %8090 = add i64 %8089, 8
  store i64 %8090, i64* %PC.i208
  %8091 = inttoptr i64 %8088 to i64*
  store i64 1, i64* %8091
  store %struct.Memory* %loadMem_401371, %struct.Memory** %MEMORY
  br label %block_.L_401379

block_.L_401379:                                  ; preds = %block_401387, %block_.L_40131d
  %loadMem_401379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8093 = getelementptr inbounds %struct.GPR, %struct.GPR* %8092, i32 0, i32 33
  %8094 = getelementptr inbounds %struct.Reg, %struct.Reg* %8093, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %8094 to i64*
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8096 = getelementptr inbounds %struct.GPR, %struct.GPR* %8095, i32 0, i32 1
  %8097 = getelementptr inbounds %struct.Reg, %struct.Reg* %8096, i32 0, i32 0
  %RAX.i206 = bitcast %union.anon* %8097 to i64*
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8099 = getelementptr inbounds %struct.GPR, %struct.GPR* %8098, i32 0, i32 15
  %8100 = getelementptr inbounds %struct.Reg, %struct.Reg* %8099, i32 0, i32 0
  %RBP.i207 = bitcast %union.anon* %8100 to i64*
  %8101 = load i64, i64* %RBP.i207
  %8102 = sub i64 %8101, 24
  %8103 = load i64, i64* %PC.i205
  %8104 = add i64 %8103, 4
  store i64 %8104, i64* %PC.i205
  %8105 = inttoptr i64 %8102 to i64*
  %8106 = load i64, i64* %8105
  store i64 %8106, i64* %RAX.i206, align 8
  store %struct.Memory* %loadMem_401379, %struct.Memory** %MEMORY
  %loadMem_40137d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8108 = getelementptr inbounds %struct.GPR, %struct.GPR* %8107, i32 0, i32 33
  %8109 = getelementptr inbounds %struct.Reg, %struct.Reg* %8108, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %8109 to i64*
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8111 = getelementptr inbounds %struct.GPR, %struct.GPR* %8110, i32 0, i32 1
  %8112 = getelementptr inbounds %struct.Reg, %struct.Reg* %8111, i32 0, i32 0
  %RAX.i203 = bitcast %union.anon* %8112 to i64*
  %8113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8114 = getelementptr inbounds %struct.GPR, %struct.GPR* %8113, i32 0, i32 15
  %8115 = getelementptr inbounds %struct.Reg, %struct.Reg* %8114, i32 0, i32 0
  %RBP.i204 = bitcast %union.anon* %8115 to i64*
  %8116 = load i64, i64* %RAX.i203
  %8117 = load i64, i64* %RBP.i204
  %8118 = sub i64 %8117, 88
  %8119 = load i64, i64* %PC.i202
  %8120 = add i64 %8119, 4
  store i64 %8120, i64* %PC.i202
  %8121 = inttoptr i64 %8118 to i64*
  %8122 = load i64, i64* %8121
  %8123 = sub i64 %8116, %8122
  %8124 = icmp ugt i64 %8122, %8116
  %8125 = zext i1 %8124 to i8
  %8126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8125, i8* %8126, align 1
  %8127 = trunc i64 %8123 to i32
  %8128 = and i32 %8127, 255
  %8129 = call i32 @llvm.ctpop.i32(i32 %8128)
  %8130 = trunc i32 %8129 to i8
  %8131 = and i8 %8130, 1
  %8132 = xor i8 %8131, 1
  %8133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8132, i8* %8133, align 1
  %8134 = xor i64 %8122, %8116
  %8135 = xor i64 %8134, %8123
  %8136 = lshr i64 %8135, 4
  %8137 = trunc i64 %8136 to i8
  %8138 = and i8 %8137, 1
  %8139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8138, i8* %8139, align 1
  %8140 = icmp eq i64 %8123, 0
  %8141 = zext i1 %8140 to i8
  %8142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8141, i8* %8142, align 1
  %8143 = lshr i64 %8123, 63
  %8144 = trunc i64 %8143 to i8
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8144, i8* %8145, align 1
  %8146 = lshr i64 %8116, 63
  %8147 = lshr i64 %8122, 63
  %8148 = xor i64 %8147, %8146
  %8149 = xor i64 %8143, %8146
  %8150 = add i64 %8149, %8148
  %8151 = icmp eq i64 %8150, 2
  %8152 = zext i1 %8151 to i8
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8152, i8* %8153, align 1
  store %struct.Memory* %loadMem_40137d, %struct.Memory** %MEMORY
  %loadMem_401381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8155 = getelementptr inbounds %struct.GPR, %struct.GPR* %8154, i32 0, i32 33
  %8156 = getelementptr inbounds %struct.Reg, %struct.Reg* %8155, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %8156 to i64*
  %8157 = load i64, i64* %PC.i201
  %8158 = add i64 %8157, 28
  %8159 = load i64, i64* %PC.i201
  %8160 = add i64 %8159, 6
  %8161 = load i64, i64* %PC.i201
  %8162 = add i64 %8161, 6
  store i64 %8162, i64* %PC.i201
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8164 = load i8, i8* %8163, align 1
  %8165 = icmp eq i8 %8164, 0
  %8166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8167 = load i8, i8* %8166, align 1
  %8168 = icmp ne i8 %8167, 0
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8170 = load i8, i8* %8169, align 1
  %8171 = icmp ne i8 %8170, 0
  %8172 = xor i1 %8168, %8171
  %8173 = xor i1 %8172, true
  %8174 = and i1 %8165, %8173
  %8175 = zext i1 %8174 to i8
  store i8 %8175, i8* %BRANCH_TAKEN, align 1
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8177 = select i1 %8174, i64 %8158, i64 %8160
  store i64 %8177, i64* %8176, align 8
  store %struct.Memory* %loadMem_401381, %struct.Memory** %MEMORY
  %loadBr_401381 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401381 = icmp eq i8 %loadBr_401381, 1
  br i1 %cmpBr_401381, label %block_.L_40139d, label %block_401387

block_401387:                                     ; preds = %block_.L_401379
  %loadMem1_401387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8179 = getelementptr inbounds %struct.GPR, %struct.GPR* %8178, i32 0, i32 33
  %8180 = getelementptr inbounds %struct.Reg, %struct.Reg* %8179, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %8180 to i64*
  %8181 = load i64, i64* %PC.i200
  %8182 = add i64 %8181, 1145
  %8183 = load i64, i64* %PC.i200
  %8184 = add i64 %8183, 5
  %8185 = load i64, i64* %PC.i200
  %8186 = add i64 %8185, 5
  store i64 %8186, i64* %PC.i200
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8188 = load i64, i64* %8187, align 8
  %8189 = add i64 %8188, -8
  %8190 = inttoptr i64 %8189 to i64*
  store i64 %8184, i64* %8190
  store i64 %8189, i64* %8187, align 8
  %8191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8182, i64* %8191, align 8
  store %struct.Memory* %loadMem1_401387, %struct.Memory** %MEMORY
  %loadMem2_401387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401387 = load i64, i64* %3
  %call2_401387 = call %struct.Memory* @sub_401800.P0(%struct.State* %0, i64 %loadPC_401387, %struct.Memory* %loadMem2_401387)
  store %struct.Memory* %call2_401387, %struct.Memory** %MEMORY
  %loadMem_40138c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8193 = getelementptr inbounds %struct.GPR, %struct.GPR* %8192, i32 0, i32 33
  %8194 = getelementptr inbounds %struct.Reg, %struct.Reg* %8193, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %8194 to i64*
  %8195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8196 = getelementptr inbounds %struct.GPR, %struct.GPR* %8195, i32 0, i32 1
  %8197 = getelementptr inbounds %struct.Reg, %struct.Reg* %8196, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %8197 to i64*
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8199 = getelementptr inbounds %struct.GPR, %struct.GPR* %8198, i32 0, i32 15
  %8200 = getelementptr inbounds %struct.Reg, %struct.Reg* %8199, i32 0, i32 0
  %RBP.i199 = bitcast %union.anon* %8200 to i64*
  %8201 = load i64, i64* %RBP.i199
  %8202 = sub i64 %8201, 24
  %8203 = load i64, i64* %PC.i197
  %8204 = add i64 %8203, 4
  store i64 %8204, i64* %PC.i197
  %8205 = inttoptr i64 %8202 to i64*
  %8206 = load i64, i64* %8205
  store i64 %8206, i64* %RAX.i198, align 8
  store %struct.Memory* %loadMem_40138c, %struct.Memory** %MEMORY
  %loadMem_401390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8208 = getelementptr inbounds %struct.GPR, %struct.GPR* %8207, i32 0, i32 33
  %8209 = getelementptr inbounds %struct.Reg, %struct.Reg* %8208, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %8209 to i64*
  %8210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8211 = getelementptr inbounds %struct.GPR, %struct.GPR* %8210, i32 0, i32 1
  %8212 = getelementptr inbounds %struct.Reg, %struct.Reg* %8211, i32 0, i32 0
  %RAX.i196 = bitcast %union.anon* %8212 to i64*
  %8213 = load i64, i64* %RAX.i196
  %8214 = load i64, i64* %PC.i195
  %8215 = add i64 %8214, 4
  store i64 %8215, i64* %PC.i195
  %8216 = add i64 1, %8213
  store i64 %8216, i64* %RAX.i196, align 8
  %8217 = icmp ult i64 %8216, %8213
  %8218 = icmp ult i64 %8216, 1
  %8219 = or i1 %8217, %8218
  %8220 = zext i1 %8219 to i8
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8220, i8* %8221, align 1
  %8222 = trunc i64 %8216 to i32
  %8223 = and i32 %8222, 255
  %8224 = call i32 @llvm.ctpop.i32(i32 %8223)
  %8225 = trunc i32 %8224 to i8
  %8226 = and i8 %8225, 1
  %8227 = xor i8 %8226, 1
  %8228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8227, i8* %8228, align 1
  %8229 = xor i64 1, %8213
  %8230 = xor i64 %8229, %8216
  %8231 = lshr i64 %8230, 4
  %8232 = trunc i64 %8231 to i8
  %8233 = and i8 %8232, 1
  %8234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8233, i8* %8234, align 1
  %8235 = icmp eq i64 %8216, 0
  %8236 = zext i1 %8235 to i8
  %8237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8236, i8* %8237, align 1
  %8238 = lshr i64 %8216, 63
  %8239 = trunc i64 %8238 to i8
  %8240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8239, i8* %8240, align 1
  %8241 = lshr i64 %8213, 63
  %8242 = xor i64 %8238, %8241
  %8243 = add i64 %8242, %8238
  %8244 = icmp eq i64 %8243, 2
  %8245 = zext i1 %8244 to i8
  %8246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8245, i8* %8246, align 1
  store %struct.Memory* %loadMem_401390, %struct.Memory** %MEMORY
  %loadMem_401394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8248 = getelementptr inbounds %struct.GPR, %struct.GPR* %8247, i32 0, i32 33
  %8249 = getelementptr inbounds %struct.Reg, %struct.Reg* %8248, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %8249 to i64*
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8251 = getelementptr inbounds %struct.GPR, %struct.GPR* %8250, i32 0, i32 1
  %8252 = getelementptr inbounds %struct.Reg, %struct.Reg* %8251, i32 0, i32 0
  %RAX.i193 = bitcast %union.anon* %8252 to i64*
  %8253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8254 = getelementptr inbounds %struct.GPR, %struct.GPR* %8253, i32 0, i32 15
  %8255 = getelementptr inbounds %struct.Reg, %struct.Reg* %8254, i32 0, i32 0
  %RBP.i194 = bitcast %union.anon* %8255 to i64*
  %8256 = load i64, i64* %RBP.i194
  %8257 = sub i64 %8256, 24
  %8258 = load i64, i64* %RAX.i193
  %8259 = load i64, i64* %PC.i192
  %8260 = add i64 %8259, 4
  store i64 %8260, i64* %PC.i192
  %8261 = inttoptr i64 %8257 to i64*
  store i64 %8258, i64* %8261
  store %struct.Memory* %loadMem_401394, %struct.Memory** %MEMORY
  %loadMem_401398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8263 = getelementptr inbounds %struct.GPR, %struct.GPR* %8262, i32 0, i32 33
  %8264 = getelementptr inbounds %struct.Reg, %struct.Reg* %8263, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %8264 to i64*
  %8265 = load i64, i64* %PC.i191
  %8266 = add i64 %8265, -31
  %8267 = load i64, i64* %PC.i191
  %8268 = add i64 %8267, 5
  store i64 %8268, i64* %PC.i191
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8266, i64* %8269, align 8
  store %struct.Memory* %loadMem_401398, %struct.Memory** %MEMORY
  br label %block_.L_401379

block_.L_40139d:                                  ; preds = %block_.L_401379
  %loadMem_40139d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8271 = getelementptr inbounds %struct.GPR, %struct.GPR* %8270, i32 0, i32 33
  %8272 = getelementptr inbounds %struct.Reg, %struct.Reg* %8271, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %8272 to i64*
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8274 = getelementptr inbounds %struct.GPR, %struct.GPR* %8273, i32 0, i32 1
  %8275 = getelementptr inbounds %struct.Reg, %struct.Reg* %8274, i32 0, i32 0
  %RAX.i189 = bitcast %union.anon* %8275 to i64*
  %8276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8277 = getelementptr inbounds %struct.GPR, %struct.GPR* %8276, i32 0, i32 15
  %8278 = getelementptr inbounds %struct.Reg, %struct.Reg* %8277, i32 0, i32 0
  %RBP.i190 = bitcast %union.anon* %8278 to i64*
  %8279 = load i64, i64* %RBP.i190
  %8280 = sub i64 %8279, 176
  %8281 = load i64, i64* %PC.i188
  %8282 = add i64 %8281, 6
  store i64 %8282, i64* %PC.i188
  %8283 = inttoptr i64 %8280 to i32*
  %8284 = load i32, i32* %8283
  %8285 = zext i32 %8284 to i64
  store i64 %8285, i64* %RAX.i189, align 8
  store %struct.Memory* %loadMem_40139d, %struct.Memory** %MEMORY
  %loadMem_4013a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8287 = getelementptr inbounds %struct.GPR, %struct.GPR* %8286, i32 0, i32 33
  %8288 = getelementptr inbounds %struct.Reg, %struct.Reg* %8287, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %8288 to i64*
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8290 = getelementptr inbounds %struct.GPR, %struct.GPR* %8289, i32 0, i32 1
  %8291 = getelementptr inbounds %struct.Reg, %struct.Reg* %8290, i32 0, i32 0
  %EAX.i186 = bitcast %union.anon* %8291 to i32*
  %8292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8293 = getelementptr inbounds %struct.GPR, %struct.GPR* %8292, i32 0, i32 15
  %8294 = getelementptr inbounds %struct.Reg, %struct.Reg* %8293, i32 0, i32 0
  %RBP.i187 = bitcast %union.anon* %8294 to i64*
  %8295 = load i32, i32* %EAX.i186
  %8296 = zext i32 %8295 to i64
  %8297 = load i64, i64* %RBP.i187
  %8298 = sub i64 %8297, 172
  %8299 = load i64, i64* %PC.i185
  %8300 = add i64 %8299, 6
  store i64 %8300, i64* %PC.i185
  %8301 = inttoptr i64 %8298 to i32*
  %8302 = load i32, i32* %8301
  %8303 = sub i32 %8295, %8302
  %8304 = icmp ult i32 %8295, %8302
  %8305 = zext i1 %8304 to i8
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8305, i8* %8306, align 1
  %8307 = and i32 %8303, 255
  %8308 = call i32 @llvm.ctpop.i32(i32 %8307)
  %8309 = trunc i32 %8308 to i8
  %8310 = and i8 %8309, 1
  %8311 = xor i8 %8310, 1
  %8312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8311, i8* %8312, align 1
  %8313 = xor i32 %8302, %8295
  %8314 = xor i32 %8313, %8303
  %8315 = lshr i32 %8314, 4
  %8316 = trunc i32 %8315 to i8
  %8317 = and i8 %8316, 1
  %8318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8317, i8* %8318, align 1
  %8319 = icmp eq i32 %8303, 0
  %8320 = zext i1 %8319 to i8
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8320, i8* %8321, align 1
  %8322 = lshr i32 %8303, 31
  %8323 = trunc i32 %8322 to i8
  %8324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8323, i8* %8324, align 1
  %8325 = lshr i32 %8295, 31
  %8326 = lshr i32 %8302, 31
  %8327 = xor i32 %8326, %8325
  %8328 = xor i32 %8322, %8325
  %8329 = add i32 %8328, %8327
  %8330 = icmp eq i32 %8329, 2
  %8331 = zext i1 %8330 to i8
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8331, i8* %8332, align 1
  store %struct.Memory* %loadMem_4013a3, %struct.Memory** %MEMORY
  %loadMem_4013a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8334 = getelementptr inbounds %struct.GPR, %struct.GPR* %8333, i32 0, i32 33
  %8335 = getelementptr inbounds %struct.Reg, %struct.Reg* %8334, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %8335 to i64*
  %8336 = load i64, i64* %PC.i184
  %8337 = add i64 %8336, 67
  %8338 = load i64, i64* %PC.i184
  %8339 = add i64 %8338, 6
  %8340 = load i64, i64* %PC.i184
  %8341 = add i64 %8340, 6
  store i64 %8341, i64* %PC.i184
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8343 = load i8, i8* %8342, align 1
  %8344 = icmp eq i8 %8343, 0
  %8345 = zext i1 %8344 to i8
  store i8 %8345, i8* %BRANCH_TAKEN, align 1
  %8346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8347 = select i1 %8344, i64 %8337, i64 %8339
  store i64 %8347, i64* %8346, align 8
  store %struct.Memory* %loadMem_4013a9, %struct.Memory** %MEMORY
  %loadBr_4013a9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4013a9 = icmp eq i8 %loadBr_4013a9, 1
  br i1 %cmpBr_4013a9, label %block_.L_4013ec, label %block_4013af

block_4013af:                                     ; preds = %block_.L_40139d
  %loadMem_4013af = load %struct.Memory*, %struct.Memory** %MEMORY
  %8348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8349 = getelementptr inbounds %struct.GPR, %struct.GPR* %8348, i32 0, i32 33
  %8350 = getelementptr inbounds %struct.Reg, %struct.Reg* %8349, i32 0, i32 0
  %PC.i181 = bitcast %union.anon* %8350 to i64*
  %8351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8352 = getelementptr inbounds %struct.GPR, %struct.GPR* %8351, i32 0, i32 11
  %8353 = getelementptr inbounds %struct.Reg, %struct.Reg* %8352, i32 0, i32 0
  %RDI.i182 = bitcast %union.anon* %8353 to i64*
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8355 = getelementptr inbounds %struct.GPR, %struct.GPR* %8354, i32 0, i32 15
  %8356 = getelementptr inbounds %struct.Reg, %struct.Reg* %8355, i32 0, i32 0
  %RBP.i183 = bitcast %union.anon* %8356 to i64*
  %8357 = load i64, i64* %RBP.i183
  %8358 = sub i64 %8357, 88
  %8359 = load i64, i64* %PC.i181
  %8360 = add i64 %8359, 4
  store i64 %8360, i64* %PC.i181
  %8361 = inttoptr i64 %8358 to i64*
  %8362 = load i64, i64* %8361
  store i64 %8362, i64* %RDI.i182, align 8
  store %struct.Memory* %loadMem_4013af, %struct.Memory** %MEMORY
  %loadMem_4013b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8364 = getelementptr inbounds %struct.GPR, %struct.GPR* %8363, i32 0, i32 33
  %8365 = getelementptr inbounds %struct.Reg, %struct.Reg* %8364, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %8365 to i64*
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8367 = getelementptr inbounds %struct.GPR, %struct.GPR* %8366, i32 0, i32 9
  %8368 = getelementptr inbounds %struct.Reg, %struct.Reg* %8367, i32 0, i32 0
  %RSI.i180 = bitcast %union.anon* %8368 to i64*
  %8369 = load i64, i64* %PC.i179
  %8370 = add i64 %8369, 8
  store i64 %8370, i64* %PC.i179
  %8371 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %8372 = sext i32 %8371 to i64
  store i64 %8372, i64* %RSI.i180, align 8
  store %struct.Memory* %loadMem_4013b3, %struct.Memory** %MEMORY
  %loadMem_4013bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8374 = getelementptr inbounds %struct.GPR, %struct.GPR* %8373, i32 0, i32 33
  %8375 = getelementptr inbounds %struct.Reg, %struct.Reg* %8374, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %8375 to i64*
  %8376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8377 = getelementptr inbounds %struct.GPR, %struct.GPR* %8376, i32 0, i32 7
  %8378 = getelementptr inbounds %struct.Reg, %struct.Reg* %8377, i32 0, i32 0
  %RDX.i178 = bitcast %union.anon* %8378 to i64*
  %8379 = load i64, i64* %PC.i177
  %8380 = add i64 %8379, 8
  store i64 %8380, i64* %PC.i177
  %8381 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %8382 = sext i32 %8381 to i64
  store i64 %8382, i64* %RDX.i178, align 8
  store %struct.Memory* %loadMem_4013bb, %struct.Memory** %MEMORY
  %loadMem_4013c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8384 = getelementptr inbounds %struct.GPR, %struct.GPR* %8383, i32 0, i32 33
  %8385 = getelementptr inbounds %struct.Reg, %struct.Reg* %8384, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %8385 to i64*
  %8386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8387 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8386, i64 0, i64 0
  %YMM0.i176 = bitcast %union.VectorReg* %8387 to %"class.std::bitset"*
  %8388 = bitcast %"class.std::bitset"* %YMM0.i176 to i8*
  %8389 = load i64, i64* %PC.i175
  %8390 = add i64 %8389, 9
  store i64 %8390, i64* %PC.i175
  %8391 = load double, double* inttoptr (i64 6299848 to double*)
  %8392 = bitcast i8* %8388 to double*
  store double %8391, double* %8392, align 1
  %8393 = getelementptr inbounds i8, i8* %8388, i64 8
  %8394 = bitcast i8* %8393 to double*
  store double 0.000000e+00, double* %8394, align 1
  store %struct.Memory* %loadMem_4013c3, %struct.Memory** %MEMORY
  %loadMem_4013cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8396 = getelementptr inbounds %struct.GPR, %struct.GPR* %8395, i32 0, i32 33
  %8397 = getelementptr inbounds %struct.Reg, %struct.Reg* %8396, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %8397 to i64*
  %8398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8399 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8398, i64 0, i64 1
  %YMM1.i174 = bitcast %union.VectorReg* %8399 to %"class.std::bitset"*
  %8400 = bitcast %"class.std::bitset"* %YMM1.i174 to i8*
  %8401 = load i64, i64* %PC.i173
  %8402 = add i64 %8401, 9
  store i64 %8402, i64* %PC.i173
  %8403 = load double, double* inttoptr (i64 6299856 to double*)
  %8404 = bitcast i8* %8400 to double*
  store double %8403, double* %8404, align 1
  %8405 = getelementptr inbounds i8, i8* %8400, i64 8
  %8406 = bitcast i8* %8405 to double*
  store double 0.000000e+00, double* %8406, align 1
  store %struct.Memory* %loadMem_4013cc, %struct.Memory** %MEMORY
  %loadMem_4013d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8408 = getelementptr inbounds %struct.GPR, %struct.GPR* %8407, i32 0, i32 33
  %8409 = getelementptr inbounds %struct.Reg, %struct.Reg* %8408, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %8409 to i64*
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8411 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8410, i64 0, i64 2
  %YMM2.i172 = bitcast %union.VectorReg* %8411 to %"class.std::bitset"*
  %8412 = bitcast %"class.std::bitset"* %YMM2.i172 to i8*
  %8413 = load i64, i64* %PC.i171
  %8414 = add i64 %8413, 9
  store i64 %8414, i64* %PC.i171
  %8415 = load double, double* inttoptr (i64 6299864 to double*)
  %8416 = bitcast i8* %8412 to double*
  store double %8415, double* %8416, align 1
  %8417 = getelementptr inbounds i8, i8* %8412, i64 8
  %8418 = bitcast i8* %8417 to double*
  store double 0.000000e+00, double* %8418, align 1
  store %struct.Memory* %loadMem_4013d5, %struct.Memory** %MEMORY
  %loadMem_4013de = load %struct.Memory*, %struct.Memory** %MEMORY
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8420 = getelementptr inbounds %struct.GPR, %struct.GPR* %8419, i32 0, i32 33
  %8421 = getelementptr inbounds %struct.Reg, %struct.Reg* %8420, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %8421 to i64*
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8423 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8422, i64 0, i64 3
  %YMM3.i170 = bitcast %union.VectorReg* %8423 to %"class.std::bitset"*
  %8424 = bitcast %"class.std::bitset"* %YMM3.i170 to i8*
  %8425 = load i64, i64* %PC.i169
  %8426 = add i64 %8425, 9
  store i64 %8426, i64* %PC.i169
  %8427 = load double, double* inttoptr (i64 6299872 to double*)
  %8428 = bitcast i8* %8424 to double*
  store double %8427, double* %8428, align 1
  %8429 = getelementptr inbounds i8, i8* %8424, i64 8
  %8430 = bitcast i8* %8429 to double*
  store double 0.000000e+00, double* %8430, align 1
  store %struct.Memory* %loadMem_4013de, %struct.Memory** %MEMORY
  %loadMem1_4013e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8432 = getelementptr inbounds %struct.GPR, %struct.GPR* %8431, i32 0, i32 33
  %8433 = getelementptr inbounds %struct.Reg, %struct.Reg* %8432, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %8433 to i64*
  %8434 = load i64, i64* %PC.i168
  %8435 = add i64 %8434, 505
  %8436 = load i64, i64* %PC.i168
  %8437 = add i64 %8436, 5
  %8438 = load i64, i64* %PC.i168
  %8439 = add i64 %8438, 5
  store i64 %8439, i64* %PC.i168
  %8440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8441 = load i64, i64* %8440, align 8
  %8442 = add i64 %8441, -8
  %8443 = inttoptr i64 %8442 to i64*
  store i64 %8437, i64* %8443
  store i64 %8442, i64* %8440, align 8
  %8444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8435, i64* %8444, align 8
  store %struct.Memory* %loadMem1_4013e7, %struct.Memory** %MEMORY
  %loadMem2_4013e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4013e7 = load i64, i64* %3
  %call2_4013e7 = call %struct.Memory* @sub_4015e0.POUT(%struct.State* %0, i64 %loadPC_4013e7, %struct.Memory* %loadMem2_4013e7)
  store %struct.Memory* %call2_4013e7, %struct.Memory** %MEMORY
  br label %block_.L_4013ec

block_.L_4013ec:                                  ; preds = %block_4013af, %block_.L_40139d
  %loadMem_4013ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8446 = getelementptr inbounds %struct.GPR, %struct.GPR* %8445, i32 0, i32 33
  %8447 = getelementptr inbounds %struct.Reg, %struct.Reg* %8446, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %8447 to i64*
  %8448 = load i64, i64* %PC.i167
  %8449 = add i64 %8448, 11
  store i64 %8449, i64* %PC.i167
  store i32 2, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_4013ec, %struct.Memory** %MEMORY
  %loadMem_4013f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8451 = getelementptr inbounds %struct.GPR, %struct.GPR* %8450, i32 0, i32 33
  %8452 = getelementptr inbounds %struct.Reg, %struct.Reg* %8451, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %8452 to i64*
  %8453 = load i64, i64* %PC.i166
  %8454 = add i64 %8453, 11
  store i64 %8454, i64* %PC.i166
  store i32 3, i32* inttoptr (i64 6299820 to i32*)
  store %struct.Memory* %loadMem_4013f7, %struct.Memory** %MEMORY
  %loadMem_401402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8456 = getelementptr inbounds %struct.GPR, %struct.GPR* %8455, i32 0, i32 33
  %8457 = getelementptr inbounds %struct.Reg, %struct.Reg* %8456, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %8457 to i64*
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8459 = getelementptr inbounds %struct.GPR, %struct.GPR* %8458, i32 0, i32 15
  %8460 = getelementptr inbounds %struct.Reg, %struct.Reg* %8459, i32 0, i32 0
  %RBP.i165 = bitcast %union.anon* %8460 to i64*
  %8461 = load i64, i64* %RBP.i165
  %8462 = sub i64 %8461, 24
  %8463 = load i64, i64* %PC.i164
  %8464 = add i64 %8463, 8
  store i64 %8464, i64* %PC.i164
  %8465 = inttoptr i64 %8462 to i64*
  store i64 1, i64* %8465
  store %struct.Memory* %loadMem_401402, %struct.Memory** %MEMORY
  br label %block_.L_40140a

block_.L_40140a:                                  ; preds = %block_401418, %block_.L_4013ec
  %loadMem_40140a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8467 = getelementptr inbounds %struct.GPR, %struct.GPR* %8466, i32 0, i32 33
  %8468 = getelementptr inbounds %struct.Reg, %struct.Reg* %8467, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %8468 to i64*
  %8469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8470 = getelementptr inbounds %struct.GPR, %struct.GPR* %8469, i32 0, i32 1
  %8471 = getelementptr inbounds %struct.Reg, %struct.Reg* %8470, i32 0, i32 0
  %RAX.i162 = bitcast %union.anon* %8471 to i64*
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8473 = getelementptr inbounds %struct.GPR, %struct.GPR* %8472, i32 0, i32 15
  %8474 = getelementptr inbounds %struct.Reg, %struct.Reg* %8473, i32 0, i32 0
  %RBP.i163 = bitcast %union.anon* %8474 to i64*
  %8475 = load i64, i64* %RBP.i163
  %8476 = sub i64 %8475, 24
  %8477 = load i64, i64* %PC.i161
  %8478 = add i64 %8477, 4
  store i64 %8478, i64* %PC.i161
  %8479 = inttoptr i64 %8476 to i64*
  %8480 = load i64, i64* %8479
  store i64 %8480, i64* %RAX.i162, align 8
  store %struct.Memory* %loadMem_40140a, %struct.Memory** %MEMORY
  %loadMem_40140e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8482 = getelementptr inbounds %struct.GPR, %struct.GPR* %8481, i32 0, i32 33
  %8483 = getelementptr inbounds %struct.Reg, %struct.Reg* %8482, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %8483 to i64*
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8485 = getelementptr inbounds %struct.GPR, %struct.GPR* %8484, i32 0, i32 1
  %8486 = getelementptr inbounds %struct.Reg, %struct.Reg* %8485, i32 0, i32 0
  %RAX.i159 = bitcast %union.anon* %8486 to i64*
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 15
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %RBP.i160 = bitcast %union.anon* %8489 to i64*
  %8490 = load i64, i64* %RAX.i159
  %8491 = load i64, i64* %RBP.i160
  %8492 = sub i64 %8491, 96
  %8493 = load i64, i64* %PC.i158
  %8494 = add i64 %8493, 4
  store i64 %8494, i64* %PC.i158
  %8495 = inttoptr i64 %8492 to i64*
  %8496 = load i64, i64* %8495
  %8497 = sub i64 %8490, %8496
  %8498 = icmp ugt i64 %8496, %8490
  %8499 = zext i1 %8498 to i8
  %8500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8499, i8* %8500, align 1
  %8501 = trunc i64 %8497 to i32
  %8502 = and i32 %8501, 255
  %8503 = call i32 @llvm.ctpop.i32(i32 %8502)
  %8504 = trunc i32 %8503 to i8
  %8505 = and i8 %8504, 1
  %8506 = xor i8 %8505, 1
  %8507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8506, i8* %8507, align 1
  %8508 = xor i64 %8496, %8490
  %8509 = xor i64 %8508, %8497
  %8510 = lshr i64 %8509, 4
  %8511 = trunc i64 %8510 to i8
  %8512 = and i8 %8511, 1
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8512, i8* %8513, align 1
  %8514 = icmp eq i64 %8497, 0
  %8515 = zext i1 %8514 to i8
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8515, i8* %8516, align 1
  %8517 = lshr i64 %8497, 63
  %8518 = trunc i64 %8517 to i8
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8518, i8* %8519, align 1
  %8520 = lshr i64 %8490, 63
  %8521 = lshr i64 %8496, 63
  %8522 = xor i64 %8521, %8520
  %8523 = xor i64 %8517, %8520
  %8524 = add i64 %8523, %8522
  %8525 = icmp eq i64 %8524, 2
  %8526 = zext i1 %8525 to i8
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8526, i8* %8527, align 1
  store %struct.Memory* %loadMem_40140e, %struct.Memory** %MEMORY
  %loadMem_401412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 33
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %8530 to i64*
  %8531 = load i64, i64* %PC.i157
  %8532 = add i64 %8531, 114
  %8533 = load i64, i64* %PC.i157
  %8534 = add i64 %8533, 6
  %8535 = load i64, i64* %PC.i157
  %8536 = add i64 %8535, 6
  store i64 %8536, i64* %PC.i157
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8538 = load i8, i8* %8537, align 1
  %8539 = icmp eq i8 %8538, 0
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8541 = load i8, i8* %8540, align 1
  %8542 = icmp ne i8 %8541, 0
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8544 = load i8, i8* %8543, align 1
  %8545 = icmp ne i8 %8544, 0
  %8546 = xor i1 %8542, %8545
  %8547 = xor i1 %8546, true
  %8548 = and i1 %8539, %8547
  %8549 = zext i1 %8548 to i8
  store i8 %8549, i8* %BRANCH_TAKEN, align 1
  %8550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8551 = select i1 %8548, i64 %8532, i64 %8534
  store i64 %8551, i64* %8550, align 8
  store %struct.Memory* %loadMem_401412, %struct.Memory** %MEMORY
  %loadBr_401412 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401412 = icmp eq i8 %loadBr_401412, 1
  br i1 %cmpBr_401412, label %block_.L_401484, label %block_401418

block_401418:                                     ; preds = %block_.L_40140a
  %loadMem_401418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8553 = getelementptr inbounds %struct.GPR, %struct.GPR* %8552, i32 0, i32 33
  %8554 = getelementptr inbounds %struct.Reg, %struct.Reg* %8553, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %8554 to i64*
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8556 = getelementptr inbounds %struct.GPR, %struct.GPR* %8555, i32 0, i32 1
  %8557 = getelementptr inbounds %struct.Reg, %struct.Reg* %8556, i32 0, i32 0
  %RAX.i156 = bitcast %union.anon* %8557 to i64*
  %8558 = load i64, i64* %PC.i155
  %8559 = add i64 %8558, 7
  store i64 %8559, i64* %PC.i155
  %8560 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %8561 = zext i32 %8560 to i64
  store i64 %8561, i64* %RAX.i156, align 8
  store %struct.Memory* %loadMem_401418, %struct.Memory** %MEMORY
  %loadMem_40141f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8563 = getelementptr inbounds %struct.GPR, %struct.GPR* %8562, i32 0, i32 33
  %8564 = getelementptr inbounds %struct.Reg, %struct.Reg* %8563, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %8564 to i64*
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8566 = getelementptr inbounds %struct.GPR, %struct.GPR* %8565, i32 0, i32 1
  %8567 = getelementptr inbounds %struct.Reg, %struct.Reg* %8566, i32 0, i32 0
  %RAX.i154 = bitcast %union.anon* %8567 to i64*
  %8568 = load i64, i64* %RAX.i154
  %8569 = load i64, i64* %PC.i153
  %8570 = add i64 %8569, 7
  store i64 %8570, i64* %PC.i153
  %8571 = trunc i64 %8568 to i32
  %8572 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %8573 = add i32 %8572, %8571
  %8574 = zext i32 %8573 to i64
  store i64 %8574, i64* %RAX.i154, align 8
  %8575 = icmp ult i32 %8573, %8571
  %8576 = icmp ult i32 %8573, %8572
  %8577 = or i1 %8575, %8576
  %8578 = zext i1 %8577 to i8
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8578, i8* %8579, align 1
  %8580 = and i32 %8573, 255
  %8581 = call i32 @llvm.ctpop.i32(i32 %8580)
  %8582 = trunc i32 %8581 to i8
  %8583 = and i8 %8582, 1
  %8584 = xor i8 %8583, 1
  %8585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8584, i8* %8585, align 1
  %8586 = xor i32 %8572, %8571
  %8587 = xor i32 %8586, %8573
  %8588 = lshr i32 %8587, 4
  %8589 = trunc i32 %8588 to i8
  %8590 = and i8 %8589, 1
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8590, i8* %8591, align 1
  %8592 = icmp eq i32 %8573, 0
  %8593 = zext i1 %8592 to i8
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8593, i8* %8594, align 1
  %8595 = lshr i32 %8573, 31
  %8596 = trunc i32 %8595 to i8
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8596, i8* %8597, align 1
  %8598 = lshr i32 %8571, 31
  %8599 = lshr i32 %8572, 31
  %8600 = xor i32 %8595, %8598
  %8601 = xor i32 %8595, %8599
  %8602 = add i32 %8600, %8601
  %8603 = icmp eq i32 %8602, 2
  %8604 = zext i1 %8603 to i8
  %8605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8604, i8* %8605, align 1
  store %struct.Memory* %loadMem_40141f, %struct.Memory** %MEMORY
  %loadMem_401426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8607 = getelementptr inbounds %struct.GPR, %struct.GPR* %8606, i32 0, i32 33
  %8608 = getelementptr inbounds %struct.Reg, %struct.Reg* %8607, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %8608 to i64*
  %8609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8610 = getelementptr inbounds %struct.GPR, %struct.GPR* %8609, i32 0, i32 1
  %8611 = getelementptr inbounds %struct.Reg, %struct.Reg* %8610, i32 0, i32 0
  %EAX.i152 = bitcast %union.anon* %8611 to i32*
  %8612 = load i32, i32* %EAX.i152
  %8613 = zext i32 %8612 to i64
  %8614 = load i64, i64* %PC.i151
  %8615 = add i64 %8614, 7
  store i64 %8615, i64* %PC.i151
  store i32 %8612, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_401426, %struct.Memory** %MEMORY
  %loadMem_40142d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8617 = getelementptr inbounds %struct.GPR, %struct.GPR* %8616, i32 0, i32 33
  %8618 = getelementptr inbounds %struct.Reg, %struct.Reg* %8617, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %8618 to i64*
  %8619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8620 = getelementptr inbounds %struct.GPR, %struct.GPR* %8619, i32 0, i32 1
  %8621 = getelementptr inbounds %struct.Reg, %struct.Reg* %8620, i32 0, i32 0
  %RAX.i150 = bitcast %union.anon* %8621 to i64*
  %8622 = load i64, i64* %PC.i149
  %8623 = add i64 %8622, 7
  store i64 %8623, i64* %PC.i149
  %8624 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %8625 = zext i32 %8624 to i64
  store i64 %8625, i64* %RAX.i150, align 8
  store %struct.Memory* %loadMem_40142d, %struct.Memory** %MEMORY
  %loadMem_401434 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8627 = getelementptr inbounds %struct.GPR, %struct.GPR* %8626, i32 0, i32 33
  %8628 = getelementptr inbounds %struct.Reg, %struct.Reg* %8627, i32 0, i32 0
  %PC.i147 = bitcast %union.anon* %8628 to i64*
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8630 = getelementptr inbounds %struct.GPR, %struct.GPR* %8629, i32 0, i32 1
  %8631 = getelementptr inbounds %struct.Reg, %struct.Reg* %8630, i32 0, i32 0
  %RAX.i148 = bitcast %union.anon* %8631 to i64*
  %8632 = load i64, i64* %RAX.i148
  %8633 = load i64, i64* %PC.i147
  %8634 = add i64 %8633, 7
  store i64 %8634, i64* %PC.i147
  %8635 = trunc i64 %8632 to i32
  %8636 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %8637 = add i32 %8636, %8635
  %8638 = zext i32 %8637 to i64
  store i64 %8638, i64* %RAX.i148, align 8
  %8639 = icmp ult i32 %8637, %8635
  %8640 = icmp ult i32 %8637, %8636
  %8641 = or i1 %8639, %8640
  %8642 = zext i1 %8641 to i8
  %8643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8642, i8* %8643, align 1
  %8644 = and i32 %8637, 255
  %8645 = call i32 @llvm.ctpop.i32(i32 %8644)
  %8646 = trunc i32 %8645 to i8
  %8647 = and i8 %8646, 1
  %8648 = xor i8 %8647, 1
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8648, i8* %8649, align 1
  %8650 = xor i32 %8636, %8635
  %8651 = xor i32 %8650, %8637
  %8652 = lshr i32 %8651, 4
  %8653 = trunc i32 %8652 to i8
  %8654 = and i8 %8653, 1
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8654, i8* %8655, align 1
  %8656 = icmp eq i32 %8637, 0
  %8657 = zext i1 %8656 to i8
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8657, i8* %8658, align 1
  %8659 = lshr i32 %8637, 31
  %8660 = trunc i32 %8659 to i8
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8660, i8* %8661, align 1
  %8662 = lshr i32 %8635, 31
  %8663 = lshr i32 %8636, 31
  %8664 = xor i32 %8659, %8662
  %8665 = xor i32 %8659, %8663
  %8666 = add i32 %8664, %8665
  %8667 = icmp eq i32 %8666, 2
  %8668 = zext i1 %8667 to i8
  %8669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8668, i8* %8669, align 1
  store %struct.Memory* %loadMem_401434, %struct.Memory** %MEMORY
  %loadMem_40143b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8671 = getelementptr inbounds %struct.GPR, %struct.GPR* %8670, i32 0, i32 33
  %8672 = getelementptr inbounds %struct.Reg, %struct.Reg* %8671, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %8672 to i64*
  %8673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8674 = getelementptr inbounds %struct.GPR, %struct.GPR* %8673, i32 0, i32 1
  %8675 = getelementptr inbounds %struct.Reg, %struct.Reg* %8674, i32 0, i32 0
  %EAX.i146 = bitcast %union.anon* %8675 to i32*
  %8676 = load i32, i32* %EAX.i146
  %8677 = zext i32 %8676 to i64
  %8678 = load i64, i64* %PC.i145
  %8679 = add i64 %8678, 7
  store i64 %8679, i64* %PC.i145
  store i32 %8676, i32* inttoptr (i64 6299820 to i32*)
  store %struct.Memory* %loadMem_40143b, %struct.Memory** %MEMORY
  %loadMem_401442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8681 = getelementptr inbounds %struct.GPR, %struct.GPR* %8680, i32 0, i32 33
  %8682 = getelementptr inbounds %struct.Reg, %struct.Reg* %8681, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %8682 to i64*
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8684 = getelementptr inbounds %struct.GPR, %struct.GPR* %8683, i32 0, i32 1
  %8685 = getelementptr inbounds %struct.Reg, %struct.Reg* %8684, i32 0, i32 0
  %RAX.i144 = bitcast %union.anon* %8685 to i64*
  %8686 = load i64, i64* %PC.i143
  %8687 = add i64 %8686, 7
  store i64 %8687, i64* %PC.i143
  %8688 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %8689 = zext i32 %8688 to i64
  store i64 %8689, i64* %RAX.i144, align 8
  store %struct.Memory* %loadMem_401442, %struct.Memory** %MEMORY
  %loadMem_401449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8691 = getelementptr inbounds %struct.GPR, %struct.GPR* %8690, i32 0, i32 33
  %8692 = getelementptr inbounds %struct.Reg, %struct.Reg* %8691, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %8692 to i64*
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8694 = getelementptr inbounds %struct.GPR, %struct.GPR* %8693, i32 0, i32 1
  %8695 = getelementptr inbounds %struct.Reg, %struct.Reg* %8694, i32 0, i32 0
  %RAX.i142 = bitcast %union.anon* %8695 to i64*
  %8696 = load i64, i64* %RAX.i142
  %8697 = load i64, i64* %PC.i141
  %8698 = add i64 %8697, 7
  store i64 %8698, i64* %PC.i141
  %8699 = trunc i64 %8696 to i32
  %8700 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %8701 = sub i32 %8699, %8700
  %8702 = zext i32 %8701 to i64
  store i64 %8702, i64* %RAX.i142, align 8
  %8703 = icmp ult i32 %8699, %8700
  %8704 = zext i1 %8703 to i8
  %8705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8704, i8* %8705, align 1
  %8706 = and i32 %8701, 255
  %8707 = call i32 @llvm.ctpop.i32(i32 %8706)
  %8708 = trunc i32 %8707 to i8
  %8709 = and i8 %8708, 1
  %8710 = xor i8 %8709, 1
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8710, i8* %8711, align 1
  %8712 = xor i32 %8700, %8699
  %8713 = xor i32 %8712, %8701
  %8714 = lshr i32 %8713, 4
  %8715 = trunc i32 %8714 to i8
  %8716 = and i8 %8715, 1
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8716, i8* %8717, align 1
  %8718 = icmp eq i32 %8701, 0
  %8719 = zext i1 %8718 to i8
  %8720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8719, i8* %8720, align 1
  %8721 = lshr i32 %8701, 31
  %8722 = trunc i32 %8721 to i8
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8722, i8* %8723, align 1
  %8724 = lshr i32 %8699, 31
  %8725 = lshr i32 %8700, 31
  %8726 = xor i32 %8725, %8724
  %8727 = xor i32 %8721, %8724
  %8728 = add i32 %8727, %8726
  %8729 = icmp eq i32 %8728, 2
  %8730 = zext i1 %8729 to i8
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8730, i8* %8731, align 1
  store %struct.Memory* %loadMem_401449, %struct.Memory** %MEMORY
  %loadMem_401450 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8733 = getelementptr inbounds %struct.GPR, %struct.GPR* %8732, i32 0, i32 33
  %8734 = getelementptr inbounds %struct.Reg, %struct.Reg* %8733, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %8734 to i64*
  %8735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8736 = getelementptr inbounds %struct.GPR, %struct.GPR* %8735, i32 0, i32 1
  %8737 = getelementptr inbounds %struct.Reg, %struct.Reg* %8736, i32 0, i32 0
  %EAX.i140 = bitcast %union.anon* %8737 to i32*
  %8738 = load i32, i32* %EAX.i140
  %8739 = zext i32 %8738 to i64
  %8740 = load i64, i64* %PC.i139
  %8741 = add i64 %8740, 7
  store i64 %8741, i64* %PC.i139
  store i32 %8738, i32* inttoptr (i64 6299792 to i32*)
  store %struct.Memory* %loadMem_401450, %struct.Memory** %MEMORY
  %loadMem_401457 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8743 = getelementptr inbounds %struct.GPR, %struct.GPR* %8742, i32 0, i32 33
  %8744 = getelementptr inbounds %struct.Reg, %struct.Reg* %8743, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %8744 to i64*
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8746 = getelementptr inbounds %struct.GPR, %struct.GPR* %8745, i32 0, i32 1
  %8747 = getelementptr inbounds %struct.Reg, %struct.Reg* %8746, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %8747 to i64*
  %8748 = load i64, i64* %PC.i137
  %8749 = add i64 %8748, 7
  store i64 %8749, i64* %PC.i137
  %8750 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %8751 = zext i32 %8750 to i64
  store i64 %8751, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_401457, %struct.Memory** %MEMORY
  %loadMem_40145e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8753 = getelementptr inbounds %struct.GPR, %struct.GPR* %8752, i32 0, i32 33
  %8754 = getelementptr inbounds %struct.Reg, %struct.Reg* %8753, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %8754 to i64*
  %8755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8756 = getelementptr inbounds %struct.GPR, %struct.GPR* %8755, i32 0, i32 1
  %8757 = getelementptr inbounds %struct.Reg, %struct.Reg* %8756, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %8757 to i64*
  %8758 = load i64, i64* %RAX.i136
  %8759 = load i64, i64* %PC.i135
  %8760 = add i64 %8759, 7
  store i64 %8760, i64* %PC.i135
  %8761 = trunc i64 %8758 to i32
  %8762 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %8763 = sub i32 %8761, %8762
  %8764 = zext i32 %8763 to i64
  store i64 %8764, i64* %RAX.i136, align 8
  %8765 = icmp ult i32 %8761, %8762
  %8766 = zext i1 %8765 to i8
  %8767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8766, i8* %8767, align 1
  %8768 = and i32 %8763, 255
  %8769 = call i32 @llvm.ctpop.i32(i32 %8768)
  %8770 = trunc i32 %8769 to i8
  %8771 = and i8 %8770, 1
  %8772 = xor i8 %8771, 1
  %8773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8772, i8* %8773, align 1
  %8774 = xor i32 %8762, %8761
  %8775 = xor i32 %8774, %8763
  %8776 = lshr i32 %8775, 4
  %8777 = trunc i32 %8776 to i8
  %8778 = and i8 %8777, 1
  %8779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8778, i8* %8779, align 1
  %8780 = icmp eq i32 %8763, 0
  %8781 = zext i1 %8780 to i8
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8781, i8* %8782, align 1
  %8783 = lshr i32 %8763, 31
  %8784 = trunc i32 %8783 to i8
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8784, i8* %8785, align 1
  %8786 = lshr i32 %8761, 31
  %8787 = lshr i32 %8762, 31
  %8788 = xor i32 %8787, %8786
  %8789 = xor i32 %8783, %8786
  %8790 = add i32 %8789, %8788
  %8791 = icmp eq i32 %8790, 2
  %8792 = zext i1 %8791 to i8
  %8793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8792, i8* %8793, align 1
  store %struct.Memory* %loadMem_40145e, %struct.Memory** %MEMORY
  %loadMem_401465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8795 = getelementptr inbounds %struct.GPR, %struct.GPR* %8794, i32 0, i32 33
  %8796 = getelementptr inbounds %struct.Reg, %struct.Reg* %8795, i32 0, i32 0
  %PC.i133 = bitcast %union.anon* %8796 to i64*
  %8797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8798 = getelementptr inbounds %struct.GPR, %struct.GPR* %8797, i32 0, i32 1
  %8799 = getelementptr inbounds %struct.Reg, %struct.Reg* %8798, i32 0, i32 0
  %RAX.i134 = bitcast %union.anon* %8799 to i64*
  %8800 = load i64, i64* %RAX.i134
  %8801 = load i64, i64* %PC.i133
  %8802 = add i64 %8801, 7
  store i64 %8802, i64* %PC.i133
  %8803 = trunc i64 %8800 to i32
  %8804 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %8805 = sub i32 %8803, %8804
  %8806 = zext i32 %8805 to i64
  store i64 %8806, i64* %RAX.i134, align 8
  %8807 = icmp ult i32 %8803, %8804
  %8808 = zext i1 %8807 to i8
  %8809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8808, i8* %8809, align 1
  %8810 = and i32 %8805, 255
  %8811 = call i32 @llvm.ctpop.i32(i32 %8810)
  %8812 = trunc i32 %8811 to i8
  %8813 = and i8 %8812, 1
  %8814 = xor i8 %8813, 1
  %8815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8814, i8* %8815, align 1
  %8816 = xor i32 %8804, %8803
  %8817 = xor i32 %8816, %8805
  %8818 = lshr i32 %8817, 4
  %8819 = trunc i32 %8818 to i8
  %8820 = and i8 %8819, 1
  %8821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8820, i8* %8821, align 1
  %8822 = icmp eq i32 %8805, 0
  %8823 = zext i1 %8822 to i8
  %8824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8823, i8* %8824, align 1
  %8825 = lshr i32 %8805, 31
  %8826 = trunc i32 %8825 to i8
  %8827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8826, i8* %8827, align 1
  %8828 = lshr i32 %8803, 31
  %8829 = lshr i32 %8804, 31
  %8830 = xor i32 %8829, %8828
  %8831 = xor i32 %8825, %8828
  %8832 = add i32 %8831, %8830
  %8833 = icmp eq i32 %8832, 2
  %8834 = zext i1 %8833 to i8
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8834, i8* %8835, align 1
  store %struct.Memory* %loadMem_401465, %struct.Memory** %MEMORY
  %loadMem_40146c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8837 = getelementptr inbounds %struct.GPR, %struct.GPR* %8836, i32 0, i32 33
  %8838 = getelementptr inbounds %struct.Reg, %struct.Reg* %8837, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %8838 to i64*
  %8839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8840 = getelementptr inbounds %struct.GPR, %struct.GPR* %8839, i32 0, i32 1
  %8841 = getelementptr inbounds %struct.Reg, %struct.Reg* %8840, i32 0, i32 0
  %EAX.i132 = bitcast %union.anon* %8841 to i32*
  %8842 = load i32, i32* %EAX.i132
  %8843 = zext i32 %8842 to i64
  %8844 = load i64, i64* %PC.i131
  %8845 = add i64 %8844, 7
  store i64 %8845, i64* %PC.i131
  store i32 %8842, i32* inttoptr (i64 6299820 to i32*)
  store %struct.Memory* %loadMem_40146c, %struct.Memory** %MEMORY
  %loadMem_401473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8847 = getelementptr inbounds %struct.GPR, %struct.GPR* %8846, i32 0, i32 33
  %8848 = getelementptr inbounds %struct.Reg, %struct.Reg* %8847, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %8848 to i64*
  %8849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8850 = getelementptr inbounds %struct.GPR, %struct.GPR* %8849, i32 0, i32 1
  %8851 = getelementptr inbounds %struct.Reg, %struct.Reg* %8850, i32 0, i32 0
  %RAX.i129 = bitcast %union.anon* %8851 to i64*
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8853 = getelementptr inbounds %struct.GPR, %struct.GPR* %8852, i32 0, i32 15
  %8854 = getelementptr inbounds %struct.Reg, %struct.Reg* %8853, i32 0, i32 0
  %RBP.i130 = bitcast %union.anon* %8854 to i64*
  %8855 = load i64, i64* %RBP.i130
  %8856 = sub i64 %8855, 24
  %8857 = load i64, i64* %PC.i128
  %8858 = add i64 %8857, 4
  store i64 %8858, i64* %PC.i128
  %8859 = inttoptr i64 %8856 to i64*
  %8860 = load i64, i64* %8859
  store i64 %8860, i64* %RAX.i129, align 8
  store %struct.Memory* %loadMem_401473, %struct.Memory** %MEMORY
  %loadMem_401477 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8862 = getelementptr inbounds %struct.GPR, %struct.GPR* %8861, i32 0, i32 33
  %8863 = getelementptr inbounds %struct.Reg, %struct.Reg* %8862, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %8863 to i64*
  %8864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8865 = getelementptr inbounds %struct.GPR, %struct.GPR* %8864, i32 0, i32 1
  %8866 = getelementptr inbounds %struct.Reg, %struct.Reg* %8865, i32 0, i32 0
  %RAX.i127 = bitcast %union.anon* %8866 to i64*
  %8867 = load i64, i64* %RAX.i127
  %8868 = load i64, i64* %PC.i126
  %8869 = add i64 %8868, 4
  store i64 %8869, i64* %PC.i126
  %8870 = add i64 1, %8867
  store i64 %8870, i64* %RAX.i127, align 8
  %8871 = icmp ult i64 %8870, %8867
  %8872 = icmp ult i64 %8870, 1
  %8873 = or i1 %8871, %8872
  %8874 = zext i1 %8873 to i8
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8874, i8* %8875, align 1
  %8876 = trunc i64 %8870 to i32
  %8877 = and i32 %8876, 255
  %8878 = call i32 @llvm.ctpop.i32(i32 %8877)
  %8879 = trunc i32 %8878 to i8
  %8880 = and i8 %8879, 1
  %8881 = xor i8 %8880, 1
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8881, i8* %8882, align 1
  %8883 = xor i64 1, %8867
  %8884 = xor i64 %8883, %8870
  %8885 = lshr i64 %8884, 4
  %8886 = trunc i64 %8885 to i8
  %8887 = and i8 %8886, 1
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8887, i8* %8888, align 1
  %8889 = icmp eq i64 %8870, 0
  %8890 = zext i1 %8889 to i8
  %8891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8890, i8* %8891, align 1
  %8892 = lshr i64 %8870, 63
  %8893 = trunc i64 %8892 to i8
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8893, i8* %8894, align 1
  %8895 = lshr i64 %8867, 63
  %8896 = xor i64 %8892, %8895
  %8897 = add i64 %8896, %8892
  %8898 = icmp eq i64 %8897, 2
  %8899 = zext i1 %8898 to i8
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8899, i8* %8900, align 1
  store %struct.Memory* %loadMem_401477, %struct.Memory** %MEMORY
  %loadMem_40147b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8902 = getelementptr inbounds %struct.GPR, %struct.GPR* %8901, i32 0, i32 33
  %8903 = getelementptr inbounds %struct.Reg, %struct.Reg* %8902, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %8903 to i64*
  %8904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8905 = getelementptr inbounds %struct.GPR, %struct.GPR* %8904, i32 0, i32 1
  %8906 = getelementptr inbounds %struct.Reg, %struct.Reg* %8905, i32 0, i32 0
  %RAX.i124 = bitcast %union.anon* %8906 to i64*
  %8907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8908 = getelementptr inbounds %struct.GPR, %struct.GPR* %8907, i32 0, i32 15
  %8909 = getelementptr inbounds %struct.Reg, %struct.Reg* %8908, i32 0, i32 0
  %RBP.i125 = bitcast %union.anon* %8909 to i64*
  %8910 = load i64, i64* %RBP.i125
  %8911 = sub i64 %8910, 24
  %8912 = load i64, i64* %RAX.i124
  %8913 = load i64, i64* %PC.i123
  %8914 = add i64 %8913, 4
  store i64 %8914, i64* %PC.i123
  %8915 = inttoptr i64 %8911 to i64*
  store i64 %8912, i64* %8915
  store %struct.Memory* %loadMem_40147b, %struct.Memory** %MEMORY
  %loadMem_40147f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8917 = getelementptr inbounds %struct.GPR, %struct.GPR* %8916, i32 0, i32 33
  %8918 = getelementptr inbounds %struct.Reg, %struct.Reg* %8917, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %8918 to i64*
  %8919 = load i64, i64* %PC.i122
  %8920 = add i64 %8919, -117
  %8921 = load i64, i64* %PC.i122
  %8922 = add i64 %8921, 5
  store i64 %8922, i64* %PC.i122
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8920, i64* %8923, align 8
  store %struct.Memory* %loadMem_40147f, %struct.Memory** %MEMORY
  br label %block_.L_40140a

block_.L_401484:                                  ; preds = %block_.L_40140a
  %loadMem_401484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8925 = getelementptr inbounds %struct.GPR, %struct.GPR* %8924, i32 0, i32 33
  %8926 = getelementptr inbounds %struct.Reg, %struct.Reg* %8925, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %8926 to i64*
  %8927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8928 = getelementptr inbounds %struct.GPR, %struct.GPR* %8927, i32 0, i32 1
  %8929 = getelementptr inbounds %struct.Reg, %struct.Reg* %8928, i32 0, i32 0
  %RAX.i120 = bitcast %union.anon* %8929 to i64*
  %8930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8931 = getelementptr inbounds %struct.GPR, %struct.GPR* %8930, i32 0, i32 15
  %8932 = getelementptr inbounds %struct.Reg, %struct.Reg* %8931, i32 0, i32 0
  %RBP.i121 = bitcast %union.anon* %8932 to i64*
  %8933 = load i64, i64* %RBP.i121
  %8934 = sub i64 %8933, 176
  %8935 = load i64, i64* %PC.i119
  %8936 = add i64 %8935, 6
  store i64 %8936, i64* %PC.i119
  %8937 = inttoptr i64 %8934 to i32*
  %8938 = load i32, i32* %8937
  %8939 = zext i32 %8938 to i64
  store i64 %8939, i64* %RAX.i120, align 8
  store %struct.Memory* %loadMem_401484, %struct.Memory** %MEMORY
  %loadMem_40148a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8941 = getelementptr inbounds %struct.GPR, %struct.GPR* %8940, i32 0, i32 33
  %8942 = getelementptr inbounds %struct.Reg, %struct.Reg* %8941, i32 0, i32 0
  %PC.i116 = bitcast %union.anon* %8942 to i64*
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8944 = getelementptr inbounds %struct.GPR, %struct.GPR* %8943, i32 0, i32 1
  %8945 = getelementptr inbounds %struct.Reg, %struct.Reg* %8944, i32 0, i32 0
  %EAX.i117 = bitcast %union.anon* %8945 to i32*
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8947 = getelementptr inbounds %struct.GPR, %struct.GPR* %8946, i32 0, i32 15
  %8948 = getelementptr inbounds %struct.Reg, %struct.Reg* %8947, i32 0, i32 0
  %RBP.i118 = bitcast %union.anon* %8948 to i64*
  %8949 = load i32, i32* %EAX.i117
  %8950 = zext i32 %8949 to i64
  %8951 = load i64, i64* %RBP.i118
  %8952 = sub i64 %8951, 172
  %8953 = load i64, i64* %PC.i116
  %8954 = add i64 %8953, 6
  store i64 %8954, i64* %PC.i116
  %8955 = inttoptr i64 %8952 to i32*
  %8956 = load i32, i32* %8955
  %8957 = sub i32 %8949, %8956
  %8958 = icmp ult i32 %8949, %8956
  %8959 = zext i1 %8958 to i8
  %8960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8959, i8* %8960, align 1
  %8961 = and i32 %8957, 255
  %8962 = call i32 @llvm.ctpop.i32(i32 %8961)
  %8963 = trunc i32 %8962 to i8
  %8964 = and i8 %8963, 1
  %8965 = xor i8 %8964, 1
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8965, i8* %8966, align 1
  %8967 = xor i32 %8956, %8949
  %8968 = xor i32 %8967, %8957
  %8969 = lshr i32 %8968, 4
  %8970 = trunc i32 %8969 to i8
  %8971 = and i8 %8970, 1
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8971, i8* %8972, align 1
  %8973 = icmp eq i32 %8957, 0
  %8974 = zext i1 %8973 to i8
  %8975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8974, i8* %8975, align 1
  %8976 = lshr i32 %8957, 31
  %8977 = trunc i32 %8976 to i8
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8977, i8* %8978, align 1
  %8979 = lshr i32 %8949, 31
  %8980 = lshr i32 %8956, 31
  %8981 = xor i32 %8980, %8979
  %8982 = xor i32 %8976, %8979
  %8983 = add i32 %8982, %8981
  %8984 = icmp eq i32 %8983, 2
  %8985 = zext i1 %8984 to i8
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8985, i8* %8986, align 1
  store %struct.Memory* %loadMem_40148a, %struct.Memory** %MEMORY
  %loadMem_401490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8988 = getelementptr inbounds %struct.GPR, %struct.GPR* %8987, i32 0, i32 33
  %8989 = getelementptr inbounds %struct.Reg, %struct.Reg* %8988, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %8989 to i64*
  %8990 = load i64, i64* %PC.i115
  %8991 = add i64 %8990, 54
  %8992 = load i64, i64* %PC.i115
  %8993 = add i64 %8992, 6
  %8994 = load i64, i64* %PC.i115
  %8995 = add i64 %8994, 6
  store i64 %8995, i64* %PC.i115
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8997 = load i8, i8* %8996, align 1
  %8998 = icmp eq i8 %8997, 0
  %8999 = zext i1 %8998 to i8
  store i8 %8999, i8* %BRANCH_TAKEN, align 1
  %9000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9001 = select i1 %8998, i64 %8991, i64 %8993
  store i64 %9001, i64* %9000, align 8
  store %struct.Memory* %loadMem_401490, %struct.Memory** %MEMORY
  %loadBr_401490 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401490 = icmp eq i8 %loadBr_401490, 1
  br i1 %cmpBr_401490, label %block_.L_4014c6, label %block_401496

block_401496:                                     ; preds = %block_.L_401484
  %loadMem_401496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9003 = getelementptr inbounds %struct.GPR, %struct.GPR* %9002, i32 0, i32 33
  %9004 = getelementptr inbounds %struct.Reg, %struct.Reg* %9003, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %9004 to i64*
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9006 = getelementptr inbounds %struct.GPR, %struct.GPR* %9005, i32 0, i32 11
  %9007 = getelementptr inbounds %struct.Reg, %struct.Reg* %9006, i32 0, i32 0
  %RDI.i113 = bitcast %union.anon* %9007 to i64*
  %9008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9009 = getelementptr inbounds %struct.GPR, %struct.GPR* %9008, i32 0, i32 15
  %9010 = getelementptr inbounds %struct.Reg, %struct.Reg* %9009, i32 0, i32 0
  %RBP.i114 = bitcast %union.anon* %9010 to i64*
  %9011 = load i64, i64* %RBP.i114
  %9012 = sub i64 %9011, 96
  %9013 = load i64, i64* %PC.i112
  %9014 = add i64 %9013, 4
  store i64 %9014, i64* %PC.i112
  %9015 = inttoptr i64 %9012 to i64*
  %9016 = load i64, i64* %9015
  store i64 %9016, i64* %RDI.i113, align 8
  store %struct.Memory* %loadMem_401496, %struct.Memory** %MEMORY
  %loadMem_40149a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9018 = getelementptr inbounds %struct.GPR, %struct.GPR* %9017, i32 0, i32 33
  %9019 = getelementptr inbounds %struct.Reg, %struct.Reg* %9018, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %9019 to i64*
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9021 = getelementptr inbounds %struct.GPR, %struct.GPR* %9020, i32 0, i32 9
  %9022 = getelementptr inbounds %struct.Reg, %struct.Reg* %9021, i32 0, i32 0
  %RSI.i111 = bitcast %union.anon* %9022 to i64*
  %9023 = load i64, i64* %PC.i110
  %9024 = add i64 %9023, 8
  store i64 %9024, i64* %PC.i110
  %9025 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %9026 = sext i32 %9025 to i64
  store i64 %9026, i64* %RSI.i111, align 8
  store %struct.Memory* %loadMem_40149a, %struct.Memory** %MEMORY
  %loadMem_4014a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9028 = getelementptr inbounds %struct.GPR, %struct.GPR* %9027, i32 0, i32 33
  %9029 = getelementptr inbounds %struct.Reg, %struct.Reg* %9028, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %9029 to i64*
  %9030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9031 = getelementptr inbounds %struct.GPR, %struct.GPR* %9030, i32 0, i32 7
  %9032 = getelementptr inbounds %struct.Reg, %struct.Reg* %9031, i32 0, i32 0
  %RDX.i109 = bitcast %union.anon* %9032 to i64*
  %9033 = load i64, i64* %PC.i108
  %9034 = add i64 %9033, 8
  store i64 %9034, i64* %PC.i108
  %9035 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %9036 = sext i32 %9035 to i64
  store i64 %9036, i64* %RDX.i109, align 8
  store %struct.Memory* %loadMem_4014a2, %struct.Memory** %MEMORY
  %loadMem_4014aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9038 = getelementptr inbounds %struct.GPR, %struct.GPR* %9037, i32 0, i32 33
  %9039 = getelementptr inbounds %struct.Reg, %struct.Reg* %9038, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %9039 to i64*
  %9040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9041 = getelementptr inbounds %struct.GPR, %struct.GPR* %9040, i32 0, i32 15
  %9042 = getelementptr inbounds %struct.Reg, %struct.Reg* %9041, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %9042 to i64*
  %9043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9044 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9043, i64 0, i64 0
  %YMM0.i107 = bitcast %union.VectorReg* %9044 to %"class.std::bitset"*
  %9045 = bitcast %"class.std::bitset"* %YMM0.i107 to i8*
  %9046 = load i64, i64* %RBP.i106
  %9047 = sub i64 %9046, 112
  %9048 = load i64, i64* %PC.i105
  %9049 = add i64 %9048, 5
  store i64 %9049, i64* %PC.i105
  %9050 = inttoptr i64 %9047 to double*
  %9051 = load double, double* %9050
  %9052 = bitcast i8* %9045 to double*
  store double %9051, double* %9052, align 1
  %9053 = getelementptr inbounds i8, i8* %9045, i64 8
  %9054 = bitcast i8* %9053 to double*
  store double 0.000000e+00, double* %9054, align 1
  store %struct.Memory* %loadMem_4014aa, %struct.Memory** %MEMORY
  %loadMem_4014af = load %struct.Memory*, %struct.Memory** %MEMORY
  %9055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9056 = getelementptr inbounds %struct.GPR, %struct.GPR* %9055, i32 0, i32 33
  %9057 = getelementptr inbounds %struct.Reg, %struct.Reg* %9056, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %9057 to i64*
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9059 = getelementptr inbounds %struct.GPR, %struct.GPR* %9058, i32 0, i32 15
  %9060 = getelementptr inbounds %struct.Reg, %struct.Reg* %9059, i32 0, i32 0
  %RBP.i103 = bitcast %union.anon* %9060 to i64*
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9062 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9061, i64 0, i64 1
  %YMM1.i104 = bitcast %union.VectorReg* %9062 to %"class.std::bitset"*
  %9063 = bitcast %"class.std::bitset"* %YMM1.i104 to i8*
  %9064 = load i64, i64* %RBP.i103
  %9065 = sub i64 %9064, 120
  %9066 = load i64, i64* %PC.i102
  %9067 = add i64 %9066, 5
  store i64 %9067, i64* %PC.i102
  %9068 = inttoptr i64 %9065 to double*
  %9069 = load double, double* %9068
  %9070 = bitcast i8* %9063 to double*
  store double %9069, double* %9070, align 1
  %9071 = getelementptr inbounds i8, i8* %9063, i64 8
  %9072 = bitcast i8* %9071 to double*
  store double 0.000000e+00, double* %9072, align 1
  store %struct.Memory* %loadMem_4014af, %struct.Memory** %MEMORY
  %loadMem_4014b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9074 = getelementptr inbounds %struct.GPR, %struct.GPR* %9073, i32 0, i32 33
  %9075 = getelementptr inbounds %struct.Reg, %struct.Reg* %9074, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %9075 to i64*
  %9076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9077 = getelementptr inbounds %struct.GPR, %struct.GPR* %9076, i32 0, i32 15
  %9078 = getelementptr inbounds %struct.Reg, %struct.Reg* %9077, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %9078 to i64*
  %9079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9080 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9079, i64 0, i64 2
  %YMM2.i101 = bitcast %union.VectorReg* %9080 to %"class.std::bitset"*
  %9081 = bitcast %"class.std::bitset"* %YMM2.i101 to i8*
  %9082 = load i64, i64* %RBP.i100
  %9083 = sub i64 %9082, 128
  %9084 = load i64, i64* %PC.i99
  %9085 = add i64 %9084, 5
  store i64 %9085, i64* %PC.i99
  %9086 = inttoptr i64 %9083 to double*
  %9087 = load double, double* %9086
  %9088 = bitcast i8* %9081 to double*
  store double %9087, double* %9088, align 1
  %9089 = getelementptr inbounds i8, i8* %9081, i64 8
  %9090 = bitcast i8* %9089 to double*
  store double 0.000000e+00, double* %9090, align 1
  store %struct.Memory* %loadMem_4014b4, %struct.Memory** %MEMORY
  %loadMem_4014b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9092 = getelementptr inbounds %struct.GPR, %struct.GPR* %9091, i32 0, i32 33
  %9093 = getelementptr inbounds %struct.Reg, %struct.Reg* %9092, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %9093 to i64*
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9095 = getelementptr inbounds %struct.GPR, %struct.GPR* %9094, i32 0, i32 15
  %9096 = getelementptr inbounds %struct.Reg, %struct.Reg* %9095, i32 0, i32 0
  %RBP.i97 = bitcast %union.anon* %9096 to i64*
  %9097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9098 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9097, i64 0, i64 3
  %YMM3.i98 = bitcast %union.VectorReg* %9098 to %"class.std::bitset"*
  %9099 = bitcast %"class.std::bitset"* %YMM3.i98 to i8*
  %9100 = load i64, i64* %RBP.i97
  %9101 = sub i64 %9100, 136
  %9102 = load i64, i64* %PC.i96
  %9103 = add i64 %9102, 8
  store i64 %9103, i64* %PC.i96
  %9104 = inttoptr i64 %9101 to double*
  %9105 = load double, double* %9104
  %9106 = bitcast i8* %9099 to double*
  store double %9105, double* %9106, align 1
  %9107 = getelementptr inbounds i8, i8* %9099, i64 8
  %9108 = bitcast i8* %9107 to double*
  store double 0.000000e+00, double* %9108, align 1
  store %struct.Memory* %loadMem_4014b9, %struct.Memory** %MEMORY
  %loadMem1_4014c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9110 = getelementptr inbounds %struct.GPR, %struct.GPR* %9109, i32 0, i32 33
  %9111 = getelementptr inbounds %struct.Reg, %struct.Reg* %9110, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %9111 to i64*
  %9112 = load i64, i64* %PC.i95
  %9113 = add i64 %9112, 287
  %9114 = load i64, i64* %PC.i95
  %9115 = add i64 %9114, 5
  %9116 = load i64, i64* %PC.i95
  %9117 = add i64 %9116, 5
  store i64 %9117, i64* %PC.i95
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9119 = load i64, i64* %9118, align 8
  %9120 = add i64 %9119, -8
  %9121 = inttoptr i64 %9120 to i64*
  store i64 %9115, i64* %9121
  store i64 %9120, i64* %9118, align 8
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9113, i64* %9122, align 8
  store %struct.Memory* %loadMem1_4014c1, %struct.Memory** %MEMORY
  %loadMem2_4014c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4014c1 = load i64, i64* %3
  %call2_4014c1 = call %struct.Memory* @sub_4015e0.POUT(%struct.State* %0, i64 %loadPC_4014c1, %struct.Memory* %loadMem2_4014c1)
  store %struct.Memory* %call2_4014c1, %struct.Memory** %MEMORY
  br label %block_.L_4014c6

block_.L_4014c6:                                  ; preds = %block_401496, %block_.L_401484
  %loadMem_4014c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9124 = getelementptr inbounds %struct.GPR, %struct.GPR* %9123, i32 0, i32 33
  %9125 = getelementptr inbounds %struct.Reg, %struct.Reg* %9124, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %9125 to i64*
  %9126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9127 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9126, i64 0, i64 0
  %YMM0.i94 = bitcast %union.VectorReg* %9127 to %"class.std::bitset"*
  %9128 = bitcast %"class.std::bitset"* %YMM0.i94 to i8*
  %9129 = load i64, i64* %PC.i93
  %9130 = add i64 %9129, 1130
  %9131 = load i64, i64* %PC.i93
  %9132 = add i64 %9131, 8
  store i64 %9132, i64* %PC.i93
  %9133 = inttoptr i64 %9130 to double*
  %9134 = load double, double* %9133
  %9135 = bitcast i8* %9128 to double*
  store double %9134, double* %9135, align 1
  %9136 = getelementptr inbounds i8, i8* %9128, i64 8
  %9137 = bitcast i8* %9136 to double*
  store double 0.000000e+00, double* %9137, align 1
  store %struct.Memory* %loadMem_4014c6, %struct.Memory** %MEMORY
  %loadMem_4014ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %9138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9139 = getelementptr inbounds %struct.GPR, %struct.GPR* %9138, i32 0, i32 33
  %9140 = getelementptr inbounds %struct.Reg, %struct.Reg* %9139, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %9140 to i64*
  %9141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9142 = getelementptr inbounds %struct.GPR, %struct.GPR* %9141, i32 0, i32 15
  %9143 = getelementptr inbounds %struct.Reg, %struct.Reg* %9142, i32 0, i32 0
  %RBP.i91 = bitcast %union.anon* %9143 to i64*
  %9144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9145 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9144, i64 0, i64 0
  %XMM0.i92 = bitcast %union.VectorReg* %9145 to %union.vec128_t*
  %9146 = load i64, i64* %RBP.i91
  %9147 = sub i64 %9146, 144
  %9148 = bitcast %union.vec128_t* %XMM0.i92 to i8*
  %9149 = load i64, i64* %PC.i90
  %9150 = add i64 %9149, 8
  store i64 %9150, i64* %PC.i90
  %9151 = bitcast i8* %9148 to double*
  %9152 = load double, double* %9151, align 1
  %9153 = inttoptr i64 %9147 to double*
  store double %9152, double* %9153
  store %struct.Memory* %loadMem_4014ce, %struct.Memory** %MEMORY
  %loadMem_4014d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9155 = getelementptr inbounds %struct.GPR, %struct.GPR* %9154, i32 0, i32 33
  %9156 = getelementptr inbounds %struct.Reg, %struct.Reg* %9155, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %9156 to i64*
  %9157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9158 = getelementptr inbounds %struct.GPR, %struct.GPR* %9157, i32 0, i32 15
  %9159 = getelementptr inbounds %struct.Reg, %struct.Reg* %9158, i32 0, i32 0
  %RBP.i89 = bitcast %union.anon* %9159 to i64*
  %9160 = load i64, i64* %RBP.i89
  %9161 = sub i64 %9160, 24
  %9162 = load i64, i64* %PC.i88
  %9163 = add i64 %9162, 8
  store i64 %9163, i64* %PC.i88
  %9164 = inttoptr i64 %9161 to i64*
  store i64 1, i64* %9164
  store %struct.Memory* %loadMem_4014d6, %struct.Memory** %MEMORY
  br label %block_.L_4014de

block_.L_4014de:                                  ; preds = %block_4014ec, %block_.L_4014c6
  %loadMem_4014de = load %struct.Memory*, %struct.Memory** %MEMORY
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9166 = getelementptr inbounds %struct.GPR, %struct.GPR* %9165, i32 0, i32 33
  %9167 = getelementptr inbounds %struct.Reg, %struct.Reg* %9166, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %9167 to i64*
  %9168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9169 = getelementptr inbounds %struct.GPR, %struct.GPR* %9168, i32 0, i32 1
  %9170 = getelementptr inbounds %struct.Reg, %struct.Reg* %9169, i32 0, i32 0
  %RAX.i86 = bitcast %union.anon* %9170 to i64*
  %9171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9172 = getelementptr inbounds %struct.GPR, %struct.GPR* %9171, i32 0, i32 15
  %9173 = getelementptr inbounds %struct.Reg, %struct.Reg* %9172, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %9173 to i64*
  %9174 = load i64, i64* %RBP.i87
  %9175 = sub i64 %9174, 24
  %9176 = load i64, i64* %PC.i85
  %9177 = add i64 %9176, 4
  store i64 %9177, i64* %PC.i85
  %9178 = inttoptr i64 %9175 to i64*
  %9179 = load i64, i64* %9178
  store i64 %9179, i64* %RAX.i86, align 8
  store %struct.Memory* %loadMem_4014de, %struct.Memory** %MEMORY
  %loadMem_4014e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 33
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %9182 to i64*
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9184 = getelementptr inbounds %struct.GPR, %struct.GPR* %9183, i32 0, i32 1
  %9185 = getelementptr inbounds %struct.Reg, %struct.Reg* %9184, i32 0, i32 0
  %RAX.i83 = bitcast %union.anon* %9185 to i64*
  %9186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9187 = getelementptr inbounds %struct.GPR, %struct.GPR* %9186, i32 0, i32 15
  %9188 = getelementptr inbounds %struct.Reg, %struct.Reg* %9187, i32 0, i32 0
  %RBP.i84 = bitcast %union.anon* %9188 to i64*
  %9189 = load i64, i64* %RAX.i83
  %9190 = load i64, i64* %RBP.i84
  %9191 = sub i64 %9190, 104
  %9192 = load i64, i64* %PC.i82
  %9193 = add i64 %9192, 4
  store i64 %9193, i64* %PC.i82
  %9194 = inttoptr i64 %9191 to i64*
  %9195 = load i64, i64* %9194
  %9196 = sub i64 %9189, %9195
  %9197 = icmp ugt i64 %9195, %9189
  %9198 = zext i1 %9197 to i8
  %9199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9198, i8* %9199, align 1
  %9200 = trunc i64 %9196 to i32
  %9201 = and i32 %9200, 255
  %9202 = call i32 @llvm.ctpop.i32(i32 %9201)
  %9203 = trunc i32 %9202 to i8
  %9204 = and i8 %9203, 1
  %9205 = xor i8 %9204, 1
  %9206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9205, i8* %9206, align 1
  %9207 = xor i64 %9195, %9189
  %9208 = xor i64 %9207, %9196
  %9209 = lshr i64 %9208, 4
  %9210 = trunc i64 %9209 to i8
  %9211 = and i8 %9210, 1
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9211, i8* %9212, align 1
  %9213 = icmp eq i64 %9196, 0
  %9214 = zext i1 %9213 to i8
  %9215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9214, i8* %9215, align 1
  %9216 = lshr i64 %9196, 63
  %9217 = trunc i64 %9216 to i8
  %9218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9217, i8* %9218, align 1
  %9219 = lshr i64 %9189, 63
  %9220 = lshr i64 %9195, 63
  %9221 = xor i64 %9220, %9219
  %9222 = xor i64 %9216, %9219
  %9223 = add i64 %9222, %9221
  %9224 = icmp eq i64 %9223, 2
  %9225 = zext i1 %9224 to i8
  %9226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9225, i8* %9226, align 1
  store %struct.Memory* %loadMem_4014e2, %struct.Memory** %MEMORY
  %loadMem_4014e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9228 = getelementptr inbounds %struct.GPR, %struct.GPR* %9227, i32 0, i32 33
  %9229 = getelementptr inbounds %struct.Reg, %struct.Reg* %9228, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %9229 to i64*
  %9230 = load i64, i64* %PC.i81
  %9231 = add i64 %9230, 63
  %9232 = load i64, i64* %PC.i81
  %9233 = add i64 %9232, 6
  %9234 = load i64, i64* %PC.i81
  %9235 = add i64 %9234, 6
  store i64 %9235, i64* %PC.i81
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9237 = load i8, i8* %9236, align 1
  %9238 = icmp eq i8 %9237, 0
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9240 = load i8, i8* %9239, align 1
  %9241 = icmp ne i8 %9240, 0
  %9242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9243 = load i8, i8* %9242, align 1
  %9244 = icmp ne i8 %9243, 0
  %9245 = xor i1 %9241, %9244
  %9246 = xor i1 %9245, true
  %9247 = and i1 %9238, %9246
  %9248 = zext i1 %9247 to i8
  store i8 %9248, i8* %BRANCH_TAKEN, align 1
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9250 = select i1 %9247, i64 %9231, i64 %9233
  store i64 %9250, i64* %9249, align 8
  store %struct.Memory* %loadMem_4014e6, %struct.Memory** %MEMORY
  %loadBr_4014e6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4014e6 = icmp eq i8 %loadBr_4014e6, 1
  br i1 %cmpBr_4014e6, label %block_.L_401525, label %block_4014ec

block_4014ec:                                     ; preds = %block_.L_4014de
  %loadMem_4014ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9252 = getelementptr inbounds %struct.GPR, %struct.GPR* %9251, i32 0, i32 33
  %9253 = getelementptr inbounds %struct.Reg, %struct.Reg* %9252, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %9253 to i64*
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9255 = getelementptr inbounds %struct.GPR, %struct.GPR* %9254, i32 0, i32 15
  %9256 = getelementptr inbounds %struct.Reg, %struct.Reg* %9255, i32 0, i32 0
  %RBP.i79 = bitcast %union.anon* %9256 to i64*
  %9257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9258 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9257, i64 0, i64 0
  %YMM0.i80 = bitcast %union.VectorReg* %9258 to %"class.std::bitset"*
  %9259 = bitcast %"class.std::bitset"* %YMM0.i80 to i8*
  %9260 = load i64, i64* %RBP.i79
  %9261 = sub i64 %9260, 144
  %9262 = load i64, i64* %PC.i78
  %9263 = add i64 %9262, 8
  store i64 %9263, i64* %PC.i78
  %9264 = inttoptr i64 %9261 to double*
  %9265 = load double, double* %9264
  %9266 = bitcast i8* %9259 to double*
  store double %9265, double* %9266, align 1
  %9267 = getelementptr inbounds i8, i8* %9259, i64 8
  %9268 = bitcast i8* %9267 to double*
  store double 0.000000e+00, double* %9268, align 1
  store %struct.Memory* %loadMem_4014ec, %struct.Memory** %MEMORY
  %loadMem1_4014f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9270 = getelementptr inbounds %struct.GPR, %struct.GPR* %9269, i32 0, i32 33
  %9271 = getelementptr inbounds %struct.Reg, %struct.Reg* %9270, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %9271 to i64*
  %9272 = load i64, i64* %PC.i77
  %9273 = add i64 %9272, -3588
  %9274 = load i64, i64* %PC.i77
  %9275 = add i64 %9274, 5
  %9276 = load i64, i64* %PC.i77
  %9277 = add i64 %9276, 5
  store i64 %9277, i64* %PC.i77
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9279 = load i64, i64* %9278, align 8
  %9280 = add i64 %9279, -8
  %9281 = inttoptr i64 %9280 to i64*
  store i64 %9275, i64* %9281
  store i64 %9280, i64* %9278, align 8
  %9282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9273, i64* %9282, align 8
  store %struct.Memory* %loadMem1_4014f4, %struct.Memory** %MEMORY
  %loadMem2_4014f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4014f4 = load i64, i64* %3
  %call2_4014f4 = call %struct.Memory* @sub_4006f0.log_plt(%struct.State* %0, i64 %loadPC_4014f4, %struct.Memory* %loadMem2_4014f4)
  store %struct.Memory* %call2_4014f4, %struct.Memory** %MEMORY
  %loadMem_4014f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9284 = getelementptr inbounds %struct.GPR, %struct.GPR* %9283, i32 0, i32 33
  %9285 = getelementptr inbounds %struct.Reg, %struct.Reg* %9284, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %9285 to i64*
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9286, i64 0, i64 0
  %YMM0.i76 = bitcast %union.VectorReg* %9287 to %"class.std::bitset"*
  %9288 = bitcast %"class.std::bitset"* %YMM0.i76 to i8*
  %9289 = bitcast %"class.std::bitset"* %YMM0.i76 to i8*
  %9290 = load i64, i64* %PC.i75
  %9291 = add i64 %9290, 9
  store i64 %9291, i64* %PC.i75
  %9292 = bitcast i8* %9289 to double*
  %9293 = load double, double* %9292, align 1
  %9294 = getelementptr inbounds i8, i8* %9289, i64 8
  %9295 = bitcast i8* %9294 to i64*
  %9296 = load i64, i64* %9295, align 1
  %9297 = load double, double* inttoptr (i64 6299808 to double*)
  %9298 = fdiv double %9293, %9297
  %9299 = bitcast i8* %9288 to double*
  store double %9298, double* %9299, align 1
  %9300 = getelementptr inbounds i8, i8* %9288, i64 8
  %9301 = bitcast i8* %9300 to i64*
  store i64 %9296, i64* %9301, align 1
  store %struct.Memory* %loadMem_4014f9, %struct.Memory** %MEMORY
  %loadMem1_401502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9303 = getelementptr inbounds %struct.GPR, %struct.GPR* %9302, i32 0, i32 33
  %9304 = getelementptr inbounds %struct.Reg, %struct.Reg* %9303, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %9304 to i64*
  %9305 = load i64, i64* %PC.i74
  %9306 = add i64 %9305, -3650
  %9307 = load i64, i64* %PC.i74
  %9308 = add i64 %9307, 5
  %9309 = load i64, i64* %PC.i74
  %9310 = add i64 %9309, 5
  store i64 %9310, i64* %PC.i74
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9312 = load i64, i64* %9311, align 8
  %9313 = add i64 %9312, -8
  %9314 = inttoptr i64 %9313 to i64*
  store i64 %9308, i64* %9314
  store i64 %9313, i64* %9311, align 8
  %9315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9306, i64* %9315, align 8
  store %struct.Memory* %loadMem1_401502, %struct.Memory** %MEMORY
  %loadMem2_401502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401502 = load i64, i64* %3
  %call2_401502 = call %struct.Memory* @sub_4006c0.exp_plt(%struct.State* %0, i64 %loadPC_401502, %struct.Memory* %loadMem2_401502)
  store %struct.Memory* %call2_401502, %struct.Memory** %MEMORY
  %loadMem1_401507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9317 = getelementptr inbounds %struct.GPR, %struct.GPR* %9316, i32 0, i32 33
  %9318 = getelementptr inbounds %struct.Reg, %struct.Reg* %9317, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %9318 to i64*
  %9319 = load i64, i64* %PC.i73
  %9320 = add i64 %9319, -3511
  %9321 = load i64, i64* %PC.i73
  %9322 = add i64 %9321, 5
  %9323 = load i64, i64* %PC.i73
  %9324 = add i64 %9323, 5
  store i64 %9324, i64* %PC.i73
  %9325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9326 = load i64, i64* %9325, align 8
  %9327 = add i64 %9326, -8
  %9328 = inttoptr i64 %9327 to i64*
  store i64 %9322, i64* %9328
  store i64 %9327, i64* %9325, align 8
  %9329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9320, i64* %9329, align 8
  store %struct.Memory* %loadMem1_401507, %struct.Memory** %MEMORY
  %loadMem2_401507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401507 = load i64, i64* %3
  %call2_401507 = call %struct.Memory* @sub_400750.sqrt_plt(%struct.State* %0, i64 %loadPC_401507, %struct.Memory* %loadMem2_401507)
  store %struct.Memory* %call2_401507, %struct.Memory** %MEMORY
  %loadMem_40150c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9331 = getelementptr inbounds %struct.GPR, %struct.GPR* %9330, i32 0, i32 33
  %9332 = getelementptr inbounds %struct.Reg, %struct.Reg* %9331, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %9332 to i64*
  %9333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9334 = getelementptr inbounds %struct.GPR, %struct.GPR* %9333, i32 0, i32 15
  %9335 = getelementptr inbounds %struct.Reg, %struct.Reg* %9334, i32 0, i32 0
  %RBP.i72 = bitcast %union.anon* %9335 to i64*
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9337 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9336, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %9337 to %union.vec128_t*
  %9338 = load i64, i64* %RBP.i72
  %9339 = sub i64 %9338, 144
  %9340 = bitcast %union.vec128_t* %XMM0.i to i8*
  %9341 = load i64, i64* %PC.i71
  %9342 = add i64 %9341, 8
  store i64 %9342, i64* %PC.i71
  %9343 = bitcast i8* %9340 to double*
  %9344 = load double, double* %9343, align 1
  %9345 = inttoptr i64 %9339 to double*
  store double %9344, double* %9345
  store %struct.Memory* %loadMem_40150c, %struct.Memory** %MEMORY
  %loadMem_401514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9347 = getelementptr inbounds %struct.GPR, %struct.GPR* %9346, i32 0, i32 33
  %9348 = getelementptr inbounds %struct.Reg, %struct.Reg* %9347, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %9348 to i64*
  %9349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9350 = getelementptr inbounds %struct.GPR, %struct.GPR* %9349, i32 0, i32 1
  %9351 = getelementptr inbounds %struct.Reg, %struct.Reg* %9350, i32 0, i32 0
  %RAX.i69 = bitcast %union.anon* %9351 to i64*
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9353 = getelementptr inbounds %struct.GPR, %struct.GPR* %9352, i32 0, i32 15
  %9354 = getelementptr inbounds %struct.Reg, %struct.Reg* %9353, i32 0, i32 0
  %RBP.i70 = bitcast %union.anon* %9354 to i64*
  %9355 = load i64, i64* %RBP.i70
  %9356 = sub i64 %9355, 24
  %9357 = load i64, i64* %PC.i68
  %9358 = add i64 %9357, 4
  store i64 %9358, i64* %PC.i68
  %9359 = inttoptr i64 %9356 to i64*
  %9360 = load i64, i64* %9359
  store i64 %9360, i64* %RAX.i69, align 8
  store %struct.Memory* %loadMem_401514, %struct.Memory** %MEMORY
  %loadMem_401518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9362 = getelementptr inbounds %struct.GPR, %struct.GPR* %9361, i32 0, i32 33
  %9363 = getelementptr inbounds %struct.Reg, %struct.Reg* %9362, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %9363 to i64*
  %9364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9365 = getelementptr inbounds %struct.GPR, %struct.GPR* %9364, i32 0, i32 1
  %9366 = getelementptr inbounds %struct.Reg, %struct.Reg* %9365, i32 0, i32 0
  %RAX.i67 = bitcast %union.anon* %9366 to i64*
  %9367 = load i64, i64* %RAX.i67
  %9368 = load i64, i64* %PC.i66
  %9369 = add i64 %9368, 4
  store i64 %9369, i64* %PC.i66
  %9370 = add i64 1, %9367
  store i64 %9370, i64* %RAX.i67, align 8
  %9371 = icmp ult i64 %9370, %9367
  %9372 = icmp ult i64 %9370, 1
  %9373 = or i1 %9371, %9372
  %9374 = zext i1 %9373 to i8
  %9375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9374, i8* %9375, align 1
  %9376 = trunc i64 %9370 to i32
  %9377 = and i32 %9376, 255
  %9378 = call i32 @llvm.ctpop.i32(i32 %9377)
  %9379 = trunc i32 %9378 to i8
  %9380 = and i8 %9379, 1
  %9381 = xor i8 %9380, 1
  %9382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9381, i8* %9382, align 1
  %9383 = xor i64 1, %9367
  %9384 = xor i64 %9383, %9370
  %9385 = lshr i64 %9384, 4
  %9386 = trunc i64 %9385 to i8
  %9387 = and i8 %9386, 1
  %9388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9387, i8* %9388, align 1
  %9389 = icmp eq i64 %9370, 0
  %9390 = zext i1 %9389 to i8
  %9391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9390, i8* %9391, align 1
  %9392 = lshr i64 %9370, 63
  %9393 = trunc i64 %9392 to i8
  %9394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9393, i8* %9394, align 1
  %9395 = lshr i64 %9367, 63
  %9396 = xor i64 %9392, %9395
  %9397 = add i64 %9396, %9392
  %9398 = icmp eq i64 %9397, 2
  %9399 = zext i1 %9398 to i8
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9399, i8* %9400, align 1
  store %struct.Memory* %loadMem_401518, %struct.Memory** %MEMORY
  %loadMem_40151c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 33
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 1
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %RAX.i64 = bitcast %union.anon* %9406 to i64*
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 15
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %RBP.i65 = bitcast %union.anon* %9409 to i64*
  %9410 = load i64, i64* %RBP.i65
  %9411 = sub i64 %9410, 24
  %9412 = load i64, i64* %RAX.i64
  %9413 = load i64, i64* %PC.i63
  %9414 = add i64 %9413, 4
  store i64 %9414, i64* %PC.i63
  %9415 = inttoptr i64 %9411 to i64*
  store i64 %9412, i64* %9415
  store %struct.Memory* %loadMem_40151c, %struct.Memory** %MEMORY
  %loadMem_401520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9417 = getelementptr inbounds %struct.GPR, %struct.GPR* %9416, i32 0, i32 33
  %9418 = getelementptr inbounds %struct.Reg, %struct.Reg* %9417, i32 0, i32 0
  %PC.i62 = bitcast %union.anon* %9418 to i64*
  %9419 = load i64, i64* %PC.i62
  %9420 = add i64 %9419, -66
  %9421 = load i64, i64* %PC.i62
  %9422 = add i64 %9421, 5
  store i64 %9422, i64* %PC.i62
  %9423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9420, i64* %9423, align 8
  store %struct.Memory* %loadMem_401520, %struct.Memory** %MEMORY
  br label %block_.L_4014de

block_.L_401525:                                  ; preds = %block_.L_4014de
  %loadMem_401525 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9425 = getelementptr inbounds %struct.GPR, %struct.GPR* %9424, i32 0, i32 33
  %9426 = getelementptr inbounds %struct.Reg, %struct.Reg* %9425, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %9426 to i64*
  %9427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9428 = getelementptr inbounds %struct.GPR, %struct.GPR* %9427, i32 0, i32 1
  %9429 = getelementptr inbounds %struct.Reg, %struct.Reg* %9428, i32 0, i32 0
  %RAX.i60 = bitcast %union.anon* %9429 to i64*
  %9430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9431 = getelementptr inbounds %struct.GPR, %struct.GPR* %9430, i32 0, i32 15
  %9432 = getelementptr inbounds %struct.Reg, %struct.Reg* %9431, i32 0, i32 0
  %RBP.i61 = bitcast %union.anon* %9432 to i64*
  %9433 = load i64, i64* %RBP.i61
  %9434 = sub i64 %9433, 176
  %9435 = load i64, i64* %PC.i59
  %9436 = add i64 %9435, 6
  store i64 %9436, i64* %PC.i59
  %9437 = inttoptr i64 %9434 to i32*
  %9438 = load i32, i32* %9437
  %9439 = zext i32 %9438 to i64
  store i64 %9439, i64* %RAX.i60, align 8
  store %struct.Memory* %loadMem_401525, %struct.Memory** %MEMORY
  %loadMem_40152b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9441 = getelementptr inbounds %struct.GPR, %struct.GPR* %9440, i32 0, i32 33
  %9442 = getelementptr inbounds %struct.Reg, %struct.Reg* %9441, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %9442 to i64*
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9444 = getelementptr inbounds %struct.GPR, %struct.GPR* %9443, i32 0, i32 1
  %9445 = getelementptr inbounds %struct.Reg, %struct.Reg* %9444, i32 0, i32 0
  %EAX.i57 = bitcast %union.anon* %9445 to i32*
  %9446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9447 = getelementptr inbounds %struct.GPR, %struct.GPR* %9446, i32 0, i32 15
  %9448 = getelementptr inbounds %struct.Reg, %struct.Reg* %9447, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %9448 to i64*
  %9449 = load i32, i32* %EAX.i57
  %9450 = zext i32 %9449 to i64
  %9451 = load i64, i64* %RBP.i58
  %9452 = sub i64 %9451, 172
  %9453 = load i64, i64* %PC.i56
  %9454 = add i64 %9453, 6
  store i64 %9454, i64* %PC.i56
  %9455 = inttoptr i64 %9452 to i32*
  %9456 = load i32, i32* %9455
  %9457 = sub i32 %9449, %9456
  %9458 = icmp ult i32 %9449, %9456
  %9459 = zext i1 %9458 to i8
  %9460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9459, i8* %9460, align 1
  %9461 = and i32 %9457, 255
  %9462 = call i32 @llvm.ctpop.i32(i32 %9461)
  %9463 = trunc i32 %9462 to i8
  %9464 = and i8 %9463, 1
  %9465 = xor i8 %9464, 1
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9465, i8* %9466, align 1
  %9467 = xor i32 %9456, %9449
  %9468 = xor i32 %9467, %9457
  %9469 = lshr i32 %9468, 4
  %9470 = trunc i32 %9469 to i8
  %9471 = and i8 %9470, 1
  %9472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9471, i8* %9472, align 1
  %9473 = icmp eq i32 %9457, 0
  %9474 = zext i1 %9473 to i8
  %9475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9474, i8* %9475, align 1
  %9476 = lshr i32 %9457, 31
  %9477 = trunc i32 %9476 to i8
  %9478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9477, i8* %9478, align 1
  %9479 = lshr i32 %9449, 31
  %9480 = lshr i32 %9456, 31
  %9481 = xor i32 %9480, %9479
  %9482 = xor i32 %9476, %9479
  %9483 = add i32 %9482, %9481
  %9484 = icmp eq i32 %9483, 2
  %9485 = zext i1 %9484 to i8
  %9486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9485, i8* %9486, align 1
  store %struct.Memory* %loadMem_40152b, %struct.Memory** %MEMORY
  %loadMem_401531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9488 = getelementptr inbounds %struct.GPR, %struct.GPR* %9487, i32 0, i32 33
  %9489 = getelementptr inbounds %struct.Reg, %struct.Reg* %9488, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %9489 to i64*
  %9490 = load i64, i64* %PC.i55
  %9491 = add i64 %9490, 63
  %9492 = load i64, i64* %PC.i55
  %9493 = add i64 %9492, 6
  %9494 = load i64, i64* %PC.i55
  %9495 = add i64 %9494, 6
  store i64 %9495, i64* %PC.i55
  %9496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9497 = load i8, i8* %9496, align 1
  %9498 = icmp eq i8 %9497, 0
  %9499 = zext i1 %9498 to i8
  store i8 %9499, i8* %BRANCH_TAKEN, align 1
  %9500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9501 = select i1 %9498, i64 %9491, i64 %9493
  store i64 %9501, i64* %9500, align 8
  store %struct.Memory* %loadMem_401531, %struct.Memory** %MEMORY
  %loadBr_401531 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401531 = icmp eq i8 %loadBr_401531, 1
  br i1 %cmpBr_401531, label %block_.L_401570, label %block_401537

block_401537:                                     ; preds = %block_.L_401525
  %loadMem_401537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9503 = getelementptr inbounds %struct.GPR, %struct.GPR* %9502, i32 0, i32 33
  %9504 = getelementptr inbounds %struct.Reg, %struct.Reg* %9503, i32 0, i32 0
  %PC.i52 = bitcast %union.anon* %9504 to i64*
  %9505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9506 = getelementptr inbounds %struct.GPR, %struct.GPR* %9505, i32 0, i32 11
  %9507 = getelementptr inbounds %struct.Reg, %struct.Reg* %9506, i32 0, i32 0
  %RDI.i53 = bitcast %union.anon* %9507 to i64*
  %9508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9509 = getelementptr inbounds %struct.GPR, %struct.GPR* %9508, i32 0, i32 15
  %9510 = getelementptr inbounds %struct.Reg, %struct.Reg* %9509, i32 0, i32 0
  %RBP.i54 = bitcast %union.anon* %9510 to i64*
  %9511 = load i64, i64* %RBP.i54
  %9512 = sub i64 %9511, 104
  %9513 = load i64, i64* %PC.i52
  %9514 = add i64 %9513, 4
  store i64 %9514, i64* %PC.i52
  %9515 = inttoptr i64 %9512 to i64*
  %9516 = load i64, i64* %9515
  store i64 %9516, i64* %RDI.i53, align 8
  store %struct.Memory* %loadMem_401537, %struct.Memory** %MEMORY
  %loadMem_40153b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9518 = getelementptr inbounds %struct.GPR, %struct.GPR* %9517, i32 0, i32 33
  %9519 = getelementptr inbounds %struct.Reg, %struct.Reg* %9518, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %9519 to i64*
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9521 = getelementptr inbounds %struct.GPR, %struct.GPR* %9520, i32 0, i32 9
  %9522 = getelementptr inbounds %struct.Reg, %struct.Reg* %9521, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %9522 to i64*
  %9523 = load i64, i64* %PC.i51
  %9524 = add i64 %9523, 8
  store i64 %9524, i64* %PC.i51
  %9525 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %9526 = sext i32 %9525 to i64
  store i64 %9526, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_40153b, %struct.Memory** %MEMORY
  %loadMem_401543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9528 = getelementptr inbounds %struct.GPR, %struct.GPR* %9527, i32 0, i32 33
  %9529 = getelementptr inbounds %struct.Reg, %struct.Reg* %9528, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %9529 to i64*
  %9530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9531 = getelementptr inbounds %struct.GPR, %struct.GPR* %9530, i32 0, i32 7
  %9532 = getelementptr inbounds %struct.Reg, %struct.Reg* %9531, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9532 to i64*
  %9533 = load i64, i64* %PC.i50
  %9534 = add i64 %9533, 8
  store i64 %9534, i64* %PC.i50
  %9535 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %9536 = sext i32 %9535 to i64
  store i64 %9536, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_401543, %struct.Memory** %MEMORY
  %loadMem_40154b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9538 = getelementptr inbounds %struct.GPR, %struct.GPR* %9537, i32 0, i32 33
  %9539 = getelementptr inbounds %struct.Reg, %struct.Reg* %9538, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %9539 to i64*
  %9540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9541 = getelementptr inbounds %struct.GPR, %struct.GPR* %9540, i32 0, i32 15
  %9542 = getelementptr inbounds %struct.Reg, %struct.Reg* %9541, i32 0, i32 0
  %RBP.i49 = bitcast %union.anon* %9542 to i64*
  %9543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9544 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9543, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %9544 to %"class.std::bitset"*
  %9545 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %9546 = load i64, i64* %RBP.i49
  %9547 = sub i64 %9546, 144
  %9548 = load i64, i64* %PC.i48
  %9549 = add i64 %9548, 8
  store i64 %9549, i64* %PC.i48
  %9550 = inttoptr i64 %9547 to double*
  %9551 = load double, double* %9550
  %9552 = bitcast i8* %9545 to double*
  store double %9551, double* %9552, align 1
  %9553 = getelementptr inbounds i8, i8* %9545, i64 8
  %9554 = bitcast i8* %9553 to double*
  store double 0.000000e+00, double* %9554, align 1
  store %struct.Memory* %loadMem_40154b, %struct.Memory** %MEMORY
  %loadMem_401553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9556 = getelementptr inbounds %struct.GPR, %struct.GPR* %9555, i32 0, i32 33
  %9557 = getelementptr inbounds %struct.Reg, %struct.Reg* %9556, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %9557 to i64*
  %9558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9559 = getelementptr inbounds %struct.GPR, %struct.GPR* %9558, i32 0, i32 15
  %9560 = getelementptr inbounds %struct.Reg, %struct.Reg* %9559, i32 0, i32 0
  %RBP.i47 = bitcast %union.anon* %9560 to i64*
  %9561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9562 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9561, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %9562 to %"class.std::bitset"*
  %9563 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %9564 = load i64, i64* %RBP.i47
  %9565 = sub i64 %9564, 144
  %9566 = load i64, i64* %PC.i46
  %9567 = add i64 %9566, 8
  store i64 %9567, i64* %PC.i46
  %9568 = inttoptr i64 %9565 to double*
  %9569 = load double, double* %9568
  %9570 = bitcast i8* %9563 to double*
  store double %9569, double* %9570, align 1
  %9571 = getelementptr inbounds i8, i8* %9563, i64 8
  %9572 = bitcast i8* %9571 to double*
  store double 0.000000e+00, double* %9572, align 1
  store %struct.Memory* %loadMem_401553, %struct.Memory** %MEMORY
  %loadMem_40155b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9574 = getelementptr inbounds %struct.GPR, %struct.GPR* %9573, i32 0, i32 33
  %9575 = getelementptr inbounds %struct.Reg, %struct.Reg* %9574, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %9575 to i64*
  %9576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9577 = getelementptr inbounds %struct.GPR, %struct.GPR* %9576, i32 0, i32 15
  %9578 = getelementptr inbounds %struct.Reg, %struct.Reg* %9577, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %9578 to i64*
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9580 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9579, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %9580 to %"class.std::bitset"*
  %9581 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %9582 = load i64, i64* %RBP.i45
  %9583 = sub i64 %9582, 144
  %9584 = load i64, i64* %PC.i44
  %9585 = add i64 %9584, 8
  store i64 %9585, i64* %PC.i44
  %9586 = inttoptr i64 %9583 to double*
  %9587 = load double, double* %9586
  %9588 = bitcast i8* %9581 to double*
  store double %9587, double* %9588, align 1
  %9589 = getelementptr inbounds i8, i8* %9581, i64 8
  %9590 = bitcast i8* %9589 to double*
  store double 0.000000e+00, double* %9590, align 1
  store %struct.Memory* %loadMem_40155b, %struct.Memory** %MEMORY
  %loadMem_401563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9592 = getelementptr inbounds %struct.GPR, %struct.GPR* %9591, i32 0, i32 33
  %9593 = getelementptr inbounds %struct.Reg, %struct.Reg* %9592, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %9593 to i64*
  %9594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9595 = getelementptr inbounds %struct.GPR, %struct.GPR* %9594, i32 0, i32 15
  %9596 = getelementptr inbounds %struct.Reg, %struct.Reg* %9595, i32 0, i32 0
  %RBP.i43 = bitcast %union.anon* %9596 to i64*
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9598 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9597, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %9598 to %"class.std::bitset"*
  %9599 = bitcast %"class.std::bitset"* %YMM3.i to i8*
  %9600 = load i64, i64* %RBP.i43
  %9601 = sub i64 %9600, 144
  %9602 = load i64, i64* %PC.i42
  %9603 = add i64 %9602, 8
  store i64 %9603, i64* %PC.i42
  %9604 = inttoptr i64 %9601 to double*
  %9605 = load double, double* %9604
  %9606 = bitcast i8* %9599 to double*
  store double %9605, double* %9606, align 1
  %9607 = getelementptr inbounds i8, i8* %9599, i64 8
  %9608 = bitcast i8* %9607 to double*
  store double 0.000000e+00, double* %9608, align 1
  store %struct.Memory* %loadMem_401563, %struct.Memory** %MEMORY
  %loadMem1_40156b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9610 = getelementptr inbounds %struct.GPR, %struct.GPR* %9609, i32 0, i32 33
  %9611 = getelementptr inbounds %struct.Reg, %struct.Reg* %9610, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %9611 to i64*
  %9612 = load i64, i64* %PC.i41
  %9613 = add i64 %9612, 117
  %9614 = load i64, i64* %PC.i41
  %9615 = add i64 %9614, 5
  %9616 = load i64, i64* %PC.i41
  %9617 = add i64 %9616, 5
  store i64 %9617, i64* %PC.i41
  %9618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9619 = load i64, i64* %9618, align 8
  %9620 = add i64 %9619, -8
  %9621 = inttoptr i64 %9620 to i64*
  store i64 %9615, i64* %9621
  store i64 %9620, i64* %9618, align 8
  %9622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9613, i64* %9622, align 8
  store %struct.Memory* %loadMem1_40156b, %struct.Memory** %MEMORY
  %loadMem2_40156b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40156b = load i64, i64* %3
  %call2_40156b = call %struct.Memory* @sub_4015e0.POUT(%struct.State* %0, i64 %loadPC_40156b, %struct.Memory* %loadMem2_40156b)
  store %struct.Memory* %call2_40156b, %struct.Memory** %MEMORY
  br label %block_.L_401570

block_.L_401570:                                  ; preds = %block_401537, %block_.L_401525
  %loadMem_401570 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9624 = getelementptr inbounds %struct.GPR, %struct.GPR* %9623, i32 0, i32 33
  %9625 = getelementptr inbounds %struct.Reg, %struct.Reg* %9624, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %9625 to i64*
  %9626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9627 = getelementptr inbounds %struct.GPR, %struct.GPR* %9626, i32 0, i32 1
  %9628 = getelementptr inbounds %struct.Reg, %struct.Reg* %9627, i32 0, i32 0
  %RAX.i39 = bitcast %union.anon* %9628 to i64*
  %9629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9630 = getelementptr inbounds %struct.GPR, %struct.GPR* %9629, i32 0, i32 15
  %9631 = getelementptr inbounds %struct.Reg, %struct.Reg* %9630, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %9631 to i64*
  %9632 = load i64, i64* %RBP.i40
  %9633 = sub i64 %9632, 176
  %9634 = load i64, i64* %PC.i38
  %9635 = add i64 %9634, 6
  store i64 %9635, i64* %PC.i38
  %9636 = inttoptr i64 %9633 to i32*
  %9637 = load i32, i32* %9636
  %9638 = zext i32 %9637 to i64
  store i64 %9638, i64* %RAX.i39, align 8
  store %struct.Memory* %loadMem_401570, %struct.Memory** %MEMORY
  %loadMem_401576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9640 = getelementptr inbounds %struct.GPR, %struct.GPR* %9639, i32 0, i32 33
  %9641 = getelementptr inbounds %struct.Reg, %struct.Reg* %9640, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %9641 to i64*
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9643 = getelementptr inbounds %struct.GPR, %struct.GPR* %9642, i32 0, i32 1
  %9644 = getelementptr inbounds %struct.Reg, %struct.Reg* %9643, i32 0, i32 0
  %RAX.i37 = bitcast %union.anon* %9644 to i64*
  %9645 = load i64, i64* %RAX.i37
  %9646 = load i64, i64* %PC.i36
  %9647 = add i64 %9646, 3
  store i64 %9647, i64* %PC.i36
  %9648 = trunc i64 %9645 to i32
  %9649 = add i32 1, %9648
  %9650 = zext i32 %9649 to i64
  store i64 %9650, i64* %RAX.i37, align 8
  %9651 = icmp ult i32 %9649, %9648
  %9652 = icmp ult i32 %9649, 1
  %9653 = or i1 %9651, %9652
  %9654 = zext i1 %9653 to i8
  %9655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9654, i8* %9655, align 1
  %9656 = and i32 %9649, 255
  %9657 = call i32 @llvm.ctpop.i32(i32 %9656)
  %9658 = trunc i32 %9657 to i8
  %9659 = and i8 %9658, 1
  %9660 = xor i8 %9659, 1
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9660, i8* %9661, align 1
  %9662 = xor i64 1, %9645
  %9663 = trunc i64 %9662 to i32
  %9664 = xor i32 %9663, %9649
  %9665 = lshr i32 %9664, 4
  %9666 = trunc i32 %9665 to i8
  %9667 = and i8 %9666, 1
  %9668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9667, i8* %9668, align 1
  %9669 = icmp eq i32 %9649, 0
  %9670 = zext i1 %9669 to i8
  %9671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9670, i8* %9671, align 1
  %9672 = lshr i32 %9649, 31
  %9673 = trunc i32 %9672 to i8
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9673, i8* %9674, align 1
  %9675 = lshr i32 %9648, 31
  %9676 = xor i32 %9672, %9675
  %9677 = add i32 %9676, %9672
  %9678 = icmp eq i32 %9677, 2
  %9679 = zext i1 %9678 to i8
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9679, i8* %9680, align 1
  store %struct.Memory* %loadMem_401576, %struct.Memory** %MEMORY
  %loadMem_401579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9682 = getelementptr inbounds %struct.GPR, %struct.GPR* %9681, i32 0, i32 33
  %9683 = getelementptr inbounds %struct.Reg, %struct.Reg* %9682, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %9683 to i64*
  %9684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9685 = getelementptr inbounds %struct.GPR, %struct.GPR* %9684, i32 0, i32 1
  %9686 = getelementptr inbounds %struct.Reg, %struct.Reg* %9685, i32 0, i32 0
  %EAX.i34 = bitcast %union.anon* %9686 to i32*
  %9687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9688 = getelementptr inbounds %struct.GPR, %struct.GPR* %9687, i32 0, i32 15
  %9689 = getelementptr inbounds %struct.Reg, %struct.Reg* %9688, i32 0, i32 0
  %RBP.i35 = bitcast %union.anon* %9689 to i64*
  %9690 = load i64, i64* %RBP.i35
  %9691 = sub i64 %9690, 176
  %9692 = load i32, i32* %EAX.i34
  %9693 = zext i32 %9692 to i64
  %9694 = load i64, i64* %PC.i33
  %9695 = add i64 %9694, 6
  store i64 %9695, i64* %PC.i33
  %9696 = inttoptr i64 %9691 to i32*
  store i32 %9692, i32* %9696
  store %struct.Memory* %loadMem_401579, %struct.Memory** %MEMORY
  %loadMem_40157f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9698 = getelementptr inbounds %struct.GPR, %struct.GPR* %9697, i32 0, i32 33
  %9699 = getelementptr inbounds %struct.Reg, %struct.Reg* %9698, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %9699 to i64*
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9701 = getelementptr inbounds %struct.GPR, %struct.GPR* %9700, i32 0, i32 1
  %9702 = getelementptr inbounds %struct.Reg, %struct.Reg* %9701, i32 0, i32 0
  %EAX.i31 = bitcast %union.anon* %9702 to i32*
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9704 = getelementptr inbounds %struct.GPR, %struct.GPR* %9703, i32 0, i32 15
  %9705 = getelementptr inbounds %struct.Reg, %struct.Reg* %9704, i32 0, i32 0
  %RBP.i32 = bitcast %union.anon* %9705 to i64*
  %9706 = load i32, i32* %EAX.i31
  %9707 = zext i32 %9706 to i64
  %9708 = load i64, i64* %RBP.i32
  %9709 = sub i64 %9708, 172
  %9710 = load i64, i64* %PC.i30
  %9711 = add i64 %9710, 6
  store i64 %9711, i64* %PC.i30
  %9712 = inttoptr i64 %9709 to i32*
  %9713 = load i32, i32* %9712
  %9714 = sub i32 %9706, %9713
  %9715 = icmp ult i32 %9706, %9713
  %9716 = zext i1 %9715 to i8
  %9717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9716, i8* %9717, align 1
  %9718 = and i32 %9714, 255
  %9719 = call i32 @llvm.ctpop.i32(i32 %9718)
  %9720 = trunc i32 %9719 to i8
  %9721 = and i8 %9720, 1
  %9722 = xor i8 %9721, 1
  %9723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9722, i8* %9723, align 1
  %9724 = xor i32 %9713, %9706
  %9725 = xor i32 %9724, %9714
  %9726 = lshr i32 %9725, 4
  %9727 = trunc i32 %9726 to i8
  %9728 = and i8 %9727, 1
  %9729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9728, i8* %9729, align 1
  %9730 = icmp eq i32 %9714, 0
  %9731 = zext i1 %9730 to i8
  %9732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9731, i8* %9732, align 1
  %9733 = lshr i32 %9714, 31
  %9734 = trunc i32 %9733 to i8
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9734, i8* %9735, align 1
  %9736 = lshr i32 %9706, 31
  %9737 = lshr i32 %9713, 31
  %9738 = xor i32 %9737, %9736
  %9739 = xor i32 %9733, %9736
  %9740 = add i32 %9739, %9738
  %9741 = icmp eq i32 %9740, 2
  %9742 = zext i1 %9741 to i8
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9742, i8* %9743, align 1
  store %struct.Memory* %loadMem_40157f, %struct.Memory** %MEMORY
  %loadMem_401585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9745 = getelementptr inbounds %struct.GPR, %struct.GPR* %9744, i32 0, i32 33
  %9746 = getelementptr inbounds %struct.Reg, %struct.Reg* %9745, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %9746 to i64*
  %9747 = load i64, i64* %PC.i29
  %9748 = add i64 %9747, 11
  %9749 = load i64, i64* %PC.i29
  %9750 = add i64 %9749, 6
  %9751 = load i64, i64* %PC.i29
  %9752 = add i64 %9751, 6
  store i64 %9752, i64* %PC.i29
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9754 = load i8, i8* %9753, align 1
  %9755 = icmp eq i8 %9754, 0
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9757 = load i8, i8* %9756, align 1
  %9758 = icmp ne i8 %9757, 0
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9760 = load i8, i8* %9759, align 1
  %9761 = icmp ne i8 %9760, 0
  %9762 = xor i1 %9758, %9761
  %9763 = xor i1 %9762, true
  %9764 = and i1 %9755, %9763
  %9765 = zext i1 %9764 to i8
  store i8 %9765, i8* %BRANCH_TAKEN, align 1
  %9766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9767 = select i1 %9764, i64 %9748, i64 %9750
  store i64 %9767, i64* %9766, align 8
  store %struct.Memory* %loadMem_401585, %struct.Memory** %MEMORY
  %loadBr_401585 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401585 = icmp eq i8 %loadBr_401585, 1
  br i1 %cmpBr_401585, label %block_.L_401590, label %block_40158b

block_40158b:                                     ; preds = %block_.L_401570
  %loadMem_40158b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9769 = getelementptr inbounds %struct.GPR, %struct.GPR* %9768, i32 0, i32 33
  %9770 = getelementptr inbounds %struct.Reg, %struct.Reg* %9769, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %9770 to i64*
  %9771 = load i64, i64* %PC.i28
  %9772 = add i64 %9771, -2992
  %9773 = load i64, i64* %PC.i28
  %9774 = add i64 %9773, 5
  store i64 %9774, i64* %PC.i28
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9772, i64* %9775, align 8
  store %struct.Memory* %loadMem_40158b, %struct.Memory** %MEMORY
  br label %block_.L_4009db

block_.L_401590:                                  ; preds = %block_.L_401570
  %loadMem_401590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9777 = getelementptr inbounds %struct.GPR, %struct.GPR* %9776, i32 0, i32 33
  %9778 = getelementptr inbounds %struct.Reg, %struct.Reg* %9777, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %9778 to i64*
  %9779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9780 = getelementptr inbounds %struct.GPR, %struct.GPR* %9779, i32 0, i32 1
  %9781 = getelementptr inbounds %struct.Reg, %struct.Reg* %9780, i32 0, i32 0
  %EAX.i26 = bitcast %union.anon* %9781 to i32*
  %9782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9783 = getelementptr inbounds %struct.GPR, %struct.GPR* %9782, i32 0, i32 1
  %9784 = getelementptr inbounds %struct.Reg, %struct.Reg* %9783, i32 0, i32 0
  %RAX.i27 = bitcast %union.anon* %9784 to i64*
  %9785 = load i64, i64* %RAX.i27
  %9786 = load i32, i32* %EAX.i26
  %9787 = zext i32 %9786 to i64
  %9788 = load i64, i64* %PC.i25
  %9789 = add i64 %9788, 2
  store i64 %9789, i64* %PC.i25
  %9790 = xor i64 %9787, %9785
  %9791 = trunc i64 %9790 to i32
  %9792 = and i64 %9790, 4294967295
  store i64 %9792, i64* %RAX.i27, align 8
  %9793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9793, align 1
  %9794 = and i32 %9791, 255
  %9795 = call i32 @llvm.ctpop.i32(i32 %9794)
  %9796 = trunc i32 %9795 to i8
  %9797 = and i8 %9796, 1
  %9798 = xor i8 %9797, 1
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9798, i8* %9799, align 1
  %9800 = icmp eq i32 %9791, 0
  %9801 = zext i1 %9800 to i8
  %9802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9801, i8* %9802, align 1
  %9803 = lshr i32 %9791, 31
  %9804 = trunc i32 %9803 to i8
  %9805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9804, i8* %9805, align 1
  %9806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9806, align 1
  %9807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9807, align 1
  store %struct.Memory* %loadMem_401590, %struct.Memory** %MEMORY
  %loadMem_401592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9809 = getelementptr inbounds %struct.GPR, %struct.GPR* %9808, i32 0, i32 33
  %9810 = getelementptr inbounds %struct.Reg, %struct.Reg* %9809, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %9810 to i64*
  %9811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9812 = getelementptr inbounds %struct.GPR, %struct.GPR* %9811, i32 0, i32 1
  %9813 = getelementptr inbounds %struct.Reg, %struct.Reg* %9812, i32 0, i32 0
  %EAX.i23 = bitcast %union.anon* %9813 to i32*
  %9814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9815 = getelementptr inbounds %struct.GPR, %struct.GPR* %9814, i32 0, i32 11
  %9816 = getelementptr inbounds %struct.Reg, %struct.Reg* %9815, i32 0, i32 0
  %RDI.i24 = bitcast %union.anon* %9816 to i64*
  %9817 = load i32, i32* %EAX.i23
  %9818 = zext i32 %9817 to i64
  %9819 = load i64, i64* %PC.i22
  %9820 = add i64 %9819, 2
  store i64 %9820, i64* %PC.i22
  %9821 = and i64 %9818, 4294967295
  store i64 %9821, i64* %RDI.i24, align 8
  store %struct.Memory* %loadMem_401592, %struct.Memory** %MEMORY
  %loadMem1_401594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9823 = getelementptr inbounds %struct.GPR, %struct.GPR* %9822, i32 0, i32 33
  %9824 = getelementptr inbounds %struct.Reg, %struct.Reg* %9823, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %9824 to i64*
  %9825 = load i64, i64* %PC.i21
  %9826 = add i64 %9825, -3700
  %9827 = load i64, i64* %PC.i21
  %9828 = add i64 %9827, 5
  %9829 = load i64, i64* %PC.i21
  %9830 = add i64 %9829, 5
  store i64 %9830, i64* %PC.i21
  %9831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9832 = load i64, i64* %9831, align 8
  %9833 = add i64 %9832, -8
  %9834 = inttoptr i64 %9833 to i64*
  store i64 %9828, i64* %9834
  store i64 %9833, i64* %9831, align 8
  %9835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9826, i64* %9835, align 8
  store %struct.Memory* %loadMem1_401594, %struct.Memory** %MEMORY
  %loadMem2_401594 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401594 = load i64, i64* %3
  %call2_401594 = call %struct.Memory* @sub_400720.time_plt(%struct.State* %0, i64 %loadPC_401594, %struct.Memory* %loadMem2_401594)
  store %struct.Memory* %call2_401594, %struct.Memory** %MEMORY
  %loadMem_401599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9837 = getelementptr inbounds %struct.GPR, %struct.GPR* %9836, i32 0, i32 33
  %9838 = getelementptr inbounds %struct.Reg, %struct.Reg* %9837, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %9838 to i64*
  %9839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9840 = getelementptr inbounds %struct.GPR, %struct.GPR* %9839, i32 0, i32 11
  %9841 = getelementptr inbounds %struct.Reg, %struct.Reg* %9840, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %9841 to i64*
  %9842 = load i64, i64* %PC.i20
  %9843 = add i64 %9842, 10
  store i64 %9843, i64* %PC.i20
  store i64 4200789, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_401599, %struct.Memory** %MEMORY
  %loadMem_4015a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9845 = getelementptr inbounds %struct.GPR, %struct.GPR* %9844, i32 0, i32 33
  %9846 = getelementptr inbounds %struct.Reg, %struct.Reg* %9845, i32 0, i32 0
  %PC.i17 = bitcast %union.anon* %9846 to i64*
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9848 = getelementptr inbounds %struct.GPR, %struct.GPR* %9847, i32 0, i32 1
  %9849 = getelementptr inbounds %struct.Reg, %struct.Reg* %9848, i32 0, i32 0
  %RAX.i18 = bitcast %union.anon* %9849 to i64*
  %9850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9851 = getelementptr inbounds %struct.GPR, %struct.GPR* %9850, i32 0, i32 15
  %9852 = getelementptr inbounds %struct.Reg, %struct.Reg* %9851, i32 0, i32 0
  %RBP.i19 = bitcast %union.anon* %9852 to i64*
  %9853 = load i64, i64* %RBP.i19
  %9854 = sub i64 %9853, 200
  %9855 = load i64, i64* %RAX.i18
  %9856 = load i64, i64* %PC.i17
  %9857 = add i64 %9856, 7
  store i64 %9857, i64* %PC.i17
  %9858 = inttoptr i64 %9854 to i64*
  store i64 %9855, i64* %9858
  store %struct.Memory* %loadMem_4015a3, %struct.Memory** %MEMORY
  %loadMem_4015aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9860 = getelementptr inbounds %struct.GPR, %struct.GPR* %9859, i32 0, i32 33
  %9861 = getelementptr inbounds %struct.Reg, %struct.Reg* %9860, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %9861 to i64*
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9863 = getelementptr inbounds %struct.GPR, %struct.GPR* %9862, i32 0, i32 1
  %9864 = getelementptr inbounds %struct.Reg, %struct.Reg* %9863, i32 0, i32 0
  %9865 = bitcast %union.anon* %9864 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9865, i32 0, i32 0
  %9866 = load i64, i64* %PC.i16
  %9867 = add i64 %9866, 2
  store i64 %9867, i64* %PC.i16
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_4015aa, %struct.Memory** %MEMORY
  %loadMem1_4015ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9869 = getelementptr inbounds %struct.GPR, %struct.GPR* %9868, i32 0, i32 33
  %9870 = getelementptr inbounds %struct.Reg, %struct.Reg* %9869, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %9870 to i64*
  %9871 = load i64, i64* %PC.i15
  %9872 = add i64 %9871, -3788
  %9873 = load i64, i64* %PC.i15
  %9874 = add i64 %9873, 5
  %9875 = load i64, i64* %PC.i15
  %9876 = add i64 %9875, 5
  store i64 %9876, i64* %PC.i15
  %9877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9878 = load i64, i64* %9877, align 8
  %9879 = add i64 %9878, -8
  %9880 = inttoptr i64 %9879 to i64*
  store i64 %9874, i64* %9880
  store i64 %9879, i64* %9877, align 8
  %9881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9872, i64* %9881, align 8
  store %struct.Memory* %loadMem1_4015ac, %struct.Memory** %MEMORY
  %loadMem2_4015ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4015ac = load i64, i64* %3
  %call2_4015ac = call %struct.Memory* @sub_4006e0.printf_plt(%struct.State* %0, i64 %loadPC_4015ac, %struct.Memory* %loadMem2_4015ac)
  store %struct.Memory* %call2_4015ac, %struct.Memory** %MEMORY
  %loadMem_4015b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9883 = getelementptr inbounds %struct.GPR, %struct.GPR* %9882, i32 0, i32 33
  %9884 = getelementptr inbounds %struct.Reg, %struct.Reg* %9883, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %9884 to i64*
  %9885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9886 = getelementptr inbounds %struct.GPR, %struct.GPR* %9885, i32 0, i32 15
  %9887 = getelementptr inbounds %struct.Reg, %struct.Reg* %9886, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %9887 to i64*
  %9888 = load i64, i64* %RBP.i14
  %9889 = sub i64 %9888, 208
  %9890 = load i64, i64* %PC.i13
  %9891 = add i64 %9890, 7
  store i64 %9891, i64* %PC.i13
  %9892 = inttoptr i64 %9889 to i32*
  %9893 = load i32, i32* %9892
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9894, align 1
  %9895 = and i32 %9893, 255
  %9896 = call i32 @llvm.ctpop.i32(i32 %9895)
  %9897 = trunc i32 %9896 to i8
  %9898 = and i8 %9897, 1
  %9899 = xor i8 %9898, 1
  %9900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9899, i8* %9900, align 1
  %9901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9901, align 1
  %9902 = icmp eq i32 %9893, 0
  %9903 = zext i1 %9902 to i8
  %9904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9903, i8* %9904, align 1
  %9905 = lshr i32 %9893, 31
  %9906 = trunc i32 %9905 to i8
  %9907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9906, i8* %9907, align 1
  %9908 = lshr i32 %9893, 31
  %9909 = xor i32 %9905, %9908
  %9910 = add i32 %9909, %9908
  %9911 = icmp eq i32 %9910, 2
  %9912 = zext i1 %9911 to i8
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9912, i8* %9913, align 1
  store %struct.Memory* %loadMem_4015b1, %struct.Memory** %MEMORY
  %loadMem_4015b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9915 = getelementptr inbounds %struct.GPR, %struct.GPR* %9914, i32 0, i32 33
  %9916 = getelementptr inbounds %struct.Reg, %struct.Reg* %9915, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %9916 to i64*
  %9917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9918 = getelementptr inbounds %struct.GPR, %struct.GPR* %9917, i32 0, i32 1
  %9919 = getelementptr inbounds %struct.Reg, %struct.Reg* %9918, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %9919 to i32*
  %9920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9921 = getelementptr inbounds %struct.GPR, %struct.GPR* %9920, i32 0, i32 15
  %9922 = getelementptr inbounds %struct.Reg, %struct.Reg* %9921, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %9922 to i64*
  %9923 = load i64, i64* %RBP.i12
  %9924 = sub i64 %9923, 316
  %9925 = load i32, i32* %EAX.i
  %9926 = zext i32 %9925 to i64
  %9927 = load i64, i64* %PC.i11
  %9928 = add i64 %9927, 6
  store i64 %9928, i64* %PC.i11
  %9929 = inttoptr i64 %9924 to i32*
  store i32 %9925, i32* %9929
  store %struct.Memory* %loadMem_4015b8, %struct.Memory** %MEMORY
  %loadMem_4015be = load %struct.Memory*, %struct.Memory** %MEMORY
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9931 = getelementptr inbounds %struct.GPR, %struct.GPR* %9930, i32 0, i32 33
  %9932 = getelementptr inbounds %struct.Reg, %struct.Reg* %9931, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %9932 to i64*
  %9933 = load i64, i64* %PC.i10
  %9934 = add i64 %9933, 11
  %9935 = load i64, i64* %PC.i10
  %9936 = add i64 %9935, 6
  %9937 = load i64, i64* %PC.i10
  %9938 = add i64 %9937, 6
  store i64 %9938, i64* %PC.i10
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9940 = load i8, i8* %9939, align 1
  store i8 %9940, i8* %BRANCH_TAKEN, align 1
  %9941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9942 = icmp ne i8 %9940, 0
  %9943 = select i1 %9942, i64 %9934, i64 %9936
  store i64 %9943, i64* %9941, align 8
  store %struct.Memory* %loadMem_4015be, %struct.Memory** %MEMORY
  %loadBr_4015be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4015be = icmp eq i8 %loadBr_4015be, 1
  br i1 %cmpBr_4015be, label %block_.L_4015c9, label %block_4015c4

block_4015c4:                                     ; preds = %block_.L_401590
  %loadMem_4015c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9945 = getelementptr inbounds %struct.GPR, %struct.GPR* %9944, i32 0, i32 33
  %9946 = getelementptr inbounds %struct.Reg, %struct.Reg* %9945, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %9946 to i64*
  %9947 = load i64, i64* %PC.i9
  %9948 = add i64 %9947, -3150
  %9949 = load i64, i64* %PC.i9
  %9950 = add i64 %9949, 5
  store i64 %9950, i64* %PC.i9
  %9951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9948, i64* %9951, align 8
  store %struct.Memory* %loadMem_4015c4, %struct.Memory** %MEMORY
  br label %block_.L_400976

block_.L_4015c9:                                  ; preds = %block_.L_401590
  %loadMem_4015c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9953 = getelementptr inbounds %struct.GPR, %struct.GPR* %9952, i32 0, i32 33
  %9954 = getelementptr inbounds %struct.Reg, %struct.Reg* %9953, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %9954 to i64*
  %9955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9956 = getelementptr inbounds %struct.GPR, %struct.GPR* %9955, i32 0, i32 15
  %9957 = getelementptr inbounds %struct.Reg, %struct.Reg* %9956, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %9957 to i64*
  %9958 = load i64, i64* %RBP.i8
  %9959 = sub i64 %9958, 4
  %9960 = load i64, i64* %PC.i7
  %9961 = add i64 %9960, 7
  store i64 %9961, i64* %PC.i7
  %9962 = inttoptr i64 %9959 to i32*
  store i32 0, i32* %9962
  store %struct.Memory* %loadMem_4015c9, %struct.Memory** %MEMORY
  br label %block_.L_4015d0

block_.L_4015d0:                                  ; preds = %block_.L_4015c9, %block_.L_40092d
  %loadMem_4015d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9964 = getelementptr inbounds %struct.GPR, %struct.GPR* %9963, i32 0, i32 33
  %9965 = getelementptr inbounds %struct.Reg, %struct.Reg* %9964, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %9965 to i64*
  %9966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9967 = getelementptr inbounds %struct.GPR, %struct.GPR* %9966, i32 0, i32 1
  %9968 = getelementptr inbounds %struct.Reg, %struct.Reg* %9967, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %9968 to i64*
  %9969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9970 = getelementptr inbounds %struct.GPR, %struct.GPR* %9969, i32 0, i32 15
  %9971 = getelementptr inbounds %struct.Reg, %struct.Reg* %9970, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %9971 to i64*
  %9972 = load i64, i64* %RBP.i6
  %9973 = sub i64 %9972, 4
  %9974 = load i64, i64* %PC.i5
  %9975 = add i64 %9974, 3
  store i64 %9975, i64* %PC.i5
  %9976 = inttoptr i64 %9973 to i32*
  %9977 = load i32, i32* %9976
  %9978 = zext i32 %9977 to i64
  store i64 %9978, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_4015d0, %struct.Memory** %MEMORY
  %loadMem_4015d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9980 = getelementptr inbounds %struct.GPR, %struct.GPR* %9979, i32 0, i32 33
  %9981 = getelementptr inbounds %struct.Reg, %struct.Reg* %9980, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %9981 to i64*
  %9982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9983 = getelementptr inbounds %struct.GPR, %struct.GPR* %9982, i32 0, i32 13
  %9984 = getelementptr inbounds %struct.Reg, %struct.Reg* %9983, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %9984 to i64*
  %9985 = load i64, i64* %RSP.i
  %9986 = load i64, i64* %PC.i4
  %9987 = add i64 %9986, 7
  store i64 %9987, i64* %PC.i4
  %9988 = add i64 320, %9985
  store i64 %9988, i64* %RSP.i, align 8
  %9989 = icmp ult i64 %9988, %9985
  %9990 = icmp ult i64 %9988, 320
  %9991 = or i1 %9989, %9990
  %9992 = zext i1 %9991 to i8
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9992, i8* %9993, align 1
  %9994 = trunc i64 %9988 to i32
  %9995 = and i32 %9994, 255
  %9996 = call i32 @llvm.ctpop.i32(i32 %9995)
  %9997 = trunc i32 %9996 to i8
  %9998 = and i8 %9997, 1
  %9999 = xor i8 %9998, 1
  %10000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9999, i8* %10000, align 1
  %10001 = xor i64 320, %9985
  %10002 = xor i64 %10001, %9988
  %10003 = lshr i64 %10002, 4
  %10004 = trunc i64 %10003 to i8
  %10005 = and i8 %10004, 1
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10005, i8* %10006, align 1
  %10007 = icmp eq i64 %9988, 0
  %10008 = zext i1 %10007 to i8
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10008, i8* %10009, align 1
  %10010 = lshr i64 %9988, 63
  %10011 = trunc i64 %10010 to i8
  %10012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10011, i8* %10012, align 1
  %10013 = lshr i64 %9985, 63
  %10014 = xor i64 %10010, %10013
  %10015 = add i64 %10014, %10010
  %10016 = icmp eq i64 %10015, 2
  %10017 = zext i1 %10016 to i8
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10017, i8* %10018, align 1
  store %struct.Memory* %loadMem_4015d3, %struct.Memory** %MEMORY
  %loadMem_4015da = load %struct.Memory*, %struct.Memory** %MEMORY
  %10019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10020 = getelementptr inbounds %struct.GPR, %struct.GPR* %10019, i32 0, i32 33
  %10021 = getelementptr inbounds %struct.Reg, %struct.Reg* %10020, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %10021 to i64*
  %10022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10023 = getelementptr inbounds %struct.GPR, %struct.GPR* %10022, i32 0, i32 15
  %10024 = getelementptr inbounds %struct.Reg, %struct.Reg* %10023, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %10024 to i64*
  %10025 = load i64, i64* %PC.i2
  %10026 = add i64 %10025, 1
  store i64 %10026, i64* %PC.i2
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10028 = load i64, i64* %10027, align 8
  %10029 = add i64 %10028, 8
  %10030 = inttoptr i64 %10028 to i64*
  %10031 = load i64, i64* %10030
  store i64 %10031, i64* %RBP.i3, align 8
  store i64 %10029, i64* %10027, align 8
  store %struct.Memory* %loadMem_4015da, %struct.Memory** %MEMORY
  %loadMem_4015db = load %struct.Memory*, %struct.Memory** %MEMORY
  %10032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10033 = getelementptr inbounds %struct.GPR, %struct.GPR* %10032, i32 0, i32 33
  %10034 = getelementptr inbounds %struct.Reg, %struct.Reg* %10033, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %10034 to i64*
  %10035 = load i64, i64* %PC.i1
  %10036 = add i64 %10035, 1
  store i64 %10036, i64* %PC.i1
  %10037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10039 = load i64, i64* %10038, align 8
  %10040 = inttoptr i64 %10039 to i64*
  %10041 = load i64, i64* %10040
  store i64 %10041, i64* %10037, align 8
  %10042 = add i64 %10039, 8
  store i64 %10042, i64* %10038, align 8
  store %struct.Memory* %loadMem_4015db, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4015db
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x140___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 320
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 320
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 320, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x186a0__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 184
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 11
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 100000, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 172
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_400971(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x401938___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 4200760, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xac__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdi_8____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4008e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xac__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i8*
  %16 = load i8, i8* %15
  %17 = sext i8 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x63___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 99
  %14 = icmp ult i32 %9, 99
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 99, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4008ef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40095d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 8
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i64*
  %22 = load i64, i64* %21
  store i64 %22, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.atol_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12, align 1
  %13 = trunc i64 %9 to i32
  %14 = and i32 %13, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i64 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %9, 63
  %25 = trunc i64 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %9, 63
  %28 = xor i64 %24, %27
  %29 = add i64 %28, %27
  %30 = icmp eq i64 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40092d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400958(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x40193b___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 4200763, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x602080___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* inttoptr (i64 6299776 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.fprintf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4015d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400888(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400976(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.time_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf71__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3961
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf71__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3961
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf71__rip____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3961
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__0x602098(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* inttoptr (i64 6299800 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__0x6020a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* inttoptr (i64 6299808 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* inttoptr (i64 6299824 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xb8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 176
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf2d__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3893
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf2d__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3893
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 0, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 12
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xe__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 14
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x159__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 345
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xd2__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 210
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RAX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x383__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 899
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x268__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 616
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 0, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x5d__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 93
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 112
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 120
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 128
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 136
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x1__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 1, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400b56(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x8000000000000000___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x70__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x78__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x80__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x88__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_0x602098___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* inttoptr (i64 6299800 to double*)
  %18 = fmul double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 112
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x80__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x88__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x78__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__xmm0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 5
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to i64*
  %15 = load i64, i64* %14, align 1
  store i64 %15, i64* %RCX, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = xor i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17, align 1
  %18 = trunc i64 %16 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %16, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %16, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 5
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  store i64 %12, i64* %15, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x1___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 1, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400a89(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xac__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 172
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400b90(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x78__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x80__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x88__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.POUT(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd78__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3456
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd78__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3456
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__0x6020c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* inttoptr (i64 6299848 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* inttoptr (i64 6299856 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* inttoptr (i64 6299864 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* inttoptr (i64 6299872 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x28__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400cda(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020c8___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* inttoptr (i64 6299848 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_0x6020d0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* inttoptr (i64 6299856 to double*)
  %18 = fadd double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_0x6020d8___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* inttoptr (i64 6299864 to double*)
  %18 = fadd double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6020e0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* inttoptr (i64 6299872 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* inttoptr (i64 6299848 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6020d8___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* inttoptr (i64 6299864 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_0x6020e0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* inttoptr (i64 6299872 to double*)
  %18 = fadd double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6020d0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* inttoptr (i64 6299856 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400bcc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400d21(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020d0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* inttoptr (i64 6299856 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020d8___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* inttoptr (i64 6299864 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020e0___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* inttoptr (i64 6299872 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400d57(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6020c0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 6299840, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.PA(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400d29(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400d9e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* inttoptr (i64 6299792 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x38__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400e50(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %9 = sub i32 %8, 1
  %10 = icmp ult i32 %8, 1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400ddd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* inttoptr (i64 6299792 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400de8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* inttoptr (i64 6299792 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %9 = sub i32 %8, 2
  %10 = icmp ult i32 %8, 2
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 2
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_400e06(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* inttoptr (i64 6299792 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e11(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_400e2f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e3a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e3f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400db1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400e92(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x602090___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x602090___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x6020ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* inttoptr (i64 6299820 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x6020a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* inttoptr (i64 6299816 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x40__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400fbe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x602090___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020ac___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x602090___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RAX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020a8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x6020ac___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* inttoptr (i64 6299792 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020a8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %13 = shl i64 %9, 32
  %14 = ashr exact i64 %13, 32
  %15 = sext i32 %12 to i64
  %16 = mul i64 %15, %14
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %RAX, align 8
  %19 = shl i64 %16, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp ne i64 %20, %16
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %17, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %31, align 1
  %32 = lshr i32 %17, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x6020ac___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %13 = shl i64 %9, 32
  %14 = ashr exact i64 %13, 32
  %15 = sext i32 %12 to i64
  %16 = mul i64 %15, %14
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %RCX, align 8
  %19 = shl i64 %16, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp ne i64 %20, %16
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %17, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %31, align 1
  %32 = lshr i32 %17, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x6020ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* inttoptr (i64 6299820 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x602090___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x6020a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* inttoptr (i64 6299816 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x6020a8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__eax___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020c0___rdx_8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RDX
  %12 = mul i64 %11, 8
  %13 = add i64 %12, 6299840
  %14 = bitcast %union.vec128_t* %XMM0 to i8*
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 9
  store i64 %16, i64* %PC
  %17 = bitcast i8* %14 to double*
  %18 = load double, double* %17, align 1
  %19 = inttoptr i64 %13 to double*
  store double %18, double* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x6020a8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i32, i32* inttoptr (i64 6299816 to i32*)
  %13 = shl i64 %9, 32
  %14 = ashr exact i64 %13, 32
  %15 = sext i32 %12 to i64
  %16 = mul i64 %15, %14
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %RAX, align 8
  %19 = shl i64 %16, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp ne i64 %20, %16
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %17, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %31, align 1
  %32 = lshr i32 %17, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ebb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40100d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x6020ac___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* inttoptr (i64 6299820 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x90b__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2323
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 144
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 152
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x48__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401224(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x8d5__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2269
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x602098___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* inttoptr (i64 6299800 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020b0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* inttoptr (i64 6299824 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 224
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm3___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM3 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0xe8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 232
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0xf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 240
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sin_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xe8__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0xf8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 248
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.cos_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xf8__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x98__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x100__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 256
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x98__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x108__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 264
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x108__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xe0__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fsub double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x100__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm2___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.atan_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x7fd__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2053
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xf0__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 144
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x602098___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* inttoptr (i64 6299800 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x110__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 272
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x118__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 280
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0x120__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 288
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x120__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x128__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 296
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x128__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x130__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 304
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x138__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 312
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x138__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x118__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x130__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x110__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 152
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40102d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40126f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6a1__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1705
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 160
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x50__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 80
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4012d2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xa0__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.P3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401297(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40131d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xa0__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xa0__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x603__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1547
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x5cb__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1491
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x5e3__rip____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1515
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__0x6020c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* inttoptr (i64 6299848 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__0x6020d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* inttoptr (i64 6299856 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x58__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_40139d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.P0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401379(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4013ec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x6020ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* inttoptr (i64 6299820 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x60__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401484(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x602090___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* inttoptr (i64 6299792 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40140a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4014c6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x462__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1130
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x68__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401525(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.log_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd_0x6020a0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* inttoptr (i64 6299808 to double*)
  %18 = fdiv double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.exp_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sqrt_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4014de(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_401570(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x68__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401590(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4009db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x401955___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 4200789, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.printf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4015c9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x140___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 320, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 320
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 320, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
