; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x602080_type = type <{ [8 x i8] }>
%G_0x602090_type = type <{ [4 x i8] }>
%G_0x602098_type = type <{ [16 x i8] }>
%G_0x6020a0_type = type <{ [16 x i8] }>
%G_0x6020a8_type = type <{ [4 x i8] }>
%G_0x6020ac_type = type <{ [4 x i8] }>
%G_0x6020b0_type = type <{ [16 x i8] }>
%G_0x6020c8_type = type <{ [16 x i8] }>
%G_0x6020d0_type = type <{ [16 x i8] }>
%G_0x6020d8_type = type <{ [16 x i8] }>
%G_0x6020e0_type = type <{ [16 x i8] }>
%G__0x401948_type = type <{ [8 x i8] }>
%G__0x40194b_type = type <{ [8 x i8] }>
%G__0x401965_type = type <{ [8 x i8] }>
%G__0x6020c0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0C\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x602080 = global %G_0x602080_type zeroinitializer
@G_0x602090 = global %G_0x602090_type zeroinitializer
@G_0x602098 = global %G_0x602098_type zeroinitializer
@G_0x6020a0 = global %G_0x6020a0_type zeroinitializer
@G_0x6020a8 = global %G_0x6020a8_type zeroinitializer
@G_0x6020ac = global %G_0x6020ac_type zeroinitializer
@G_0x6020b0 = global %G_0x6020b0_type zeroinitializer
@G_0x6020c8 = global %G_0x6020c8_type zeroinitializer
@G_0x6020d0 = global %G_0x6020d0_type zeroinitializer
@G_0x6020d8 = global %G_0x6020d8_type zeroinitializer
@G_0x6020e0 = global %G_0x6020e0_type zeroinitializer
@G__0x401948 = global %G__0x401948_type zeroinitializer
@G__0x40194b = global %G__0x40194b_type zeroinitializer
@G__0x401965 = global %G__0x401965_type zeroinitializer
@G__0x6020c0 = global %G__0x6020c0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_4015f0.POUT(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401660.PA(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401790.P3(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401810.P0(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @main(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_400860 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_400860, %struct.Memory** %MEMORY
  %loadMem_400861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i16 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i16
  %27 = load i64, i64* %PC.i15
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i15
  store i64 %26, i64* %RBP.i17, align 8
  store %struct.Memory* %loadMem_400861, %struct.Memory** %MEMORY
  %loadMem_400864 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i25 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i25
  %36 = load i64, i64* %PC.i24
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i24
  %38 = sub i64 %35, 320
  store i64 %38, i64* %RSP.i25, align 8
  %39 = icmp ult i64 %35, 320
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 320, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_400864, %struct.Memory** %MEMORY
  %loadMem_40086b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 15
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %RBP.i80
  %74 = sub i64 %73, 4
  %75 = load i64, i64* %PC.i79
  %76 = add i64 %75, 7
  store i64 %76, i64* %PC.i79
  %77 = inttoptr i64 %74 to i32*
  store i32 0, i32* %77
  store %struct.Memory* %loadMem_40086b, %struct.Memory** %MEMORY
  %loadMem_400872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 33
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %80 to i64*
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 11
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %83 to i32*
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %85 = getelementptr inbounds %struct.GPR, %struct.GPR* %84, i32 0, i32 15
  %86 = getelementptr inbounds %struct.Reg, %struct.Reg* %85, i32 0, i32 0
  %RBP.i85 = bitcast %union.anon* %86 to i64*
  %87 = load i64, i64* %RBP.i85
  %88 = sub i64 %87, 8
  %89 = load i32, i32* %EDI.i
  %90 = zext i32 %89 to i64
  %91 = load i64, i64* %PC.i84
  %92 = add i64 %91, 3
  store i64 %92, i64* %PC.i84
  %93 = inttoptr i64 %88 to i32*
  store i32 %89, i32* %93
  store %struct.Memory* %loadMem_400872, %struct.Memory** %MEMORY
  %loadMem_400875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %95 = getelementptr inbounds %struct.GPR, %struct.GPR* %94, i32 0, i32 33
  %96 = getelementptr inbounds %struct.Reg, %struct.Reg* %95, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %96 to i64*
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 9
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %RSI.i1110 = bitcast %union.anon* %99 to i64*
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %101 = getelementptr inbounds %struct.GPR, %struct.GPR* %100, i32 0, i32 15
  %102 = getelementptr inbounds %struct.Reg, %struct.Reg* %101, i32 0, i32 0
  %RBP.i1111 = bitcast %union.anon* %102 to i64*
  %103 = load i64, i64* %RBP.i1111
  %104 = sub i64 %103, 16
  %105 = load i64, i64* %RSI.i1110
  %106 = load i64, i64* %PC.i1109
  %107 = add i64 %106, 4
  store i64 %107, i64* %PC.i1109
  %108 = inttoptr i64 %104 to i64*
  store i64 %105, i64* %108
  store %struct.Memory* %loadMem_400875, %struct.Memory** %MEMORY
  %loadMem_400879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 33
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %111 to i64*
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 15
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %RBP.i1137 = bitcast %union.anon* %114 to i64*
  %115 = load i64, i64* %RBP.i1137
  %116 = sub i64 %115, 184
  %117 = load i64, i64* %PC.i1136
  %118 = add i64 %117, 11
  store i64 %118, i64* %PC.i1136
  %119 = inttoptr i64 %116 to i64*
  store i64 100000, i64* %119
  store %struct.Memory* %loadMem_400879, %struct.Memory** %MEMORY
  %loadMem_400884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 33
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %122 to i64*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 15
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %125 to i64*
  %126 = load i64, i64* %RBP.i1150
  %127 = sub i64 %126, 208
  %128 = load i64, i64* %PC.i1149
  %129 = add i64 %128, 10
  store i64 %129, i64* %PC.i1149
  %130 = inttoptr i64 %127 to i32*
  store i32 0, i32* %130
  store %struct.Memory* %loadMem_400884, %struct.Memory** %MEMORY
  %loadMem_40088e = load %struct.Memory*, %struct.Memory** %MEMORY
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 33
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 15
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %RBP.i1166 = bitcast %union.anon* %136 to i64*
  %137 = load i64, i64* %RBP.i1166
  %138 = sub i64 %137, 172
  %139 = load i64, i64* %PC.i1165
  %140 = add i64 %139, 10
  store i64 %140, i64* %PC.i1165
  %141 = inttoptr i64 %138 to i32*
  store i32 1, i32* %141
  store %struct.Memory* %loadMem_40088e, %struct.Memory** %MEMORY
  br label %block_.L_400898

block_.L_400898:                                  ; preds = %block_.L_40096d, %entry
  %loadMem_400898 = load %struct.Memory*, %struct.Memory** %MEMORY
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.GPR, %struct.GPR* %142, i32 0, i32 33
  %144 = getelementptr inbounds %struct.Reg, %struct.Reg* %143, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %144 to i64*
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 1
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %RAX.i1199 = bitcast %union.anon* %147 to i64*
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %149 = getelementptr inbounds %struct.GPR, %struct.GPR* %148, i32 0, i32 15
  %150 = getelementptr inbounds %struct.Reg, %struct.Reg* %149, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %150 to i64*
  %151 = load i64, i64* %RBP.i1200
  %152 = sub i64 %151, 172
  %153 = load i64, i64* %PC.i1198
  %154 = add i64 %153, 6
  store i64 %154, i64* %PC.i1198
  %155 = inttoptr i64 %152 to i32*
  %156 = load i32, i32* %155
  %157 = zext i32 %156 to i64
  store i64 %157, i64* %RAX.i1199, align 8
  store %struct.Memory* %loadMem_400898, %struct.Memory** %MEMORY
  %loadMem_40089e = load %struct.Memory*, %struct.Memory** %MEMORY
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 33
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %160 to i64*
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 1
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %EAX.i1220 = bitcast %union.anon* %163 to i32*
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %165 = getelementptr inbounds %struct.GPR, %struct.GPR* %164, i32 0, i32 15
  %166 = getelementptr inbounds %struct.Reg, %struct.Reg* %165, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %166 to i64*
  %167 = load i32, i32* %EAX.i1220
  %168 = zext i32 %167 to i64
  %169 = load i64, i64* %RBP.i1221
  %170 = sub i64 %169, 8
  %171 = load i64, i64* %PC.i1219
  %172 = add i64 %171, 3
  store i64 %172, i64* %PC.i1219
  %173 = inttoptr i64 %170 to i32*
  %174 = load i32, i32* %173
  %175 = sub i32 %167, %174
  %176 = icmp ult i32 %167, %174
  %177 = zext i1 %176 to i8
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %177, i8* %178, align 1
  %179 = and i32 %175, 255
  %180 = call i32 @llvm.ctpop.i32(i32 %179)
  %181 = trunc i32 %180 to i8
  %182 = and i8 %181, 1
  %183 = xor i8 %182, 1
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %183, i8* %184, align 1
  %185 = xor i32 %174, %167
  %186 = xor i32 %185, %175
  %187 = lshr i32 %186, 4
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %189, i8* %190, align 1
  %191 = icmp eq i32 %175, 0
  %192 = zext i1 %191 to i8
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %192, i8* %193, align 1
  %194 = lshr i32 %175, 31
  %195 = trunc i32 %194 to i8
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %195, i8* %196, align 1
  %197 = lshr i32 %167, 31
  %198 = lshr i32 %174, 31
  %199 = xor i32 %198, %197
  %200 = xor i32 %194, %197
  %201 = add i32 %200, %199
  %202 = icmp eq i32 %201, 2
  %203 = zext i1 %202 to i8
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %203, i8* %204, align 1
  store %struct.Memory* %loadMem_40089e, %struct.Memory** %MEMORY
  %loadMem_4008a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %206 = getelementptr inbounds %struct.GPR, %struct.GPR* %205, i32 0, i32 33
  %207 = getelementptr inbounds %struct.Reg, %struct.Reg* %206, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %207 to i64*
  %208 = load i64, i64* %PC.i1218
  %209 = add i64 %208, 224
  %210 = load i64, i64* %PC.i1218
  %211 = add i64 %210, 6
  %212 = load i64, i64* %PC.i1218
  %213 = add i64 %212, 6
  store i64 %213, i64* %PC.i1218
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %215 = load i8, i8* %214, align 1
  %216 = icmp ne i8 %215, 0
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %218 = load i8, i8* %217, align 1
  %219 = icmp ne i8 %218, 0
  %220 = xor i1 %216, %219
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i8
  store i8 %222, i8* %BRANCH_TAKEN, align 1
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %224 = select i1 %220, i64 %211, i64 %209
  store i64 %224, i64* %223, align 8
  store %struct.Memory* %loadMem_4008a1, %struct.Memory** %MEMORY
  %loadBr_4008a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4008a1 = icmp eq i8 %loadBr_4008a1, 1
  br i1 %cmpBr_4008a1, label %block_.L_400981, label %block_4008a7

block_4008a7:                                     ; preds = %block_.L_400898
  %loadMem_4008a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 33
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 9
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %RSI.i1217 = bitcast %union.anon* %230 to i64*
  %231 = load i64, i64* %PC.i1216
  %232 = add i64 %231, 10
  store i64 %232, i64* %PC.i1216
  store i64 ptrtoint (%G__0x401948_type* @G__0x401948 to i64), i64* %RSI.i1217, align 8
  store %struct.Memory* %loadMem_4008a7, %struct.Memory** %MEMORY
  %loadMem_4008b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %234 = getelementptr inbounds %struct.GPR, %struct.GPR* %233, i32 0, i32 33
  %235 = getelementptr inbounds %struct.Reg, %struct.Reg* %234, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %235 to i64*
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %237 = getelementptr inbounds %struct.GPR, %struct.GPR* %236, i32 0, i32 1
  %238 = getelementptr inbounds %struct.Reg, %struct.Reg* %237, i32 0, i32 0
  %RAX.i1215 = bitcast %union.anon* %238 to i64*
  %239 = load i64, i64* %PC.i1214
  %240 = add i64 %239, 5
  store i64 %240, i64* %PC.i1214
  store i64 2, i64* %RAX.i1215, align 8
  store %struct.Memory* %loadMem_4008b1, %struct.Memory** %MEMORY
  %loadMem_4008b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %242 = getelementptr inbounds %struct.GPR, %struct.GPR* %241, i32 0, i32 33
  %243 = getelementptr inbounds %struct.Reg, %struct.Reg* %242, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %243 to i64*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %245 = getelementptr inbounds %struct.GPR, %struct.GPR* %244, i32 0, i32 1
  %246 = getelementptr inbounds %struct.Reg, %struct.Reg* %245, i32 0, i32 0
  %EAX.i1212 = bitcast %union.anon* %246 to i32*
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %248 = getelementptr inbounds %struct.GPR, %struct.GPR* %247, i32 0, i32 7
  %249 = getelementptr inbounds %struct.Reg, %struct.Reg* %248, i32 0, i32 0
  %RDX.i1213 = bitcast %union.anon* %249 to i64*
  %250 = load i32, i32* %EAX.i1212
  %251 = zext i32 %250 to i64
  %252 = load i64, i64* %PC.i1211
  %253 = add i64 %252, 2
  store i64 %253, i64* %PC.i1211
  %254 = and i64 %251, 4294967295
  store i64 %254, i64* %RDX.i1213, align 8
  store %struct.Memory* %loadMem_4008b6, %struct.Memory** %MEMORY
  %loadMem_4008b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %256 = getelementptr inbounds %struct.GPR, %struct.GPR* %255, i32 0, i32 33
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %259 = getelementptr inbounds %struct.GPR, %struct.GPR* %258, i32 0, i32 5
  %260 = getelementptr inbounds %struct.Reg, %struct.Reg* %259, i32 0, i32 0
  %RCX.i1209 = bitcast %union.anon* %260 to i64*
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %262 = getelementptr inbounds %struct.GPR, %struct.GPR* %261, i32 0, i32 15
  %263 = getelementptr inbounds %struct.Reg, %struct.Reg* %262, i32 0, i32 0
  %RBP.i1210 = bitcast %union.anon* %263 to i64*
  %264 = load i64, i64* %RBP.i1210
  %265 = sub i64 %264, 16
  %266 = load i64, i64* %PC.i1208
  %267 = add i64 %266, 4
  store i64 %267, i64* %PC.i1208
  %268 = inttoptr i64 %265 to i64*
  %269 = load i64, i64* %268
  store i64 %269, i64* %RCX.i1209, align 8
  store %struct.Memory* %loadMem_4008b8, %struct.Memory** %MEMORY
  %loadMem_4008bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %271 = getelementptr inbounds %struct.GPR, %struct.GPR* %270, i32 0, i32 33
  %272 = getelementptr inbounds %struct.Reg, %struct.Reg* %271, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %272 to i64*
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %274 = getelementptr inbounds %struct.GPR, %struct.GPR* %273, i32 0, i32 11
  %275 = getelementptr inbounds %struct.Reg, %struct.Reg* %274, i32 0, i32 0
  %RDI.i1206 = bitcast %union.anon* %275 to i64*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %277 = getelementptr inbounds %struct.GPR, %struct.GPR* %276, i32 0, i32 15
  %278 = getelementptr inbounds %struct.Reg, %struct.Reg* %277, i32 0, i32 0
  %RBP.i1207 = bitcast %union.anon* %278 to i64*
  %279 = load i64, i64* %RBP.i1207
  %280 = sub i64 %279, 172
  %281 = load i64, i64* %PC.i1205
  %282 = add i64 %281, 7
  store i64 %282, i64* %PC.i1205
  %283 = inttoptr i64 %280 to i32*
  %284 = load i32, i32* %283
  %285 = sext i32 %284 to i64
  store i64 %285, i64* %RDI.i1206, align 8
  store %struct.Memory* %loadMem_4008bc, %struct.Memory** %MEMORY
  %loadMem_4008c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %287 = getelementptr inbounds %struct.GPR, %struct.GPR* %286, i32 0, i32 33
  %288 = getelementptr inbounds %struct.Reg, %struct.Reg* %287, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %288 to i64*
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %290 = getelementptr inbounds %struct.GPR, %struct.GPR* %289, i32 0, i32 5
  %291 = getelementptr inbounds %struct.Reg, %struct.Reg* %290, i32 0, i32 0
  %RCX.i1203 = bitcast %union.anon* %291 to i64*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %293 = getelementptr inbounds %struct.GPR, %struct.GPR* %292, i32 0, i32 11
  %294 = getelementptr inbounds %struct.Reg, %struct.Reg* %293, i32 0, i32 0
  %RDI.i1204 = bitcast %union.anon* %294 to i64*
  %295 = load i64, i64* %RCX.i1203
  %296 = load i64, i64* %RDI.i1204
  %297 = mul i64 %296, 8
  %298 = add i64 %297, %295
  %299 = load i64, i64* %PC.i1202
  %300 = add i64 %299, 4
  store i64 %300, i64* %PC.i1202
  %301 = inttoptr i64 %298 to i64*
  %302 = load i64, i64* %301
  store i64 %302, i64* %RDI.i1204, align 8
  store %struct.Memory* %loadMem_4008c3, %struct.Memory** %MEMORY
  %loadMem1_4008c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %304 = getelementptr inbounds %struct.GPR, %struct.GPR* %303, i32 0, i32 33
  %305 = getelementptr inbounds %struct.Reg, %struct.Reg* %304, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %305 to i64*
  %306 = load i64, i64* %PC.i1201
  %307 = add i64 %306, -519
  %308 = load i64, i64* %PC.i1201
  %309 = add i64 %308, 5
  %310 = load i64, i64* %PC.i1201
  %311 = add i64 %310, 5
  store i64 %311, i64* %PC.i1201
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %313 = load i64, i64* %312, align 8
  %314 = add i64 %313, -8
  %315 = inttoptr i64 %314 to i64*
  store i64 %309, i64* %315
  store i64 %314, i64* %312, align 8
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %307, i64* %316, align 8
  store %struct.Memory* %loadMem1_4008c7, %struct.Memory** %MEMORY
  %loadMem2_4008c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4008c7 = load i64, i64* %3
  %317 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %loadMem2_4008c7)
  store %struct.Memory* %317, %struct.Memory** %MEMORY
  %loadMem_4008cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %319 = getelementptr inbounds %struct.GPR, %struct.GPR* %318, i32 0, i32 33
  %320 = getelementptr inbounds %struct.Reg, %struct.Reg* %319, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %320 to i64*
  %321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %322 = getelementptr inbounds %struct.GPR, %struct.GPR* %321, i32 0, i32 1
  %323 = getelementptr inbounds %struct.Reg, %struct.Reg* %322, i32 0, i32 0
  %EAX.i1197 = bitcast %union.anon* %323 to i32*
  %324 = load i32, i32* %EAX.i1197
  %325 = zext i32 %324 to i64
  %326 = load i64, i64* %PC.i1196
  %327 = add i64 %326, 3
  store i64 %327, i64* %PC.i1196
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %328, align 1
  %329 = and i32 %324, 255
  %330 = call i32 @llvm.ctpop.i32(i32 %329)
  %331 = trunc i32 %330 to i8
  %332 = and i8 %331, 1
  %333 = xor i8 %332, 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %333, i8* %334, align 1
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %335, align 1
  %336 = icmp eq i32 %324, 0
  %337 = zext i1 %336 to i8
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %337, i8* %338, align 1
  %339 = lshr i32 %324, 31
  %340 = trunc i32 %339 to i8
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %340, i8* %341, align 1
  %342 = lshr i32 %324, 31
  %343 = xor i32 %339, %342
  %344 = add i32 %343, %342
  %345 = icmp eq i32 %344, 2
  %346 = zext i1 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %346, i8* %347, align 1
  store %struct.Memory* %loadMem_4008cc, %struct.Memory** %MEMORY
  %loadMem_4008cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %349 = getelementptr inbounds %struct.GPR, %struct.GPR* %348, i32 0, i32 33
  %350 = getelementptr inbounds %struct.Reg, %struct.Reg* %349, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %350 to i64*
  %351 = load i64, i64* %PC.i1195
  %352 = add i64 %351, 33
  %353 = load i64, i64* %PC.i1195
  %354 = add i64 %353, 6
  %355 = load i64, i64* %PC.i1195
  %356 = add i64 %355, 6
  store i64 %356, i64* %PC.i1195
  %357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %358 = load i8, i8* %357, align 1
  store i8 %358, i8* %BRANCH_TAKEN, align 1
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %360 = icmp ne i8 %358, 0
  %361 = select i1 %360, i64 %352, i64 %354
  store i64 %361, i64* %359, align 8
  store %struct.Memory* %loadMem_4008cf, %struct.Memory** %MEMORY
  %loadBr_4008cf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4008cf = icmp eq i8 %loadBr_4008cf, 1
  br i1 %cmpBr_4008cf, label %block_.L_4008f0, label %block_4008d5

block_4008d5:                                     ; preds = %block_4008a7
  %loadMem_4008d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %363 = getelementptr inbounds %struct.GPR, %struct.GPR* %362, i32 0, i32 33
  %364 = getelementptr inbounds %struct.Reg, %struct.Reg* %363, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %364 to i64*
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %366 = getelementptr inbounds %struct.GPR, %struct.GPR* %365, i32 0, i32 1
  %367 = getelementptr inbounds %struct.Reg, %struct.Reg* %366, i32 0, i32 0
  %RAX.i1193 = bitcast %union.anon* %367 to i64*
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %369 = getelementptr inbounds %struct.GPR, %struct.GPR* %368, i32 0, i32 15
  %370 = getelementptr inbounds %struct.Reg, %struct.Reg* %369, i32 0, i32 0
  %RBP.i1194 = bitcast %union.anon* %370 to i64*
  %371 = load i64, i64* %RBP.i1194
  %372 = sub i64 %371, 16
  %373 = load i64, i64* %PC.i1192
  %374 = add i64 %373, 4
  store i64 %374, i64* %PC.i1192
  %375 = inttoptr i64 %372 to i64*
  %376 = load i64, i64* %375
  store i64 %376, i64* %RAX.i1193, align 8
  store %struct.Memory* %loadMem_4008d5, %struct.Memory** %MEMORY
  %loadMem_4008d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %378 = getelementptr inbounds %struct.GPR, %struct.GPR* %377, i32 0, i32 33
  %379 = getelementptr inbounds %struct.Reg, %struct.Reg* %378, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %379 to i64*
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %381 = getelementptr inbounds %struct.GPR, %struct.GPR* %380, i32 0, i32 5
  %382 = getelementptr inbounds %struct.Reg, %struct.Reg* %381, i32 0, i32 0
  %RCX.i1190 = bitcast %union.anon* %382 to i64*
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 15
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %RBP.i1191 = bitcast %union.anon* %385 to i64*
  %386 = load i64, i64* %RBP.i1191
  %387 = sub i64 %386, 172
  %388 = load i64, i64* %PC.i1189
  %389 = add i64 %388, 7
  store i64 %389, i64* %PC.i1189
  %390 = inttoptr i64 %387 to i32*
  %391 = load i32, i32* %390
  %392 = sext i32 %391 to i64
  store i64 %392, i64* %RCX.i1190, align 8
  store %struct.Memory* %loadMem_4008d9, %struct.Memory** %MEMORY
  %loadMem_4008e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %394 = getelementptr inbounds %struct.GPR, %struct.GPR* %393, i32 0, i32 33
  %395 = getelementptr inbounds %struct.Reg, %struct.Reg* %394, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %395 to i64*
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %397 = getelementptr inbounds %struct.GPR, %struct.GPR* %396, i32 0, i32 1
  %398 = getelementptr inbounds %struct.Reg, %struct.Reg* %397, i32 0, i32 0
  %RAX.i1187 = bitcast %union.anon* %398 to i64*
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 5
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %RCX.i1188 = bitcast %union.anon* %401 to i64*
  %402 = load i64, i64* %RAX.i1187
  %403 = load i64, i64* %RCX.i1188
  %404 = mul i64 %403, 8
  %405 = add i64 %404, %402
  %406 = load i64, i64* %PC.i1186
  %407 = add i64 %406, 4
  store i64 %407, i64* %PC.i1186
  %408 = inttoptr i64 %405 to i64*
  %409 = load i64, i64* %408
  store i64 %409, i64* %RAX.i1187, align 8
  store %struct.Memory* %loadMem_4008e0, %struct.Memory** %MEMORY
  %loadMem_4008e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %411 = getelementptr inbounds %struct.GPR, %struct.GPR* %410, i32 0, i32 33
  %412 = getelementptr inbounds %struct.Reg, %struct.Reg* %411, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %412 to i64*
  %413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %414 = getelementptr inbounds %struct.GPR, %struct.GPR* %413, i32 0, i32 1
  %415 = getelementptr inbounds %struct.Reg, %struct.Reg* %414, i32 0, i32 0
  %RAX.i1184 = bitcast %union.anon* %415 to i64*
  %416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %417 = getelementptr inbounds %struct.GPR, %struct.GPR* %416, i32 0, i32 7
  %418 = getelementptr inbounds %struct.Reg, %struct.Reg* %417, i32 0, i32 0
  %RDX.i1185 = bitcast %union.anon* %418 to i64*
  %419 = load i64, i64* %RAX.i1184
  %420 = load i64, i64* %PC.i1183
  %421 = add i64 %420, 3
  store i64 %421, i64* %PC.i1183
  %422 = inttoptr i64 %419 to i8*
  %423 = load i8, i8* %422
  %424 = sext i8 %423 to i64
  %425 = and i64 %424, 4294967295
  store i64 %425, i64* %RDX.i1185, align 8
  store %struct.Memory* %loadMem_4008e4, %struct.Memory** %MEMORY
  %loadMem_4008e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %427 = getelementptr inbounds %struct.GPR, %struct.GPR* %426, i32 0, i32 33
  %428 = getelementptr inbounds %struct.Reg, %struct.Reg* %427, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %428 to i64*
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 7
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %431 to i32*
  %432 = load i32, i32* %EDX.i
  %433 = zext i32 %432 to i64
  %434 = load i64, i64* %PC.i1182
  %435 = add i64 %434, 3
  store i64 %435, i64* %PC.i1182
  %436 = sub i32 %432, 99
  %437 = icmp ult i32 %432, 99
  %438 = zext i1 %437 to i8
  %439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %438, i8* %439, align 1
  %440 = and i32 %436, 255
  %441 = call i32 @llvm.ctpop.i32(i32 %440)
  %442 = trunc i32 %441 to i8
  %443 = and i8 %442, 1
  %444 = xor i8 %443, 1
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %444, i8* %445, align 1
  %446 = xor i64 99, %433
  %447 = trunc i64 %446 to i32
  %448 = xor i32 %447, %436
  %449 = lshr i32 %448, 4
  %450 = trunc i32 %449 to i8
  %451 = and i8 %450, 1
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %451, i8* %452, align 1
  %453 = icmp eq i32 %436, 0
  %454 = zext i1 %453 to i8
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %454, i8* %455, align 1
  %456 = lshr i32 %436, 31
  %457 = trunc i32 %456 to i8
  %458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %457, i8* %458, align 1
  %459 = lshr i32 %432, 31
  %460 = xor i32 %456, %459
  %461 = add i32 %460, %459
  %462 = icmp eq i32 %461, 2
  %463 = zext i1 %462 to i8
  %464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %463, i8* %464, align 1
  store %struct.Memory* %loadMem_4008e7, %struct.Memory** %MEMORY
  %loadMem_4008ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %466 = getelementptr inbounds %struct.GPR, %struct.GPR* %465, i32 0, i32 33
  %467 = getelementptr inbounds %struct.Reg, %struct.Reg* %466, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %467 to i64*
  %468 = load i64, i64* %PC.i1181
  %469 = add i64 %468, 21
  %470 = load i64, i64* %PC.i1181
  %471 = add i64 %470, 6
  %472 = load i64, i64* %PC.i1181
  %473 = add i64 %472, 6
  store i64 %473, i64* %PC.i1181
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %475 = load i8, i8* %474, align 1
  %476 = icmp eq i8 %475, 0
  %477 = zext i1 %476 to i8
  store i8 %477, i8* %BRANCH_TAKEN, align 1
  %478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %479 = select i1 %476, i64 %469, i64 %471
  store i64 %479, i64* %478, align 8
  store %struct.Memory* %loadMem_4008ea, %struct.Memory** %MEMORY
  %loadBr_4008ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4008ea = icmp eq i8 %loadBr_4008ea, 1
  br i1 %cmpBr_4008ea, label %block_.L_4008ff, label %block_.L_4008f0

block_.L_4008f0:                                  ; preds = %block_4008d5, %block_4008a7
  %loadMem_4008f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %481 = getelementptr inbounds %struct.GPR, %struct.GPR* %480, i32 0, i32 33
  %482 = getelementptr inbounds %struct.Reg, %struct.Reg* %481, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %482 to i64*
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %484 = getelementptr inbounds %struct.GPR, %struct.GPR* %483, i32 0, i32 15
  %485 = getelementptr inbounds %struct.Reg, %struct.Reg* %484, i32 0, i32 0
  %RBP.i1180 = bitcast %union.anon* %485 to i64*
  %486 = load i64, i64* %RBP.i1180
  %487 = sub i64 %486, 208
  %488 = load i64, i64* %PC.i1179
  %489 = add i64 %488, 10
  store i64 %489, i64* %PC.i1179
  %490 = inttoptr i64 %487 to i32*
  store i32 1, i32* %490
  store %struct.Memory* %loadMem_4008f0, %struct.Memory** %MEMORY
  %loadMem_4008fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 33
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %493 to i64*
  %494 = load i64, i64* %PC.i1178
  %495 = add i64 %494, 115
  %496 = load i64, i64* %PC.i1178
  %497 = add i64 %496, 5
  store i64 %497, i64* %PC.i1178
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %495, i64* %498, align 8
  store %struct.Memory* %loadMem_4008fa, %struct.Memory** %MEMORY
  br label %block_.L_40096d

block_.L_4008ff:                                  ; preds = %block_4008d5
  %loadMem_4008ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %500 = getelementptr inbounds %struct.GPR, %struct.GPR* %499, i32 0, i32 33
  %501 = getelementptr inbounds %struct.Reg, %struct.Reg* %500, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %501 to i64*
  %502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %503 = getelementptr inbounds %struct.GPR, %struct.GPR* %502, i32 0, i32 1
  %504 = getelementptr inbounds %struct.Reg, %struct.Reg* %503, i32 0, i32 0
  %RAX.i1176 = bitcast %union.anon* %504 to i64*
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %506 = getelementptr inbounds %struct.GPR, %struct.GPR* %505, i32 0, i32 15
  %507 = getelementptr inbounds %struct.Reg, %struct.Reg* %506, i32 0, i32 0
  %RBP.i1177 = bitcast %union.anon* %507 to i64*
  %508 = load i64, i64* %RBP.i1177
  %509 = sub i64 %508, 16
  %510 = load i64, i64* %PC.i1175
  %511 = add i64 %510, 4
  store i64 %511, i64* %PC.i1175
  %512 = inttoptr i64 %509 to i64*
  %513 = load i64, i64* %512
  store i64 %513, i64* %RAX.i1176, align 8
  store %struct.Memory* %loadMem_4008ff, %struct.Memory** %MEMORY
  %loadMem_400903 = load %struct.Memory*, %struct.Memory** %MEMORY
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %515 = getelementptr inbounds %struct.GPR, %struct.GPR* %514, i32 0, i32 33
  %516 = getelementptr inbounds %struct.Reg, %struct.Reg* %515, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %516 to i64*
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %518 = getelementptr inbounds %struct.GPR, %struct.GPR* %517, i32 0, i32 5
  %519 = getelementptr inbounds %struct.Reg, %struct.Reg* %518, i32 0, i32 0
  %RCX.i1173 = bitcast %union.anon* %519 to i64*
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %521 = getelementptr inbounds %struct.GPR, %struct.GPR* %520, i32 0, i32 15
  %522 = getelementptr inbounds %struct.Reg, %struct.Reg* %521, i32 0, i32 0
  %RBP.i1174 = bitcast %union.anon* %522 to i64*
  %523 = load i64, i64* %RBP.i1174
  %524 = sub i64 %523, 172
  %525 = load i64, i64* %PC.i1172
  %526 = add i64 %525, 7
  store i64 %526, i64* %PC.i1172
  %527 = inttoptr i64 %524 to i32*
  %528 = load i32, i32* %527
  %529 = sext i32 %528 to i64
  store i64 %529, i64* %RCX.i1173, align 8
  store %struct.Memory* %loadMem_400903, %struct.Memory** %MEMORY
  %loadMem_40090a = load %struct.Memory*, %struct.Memory** %MEMORY
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %531 = getelementptr inbounds %struct.GPR, %struct.GPR* %530, i32 0, i32 33
  %532 = getelementptr inbounds %struct.Reg, %struct.Reg* %531, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %532 to i64*
  %533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %534 = getelementptr inbounds %struct.GPR, %struct.GPR* %533, i32 0, i32 1
  %535 = getelementptr inbounds %struct.Reg, %struct.Reg* %534, i32 0, i32 0
  %RAX.i1169 = bitcast %union.anon* %535 to i64*
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %537 = getelementptr inbounds %struct.GPR, %struct.GPR* %536, i32 0, i32 5
  %538 = getelementptr inbounds %struct.Reg, %struct.Reg* %537, i32 0, i32 0
  %RCX.i1170 = bitcast %union.anon* %538 to i64*
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %540 = getelementptr inbounds %struct.GPR, %struct.GPR* %539, i32 0, i32 11
  %541 = getelementptr inbounds %struct.Reg, %struct.Reg* %540, i32 0, i32 0
  %RDI.i1171 = bitcast %union.anon* %541 to i64*
  %542 = load i64, i64* %RAX.i1169
  %543 = load i64, i64* %RCX.i1170
  %544 = mul i64 %543, 8
  %545 = add i64 %544, %542
  %546 = load i64, i64* %PC.i1168
  %547 = add i64 %546, 4
  store i64 %547, i64* %PC.i1168
  %548 = inttoptr i64 %545 to i64*
  %549 = load i64, i64* %548
  store i64 %549, i64* %RDI.i1171, align 8
  store %struct.Memory* %loadMem_40090a, %struct.Memory** %MEMORY
  %loadMem1_40090e = load %struct.Memory*, %struct.Memory** %MEMORY
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %551 = getelementptr inbounds %struct.GPR, %struct.GPR* %550, i32 0, i32 33
  %552 = getelementptr inbounds %struct.Reg, %struct.Reg* %551, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %552 to i64*
  %553 = load i64, i64* %PC.i1167
  %554 = add i64 %553, -462
  %555 = load i64, i64* %PC.i1167
  %556 = add i64 %555, 5
  %557 = load i64, i64* %PC.i1167
  %558 = add i64 %557, 5
  store i64 %558, i64* %PC.i1167
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %560 = load i64, i64* %559, align 8
  %561 = add i64 %560, -8
  %562 = inttoptr i64 %561 to i64*
  store i64 %556, i64* %562
  store i64 %561, i64* %559, align 8
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %554, i64* %563, align 8
  store %struct.Memory* %loadMem1_40090e, %struct.Memory** %MEMORY
  %loadMem2_40090e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40090e = load i64, i64* %3
  %564 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %loadMem2_40090e)
  store %struct.Memory* %564, %struct.Memory** %MEMORY
  %loadMem_400913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %566 = getelementptr inbounds %struct.GPR, %struct.GPR* %565, i32 0, i32 33
  %567 = getelementptr inbounds %struct.Reg, %struct.Reg* %566, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %567 to i64*
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %569 = getelementptr inbounds %struct.GPR, %struct.GPR* %568, i32 0, i32 1
  %570 = getelementptr inbounds %struct.Reg, %struct.Reg* %569, i32 0, i32 0
  %RAX.i1164 = bitcast %union.anon* %570 to i64*
  %571 = load i64, i64* %RAX.i1164
  %572 = load i64, i64* %PC.i1163
  %573 = add i64 %572, 4
  store i64 %573, i64* %PC.i1163
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %574, align 1
  %575 = trunc i64 %571 to i32
  %576 = and i32 %575, 255
  %577 = call i32 @llvm.ctpop.i32(i32 %576)
  %578 = trunc i32 %577 to i8
  %579 = and i8 %578, 1
  %580 = xor i8 %579, 1
  %581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %580, i8* %581, align 1
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %582, align 1
  %583 = icmp eq i64 %571, 0
  %584 = zext i1 %583 to i8
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %584, i8* %585, align 1
  %586 = lshr i64 %571, 63
  %587 = trunc i64 %586 to i8
  %588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %587, i8* %588, align 1
  %589 = lshr i64 %571, 63
  %590 = xor i64 %586, %589
  %591 = add i64 %590, %589
  %592 = icmp eq i64 %591, 2
  %593 = zext i1 %592 to i8
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %593, i8* %594, align 1
  store %struct.Memory* %loadMem_400913, %struct.Memory** %MEMORY
  %loadMem_400917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %596 = getelementptr inbounds %struct.GPR, %struct.GPR* %595, i32 0, i32 33
  %597 = getelementptr inbounds %struct.Reg, %struct.Reg* %596, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %597 to i64*
  %598 = load i64, i64* %PC.i1162
  %599 = add i64 %598, 38
  %600 = load i64, i64* %PC.i1162
  %601 = add i64 %600, 6
  %602 = load i64, i64* %PC.i1162
  %603 = add i64 %602, 6
  store i64 %603, i64* %PC.i1162
  %604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %605 = load i8, i8* %604, align 1
  %606 = icmp ne i8 %605, 0
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %608 = load i8, i8* %607, align 1
  %609 = icmp ne i8 %608, 0
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %611 = load i8, i8* %610, align 1
  %612 = icmp ne i8 %611, 0
  %613 = xor i1 %609, %612
  %614 = or i1 %606, %613
  %615 = zext i1 %614 to i8
  store i8 %615, i8* %BRANCH_TAKEN, align 1
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %617 = select i1 %614, i64 %599, i64 %601
  store i64 %617, i64* %616, align 8
  store %struct.Memory* %loadMem_400917, %struct.Memory** %MEMORY
  %loadBr_400917 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400917 = icmp eq i8 %loadBr_400917, 1
  br i1 %cmpBr_400917, label %block_.L_40093d, label %block_40091d

block_40091d:                                     ; preds = %block_.L_4008ff
  %loadMem_40091d = load %struct.Memory*, %struct.Memory** %MEMORY
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %619 = getelementptr inbounds %struct.GPR, %struct.GPR* %618, i32 0, i32 33
  %620 = getelementptr inbounds %struct.Reg, %struct.Reg* %619, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %620 to i64*
  %621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %622 = getelementptr inbounds %struct.GPR, %struct.GPR* %621, i32 0, i32 1
  %623 = getelementptr inbounds %struct.Reg, %struct.Reg* %622, i32 0, i32 0
  %RAX.i1160 = bitcast %union.anon* %623 to i64*
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %625 = getelementptr inbounds %struct.GPR, %struct.GPR* %624, i32 0, i32 15
  %626 = getelementptr inbounds %struct.Reg, %struct.Reg* %625, i32 0, i32 0
  %RBP.i1161 = bitcast %union.anon* %626 to i64*
  %627 = load i64, i64* %RBP.i1161
  %628 = sub i64 %627, 16
  %629 = load i64, i64* %PC.i1159
  %630 = add i64 %629, 4
  store i64 %630, i64* %PC.i1159
  %631 = inttoptr i64 %628 to i64*
  %632 = load i64, i64* %631
  store i64 %632, i64* %RAX.i1160, align 8
  store %struct.Memory* %loadMem_40091d, %struct.Memory** %MEMORY
  %loadMem_400921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %634 = getelementptr inbounds %struct.GPR, %struct.GPR* %633, i32 0, i32 33
  %635 = getelementptr inbounds %struct.Reg, %struct.Reg* %634, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %635 to i64*
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 5
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %RCX.i1157 = bitcast %union.anon* %638 to i64*
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %640 = getelementptr inbounds %struct.GPR, %struct.GPR* %639, i32 0, i32 15
  %641 = getelementptr inbounds %struct.Reg, %struct.Reg* %640, i32 0, i32 0
  %RBP.i1158 = bitcast %union.anon* %641 to i64*
  %642 = load i64, i64* %RBP.i1158
  %643 = sub i64 %642, 172
  %644 = load i64, i64* %PC.i1156
  %645 = add i64 %644, 7
  store i64 %645, i64* %PC.i1156
  %646 = inttoptr i64 %643 to i32*
  %647 = load i32, i32* %646
  %648 = sext i32 %647 to i64
  store i64 %648, i64* %RCX.i1157, align 8
  store %struct.Memory* %loadMem_400921, %struct.Memory** %MEMORY
  %loadMem_400928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %650 = getelementptr inbounds %struct.GPR, %struct.GPR* %649, i32 0, i32 33
  %651 = getelementptr inbounds %struct.Reg, %struct.Reg* %650, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %651 to i64*
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 1
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %RAX.i1153 = bitcast %union.anon* %654 to i64*
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %656 = getelementptr inbounds %struct.GPR, %struct.GPR* %655, i32 0, i32 5
  %657 = getelementptr inbounds %struct.Reg, %struct.Reg* %656, i32 0, i32 0
  %RCX.i1154 = bitcast %union.anon* %657 to i64*
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %659 = getelementptr inbounds %struct.GPR, %struct.GPR* %658, i32 0, i32 11
  %660 = getelementptr inbounds %struct.Reg, %struct.Reg* %659, i32 0, i32 0
  %RDI.i1155 = bitcast %union.anon* %660 to i64*
  %661 = load i64, i64* %RAX.i1153
  %662 = load i64, i64* %RCX.i1154
  %663 = mul i64 %662, 8
  %664 = add i64 %663, %661
  %665 = load i64, i64* %PC.i1152
  %666 = add i64 %665, 4
  store i64 %666, i64* %PC.i1152
  %667 = inttoptr i64 %664 to i64*
  %668 = load i64, i64* %667
  store i64 %668, i64* %RDI.i1155, align 8
  store %struct.Memory* %loadMem_400928, %struct.Memory** %MEMORY
  %loadMem1_40092c = load %struct.Memory*, %struct.Memory** %MEMORY
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %670 = getelementptr inbounds %struct.GPR, %struct.GPR* %669, i32 0, i32 33
  %671 = getelementptr inbounds %struct.Reg, %struct.Reg* %670, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %671 to i64*
  %672 = load i64, i64* %PC.i1151
  %673 = add i64 %672, -492
  %674 = load i64, i64* %PC.i1151
  %675 = add i64 %674, 5
  %676 = load i64, i64* %PC.i1151
  %677 = add i64 %676, 5
  store i64 %677, i64* %PC.i1151
  %678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %679 = load i64, i64* %678, align 8
  %680 = add i64 %679, -8
  %681 = inttoptr i64 %680 to i64*
  store i64 %675, i64* %681
  store i64 %680, i64* %678, align 8
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %673, i64* %682, align 8
  store %struct.Memory* %loadMem1_40092c, %struct.Memory** %MEMORY
  %loadMem2_40092c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40092c = load i64, i64* %3
  %683 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %loadMem2_40092c)
  store %struct.Memory* %683, %struct.Memory** %MEMORY
  %loadMem_400931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 33
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %686 to i64*
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %688 = getelementptr inbounds %struct.GPR, %struct.GPR* %687, i32 0, i32 1
  %689 = getelementptr inbounds %struct.Reg, %struct.Reg* %688, i32 0, i32 0
  %RAX.i1147 = bitcast %union.anon* %689 to i64*
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %691 = getelementptr inbounds %struct.GPR, %struct.GPR* %690, i32 0, i32 15
  %692 = getelementptr inbounds %struct.Reg, %struct.Reg* %691, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %692 to i64*
  %693 = load i64, i64* %RBP.i1148
  %694 = sub i64 %693, 184
  %695 = load i64, i64* %RAX.i1147
  %696 = load i64, i64* %PC.i1146
  %697 = add i64 %696, 7
  store i64 %697, i64* %PC.i1146
  %698 = inttoptr i64 %694 to i64*
  store i64 %695, i64* %698
  store %struct.Memory* %loadMem_400931, %struct.Memory** %MEMORY
  %loadMem_400938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %700 = getelementptr inbounds %struct.GPR, %struct.GPR* %699, i32 0, i32 33
  %701 = getelementptr inbounds %struct.Reg, %struct.Reg* %700, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %701 to i64*
  %702 = load i64, i64* %PC.i1145
  %703 = add i64 %702, 48
  %704 = load i64, i64* %PC.i1145
  %705 = add i64 %704, 5
  store i64 %705, i64* %PC.i1145
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %703, i64* %706, align 8
  store %struct.Memory* %loadMem_400938, %struct.Memory** %MEMORY
  br label %block_.L_400968

block_.L_40093d:                                  ; preds = %block_.L_4008ff
  %loadMem_40093d = load %struct.Memory*, %struct.Memory** %MEMORY
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %708 = getelementptr inbounds %struct.GPR, %struct.GPR* %707, i32 0, i32 33
  %709 = getelementptr inbounds %struct.Reg, %struct.Reg* %708, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %709 to i64*
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %711 = getelementptr inbounds %struct.GPR, %struct.GPR* %710, i32 0, i32 9
  %712 = getelementptr inbounds %struct.Reg, %struct.Reg* %711, i32 0, i32 0
  %RSI.i1144 = bitcast %union.anon* %712 to i64*
  %713 = load i64, i64* %PC.i1143
  %714 = add i64 %713, 10
  store i64 %714, i64* %PC.i1143
  store i64 ptrtoint (%G__0x40194b_type* @G__0x40194b to i64), i64* %RSI.i1144, align 8
  store %struct.Memory* %loadMem_40093d, %struct.Memory** %MEMORY
  %loadMem_400947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 33
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %717 to i64*
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %719 = getelementptr inbounds %struct.GPR, %struct.GPR* %718, i32 0, i32 11
  %720 = getelementptr inbounds %struct.Reg, %struct.Reg* %719, i32 0, i32 0
  %RDI.i1142 = bitcast %union.anon* %720 to i64*
  %721 = load i64, i64* %PC.i1141
  %722 = add i64 %721, 8
  store i64 %722, i64* %PC.i1141
  %723 = load i64, i64* bitcast (%G_0x602080_type* @G_0x602080 to i64*)
  store i64 %723, i64* %RDI.i1142, align 8
  store %struct.Memory* %loadMem_400947, %struct.Memory** %MEMORY
  %loadMem_40094f = load %struct.Memory*, %struct.Memory** %MEMORY
  %724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %725 = getelementptr inbounds %struct.GPR, %struct.GPR* %724, i32 0, i32 33
  %726 = getelementptr inbounds %struct.Reg, %struct.Reg* %725, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %726 to i64*
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %728 = getelementptr inbounds %struct.GPR, %struct.GPR* %727, i32 0, i32 1
  %729 = getelementptr inbounds %struct.Reg, %struct.Reg* %728, i32 0, i32 0
  %730 = bitcast %union.anon* %729 to %struct.anon.2*
  %AL.i1140 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %730, i32 0, i32 0
  %731 = load i64, i64* %PC.i1139
  %732 = add i64 %731, 2
  store i64 %732, i64* %PC.i1139
  store i8 0, i8* %AL.i1140, align 1
  store %struct.Memory* %loadMem_40094f, %struct.Memory** %MEMORY
  %loadMem1_400951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %734 = getelementptr inbounds %struct.GPR, %struct.GPR* %733, i32 0, i32 33
  %735 = getelementptr inbounds %struct.Reg, %struct.Reg* %734, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %735 to i64*
  %736 = load i64, i64* %PC.i1138
  %737 = add i64 %736, -561
  %738 = load i64, i64* %PC.i1138
  %739 = add i64 %738, 5
  %740 = load i64, i64* %PC.i1138
  %741 = add i64 %740, 5
  store i64 %741, i64* %PC.i1138
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %743 = load i64, i64* %742, align 8
  %744 = add i64 %743, -8
  %745 = inttoptr i64 %744 to i64*
  store i64 %739, i64* %745
  store i64 %744, i64* %742, align 8
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %737, i64* %746, align 8
  store %struct.Memory* %loadMem1_400951, %struct.Memory** %MEMORY
  %loadMem2_400951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400951 = load i64, i64* %3
  %747 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_400951)
  store %struct.Memory* %747, %struct.Memory** %MEMORY
  %loadMem_400956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %749 = getelementptr inbounds %struct.GPR, %struct.GPR* %748, i32 0, i32 33
  %750 = getelementptr inbounds %struct.Reg, %struct.Reg* %749, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %750 to i64*
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %752 = getelementptr inbounds %struct.GPR, %struct.GPR* %751, i32 0, i32 15
  %753 = getelementptr inbounds %struct.Reg, %struct.Reg* %752, i32 0, i32 0
  %RBP.i1135 = bitcast %union.anon* %753 to i64*
  %754 = load i64, i64* %RBP.i1135
  %755 = sub i64 %754, 4
  %756 = load i64, i64* %PC.i1134
  %757 = add i64 %756, 7
  store i64 %757, i64* %PC.i1134
  %758 = inttoptr i64 %755 to i32*
  store i32 1, i32* %758
  store %struct.Memory* %loadMem_400956, %struct.Memory** %MEMORY
  %loadMem_40095d = load %struct.Memory*, %struct.Memory** %MEMORY
  %759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %760 = getelementptr inbounds %struct.GPR, %struct.GPR* %759, i32 0, i32 33
  %761 = getelementptr inbounds %struct.Reg, %struct.Reg* %760, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %761 to i64*
  %762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %763 = getelementptr inbounds %struct.GPR, %struct.GPR* %762, i32 0, i32 1
  %764 = getelementptr inbounds %struct.Reg, %struct.Reg* %763, i32 0, i32 0
  %EAX.i1132 = bitcast %union.anon* %764 to i32*
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %766 = getelementptr inbounds %struct.GPR, %struct.GPR* %765, i32 0, i32 15
  %767 = getelementptr inbounds %struct.Reg, %struct.Reg* %766, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %767 to i64*
  %768 = load i64, i64* %RBP.i1133
  %769 = sub i64 %768, 212
  %770 = load i32, i32* %EAX.i1132
  %771 = zext i32 %770 to i64
  %772 = load i64, i64* %PC.i1131
  %773 = add i64 %772, 6
  store i64 %773, i64* %PC.i1131
  %774 = inttoptr i64 %769 to i32*
  store i32 %770, i32* %774
  store %struct.Memory* %loadMem_40095d, %struct.Memory** %MEMORY
  %loadMem_400963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %776 = getelementptr inbounds %struct.GPR, %struct.GPR* %775, i32 0, i32 33
  %777 = getelementptr inbounds %struct.Reg, %struct.Reg* %776, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %777 to i64*
  %778 = load i64, i64* %PC.i1130
  %779 = add i64 %778, 3197
  %780 = load i64, i64* %PC.i1130
  %781 = add i64 %780, 5
  store i64 %781, i64* %PC.i1130
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %779, i64* %782, align 8
  store %struct.Memory* %loadMem_400963, %struct.Memory** %MEMORY
  br label %block_.L_4015e0

block_.L_400968:                                  ; preds = %block_40091d
  %loadMem_400968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %784 = getelementptr inbounds %struct.GPR, %struct.GPR* %783, i32 0, i32 33
  %785 = getelementptr inbounds %struct.Reg, %struct.Reg* %784, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %785 to i64*
  %786 = load i64, i64* %PC.i1129
  %787 = add i64 %786, 5
  %788 = load i64, i64* %PC.i1129
  %789 = add i64 %788, 5
  store i64 %789, i64* %PC.i1129
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %787, i64* %790, align 8
  store %struct.Memory* %loadMem_400968, %struct.Memory** %MEMORY
  br label %block_.L_40096d

block_.L_40096d:                                  ; preds = %block_.L_400968, %block_.L_4008f0
  %loadMem_40096d = load %struct.Memory*, %struct.Memory** %MEMORY
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %792 = getelementptr inbounds %struct.GPR, %struct.GPR* %791, i32 0, i32 33
  %793 = getelementptr inbounds %struct.Reg, %struct.Reg* %792, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %793 to i64*
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 1
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %RAX.i1127 = bitcast %union.anon* %796 to i64*
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 15
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %RBP.i1128 = bitcast %union.anon* %799 to i64*
  %800 = load i64, i64* %RBP.i1128
  %801 = sub i64 %800, 172
  %802 = load i64, i64* %PC.i1126
  %803 = add i64 %802, 6
  store i64 %803, i64* %PC.i1126
  %804 = inttoptr i64 %801 to i32*
  %805 = load i32, i32* %804
  %806 = zext i32 %805 to i64
  store i64 %806, i64* %RAX.i1127, align 8
  store %struct.Memory* %loadMem_40096d, %struct.Memory** %MEMORY
  %loadMem_400973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %808 = getelementptr inbounds %struct.GPR, %struct.GPR* %807, i32 0, i32 33
  %809 = getelementptr inbounds %struct.Reg, %struct.Reg* %808, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %809 to i64*
  %810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %811 = getelementptr inbounds %struct.GPR, %struct.GPR* %810, i32 0, i32 1
  %812 = getelementptr inbounds %struct.Reg, %struct.Reg* %811, i32 0, i32 0
  %RAX.i1125 = bitcast %union.anon* %812 to i64*
  %813 = load i64, i64* %RAX.i1125
  %814 = load i64, i64* %PC.i1124
  %815 = add i64 %814, 3
  store i64 %815, i64* %PC.i1124
  %816 = trunc i64 %813 to i32
  %817 = add i32 1, %816
  %818 = zext i32 %817 to i64
  store i64 %818, i64* %RAX.i1125, align 8
  %819 = icmp ult i32 %817, %816
  %820 = icmp ult i32 %817, 1
  %821 = or i1 %819, %820
  %822 = zext i1 %821 to i8
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %822, i8* %823, align 1
  %824 = and i32 %817, 255
  %825 = call i32 @llvm.ctpop.i32(i32 %824)
  %826 = trunc i32 %825 to i8
  %827 = and i8 %826, 1
  %828 = xor i8 %827, 1
  %829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %828, i8* %829, align 1
  %830 = xor i64 1, %813
  %831 = trunc i64 %830 to i32
  %832 = xor i32 %831, %817
  %833 = lshr i32 %832, 4
  %834 = trunc i32 %833 to i8
  %835 = and i8 %834, 1
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %835, i8* %836, align 1
  %837 = icmp eq i32 %817, 0
  %838 = zext i1 %837 to i8
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %838, i8* %839, align 1
  %840 = lshr i32 %817, 31
  %841 = trunc i32 %840 to i8
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %841, i8* %842, align 1
  %843 = lshr i32 %816, 31
  %844 = xor i32 %840, %843
  %845 = add i32 %844, %840
  %846 = icmp eq i32 %845, 2
  %847 = zext i1 %846 to i8
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %847, i8* %848, align 1
  store %struct.Memory* %loadMem_400973, %struct.Memory** %MEMORY
  %loadMem_400976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 33
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %851 to i64*
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 1
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %EAX.i1122 = bitcast %union.anon* %854 to i32*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 15
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %RBP.i1123 = bitcast %union.anon* %857 to i64*
  %858 = load i64, i64* %RBP.i1123
  %859 = sub i64 %858, 172
  %860 = load i32, i32* %EAX.i1122
  %861 = zext i32 %860 to i64
  %862 = load i64, i64* %PC.i1121
  %863 = add i64 %862, 6
  store i64 %863, i64* %PC.i1121
  %864 = inttoptr i64 %859 to i32*
  store i32 %860, i32* %864
  store %struct.Memory* %loadMem_400976, %struct.Memory** %MEMORY
  %loadMem_40097c = load %struct.Memory*, %struct.Memory** %MEMORY
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 33
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %867 to i64*
  %868 = load i64, i64* %PC.i1120
  %869 = add i64 %868, -228
  %870 = load i64, i64* %PC.i1120
  %871 = add i64 %870, 5
  store i64 %871, i64* %PC.i1120
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %869, i64* %872, align 8
  store %struct.Memory* %loadMem_40097c, %struct.Memory** %MEMORY
  br label %block_.L_400898

block_.L_400981:                                  ; preds = %block_.L_400898
  %loadMem_400981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %874 = getelementptr inbounds %struct.GPR, %struct.GPR* %873, i32 0, i32 33
  %875 = getelementptr inbounds %struct.Reg, %struct.Reg* %874, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %875 to i64*
  %876 = load i64, i64* %PC.i1119
  %877 = add i64 %876, 5
  %878 = load i64, i64* %PC.i1119
  %879 = add i64 %878, 5
  store i64 %879, i64* %PC.i1119
  %880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %877, i64* %880, align 8
  store %struct.Memory* %loadMem_400981, %struct.Memory** %MEMORY
  br label %block_.L_400986

block_.L_400986:                                  ; preds = %block_4015d4, %block_.L_400981
  %loadMem_400986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %882 = getelementptr inbounds %struct.GPR, %struct.GPR* %881, i32 0, i32 33
  %883 = getelementptr inbounds %struct.Reg, %struct.Reg* %882, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %883 to i64*
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 1
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %EAX.i1117 = bitcast %union.anon* %886 to i32*
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 1
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %889 to i64*
  %890 = load i64, i64* %RAX.i1118
  %891 = load i32, i32* %EAX.i1117
  %892 = zext i32 %891 to i64
  %893 = load i64, i64* %PC.i1116
  %894 = add i64 %893, 2
  store i64 %894, i64* %PC.i1116
  %895 = xor i64 %892, %890
  %896 = trunc i64 %895 to i32
  %897 = and i64 %895, 4294967295
  store i64 %897, i64* %RAX.i1118, align 8
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %898, align 1
  %899 = and i32 %896, 255
  %900 = call i32 @llvm.ctpop.i32(i32 %899)
  %901 = trunc i32 %900 to i8
  %902 = and i8 %901, 1
  %903 = xor i8 %902, 1
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %903, i8* %904, align 1
  %905 = icmp eq i32 %896, 0
  %906 = zext i1 %905 to i8
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %906, i8* %907, align 1
  %908 = lshr i32 %896, 31
  %909 = trunc i32 %908 to i8
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %909, i8* %910, align 1
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %911, align 1
  %912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %912, align 1
  store %struct.Memory* %loadMem_400986, %struct.Memory** %MEMORY
  %loadMem_400988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %914 = getelementptr inbounds %struct.GPR, %struct.GPR* %913, i32 0, i32 33
  %915 = getelementptr inbounds %struct.Reg, %struct.Reg* %914, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %915 to i64*
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %917 = getelementptr inbounds %struct.GPR, %struct.GPR* %916, i32 0, i32 1
  %918 = getelementptr inbounds %struct.Reg, %struct.Reg* %917, i32 0, i32 0
  %EAX.i1114 = bitcast %union.anon* %918 to i32*
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %920 = getelementptr inbounds %struct.GPR, %struct.GPR* %919, i32 0, i32 11
  %921 = getelementptr inbounds %struct.Reg, %struct.Reg* %920, i32 0, i32 0
  %RDI.i1115 = bitcast %union.anon* %921 to i64*
  %922 = load i32, i32* %EAX.i1114
  %923 = zext i32 %922 to i64
  %924 = load i64, i64* %PC.i1113
  %925 = add i64 %924, 2
  store i64 %925, i64* %PC.i1113
  %926 = and i64 %923, 4294967295
  store i64 %926, i64* %RDI.i1115, align 8
  store %struct.Memory* %loadMem_400988, %struct.Memory** %MEMORY
  %loadMem1_40098a = load %struct.Memory*, %struct.Memory** %MEMORY
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %928 = getelementptr inbounds %struct.GPR, %struct.GPR* %927, i32 0, i32 33
  %929 = getelementptr inbounds %struct.Reg, %struct.Reg* %928, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %929 to i64*
  %930 = load i64, i64* %PC.i1112
  %931 = add i64 %930, -602
  %932 = load i64, i64* %PC.i1112
  %933 = add i64 %932, 5
  %934 = load i64, i64* %PC.i1112
  %935 = add i64 %934, 5
  store i64 %935, i64* %PC.i1112
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %937 = load i64, i64* %936, align 8
  %938 = add i64 %937, -8
  %939 = inttoptr i64 %938 to i64*
  store i64 %933, i64* %939
  store i64 %938, i64* %936, align 8
  %940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %931, i64* %940, align 8
  store %struct.Memory* %loadMem1_40098a, %struct.Memory** %MEMORY
  %loadMem2_40098a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40098a = load i64, i64* %3
  %941 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %loadMem2_40098a)
  store %struct.Memory* %941, %struct.Memory** %MEMORY
  %loadMem_40098f = load %struct.Memory*, %struct.Memory** %MEMORY
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %943 = getelementptr inbounds %struct.GPR, %struct.GPR* %942, i32 0, i32 33
  %944 = getelementptr inbounds %struct.Reg, %struct.Reg* %943, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %944 to i64*
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %946 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %945, i64 0, i64 0
  %YMM0.i1108 = bitcast %union.VectorReg* %946 to %"class.std::bitset"*
  %947 = bitcast %"class.std::bitset"* %YMM0.i1108 to i8*
  %948 = load i64, i64* %PC.i1107
  %949 = add i64 %948, 3961
  %950 = load i64, i64* %PC.i1107
  %951 = add i64 %950, 8
  store i64 %951, i64* %PC.i1107
  %952 = inttoptr i64 %949 to double*
  %953 = load double, double* %952
  %954 = bitcast i8* %947 to double*
  store double %953, double* %954, align 1
  %955 = getelementptr inbounds i8, i8* %947, i64 8
  %956 = bitcast i8* %955 to double*
  store double 0.000000e+00, double* %956, align 1
  store %struct.Memory* %loadMem_40098f, %struct.Memory** %MEMORY
  %loadMem_400997 = load %struct.Memory*, %struct.Memory** %MEMORY
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %958 = getelementptr inbounds %struct.GPR, %struct.GPR* %957, i32 0, i32 33
  %959 = getelementptr inbounds %struct.Reg, %struct.Reg* %958, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %959 to i64*
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %961 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %960, i64 0, i64 1
  %YMM1.i1106 = bitcast %union.VectorReg* %961 to %"class.std::bitset"*
  %962 = bitcast %"class.std::bitset"* %YMM1.i1106 to i8*
  %963 = load i64, i64* %PC.i1105
  %964 = add i64 %963, 3961
  %965 = load i64, i64* %PC.i1105
  %966 = add i64 %965, 8
  store i64 %966, i64* %PC.i1105
  %967 = inttoptr i64 %964 to double*
  %968 = load double, double* %967
  %969 = bitcast i8* %962 to double*
  store double %968, double* %969, align 1
  %970 = getelementptr inbounds i8, i8* %962, i64 8
  %971 = bitcast i8* %970 to double*
  store double 0.000000e+00, double* %971, align 1
  store %struct.Memory* %loadMem_400997, %struct.Memory** %MEMORY
  %loadMem_40099f = load %struct.Memory*, %struct.Memory** %MEMORY
  %972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %973 = getelementptr inbounds %struct.GPR, %struct.GPR* %972, i32 0, i32 33
  %974 = getelementptr inbounds %struct.Reg, %struct.Reg* %973, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %974 to i64*
  %975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %976 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %975, i64 0, i64 2
  %YMM2.i1104 = bitcast %union.VectorReg* %976 to %"class.std::bitset"*
  %977 = bitcast %"class.std::bitset"* %YMM2.i1104 to i8*
  %978 = load i64, i64* %PC.i1103
  %979 = add i64 %978, 3961
  %980 = load i64, i64* %PC.i1103
  %981 = add i64 %980, 8
  store i64 %981, i64* %PC.i1103
  %982 = inttoptr i64 %979 to double*
  %983 = load double, double* %982
  %984 = bitcast i8* %977 to double*
  store double %983, double* %984, align 1
  %985 = getelementptr inbounds i8, i8* %977, i64 8
  %986 = bitcast i8* %985 to double*
  store double 0.000000e+00, double* %986, align 1
  store %struct.Memory* %loadMem_40099f, %struct.Memory** %MEMORY
  %loadMem_4009a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %988 = getelementptr inbounds %struct.GPR, %struct.GPR* %987, i32 0, i32 33
  %989 = getelementptr inbounds %struct.Reg, %struct.Reg* %988, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %989 to i64*
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %991 = getelementptr inbounds %struct.GPR, %struct.GPR* %990, i32 0, i32 1
  %992 = getelementptr inbounds %struct.Reg, %struct.Reg* %991, i32 0, i32 0
  %RAX.i1101 = bitcast %union.anon* %992 to i64*
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %994 = getelementptr inbounds %struct.GPR, %struct.GPR* %993, i32 0, i32 15
  %995 = getelementptr inbounds %struct.Reg, %struct.Reg* %994, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %995 to i64*
  %996 = load i64, i64* %RBP.i1102
  %997 = sub i64 %996, 192
  %998 = load i64, i64* %RAX.i1101
  %999 = load i64, i64* %PC.i1100
  %1000 = add i64 %999, 7
  store i64 %1000, i64* %PC.i1100
  %1001 = inttoptr i64 %997 to i64*
  store i64 %998, i64* %1001
  store %struct.Memory* %loadMem_4009a7, %struct.Memory** %MEMORY
  %loadMem_4009ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1003 = getelementptr inbounds %struct.GPR, %struct.GPR* %1002, i32 0, i32 33
  %1004 = getelementptr inbounds %struct.Reg, %struct.Reg* %1003, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %1004 to i64*
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1006 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1005, i64 0, i64 2
  %XMM2.i1099 = bitcast %union.VectorReg* %1006 to %union.vec128_t*
  %1007 = bitcast %union.vec128_t* %XMM2.i1099 to i8*
  %1008 = load i64, i64* %PC.i1098
  %1009 = add i64 %1008, 9
  store i64 %1009, i64* %PC.i1098
  %1010 = bitcast i8* %1007 to double*
  %1011 = load double, double* %1010, align 1
  store double %1011, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  store %struct.Memory* %loadMem_4009ae, %struct.Memory** %MEMORY
  %loadMem_4009b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1013 = getelementptr inbounds %struct.GPR, %struct.GPR* %1012, i32 0, i32 33
  %1014 = getelementptr inbounds %struct.Reg, %struct.Reg* %1013, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %1014 to i64*
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1016 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1015, i64 0, i64 1
  %XMM1.i1097 = bitcast %union.VectorReg* %1016 to %union.vec128_t*
  %1017 = bitcast %union.vec128_t* %XMM1.i1097 to i8*
  %1018 = load i64, i64* %PC.i1096
  %1019 = add i64 %1018, 9
  store i64 %1019, i64* %PC.i1096
  %1020 = bitcast i8* %1017 to double*
  %1021 = load double, double* %1020, align 1
  store double %1021, double* bitcast (%G_0x6020a0_type* @G_0x6020a0 to double*)
  store %struct.Memory* %loadMem_4009b7, %struct.Memory** %MEMORY
  %loadMem_4009c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1023 = getelementptr inbounds %struct.GPR, %struct.GPR* %1022, i32 0, i32 33
  %1024 = getelementptr inbounds %struct.Reg, %struct.Reg* %1023, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %1024 to i64*
  %1025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1026 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1025, i64 0, i64 0
  %XMM0.i1095 = bitcast %union.VectorReg* %1026 to %union.vec128_t*
  %1027 = bitcast %union.vec128_t* %XMM0.i1095 to i8*
  %1028 = load i64, i64* %PC.i1094
  %1029 = add i64 %1028, 9
  store i64 %1029, i64* %PC.i1094
  %1030 = bitcast i8* %1027 to double*
  %1031 = load double, double* %1030, align 1
  store double %1031, double* bitcast (%G_0x6020b0_type* @G_0x6020b0 to double*)
  store %struct.Memory* %loadMem_4009c0, %struct.Memory** %MEMORY
  %loadMem_4009c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1033 = getelementptr inbounds %struct.GPR, %struct.GPR* %1032, i32 0, i32 33
  %1034 = getelementptr inbounds %struct.Reg, %struct.Reg* %1033, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %1034 to i64*
  %1035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1036 = getelementptr inbounds %struct.GPR, %struct.GPR* %1035, i32 0, i32 1
  %1037 = getelementptr inbounds %struct.Reg, %struct.Reg* %1036, i32 0, i32 0
  %RAX.i1092 = bitcast %union.anon* %1037 to i64*
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1039 = getelementptr inbounds %struct.GPR, %struct.GPR* %1038, i32 0, i32 15
  %1040 = getelementptr inbounds %struct.Reg, %struct.Reg* %1039, i32 0, i32 0
  %RBP.i1093 = bitcast %union.anon* %1040 to i64*
  %1041 = load i64, i64* %RBP.i1093
  %1042 = sub i64 %1041, 184
  %1043 = load i64, i64* %PC.i1091
  %1044 = add i64 %1043, 7
  store i64 %1044, i64* %PC.i1091
  %1045 = inttoptr i64 %1042 to i64*
  %1046 = load i64, i64* %1045
  store i64 %1046, i64* %RAX.i1092, align 8
  store %struct.Memory* %loadMem_4009c9, %struct.Memory** %MEMORY
  %loadMem_4009d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1048 = getelementptr inbounds %struct.GPR, %struct.GPR* %1047, i32 0, i32 33
  %1049 = getelementptr inbounds %struct.Reg, %struct.Reg* %1048, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %1049 to i64*
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1051 = getelementptr inbounds %struct.GPR, %struct.GPR* %1050, i32 0, i32 1
  %1052 = getelementptr inbounds %struct.Reg, %struct.Reg* %1051, i32 0, i32 0
  %RAX.i1089 = bitcast %union.anon* %1052 to i64*
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1054 = getelementptr inbounds %struct.GPR, %struct.GPR* %1053, i32 0, i32 15
  %1055 = getelementptr inbounds %struct.Reg, %struct.Reg* %1054, i32 0, i32 0
  %RBP.i1090 = bitcast %union.anon* %1055 to i64*
  %1056 = load i64, i64* %RBP.i1090
  %1057 = sub i64 %1056, 168
  %1058 = load i64, i64* %RAX.i1089
  %1059 = load i64, i64* %PC.i1088
  %1060 = add i64 %1059, 7
  store i64 %1060, i64* %PC.i1088
  %1061 = inttoptr i64 %1057 to i64*
  store i64 %1058, i64* %1061
  store %struct.Memory* %loadMem_4009d0, %struct.Memory** %MEMORY
  %loadMem_4009d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 33
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %1064 to i64*
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 15
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %1067 to i64*
  %1068 = load i64, i64* %RBP.i1087
  %1069 = sub i64 %1068, 172
  %1070 = load i64, i64* %PC.i1086
  %1071 = add i64 %1070, 10
  store i64 %1071, i64* %PC.i1086
  %1072 = inttoptr i64 %1069 to i32*
  store i32 1, i32* %1072
  store %struct.Memory* %loadMem_4009d7, %struct.Memory** %MEMORY
  %loadMem_4009e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1074 = getelementptr inbounds %struct.GPR, %struct.GPR* %1073, i32 0, i32 33
  %1075 = getelementptr inbounds %struct.Reg, %struct.Reg* %1074, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %1075 to i64*
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1077 = getelementptr inbounds %struct.GPR, %struct.GPR* %1076, i32 0, i32 15
  %1078 = getelementptr inbounds %struct.Reg, %struct.Reg* %1077, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %1078 to i64*
  %1079 = load i64, i64* %RBP.i1085
  %1080 = sub i64 %1079, 176
  %1081 = load i64, i64* %PC.i1084
  %1082 = add i64 %1081, 10
  store i64 %1082, i64* %PC.i1084
  %1083 = inttoptr i64 %1080 to i32*
  store i32 1, i32* %1083
  store %struct.Memory* %loadMem_4009e1, %struct.Memory** %MEMORY
  br label %block_.L_4009eb

block_.L_4009eb:                                  ; preds = %block_40159b, %block_.L_400986
  %loadMem_4009eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1085 = getelementptr inbounds %struct.GPR, %struct.GPR* %1084, i32 0, i32 33
  %1086 = getelementptr inbounds %struct.Reg, %struct.Reg* %1085, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %1086 to i64*
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1088 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1087, i64 0, i64 0
  %YMM0.i1083 = bitcast %union.VectorReg* %1088 to %"class.std::bitset"*
  %1089 = bitcast %"class.std::bitset"* %YMM0.i1083 to i8*
  %1090 = load i64, i64* %PC.i1082
  %1091 = add i64 %1090, 3893
  %1092 = load i64, i64* %PC.i1082
  %1093 = add i64 %1092, 8
  store i64 %1093, i64* %PC.i1082
  %1094 = inttoptr i64 %1091 to double*
  %1095 = load double, double* %1094
  %1096 = bitcast i8* %1089 to double*
  store double %1095, double* %1096, align 1
  %1097 = getelementptr inbounds i8, i8* %1089, i64 8
  %1098 = bitcast i8* %1097 to double*
  store double 0.000000e+00, double* %1098, align 1
  store %struct.Memory* %loadMem_4009eb, %struct.Memory** %MEMORY
  %loadMem_4009f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1100 = getelementptr inbounds %struct.GPR, %struct.GPR* %1099, i32 0, i32 33
  %1101 = getelementptr inbounds %struct.Reg, %struct.Reg* %1100, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %1101 to i64*
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1103 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1102, i64 0, i64 1
  %YMM1.i1081 = bitcast %union.VectorReg* %1103 to %"class.std::bitset"*
  %1104 = bitcast %"class.std::bitset"* %YMM1.i1081 to i8*
  %1105 = load i64, i64* %PC.i1080
  %1106 = add i64 %1105, 3893
  %1107 = load i64, i64* %PC.i1080
  %1108 = add i64 %1107, 8
  store i64 %1108, i64* %PC.i1080
  %1109 = inttoptr i64 %1106 to double*
  %1110 = load double, double* %1109
  %1111 = bitcast i8* %1104 to double*
  store double %1110, double* %1111, align 1
  %1112 = getelementptr inbounds i8, i8* %1104, i64 8
  %1113 = bitcast i8* %1112 to double*
  store double 0.000000e+00, double* %1113, align 1
  store %struct.Memory* %loadMem_4009f3, %struct.Memory** %MEMORY
  %loadMem_4009fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1115 = getelementptr inbounds %struct.GPR, %struct.GPR* %1114, i32 0, i32 33
  %1116 = getelementptr inbounds %struct.Reg, %struct.Reg* %1115, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %1116 to i64*
  %1117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1118 = getelementptr inbounds %struct.GPR, %struct.GPR* %1117, i32 0, i32 15
  %1119 = getelementptr inbounds %struct.Reg, %struct.Reg* %1118, i32 0, i32 0
  %RBP.i1079 = bitcast %union.anon* %1119 to i64*
  %1120 = load i64, i64* %RBP.i1079
  %1121 = sub i64 %1120, 32
  %1122 = load i64, i64* %PC.i1078
  %1123 = add i64 %1122, 8
  store i64 %1123, i64* %PC.i1078
  %1124 = inttoptr i64 %1121 to i64*
  store i64 0, i64* %1124
  store %struct.Memory* %loadMem_4009fb, %struct.Memory** %MEMORY
  %loadMem_400a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1126 = getelementptr inbounds %struct.GPR, %struct.GPR* %1125, i32 0, i32 33
  %1127 = getelementptr inbounds %struct.Reg, %struct.Reg* %1126, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %1127 to i64*
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1129 = getelementptr inbounds %struct.GPR, %struct.GPR* %1128, i32 0, i32 1
  %1130 = getelementptr inbounds %struct.Reg, %struct.Reg* %1129, i32 0, i32 0
  %RAX.i1076 = bitcast %union.anon* %1130 to i64*
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1132 = getelementptr inbounds %struct.GPR, %struct.GPR* %1131, i32 0, i32 15
  %1133 = getelementptr inbounds %struct.Reg, %struct.Reg* %1132, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %1133 to i64*
  %1134 = load i64, i64* %RBP.i1077
  %1135 = sub i64 %1134, 168
  %1136 = load i64, i64* %PC.i1075
  %1137 = add i64 %1136, 8
  store i64 %1137, i64* %PC.i1075
  %1138 = inttoptr i64 %1135 to i64*
  %1139 = load i64, i64* %1138
  %1140 = sext i64 %1139 to i128
  %1141 = and i128 %1140, -18446744073709551616
  %1142 = zext i64 %1139 to i128
  %1143 = or i128 %1141, %1142
  %1144 = mul i128 %1143, 12
  %1145 = trunc i128 %1144 to i64
  store i64 %1145, i64* %RAX.i1076, align 8
  %1146 = sext i64 %1145 to i128
  %1147 = icmp ne i128 %1146, %1144
  %1148 = zext i1 %1147 to i8
  %1149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1148, i8* %1149, align 1
  %1150 = trunc i128 %1144 to i32
  %1151 = and i32 %1150, 255
  %1152 = call i32 @llvm.ctpop.i32(i32 %1151)
  %1153 = trunc i32 %1152 to i8
  %1154 = and i8 %1153, 1
  %1155 = xor i8 %1154, 1
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1155, i8* %1156, align 1
  %1157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1157, align 1
  %1158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1158, align 1
  %1159 = lshr i64 %1145, 63
  %1160 = trunc i64 %1159 to i8
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1160, i8* %1161, align 1
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1148, i8* %1162, align 1
  store %struct.Memory* %loadMem_400a03, %struct.Memory** %MEMORY
  %loadMem_400a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1164 = getelementptr inbounds %struct.GPR, %struct.GPR* %1163, i32 0, i32 33
  %1165 = getelementptr inbounds %struct.Reg, %struct.Reg* %1164, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %1165 to i64*
  %1166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1167 = getelementptr inbounds %struct.GPR, %struct.GPR* %1166, i32 0, i32 1
  %1168 = getelementptr inbounds %struct.Reg, %struct.Reg* %1167, i32 0, i32 0
  %RAX.i1073 = bitcast %union.anon* %1168 to i64*
  %1169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1170 = getelementptr inbounds %struct.GPR, %struct.GPR* %1169, i32 0, i32 15
  %1171 = getelementptr inbounds %struct.Reg, %struct.Reg* %1170, i32 0, i32 0
  %RBP.i1074 = bitcast %union.anon* %1171 to i64*
  %1172 = load i64, i64* %RBP.i1074
  %1173 = sub i64 %1172, 40
  %1174 = load i64, i64* %RAX.i1073
  %1175 = load i64, i64* %PC.i1072
  %1176 = add i64 %1175, 4
  store i64 %1176, i64* %PC.i1072
  %1177 = inttoptr i64 %1173 to i64*
  store i64 %1174, i64* %1177
  store %struct.Memory* %loadMem_400a0b, %struct.Memory** %MEMORY
  %loadMem_400a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1179 = getelementptr inbounds %struct.GPR, %struct.GPR* %1178, i32 0, i32 33
  %1180 = getelementptr inbounds %struct.Reg, %struct.Reg* %1179, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %1180 to i64*
  %1181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1182 = getelementptr inbounds %struct.GPR, %struct.GPR* %1181, i32 0, i32 1
  %1183 = getelementptr inbounds %struct.Reg, %struct.Reg* %1182, i32 0, i32 0
  %RAX.i1070 = bitcast %union.anon* %1183 to i64*
  %1184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1185 = getelementptr inbounds %struct.GPR, %struct.GPR* %1184, i32 0, i32 15
  %1186 = getelementptr inbounds %struct.Reg, %struct.Reg* %1185, i32 0, i32 0
  %RBP.i1071 = bitcast %union.anon* %1186 to i64*
  %1187 = load i64, i64* %RBP.i1071
  %1188 = sub i64 %1187, 168
  %1189 = load i64, i64* %PC.i1069
  %1190 = add i64 %1189, 8
  store i64 %1190, i64* %PC.i1069
  %1191 = inttoptr i64 %1188 to i64*
  %1192 = load i64, i64* %1191
  %1193 = sext i64 %1192 to i128
  %1194 = and i128 %1193, -18446744073709551616
  %1195 = zext i64 %1192 to i128
  %1196 = or i128 %1194, %1195
  %1197 = mul i128 %1196, 14
  %1198 = trunc i128 %1197 to i64
  store i64 %1198, i64* %RAX.i1070, align 8
  %1199 = sext i64 %1198 to i128
  %1200 = icmp ne i128 %1199, %1197
  %1201 = zext i1 %1200 to i8
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1201, i8* %1202, align 1
  %1203 = trunc i128 %1197 to i32
  %1204 = and i32 %1203, 255
  %1205 = call i32 @llvm.ctpop.i32(i32 %1204)
  %1206 = trunc i32 %1205 to i8
  %1207 = and i8 %1206, 1
  %1208 = xor i8 %1207, 1
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1208, i8* %1209, align 1
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1210, align 1
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1211, align 1
  %1212 = lshr i64 %1198, 63
  %1213 = trunc i64 %1212 to i8
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1213, i8* %1214, align 1
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1201, i8* %1215, align 1
  store %struct.Memory* %loadMem_400a0f, %struct.Memory** %MEMORY
  %loadMem_400a17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1217 = getelementptr inbounds %struct.GPR, %struct.GPR* %1216, i32 0, i32 33
  %1218 = getelementptr inbounds %struct.Reg, %struct.Reg* %1217, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %1218 to i64*
  %1219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1220 = getelementptr inbounds %struct.GPR, %struct.GPR* %1219, i32 0, i32 1
  %1221 = getelementptr inbounds %struct.Reg, %struct.Reg* %1220, i32 0, i32 0
  %RAX.i1067 = bitcast %union.anon* %1221 to i64*
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1223 = getelementptr inbounds %struct.GPR, %struct.GPR* %1222, i32 0, i32 15
  %1224 = getelementptr inbounds %struct.Reg, %struct.Reg* %1223, i32 0, i32 0
  %RBP.i1068 = bitcast %union.anon* %1224 to i64*
  %1225 = load i64, i64* %RBP.i1068
  %1226 = sub i64 %1225, 48
  %1227 = load i64, i64* %RAX.i1067
  %1228 = load i64, i64* %PC.i1066
  %1229 = add i64 %1228, 4
  store i64 %1229, i64* %PC.i1066
  %1230 = inttoptr i64 %1226 to i64*
  store i64 %1227, i64* %1230
  store %struct.Memory* %loadMem_400a17, %struct.Memory** %MEMORY
  %loadMem_400a1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1232 = getelementptr inbounds %struct.GPR, %struct.GPR* %1231, i32 0, i32 33
  %1233 = getelementptr inbounds %struct.Reg, %struct.Reg* %1232, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %1233 to i64*
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1235 = getelementptr inbounds %struct.GPR, %struct.GPR* %1234, i32 0, i32 1
  %1236 = getelementptr inbounds %struct.Reg, %struct.Reg* %1235, i32 0, i32 0
  %RAX.i1064 = bitcast %union.anon* %1236 to i64*
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1238 = getelementptr inbounds %struct.GPR, %struct.GPR* %1237, i32 0, i32 15
  %1239 = getelementptr inbounds %struct.Reg, %struct.Reg* %1238, i32 0, i32 0
  %RBP.i1065 = bitcast %union.anon* %1239 to i64*
  %1240 = load i64, i64* %RBP.i1065
  %1241 = sub i64 %1240, 168
  %1242 = load i64, i64* %PC.i1063
  %1243 = add i64 %1242, 11
  store i64 %1243, i64* %PC.i1063
  %1244 = inttoptr i64 %1241 to i64*
  %1245 = load i64, i64* %1244
  %1246 = sext i64 %1245 to i128
  %1247 = and i128 %1246, -18446744073709551616
  %1248 = zext i64 %1245 to i128
  %1249 = or i128 %1247, %1248
  %1250 = mul i128 %1249, 345
  %1251 = trunc i128 %1250 to i64
  store i64 %1251, i64* %RAX.i1064, align 8
  %1252 = sext i64 %1251 to i128
  %1253 = icmp ne i128 %1252, %1250
  %1254 = zext i1 %1253 to i8
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1254, i8* %1255, align 1
  %1256 = trunc i128 %1250 to i32
  %1257 = and i32 %1256, 255
  %1258 = call i32 @llvm.ctpop.i32(i32 %1257)
  %1259 = trunc i32 %1258 to i8
  %1260 = and i8 %1259, 1
  %1261 = xor i8 %1260, 1
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1261, i8* %1262, align 1
  %1263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1263, align 1
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1264, align 1
  %1265 = lshr i64 %1251, 63
  %1266 = trunc i64 %1265 to i8
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1266, i8* %1267, align 1
  %1268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1254, i8* %1268, align 1
  store %struct.Memory* %loadMem_400a1b, %struct.Memory** %MEMORY
  %loadMem_400a26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1270 = getelementptr inbounds %struct.GPR, %struct.GPR* %1269, i32 0, i32 33
  %1271 = getelementptr inbounds %struct.Reg, %struct.Reg* %1270, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %1271 to i64*
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1273 = getelementptr inbounds %struct.GPR, %struct.GPR* %1272, i32 0, i32 1
  %1274 = getelementptr inbounds %struct.Reg, %struct.Reg* %1273, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %1274 to i64*
  %1275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1276 = getelementptr inbounds %struct.GPR, %struct.GPR* %1275, i32 0, i32 15
  %1277 = getelementptr inbounds %struct.Reg, %struct.Reg* %1276, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %1277 to i64*
  %1278 = load i64, i64* %RBP.i1062
  %1279 = sub i64 %1278, 56
  %1280 = load i64, i64* %RAX.i1061
  %1281 = load i64, i64* %PC.i1060
  %1282 = add i64 %1281, 4
  store i64 %1282, i64* %PC.i1060
  %1283 = inttoptr i64 %1279 to i64*
  store i64 %1280, i64* %1283
  store %struct.Memory* %loadMem_400a26, %struct.Memory** %MEMORY
  %loadMem_400a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1285 = getelementptr inbounds %struct.GPR, %struct.GPR* %1284, i32 0, i32 33
  %1286 = getelementptr inbounds %struct.Reg, %struct.Reg* %1285, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %1286 to i64*
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1288 = getelementptr inbounds %struct.GPR, %struct.GPR* %1287, i32 0, i32 1
  %1289 = getelementptr inbounds %struct.Reg, %struct.Reg* %1288, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %1289 to i64*
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1291 = getelementptr inbounds %struct.GPR, %struct.GPR* %1290, i32 0, i32 15
  %1292 = getelementptr inbounds %struct.Reg, %struct.Reg* %1291, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %1292 to i64*
  %1293 = load i64, i64* %RBP.i1059
  %1294 = sub i64 %1293, 168
  %1295 = load i64, i64* %PC.i1057
  %1296 = add i64 %1295, 11
  store i64 %1296, i64* %PC.i1057
  %1297 = inttoptr i64 %1294 to i64*
  %1298 = load i64, i64* %1297
  %1299 = sext i64 %1298 to i128
  %1300 = and i128 %1299, -18446744073709551616
  %1301 = zext i64 %1298 to i128
  %1302 = or i128 %1300, %1301
  %1303 = mul i128 %1302, 210
  %1304 = trunc i128 %1303 to i64
  store i64 %1304, i64* %RAX.i1058, align 8
  %1305 = sext i64 %1304 to i128
  %1306 = icmp ne i128 %1305, %1303
  %1307 = zext i1 %1306 to i8
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1307, i8* %1308, align 1
  %1309 = trunc i128 %1303 to i32
  %1310 = and i32 %1309, 255
  %1311 = call i32 @llvm.ctpop.i32(i32 %1310)
  %1312 = trunc i32 %1311 to i8
  %1313 = and i8 %1312, 1
  %1314 = xor i8 %1313, 1
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1314, i8* %1315, align 1
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1316, align 1
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1317, align 1
  %1318 = lshr i64 %1304, 63
  %1319 = trunc i64 %1318 to i8
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1319, i8* %1320, align 1
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1307, i8* %1321, align 1
  store %struct.Memory* %loadMem_400a2a, %struct.Memory** %MEMORY
  %loadMem_400a35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1323 = getelementptr inbounds %struct.GPR, %struct.GPR* %1322, i32 0, i32 33
  %1324 = getelementptr inbounds %struct.Reg, %struct.Reg* %1323, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %1324 to i64*
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1326 = getelementptr inbounds %struct.GPR, %struct.GPR* %1325, i32 0, i32 1
  %1327 = getelementptr inbounds %struct.Reg, %struct.Reg* %1326, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %1327 to i64*
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1329 = getelementptr inbounds %struct.GPR, %struct.GPR* %1328, i32 0, i32 15
  %1330 = getelementptr inbounds %struct.Reg, %struct.Reg* %1329, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %1330 to i64*
  %1331 = load i64, i64* %RBP.i1056
  %1332 = sub i64 %1331, 64
  %1333 = load i64, i64* %RAX.i1055
  %1334 = load i64, i64* %PC.i1054
  %1335 = add i64 %1334, 4
  store i64 %1335, i64* %PC.i1054
  %1336 = inttoptr i64 %1332 to i64*
  store i64 %1333, i64* %1336
  store %struct.Memory* %loadMem_400a35, %struct.Memory** %MEMORY
  %loadMem_400a39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1338 = getelementptr inbounds %struct.GPR, %struct.GPR* %1337, i32 0, i32 33
  %1339 = getelementptr inbounds %struct.Reg, %struct.Reg* %1338, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %1339 to i64*
  %1340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1341 = getelementptr inbounds %struct.GPR, %struct.GPR* %1340, i32 0, i32 1
  %1342 = getelementptr inbounds %struct.Reg, %struct.Reg* %1341, i32 0, i32 0
  %RAX.i1052 = bitcast %union.anon* %1342 to i64*
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1344 = getelementptr inbounds %struct.GPR, %struct.GPR* %1343, i32 0, i32 15
  %1345 = getelementptr inbounds %struct.Reg, %struct.Reg* %1344, i32 0, i32 0
  %RBP.i1053 = bitcast %union.anon* %1345 to i64*
  %1346 = load i64, i64* %RBP.i1053
  %1347 = sub i64 %1346, 168
  %1348 = load i64, i64* %PC.i1051
  %1349 = add i64 %1348, 7
  store i64 %1349, i64* %PC.i1051
  %1350 = inttoptr i64 %1347 to i64*
  %1351 = load i64, i64* %1350
  store i64 %1351, i64* %RAX.i1052, align 8
  store %struct.Memory* %loadMem_400a39, %struct.Memory** %MEMORY
  %loadMem_400a40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1353 = getelementptr inbounds %struct.GPR, %struct.GPR* %1352, i32 0, i32 33
  %1354 = getelementptr inbounds %struct.Reg, %struct.Reg* %1353, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %1354 to i64*
  %1355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1356 = getelementptr inbounds %struct.GPR, %struct.GPR* %1355, i32 0, i32 1
  %1357 = getelementptr inbounds %struct.Reg, %struct.Reg* %1356, i32 0, i32 0
  %RAX.i1050 = bitcast %union.anon* %1357 to i64*
  %1358 = load i64, i64* %RAX.i1050
  %1359 = load i64, i64* %PC.i1049
  %1360 = add i64 %1359, 4
  store i64 %1360, i64* %PC.i1049
  %1361 = shl i64 %1358, 4
  %1362 = icmp slt i64 %1361, 0
  %1363 = shl i64 %1361, 1
  store i64 %1363, i64* %RAX.i1050, align 8
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1365 = zext i1 %1362 to i8
  store i8 %1365, i8* %1364, align 1
  %1366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1367 = trunc i64 %1363 to i32
  %1368 = and i32 %1367, 254
  %1369 = call i32 @llvm.ctpop.i32(i32 %1368)
  %1370 = trunc i32 %1369 to i8
  %1371 = and i8 %1370, 1
  %1372 = xor i8 %1371, 1
  store i8 %1372, i8* %1366, align 1
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1373, align 1
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1375 = icmp eq i64 %1363, 0
  %1376 = zext i1 %1375 to i8
  store i8 %1376, i8* %1374, align 1
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1378 = lshr i64 %1363, 63
  %1379 = trunc i64 %1378 to i8
  store i8 %1379, i8* %1377, align 1
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1380, align 1
  store %struct.Memory* %loadMem_400a40, %struct.Memory** %MEMORY
  %loadMem_400a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1382 = getelementptr inbounds %struct.GPR, %struct.GPR* %1381, i32 0, i32 33
  %1383 = getelementptr inbounds %struct.Reg, %struct.Reg* %1382, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %1383 to i64*
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1385 = getelementptr inbounds %struct.GPR, %struct.GPR* %1384, i32 0, i32 1
  %1386 = getelementptr inbounds %struct.Reg, %struct.Reg* %1385, i32 0, i32 0
  %RAX.i1047 = bitcast %union.anon* %1386 to i64*
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1388 = getelementptr inbounds %struct.GPR, %struct.GPR* %1387, i32 0, i32 15
  %1389 = getelementptr inbounds %struct.Reg, %struct.Reg* %1388, i32 0, i32 0
  %RBP.i1048 = bitcast %union.anon* %1389 to i64*
  %1390 = load i64, i64* %RBP.i1048
  %1391 = sub i64 %1390, 72
  %1392 = load i64, i64* %RAX.i1047
  %1393 = load i64, i64* %PC.i1046
  %1394 = add i64 %1393, 4
  store i64 %1394, i64* %PC.i1046
  %1395 = inttoptr i64 %1391 to i64*
  store i64 %1392, i64* %1395
  store %struct.Memory* %loadMem_400a44, %struct.Memory** %MEMORY
  %loadMem_400a48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1397 = getelementptr inbounds %struct.GPR, %struct.GPR* %1396, i32 0, i32 33
  %1398 = getelementptr inbounds %struct.Reg, %struct.Reg* %1397, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %1398 to i64*
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1400 = getelementptr inbounds %struct.GPR, %struct.GPR* %1399, i32 0, i32 1
  %1401 = getelementptr inbounds %struct.Reg, %struct.Reg* %1400, i32 0, i32 0
  %RAX.i1044 = bitcast %union.anon* %1401 to i64*
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1403 = getelementptr inbounds %struct.GPR, %struct.GPR* %1402, i32 0, i32 15
  %1404 = getelementptr inbounds %struct.Reg, %struct.Reg* %1403, i32 0, i32 0
  %RBP.i1045 = bitcast %union.anon* %1404 to i64*
  %1405 = load i64, i64* %RBP.i1045
  %1406 = sub i64 %1405, 168
  %1407 = load i64, i64* %PC.i1043
  %1408 = add i64 %1407, 11
  store i64 %1408, i64* %PC.i1043
  %1409 = inttoptr i64 %1406 to i64*
  %1410 = load i64, i64* %1409
  %1411 = sext i64 %1410 to i128
  %1412 = and i128 %1411, -18446744073709551616
  %1413 = zext i64 %1410 to i128
  %1414 = or i128 %1412, %1413
  %1415 = mul i128 %1414, 899
  %1416 = trunc i128 %1415 to i64
  store i64 %1416, i64* %RAX.i1044, align 8
  %1417 = sext i64 %1416 to i128
  %1418 = icmp ne i128 %1417, %1415
  %1419 = zext i1 %1418 to i8
  %1420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1419, i8* %1420, align 1
  %1421 = trunc i128 %1415 to i32
  %1422 = and i32 %1421, 255
  %1423 = call i32 @llvm.ctpop.i32(i32 %1422)
  %1424 = trunc i32 %1423 to i8
  %1425 = and i8 %1424, 1
  %1426 = xor i8 %1425, 1
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1426, i8* %1427, align 1
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1428, align 1
  %1429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1429, align 1
  %1430 = lshr i64 %1416, 63
  %1431 = trunc i64 %1430 to i8
  %1432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1431, i8* %1432, align 1
  %1433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1419, i8* %1433, align 1
  store %struct.Memory* %loadMem_400a48, %struct.Memory** %MEMORY
  %loadMem_400a53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1435 = getelementptr inbounds %struct.GPR, %struct.GPR* %1434, i32 0, i32 33
  %1436 = getelementptr inbounds %struct.Reg, %struct.Reg* %1435, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %1436 to i64*
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1438 = getelementptr inbounds %struct.GPR, %struct.GPR* %1437, i32 0, i32 1
  %1439 = getelementptr inbounds %struct.Reg, %struct.Reg* %1438, i32 0, i32 0
  %RAX.i1041 = bitcast %union.anon* %1439 to i64*
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1441 = getelementptr inbounds %struct.GPR, %struct.GPR* %1440, i32 0, i32 15
  %1442 = getelementptr inbounds %struct.Reg, %struct.Reg* %1441, i32 0, i32 0
  %RBP.i1042 = bitcast %union.anon* %1442 to i64*
  %1443 = load i64, i64* %RBP.i1042
  %1444 = sub i64 %1443, 80
  %1445 = load i64, i64* %RAX.i1041
  %1446 = load i64, i64* %PC.i1040
  %1447 = add i64 %1446, 4
  store i64 %1447, i64* %PC.i1040
  %1448 = inttoptr i64 %1444 to i64*
  store i64 %1445, i64* %1448
  store %struct.Memory* %loadMem_400a53, %struct.Memory** %MEMORY
  %loadMem_400a57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1450 = getelementptr inbounds %struct.GPR, %struct.GPR* %1449, i32 0, i32 33
  %1451 = getelementptr inbounds %struct.Reg, %struct.Reg* %1450, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %1451 to i64*
  %1452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1453 = getelementptr inbounds %struct.GPR, %struct.GPR* %1452, i32 0, i32 1
  %1454 = getelementptr inbounds %struct.Reg, %struct.Reg* %1453, i32 0, i32 0
  %RAX.i1038 = bitcast %union.anon* %1454 to i64*
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1456 = getelementptr inbounds %struct.GPR, %struct.GPR* %1455, i32 0, i32 15
  %1457 = getelementptr inbounds %struct.Reg, %struct.Reg* %1456, i32 0, i32 0
  %RBP.i1039 = bitcast %union.anon* %1457 to i64*
  %1458 = load i64, i64* %RBP.i1039
  %1459 = sub i64 %1458, 168
  %1460 = load i64, i64* %PC.i1037
  %1461 = add i64 %1460, 11
  store i64 %1461, i64* %PC.i1037
  %1462 = inttoptr i64 %1459 to i64*
  %1463 = load i64, i64* %1462
  %1464 = sext i64 %1463 to i128
  %1465 = and i128 %1464, -18446744073709551616
  %1466 = zext i64 %1463 to i128
  %1467 = or i128 %1465, %1466
  %1468 = mul i128 %1467, 616
  %1469 = trunc i128 %1468 to i64
  store i64 %1469, i64* %RAX.i1038, align 8
  %1470 = sext i64 %1469 to i128
  %1471 = icmp ne i128 %1470, %1468
  %1472 = zext i1 %1471 to i8
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1472, i8* %1473, align 1
  %1474 = trunc i128 %1468 to i32
  %1475 = and i32 %1474, 255
  %1476 = call i32 @llvm.ctpop.i32(i32 %1475)
  %1477 = trunc i32 %1476 to i8
  %1478 = and i8 %1477, 1
  %1479 = xor i8 %1478, 1
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1479, i8* %1480, align 1
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1481, align 1
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1482, align 1
  %1483 = lshr i64 %1469, 63
  %1484 = trunc i64 %1483 to i8
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1484, i8* %1485, align 1
  %1486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1472, i8* %1486, align 1
  store %struct.Memory* %loadMem_400a57, %struct.Memory** %MEMORY
  %loadMem_400a62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1488 = getelementptr inbounds %struct.GPR, %struct.GPR* %1487, i32 0, i32 33
  %1489 = getelementptr inbounds %struct.Reg, %struct.Reg* %1488, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %1489 to i64*
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1491 = getelementptr inbounds %struct.GPR, %struct.GPR* %1490, i32 0, i32 1
  %1492 = getelementptr inbounds %struct.Reg, %struct.Reg* %1491, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %1492 to i64*
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1494 = getelementptr inbounds %struct.GPR, %struct.GPR* %1493, i32 0, i32 15
  %1495 = getelementptr inbounds %struct.Reg, %struct.Reg* %1494, i32 0, i32 0
  %RBP.i1036 = bitcast %union.anon* %1495 to i64*
  %1496 = load i64, i64* %RBP.i1036
  %1497 = sub i64 %1496, 88
  %1498 = load i64, i64* %RAX.i1035
  %1499 = load i64, i64* %PC.i1034
  %1500 = add i64 %1499, 4
  store i64 %1500, i64* %PC.i1034
  %1501 = inttoptr i64 %1497 to i64*
  store i64 %1498, i64* %1501
  store %struct.Memory* %loadMem_400a62, %struct.Memory** %MEMORY
  %loadMem_400a66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1503 = getelementptr inbounds %struct.GPR, %struct.GPR* %1502, i32 0, i32 33
  %1504 = getelementptr inbounds %struct.Reg, %struct.Reg* %1503, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %1504 to i64*
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1506 = getelementptr inbounds %struct.GPR, %struct.GPR* %1505, i32 0, i32 15
  %1507 = getelementptr inbounds %struct.Reg, %struct.Reg* %1506, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %1507 to i64*
  %1508 = load i64, i64* %RBP.i1033
  %1509 = sub i64 %1508, 96
  %1510 = load i64, i64* %PC.i1032
  %1511 = add i64 %1510, 8
  store i64 %1511, i64* %PC.i1032
  %1512 = inttoptr i64 %1509 to i64*
  store i64 0, i64* %1512
  store %struct.Memory* %loadMem_400a66, %struct.Memory** %MEMORY
  %loadMem_400a6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1514 = getelementptr inbounds %struct.GPR, %struct.GPR* %1513, i32 0, i32 33
  %1515 = getelementptr inbounds %struct.Reg, %struct.Reg* %1514, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %1515 to i64*
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1517 = getelementptr inbounds %struct.GPR, %struct.GPR* %1516, i32 0, i32 1
  %1518 = getelementptr inbounds %struct.Reg, %struct.Reg* %1517, i32 0, i32 0
  %RAX.i1030 = bitcast %union.anon* %1518 to i64*
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1520 = getelementptr inbounds %struct.GPR, %struct.GPR* %1519, i32 0, i32 15
  %1521 = getelementptr inbounds %struct.Reg, %struct.Reg* %1520, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %1521 to i64*
  %1522 = load i64, i64* %RBP.i1031
  %1523 = sub i64 %1522, 168
  %1524 = load i64, i64* %PC.i1029
  %1525 = add i64 %1524, 8
  store i64 %1525, i64* %PC.i1029
  %1526 = inttoptr i64 %1523 to i64*
  %1527 = load i64, i64* %1526
  %1528 = sext i64 %1527 to i128
  %1529 = and i128 %1528, -18446744073709551616
  %1530 = zext i64 %1527 to i128
  %1531 = or i128 %1529, %1530
  %1532 = mul i128 %1531, 93
  %1533 = trunc i128 %1532 to i64
  store i64 %1533, i64* %RAX.i1030, align 8
  %1534 = sext i64 %1533 to i128
  %1535 = icmp ne i128 %1534, %1532
  %1536 = zext i1 %1535 to i8
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1536, i8* %1537, align 1
  %1538 = trunc i128 %1532 to i32
  %1539 = and i32 %1538, 255
  %1540 = call i32 @llvm.ctpop.i32(i32 %1539)
  %1541 = trunc i32 %1540 to i8
  %1542 = and i8 %1541, 1
  %1543 = xor i8 %1542, 1
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1543, i8* %1544, align 1
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1545, align 1
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1546, align 1
  %1547 = lshr i64 %1533, 63
  %1548 = trunc i64 %1547 to i8
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1548, i8* %1549, align 1
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1536, i8* %1550, align 1
  store %struct.Memory* %loadMem_400a6e, %struct.Memory** %MEMORY
  %loadMem_400a76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1552 = getelementptr inbounds %struct.GPR, %struct.GPR* %1551, i32 0, i32 33
  %1553 = getelementptr inbounds %struct.Reg, %struct.Reg* %1552, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %1553 to i64*
  %1554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1555 = getelementptr inbounds %struct.GPR, %struct.GPR* %1554, i32 0, i32 1
  %1556 = getelementptr inbounds %struct.Reg, %struct.Reg* %1555, i32 0, i32 0
  %RAX.i1027 = bitcast %union.anon* %1556 to i64*
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1558 = getelementptr inbounds %struct.GPR, %struct.GPR* %1557, i32 0, i32 15
  %1559 = getelementptr inbounds %struct.Reg, %struct.Reg* %1558, i32 0, i32 0
  %RBP.i1028 = bitcast %union.anon* %1559 to i64*
  %1560 = load i64, i64* %RBP.i1028
  %1561 = sub i64 %1560, 104
  %1562 = load i64, i64* %RAX.i1027
  %1563 = load i64, i64* %PC.i1026
  %1564 = add i64 %1563, 4
  store i64 %1564, i64* %PC.i1026
  %1565 = inttoptr i64 %1561 to i64*
  store i64 %1562, i64* %1565
  store %struct.Memory* %loadMem_400a76, %struct.Memory** %MEMORY
  %loadMem_400a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1567 = getelementptr inbounds %struct.GPR, %struct.GPR* %1566, i32 0, i32 33
  %1568 = getelementptr inbounds %struct.Reg, %struct.Reg* %1567, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %1568 to i64*
  %1569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1570 = getelementptr inbounds %struct.GPR, %struct.GPR* %1569, i32 0, i32 15
  %1571 = getelementptr inbounds %struct.Reg, %struct.Reg* %1570, i32 0, i32 0
  %RBP.i1024 = bitcast %union.anon* %1571 to i64*
  %1572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1573 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1572, i64 0, i64 1
  %XMM1.i1025 = bitcast %union.VectorReg* %1573 to %union.vec128_t*
  %1574 = load i64, i64* %RBP.i1024
  %1575 = sub i64 %1574, 112
  %1576 = bitcast %union.vec128_t* %XMM1.i1025 to i8*
  %1577 = load i64, i64* %PC.i1023
  %1578 = add i64 %1577, 5
  store i64 %1578, i64* %PC.i1023
  %1579 = bitcast i8* %1576 to double*
  %1580 = load double, double* %1579, align 1
  %1581 = inttoptr i64 %1575 to double*
  store double %1580, double* %1581
  store %struct.Memory* %loadMem_400a7a, %struct.Memory** %MEMORY
  %loadMem_400a7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1583 = getelementptr inbounds %struct.GPR, %struct.GPR* %1582, i32 0, i32 33
  %1584 = getelementptr inbounds %struct.Reg, %struct.Reg* %1583, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %1584 to i64*
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1586 = getelementptr inbounds %struct.GPR, %struct.GPR* %1585, i32 0, i32 15
  %1587 = getelementptr inbounds %struct.Reg, %struct.Reg* %1586, i32 0, i32 0
  %RBP.i1021 = bitcast %union.anon* %1587 to i64*
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1589 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1588, i64 0, i64 0
  %XMM0.i1022 = bitcast %union.VectorReg* %1589 to %union.vec128_t*
  %1590 = load i64, i64* %RBP.i1021
  %1591 = sub i64 %1590, 120
  %1592 = bitcast %union.vec128_t* %XMM0.i1022 to i8*
  %1593 = load i64, i64* %PC.i1020
  %1594 = add i64 %1593, 5
  store i64 %1594, i64* %PC.i1020
  %1595 = bitcast i8* %1592 to double*
  %1596 = load double, double* %1595, align 1
  %1597 = inttoptr i64 %1591 to double*
  store double %1596, double* %1597
  store %struct.Memory* %loadMem_400a7f, %struct.Memory** %MEMORY
  %loadMem_400a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1599 = getelementptr inbounds %struct.GPR, %struct.GPR* %1598, i32 0, i32 33
  %1600 = getelementptr inbounds %struct.Reg, %struct.Reg* %1599, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %1600 to i64*
  %1601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1602 = getelementptr inbounds %struct.GPR, %struct.GPR* %1601, i32 0, i32 15
  %1603 = getelementptr inbounds %struct.Reg, %struct.Reg* %1602, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %1603 to i64*
  %1604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1605 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1604, i64 0, i64 0
  %XMM0.i1019 = bitcast %union.VectorReg* %1605 to %union.vec128_t*
  %1606 = load i64, i64* %RBP.i1018
  %1607 = sub i64 %1606, 128
  %1608 = bitcast %union.vec128_t* %XMM0.i1019 to i8*
  %1609 = load i64, i64* %PC.i1017
  %1610 = add i64 %1609, 5
  store i64 %1610, i64* %PC.i1017
  %1611 = bitcast i8* %1608 to double*
  %1612 = load double, double* %1611, align 1
  %1613 = inttoptr i64 %1607 to double*
  store double %1612, double* %1613
  store %struct.Memory* %loadMem_400a84, %struct.Memory** %MEMORY
  %loadMem_400a89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1615 = getelementptr inbounds %struct.GPR, %struct.GPR* %1614, i32 0, i32 33
  %1616 = getelementptr inbounds %struct.Reg, %struct.Reg* %1615, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %1616 to i64*
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1618 = getelementptr inbounds %struct.GPR, %struct.GPR* %1617, i32 0, i32 15
  %1619 = getelementptr inbounds %struct.Reg, %struct.Reg* %1618, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %1619 to i64*
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1621 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1620, i64 0, i64 0
  %XMM0.i1016 = bitcast %union.VectorReg* %1621 to %union.vec128_t*
  %1622 = load i64, i64* %RBP.i1015
  %1623 = sub i64 %1622, 136
  %1624 = bitcast %union.vec128_t* %XMM0.i1016 to i8*
  %1625 = load i64, i64* %PC.i1014
  %1626 = add i64 %1625, 8
  store i64 %1626, i64* %PC.i1014
  %1627 = bitcast i8* %1624 to double*
  %1628 = load double, double* %1627, align 1
  %1629 = inttoptr i64 %1623 to double*
  store double %1628, double* %1629
  store %struct.Memory* %loadMem_400a89, %struct.Memory** %MEMORY
  %loadMem_400a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1631 = getelementptr inbounds %struct.GPR, %struct.GPR* %1630, i32 0, i32 33
  %1632 = getelementptr inbounds %struct.Reg, %struct.Reg* %1631, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %1632 to i64*
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1634 = getelementptr inbounds %struct.GPR, %struct.GPR* %1633, i32 0, i32 15
  %1635 = getelementptr inbounds %struct.Reg, %struct.Reg* %1634, i32 0, i32 0
  %RBP.i1013 = bitcast %union.anon* %1635 to i64*
  %1636 = load i64, i64* %RBP.i1013
  %1637 = sub i64 %1636, 24
  %1638 = load i64, i64* %PC.i1012
  %1639 = add i64 %1638, 8
  store i64 %1639, i64* %PC.i1012
  %1640 = inttoptr i64 %1637 to i64*
  store i64 1, i64* %1640
  store %struct.Memory* %loadMem_400a91, %struct.Memory** %MEMORY
  br label %block_.L_400a99

block_.L_400a99:                                  ; preds = %block_400aa7, %block_.L_4009eb
  %loadMem_400a99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1642 = getelementptr inbounds %struct.GPR, %struct.GPR* %1641, i32 0, i32 33
  %1643 = getelementptr inbounds %struct.Reg, %struct.Reg* %1642, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %1643 to i64*
  %1644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1645 = getelementptr inbounds %struct.GPR, %struct.GPR* %1644, i32 0, i32 1
  %1646 = getelementptr inbounds %struct.Reg, %struct.Reg* %1645, i32 0, i32 0
  %RAX.i1010 = bitcast %union.anon* %1646 to i64*
  %1647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1648 = getelementptr inbounds %struct.GPR, %struct.GPR* %1647, i32 0, i32 15
  %1649 = getelementptr inbounds %struct.Reg, %struct.Reg* %1648, i32 0, i32 0
  %RBP.i1011 = bitcast %union.anon* %1649 to i64*
  %1650 = load i64, i64* %RBP.i1011
  %1651 = sub i64 %1650, 24
  %1652 = load i64, i64* %PC.i1009
  %1653 = add i64 %1652, 4
  store i64 %1653, i64* %PC.i1009
  %1654 = inttoptr i64 %1651 to i64*
  %1655 = load i64, i64* %1654
  store i64 %1655, i64* %RAX.i1010, align 8
  store %struct.Memory* %loadMem_400a99, %struct.Memory** %MEMORY
  %loadMem_400a9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 33
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %1658 to i64*
  %1659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1660 = getelementptr inbounds %struct.GPR, %struct.GPR* %1659, i32 0, i32 1
  %1661 = getelementptr inbounds %struct.Reg, %struct.Reg* %1660, i32 0, i32 0
  %RAX.i1007 = bitcast %union.anon* %1661 to i64*
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1663 = getelementptr inbounds %struct.GPR, %struct.GPR* %1662, i32 0, i32 15
  %1664 = getelementptr inbounds %struct.Reg, %struct.Reg* %1663, i32 0, i32 0
  %RBP.i1008 = bitcast %union.anon* %1664 to i64*
  %1665 = load i64, i64* %RAX.i1007
  %1666 = load i64, i64* %RBP.i1008
  %1667 = sub i64 %1666, 32
  %1668 = load i64, i64* %PC.i1006
  %1669 = add i64 %1668, 4
  store i64 %1669, i64* %PC.i1006
  %1670 = inttoptr i64 %1667 to i64*
  %1671 = load i64, i64* %1670
  %1672 = sub i64 %1665, %1671
  %1673 = icmp ugt i64 %1671, %1665
  %1674 = zext i1 %1673 to i8
  %1675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1674, i8* %1675, align 1
  %1676 = trunc i64 %1672 to i32
  %1677 = and i32 %1676, 255
  %1678 = call i32 @llvm.ctpop.i32(i32 %1677)
  %1679 = trunc i32 %1678 to i8
  %1680 = and i8 %1679, 1
  %1681 = xor i8 %1680, 1
  %1682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1681, i8* %1682, align 1
  %1683 = xor i64 %1671, %1665
  %1684 = xor i64 %1683, %1672
  %1685 = lshr i64 %1684, 4
  %1686 = trunc i64 %1685 to i8
  %1687 = and i8 %1686, 1
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1687, i8* %1688, align 1
  %1689 = icmp eq i64 %1672, 0
  %1690 = zext i1 %1689 to i8
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1690, i8* %1691, align 1
  %1692 = lshr i64 %1672, 63
  %1693 = trunc i64 %1692 to i8
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1693, i8* %1694, align 1
  %1695 = lshr i64 %1665, 63
  %1696 = lshr i64 %1671, 63
  %1697 = xor i64 %1696, %1695
  %1698 = xor i64 %1692, %1695
  %1699 = add i64 %1698, %1697
  %1700 = icmp eq i64 %1699, 2
  %1701 = zext i1 %1700 to i8
  %1702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1701, i8* %1702, align 1
  store %struct.Memory* %loadMem_400a9d, %struct.Memory** %MEMORY
  %loadMem_400aa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1704 = getelementptr inbounds %struct.GPR, %struct.GPR* %1703, i32 0, i32 33
  %1705 = getelementptr inbounds %struct.Reg, %struct.Reg* %1704, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %1705 to i64*
  %1706 = load i64, i64* %PC.i1005
  %1707 = add i64 %1706, 197
  %1708 = load i64, i64* %PC.i1005
  %1709 = add i64 %1708, 6
  %1710 = load i64, i64* %PC.i1005
  %1711 = add i64 %1710, 6
  store i64 %1711, i64* %PC.i1005
  %1712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1713 = load i8, i8* %1712, align 1
  %1714 = icmp eq i8 %1713, 0
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1716 = load i8, i8* %1715, align 1
  %1717 = icmp ne i8 %1716, 0
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1719 = load i8, i8* %1718, align 1
  %1720 = icmp ne i8 %1719, 0
  %1721 = xor i1 %1717, %1720
  %1722 = xor i1 %1721, true
  %1723 = and i1 %1714, %1722
  %1724 = zext i1 %1723 to i8
  store i8 %1724, i8* %BRANCH_TAKEN, align 1
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1726 = select i1 %1723, i64 %1707, i64 %1709
  store i64 %1726, i64* %1725, align 8
  store %struct.Memory* %loadMem_400aa1, %struct.Memory** %MEMORY
  %loadBr_400aa1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400aa1 = icmp eq i8 %loadBr_400aa1, 1
  br i1 %cmpBr_400aa1, label %block_.L_400b66, label %block_400aa7

block_400aa7:                                     ; preds = %block_.L_400a99
  %loadMem_400aa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1728 = getelementptr inbounds %struct.GPR, %struct.GPR* %1727, i32 0, i32 33
  %1729 = getelementptr inbounds %struct.Reg, %struct.Reg* %1728, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %1729 to i64*
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 1
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %RAX.i1004 = bitcast %union.anon* %1732 to i64*
  %1733 = load i64, i64* %PC.i1003
  %1734 = add i64 %1733, 10
  store i64 %1734, i64* %PC.i1003
  store i64 -9223372036854775808, i64* %RAX.i1004, align 8
  store %struct.Memory* %loadMem_400aa7, %struct.Memory** %MEMORY
  %loadMem_400ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1736 = getelementptr inbounds %struct.GPR, %struct.GPR* %1735, i32 0, i32 33
  %1737 = getelementptr inbounds %struct.Reg, %struct.Reg* %1736, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %1737 to i64*
  %1738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1739 = getelementptr inbounds %struct.GPR, %struct.GPR* %1738, i32 0, i32 15
  %1740 = getelementptr inbounds %struct.Reg, %struct.Reg* %1739, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %1740 to i64*
  %1741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1742 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1741, i64 0, i64 0
  %YMM0.i1002 = bitcast %union.VectorReg* %1742 to %"class.std::bitset"*
  %1743 = bitcast %"class.std::bitset"* %YMM0.i1002 to i8*
  %1744 = load i64, i64* %RBP.i1001
  %1745 = sub i64 %1744, 112
  %1746 = load i64, i64* %PC.i1000
  %1747 = add i64 %1746, 5
  store i64 %1747, i64* %PC.i1000
  %1748 = inttoptr i64 %1745 to double*
  %1749 = load double, double* %1748
  %1750 = bitcast i8* %1743 to double*
  store double %1749, double* %1750, align 1
  %1751 = getelementptr inbounds i8, i8* %1743, i64 8
  %1752 = bitcast i8* %1751 to double*
  store double 0.000000e+00, double* %1752, align 1
  store %struct.Memory* %loadMem_400ab1, %struct.Memory** %MEMORY
  %loadMem_400ab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1754 = getelementptr inbounds %struct.GPR, %struct.GPR* %1753, i32 0, i32 33
  %1755 = getelementptr inbounds %struct.Reg, %struct.Reg* %1754, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %1755 to i64*
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1757 = getelementptr inbounds %struct.GPR, %struct.GPR* %1756, i32 0, i32 15
  %1758 = getelementptr inbounds %struct.Reg, %struct.Reg* %1757, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %1758 to i64*
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1760 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1759, i64 0, i64 0
  %YMM0.i999 = bitcast %union.VectorReg* %1760 to %"class.std::bitset"*
  %1761 = bitcast %"class.std::bitset"* %YMM0.i999 to i8*
  %1762 = bitcast %"class.std::bitset"* %YMM0.i999 to i8*
  %1763 = load i64, i64* %RBP.i998
  %1764 = sub i64 %1763, 120
  %1765 = load i64, i64* %PC.i997
  %1766 = add i64 %1765, 5
  store i64 %1766, i64* %PC.i997
  %1767 = bitcast i8* %1762 to double*
  %1768 = load double, double* %1767, align 1
  %1769 = getelementptr inbounds i8, i8* %1762, i64 8
  %1770 = bitcast i8* %1769 to i64*
  %1771 = load i64, i64* %1770, align 1
  %1772 = inttoptr i64 %1764 to double*
  %1773 = load double, double* %1772
  %1774 = fadd double %1768, %1773
  %1775 = bitcast i8* %1761 to double*
  store double %1774, double* %1775, align 1
  %1776 = getelementptr inbounds i8, i8* %1761, i64 8
  %1777 = bitcast i8* %1776 to i64*
  store i64 %1771, i64* %1777, align 1
  store %struct.Memory* %loadMem_400ab6, %struct.Memory** %MEMORY
  %loadMem_400abb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1779 = getelementptr inbounds %struct.GPR, %struct.GPR* %1778, i32 0, i32 33
  %1780 = getelementptr inbounds %struct.Reg, %struct.Reg* %1779, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %1780 to i64*
  %1781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1782 = getelementptr inbounds %struct.GPR, %struct.GPR* %1781, i32 0, i32 15
  %1783 = getelementptr inbounds %struct.Reg, %struct.Reg* %1782, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %1783 to i64*
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1785 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1784, i64 0, i64 0
  %YMM0.i996 = bitcast %union.VectorReg* %1785 to %"class.std::bitset"*
  %1786 = bitcast %"class.std::bitset"* %YMM0.i996 to i8*
  %1787 = bitcast %"class.std::bitset"* %YMM0.i996 to i8*
  %1788 = load i64, i64* %RBP.i995
  %1789 = sub i64 %1788, 128
  %1790 = load i64, i64* %PC.i994
  %1791 = add i64 %1790, 5
  store i64 %1791, i64* %PC.i994
  %1792 = bitcast i8* %1787 to double*
  %1793 = load double, double* %1792, align 1
  %1794 = getelementptr inbounds i8, i8* %1787, i64 8
  %1795 = bitcast i8* %1794 to i64*
  %1796 = load i64, i64* %1795, align 1
  %1797 = inttoptr i64 %1789 to double*
  %1798 = load double, double* %1797
  %1799 = fadd double %1793, %1798
  %1800 = bitcast i8* %1786 to double*
  store double %1799, double* %1800, align 1
  %1801 = getelementptr inbounds i8, i8* %1786, i64 8
  %1802 = bitcast i8* %1801 to i64*
  store i64 %1796, i64* %1802, align 1
  store %struct.Memory* %loadMem_400abb, %struct.Memory** %MEMORY
  %loadMem_400ac0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1804 = getelementptr inbounds %struct.GPR, %struct.GPR* %1803, i32 0, i32 33
  %1805 = getelementptr inbounds %struct.Reg, %struct.Reg* %1804, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %1805 to i64*
  %1806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1807 = getelementptr inbounds %struct.GPR, %struct.GPR* %1806, i32 0, i32 15
  %1808 = getelementptr inbounds %struct.Reg, %struct.Reg* %1807, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %1808 to i64*
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1810 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1809, i64 0, i64 0
  %YMM0.i993 = bitcast %union.VectorReg* %1810 to %"class.std::bitset"*
  %1811 = bitcast %"class.std::bitset"* %YMM0.i993 to i8*
  %1812 = bitcast %"class.std::bitset"* %YMM0.i993 to i8*
  %1813 = load i64, i64* %RBP.i992
  %1814 = sub i64 %1813, 136
  %1815 = load i64, i64* %PC.i991
  %1816 = add i64 %1815, 8
  store i64 %1816, i64* %PC.i991
  %1817 = bitcast i8* %1812 to double*
  %1818 = load double, double* %1817, align 1
  %1819 = getelementptr inbounds i8, i8* %1812, i64 8
  %1820 = bitcast i8* %1819 to i64*
  %1821 = load i64, i64* %1820, align 1
  %1822 = inttoptr i64 %1814 to double*
  %1823 = load double, double* %1822
  %1824 = fsub double %1818, %1823
  %1825 = bitcast i8* %1811 to double*
  store double %1824, double* %1825, align 1
  %1826 = getelementptr inbounds i8, i8* %1811, i64 8
  %1827 = bitcast i8* %1826 to i64*
  store i64 %1821, i64* %1827, align 1
  store %struct.Memory* %loadMem_400ac0, %struct.Memory** %MEMORY
  %loadMem_400ac8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1829 = getelementptr inbounds %struct.GPR, %struct.GPR* %1828, i32 0, i32 33
  %1830 = getelementptr inbounds %struct.Reg, %struct.Reg* %1829, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %1830 to i64*
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1832 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1831, i64 0, i64 0
  %YMM0.i990 = bitcast %union.VectorReg* %1832 to %"class.std::bitset"*
  %1833 = bitcast %"class.std::bitset"* %YMM0.i990 to i8*
  %1834 = bitcast %"class.std::bitset"* %YMM0.i990 to i8*
  %1835 = load i64, i64* %PC.i989
  %1836 = add i64 %1835, 9
  store i64 %1836, i64* %PC.i989
  %1837 = bitcast i8* %1834 to double*
  %1838 = load double, double* %1837, align 1
  %1839 = getelementptr inbounds i8, i8* %1834, i64 8
  %1840 = bitcast i8* %1839 to i64*
  %1841 = load i64, i64* %1840, align 1
  %1842 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %1843 = fmul double %1838, %1842
  %1844 = bitcast i8* %1833 to double*
  store double %1843, double* %1844, align 1
  %1845 = getelementptr inbounds i8, i8* %1833, i64 8
  %1846 = bitcast i8* %1845 to i64*
  store i64 %1841, i64* %1846, align 1
  store %struct.Memory* %loadMem_400ac8, %struct.Memory** %MEMORY
  %loadMem_400ad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1848 = getelementptr inbounds %struct.GPR, %struct.GPR* %1847, i32 0, i32 33
  %1849 = getelementptr inbounds %struct.Reg, %struct.Reg* %1848, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %1849 to i64*
  %1850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1851 = getelementptr inbounds %struct.GPR, %struct.GPR* %1850, i32 0, i32 15
  %1852 = getelementptr inbounds %struct.Reg, %struct.Reg* %1851, i32 0, i32 0
  %RBP.i987 = bitcast %union.anon* %1852 to i64*
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1854 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1853, i64 0, i64 0
  %XMM0.i988 = bitcast %union.VectorReg* %1854 to %union.vec128_t*
  %1855 = load i64, i64* %RBP.i987
  %1856 = sub i64 %1855, 112
  %1857 = bitcast %union.vec128_t* %XMM0.i988 to i8*
  %1858 = load i64, i64* %PC.i986
  %1859 = add i64 %1858, 5
  store i64 %1859, i64* %PC.i986
  %1860 = bitcast i8* %1857 to double*
  %1861 = load double, double* %1860, align 1
  %1862 = inttoptr i64 %1856 to double*
  store double %1861, double* %1862
  store %struct.Memory* %loadMem_400ad1, %struct.Memory** %MEMORY
  %loadMem_400ad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1864 = getelementptr inbounds %struct.GPR, %struct.GPR* %1863, i32 0, i32 33
  %1865 = getelementptr inbounds %struct.Reg, %struct.Reg* %1864, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %1865 to i64*
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1867 = getelementptr inbounds %struct.GPR, %struct.GPR* %1866, i32 0, i32 15
  %1868 = getelementptr inbounds %struct.Reg, %struct.Reg* %1867, i32 0, i32 0
  %RBP.i984 = bitcast %union.anon* %1868 to i64*
  %1869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1870 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1869, i64 0, i64 0
  %YMM0.i985 = bitcast %union.VectorReg* %1870 to %"class.std::bitset"*
  %1871 = bitcast %"class.std::bitset"* %YMM0.i985 to i8*
  %1872 = load i64, i64* %RBP.i984
  %1873 = sub i64 %1872, 112
  %1874 = load i64, i64* %PC.i983
  %1875 = add i64 %1874, 5
  store i64 %1875, i64* %PC.i983
  %1876 = inttoptr i64 %1873 to double*
  %1877 = load double, double* %1876
  %1878 = bitcast i8* %1871 to double*
  store double %1877, double* %1878, align 1
  %1879 = getelementptr inbounds i8, i8* %1871, i64 8
  %1880 = bitcast i8* %1879 to double*
  store double 0.000000e+00, double* %1880, align 1
  store %struct.Memory* %loadMem_400ad6, %struct.Memory** %MEMORY
  %loadMem_400adb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1882 = getelementptr inbounds %struct.GPR, %struct.GPR* %1881, i32 0, i32 33
  %1883 = getelementptr inbounds %struct.Reg, %struct.Reg* %1882, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %1883 to i64*
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1885 = getelementptr inbounds %struct.GPR, %struct.GPR* %1884, i32 0, i32 15
  %1886 = getelementptr inbounds %struct.Reg, %struct.Reg* %1885, i32 0, i32 0
  %RBP.i981 = bitcast %union.anon* %1886 to i64*
  %1887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1888 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1887, i64 0, i64 0
  %YMM0.i982 = bitcast %union.VectorReg* %1888 to %"class.std::bitset"*
  %1889 = bitcast %"class.std::bitset"* %YMM0.i982 to i8*
  %1890 = bitcast %"class.std::bitset"* %YMM0.i982 to i8*
  %1891 = load i64, i64* %RBP.i981
  %1892 = sub i64 %1891, 120
  %1893 = load i64, i64* %PC.i980
  %1894 = add i64 %1893, 5
  store i64 %1894, i64* %PC.i980
  %1895 = bitcast i8* %1890 to double*
  %1896 = load double, double* %1895, align 1
  %1897 = getelementptr inbounds i8, i8* %1890, i64 8
  %1898 = bitcast i8* %1897 to i64*
  %1899 = load i64, i64* %1898, align 1
  %1900 = inttoptr i64 %1892 to double*
  %1901 = load double, double* %1900
  %1902 = fadd double %1896, %1901
  %1903 = bitcast i8* %1889 to double*
  store double %1902, double* %1903, align 1
  %1904 = getelementptr inbounds i8, i8* %1889, i64 8
  %1905 = bitcast i8* %1904 to i64*
  store i64 %1899, i64* %1905, align 1
  store %struct.Memory* %loadMem_400adb, %struct.Memory** %MEMORY
  %loadMem_400ae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1907 = getelementptr inbounds %struct.GPR, %struct.GPR* %1906, i32 0, i32 33
  %1908 = getelementptr inbounds %struct.Reg, %struct.Reg* %1907, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %1908 to i64*
  %1909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1910 = getelementptr inbounds %struct.GPR, %struct.GPR* %1909, i32 0, i32 15
  %1911 = getelementptr inbounds %struct.Reg, %struct.Reg* %1910, i32 0, i32 0
  %RBP.i978 = bitcast %union.anon* %1911 to i64*
  %1912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1913 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1912, i64 0, i64 0
  %YMM0.i979 = bitcast %union.VectorReg* %1913 to %"class.std::bitset"*
  %1914 = bitcast %"class.std::bitset"* %YMM0.i979 to i8*
  %1915 = bitcast %"class.std::bitset"* %YMM0.i979 to i8*
  %1916 = load i64, i64* %RBP.i978
  %1917 = sub i64 %1916, 128
  %1918 = load i64, i64* %PC.i977
  %1919 = add i64 %1918, 5
  store i64 %1919, i64* %PC.i977
  %1920 = bitcast i8* %1915 to double*
  %1921 = load double, double* %1920, align 1
  %1922 = getelementptr inbounds i8, i8* %1915, i64 8
  %1923 = bitcast i8* %1922 to i64*
  %1924 = load i64, i64* %1923, align 1
  %1925 = inttoptr i64 %1917 to double*
  %1926 = load double, double* %1925
  %1927 = fsub double %1921, %1926
  %1928 = bitcast i8* %1914 to double*
  store double %1927, double* %1928, align 1
  %1929 = getelementptr inbounds i8, i8* %1914, i64 8
  %1930 = bitcast i8* %1929 to i64*
  store i64 %1924, i64* %1930, align 1
  store %struct.Memory* %loadMem_400ae0, %struct.Memory** %MEMORY
  %loadMem_400ae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1932 = getelementptr inbounds %struct.GPR, %struct.GPR* %1931, i32 0, i32 33
  %1933 = getelementptr inbounds %struct.Reg, %struct.Reg* %1932, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %1933 to i64*
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1935 = getelementptr inbounds %struct.GPR, %struct.GPR* %1934, i32 0, i32 15
  %1936 = getelementptr inbounds %struct.Reg, %struct.Reg* %1935, i32 0, i32 0
  %RBP.i975 = bitcast %union.anon* %1936 to i64*
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1938 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1937, i64 0, i64 0
  %YMM0.i976 = bitcast %union.VectorReg* %1938 to %"class.std::bitset"*
  %1939 = bitcast %"class.std::bitset"* %YMM0.i976 to i8*
  %1940 = bitcast %"class.std::bitset"* %YMM0.i976 to i8*
  %1941 = load i64, i64* %RBP.i975
  %1942 = sub i64 %1941, 136
  %1943 = load i64, i64* %PC.i974
  %1944 = add i64 %1943, 8
  store i64 %1944, i64* %PC.i974
  %1945 = bitcast i8* %1940 to double*
  %1946 = load double, double* %1945, align 1
  %1947 = getelementptr inbounds i8, i8* %1940, i64 8
  %1948 = bitcast i8* %1947 to i64*
  %1949 = load i64, i64* %1948, align 1
  %1950 = inttoptr i64 %1942 to double*
  %1951 = load double, double* %1950
  %1952 = fadd double %1946, %1951
  %1953 = bitcast i8* %1939 to double*
  store double %1952, double* %1953, align 1
  %1954 = getelementptr inbounds i8, i8* %1939, i64 8
  %1955 = bitcast i8* %1954 to i64*
  store i64 %1949, i64* %1955, align 1
  store %struct.Memory* %loadMem_400ae5, %struct.Memory** %MEMORY
  %loadMem_400aed = load %struct.Memory*, %struct.Memory** %MEMORY
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1957 = getelementptr inbounds %struct.GPR, %struct.GPR* %1956, i32 0, i32 33
  %1958 = getelementptr inbounds %struct.Reg, %struct.Reg* %1957, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %1958 to i64*
  %1959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1960 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1959, i64 0, i64 0
  %YMM0.i973 = bitcast %union.VectorReg* %1960 to %"class.std::bitset"*
  %1961 = bitcast %"class.std::bitset"* %YMM0.i973 to i8*
  %1962 = bitcast %"class.std::bitset"* %YMM0.i973 to i8*
  %1963 = load i64, i64* %PC.i972
  %1964 = add i64 %1963, 9
  store i64 %1964, i64* %PC.i972
  %1965 = bitcast i8* %1962 to double*
  %1966 = load double, double* %1965, align 1
  %1967 = getelementptr inbounds i8, i8* %1962, i64 8
  %1968 = bitcast i8* %1967 to i64*
  %1969 = load i64, i64* %1968, align 1
  %1970 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %1971 = fmul double %1966, %1970
  %1972 = bitcast i8* %1961 to double*
  store double %1971, double* %1972, align 1
  %1973 = getelementptr inbounds i8, i8* %1961, i64 8
  %1974 = bitcast i8* %1973 to i64*
  store i64 %1969, i64* %1974, align 1
  store %struct.Memory* %loadMem_400aed, %struct.Memory** %MEMORY
  %loadMem_400af6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1976 = getelementptr inbounds %struct.GPR, %struct.GPR* %1975, i32 0, i32 33
  %1977 = getelementptr inbounds %struct.Reg, %struct.Reg* %1976, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %1977 to i64*
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1979 = getelementptr inbounds %struct.GPR, %struct.GPR* %1978, i32 0, i32 15
  %1980 = getelementptr inbounds %struct.Reg, %struct.Reg* %1979, i32 0, i32 0
  %RBP.i970 = bitcast %union.anon* %1980 to i64*
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1982 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1981, i64 0, i64 0
  %XMM0.i971 = bitcast %union.VectorReg* %1982 to %union.vec128_t*
  %1983 = load i64, i64* %RBP.i970
  %1984 = sub i64 %1983, 120
  %1985 = bitcast %union.vec128_t* %XMM0.i971 to i8*
  %1986 = load i64, i64* %PC.i969
  %1987 = add i64 %1986, 5
  store i64 %1987, i64* %PC.i969
  %1988 = bitcast i8* %1985 to double*
  %1989 = load double, double* %1988, align 1
  %1990 = inttoptr i64 %1984 to double*
  store double %1989, double* %1990
  store %struct.Memory* %loadMem_400af6, %struct.Memory** %MEMORY
  %loadMem_400afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1992 = getelementptr inbounds %struct.GPR, %struct.GPR* %1991, i32 0, i32 33
  %1993 = getelementptr inbounds %struct.Reg, %struct.Reg* %1992, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %1993 to i64*
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1995 = getelementptr inbounds %struct.GPR, %struct.GPR* %1994, i32 0, i32 15
  %1996 = getelementptr inbounds %struct.Reg, %struct.Reg* %1995, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %1996 to i64*
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1998 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1997, i64 0, i64 0
  %YMM0.i968 = bitcast %union.VectorReg* %1998 to %"class.std::bitset"*
  %1999 = bitcast %"class.std::bitset"* %YMM0.i968 to i8*
  %2000 = load i64, i64* %RBP.i967
  %2001 = sub i64 %2000, 112
  %2002 = load i64, i64* %PC.i966
  %2003 = add i64 %2002, 5
  store i64 %2003, i64* %PC.i966
  %2004 = inttoptr i64 %2001 to double*
  %2005 = load double, double* %2004
  %2006 = bitcast i8* %1999 to double*
  store double %2005, double* %2006, align 1
  %2007 = getelementptr inbounds i8, i8* %1999, i64 8
  %2008 = bitcast i8* %2007 to double*
  store double 0.000000e+00, double* %2008, align 1
  store %struct.Memory* %loadMem_400afb, %struct.Memory** %MEMORY
  %loadMem_400b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2010 = getelementptr inbounds %struct.GPR, %struct.GPR* %2009, i32 0, i32 33
  %2011 = getelementptr inbounds %struct.Reg, %struct.Reg* %2010, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %2011 to i64*
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2013 = getelementptr inbounds %struct.GPR, %struct.GPR* %2012, i32 0, i32 15
  %2014 = getelementptr inbounds %struct.Reg, %struct.Reg* %2013, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %2014 to i64*
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2016 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2015, i64 0, i64 0
  %YMM0.i965 = bitcast %union.VectorReg* %2016 to %"class.std::bitset"*
  %2017 = bitcast %"class.std::bitset"* %YMM0.i965 to i8*
  %2018 = bitcast %"class.std::bitset"* %YMM0.i965 to i8*
  %2019 = load i64, i64* %RBP.i964
  %2020 = sub i64 %2019, 120
  %2021 = load i64, i64* %PC.i963
  %2022 = add i64 %2021, 5
  store i64 %2022, i64* %PC.i963
  %2023 = bitcast i8* %2018 to double*
  %2024 = load double, double* %2023, align 1
  %2025 = getelementptr inbounds i8, i8* %2018, i64 8
  %2026 = bitcast i8* %2025 to i64*
  %2027 = load i64, i64* %2026, align 1
  %2028 = inttoptr i64 %2020 to double*
  %2029 = load double, double* %2028
  %2030 = fsub double %2024, %2029
  %2031 = bitcast i8* %2017 to double*
  store double %2030, double* %2031, align 1
  %2032 = getelementptr inbounds i8, i8* %2017, i64 8
  %2033 = bitcast i8* %2032 to i64*
  store i64 %2027, i64* %2033, align 1
  store %struct.Memory* %loadMem_400b00, %struct.Memory** %MEMORY
  %loadMem_400b05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2035 = getelementptr inbounds %struct.GPR, %struct.GPR* %2034, i32 0, i32 33
  %2036 = getelementptr inbounds %struct.Reg, %struct.Reg* %2035, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %2036 to i64*
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2038 = getelementptr inbounds %struct.GPR, %struct.GPR* %2037, i32 0, i32 15
  %2039 = getelementptr inbounds %struct.Reg, %struct.Reg* %2038, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %2039 to i64*
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2041 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2040, i64 0, i64 0
  %YMM0.i962 = bitcast %union.VectorReg* %2041 to %"class.std::bitset"*
  %2042 = bitcast %"class.std::bitset"* %YMM0.i962 to i8*
  %2043 = bitcast %"class.std::bitset"* %YMM0.i962 to i8*
  %2044 = load i64, i64* %RBP.i961
  %2045 = sub i64 %2044, 128
  %2046 = load i64, i64* %PC.i960
  %2047 = add i64 %2046, 5
  store i64 %2047, i64* %PC.i960
  %2048 = bitcast i8* %2043 to double*
  %2049 = load double, double* %2048, align 1
  %2050 = getelementptr inbounds i8, i8* %2043, i64 8
  %2051 = bitcast i8* %2050 to i64*
  %2052 = load i64, i64* %2051, align 1
  %2053 = inttoptr i64 %2045 to double*
  %2054 = load double, double* %2053
  %2055 = fadd double %2049, %2054
  %2056 = bitcast i8* %2042 to double*
  store double %2055, double* %2056, align 1
  %2057 = getelementptr inbounds i8, i8* %2042, i64 8
  %2058 = bitcast i8* %2057 to i64*
  store i64 %2052, i64* %2058, align 1
  store %struct.Memory* %loadMem_400b05, %struct.Memory** %MEMORY
  %loadMem_400b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2060 = getelementptr inbounds %struct.GPR, %struct.GPR* %2059, i32 0, i32 33
  %2061 = getelementptr inbounds %struct.Reg, %struct.Reg* %2060, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %2061 to i64*
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2063 = getelementptr inbounds %struct.GPR, %struct.GPR* %2062, i32 0, i32 15
  %2064 = getelementptr inbounds %struct.Reg, %struct.Reg* %2063, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %2064 to i64*
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2066 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2065, i64 0, i64 0
  %YMM0.i959 = bitcast %union.VectorReg* %2066 to %"class.std::bitset"*
  %2067 = bitcast %"class.std::bitset"* %YMM0.i959 to i8*
  %2068 = bitcast %"class.std::bitset"* %YMM0.i959 to i8*
  %2069 = load i64, i64* %RBP.i958
  %2070 = sub i64 %2069, 136
  %2071 = load i64, i64* %PC.i957
  %2072 = add i64 %2071, 8
  store i64 %2072, i64* %PC.i957
  %2073 = bitcast i8* %2068 to double*
  %2074 = load double, double* %2073, align 1
  %2075 = getelementptr inbounds i8, i8* %2068, i64 8
  %2076 = bitcast i8* %2075 to i64*
  %2077 = load i64, i64* %2076, align 1
  %2078 = inttoptr i64 %2070 to double*
  %2079 = load double, double* %2078
  %2080 = fadd double %2074, %2079
  %2081 = bitcast i8* %2067 to double*
  store double %2080, double* %2081, align 1
  %2082 = getelementptr inbounds i8, i8* %2067, i64 8
  %2083 = bitcast i8* %2082 to i64*
  store i64 %2077, i64* %2083, align 1
  store %struct.Memory* %loadMem_400b0a, %struct.Memory** %MEMORY
  %loadMem_400b12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2085 = getelementptr inbounds %struct.GPR, %struct.GPR* %2084, i32 0, i32 33
  %2086 = getelementptr inbounds %struct.Reg, %struct.Reg* %2085, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %2086 to i64*
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2088 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2087, i64 0, i64 0
  %YMM0.i956 = bitcast %union.VectorReg* %2088 to %"class.std::bitset"*
  %2089 = bitcast %"class.std::bitset"* %YMM0.i956 to i8*
  %2090 = bitcast %"class.std::bitset"* %YMM0.i956 to i8*
  %2091 = load i64, i64* %PC.i955
  %2092 = add i64 %2091, 9
  store i64 %2092, i64* %PC.i955
  %2093 = bitcast i8* %2090 to double*
  %2094 = load double, double* %2093, align 1
  %2095 = getelementptr inbounds i8, i8* %2090, i64 8
  %2096 = bitcast i8* %2095 to i64*
  %2097 = load i64, i64* %2096, align 1
  %2098 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %2099 = fmul double %2094, %2098
  %2100 = bitcast i8* %2089 to double*
  store double %2099, double* %2100, align 1
  %2101 = getelementptr inbounds i8, i8* %2089, i64 8
  %2102 = bitcast i8* %2101 to i64*
  store i64 %2097, i64* %2102, align 1
  store %struct.Memory* %loadMem_400b12, %struct.Memory** %MEMORY
  %loadMem_400b1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2104 = getelementptr inbounds %struct.GPR, %struct.GPR* %2103, i32 0, i32 33
  %2105 = getelementptr inbounds %struct.Reg, %struct.Reg* %2104, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %2105 to i64*
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2107 = getelementptr inbounds %struct.GPR, %struct.GPR* %2106, i32 0, i32 15
  %2108 = getelementptr inbounds %struct.Reg, %struct.Reg* %2107, i32 0, i32 0
  %RBP.i953 = bitcast %union.anon* %2108 to i64*
  %2109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2110 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2109, i64 0, i64 0
  %XMM0.i954 = bitcast %union.VectorReg* %2110 to %union.vec128_t*
  %2111 = load i64, i64* %RBP.i953
  %2112 = sub i64 %2111, 128
  %2113 = bitcast %union.vec128_t* %XMM0.i954 to i8*
  %2114 = load i64, i64* %PC.i952
  %2115 = add i64 %2114, 5
  store i64 %2115, i64* %PC.i952
  %2116 = bitcast i8* %2113 to double*
  %2117 = load double, double* %2116, align 1
  %2118 = inttoptr i64 %2112 to double*
  store double %2117, double* %2118
  store %struct.Memory* %loadMem_400b1b, %struct.Memory** %MEMORY
  %loadMem_400b20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2120 = getelementptr inbounds %struct.GPR, %struct.GPR* %2119, i32 0, i32 33
  %2121 = getelementptr inbounds %struct.Reg, %struct.Reg* %2120, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %2121 to i64*
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2123 = getelementptr inbounds %struct.GPR, %struct.GPR* %2122, i32 0, i32 15
  %2124 = getelementptr inbounds %struct.Reg, %struct.Reg* %2123, i32 0, i32 0
  %RBP.i950 = bitcast %union.anon* %2124 to i64*
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2126 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2125, i64 0, i64 0
  %YMM0.i951 = bitcast %union.VectorReg* %2126 to %"class.std::bitset"*
  %2127 = bitcast %"class.std::bitset"* %YMM0.i951 to i8*
  %2128 = load i64, i64* %RBP.i950
  %2129 = sub i64 %2128, 112
  %2130 = load i64, i64* %PC.i949
  %2131 = add i64 %2130, 5
  store i64 %2131, i64* %PC.i949
  %2132 = inttoptr i64 %2129 to double*
  %2133 = load double, double* %2132
  %2134 = bitcast i8* %2127 to double*
  store double %2133, double* %2134, align 1
  %2135 = getelementptr inbounds i8, i8* %2127, i64 8
  %2136 = bitcast i8* %2135 to double*
  store double 0.000000e+00, double* %2136, align 1
  store %struct.Memory* %loadMem_400b20, %struct.Memory** %MEMORY
  %loadMem_400b25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2138 = getelementptr inbounds %struct.GPR, %struct.GPR* %2137, i32 0, i32 33
  %2139 = getelementptr inbounds %struct.Reg, %struct.Reg* %2138, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %2139 to i64*
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2141 = getelementptr inbounds %struct.GPR, %struct.GPR* %2140, i32 0, i32 5
  %2142 = getelementptr inbounds %struct.Reg, %struct.Reg* %2141, i32 0, i32 0
  %RCX.i947 = bitcast %union.anon* %2142 to i64*
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2144 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2143, i64 0, i64 0
  %XMM0.i948 = bitcast %union.VectorReg* %2144 to %union.vec128_t*
  %2145 = bitcast %union.vec128_t* %XMM0.i948 to i8*
  %2146 = load i64, i64* %PC.i946
  %2147 = add i64 %2146, 5
  store i64 %2147, i64* %PC.i946
  %2148 = bitcast i8* %2145 to i64*
  %2149 = load i64, i64* %2148, align 1
  store i64 %2149, i64* %RCX.i947, align 1
  store %struct.Memory* %loadMem_400b25, %struct.Memory** %MEMORY
  %loadMem_400b2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2151 = getelementptr inbounds %struct.GPR, %struct.GPR* %2150, i32 0, i32 33
  %2152 = getelementptr inbounds %struct.Reg, %struct.Reg* %2151, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %2152 to i64*
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2154 = getelementptr inbounds %struct.GPR, %struct.GPR* %2153, i32 0, i32 1
  %2155 = getelementptr inbounds %struct.Reg, %struct.Reg* %2154, i32 0, i32 0
  %RAX.i944 = bitcast %union.anon* %2155 to i64*
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2157 = getelementptr inbounds %struct.GPR, %struct.GPR* %2156, i32 0, i32 5
  %2158 = getelementptr inbounds %struct.Reg, %struct.Reg* %2157, i32 0, i32 0
  %RCX.i945 = bitcast %union.anon* %2158 to i64*
  %2159 = load i64, i64* %RCX.i945
  %2160 = load i64, i64* %RAX.i944
  %2161 = load i64, i64* %PC.i943
  %2162 = add i64 %2161, 3
  store i64 %2162, i64* %PC.i943
  %2163 = xor i64 %2160, %2159
  store i64 %2163, i64* %RCX.i945, align 8
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2164, align 1
  %2165 = trunc i64 %2163 to i32
  %2166 = and i32 %2165, 255
  %2167 = call i32 @llvm.ctpop.i32(i32 %2166)
  %2168 = trunc i32 %2167 to i8
  %2169 = and i8 %2168, 1
  %2170 = xor i8 %2169, 1
  %2171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2170, i8* %2171, align 1
  %2172 = icmp eq i64 %2163, 0
  %2173 = zext i1 %2172 to i8
  %2174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2173, i8* %2174, align 1
  %2175 = lshr i64 %2163, 63
  %2176 = trunc i64 %2175 to i8
  %2177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2176, i8* %2177, align 1
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2178, align 1
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2179, align 1
  store %struct.Memory* %loadMem_400b2a, %struct.Memory** %MEMORY
  %loadMem_400b2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2181 = getelementptr inbounds %struct.GPR, %struct.GPR* %2180, i32 0, i32 33
  %2182 = getelementptr inbounds %struct.Reg, %struct.Reg* %2181, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %2182 to i64*
  %2183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2184 = getelementptr inbounds %struct.GPR, %struct.GPR* %2183, i32 0, i32 5
  %2185 = getelementptr inbounds %struct.Reg, %struct.Reg* %2184, i32 0, i32 0
  %RCX.i941 = bitcast %union.anon* %2185 to i64*
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2187 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2186, i64 0, i64 0
  %YMM0.i942 = bitcast %union.VectorReg* %2187 to %"class.std::bitset"*
  %2188 = bitcast %"class.std::bitset"* %YMM0.i942 to i8*
  %2189 = load i64, i64* %RCX.i941
  %2190 = load i64, i64* %PC.i940
  %2191 = add i64 %2190, 5
  store i64 %2191, i64* %PC.i940
  %2192 = bitcast i8* %2188 to i64*
  store i64 %2189, i64* %2192, align 1
  %2193 = getelementptr inbounds i8, i8* %2188, i64 8
  %2194 = bitcast i8* %2193 to i64*
  store i64 0, i64* %2194, align 1
  store %struct.Memory* %loadMem_400b2d, %struct.Memory** %MEMORY
  %loadMem_400b32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2196 = getelementptr inbounds %struct.GPR, %struct.GPR* %2195, i32 0, i32 33
  %2197 = getelementptr inbounds %struct.Reg, %struct.Reg* %2196, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %2197 to i64*
  %2198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2199 = getelementptr inbounds %struct.GPR, %struct.GPR* %2198, i32 0, i32 15
  %2200 = getelementptr inbounds %struct.Reg, %struct.Reg* %2199, i32 0, i32 0
  %RBP.i938 = bitcast %union.anon* %2200 to i64*
  %2201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2202 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2201, i64 0, i64 0
  %YMM0.i939 = bitcast %union.VectorReg* %2202 to %"class.std::bitset"*
  %2203 = bitcast %"class.std::bitset"* %YMM0.i939 to i8*
  %2204 = bitcast %"class.std::bitset"* %YMM0.i939 to i8*
  %2205 = load i64, i64* %RBP.i938
  %2206 = sub i64 %2205, 120
  %2207 = load i64, i64* %PC.i937
  %2208 = add i64 %2207, 5
  store i64 %2208, i64* %PC.i937
  %2209 = bitcast i8* %2204 to double*
  %2210 = load double, double* %2209, align 1
  %2211 = getelementptr inbounds i8, i8* %2204, i64 8
  %2212 = bitcast i8* %2211 to i64*
  %2213 = load i64, i64* %2212, align 1
  %2214 = inttoptr i64 %2206 to double*
  %2215 = load double, double* %2214
  %2216 = fadd double %2210, %2215
  %2217 = bitcast i8* %2203 to double*
  store double %2216, double* %2217, align 1
  %2218 = getelementptr inbounds i8, i8* %2203, i64 8
  %2219 = bitcast i8* %2218 to i64*
  store i64 %2213, i64* %2219, align 1
  store %struct.Memory* %loadMem_400b32, %struct.Memory** %MEMORY
  %loadMem_400b37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2221 = getelementptr inbounds %struct.GPR, %struct.GPR* %2220, i32 0, i32 33
  %2222 = getelementptr inbounds %struct.Reg, %struct.Reg* %2221, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %2222 to i64*
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2224 = getelementptr inbounds %struct.GPR, %struct.GPR* %2223, i32 0, i32 15
  %2225 = getelementptr inbounds %struct.Reg, %struct.Reg* %2224, i32 0, i32 0
  %RBP.i935 = bitcast %union.anon* %2225 to i64*
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2227 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2226, i64 0, i64 0
  %YMM0.i936 = bitcast %union.VectorReg* %2227 to %"class.std::bitset"*
  %2228 = bitcast %"class.std::bitset"* %YMM0.i936 to i8*
  %2229 = bitcast %"class.std::bitset"* %YMM0.i936 to i8*
  %2230 = load i64, i64* %RBP.i935
  %2231 = sub i64 %2230, 128
  %2232 = load i64, i64* %PC.i934
  %2233 = add i64 %2232, 5
  store i64 %2233, i64* %PC.i934
  %2234 = bitcast i8* %2229 to double*
  %2235 = load double, double* %2234, align 1
  %2236 = getelementptr inbounds i8, i8* %2229, i64 8
  %2237 = bitcast i8* %2236 to i64*
  %2238 = load i64, i64* %2237, align 1
  %2239 = inttoptr i64 %2231 to double*
  %2240 = load double, double* %2239
  %2241 = fadd double %2235, %2240
  %2242 = bitcast i8* %2228 to double*
  store double %2241, double* %2242, align 1
  %2243 = getelementptr inbounds i8, i8* %2228, i64 8
  %2244 = bitcast i8* %2243 to i64*
  store i64 %2238, i64* %2244, align 1
  store %struct.Memory* %loadMem_400b37, %struct.Memory** %MEMORY
  %loadMem_400b3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2246 = getelementptr inbounds %struct.GPR, %struct.GPR* %2245, i32 0, i32 33
  %2247 = getelementptr inbounds %struct.Reg, %struct.Reg* %2246, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %2247 to i64*
  %2248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2249 = getelementptr inbounds %struct.GPR, %struct.GPR* %2248, i32 0, i32 15
  %2250 = getelementptr inbounds %struct.Reg, %struct.Reg* %2249, i32 0, i32 0
  %RBP.i932 = bitcast %union.anon* %2250 to i64*
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2252 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2251, i64 0, i64 0
  %YMM0.i933 = bitcast %union.VectorReg* %2252 to %"class.std::bitset"*
  %2253 = bitcast %"class.std::bitset"* %YMM0.i933 to i8*
  %2254 = bitcast %"class.std::bitset"* %YMM0.i933 to i8*
  %2255 = load i64, i64* %RBP.i932
  %2256 = sub i64 %2255, 136
  %2257 = load i64, i64* %PC.i931
  %2258 = add i64 %2257, 8
  store i64 %2258, i64* %PC.i931
  %2259 = bitcast i8* %2254 to double*
  %2260 = load double, double* %2259, align 1
  %2261 = getelementptr inbounds i8, i8* %2254, i64 8
  %2262 = bitcast i8* %2261 to i64*
  %2263 = load i64, i64* %2262, align 1
  %2264 = inttoptr i64 %2256 to double*
  %2265 = load double, double* %2264
  %2266 = fadd double %2260, %2265
  %2267 = bitcast i8* %2253 to double*
  store double %2266, double* %2267, align 1
  %2268 = getelementptr inbounds i8, i8* %2253, i64 8
  %2269 = bitcast i8* %2268 to i64*
  store i64 %2263, i64* %2269, align 1
  store %struct.Memory* %loadMem_400b3c, %struct.Memory** %MEMORY
  %loadMem_400b44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2271 = getelementptr inbounds %struct.GPR, %struct.GPR* %2270, i32 0, i32 33
  %2272 = getelementptr inbounds %struct.Reg, %struct.Reg* %2271, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %2272 to i64*
  %2273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2274 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2273, i64 0, i64 0
  %YMM0.i930 = bitcast %union.VectorReg* %2274 to %"class.std::bitset"*
  %2275 = bitcast %"class.std::bitset"* %YMM0.i930 to i8*
  %2276 = bitcast %"class.std::bitset"* %YMM0.i930 to i8*
  %2277 = load i64, i64* %PC.i929
  %2278 = add i64 %2277, 9
  store i64 %2278, i64* %PC.i929
  %2279 = bitcast i8* %2276 to double*
  %2280 = load double, double* %2279, align 1
  %2281 = getelementptr inbounds i8, i8* %2276, i64 8
  %2282 = bitcast i8* %2281 to i64*
  %2283 = load i64, i64* %2282, align 1
  %2284 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %2285 = fmul double %2280, %2284
  %2286 = bitcast i8* %2275 to double*
  store double %2285, double* %2286, align 1
  %2287 = getelementptr inbounds i8, i8* %2275, i64 8
  %2288 = bitcast i8* %2287 to i64*
  store i64 %2283, i64* %2288, align 1
  store %struct.Memory* %loadMem_400b44, %struct.Memory** %MEMORY
  %loadMem_400b4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2290 = getelementptr inbounds %struct.GPR, %struct.GPR* %2289, i32 0, i32 33
  %2291 = getelementptr inbounds %struct.Reg, %struct.Reg* %2290, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %2291 to i64*
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2293 = getelementptr inbounds %struct.GPR, %struct.GPR* %2292, i32 0, i32 15
  %2294 = getelementptr inbounds %struct.Reg, %struct.Reg* %2293, i32 0, i32 0
  %RBP.i927 = bitcast %union.anon* %2294 to i64*
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2296 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2295, i64 0, i64 0
  %XMM0.i928 = bitcast %union.VectorReg* %2296 to %union.vec128_t*
  %2297 = load i64, i64* %RBP.i927
  %2298 = sub i64 %2297, 136
  %2299 = bitcast %union.vec128_t* %XMM0.i928 to i8*
  %2300 = load i64, i64* %PC.i926
  %2301 = add i64 %2300, 8
  store i64 %2301, i64* %PC.i926
  %2302 = bitcast i8* %2299 to double*
  %2303 = load double, double* %2302, align 1
  %2304 = inttoptr i64 %2298 to double*
  store double %2303, double* %2304
  store %struct.Memory* %loadMem_400b4d, %struct.Memory** %MEMORY
  %loadMem_400b55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2306 = getelementptr inbounds %struct.GPR, %struct.GPR* %2305, i32 0, i32 33
  %2307 = getelementptr inbounds %struct.Reg, %struct.Reg* %2306, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %2307 to i64*
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2309 = getelementptr inbounds %struct.GPR, %struct.GPR* %2308, i32 0, i32 1
  %2310 = getelementptr inbounds %struct.Reg, %struct.Reg* %2309, i32 0, i32 0
  %RAX.i924 = bitcast %union.anon* %2310 to i64*
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 15
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %RBP.i925 = bitcast %union.anon* %2313 to i64*
  %2314 = load i64, i64* %RBP.i925
  %2315 = sub i64 %2314, 24
  %2316 = load i64, i64* %PC.i923
  %2317 = add i64 %2316, 4
  store i64 %2317, i64* %PC.i923
  %2318 = inttoptr i64 %2315 to i64*
  %2319 = load i64, i64* %2318
  store i64 %2319, i64* %RAX.i924, align 8
  store %struct.Memory* %loadMem_400b55, %struct.Memory** %MEMORY
  %loadMem_400b59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2321 = getelementptr inbounds %struct.GPR, %struct.GPR* %2320, i32 0, i32 33
  %2322 = getelementptr inbounds %struct.Reg, %struct.Reg* %2321, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %2322 to i64*
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2324 = getelementptr inbounds %struct.GPR, %struct.GPR* %2323, i32 0, i32 1
  %2325 = getelementptr inbounds %struct.Reg, %struct.Reg* %2324, i32 0, i32 0
  %RAX.i922 = bitcast %union.anon* %2325 to i64*
  %2326 = load i64, i64* %RAX.i922
  %2327 = load i64, i64* %PC.i921
  %2328 = add i64 %2327, 4
  store i64 %2328, i64* %PC.i921
  %2329 = add i64 1, %2326
  store i64 %2329, i64* %RAX.i922, align 8
  %2330 = icmp ult i64 %2329, %2326
  %2331 = icmp ult i64 %2329, 1
  %2332 = or i1 %2330, %2331
  %2333 = zext i1 %2332 to i8
  %2334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2333, i8* %2334, align 1
  %2335 = trunc i64 %2329 to i32
  %2336 = and i32 %2335, 255
  %2337 = call i32 @llvm.ctpop.i32(i32 %2336)
  %2338 = trunc i32 %2337 to i8
  %2339 = and i8 %2338, 1
  %2340 = xor i8 %2339, 1
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2340, i8* %2341, align 1
  %2342 = xor i64 1, %2326
  %2343 = xor i64 %2342, %2329
  %2344 = lshr i64 %2343, 4
  %2345 = trunc i64 %2344 to i8
  %2346 = and i8 %2345, 1
  %2347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2346, i8* %2347, align 1
  %2348 = icmp eq i64 %2329, 0
  %2349 = zext i1 %2348 to i8
  %2350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2349, i8* %2350, align 1
  %2351 = lshr i64 %2329, 63
  %2352 = trunc i64 %2351 to i8
  %2353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2352, i8* %2353, align 1
  %2354 = lshr i64 %2326, 63
  %2355 = xor i64 %2351, %2354
  %2356 = add i64 %2355, %2351
  %2357 = icmp eq i64 %2356, 2
  %2358 = zext i1 %2357 to i8
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2358, i8* %2359, align 1
  store %struct.Memory* %loadMem_400b59, %struct.Memory** %MEMORY
  %loadMem_400b5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2361 = getelementptr inbounds %struct.GPR, %struct.GPR* %2360, i32 0, i32 33
  %2362 = getelementptr inbounds %struct.Reg, %struct.Reg* %2361, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %2362 to i64*
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2364 = getelementptr inbounds %struct.GPR, %struct.GPR* %2363, i32 0, i32 1
  %2365 = getelementptr inbounds %struct.Reg, %struct.Reg* %2364, i32 0, i32 0
  %RAX.i919 = bitcast %union.anon* %2365 to i64*
  %2366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2367 = getelementptr inbounds %struct.GPR, %struct.GPR* %2366, i32 0, i32 15
  %2368 = getelementptr inbounds %struct.Reg, %struct.Reg* %2367, i32 0, i32 0
  %RBP.i920 = bitcast %union.anon* %2368 to i64*
  %2369 = load i64, i64* %RBP.i920
  %2370 = sub i64 %2369, 24
  %2371 = load i64, i64* %RAX.i919
  %2372 = load i64, i64* %PC.i918
  %2373 = add i64 %2372, 4
  store i64 %2373, i64* %PC.i918
  %2374 = inttoptr i64 %2370 to i64*
  store i64 %2371, i64* %2374
  store %struct.Memory* %loadMem_400b5d, %struct.Memory** %MEMORY
  %loadMem_400b61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2376 = getelementptr inbounds %struct.GPR, %struct.GPR* %2375, i32 0, i32 33
  %2377 = getelementptr inbounds %struct.Reg, %struct.Reg* %2376, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %2377 to i64*
  %2378 = load i64, i64* %PC.i917
  %2379 = add i64 %2378, -200
  %2380 = load i64, i64* %PC.i917
  %2381 = add i64 %2380, 5
  store i64 %2381, i64* %PC.i917
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2379, i64* %2382, align 8
  store %struct.Memory* %loadMem_400b61, %struct.Memory** %MEMORY
  br label %block_.L_400a99

block_.L_400b66:                                  ; preds = %block_.L_400a99
  %loadMem_400b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2384 = getelementptr inbounds %struct.GPR, %struct.GPR* %2383, i32 0, i32 33
  %2385 = getelementptr inbounds %struct.Reg, %struct.Reg* %2384, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %2385 to i64*
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2387 = getelementptr inbounds %struct.GPR, %struct.GPR* %2386, i32 0, i32 1
  %2388 = getelementptr inbounds %struct.Reg, %struct.Reg* %2387, i32 0, i32 0
  %RAX.i915 = bitcast %union.anon* %2388 to i64*
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2390 = getelementptr inbounds %struct.GPR, %struct.GPR* %2389, i32 0, i32 15
  %2391 = getelementptr inbounds %struct.Reg, %struct.Reg* %2390, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %2391 to i64*
  %2392 = load i64, i64* %RBP.i916
  %2393 = sub i64 %2392, 176
  %2394 = load i64, i64* %PC.i914
  %2395 = add i64 %2394, 6
  store i64 %2395, i64* %PC.i914
  %2396 = inttoptr i64 %2393 to i32*
  %2397 = load i32, i32* %2396
  %2398 = zext i32 %2397 to i64
  store i64 %2398, i64* %RAX.i915, align 8
  store %struct.Memory* %loadMem_400b66, %struct.Memory** %MEMORY
  %loadMem_400b6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2400 = getelementptr inbounds %struct.GPR, %struct.GPR* %2399, i32 0, i32 33
  %2401 = getelementptr inbounds %struct.Reg, %struct.Reg* %2400, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %2401 to i64*
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2403 = getelementptr inbounds %struct.GPR, %struct.GPR* %2402, i32 0, i32 1
  %2404 = getelementptr inbounds %struct.Reg, %struct.Reg* %2403, i32 0, i32 0
  %EAX.i912 = bitcast %union.anon* %2404 to i32*
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2406 = getelementptr inbounds %struct.GPR, %struct.GPR* %2405, i32 0, i32 15
  %2407 = getelementptr inbounds %struct.Reg, %struct.Reg* %2406, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %2407 to i64*
  %2408 = load i32, i32* %EAX.i912
  %2409 = zext i32 %2408 to i64
  %2410 = load i64, i64* %RBP.i913
  %2411 = sub i64 %2410, 172
  %2412 = load i64, i64* %PC.i911
  %2413 = add i64 %2412, 6
  store i64 %2413, i64* %PC.i911
  %2414 = inttoptr i64 %2411 to i32*
  %2415 = load i32, i32* %2414
  %2416 = sub i32 %2408, %2415
  %2417 = icmp ult i32 %2408, %2415
  %2418 = zext i1 %2417 to i8
  %2419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2418, i8* %2419, align 1
  %2420 = and i32 %2416, 255
  %2421 = call i32 @llvm.ctpop.i32(i32 %2420)
  %2422 = trunc i32 %2421 to i8
  %2423 = and i8 %2422, 1
  %2424 = xor i8 %2423, 1
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2424, i8* %2425, align 1
  %2426 = xor i32 %2415, %2408
  %2427 = xor i32 %2426, %2416
  %2428 = lshr i32 %2427, 4
  %2429 = trunc i32 %2428 to i8
  %2430 = and i8 %2429, 1
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2430, i8* %2431, align 1
  %2432 = icmp eq i32 %2416, 0
  %2433 = zext i1 %2432 to i8
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2433, i8* %2434, align 1
  %2435 = lshr i32 %2416, 31
  %2436 = trunc i32 %2435 to i8
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2436, i8* %2437, align 1
  %2438 = lshr i32 %2408, 31
  %2439 = lshr i32 %2415, 31
  %2440 = xor i32 %2439, %2438
  %2441 = xor i32 %2435, %2438
  %2442 = add i32 %2441, %2440
  %2443 = icmp eq i32 %2442, 2
  %2444 = zext i1 %2443 to i8
  %2445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2444, i8* %2445, align 1
  store %struct.Memory* %loadMem_400b6c, %struct.Memory** %MEMORY
  %loadMem_400b72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2447 = getelementptr inbounds %struct.GPR, %struct.GPR* %2446, i32 0, i32 33
  %2448 = getelementptr inbounds %struct.Reg, %struct.Reg* %2447, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %2448 to i64*
  %2449 = load i64, i64* %PC.i910
  %2450 = add i64 %2449, 46
  %2451 = load i64, i64* %PC.i910
  %2452 = add i64 %2451, 6
  %2453 = load i64, i64* %PC.i910
  %2454 = add i64 %2453, 6
  store i64 %2454, i64* %PC.i910
  %2455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2456 = load i8, i8* %2455, align 1
  %2457 = icmp eq i8 %2456, 0
  %2458 = zext i1 %2457 to i8
  store i8 %2458, i8* %BRANCH_TAKEN, align 1
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2460 = select i1 %2457, i64 %2450, i64 %2452
  store i64 %2460, i64* %2459, align 8
  store %struct.Memory* %loadMem_400b72, %struct.Memory** %MEMORY
  %loadBr_400b72 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400b72 = icmp eq i8 %loadBr_400b72, 1
  br i1 %cmpBr_400b72, label %block_.L_400ba0, label %block_400b78

block_400b78:                                     ; preds = %block_.L_400b66
  %loadMem_400b78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2462 = getelementptr inbounds %struct.GPR, %struct.GPR* %2461, i32 0, i32 33
  %2463 = getelementptr inbounds %struct.Reg, %struct.Reg* %2462, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %2463 to i64*
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2465 = getelementptr inbounds %struct.GPR, %struct.GPR* %2464, i32 0, i32 11
  %2466 = getelementptr inbounds %struct.Reg, %struct.Reg* %2465, i32 0, i32 0
  %RDI.i908 = bitcast %union.anon* %2466 to i64*
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2468 = getelementptr inbounds %struct.GPR, %struct.GPR* %2467, i32 0, i32 15
  %2469 = getelementptr inbounds %struct.Reg, %struct.Reg* %2468, i32 0, i32 0
  %RBP.i909 = bitcast %union.anon* %2469 to i64*
  %2470 = load i64, i64* %RBP.i909
  %2471 = sub i64 %2470, 32
  %2472 = load i64, i64* %PC.i907
  %2473 = add i64 %2472, 4
  store i64 %2473, i64* %PC.i907
  %2474 = inttoptr i64 %2471 to i64*
  %2475 = load i64, i64* %2474
  store i64 %2475, i64* %RDI.i908, align 8
  store %struct.Memory* %loadMem_400b78, %struct.Memory** %MEMORY
  %loadMem_400b7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2477 = getelementptr inbounds %struct.GPR, %struct.GPR* %2476, i32 0, i32 33
  %2478 = getelementptr inbounds %struct.Reg, %struct.Reg* %2477, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %2478 to i64*
  %2479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2480 = getelementptr inbounds %struct.GPR, %struct.GPR* %2479, i32 0, i32 9
  %2481 = getelementptr inbounds %struct.Reg, %struct.Reg* %2480, i32 0, i32 0
  %RSI.i905 = bitcast %union.anon* %2481 to i64*
  %2482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2483 = getelementptr inbounds %struct.GPR, %struct.GPR* %2482, i32 0, i32 15
  %2484 = getelementptr inbounds %struct.Reg, %struct.Reg* %2483, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %2484 to i64*
  %2485 = load i64, i64* %RBP.i906
  %2486 = sub i64 %2485, 32
  %2487 = load i64, i64* %PC.i904
  %2488 = add i64 %2487, 4
  store i64 %2488, i64* %PC.i904
  %2489 = inttoptr i64 %2486 to i64*
  %2490 = load i64, i64* %2489
  store i64 %2490, i64* %RSI.i905, align 8
  store %struct.Memory* %loadMem_400b7c, %struct.Memory** %MEMORY
  %loadMem_400b80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2492 = getelementptr inbounds %struct.GPR, %struct.GPR* %2491, i32 0, i32 33
  %2493 = getelementptr inbounds %struct.Reg, %struct.Reg* %2492, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %2493 to i64*
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2495 = getelementptr inbounds %struct.GPR, %struct.GPR* %2494, i32 0, i32 7
  %2496 = getelementptr inbounds %struct.Reg, %struct.Reg* %2495, i32 0, i32 0
  %RDX.i902 = bitcast %union.anon* %2496 to i64*
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2498 = getelementptr inbounds %struct.GPR, %struct.GPR* %2497, i32 0, i32 15
  %2499 = getelementptr inbounds %struct.Reg, %struct.Reg* %2498, i32 0, i32 0
  %RBP.i903 = bitcast %union.anon* %2499 to i64*
  %2500 = load i64, i64* %RBP.i903
  %2501 = sub i64 %2500, 32
  %2502 = load i64, i64* %PC.i901
  %2503 = add i64 %2502, 4
  store i64 %2503, i64* %PC.i901
  %2504 = inttoptr i64 %2501 to i64*
  %2505 = load i64, i64* %2504
  store i64 %2505, i64* %RDX.i902, align 8
  store %struct.Memory* %loadMem_400b80, %struct.Memory** %MEMORY
  %loadMem_400b84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2507 = getelementptr inbounds %struct.GPR, %struct.GPR* %2506, i32 0, i32 33
  %2508 = getelementptr inbounds %struct.Reg, %struct.Reg* %2507, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %2508 to i64*
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2510 = getelementptr inbounds %struct.GPR, %struct.GPR* %2509, i32 0, i32 15
  %2511 = getelementptr inbounds %struct.Reg, %struct.Reg* %2510, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %2511 to i64*
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2513 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2512, i64 0, i64 0
  %YMM0.i900 = bitcast %union.VectorReg* %2513 to %"class.std::bitset"*
  %2514 = bitcast %"class.std::bitset"* %YMM0.i900 to i8*
  %2515 = load i64, i64* %RBP.i899
  %2516 = sub i64 %2515, 112
  %2517 = load i64, i64* %PC.i898
  %2518 = add i64 %2517, 5
  store i64 %2518, i64* %PC.i898
  %2519 = inttoptr i64 %2516 to double*
  %2520 = load double, double* %2519
  %2521 = bitcast i8* %2514 to double*
  store double %2520, double* %2521, align 1
  %2522 = getelementptr inbounds i8, i8* %2514, i64 8
  %2523 = bitcast i8* %2522 to double*
  store double 0.000000e+00, double* %2523, align 1
  store %struct.Memory* %loadMem_400b84, %struct.Memory** %MEMORY
  %loadMem_400b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2525 = getelementptr inbounds %struct.GPR, %struct.GPR* %2524, i32 0, i32 33
  %2526 = getelementptr inbounds %struct.Reg, %struct.Reg* %2525, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %2526 to i64*
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2528 = getelementptr inbounds %struct.GPR, %struct.GPR* %2527, i32 0, i32 15
  %2529 = getelementptr inbounds %struct.Reg, %struct.Reg* %2528, i32 0, i32 0
  %RBP.i896 = bitcast %union.anon* %2529 to i64*
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2531 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2530, i64 0, i64 1
  %YMM1.i897 = bitcast %union.VectorReg* %2531 to %"class.std::bitset"*
  %2532 = bitcast %"class.std::bitset"* %YMM1.i897 to i8*
  %2533 = load i64, i64* %RBP.i896
  %2534 = sub i64 %2533, 120
  %2535 = load i64, i64* %PC.i895
  %2536 = add i64 %2535, 5
  store i64 %2536, i64* %PC.i895
  %2537 = inttoptr i64 %2534 to double*
  %2538 = load double, double* %2537
  %2539 = bitcast i8* %2532 to double*
  store double %2538, double* %2539, align 1
  %2540 = getelementptr inbounds i8, i8* %2532, i64 8
  %2541 = bitcast i8* %2540 to double*
  store double 0.000000e+00, double* %2541, align 1
  store %struct.Memory* %loadMem_400b89, %struct.Memory** %MEMORY
  %loadMem_400b8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2543 = getelementptr inbounds %struct.GPR, %struct.GPR* %2542, i32 0, i32 33
  %2544 = getelementptr inbounds %struct.Reg, %struct.Reg* %2543, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %2544 to i64*
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 15
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %2547 to i64*
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2549 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2548, i64 0, i64 2
  %YMM2.i894 = bitcast %union.VectorReg* %2549 to %"class.std::bitset"*
  %2550 = bitcast %"class.std::bitset"* %YMM2.i894 to i8*
  %2551 = load i64, i64* %RBP.i893
  %2552 = sub i64 %2551, 128
  %2553 = load i64, i64* %PC.i892
  %2554 = add i64 %2553, 5
  store i64 %2554, i64* %PC.i892
  %2555 = inttoptr i64 %2552 to double*
  %2556 = load double, double* %2555
  %2557 = bitcast i8* %2550 to double*
  store double %2556, double* %2557, align 1
  %2558 = getelementptr inbounds i8, i8* %2550, i64 8
  %2559 = bitcast i8* %2558 to double*
  store double 0.000000e+00, double* %2559, align 1
  store %struct.Memory* %loadMem_400b8e, %struct.Memory** %MEMORY
  %loadMem_400b93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 33
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %2562 to i64*
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2564 = getelementptr inbounds %struct.GPR, %struct.GPR* %2563, i32 0, i32 15
  %2565 = getelementptr inbounds %struct.Reg, %struct.Reg* %2564, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %2565 to i64*
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2567 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2566, i64 0, i64 3
  %YMM3.i891 = bitcast %union.VectorReg* %2567 to %"class.std::bitset"*
  %2568 = bitcast %"class.std::bitset"* %YMM3.i891 to i8*
  %2569 = load i64, i64* %RBP.i890
  %2570 = sub i64 %2569, 136
  %2571 = load i64, i64* %PC.i889
  %2572 = add i64 %2571, 8
  store i64 %2572, i64* %PC.i889
  %2573 = inttoptr i64 %2570 to double*
  %2574 = load double, double* %2573
  %2575 = bitcast i8* %2568 to double*
  store double %2574, double* %2575, align 1
  %2576 = getelementptr inbounds i8, i8* %2568, i64 8
  %2577 = bitcast i8* %2576 to double*
  store double 0.000000e+00, double* %2577, align 1
  store %struct.Memory* %loadMem_400b93, %struct.Memory** %MEMORY
  %loadMem1_400b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2579 = getelementptr inbounds %struct.GPR, %struct.GPR* %2578, i32 0, i32 33
  %2580 = getelementptr inbounds %struct.Reg, %struct.Reg* %2579, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %2580 to i64*
  %2581 = load i64, i64* %PC.i888
  %2582 = add i64 %2581, 2645
  %2583 = load i64, i64* %PC.i888
  %2584 = add i64 %2583, 5
  %2585 = load i64, i64* %PC.i888
  %2586 = add i64 %2585, 5
  store i64 %2586, i64* %PC.i888
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2588 = load i64, i64* %2587, align 8
  %2589 = add i64 %2588, -8
  %2590 = inttoptr i64 %2589 to i64*
  store i64 %2584, i64* %2590
  store i64 %2589, i64* %2587, align 8
  %2591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2582, i64* %2591, align 8
  store %struct.Memory* %loadMem1_400b9b, %struct.Memory** %MEMORY
  %loadMem2_400b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400b9b = load i64, i64* %3
  %call2_400b9b = call %struct.Memory* @sub_4015f0.POUT(%struct.State* %0, i64 %loadPC_400b9b, %struct.Memory* %loadMem2_400b9b)
  store %struct.Memory* %call2_400b9b, %struct.Memory** %MEMORY
  br label %block_.L_400ba0

block_.L_400ba0:                                  ; preds = %block_400b78, %block_.L_400b66
  %loadMem_400ba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2593 = getelementptr inbounds %struct.GPR, %struct.GPR* %2592, i32 0, i32 33
  %2594 = getelementptr inbounds %struct.Reg, %struct.Reg* %2593, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %2594 to i64*
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2596 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2595, i64 0, i64 0
  %YMM0.i887 = bitcast %union.VectorReg* %2596 to %"class.std::bitset"*
  %2597 = bitcast %"class.std::bitset"* %YMM0.i887 to i8*
  %2598 = load i64, i64* %PC.i886
  %2599 = add i64 %2598, 3456
  %2600 = load i64, i64* %PC.i886
  %2601 = add i64 %2600, 8
  store i64 %2601, i64* %PC.i886
  %2602 = inttoptr i64 %2599 to double*
  %2603 = load double, double* %2602
  %2604 = bitcast i8* %2597 to double*
  store double %2603, double* %2604, align 1
  %2605 = getelementptr inbounds i8, i8* %2597, i64 8
  %2606 = bitcast i8* %2605 to double*
  store double 0.000000e+00, double* %2606, align 1
  store %struct.Memory* %loadMem_400ba0, %struct.Memory** %MEMORY
  %loadMem_400ba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2608 = getelementptr inbounds %struct.GPR, %struct.GPR* %2607, i32 0, i32 33
  %2609 = getelementptr inbounds %struct.Reg, %struct.Reg* %2608, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %2609 to i64*
  %2610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2611 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2610, i64 0, i64 1
  %YMM1.i885 = bitcast %union.VectorReg* %2611 to %"class.std::bitset"*
  %2612 = bitcast %"class.std::bitset"* %YMM1.i885 to i8*
  %2613 = load i64, i64* %PC.i884
  %2614 = add i64 %2613, 3456
  %2615 = load i64, i64* %PC.i884
  %2616 = add i64 %2615, 8
  store i64 %2616, i64* %PC.i884
  %2617 = inttoptr i64 %2614 to double*
  %2618 = load double, double* %2617
  %2619 = bitcast i8* %2612 to double*
  store double %2618, double* %2619, align 1
  %2620 = getelementptr inbounds i8, i8* %2612, i64 8
  %2621 = bitcast i8* %2620 to double*
  store double 0.000000e+00, double* %2621, align 1
  store %struct.Memory* %loadMem_400ba8, %struct.Memory** %MEMORY
  %loadMem_400bb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2623 = getelementptr inbounds %struct.GPR, %struct.GPR* %2622, i32 0, i32 33
  %2624 = getelementptr inbounds %struct.Reg, %struct.Reg* %2623, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %2624 to i64*
  %2625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2626 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2625, i64 0, i64 1
  %XMM1.i883 = bitcast %union.VectorReg* %2626 to %union.vec128_t*
  %2627 = bitcast %union.vec128_t* %XMM1.i883 to i8*
  %2628 = load i64, i64* %PC.i882
  %2629 = add i64 %2628, 9
  store i64 %2629, i64* %PC.i882
  %2630 = bitcast i8* %2627 to double*
  %2631 = load double, double* %2630, align 1
  store double %2631, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  store %struct.Memory* %loadMem_400bb0, %struct.Memory** %MEMORY
  %loadMem_400bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 33
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %2634 to i64*
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2636 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2635, i64 0, i64 0
  %XMM0.i881 = bitcast %union.VectorReg* %2636 to %union.vec128_t*
  %2637 = bitcast %union.vec128_t* %XMM0.i881 to i8*
  %2638 = load i64, i64* %PC.i880
  %2639 = add i64 %2638, 9
  store i64 %2639, i64* %PC.i880
  %2640 = bitcast i8* %2637 to double*
  %2641 = load double, double* %2640, align 1
  store double %2641, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  store %struct.Memory* %loadMem_400bb9, %struct.Memory** %MEMORY
  %loadMem_400bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2643 = getelementptr inbounds %struct.GPR, %struct.GPR* %2642, i32 0, i32 33
  %2644 = getelementptr inbounds %struct.Reg, %struct.Reg* %2643, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %2644 to i64*
  %2645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2646 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2645, i64 0, i64 0
  %XMM0.i879 = bitcast %union.VectorReg* %2646 to %union.vec128_t*
  %2647 = bitcast %union.vec128_t* %XMM0.i879 to i8*
  %2648 = load i64, i64* %PC.i878
  %2649 = add i64 %2648, 9
  store i64 %2649, i64* %PC.i878
  %2650 = bitcast i8* %2647 to double*
  %2651 = load double, double* %2650, align 1
  store double %2651, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  store %struct.Memory* %loadMem_400bc2, %struct.Memory** %MEMORY
  %loadMem_400bcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2653 = getelementptr inbounds %struct.GPR, %struct.GPR* %2652, i32 0, i32 33
  %2654 = getelementptr inbounds %struct.Reg, %struct.Reg* %2653, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %2654 to i64*
  %2655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2656 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2655, i64 0, i64 0
  %XMM0.i877 = bitcast %union.VectorReg* %2656 to %union.vec128_t*
  %2657 = bitcast %union.vec128_t* %XMM0.i877 to i8*
  %2658 = load i64, i64* %PC.i876
  %2659 = add i64 %2658, 9
  store i64 %2659, i64* %PC.i876
  %2660 = bitcast i8* %2657 to double*
  %2661 = load double, double* %2660, align 1
  store double %2661, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  store %struct.Memory* %loadMem_400bcb, %struct.Memory** %MEMORY
  %loadMem_400bd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2663 = getelementptr inbounds %struct.GPR, %struct.GPR* %2662, i32 0, i32 33
  %2664 = getelementptr inbounds %struct.Reg, %struct.Reg* %2663, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %2664 to i64*
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2666 = getelementptr inbounds %struct.GPR, %struct.GPR* %2665, i32 0, i32 15
  %2667 = getelementptr inbounds %struct.Reg, %struct.Reg* %2666, i32 0, i32 0
  %RBP.i875 = bitcast %union.anon* %2667 to i64*
  %2668 = load i64, i64* %RBP.i875
  %2669 = sub i64 %2668, 24
  %2670 = load i64, i64* %PC.i874
  %2671 = add i64 %2670, 8
  store i64 %2671, i64* %PC.i874
  %2672 = inttoptr i64 %2669 to i64*
  store i64 1, i64* %2672
  store %struct.Memory* %loadMem_400bd4, %struct.Memory** %MEMORY
  br label %block_.L_400bdc

block_.L_400bdc:                                  ; preds = %block_400bea, %block_.L_400ba0
  %loadMem_400bdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2674 = getelementptr inbounds %struct.GPR, %struct.GPR* %2673, i32 0, i32 33
  %2675 = getelementptr inbounds %struct.Reg, %struct.Reg* %2674, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %2675 to i64*
  %2676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2677 = getelementptr inbounds %struct.GPR, %struct.GPR* %2676, i32 0, i32 1
  %2678 = getelementptr inbounds %struct.Reg, %struct.Reg* %2677, i32 0, i32 0
  %RAX.i872 = bitcast %union.anon* %2678 to i64*
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2680 = getelementptr inbounds %struct.GPR, %struct.GPR* %2679, i32 0, i32 15
  %2681 = getelementptr inbounds %struct.Reg, %struct.Reg* %2680, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %2681 to i64*
  %2682 = load i64, i64* %RBP.i873
  %2683 = sub i64 %2682, 24
  %2684 = load i64, i64* %PC.i871
  %2685 = add i64 %2684, 4
  store i64 %2685, i64* %PC.i871
  %2686 = inttoptr i64 %2683 to i64*
  %2687 = load i64, i64* %2686
  store i64 %2687, i64* %RAX.i872, align 8
  store %struct.Memory* %loadMem_400bdc, %struct.Memory** %MEMORY
  %loadMem_400be0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2689 = getelementptr inbounds %struct.GPR, %struct.GPR* %2688, i32 0, i32 33
  %2690 = getelementptr inbounds %struct.Reg, %struct.Reg* %2689, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %2690 to i64*
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2692 = getelementptr inbounds %struct.GPR, %struct.GPR* %2691, i32 0, i32 1
  %2693 = getelementptr inbounds %struct.Reg, %struct.Reg* %2692, i32 0, i32 0
  %RAX.i869 = bitcast %union.anon* %2693 to i64*
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2695 = getelementptr inbounds %struct.GPR, %struct.GPR* %2694, i32 0, i32 15
  %2696 = getelementptr inbounds %struct.Reg, %struct.Reg* %2695, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %2696 to i64*
  %2697 = load i64, i64* %RAX.i869
  %2698 = load i64, i64* %RBP.i870
  %2699 = sub i64 %2698, 40
  %2700 = load i64, i64* %PC.i868
  %2701 = add i64 %2700, 4
  store i64 %2701, i64* %PC.i868
  %2702 = inttoptr i64 %2699 to i64*
  %2703 = load i64, i64* %2702
  %2704 = sub i64 %2697, %2703
  %2705 = icmp ugt i64 %2703, %2697
  %2706 = zext i1 %2705 to i8
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2706, i8* %2707, align 1
  %2708 = trunc i64 %2704 to i32
  %2709 = and i32 %2708, 255
  %2710 = call i32 @llvm.ctpop.i32(i32 %2709)
  %2711 = trunc i32 %2710 to i8
  %2712 = and i8 %2711, 1
  %2713 = xor i8 %2712, 1
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2713, i8* %2714, align 1
  %2715 = xor i64 %2703, %2697
  %2716 = xor i64 %2715, %2704
  %2717 = lshr i64 %2716, 4
  %2718 = trunc i64 %2717 to i8
  %2719 = and i8 %2718, 1
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2719, i8* %2720, align 1
  %2721 = icmp eq i64 %2704, 0
  %2722 = zext i1 %2721 to i8
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2722, i8* %2723, align 1
  %2724 = lshr i64 %2704, 63
  %2725 = trunc i64 %2724 to i8
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2725, i8* %2726, align 1
  %2727 = lshr i64 %2697, 63
  %2728 = lshr i64 %2703, 63
  %2729 = xor i64 %2728, %2727
  %2730 = xor i64 %2724, %2727
  %2731 = add i64 %2730, %2729
  %2732 = icmp eq i64 %2731, 2
  %2733 = zext i1 %2732 to i8
  %2734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2733, i8* %2734, align 1
  store %struct.Memory* %loadMem_400be0, %struct.Memory** %MEMORY
  %loadMem_400be4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2736 = getelementptr inbounds %struct.GPR, %struct.GPR* %2735, i32 0, i32 33
  %2737 = getelementptr inbounds %struct.Reg, %struct.Reg* %2736, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %2737 to i64*
  %2738 = load i64, i64* %PC.i867
  %2739 = add i64 %2738, 262
  %2740 = load i64, i64* %PC.i867
  %2741 = add i64 %2740, 6
  %2742 = load i64, i64* %PC.i867
  %2743 = add i64 %2742, 6
  store i64 %2743, i64* %PC.i867
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2745 = load i8, i8* %2744, align 1
  %2746 = icmp eq i8 %2745, 0
  %2747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2748 = load i8, i8* %2747, align 1
  %2749 = icmp ne i8 %2748, 0
  %2750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2751 = load i8, i8* %2750, align 1
  %2752 = icmp ne i8 %2751, 0
  %2753 = xor i1 %2749, %2752
  %2754 = xor i1 %2753, true
  %2755 = and i1 %2746, %2754
  %2756 = zext i1 %2755 to i8
  store i8 %2756, i8* %BRANCH_TAKEN, align 1
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2758 = select i1 %2755, i64 %2739, i64 %2741
  store i64 %2758, i64* %2757, align 8
  store %struct.Memory* %loadMem_400be4, %struct.Memory** %MEMORY
  %loadBr_400be4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400be4 = icmp eq i8 %loadBr_400be4, 1
  br i1 %cmpBr_400be4, label %block_.L_400cea, label %block_400bea

block_400bea:                                     ; preds = %block_.L_400bdc
  %loadMem_400bea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2760 = getelementptr inbounds %struct.GPR, %struct.GPR* %2759, i32 0, i32 33
  %2761 = getelementptr inbounds %struct.Reg, %struct.Reg* %2760, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %2761 to i64*
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2763 = getelementptr inbounds %struct.GPR, %struct.GPR* %2762, i32 0, i32 1
  %2764 = getelementptr inbounds %struct.Reg, %struct.Reg* %2763, i32 0, i32 0
  %RAX.i866 = bitcast %union.anon* %2764 to i64*
  %2765 = load i64, i64* %PC.i865
  %2766 = add i64 %2765, 10
  store i64 %2766, i64* %PC.i865
  store i64 -9223372036854775808, i64* %RAX.i866, align 8
  store %struct.Memory* %loadMem_400bea, %struct.Memory** %MEMORY
  %loadMem_400bf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2768 = getelementptr inbounds %struct.GPR, %struct.GPR* %2767, i32 0, i32 33
  %2769 = getelementptr inbounds %struct.Reg, %struct.Reg* %2768, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %2769 to i64*
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2771 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2770, i64 0, i64 0
  %YMM0.i864 = bitcast %union.VectorReg* %2771 to %"class.std::bitset"*
  %2772 = bitcast %"class.std::bitset"* %YMM0.i864 to i8*
  %2773 = load i64, i64* %PC.i863
  %2774 = add i64 %2773, 9
  store i64 %2774, i64* %PC.i863
  %2775 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %2776 = bitcast i8* %2772 to double*
  store double %2775, double* %2776, align 1
  %2777 = getelementptr inbounds i8, i8* %2772, i64 8
  %2778 = bitcast i8* %2777 to double*
  store double 0.000000e+00, double* %2778, align 1
  store %struct.Memory* %loadMem_400bf4, %struct.Memory** %MEMORY
  %loadMem_400bfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2780 = getelementptr inbounds %struct.GPR, %struct.GPR* %2779, i32 0, i32 33
  %2781 = getelementptr inbounds %struct.Reg, %struct.Reg* %2780, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %2781 to i64*
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2783 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2782, i64 0, i64 0
  %YMM0.i862 = bitcast %union.VectorReg* %2783 to %"class.std::bitset"*
  %2784 = bitcast %"class.std::bitset"* %YMM0.i862 to i8*
  %2785 = bitcast %"class.std::bitset"* %YMM0.i862 to i8*
  %2786 = load i64, i64* %PC.i861
  %2787 = add i64 %2786, 9
  store i64 %2787, i64* %PC.i861
  %2788 = bitcast i8* %2785 to double*
  %2789 = load double, double* %2788, align 1
  %2790 = getelementptr inbounds i8, i8* %2785, i64 8
  %2791 = bitcast i8* %2790 to i64*
  %2792 = load i64, i64* %2791, align 1
  %2793 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %2794 = fadd double %2789, %2793
  %2795 = bitcast i8* %2784 to double*
  store double %2794, double* %2795, align 1
  %2796 = getelementptr inbounds i8, i8* %2784, i64 8
  %2797 = bitcast i8* %2796 to i64*
  store i64 %2792, i64* %2797, align 1
  store %struct.Memory* %loadMem_400bfd, %struct.Memory** %MEMORY
  %loadMem_400c06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2799 = getelementptr inbounds %struct.GPR, %struct.GPR* %2798, i32 0, i32 33
  %2800 = getelementptr inbounds %struct.Reg, %struct.Reg* %2799, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %2800 to i64*
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2802 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2801, i64 0, i64 0
  %YMM0.i860 = bitcast %union.VectorReg* %2802 to %"class.std::bitset"*
  %2803 = bitcast %"class.std::bitset"* %YMM0.i860 to i8*
  %2804 = bitcast %"class.std::bitset"* %YMM0.i860 to i8*
  %2805 = load i64, i64* %PC.i859
  %2806 = add i64 %2805, 9
  store i64 %2806, i64* %PC.i859
  %2807 = bitcast i8* %2804 to double*
  %2808 = load double, double* %2807, align 1
  %2809 = getelementptr inbounds i8, i8* %2804, i64 8
  %2810 = bitcast i8* %2809 to i64*
  %2811 = load i64, i64* %2810, align 1
  %2812 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %2813 = fadd double %2808, %2812
  %2814 = bitcast i8* %2803 to double*
  store double %2813, double* %2814, align 1
  %2815 = getelementptr inbounds i8, i8* %2803, i64 8
  %2816 = bitcast i8* %2815 to i64*
  store i64 %2811, i64* %2816, align 1
  store %struct.Memory* %loadMem_400c06, %struct.Memory** %MEMORY
  %loadMem_400c0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2818 = getelementptr inbounds %struct.GPR, %struct.GPR* %2817, i32 0, i32 33
  %2819 = getelementptr inbounds %struct.Reg, %struct.Reg* %2818, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %2819 to i64*
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2821 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2820, i64 0, i64 0
  %YMM0.i858 = bitcast %union.VectorReg* %2821 to %"class.std::bitset"*
  %2822 = bitcast %"class.std::bitset"* %YMM0.i858 to i8*
  %2823 = bitcast %"class.std::bitset"* %YMM0.i858 to i8*
  %2824 = load i64, i64* %PC.i857
  %2825 = add i64 %2824, 9
  store i64 %2825, i64* %PC.i857
  %2826 = bitcast i8* %2823 to double*
  %2827 = load double, double* %2826, align 1
  %2828 = getelementptr inbounds i8, i8* %2823, i64 8
  %2829 = bitcast i8* %2828 to i64*
  %2830 = load i64, i64* %2829, align 1
  %2831 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %2832 = fsub double %2827, %2831
  %2833 = bitcast i8* %2822 to double*
  store double %2832, double* %2833, align 1
  %2834 = getelementptr inbounds i8, i8* %2822, i64 8
  %2835 = bitcast i8* %2834 to i64*
  store i64 %2830, i64* %2835, align 1
  store %struct.Memory* %loadMem_400c0f, %struct.Memory** %MEMORY
  %loadMem_400c18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2837 = getelementptr inbounds %struct.GPR, %struct.GPR* %2836, i32 0, i32 33
  %2838 = getelementptr inbounds %struct.Reg, %struct.Reg* %2837, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %2838 to i64*
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2840 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2839, i64 0, i64 0
  %YMM0.i856 = bitcast %union.VectorReg* %2840 to %"class.std::bitset"*
  %2841 = bitcast %"class.std::bitset"* %YMM0.i856 to i8*
  %2842 = bitcast %"class.std::bitset"* %YMM0.i856 to i8*
  %2843 = load i64, i64* %PC.i855
  %2844 = add i64 %2843, 9
  store i64 %2844, i64* %PC.i855
  %2845 = bitcast i8* %2842 to double*
  %2846 = load double, double* %2845, align 1
  %2847 = getelementptr inbounds i8, i8* %2842, i64 8
  %2848 = bitcast i8* %2847 to i64*
  %2849 = load i64, i64* %2848, align 1
  %2850 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %2851 = fmul double %2846, %2850
  %2852 = bitcast i8* %2841 to double*
  store double %2851, double* %2852, align 1
  %2853 = getelementptr inbounds i8, i8* %2841, i64 8
  %2854 = bitcast i8* %2853 to i64*
  store i64 %2849, i64* %2854, align 1
  store %struct.Memory* %loadMem_400c18, %struct.Memory** %MEMORY
  %loadMem_400c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2856 = getelementptr inbounds %struct.GPR, %struct.GPR* %2855, i32 0, i32 33
  %2857 = getelementptr inbounds %struct.Reg, %struct.Reg* %2856, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %2857 to i64*
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2859 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2858, i64 0, i64 0
  %XMM0.i854 = bitcast %union.VectorReg* %2859 to %union.vec128_t*
  %2860 = bitcast %union.vec128_t* %XMM0.i854 to i8*
  %2861 = load i64, i64* %PC.i853
  %2862 = add i64 %2861, 9
  store i64 %2862, i64* %PC.i853
  %2863 = bitcast i8* %2860 to double*
  %2864 = load double, double* %2863, align 1
  store double %2864, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  store %struct.Memory* %loadMem_400c21, %struct.Memory** %MEMORY
  %loadMem_400c2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2866 = getelementptr inbounds %struct.GPR, %struct.GPR* %2865, i32 0, i32 33
  %2867 = getelementptr inbounds %struct.Reg, %struct.Reg* %2866, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %2867 to i64*
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2869 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2868, i64 0, i64 0
  %YMM0.i852 = bitcast %union.VectorReg* %2869 to %"class.std::bitset"*
  %2870 = bitcast %"class.std::bitset"* %YMM0.i852 to i8*
  %2871 = load i64, i64* %PC.i851
  %2872 = add i64 %2871, 9
  store i64 %2872, i64* %PC.i851
  %2873 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %2874 = bitcast i8* %2870 to double*
  store double %2873, double* %2874, align 1
  %2875 = getelementptr inbounds i8, i8* %2870, i64 8
  %2876 = bitcast i8* %2875 to double*
  store double 0.000000e+00, double* %2876, align 1
  store %struct.Memory* %loadMem_400c2a, %struct.Memory** %MEMORY
  %loadMem_400c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2878 = getelementptr inbounds %struct.GPR, %struct.GPR* %2877, i32 0, i32 33
  %2879 = getelementptr inbounds %struct.Reg, %struct.Reg* %2878, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %2879 to i64*
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2881 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2880, i64 0, i64 0
  %YMM0.i850 = bitcast %union.VectorReg* %2881 to %"class.std::bitset"*
  %2882 = bitcast %"class.std::bitset"* %YMM0.i850 to i8*
  %2883 = bitcast %"class.std::bitset"* %YMM0.i850 to i8*
  %2884 = load i64, i64* %PC.i849
  %2885 = add i64 %2884, 9
  store i64 %2885, i64* %PC.i849
  %2886 = bitcast i8* %2883 to double*
  %2887 = load double, double* %2886, align 1
  %2888 = getelementptr inbounds i8, i8* %2883, i64 8
  %2889 = bitcast i8* %2888 to i64*
  %2890 = load i64, i64* %2889, align 1
  %2891 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %2892 = fadd double %2887, %2891
  %2893 = bitcast i8* %2882 to double*
  store double %2892, double* %2893, align 1
  %2894 = getelementptr inbounds i8, i8* %2882, i64 8
  %2895 = bitcast i8* %2894 to i64*
  store i64 %2890, i64* %2895, align 1
  store %struct.Memory* %loadMem_400c33, %struct.Memory** %MEMORY
  %loadMem_400c3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2897 = getelementptr inbounds %struct.GPR, %struct.GPR* %2896, i32 0, i32 33
  %2898 = getelementptr inbounds %struct.Reg, %struct.Reg* %2897, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %2898 to i64*
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2900 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2899, i64 0, i64 0
  %YMM0.i848 = bitcast %union.VectorReg* %2900 to %"class.std::bitset"*
  %2901 = bitcast %"class.std::bitset"* %YMM0.i848 to i8*
  %2902 = bitcast %"class.std::bitset"* %YMM0.i848 to i8*
  %2903 = load i64, i64* %PC.i847
  %2904 = add i64 %2903, 9
  store i64 %2904, i64* %PC.i847
  %2905 = bitcast i8* %2902 to double*
  %2906 = load double, double* %2905, align 1
  %2907 = getelementptr inbounds i8, i8* %2902, i64 8
  %2908 = bitcast i8* %2907 to i64*
  %2909 = load i64, i64* %2908, align 1
  %2910 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %2911 = fsub double %2906, %2910
  %2912 = bitcast i8* %2901 to double*
  store double %2911, double* %2912, align 1
  %2913 = getelementptr inbounds i8, i8* %2901, i64 8
  %2914 = bitcast i8* %2913 to i64*
  store i64 %2909, i64* %2914, align 1
  store %struct.Memory* %loadMem_400c3c, %struct.Memory** %MEMORY
  %loadMem_400c45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2916 = getelementptr inbounds %struct.GPR, %struct.GPR* %2915, i32 0, i32 33
  %2917 = getelementptr inbounds %struct.Reg, %struct.Reg* %2916, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %2917 to i64*
  %2918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2919 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2918, i64 0, i64 0
  %YMM0.i846 = bitcast %union.VectorReg* %2919 to %"class.std::bitset"*
  %2920 = bitcast %"class.std::bitset"* %YMM0.i846 to i8*
  %2921 = bitcast %"class.std::bitset"* %YMM0.i846 to i8*
  %2922 = load i64, i64* %PC.i845
  %2923 = add i64 %2922, 9
  store i64 %2923, i64* %PC.i845
  %2924 = bitcast i8* %2921 to double*
  %2925 = load double, double* %2924, align 1
  %2926 = getelementptr inbounds i8, i8* %2921, i64 8
  %2927 = bitcast i8* %2926 to i64*
  %2928 = load i64, i64* %2927, align 1
  %2929 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %2930 = fadd double %2925, %2929
  %2931 = bitcast i8* %2920 to double*
  store double %2930, double* %2931, align 1
  %2932 = getelementptr inbounds i8, i8* %2920, i64 8
  %2933 = bitcast i8* %2932 to i64*
  store i64 %2928, i64* %2933, align 1
  store %struct.Memory* %loadMem_400c45, %struct.Memory** %MEMORY
  %loadMem_400c4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2935 = getelementptr inbounds %struct.GPR, %struct.GPR* %2934, i32 0, i32 33
  %2936 = getelementptr inbounds %struct.Reg, %struct.Reg* %2935, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %2936 to i64*
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2938 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2937, i64 0, i64 0
  %YMM0.i844 = bitcast %union.VectorReg* %2938 to %"class.std::bitset"*
  %2939 = bitcast %"class.std::bitset"* %YMM0.i844 to i8*
  %2940 = bitcast %"class.std::bitset"* %YMM0.i844 to i8*
  %2941 = load i64, i64* %PC.i843
  %2942 = add i64 %2941, 9
  store i64 %2942, i64* %PC.i843
  %2943 = bitcast i8* %2940 to double*
  %2944 = load double, double* %2943, align 1
  %2945 = getelementptr inbounds i8, i8* %2940, i64 8
  %2946 = bitcast i8* %2945 to i64*
  %2947 = load i64, i64* %2946, align 1
  %2948 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %2949 = fmul double %2944, %2948
  %2950 = bitcast i8* %2939 to double*
  store double %2949, double* %2950, align 1
  %2951 = getelementptr inbounds i8, i8* %2939, i64 8
  %2952 = bitcast i8* %2951 to i64*
  store i64 %2947, i64* %2952, align 1
  store %struct.Memory* %loadMem_400c4e, %struct.Memory** %MEMORY
  %loadMem_400c57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2954 = getelementptr inbounds %struct.GPR, %struct.GPR* %2953, i32 0, i32 33
  %2955 = getelementptr inbounds %struct.Reg, %struct.Reg* %2954, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %2955 to i64*
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2957 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2956, i64 0, i64 0
  %XMM0.i842 = bitcast %union.VectorReg* %2957 to %union.vec128_t*
  %2958 = bitcast %union.vec128_t* %XMM0.i842 to i8*
  %2959 = load i64, i64* %PC.i841
  %2960 = add i64 %2959, 9
  store i64 %2960, i64* %PC.i841
  %2961 = bitcast i8* %2958 to double*
  %2962 = load double, double* %2961, align 1
  store double %2962, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  store %struct.Memory* %loadMem_400c57, %struct.Memory** %MEMORY
  %loadMem_400c60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2964 = getelementptr inbounds %struct.GPR, %struct.GPR* %2963, i32 0, i32 33
  %2965 = getelementptr inbounds %struct.Reg, %struct.Reg* %2964, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %2965 to i64*
  %2966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2967 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2966, i64 0, i64 0
  %YMM0.i840 = bitcast %union.VectorReg* %2967 to %"class.std::bitset"*
  %2968 = bitcast %"class.std::bitset"* %YMM0.i840 to i8*
  %2969 = load i64, i64* %PC.i839
  %2970 = add i64 %2969, 9
  store i64 %2970, i64* %PC.i839
  %2971 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %2972 = bitcast i8* %2968 to double*
  store double %2971, double* %2972, align 1
  %2973 = getelementptr inbounds i8, i8* %2968, i64 8
  %2974 = bitcast i8* %2973 to double*
  store double 0.000000e+00, double* %2974, align 1
  store %struct.Memory* %loadMem_400c60, %struct.Memory** %MEMORY
  %loadMem_400c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2976 = getelementptr inbounds %struct.GPR, %struct.GPR* %2975, i32 0, i32 33
  %2977 = getelementptr inbounds %struct.Reg, %struct.Reg* %2976, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %2977 to i64*
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2979 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2978, i64 0, i64 0
  %YMM0.i838 = bitcast %union.VectorReg* %2979 to %"class.std::bitset"*
  %2980 = bitcast %"class.std::bitset"* %YMM0.i838 to i8*
  %2981 = bitcast %"class.std::bitset"* %YMM0.i838 to i8*
  %2982 = load i64, i64* %PC.i837
  %2983 = add i64 %2982, 9
  store i64 %2983, i64* %PC.i837
  %2984 = bitcast i8* %2981 to double*
  %2985 = load double, double* %2984, align 1
  %2986 = getelementptr inbounds i8, i8* %2981, i64 8
  %2987 = bitcast i8* %2986 to i64*
  %2988 = load i64, i64* %2987, align 1
  %2989 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %2990 = fsub double %2985, %2989
  %2991 = bitcast i8* %2980 to double*
  store double %2990, double* %2991, align 1
  %2992 = getelementptr inbounds i8, i8* %2980, i64 8
  %2993 = bitcast i8* %2992 to i64*
  store i64 %2988, i64* %2993, align 1
  store %struct.Memory* %loadMem_400c69, %struct.Memory** %MEMORY
  %loadMem_400c72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2995 = getelementptr inbounds %struct.GPR, %struct.GPR* %2994, i32 0, i32 33
  %2996 = getelementptr inbounds %struct.Reg, %struct.Reg* %2995, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %2996 to i64*
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2998 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2997, i64 0, i64 0
  %YMM0.i836 = bitcast %union.VectorReg* %2998 to %"class.std::bitset"*
  %2999 = bitcast %"class.std::bitset"* %YMM0.i836 to i8*
  %3000 = bitcast %"class.std::bitset"* %YMM0.i836 to i8*
  %3001 = load i64, i64* %PC.i835
  %3002 = add i64 %3001, 9
  store i64 %3002, i64* %PC.i835
  %3003 = bitcast i8* %3000 to double*
  %3004 = load double, double* %3003, align 1
  %3005 = getelementptr inbounds i8, i8* %3000, i64 8
  %3006 = bitcast i8* %3005 to i64*
  %3007 = load i64, i64* %3006, align 1
  %3008 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %3009 = fadd double %3004, %3008
  %3010 = bitcast i8* %2999 to double*
  store double %3009, double* %3010, align 1
  %3011 = getelementptr inbounds i8, i8* %2999, i64 8
  %3012 = bitcast i8* %3011 to i64*
  store i64 %3007, i64* %3012, align 1
  store %struct.Memory* %loadMem_400c72, %struct.Memory** %MEMORY
  %loadMem_400c7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3014 = getelementptr inbounds %struct.GPR, %struct.GPR* %3013, i32 0, i32 33
  %3015 = getelementptr inbounds %struct.Reg, %struct.Reg* %3014, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %3015 to i64*
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3017 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3016, i64 0, i64 0
  %YMM0.i834 = bitcast %union.VectorReg* %3017 to %"class.std::bitset"*
  %3018 = bitcast %"class.std::bitset"* %YMM0.i834 to i8*
  %3019 = bitcast %"class.std::bitset"* %YMM0.i834 to i8*
  %3020 = load i64, i64* %PC.i833
  %3021 = add i64 %3020, 9
  store i64 %3021, i64* %PC.i833
  %3022 = bitcast i8* %3019 to double*
  %3023 = load double, double* %3022, align 1
  %3024 = getelementptr inbounds i8, i8* %3019, i64 8
  %3025 = bitcast i8* %3024 to i64*
  %3026 = load i64, i64* %3025, align 1
  %3027 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %3028 = fadd double %3023, %3027
  %3029 = bitcast i8* %3018 to double*
  store double %3028, double* %3029, align 1
  %3030 = getelementptr inbounds i8, i8* %3018, i64 8
  %3031 = bitcast i8* %3030 to i64*
  store i64 %3026, i64* %3031, align 1
  store %struct.Memory* %loadMem_400c7b, %struct.Memory** %MEMORY
  %loadMem_400c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3033 = getelementptr inbounds %struct.GPR, %struct.GPR* %3032, i32 0, i32 33
  %3034 = getelementptr inbounds %struct.Reg, %struct.Reg* %3033, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %3034 to i64*
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3036 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3035, i64 0, i64 0
  %YMM0.i832 = bitcast %union.VectorReg* %3036 to %"class.std::bitset"*
  %3037 = bitcast %"class.std::bitset"* %YMM0.i832 to i8*
  %3038 = bitcast %"class.std::bitset"* %YMM0.i832 to i8*
  %3039 = load i64, i64* %PC.i831
  %3040 = add i64 %3039, 9
  store i64 %3040, i64* %PC.i831
  %3041 = bitcast i8* %3038 to double*
  %3042 = load double, double* %3041, align 1
  %3043 = getelementptr inbounds i8, i8* %3038, i64 8
  %3044 = bitcast i8* %3043 to i64*
  %3045 = load i64, i64* %3044, align 1
  %3046 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %3047 = fmul double %3042, %3046
  %3048 = bitcast i8* %3037 to double*
  store double %3047, double* %3048, align 1
  %3049 = getelementptr inbounds i8, i8* %3037, i64 8
  %3050 = bitcast i8* %3049 to i64*
  store i64 %3045, i64* %3050, align 1
  store %struct.Memory* %loadMem_400c84, %struct.Memory** %MEMORY
  %loadMem_400c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3052 = getelementptr inbounds %struct.GPR, %struct.GPR* %3051, i32 0, i32 33
  %3053 = getelementptr inbounds %struct.Reg, %struct.Reg* %3052, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %3053 to i64*
  %3054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3055 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3054, i64 0, i64 0
  %XMM0.i830 = bitcast %union.VectorReg* %3055 to %union.vec128_t*
  %3056 = bitcast %union.vec128_t* %XMM0.i830 to i8*
  %3057 = load i64, i64* %PC.i829
  %3058 = add i64 %3057, 9
  store i64 %3058, i64* %PC.i829
  %3059 = bitcast i8* %3056 to double*
  %3060 = load double, double* %3059, align 1
  store double %3060, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  store %struct.Memory* %loadMem_400c8d, %struct.Memory** %MEMORY
  %loadMem_400c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3062 = getelementptr inbounds %struct.GPR, %struct.GPR* %3061, i32 0, i32 33
  %3063 = getelementptr inbounds %struct.Reg, %struct.Reg* %3062, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %3063 to i64*
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3065 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3064, i64 0, i64 0
  %YMM0.i828 = bitcast %union.VectorReg* %3065 to %"class.std::bitset"*
  %3066 = bitcast %"class.std::bitset"* %YMM0.i828 to i8*
  %3067 = load i64, i64* %PC.i827
  %3068 = add i64 %3067, 9
  store i64 %3068, i64* %PC.i827
  %3069 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %3070 = bitcast i8* %3066 to double*
  store double %3069, double* %3070, align 1
  %3071 = getelementptr inbounds i8, i8* %3066, i64 8
  %3072 = bitcast i8* %3071 to double*
  store double 0.000000e+00, double* %3072, align 1
  store %struct.Memory* %loadMem_400c96, %struct.Memory** %MEMORY
  %loadMem_400c9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3074 = getelementptr inbounds %struct.GPR, %struct.GPR* %3073, i32 0, i32 33
  %3075 = getelementptr inbounds %struct.Reg, %struct.Reg* %3074, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %3075 to i64*
  %3076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3077 = getelementptr inbounds %struct.GPR, %struct.GPR* %3076, i32 0, i32 5
  %3078 = getelementptr inbounds %struct.Reg, %struct.Reg* %3077, i32 0, i32 0
  %RCX.i825 = bitcast %union.anon* %3078 to i64*
  %3079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3080 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3079, i64 0, i64 0
  %XMM0.i826 = bitcast %union.VectorReg* %3080 to %union.vec128_t*
  %3081 = bitcast %union.vec128_t* %XMM0.i826 to i8*
  %3082 = load i64, i64* %PC.i824
  %3083 = add i64 %3082, 5
  store i64 %3083, i64* %PC.i824
  %3084 = bitcast i8* %3081 to i64*
  %3085 = load i64, i64* %3084, align 1
  store i64 %3085, i64* %RCX.i825, align 1
  store %struct.Memory* %loadMem_400c9f, %struct.Memory** %MEMORY
  %loadMem_400ca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3087 = getelementptr inbounds %struct.GPR, %struct.GPR* %3086, i32 0, i32 33
  %3088 = getelementptr inbounds %struct.Reg, %struct.Reg* %3087, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %3088 to i64*
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3090 = getelementptr inbounds %struct.GPR, %struct.GPR* %3089, i32 0, i32 1
  %3091 = getelementptr inbounds %struct.Reg, %struct.Reg* %3090, i32 0, i32 0
  %RAX.i822 = bitcast %union.anon* %3091 to i64*
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3093 = getelementptr inbounds %struct.GPR, %struct.GPR* %3092, i32 0, i32 5
  %3094 = getelementptr inbounds %struct.Reg, %struct.Reg* %3093, i32 0, i32 0
  %RCX.i823 = bitcast %union.anon* %3094 to i64*
  %3095 = load i64, i64* %RCX.i823
  %3096 = load i64, i64* %RAX.i822
  %3097 = load i64, i64* %PC.i821
  %3098 = add i64 %3097, 3
  store i64 %3098, i64* %PC.i821
  %3099 = xor i64 %3096, %3095
  store i64 %3099, i64* %RCX.i823, align 8
  %3100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3100, align 1
  %3101 = trunc i64 %3099 to i32
  %3102 = and i32 %3101, 255
  %3103 = call i32 @llvm.ctpop.i32(i32 %3102)
  %3104 = trunc i32 %3103 to i8
  %3105 = and i8 %3104, 1
  %3106 = xor i8 %3105, 1
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3106, i8* %3107, align 1
  %3108 = icmp eq i64 %3099, 0
  %3109 = zext i1 %3108 to i8
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3109, i8* %3110, align 1
  %3111 = lshr i64 %3099, 63
  %3112 = trunc i64 %3111 to i8
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3112, i8* %3113, align 1
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3114, align 1
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3115, align 1
  store %struct.Memory* %loadMem_400ca4, %struct.Memory** %MEMORY
  %loadMem_400ca7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3117 = getelementptr inbounds %struct.GPR, %struct.GPR* %3116, i32 0, i32 33
  %3118 = getelementptr inbounds %struct.Reg, %struct.Reg* %3117, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %3118 to i64*
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3120 = getelementptr inbounds %struct.GPR, %struct.GPR* %3119, i32 0, i32 5
  %3121 = getelementptr inbounds %struct.Reg, %struct.Reg* %3120, i32 0, i32 0
  %RCX.i819 = bitcast %union.anon* %3121 to i64*
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3123 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3122, i64 0, i64 0
  %YMM0.i820 = bitcast %union.VectorReg* %3123 to %"class.std::bitset"*
  %3124 = bitcast %"class.std::bitset"* %YMM0.i820 to i8*
  %3125 = load i64, i64* %RCX.i819
  %3126 = load i64, i64* %PC.i818
  %3127 = add i64 %3126, 5
  store i64 %3127, i64* %PC.i818
  %3128 = bitcast i8* %3124 to i64*
  store i64 %3125, i64* %3128, align 1
  %3129 = getelementptr inbounds i8, i8* %3124, i64 8
  %3130 = bitcast i8* %3129 to i64*
  store i64 0, i64* %3130, align 1
  store %struct.Memory* %loadMem_400ca7, %struct.Memory** %MEMORY
  %loadMem_400cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3132 = getelementptr inbounds %struct.GPR, %struct.GPR* %3131, i32 0, i32 33
  %3133 = getelementptr inbounds %struct.Reg, %struct.Reg* %3132, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %3133 to i64*
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3135 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3134, i64 0, i64 0
  %YMM0.i817 = bitcast %union.VectorReg* %3135 to %"class.std::bitset"*
  %3136 = bitcast %"class.std::bitset"* %YMM0.i817 to i8*
  %3137 = bitcast %"class.std::bitset"* %YMM0.i817 to i8*
  %3138 = load i64, i64* %PC.i816
  %3139 = add i64 %3138, 9
  store i64 %3139, i64* %PC.i816
  %3140 = bitcast i8* %3137 to double*
  %3141 = load double, double* %3140, align 1
  %3142 = getelementptr inbounds i8, i8* %3137, i64 8
  %3143 = bitcast i8* %3142 to i64*
  %3144 = load i64, i64* %3143, align 1
  %3145 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %3146 = fadd double %3141, %3145
  %3147 = bitcast i8* %3136 to double*
  store double %3146, double* %3147, align 1
  %3148 = getelementptr inbounds i8, i8* %3136, i64 8
  %3149 = bitcast i8* %3148 to i64*
  store i64 %3144, i64* %3149, align 1
  store %struct.Memory* %loadMem_400cac, %struct.Memory** %MEMORY
  %loadMem_400cb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3151 = getelementptr inbounds %struct.GPR, %struct.GPR* %3150, i32 0, i32 33
  %3152 = getelementptr inbounds %struct.Reg, %struct.Reg* %3151, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %3152 to i64*
  %3153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3154 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3153, i64 0, i64 0
  %YMM0.i815 = bitcast %union.VectorReg* %3154 to %"class.std::bitset"*
  %3155 = bitcast %"class.std::bitset"* %YMM0.i815 to i8*
  %3156 = bitcast %"class.std::bitset"* %YMM0.i815 to i8*
  %3157 = load i64, i64* %PC.i814
  %3158 = add i64 %3157, 9
  store i64 %3158, i64* %PC.i814
  %3159 = bitcast i8* %3156 to double*
  %3160 = load double, double* %3159, align 1
  %3161 = getelementptr inbounds i8, i8* %3156, i64 8
  %3162 = bitcast i8* %3161 to i64*
  %3163 = load i64, i64* %3162, align 1
  %3164 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %3165 = fadd double %3160, %3164
  %3166 = bitcast i8* %3155 to double*
  store double %3165, double* %3166, align 1
  %3167 = getelementptr inbounds i8, i8* %3155, i64 8
  %3168 = bitcast i8* %3167 to i64*
  store i64 %3163, i64* %3168, align 1
  store %struct.Memory* %loadMem_400cb5, %struct.Memory** %MEMORY
  %loadMem_400cbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3170 = getelementptr inbounds %struct.GPR, %struct.GPR* %3169, i32 0, i32 33
  %3171 = getelementptr inbounds %struct.Reg, %struct.Reg* %3170, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %3171 to i64*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3173 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3172, i64 0, i64 0
  %YMM0.i813 = bitcast %union.VectorReg* %3173 to %"class.std::bitset"*
  %3174 = bitcast %"class.std::bitset"* %YMM0.i813 to i8*
  %3175 = bitcast %"class.std::bitset"* %YMM0.i813 to i8*
  %3176 = load i64, i64* %PC.i812
  %3177 = add i64 %3176, 9
  store i64 %3177, i64* %PC.i812
  %3178 = bitcast i8* %3175 to double*
  %3179 = load double, double* %3178, align 1
  %3180 = getelementptr inbounds i8, i8* %3175, i64 8
  %3181 = bitcast i8* %3180 to i64*
  %3182 = load i64, i64* %3181, align 1
  %3183 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %3184 = fadd double %3179, %3183
  %3185 = bitcast i8* %3174 to double*
  store double %3184, double* %3185, align 1
  %3186 = getelementptr inbounds i8, i8* %3174, i64 8
  %3187 = bitcast i8* %3186 to i64*
  store i64 %3182, i64* %3187, align 1
  store %struct.Memory* %loadMem_400cbe, %struct.Memory** %MEMORY
  %loadMem_400cc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3189 = getelementptr inbounds %struct.GPR, %struct.GPR* %3188, i32 0, i32 33
  %3190 = getelementptr inbounds %struct.Reg, %struct.Reg* %3189, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %3190 to i64*
  %3191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3192 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3191, i64 0, i64 0
  %YMM0.i811 = bitcast %union.VectorReg* %3192 to %"class.std::bitset"*
  %3193 = bitcast %"class.std::bitset"* %YMM0.i811 to i8*
  %3194 = bitcast %"class.std::bitset"* %YMM0.i811 to i8*
  %3195 = load i64, i64* %PC.i810
  %3196 = add i64 %3195, 9
  store i64 %3196, i64* %PC.i810
  %3197 = bitcast i8* %3194 to double*
  %3198 = load double, double* %3197, align 1
  %3199 = getelementptr inbounds i8, i8* %3194, i64 8
  %3200 = bitcast i8* %3199 to i64*
  %3201 = load i64, i64* %3200, align 1
  %3202 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %3203 = fmul double %3198, %3202
  %3204 = bitcast i8* %3193 to double*
  store double %3203, double* %3204, align 1
  %3205 = getelementptr inbounds i8, i8* %3193, i64 8
  %3206 = bitcast i8* %3205 to i64*
  store i64 %3201, i64* %3206, align 1
  store %struct.Memory* %loadMem_400cc7, %struct.Memory** %MEMORY
  %loadMem_400cd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3208 = getelementptr inbounds %struct.GPR, %struct.GPR* %3207, i32 0, i32 33
  %3209 = getelementptr inbounds %struct.Reg, %struct.Reg* %3208, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %3209 to i64*
  %3210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3211 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3210, i64 0, i64 0
  %XMM0.i809 = bitcast %union.VectorReg* %3211 to %union.vec128_t*
  %3212 = bitcast %union.vec128_t* %XMM0.i809 to i8*
  %3213 = load i64, i64* %PC.i808
  %3214 = add i64 %3213, 9
  store i64 %3214, i64* %PC.i808
  %3215 = bitcast i8* %3212 to double*
  %3216 = load double, double* %3215, align 1
  store double %3216, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  store %struct.Memory* %loadMem_400cd0, %struct.Memory** %MEMORY
  %loadMem_400cd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3218 = getelementptr inbounds %struct.GPR, %struct.GPR* %3217, i32 0, i32 33
  %3219 = getelementptr inbounds %struct.Reg, %struct.Reg* %3218, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %3219 to i64*
  %3220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3221 = getelementptr inbounds %struct.GPR, %struct.GPR* %3220, i32 0, i32 1
  %3222 = getelementptr inbounds %struct.Reg, %struct.Reg* %3221, i32 0, i32 0
  %RAX.i806 = bitcast %union.anon* %3222 to i64*
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3224 = getelementptr inbounds %struct.GPR, %struct.GPR* %3223, i32 0, i32 15
  %3225 = getelementptr inbounds %struct.Reg, %struct.Reg* %3224, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %3225 to i64*
  %3226 = load i64, i64* %RBP.i807
  %3227 = sub i64 %3226, 24
  %3228 = load i64, i64* %PC.i805
  %3229 = add i64 %3228, 4
  store i64 %3229, i64* %PC.i805
  %3230 = inttoptr i64 %3227 to i64*
  %3231 = load i64, i64* %3230
  store i64 %3231, i64* %RAX.i806, align 8
  store %struct.Memory* %loadMem_400cd9, %struct.Memory** %MEMORY
  %loadMem_400cdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3233 = getelementptr inbounds %struct.GPR, %struct.GPR* %3232, i32 0, i32 33
  %3234 = getelementptr inbounds %struct.Reg, %struct.Reg* %3233, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %3234 to i64*
  %3235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3236 = getelementptr inbounds %struct.GPR, %struct.GPR* %3235, i32 0, i32 1
  %3237 = getelementptr inbounds %struct.Reg, %struct.Reg* %3236, i32 0, i32 0
  %RAX.i804 = bitcast %union.anon* %3237 to i64*
  %3238 = load i64, i64* %RAX.i804
  %3239 = load i64, i64* %PC.i803
  %3240 = add i64 %3239, 4
  store i64 %3240, i64* %PC.i803
  %3241 = add i64 1, %3238
  store i64 %3241, i64* %RAX.i804, align 8
  %3242 = icmp ult i64 %3241, %3238
  %3243 = icmp ult i64 %3241, 1
  %3244 = or i1 %3242, %3243
  %3245 = zext i1 %3244 to i8
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3245, i8* %3246, align 1
  %3247 = trunc i64 %3241 to i32
  %3248 = and i32 %3247, 255
  %3249 = call i32 @llvm.ctpop.i32(i32 %3248)
  %3250 = trunc i32 %3249 to i8
  %3251 = and i8 %3250, 1
  %3252 = xor i8 %3251, 1
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3252, i8* %3253, align 1
  %3254 = xor i64 1, %3238
  %3255 = xor i64 %3254, %3241
  %3256 = lshr i64 %3255, 4
  %3257 = trunc i64 %3256 to i8
  %3258 = and i8 %3257, 1
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3258, i8* %3259, align 1
  %3260 = icmp eq i64 %3241, 0
  %3261 = zext i1 %3260 to i8
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3261, i8* %3262, align 1
  %3263 = lshr i64 %3241, 63
  %3264 = trunc i64 %3263 to i8
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3264, i8* %3265, align 1
  %3266 = lshr i64 %3238, 63
  %3267 = xor i64 %3263, %3266
  %3268 = add i64 %3267, %3263
  %3269 = icmp eq i64 %3268, 2
  %3270 = zext i1 %3269 to i8
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3270, i8* %3271, align 1
  store %struct.Memory* %loadMem_400cdd, %struct.Memory** %MEMORY
  %loadMem_400ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3273 = getelementptr inbounds %struct.GPR, %struct.GPR* %3272, i32 0, i32 33
  %3274 = getelementptr inbounds %struct.Reg, %struct.Reg* %3273, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %3274 to i64*
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3276 = getelementptr inbounds %struct.GPR, %struct.GPR* %3275, i32 0, i32 1
  %3277 = getelementptr inbounds %struct.Reg, %struct.Reg* %3276, i32 0, i32 0
  %RAX.i801 = bitcast %union.anon* %3277 to i64*
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3279 = getelementptr inbounds %struct.GPR, %struct.GPR* %3278, i32 0, i32 15
  %3280 = getelementptr inbounds %struct.Reg, %struct.Reg* %3279, i32 0, i32 0
  %RBP.i802 = bitcast %union.anon* %3280 to i64*
  %3281 = load i64, i64* %RBP.i802
  %3282 = sub i64 %3281, 24
  %3283 = load i64, i64* %RAX.i801
  %3284 = load i64, i64* %PC.i800
  %3285 = add i64 %3284, 4
  store i64 %3285, i64* %PC.i800
  %3286 = inttoptr i64 %3282 to i64*
  store i64 %3283, i64* %3286
  store %struct.Memory* %loadMem_400ce1, %struct.Memory** %MEMORY
  %loadMem_400ce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3288 = getelementptr inbounds %struct.GPR, %struct.GPR* %3287, i32 0, i32 33
  %3289 = getelementptr inbounds %struct.Reg, %struct.Reg* %3288, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %3289 to i64*
  %3290 = load i64, i64* %PC.i799
  %3291 = add i64 %3290, -265
  %3292 = load i64, i64* %PC.i799
  %3293 = add i64 %3292, 5
  store i64 %3293, i64* %PC.i799
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3291, i64* %3294, align 8
  store %struct.Memory* %loadMem_400ce5, %struct.Memory** %MEMORY
  br label %block_.L_400bdc

block_.L_400cea:                                  ; preds = %block_.L_400bdc
  %loadMem_400cea = load %struct.Memory*, %struct.Memory** %MEMORY
  %3295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3296 = getelementptr inbounds %struct.GPR, %struct.GPR* %3295, i32 0, i32 33
  %3297 = getelementptr inbounds %struct.Reg, %struct.Reg* %3296, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %3297 to i64*
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3299 = getelementptr inbounds %struct.GPR, %struct.GPR* %3298, i32 0, i32 1
  %3300 = getelementptr inbounds %struct.Reg, %struct.Reg* %3299, i32 0, i32 0
  %RAX.i797 = bitcast %union.anon* %3300 to i64*
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3302 = getelementptr inbounds %struct.GPR, %struct.GPR* %3301, i32 0, i32 15
  %3303 = getelementptr inbounds %struct.Reg, %struct.Reg* %3302, i32 0, i32 0
  %RBP.i798 = bitcast %union.anon* %3303 to i64*
  %3304 = load i64, i64* %RBP.i798
  %3305 = sub i64 %3304, 176
  %3306 = load i64, i64* %PC.i796
  %3307 = add i64 %3306, 6
  store i64 %3307, i64* %PC.i796
  %3308 = inttoptr i64 %3305 to i32*
  %3309 = load i32, i32* %3308
  %3310 = zext i32 %3309 to i64
  store i64 %3310, i64* %RAX.i797, align 8
  store %struct.Memory* %loadMem_400cea, %struct.Memory** %MEMORY
  %loadMem_400cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3312 = getelementptr inbounds %struct.GPR, %struct.GPR* %3311, i32 0, i32 33
  %3313 = getelementptr inbounds %struct.Reg, %struct.Reg* %3312, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %3313 to i64*
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3315 = getelementptr inbounds %struct.GPR, %struct.GPR* %3314, i32 0, i32 1
  %3316 = getelementptr inbounds %struct.Reg, %struct.Reg* %3315, i32 0, i32 0
  %EAX.i794 = bitcast %union.anon* %3316 to i32*
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3318 = getelementptr inbounds %struct.GPR, %struct.GPR* %3317, i32 0, i32 15
  %3319 = getelementptr inbounds %struct.Reg, %struct.Reg* %3318, i32 0, i32 0
  %RBP.i795 = bitcast %union.anon* %3319 to i64*
  %3320 = load i32, i32* %EAX.i794
  %3321 = zext i32 %3320 to i64
  %3322 = load i64, i64* %RBP.i795
  %3323 = sub i64 %3322, 172
  %3324 = load i64, i64* %PC.i793
  %3325 = add i64 %3324, 6
  store i64 %3325, i64* %PC.i793
  %3326 = inttoptr i64 %3323 to i32*
  %3327 = load i32, i32* %3326
  %3328 = sub i32 %3320, %3327
  %3329 = icmp ult i32 %3320, %3327
  %3330 = zext i1 %3329 to i8
  %3331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3330, i8* %3331, align 1
  %3332 = and i32 %3328, 255
  %3333 = call i32 @llvm.ctpop.i32(i32 %3332)
  %3334 = trunc i32 %3333 to i8
  %3335 = and i8 %3334, 1
  %3336 = xor i8 %3335, 1
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3336, i8* %3337, align 1
  %3338 = xor i32 %3327, %3320
  %3339 = xor i32 %3338, %3328
  %3340 = lshr i32 %3339, 4
  %3341 = trunc i32 %3340 to i8
  %3342 = and i8 %3341, 1
  %3343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3342, i8* %3343, align 1
  %3344 = icmp eq i32 %3328, 0
  %3345 = zext i1 %3344 to i8
  %3346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3345, i8* %3346, align 1
  %3347 = lshr i32 %3328, 31
  %3348 = trunc i32 %3347 to i8
  %3349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3348, i8* %3349, align 1
  %3350 = lshr i32 %3320, 31
  %3351 = lshr i32 %3327, 31
  %3352 = xor i32 %3351, %3350
  %3353 = xor i32 %3347, %3350
  %3354 = add i32 %3353, %3352
  %3355 = icmp eq i32 %3354, 2
  %3356 = zext i1 %3355 to i8
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3356, i8* %3357, align 1
  store %struct.Memory* %loadMem_400cf0, %struct.Memory** %MEMORY
  %loadMem_400cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3359 = getelementptr inbounds %struct.GPR, %struct.GPR* %3358, i32 0, i32 33
  %3360 = getelementptr inbounds %struct.Reg, %struct.Reg* %3359, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %3360 to i64*
  %3361 = load i64, i64* %PC.i792
  %3362 = add i64 %3361, 59
  %3363 = load i64, i64* %PC.i792
  %3364 = add i64 %3363, 6
  %3365 = load i64, i64* %PC.i792
  %3366 = add i64 %3365, 6
  store i64 %3366, i64* %PC.i792
  %3367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3368 = load i8, i8* %3367, align 1
  %3369 = icmp eq i8 %3368, 0
  %3370 = zext i1 %3369 to i8
  store i8 %3370, i8* %BRANCH_TAKEN, align 1
  %3371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3372 = select i1 %3369, i64 %3362, i64 %3364
  store i64 %3372, i64* %3371, align 8
  store %struct.Memory* %loadMem_400cf6, %struct.Memory** %MEMORY
  %loadBr_400cf6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400cf6 = icmp eq i8 %loadBr_400cf6, 1
  br i1 %cmpBr_400cf6, label %block_.L_400d31, label %block_400cfc

block_400cfc:                                     ; preds = %block_.L_400cea
  %loadMem_400cfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3374 = getelementptr inbounds %struct.GPR, %struct.GPR* %3373, i32 0, i32 33
  %3375 = getelementptr inbounds %struct.Reg, %struct.Reg* %3374, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %3375 to i64*
  %3376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3377 = getelementptr inbounds %struct.GPR, %struct.GPR* %3376, i32 0, i32 11
  %3378 = getelementptr inbounds %struct.Reg, %struct.Reg* %3377, i32 0, i32 0
  %RDI.i790 = bitcast %union.anon* %3378 to i64*
  %3379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3380 = getelementptr inbounds %struct.GPR, %struct.GPR* %3379, i32 0, i32 15
  %3381 = getelementptr inbounds %struct.Reg, %struct.Reg* %3380, i32 0, i32 0
  %RBP.i791 = bitcast %union.anon* %3381 to i64*
  %3382 = load i64, i64* %RBP.i791
  %3383 = sub i64 %3382, 40
  %3384 = load i64, i64* %PC.i789
  %3385 = add i64 %3384, 4
  store i64 %3385, i64* %PC.i789
  %3386 = inttoptr i64 %3383 to i64*
  %3387 = load i64, i64* %3386
  store i64 %3387, i64* %RDI.i790, align 8
  store %struct.Memory* %loadMem_400cfc, %struct.Memory** %MEMORY
  %loadMem_400d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3389 = getelementptr inbounds %struct.GPR, %struct.GPR* %3388, i32 0, i32 33
  %3390 = getelementptr inbounds %struct.Reg, %struct.Reg* %3389, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %3390 to i64*
  %3391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3392 = getelementptr inbounds %struct.GPR, %struct.GPR* %3391, i32 0, i32 9
  %3393 = getelementptr inbounds %struct.Reg, %struct.Reg* %3392, i32 0, i32 0
  %RSI.i787 = bitcast %union.anon* %3393 to i64*
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3395 = getelementptr inbounds %struct.GPR, %struct.GPR* %3394, i32 0, i32 15
  %3396 = getelementptr inbounds %struct.Reg, %struct.Reg* %3395, i32 0, i32 0
  %RBP.i788 = bitcast %union.anon* %3396 to i64*
  %3397 = load i64, i64* %RBP.i788
  %3398 = sub i64 %3397, 48
  %3399 = load i64, i64* %PC.i786
  %3400 = add i64 %3399, 4
  store i64 %3400, i64* %PC.i786
  %3401 = inttoptr i64 %3398 to i64*
  %3402 = load i64, i64* %3401
  store i64 %3402, i64* %RSI.i787, align 8
  store %struct.Memory* %loadMem_400d00, %struct.Memory** %MEMORY
  %loadMem_400d04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3404 = getelementptr inbounds %struct.GPR, %struct.GPR* %3403, i32 0, i32 33
  %3405 = getelementptr inbounds %struct.Reg, %struct.Reg* %3404, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %3405 to i64*
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3407 = getelementptr inbounds %struct.GPR, %struct.GPR* %3406, i32 0, i32 7
  %3408 = getelementptr inbounds %struct.Reg, %struct.Reg* %3407, i32 0, i32 0
  %RDX.i784 = bitcast %union.anon* %3408 to i64*
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3410 = getelementptr inbounds %struct.GPR, %struct.GPR* %3409, i32 0, i32 15
  %3411 = getelementptr inbounds %struct.Reg, %struct.Reg* %3410, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %3411 to i64*
  %3412 = load i64, i64* %RBP.i785
  %3413 = sub i64 %3412, 40
  %3414 = load i64, i64* %PC.i783
  %3415 = add i64 %3414, 4
  store i64 %3415, i64* %PC.i783
  %3416 = inttoptr i64 %3413 to i64*
  %3417 = load i64, i64* %3416
  store i64 %3417, i64* %RDX.i784, align 8
  store %struct.Memory* %loadMem_400d04, %struct.Memory** %MEMORY
  %loadMem_400d08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3419 = getelementptr inbounds %struct.GPR, %struct.GPR* %3418, i32 0, i32 33
  %3420 = getelementptr inbounds %struct.Reg, %struct.Reg* %3419, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %3420 to i64*
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3422 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3421, i64 0, i64 0
  %YMM0.i782 = bitcast %union.VectorReg* %3422 to %"class.std::bitset"*
  %3423 = bitcast %"class.std::bitset"* %YMM0.i782 to i8*
  %3424 = load i64, i64* %PC.i781
  %3425 = add i64 %3424, 9
  store i64 %3425, i64* %PC.i781
  %3426 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %3427 = bitcast i8* %3423 to double*
  store double %3426, double* %3427, align 1
  %3428 = getelementptr inbounds i8, i8* %3423, i64 8
  %3429 = bitcast i8* %3428 to double*
  store double 0.000000e+00, double* %3429, align 1
  store %struct.Memory* %loadMem_400d08, %struct.Memory** %MEMORY
  %loadMem_400d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3431 = getelementptr inbounds %struct.GPR, %struct.GPR* %3430, i32 0, i32 33
  %3432 = getelementptr inbounds %struct.Reg, %struct.Reg* %3431, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %3432 to i64*
  %3433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3434 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3433, i64 0, i64 1
  %YMM1.i780 = bitcast %union.VectorReg* %3434 to %"class.std::bitset"*
  %3435 = bitcast %"class.std::bitset"* %YMM1.i780 to i8*
  %3436 = load i64, i64* %PC.i779
  %3437 = add i64 %3436, 9
  store i64 %3437, i64* %PC.i779
  %3438 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %3439 = bitcast i8* %3435 to double*
  store double %3438, double* %3439, align 1
  %3440 = getelementptr inbounds i8, i8* %3435, i64 8
  %3441 = bitcast i8* %3440 to double*
  store double 0.000000e+00, double* %3441, align 1
  store %struct.Memory* %loadMem_400d11, %struct.Memory** %MEMORY
  %loadMem_400d1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3443 = getelementptr inbounds %struct.GPR, %struct.GPR* %3442, i32 0, i32 33
  %3444 = getelementptr inbounds %struct.Reg, %struct.Reg* %3443, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %3444 to i64*
  %3445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3446 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3445, i64 0, i64 2
  %YMM2.i778 = bitcast %union.VectorReg* %3446 to %"class.std::bitset"*
  %3447 = bitcast %"class.std::bitset"* %YMM2.i778 to i8*
  %3448 = load i64, i64* %PC.i777
  %3449 = add i64 %3448, 9
  store i64 %3449, i64* %PC.i777
  %3450 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %3451 = bitcast i8* %3447 to double*
  store double %3450, double* %3451, align 1
  %3452 = getelementptr inbounds i8, i8* %3447, i64 8
  %3453 = bitcast i8* %3452 to double*
  store double 0.000000e+00, double* %3453, align 1
  store %struct.Memory* %loadMem_400d1a, %struct.Memory** %MEMORY
  %loadMem_400d23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3455 = getelementptr inbounds %struct.GPR, %struct.GPR* %3454, i32 0, i32 33
  %3456 = getelementptr inbounds %struct.Reg, %struct.Reg* %3455, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %3456 to i64*
  %3457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3458 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3457, i64 0, i64 3
  %YMM3.i776 = bitcast %union.VectorReg* %3458 to %"class.std::bitset"*
  %3459 = bitcast %"class.std::bitset"* %YMM3.i776 to i8*
  %3460 = load i64, i64* %PC.i775
  %3461 = add i64 %3460, 9
  store i64 %3461, i64* %PC.i775
  %3462 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %3463 = bitcast i8* %3459 to double*
  store double %3462, double* %3463, align 1
  %3464 = getelementptr inbounds i8, i8* %3459, i64 8
  %3465 = bitcast i8* %3464 to double*
  store double 0.000000e+00, double* %3465, align 1
  store %struct.Memory* %loadMem_400d23, %struct.Memory** %MEMORY
  %loadMem1_400d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3467 = getelementptr inbounds %struct.GPR, %struct.GPR* %3466, i32 0, i32 33
  %3468 = getelementptr inbounds %struct.Reg, %struct.Reg* %3467, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %3468 to i64*
  %3469 = load i64, i64* %PC.i774
  %3470 = add i64 %3469, 2244
  %3471 = load i64, i64* %PC.i774
  %3472 = add i64 %3471, 5
  %3473 = load i64, i64* %PC.i774
  %3474 = add i64 %3473, 5
  store i64 %3474, i64* %PC.i774
  %3475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3476 = load i64, i64* %3475, align 8
  %3477 = add i64 %3476, -8
  %3478 = inttoptr i64 %3477 to i64*
  store i64 %3472, i64* %3478
  store i64 %3477, i64* %3475, align 8
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3470, i64* %3479, align 8
  store %struct.Memory* %loadMem1_400d2c, %struct.Memory** %MEMORY
  %loadMem2_400d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400d2c = load i64, i64* %3
  %call2_400d2c = call %struct.Memory* @sub_4015f0.POUT(%struct.State* %0, i64 %loadPC_400d2c, %struct.Memory* %loadMem2_400d2c)
  store %struct.Memory* %call2_400d2c, %struct.Memory** %MEMORY
  br label %block_.L_400d31

block_.L_400d31:                                  ; preds = %block_400cfc, %block_.L_400cea
  %loadMem_400d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3481 = getelementptr inbounds %struct.GPR, %struct.GPR* %3480, i32 0, i32 33
  %3482 = getelementptr inbounds %struct.Reg, %struct.Reg* %3481, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %3482 to i64*
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3484 = getelementptr inbounds %struct.GPR, %struct.GPR* %3483, i32 0, i32 15
  %3485 = getelementptr inbounds %struct.Reg, %struct.Reg* %3484, i32 0, i32 0
  %RBP.i773 = bitcast %union.anon* %3485 to i64*
  %3486 = load i64, i64* %RBP.i773
  %3487 = sub i64 %3486, 24
  %3488 = load i64, i64* %PC.i772
  %3489 = add i64 %3488, 8
  store i64 %3489, i64* %PC.i772
  %3490 = inttoptr i64 %3487 to i64*
  store i64 1, i64* %3490
  store %struct.Memory* %loadMem_400d31, %struct.Memory** %MEMORY
  br label %block_.L_400d39

block_.L_400d39:                                  ; preds = %block_400d47, %block_.L_400d31
  %loadMem_400d39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3492 = getelementptr inbounds %struct.GPR, %struct.GPR* %3491, i32 0, i32 33
  %3493 = getelementptr inbounds %struct.Reg, %struct.Reg* %3492, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %3493 to i64*
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3495 = getelementptr inbounds %struct.GPR, %struct.GPR* %3494, i32 0, i32 1
  %3496 = getelementptr inbounds %struct.Reg, %struct.Reg* %3495, i32 0, i32 0
  %RAX.i770 = bitcast %union.anon* %3496 to i64*
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3498 = getelementptr inbounds %struct.GPR, %struct.GPR* %3497, i32 0, i32 15
  %3499 = getelementptr inbounds %struct.Reg, %struct.Reg* %3498, i32 0, i32 0
  %RBP.i771 = bitcast %union.anon* %3499 to i64*
  %3500 = load i64, i64* %RBP.i771
  %3501 = sub i64 %3500, 24
  %3502 = load i64, i64* %PC.i769
  %3503 = add i64 %3502, 4
  store i64 %3503, i64* %PC.i769
  %3504 = inttoptr i64 %3501 to i64*
  %3505 = load i64, i64* %3504
  store i64 %3505, i64* %RAX.i770, align 8
  store %struct.Memory* %loadMem_400d39, %struct.Memory** %MEMORY
  %loadMem_400d3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3507 = getelementptr inbounds %struct.GPR, %struct.GPR* %3506, i32 0, i32 33
  %3508 = getelementptr inbounds %struct.Reg, %struct.Reg* %3507, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %3508 to i64*
  %3509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3510 = getelementptr inbounds %struct.GPR, %struct.GPR* %3509, i32 0, i32 1
  %3511 = getelementptr inbounds %struct.Reg, %struct.Reg* %3510, i32 0, i32 0
  %RAX.i767 = bitcast %union.anon* %3511 to i64*
  %3512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3513 = getelementptr inbounds %struct.GPR, %struct.GPR* %3512, i32 0, i32 15
  %3514 = getelementptr inbounds %struct.Reg, %struct.Reg* %3513, i32 0, i32 0
  %RBP.i768 = bitcast %union.anon* %3514 to i64*
  %3515 = load i64, i64* %RAX.i767
  %3516 = load i64, i64* %RBP.i768
  %3517 = sub i64 %3516, 48
  %3518 = load i64, i64* %PC.i766
  %3519 = add i64 %3518, 4
  store i64 %3519, i64* %PC.i766
  %3520 = inttoptr i64 %3517 to i64*
  %3521 = load i64, i64* %3520
  %3522 = sub i64 %3515, %3521
  %3523 = icmp ugt i64 %3521, %3515
  %3524 = zext i1 %3523 to i8
  %3525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3524, i8* %3525, align 1
  %3526 = trunc i64 %3522 to i32
  %3527 = and i32 %3526, 255
  %3528 = call i32 @llvm.ctpop.i32(i32 %3527)
  %3529 = trunc i32 %3528 to i8
  %3530 = and i8 %3529, 1
  %3531 = xor i8 %3530, 1
  %3532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3531, i8* %3532, align 1
  %3533 = xor i64 %3521, %3515
  %3534 = xor i64 %3533, %3522
  %3535 = lshr i64 %3534, 4
  %3536 = trunc i64 %3535 to i8
  %3537 = and i8 %3536, 1
  %3538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3537, i8* %3538, align 1
  %3539 = icmp eq i64 %3522, 0
  %3540 = zext i1 %3539 to i8
  %3541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3540, i8* %3541, align 1
  %3542 = lshr i64 %3522, 63
  %3543 = trunc i64 %3542 to i8
  %3544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3543, i8* %3544, align 1
  %3545 = lshr i64 %3515, 63
  %3546 = lshr i64 %3521, 63
  %3547 = xor i64 %3546, %3545
  %3548 = xor i64 %3542, %3545
  %3549 = add i64 %3548, %3547
  %3550 = icmp eq i64 %3549, 2
  %3551 = zext i1 %3550 to i8
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3551, i8* %3552, align 1
  store %struct.Memory* %loadMem_400d3d, %struct.Memory** %MEMORY
  %loadMem_400d41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3554 = getelementptr inbounds %struct.GPR, %struct.GPR* %3553, i32 0, i32 33
  %3555 = getelementptr inbounds %struct.Reg, %struct.Reg* %3554, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %3555 to i64*
  %3556 = load i64, i64* %PC.i765
  %3557 = add i64 %3556, 38
  %3558 = load i64, i64* %PC.i765
  %3559 = add i64 %3558, 6
  %3560 = load i64, i64* %PC.i765
  %3561 = add i64 %3560, 6
  store i64 %3561, i64* %PC.i765
  %3562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3563 = load i8, i8* %3562, align 1
  %3564 = icmp eq i8 %3563, 0
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3566 = load i8, i8* %3565, align 1
  %3567 = icmp ne i8 %3566, 0
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3569 = load i8, i8* %3568, align 1
  %3570 = icmp ne i8 %3569, 0
  %3571 = xor i1 %3567, %3570
  %3572 = xor i1 %3571, true
  %3573 = and i1 %3564, %3572
  %3574 = zext i1 %3573 to i8
  store i8 %3574, i8* %BRANCH_TAKEN, align 1
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3576 = select i1 %3573, i64 %3557, i64 %3559
  store i64 %3576, i64* %3575, align 8
  store %struct.Memory* %loadMem_400d41, %struct.Memory** %MEMORY
  %loadBr_400d41 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d41 = icmp eq i8 %loadBr_400d41, 1
  br i1 %cmpBr_400d41, label %block_.L_400d67, label %block_400d47

block_400d47:                                     ; preds = %block_.L_400d39
  %loadMem_400d47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3578 = getelementptr inbounds %struct.GPR, %struct.GPR* %3577, i32 0, i32 33
  %3579 = getelementptr inbounds %struct.Reg, %struct.Reg* %3578, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %3579 to i64*
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3581 = getelementptr inbounds %struct.GPR, %struct.GPR* %3580, i32 0, i32 11
  %3582 = getelementptr inbounds %struct.Reg, %struct.Reg* %3581, i32 0, i32 0
  %RDI.i764 = bitcast %union.anon* %3582 to i64*
  %3583 = load i64, i64* %PC.i763
  %3584 = add i64 %3583, 10
  store i64 %3584, i64* %PC.i763
  store i64 ptrtoint (%G__0x6020c0_type* @G__0x6020c0 to i64), i64* %RDI.i764, align 8
  store %struct.Memory* %loadMem_400d47, %struct.Memory** %MEMORY
  %loadMem1_400d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3586 = getelementptr inbounds %struct.GPR, %struct.GPR* %3585, i32 0, i32 33
  %3587 = getelementptr inbounds %struct.Reg, %struct.Reg* %3586, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %3587 to i64*
  %3588 = load i64, i64* %PC.i762
  %3589 = add i64 %3588, 2319
  %3590 = load i64, i64* %PC.i762
  %3591 = add i64 %3590, 5
  %3592 = load i64, i64* %PC.i762
  %3593 = add i64 %3592, 5
  store i64 %3593, i64* %PC.i762
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3595 = load i64, i64* %3594, align 8
  %3596 = add i64 %3595, -8
  %3597 = inttoptr i64 %3596 to i64*
  store i64 %3591, i64* %3597
  store i64 %3596, i64* %3594, align 8
  %3598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3589, i64* %3598, align 8
  store %struct.Memory* %loadMem1_400d51, %struct.Memory** %MEMORY
  %loadMem2_400d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400d51 = load i64, i64* %3
  %call2_400d51 = call %struct.Memory* @sub_401660.PA(%struct.State* %0, i64 %loadPC_400d51, %struct.Memory* %loadMem2_400d51)
  store %struct.Memory* %call2_400d51, %struct.Memory** %MEMORY
  %loadMem_400d56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3600 = getelementptr inbounds %struct.GPR, %struct.GPR* %3599, i32 0, i32 33
  %3601 = getelementptr inbounds %struct.Reg, %struct.Reg* %3600, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %3601 to i64*
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3603 = getelementptr inbounds %struct.GPR, %struct.GPR* %3602, i32 0, i32 1
  %3604 = getelementptr inbounds %struct.Reg, %struct.Reg* %3603, i32 0, i32 0
  %RAX.i760 = bitcast %union.anon* %3604 to i64*
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3606 = getelementptr inbounds %struct.GPR, %struct.GPR* %3605, i32 0, i32 15
  %3607 = getelementptr inbounds %struct.Reg, %struct.Reg* %3606, i32 0, i32 0
  %RBP.i761 = bitcast %union.anon* %3607 to i64*
  %3608 = load i64, i64* %RBP.i761
  %3609 = sub i64 %3608, 24
  %3610 = load i64, i64* %PC.i759
  %3611 = add i64 %3610, 4
  store i64 %3611, i64* %PC.i759
  %3612 = inttoptr i64 %3609 to i64*
  %3613 = load i64, i64* %3612
  store i64 %3613, i64* %RAX.i760, align 8
  store %struct.Memory* %loadMem_400d56, %struct.Memory** %MEMORY
  %loadMem_400d5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3615 = getelementptr inbounds %struct.GPR, %struct.GPR* %3614, i32 0, i32 33
  %3616 = getelementptr inbounds %struct.Reg, %struct.Reg* %3615, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %3616 to i64*
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3618 = getelementptr inbounds %struct.GPR, %struct.GPR* %3617, i32 0, i32 1
  %3619 = getelementptr inbounds %struct.Reg, %struct.Reg* %3618, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %3619 to i64*
  %3620 = load i64, i64* %RAX.i758
  %3621 = load i64, i64* %PC.i757
  %3622 = add i64 %3621, 4
  store i64 %3622, i64* %PC.i757
  %3623 = add i64 1, %3620
  store i64 %3623, i64* %RAX.i758, align 8
  %3624 = icmp ult i64 %3623, %3620
  %3625 = icmp ult i64 %3623, 1
  %3626 = or i1 %3624, %3625
  %3627 = zext i1 %3626 to i8
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3627, i8* %3628, align 1
  %3629 = trunc i64 %3623 to i32
  %3630 = and i32 %3629, 255
  %3631 = call i32 @llvm.ctpop.i32(i32 %3630)
  %3632 = trunc i32 %3631 to i8
  %3633 = and i8 %3632, 1
  %3634 = xor i8 %3633, 1
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3634, i8* %3635, align 1
  %3636 = xor i64 1, %3620
  %3637 = xor i64 %3636, %3623
  %3638 = lshr i64 %3637, 4
  %3639 = trunc i64 %3638 to i8
  %3640 = and i8 %3639, 1
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3640, i8* %3641, align 1
  %3642 = icmp eq i64 %3623, 0
  %3643 = zext i1 %3642 to i8
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3643, i8* %3644, align 1
  %3645 = lshr i64 %3623, 63
  %3646 = trunc i64 %3645 to i8
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3646, i8* %3647, align 1
  %3648 = lshr i64 %3620, 63
  %3649 = xor i64 %3645, %3648
  %3650 = add i64 %3649, %3645
  %3651 = icmp eq i64 %3650, 2
  %3652 = zext i1 %3651 to i8
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3652, i8* %3653, align 1
  store %struct.Memory* %loadMem_400d5a, %struct.Memory** %MEMORY
  %loadMem_400d5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3655 = getelementptr inbounds %struct.GPR, %struct.GPR* %3654, i32 0, i32 33
  %3656 = getelementptr inbounds %struct.Reg, %struct.Reg* %3655, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %3656 to i64*
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3658 = getelementptr inbounds %struct.GPR, %struct.GPR* %3657, i32 0, i32 1
  %3659 = getelementptr inbounds %struct.Reg, %struct.Reg* %3658, i32 0, i32 0
  %RAX.i755 = bitcast %union.anon* %3659 to i64*
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3661 = getelementptr inbounds %struct.GPR, %struct.GPR* %3660, i32 0, i32 15
  %3662 = getelementptr inbounds %struct.Reg, %struct.Reg* %3661, i32 0, i32 0
  %RBP.i756 = bitcast %union.anon* %3662 to i64*
  %3663 = load i64, i64* %RBP.i756
  %3664 = sub i64 %3663, 24
  %3665 = load i64, i64* %RAX.i755
  %3666 = load i64, i64* %PC.i754
  %3667 = add i64 %3666, 4
  store i64 %3667, i64* %PC.i754
  %3668 = inttoptr i64 %3664 to i64*
  store i64 %3665, i64* %3668
  store %struct.Memory* %loadMem_400d5e, %struct.Memory** %MEMORY
  %loadMem_400d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3670 = getelementptr inbounds %struct.GPR, %struct.GPR* %3669, i32 0, i32 33
  %3671 = getelementptr inbounds %struct.Reg, %struct.Reg* %3670, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %3671 to i64*
  %3672 = load i64, i64* %PC.i753
  %3673 = add i64 %3672, -41
  %3674 = load i64, i64* %PC.i753
  %3675 = add i64 %3674, 5
  store i64 %3675, i64* %PC.i753
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3673, i64* %3676, align 8
  store %struct.Memory* %loadMem_400d62, %struct.Memory** %MEMORY
  br label %block_.L_400d39

block_.L_400d67:                                  ; preds = %block_.L_400d39
  %loadMem_400d67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3678 = getelementptr inbounds %struct.GPR, %struct.GPR* %3677, i32 0, i32 33
  %3679 = getelementptr inbounds %struct.Reg, %struct.Reg* %3678, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %3679 to i64*
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3681 = getelementptr inbounds %struct.GPR, %struct.GPR* %3680, i32 0, i32 1
  %3682 = getelementptr inbounds %struct.Reg, %struct.Reg* %3681, i32 0, i32 0
  %RAX.i751 = bitcast %union.anon* %3682 to i64*
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3684 = getelementptr inbounds %struct.GPR, %struct.GPR* %3683, i32 0, i32 15
  %3685 = getelementptr inbounds %struct.Reg, %struct.Reg* %3684, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %3685 to i64*
  %3686 = load i64, i64* %RBP.i752
  %3687 = sub i64 %3686, 176
  %3688 = load i64, i64* %PC.i750
  %3689 = add i64 %3688, 6
  store i64 %3689, i64* %PC.i750
  %3690 = inttoptr i64 %3687 to i32*
  %3691 = load i32, i32* %3690
  %3692 = zext i32 %3691 to i64
  store i64 %3692, i64* %RAX.i751, align 8
  store %struct.Memory* %loadMem_400d67, %struct.Memory** %MEMORY
  %loadMem_400d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3694 = getelementptr inbounds %struct.GPR, %struct.GPR* %3693, i32 0, i32 33
  %3695 = getelementptr inbounds %struct.Reg, %struct.Reg* %3694, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %3695 to i64*
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3697 = getelementptr inbounds %struct.GPR, %struct.GPR* %3696, i32 0, i32 1
  %3698 = getelementptr inbounds %struct.Reg, %struct.Reg* %3697, i32 0, i32 0
  %EAX.i748 = bitcast %union.anon* %3698 to i32*
  %3699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3700 = getelementptr inbounds %struct.GPR, %struct.GPR* %3699, i32 0, i32 15
  %3701 = getelementptr inbounds %struct.Reg, %struct.Reg* %3700, i32 0, i32 0
  %RBP.i749 = bitcast %union.anon* %3701 to i64*
  %3702 = load i32, i32* %EAX.i748
  %3703 = zext i32 %3702 to i64
  %3704 = load i64, i64* %RBP.i749
  %3705 = sub i64 %3704, 172
  %3706 = load i64, i64* %PC.i747
  %3707 = add i64 %3706, 6
  store i64 %3707, i64* %PC.i747
  %3708 = inttoptr i64 %3705 to i32*
  %3709 = load i32, i32* %3708
  %3710 = sub i32 %3702, %3709
  %3711 = icmp ult i32 %3702, %3709
  %3712 = zext i1 %3711 to i8
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3712, i8* %3713, align 1
  %3714 = and i32 %3710, 255
  %3715 = call i32 @llvm.ctpop.i32(i32 %3714)
  %3716 = trunc i32 %3715 to i8
  %3717 = and i8 %3716, 1
  %3718 = xor i8 %3717, 1
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3718, i8* %3719, align 1
  %3720 = xor i32 %3709, %3702
  %3721 = xor i32 %3720, %3710
  %3722 = lshr i32 %3721, 4
  %3723 = trunc i32 %3722 to i8
  %3724 = and i8 %3723, 1
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3724, i8* %3725, align 1
  %3726 = icmp eq i32 %3710, 0
  %3727 = zext i1 %3726 to i8
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3727, i8* %3728, align 1
  %3729 = lshr i32 %3710, 31
  %3730 = trunc i32 %3729 to i8
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3730, i8* %3731, align 1
  %3732 = lshr i32 %3702, 31
  %3733 = lshr i32 %3709, 31
  %3734 = xor i32 %3733, %3732
  %3735 = xor i32 %3729, %3732
  %3736 = add i32 %3735, %3734
  %3737 = icmp eq i32 %3736, 2
  %3738 = zext i1 %3737 to i8
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3738, i8* %3739, align 1
  store %struct.Memory* %loadMem_400d6d, %struct.Memory** %MEMORY
  %loadMem_400d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3741 = getelementptr inbounds %struct.GPR, %struct.GPR* %3740, i32 0, i32 33
  %3742 = getelementptr inbounds %struct.Reg, %struct.Reg* %3741, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %3742 to i64*
  %3743 = load i64, i64* %PC.i746
  %3744 = add i64 %3743, 59
  %3745 = load i64, i64* %PC.i746
  %3746 = add i64 %3745, 6
  %3747 = load i64, i64* %PC.i746
  %3748 = add i64 %3747, 6
  store i64 %3748, i64* %PC.i746
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3750 = load i8, i8* %3749, align 1
  %3751 = icmp eq i8 %3750, 0
  %3752 = zext i1 %3751 to i8
  store i8 %3752, i8* %BRANCH_TAKEN, align 1
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3754 = select i1 %3751, i64 %3744, i64 %3746
  store i64 %3754, i64* %3753, align 8
  store %struct.Memory* %loadMem_400d73, %struct.Memory** %MEMORY
  %loadBr_400d73 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d73 = icmp eq i8 %loadBr_400d73, 1
  br i1 %cmpBr_400d73, label %block_.L_400dae, label %block_400d79

block_400d79:                                     ; preds = %block_.L_400d67
  %loadMem_400d79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3756 = getelementptr inbounds %struct.GPR, %struct.GPR* %3755, i32 0, i32 33
  %3757 = getelementptr inbounds %struct.Reg, %struct.Reg* %3756, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %3757 to i64*
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3759 = getelementptr inbounds %struct.GPR, %struct.GPR* %3758, i32 0, i32 11
  %3760 = getelementptr inbounds %struct.Reg, %struct.Reg* %3759, i32 0, i32 0
  %RDI.i744 = bitcast %union.anon* %3760 to i64*
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3762 = getelementptr inbounds %struct.GPR, %struct.GPR* %3761, i32 0, i32 15
  %3763 = getelementptr inbounds %struct.Reg, %struct.Reg* %3762, i32 0, i32 0
  %RBP.i745 = bitcast %union.anon* %3763 to i64*
  %3764 = load i64, i64* %RBP.i745
  %3765 = sub i64 %3764, 48
  %3766 = load i64, i64* %PC.i743
  %3767 = add i64 %3766, 4
  store i64 %3767, i64* %PC.i743
  %3768 = inttoptr i64 %3765 to i64*
  %3769 = load i64, i64* %3768
  store i64 %3769, i64* %RDI.i744, align 8
  store %struct.Memory* %loadMem_400d79, %struct.Memory** %MEMORY
  %loadMem_400d7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3771 = getelementptr inbounds %struct.GPR, %struct.GPR* %3770, i32 0, i32 33
  %3772 = getelementptr inbounds %struct.Reg, %struct.Reg* %3771, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %3772 to i64*
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3774 = getelementptr inbounds %struct.GPR, %struct.GPR* %3773, i32 0, i32 9
  %3775 = getelementptr inbounds %struct.Reg, %struct.Reg* %3774, i32 0, i32 0
  %RSI.i741 = bitcast %union.anon* %3775 to i64*
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3777 = getelementptr inbounds %struct.GPR, %struct.GPR* %3776, i32 0, i32 15
  %3778 = getelementptr inbounds %struct.Reg, %struct.Reg* %3777, i32 0, i32 0
  %RBP.i742 = bitcast %union.anon* %3778 to i64*
  %3779 = load i64, i64* %RBP.i742
  %3780 = sub i64 %3779, 40
  %3781 = load i64, i64* %PC.i740
  %3782 = add i64 %3781, 4
  store i64 %3782, i64* %PC.i740
  %3783 = inttoptr i64 %3780 to i64*
  %3784 = load i64, i64* %3783
  store i64 %3784, i64* %RSI.i741, align 8
  store %struct.Memory* %loadMem_400d7d, %struct.Memory** %MEMORY
  %loadMem_400d81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3786 = getelementptr inbounds %struct.GPR, %struct.GPR* %3785, i32 0, i32 33
  %3787 = getelementptr inbounds %struct.Reg, %struct.Reg* %3786, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %3787 to i64*
  %3788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3789 = getelementptr inbounds %struct.GPR, %struct.GPR* %3788, i32 0, i32 7
  %3790 = getelementptr inbounds %struct.Reg, %struct.Reg* %3789, i32 0, i32 0
  %RDX.i738 = bitcast %union.anon* %3790 to i64*
  %3791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3792 = getelementptr inbounds %struct.GPR, %struct.GPR* %3791, i32 0, i32 15
  %3793 = getelementptr inbounds %struct.Reg, %struct.Reg* %3792, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %3793 to i64*
  %3794 = load i64, i64* %RBP.i739
  %3795 = sub i64 %3794, 40
  %3796 = load i64, i64* %PC.i737
  %3797 = add i64 %3796, 4
  store i64 %3797, i64* %PC.i737
  %3798 = inttoptr i64 %3795 to i64*
  %3799 = load i64, i64* %3798
  store i64 %3799, i64* %RDX.i738, align 8
  store %struct.Memory* %loadMem_400d81, %struct.Memory** %MEMORY
  %loadMem_400d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3801 = getelementptr inbounds %struct.GPR, %struct.GPR* %3800, i32 0, i32 33
  %3802 = getelementptr inbounds %struct.Reg, %struct.Reg* %3801, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %3802 to i64*
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3804 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3803, i64 0, i64 0
  %YMM0.i736 = bitcast %union.VectorReg* %3804 to %"class.std::bitset"*
  %3805 = bitcast %"class.std::bitset"* %YMM0.i736 to i8*
  %3806 = load i64, i64* %PC.i735
  %3807 = add i64 %3806, 9
  store i64 %3807, i64* %PC.i735
  %3808 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %3809 = bitcast i8* %3805 to double*
  store double %3808, double* %3809, align 1
  %3810 = getelementptr inbounds i8, i8* %3805, i64 8
  %3811 = bitcast i8* %3810 to double*
  store double 0.000000e+00, double* %3811, align 1
  store %struct.Memory* %loadMem_400d85, %struct.Memory** %MEMORY
  %loadMem_400d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3813 = getelementptr inbounds %struct.GPR, %struct.GPR* %3812, i32 0, i32 33
  %3814 = getelementptr inbounds %struct.Reg, %struct.Reg* %3813, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %3814 to i64*
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3816 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3815, i64 0, i64 1
  %YMM1.i734 = bitcast %union.VectorReg* %3816 to %"class.std::bitset"*
  %3817 = bitcast %"class.std::bitset"* %YMM1.i734 to i8*
  %3818 = load i64, i64* %PC.i733
  %3819 = add i64 %3818, 9
  store i64 %3819, i64* %PC.i733
  %3820 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %3821 = bitcast i8* %3817 to double*
  store double %3820, double* %3821, align 1
  %3822 = getelementptr inbounds i8, i8* %3817, i64 8
  %3823 = bitcast i8* %3822 to double*
  store double 0.000000e+00, double* %3823, align 1
  store %struct.Memory* %loadMem_400d8e, %struct.Memory** %MEMORY
  %loadMem_400d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3825 = getelementptr inbounds %struct.GPR, %struct.GPR* %3824, i32 0, i32 33
  %3826 = getelementptr inbounds %struct.Reg, %struct.Reg* %3825, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %3826 to i64*
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3828 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3827, i64 0, i64 2
  %YMM2.i732 = bitcast %union.VectorReg* %3828 to %"class.std::bitset"*
  %3829 = bitcast %"class.std::bitset"* %YMM2.i732 to i8*
  %3830 = load i64, i64* %PC.i731
  %3831 = add i64 %3830, 9
  store i64 %3831, i64* %PC.i731
  %3832 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %3833 = bitcast i8* %3829 to double*
  store double %3832, double* %3833, align 1
  %3834 = getelementptr inbounds i8, i8* %3829, i64 8
  %3835 = bitcast i8* %3834 to double*
  store double 0.000000e+00, double* %3835, align 1
  store %struct.Memory* %loadMem_400d97, %struct.Memory** %MEMORY
  %loadMem_400da0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3837 = getelementptr inbounds %struct.GPR, %struct.GPR* %3836, i32 0, i32 33
  %3838 = getelementptr inbounds %struct.Reg, %struct.Reg* %3837, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %3838 to i64*
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3840 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3839, i64 0, i64 3
  %YMM3.i730 = bitcast %union.VectorReg* %3840 to %"class.std::bitset"*
  %3841 = bitcast %"class.std::bitset"* %YMM3.i730 to i8*
  %3842 = load i64, i64* %PC.i729
  %3843 = add i64 %3842, 9
  store i64 %3843, i64* %PC.i729
  %3844 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %3845 = bitcast i8* %3841 to double*
  store double %3844, double* %3845, align 1
  %3846 = getelementptr inbounds i8, i8* %3841, i64 8
  %3847 = bitcast i8* %3846 to double*
  store double 0.000000e+00, double* %3847, align 1
  store %struct.Memory* %loadMem_400da0, %struct.Memory** %MEMORY
  %loadMem1_400da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3849 = getelementptr inbounds %struct.GPR, %struct.GPR* %3848, i32 0, i32 33
  %3850 = getelementptr inbounds %struct.Reg, %struct.Reg* %3849, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %3850 to i64*
  %3851 = load i64, i64* %PC.i728
  %3852 = add i64 %3851, 2119
  %3853 = load i64, i64* %PC.i728
  %3854 = add i64 %3853, 5
  %3855 = load i64, i64* %PC.i728
  %3856 = add i64 %3855, 5
  store i64 %3856, i64* %PC.i728
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3858 = load i64, i64* %3857, align 8
  %3859 = add i64 %3858, -8
  %3860 = inttoptr i64 %3859 to i64*
  store i64 %3854, i64* %3860
  store i64 %3859, i64* %3857, align 8
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3852, i64* %3861, align 8
  store %struct.Memory* %loadMem1_400da9, %struct.Memory** %MEMORY
  %loadMem2_400da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400da9 = load i64, i64* %3
  %call2_400da9 = call %struct.Memory* @sub_4015f0.POUT(%struct.State* %0, i64 %loadPC_400da9, %struct.Memory* %loadMem2_400da9)
  store %struct.Memory* %call2_400da9, %struct.Memory** %MEMORY
  br label %block_.L_400dae

block_.L_400dae:                                  ; preds = %block_400d79, %block_.L_400d67
  %loadMem_400dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3863 = getelementptr inbounds %struct.GPR, %struct.GPR* %3862, i32 0, i32 33
  %3864 = getelementptr inbounds %struct.Reg, %struct.Reg* %3863, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %3864 to i64*
  %3865 = load i64, i64* %PC.i727
  %3866 = add i64 %3865, 11
  store i64 %3866, i64* %PC.i727
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400dae, %struct.Memory** %MEMORY
  %loadMem_400db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3868 = getelementptr inbounds %struct.GPR, %struct.GPR* %3867, i32 0, i32 33
  %3869 = getelementptr inbounds %struct.Reg, %struct.Reg* %3868, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %3869 to i64*
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3871 = getelementptr inbounds %struct.GPR, %struct.GPR* %3870, i32 0, i32 15
  %3872 = getelementptr inbounds %struct.Reg, %struct.Reg* %3871, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %3872 to i64*
  %3873 = load i64, i64* %RBP.i726
  %3874 = sub i64 %3873, 24
  %3875 = load i64, i64* %PC.i725
  %3876 = add i64 %3875, 8
  store i64 %3876, i64* %PC.i725
  %3877 = inttoptr i64 %3874 to i64*
  store i64 1, i64* %3877
  store %struct.Memory* %loadMem_400db9, %struct.Memory** %MEMORY
  br label %block_.L_400dc1

block_.L_400dc1:                                  ; preds = %block_.L_400e4f, %block_.L_400dae
  %loadMem_400dc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3879 = getelementptr inbounds %struct.GPR, %struct.GPR* %3878, i32 0, i32 33
  %3880 = getelementptr inbounds %struct.Reg, %struct.Reg* %3879, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %3880 to i64*
  %3881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3882 = getelementptr inbounds %struct.GPR, %struct.GPR* %3881, i32 0, i32 1
  %3883 = getelementptr inbounds %struct.Reg, %struct.Reg* %3882, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %3883 to i64*
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3885 = getelementptr inbounds %struct.GPR, %struct.GPR* %3884, i32 0, i32 15
  %3886 = getelementptr inbounds %struct.Reg, %struct.Reg* %3885, i32 0, i32 0
  %RBP.i724 = bitcast %union.anon* %3886 to i64*
  %3887 = load i64, i64* %RBP.i724
  %3888 = sub i64 %3887, 24
  %3889 = load i64, i64* %PC.i722
  %3890 = add i64 %3889, 4
  store i64 %3890, i64* %PC.i722
  %3891 = inttoptr i64 %3888 to i64*
  %3892 = load i64, i64* %3891
  store i64 %3892, i64* %RAX.i723, align 8
  store %struct.Memory* %loadMem_400dc1, %struct.Memory** %MEMORY
  %loadMem_400dc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3894 = getelementptr inbounds %struct.GPR, %struct.GPR* %3893, i32 0, i32 33
  %3895 = getelementptr inbounds %struct.Reg, %struct.Reg* %3894, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %3895 to i64*
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3897 = getelementptr inbounds %struct.GPR, %struct.GPR* %3896, i32 0, i32 1
  %3898 = getelementptr inbounds %struct.Reg, %struct.Reg* %3897, i32 0, i32 0
  %RAX.i720 = bitcast %union.anon* %3898 to i64*
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3900 = getelementptr inbounds %struct.GPR, %struct.GPR* %3899, i32 0, i32 15
  %3901 = getelementptr inbounds %struct.Reg, %struct.Reg* %3900, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %3901 to i64*
  %3902 = load i64, i64* %RAX.i720
  %3903 = load i64, i64* %RBP.i721
  %3904 = sub i64 %3903, 56
  %3905 = load i64, i64* %PC.i719
  %3906 = add i64 %3905, 4
  store i64 %3906, i64* %PC.i719
  %3907 = inttoptr i64 %3904 to i64*
  %3908 = load i64, i64* %3907
  %3909 = sub i64 %3902, %3908
  %3910 = icmp ugt i64 %3908, %3902
  %3911 = zext i1 %3910 to i8
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3911, i8* %3912, align 1
  %3913 = trunc i64 %3909 to i32
  %3914 = and i32 %3913, 255
  %3915 = call i32 @llvm.ctpop.i32(i32 %3914)
  %3916 = trunc i32 %3915 to i8
  %3917 = and i8 %3916, 1
  %3918 = xor i8 %3917, 1
  %3919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3918, i8* %3919, align 1
  %3920 = xor i64 %3908, %3902
  %3921 = xor i64 %3920, %3909
  %3922 = lshr i64 %3921, 4
  %3923 = trunc i64 %3922 to i8
  %3924 = and i8 %3923, 1
  %3925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3924, i8* %3925, align 1
  %3926 = icmp eq i64 %3909, 0
  %3927 = zext i1 %3926 to i8
  %3928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3927, i8* %3928, align 1
  %3929 = lshr i64 %3909, 63
  %3930 = trunc i64 %3929 to i8
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3930, i8* %3931, align 1
  %3932 = lshr i64 %3902, 63
  %3933 = lshr i64 %3908, 63
  %3934 = xor i64 %3933, %3932
  %3935 = xor i64 %3929, %3932
  %3936 = add i64 %3935, %3934
  %3937 = icmp eq i64 %3936, 2
  %3938 = zext i1 %3937 to i8
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3938, i8* %3939, align 1
  store %struct.Memory* %loadMem_400dc5, %struct.Memory** %MEMORY
  %loadMem_400dc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3941 = getelementptr inbounds %struct.GPR, %struct.GPR* %3940, i32 0, i32 33
  %3942 = getelementptr inbounds %struct.Reg, %struct.Reg* %3941, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %3942 to i64*
  %3943 = load i64, i64* %PC.i718
  %3944 = add i64 %3943, 151
  %3945 = load i64, i64* %PC.i718
  %3946 = add i64 %3945, 6
  %3947 = load i64, i64* %PC.i718
  %3948 = add i64 %3947, 6
  store i64 %3948, i64* %PC.i718
  %3949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3950 = load i8, i8* %3949, align 1
  %3951 = icmp eq i8 %3950, 0
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3953 = load i8, i8* %3952, align 1
  %3954 = icmp ne i8 %3953, 0
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3956 = load i8, i8* %3955, align 1
  %3957 = icmp ne i8 %3956, 0
  %3958 = xor i1 %3954, %3957
  %3959 = xor i1 %3958, true
  %3960 = and i1 %3951, %3959
  %3961 = zext i1 %3960 to i8
  store i8 %3961, i8* %BRANCH_TAKEN, align 1
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3963 = select i1 %3960, i64 %3944, i64 %3946
  store i64 %3963, i64* %3962, align 8
  store %struct.Memory* %loadMem_400dc9, %struct.Memory** %MEMORY
  %loadBr_400dc9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400dc9 = icmp eq i8 %loadBr_400dc9, 1
  br i1 %cmpBr_400dc9, label %block_.L_400e60, label %block_400dcf

block_400dcf:                                     ; preds = %block_.L_400dc1
  %loadMem_400dcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %3964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3965 = getelementptr inbounds %struct.GPR, %struct.GPR* %3964, i32 0, i32 33
  %3966 = getelementptr inbounds %struct.Reg, %struct.Reg* %3965, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %3966 to i64*
  %3967 = load i64, i64* %PC.i717
  %3968 = add i64 %3967, 8
  store i64 %3968, i64* %PC.i717
  %3969 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %3970 = sub i32 %3969, 1
  %3971 = icmp ult i32 %3969, 1
  %3972 = zext i1 %3971 to i8
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3972, i8* %3973, align 1
  %3974 = and i32 %3970, 255
  %3975 = call i32 @llvm.ctpop.i32(i32 %3974)
  %3976 = trunc i32 %3975 to i8
  %3977 = and i8 %3976, 1
  %3978 = xor i8 %3977, 1
  %3979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3978, i8* %3979, align 1
  %3980 = xor i32 %3969, 1
  %3981 = xor i32 %3980, %3970
  %3982 = lshr i32 %3981, 4
  %3983 = trunc i32 %3982 to i8
  %3984 = and i8 %3983, 1
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3984, i8* %3985, align 1
  %3986 = icmp eq i32 %3970, 0
  %3987 = zext i1 %3986 to i8
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3987, i8* %3988, align 1
  %3989 = lshr i32 %3970, 31
  %3990 = trunc i32 %3989 to i8
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3990, i8* %3991, align 1
  %3992 = lshr i32 %3969, 31
  %3993 = xor i32 %3989, %3992
  %3994 = add i32 %3993, %3992
  %3995 = icmp eq i32 %3994, 2
  %3996 = zext i1 %3995 to i8
  %3997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3996, i8* %3997, align 1
  store %struct.Memory* %loadMem_400dcf, %struct.Memory** %MEMORY
  %loadMem_400dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3999 = getelementptr inbounds %struct.GPR, %struct.GPR* %3998, i32 0, i32 33
  %4000 = getelementptr inbounds %struct.Reg, %struct.Reg* %3999, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %4000 to i64*
  %4001 = load i64, i64* %PC.i716
  %4002 = add i64 %4001, 22
  %4003 = load i64, i64* %PC.i716
  %4004 = add i64 %4003, 6
  %4005 = load i64, i64* %PC.i716
  %4006 = add i64 %4005, 6
  store i64 %4006, i64* %PC.i716
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4008 = load i8, i8* %4007, align 1
  %4009 = icmp eq i8 %4008, 0
  %4010 = zext i1 %4009 to i8
  store i8 %4010, i8* %BRANCH_TAKEN, align 1
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4012 = select i1 %4009, i64 %4002, i64 %4004
  store i64 %4012, i64* %4011, align 8
  store %struct.Memory* %loadMem_400dd7, %struct.Memory** %MEMORY
  %loadBr_400dd7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400dd7 = icmp eq i8 %loadBr_400dd7, 1
  br i1 %cmpBr_400dd7, label %block_.L_400ded, label %block_400ddd

block_400ddd:                                     ; preds = %block_400dcf
  %loadMem_400ddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4014 = getelementptr inbounds %struct.GPR, %struct.GPR* %4013, i32 0, i32 33
  %4015 = getelementptr inbounds %struct.Reg, %struct.Reg* %4014, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %4015 to i64*
  %4016 = load i64, i64* %PC.i715
  %4017 = add i64 %4016, 11
  store i64 %4017, i64* %PC.i715
  store i32 2, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400ddd, %struct.Memory** %MEMORY
  %loadMem_400de8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4019 = getelementptr inbounds %struct.GPR, %struct.GPR* %4018, i32 0, i32 33
  %4020 = getelementptr inbounds %struct.Reg, %struct.Reg* %4019, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %4020 to i64*
  %4021 = load i64, i64* %PC.i714
  %4022 = add i64 %4021, 16
  %4023 = load i64, i64* %PC.i714
  %4024 = add i64 %4023, 5
  store i64 %4024, i64* %PC.i714
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4022, i64* %4025, align 8
  store %struct.Memory* %loadMem_400de8, %struct.Memory** %MEMORY
  br label %block_.L_400df8

block_.L_400ded:                                  ; preds = %block_400dcf
  %loadMem_400ded = load %struct.Memory*, %struct.Memory** %MEMORY
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4027 = getelementptr inbounds %struct.GPR, %struct.GPR* %4026, i32 0, i32 33
  %4028 = getelementptr inbounds %struct.Reg, %struct.Reg* %4027, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %4028 to i64*
  %4029 = load i64, i64* %PC.i713
  %4030 = add i64 %4029, 11
  store i64 %4030, i64* %PC.i713
  store i32 3, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400ded, %struct.Memory** %MEMORY
  br label %block_.L_400df8

block_.L_400df8:                                  ; preds = %block_.L_400ded, %block_400ddd
  %loadMem_400df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4032 = getelementptr inbounds %struct.GPR, %struct.GPR* %4031, i32 0, i32 33
  %4033 = getelementptr inbounds %struct.Reg, %struct.Reg* %4032, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %4033 to i64*
  %4034 = load i64, i64* %PC.i712
  %4035 = add i64 %4034, 8
  store i64 %4035, i64* %PC.i712
  %4036 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4037 = sub i32 %4036, 2
  %4038 = icmp ult i32 %4036, 2
  %4039 = zext i1 %4038 to i8
  %4040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4039, i8* %4040, align 1
  %4041 = and i32 %4037, 255
  %4042 = call i32 @llvm.ctpop.i32(i32 %4041)
  %4043 = trunc i32 %4042 to i8
  %4044 = and i8 %4043, 1
  %4045 = xor i8 %4044, 1
  %4046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4045, i8* %4046, align 1
  %4047 = xor i32 %4036, 2
  %4048 = xor i32 %4047, %4037
  %4049 = lshr i32 %4048, 4
  %4050 = trunc i32 %4049 to i8
  %4051 = and i8 %4050, 1
  %4052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4051, i8* %4052, align 1
  %4053 = icmp eq i32 %4037, 0
  %4054 = zext i1 %4053 to i8
  %4055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4054, i8* %4055, align 1
  %4056 = lshr i32 %4037, 31
  %4057 = trunc i32 %4056 to i8
  %4058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4057, i8* %4058, align 1
  %4059 = lshr i32 %4036, 31
  %4060 = xor i32 %4056, %4059
  %4061 = add i32 %4060, %4059
  %4062 = icmp eq i32 %4061, 2
  %4063 = zext i1 %4062 to i8
  %4064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4063, i8* %4064, align 1
  store %struct.Memory* %loadMem_400df8, %struct.Memory** %MEMORY
  %loadMem_400e00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4066 = getelementptr inbounds %struct.GPR, %struct.GPR* %4065, i32 0, i32 33
  %4067 = getelementptr inbounds %struct.Reg, %struct.Reg* %4066, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %4067 to i64*
  %4068 = load i64, i64* %PC.i711
  %4069 = add i64 %4068, 22
  %4070 = load i64, i64* %PC.i711
  %4071 = add i64 %4070, 6
  %4072 = load i64, i64* %PC.i711
  %4073 = add i64 %4072, 6
  store i64 %4073, i64* %PC.i711
  %4074 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4075 = load i8, i8* %4074, align 1
  %4076 = icmp ne i8 %4075, 0
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4078 = load i8, i8* %4077, align 1
  %4079 = icmp ne i8 %4078, 0
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4081 = load i8, i8* %4080, align 1
  %4082 = icmp ne i8 %4081, 0
  %4083 = xor i1 %4079, %4082
  %4084 = or i1 %4076, %4083
  %4085 = zext i1 %4084 to i8
  store i8 %4085, i8* %BRANCH_TAKEN, align 1
  %4086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4087 = select i1 %4084, i64 %4069, i64 %4071
  store i64 %4087, i64* %4086, align 8
  store %struct.Memory* %loadMem_400e00, %struct.Memory** %MEMORY
  %loadBr_400e00 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e00 = icmp eq i8 %loadBr_400e00, 1
  br i1 %cmpBr_400e00, label %block_.L_400e16, label %block_400e06

block_400e06:                                     ; preds = %block_.L_400df8
  %loadMem_400e06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4089 = getelementptr inbounds %struct.GPR, %struct.GPR* %4088, i32 0, i32 33
  %4090 = getelementptr inbounds %struct.Reg, %struct.Reg* %4089, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %4090 to i64*
  %4091 = load i64, i64* %PC.i710
  %4092 = add i64 %4091, 11
  store i64 %4092, i64* %PC.i710
  store i32 0, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400e06, %struct.Memory** %MEMORY
  %loadMem_400e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4094 = getelementptr inbounds %struct.GPR, %struct.GPR* %4093, i32 0, i32 33
  %4095 = getelementptr inbounds %struct.Reg, %struct.Reg* %4094, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %4095 to i64*
  %4096 = load i64, i64* %PC.i709
  %4097 = add i64 %4096, 16
  %4098 = load i64, i64* %PC.i709
  %4099 = add i64 %4098, 5
  store i64 %4099, i64* %PC.i709
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4097, i64* %4100, align 8
  store %struct.Memory* %loadMem_400e11, %struct.Memory** %MEMORY
  br label %block_.L_400e21

block_.L_400e16:                                  ; preds = %block_.L_400df8
  %loadMem_400e16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4102 = getelementptr inbounds %struct.GPR, %struct.GPR* %4101, i32 0, i32 33
  %4103 = getelementptr inbounds %struct.Reg, %struct.Reg* %4102, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %4103 to i64*
  %4104 = load i64, i64* %PC.i708
  %4105 = add i64 %4104, 11
  store i64 %4105, i64* %PC.i708
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400e16, %struct.Memory** %MEMORY
  br label %block_.L_400e21

block_.L_400e21:                                  ; preds = %block_.L_400e16, %block_400e06
  %loadMem_400e21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4107 = getelementptr inbounds %struct.GPR, %struct.GPR* %4106, i32 0, i32 33
  %4108 = getelementptr inbounds %struct.Reg, %struct.Reg* %4107, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %4108 to i64*
  %4109 = load i64, i64* %PC.i707
  %4110 = add i64 %4109, 8
  store i64 %4110, i64* %PC.i707
  %4111 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4112 = sub i32 %4111, 1
  %4113 = icmp ult i32 %4111, 1
  %4114 = zext i1 %4113 to i8
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4114, i8* %4115, align 1
  %4116 = and i32 %4112, 255
  %4117 = call i32 @llvm.ctpop.i32(i32 %4116)
  %4118 = trunc i32 %4117 to i8
  %4119 = and i8 %4118, 1
  %4120 = xor i8 %4119, 1
  %4121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4120, i8* %4121, align 1
  %4122 = xor i32 %4111, 1
  %4123 = xor i32 %4122, %4112
  %4124 = lshr i32 %4123, 4
  %4125 = trunc i32 %4124 to i8
  %4126 = and i8 %4125, 1
  %4127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4126, i8* %4127, align 1
  %4128 = icmp eq i32 %4112, 0
  %4129 = zext i1 %4128 to i8
  %4130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4129, i8* %4130, align 1
  %4131 = lshr i32 %4112, 31
  %4132 = trunc i32 %4131 to i8
  %4133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4132, i8* %4133, align 1
  %4134 = lshr i32 %4111, 31
  %4135 = xor i32 %4131, %4134
  %4136 = add i32 %4135, %4134
  %4137 = icmp eq i32 %4136, 2
  %4138 = zext i1 %4137 to i8
  %4139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4138, i8* %4139, align 1
  store %struct.Memory* %loadMem_400e21, %struct.Memory** %MEMORY
  %loadMem_400e29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4141 = getelementptr inbounds %struct.GPR, %struct.GPR* %4140, i32 0, i32 33
  %4142 = getelementptr inbounds %struct.Reg, %struct.Reg* %4141, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %4142 to i64*
  %4143 = load i64, i64* %PC.i706
  %4144 = add i64 %4143, 22
  %4145 = load i64, i64* %PC.i706
  %4146 = add i64 %4145, 6
  %4147 = load i64, i64* %PC.i706
  %4148 = add i64 %4147, 6
  store i64 %4148, i64* %PC.i706
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4150 = load i8, i8* %4149, align 1
  %4151 = icmp ne i8 %4150, 0
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4153 = load i8, i8* %4152, align 1
  %4154 = icmp ne i8 %4153, 0
  %4155 = xor i1 %4151, %4154
  %4156 = xor i1 %4155, true
  %4157 = zext i1 %4156 to i8
  store i8 %4157, i8* %BRANCH_TAKEN, align 1
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4159 = select i1 %4155, i64 %4146, i64 %4144
  store i64 %4159, i64* %4158, align 8
  store %struct.Memory* %loadMem_400e29, %struct.Memory** %MEMORY
  %loadBr_400e29 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e29 = icmp eq i8 %loadBr_400e29, 1
  br i1 %cmpBr_400e29, label %block_.L_400e3f, label %block_400e2f

block_400e2f:                                     ; preds = %block_.L_400e21
  %loadMem_400e2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4161 = getelementptr inbounds %struct.GPR, %struct.GPR* %4160, i32 0, i32 33
  %4162 = getelementptr inbounds %struct.Reg, %struct.Reg* %4161, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %4162 to i64*
  %4163 = load i64, i64* %PC.i705
  %4164 = add i64 %4163, 11
  store i64 %4164, i64* %PC.i705
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400e2f, %struct.Memory** %MEMORY
  %loadMem_400e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4166 = getelementptr inbounds %struct.GPR, %struct.GPR* %4165, i32 0, i32 33
  %4167 = getelementptr inbounds %struct.Reg, %struct.Reg* %4166, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %4167 to i64*
  %4168 = load i64, i64* %PC.i704
  %4169 = add i64 %4168, 16
  %4170 = load i64, i64* %PC.i704
  %4171 = add i64 %4170, 5
  store i64 %4171, i64* %PC.i704
  %4172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4169, i64* %4172, align 8
  store %struct.Memory* %loadMem_400e3a, %struct.Memory** %MEMORY
  br label %block_.L_400e4a

block_.L_400e3f:                                  ; preds = %block_.L_400e21
  %loadMem_400e3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4174 = getelementptr inbounds %struct.GPR, %struct.GPR* %4173, i32 0, i32 33
  %4175 = getelementptr inbounds %struct.Reg, %struct.Reg* %4174, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %4175 to i64*
  %4176 = load i64, i64* %PC.i703
  %4177 = add i64 %4176, 11
  store i64 %4177, i64* %PC.i703
  store i32 0, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400e3f, %struct.Memory** %MEMORY
  br label %block_.L_400e4a

block_.L_400e4a:                                  ; preds = %block_.L_400e3f, %block_400e2f
  %loadMem_400e4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4179 = getelementptr inbounds %struct.GPR, %struct.GPR* %4178, i32 0, i32 33
  %4180 = getelementptr inbounds %struct.Reg, %struct.Reg* %4179, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %4180 to i64*
  %4181 = load i64, i64* %PC.i702
  %4182 = add i64 %4181, 5
  %4183 = load i64, i64* %PC.i702
  %4184 = add i64 %4183, 5
  store i64 %4184, i64* %PC.i702
  %4185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4182, i64* %4185, align 8
  store %struct.Memory* %loadMem_400e4a, %struct.Memory** %MEMORY
  br label %block_.L_400e4f

block_.L_400e4f:                                  ; preds = %block_.L_400e4a
  %loadMem_400e4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4187 = getelementptr inbounds %struct.GPR, %struct.GPR* %4186, i32 0, i32 33
  %4188 = getelementptr inbounds %struct.Reg, %struct.Reg* %4187, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %4188 to i64*
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4190 = getelementptr inbounds %struct.GPR, %struct.GPR* %4189, i32 0, i32 1
  %4191 = getelementptr inbounds %struct.Reg, %struct.Reg* %4190, i32 0, i32 0
  %RAX.i700 = bitcast %union.anon* %4191 to i64*
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4193 = getelementptr inbounds %struct.GPR, %struct.GPR* %4192, i32 0, i32 15
  %4194 = getelementptr inbounds %struct.Reg, %struct.Reg* %4193, i32 0, i32 0
  %RBP.i701 = bitcast %union.anon* %4194 to i64*
  %4195 = load i64, i64* %RBP.i701
  %4196 = sub i64 %4195, 24
  %4197 = load i64, i64* %PC.i699
  %4198 = add i64 %4197, 4
  store i64 %4198, i64* %PC.i699
  %4199 = inttoptr i64 %4196 to i64*
  %4200 = load i64, i64* %4199
  store i64 %4200, i64* %RAX.i700, align 8
  store %struct.Memory* %loadMem_400e4f, %struct.Memory** %MEMORY
  %loadMem_400e53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4202 = getelementptr inbounds %struct.GPR, %struct.GPR* %4201, i32 0, i32 33
  %4203 = getelementptr inbounds %struct.Reg, %struct.Reg* %4202, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %4203 to i64*
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4205 = getelementptr inbounds %struct.GPR, %struct.GPR* %4204, i32 0, i32 1
  %4206 = getelementptr inbounds %struct.Reg, %struct.Reg* %4205, i32 0, i32 0
  %RAX.i698 = bitcast %union.anon* %4206 to i64*
  %4207 = load i64, i64* %RAX.i698
  %4208 = load i64, i64* %PC.i697
  %4209 = add i64 %4208, 4
  store i64 %4209, i64* %PC.i697
  %4210 = add i64 1, %4207
  store i64 %4210, i64* %RAX.i698, align 8
  %4211 = icmp ult i64 %4210, %4207
  %4212 = icmp ult i64 %4210, 1
  %4213 = or i1 %4211, %4212
  %4214 = zext i1 %4213 to i8
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4214, i8* %4215, align 1
  %4216 = trunc i64 %4210 to i32
  %4217 = and i32 %4216, 255
  %4218 = call i32 @llvm.ctpop.i32(i32 %4217)
  %4219 = trunc i32 %4218 to i8
  %4220 = and i8 %4219, 1
  %4221 = xor i8 %4220, 1
  %4222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4221, i8* %4222, align 1
  %4223 = xor i64 1, %4207
  %4224 = xor i64 %4223, %4210
  %4225 = lshr i64 %4224, 4
  %4226 = trunc i64 %4225 to i8
  %4227 = and i8 %4226, 1
  %4228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4227, i8* %4228, align 1
  %4229 = icmp eq i64 %4210, 0
  %4230 = zext i1 %4229 to i8
  %4231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4230, i8* %4231, align 1
  %4232 = lshr i64 %4210, 63
  %4233 = trunc i64 %4232 to i8
  %4234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4233, i8* %4234, align 1
  %4235 = lshr i64 %4207, 63
  %4236 = xor i64 %4232, %4235
  %4237 = add i64 %4236, %4232
  %4238 = icmp eq i64 %4237, 2
  %4239 = zext i1 %4238 to i8
  %4240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4239, i8* %4240, align 1
  store %struct.Memory* %loadMem_400e53, %struct.Memory** %MEMORY
  %loadMem_400e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4242 = getelementptr inbounds %struct.GPR, %struct.GPR* %4241, i32 0, i32 33
  %4243 = getelementptr inbounds %struct.Reg, %struct.Reg* %4242, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %4243 to i64*
  %4244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4245 = getelementptr inbounds %struct.GPR, %struct.GPR* %4244, i32 0, i32 1
  %4246 = getelementptr inbounds %struct.Reg, %struct.Reg* %4245, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %4246 to i64*
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4248 = getelementptr inbounds %struct.GPR, %struct.GPR* %4247, i32 0, i32 15
  %4249 = getelementptr inbounds %struct.Reg, %struct.Reg* %4248, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %4249 to i64*
  %4250 = load i64, i64* %RBP.i696
  %4251 = sub i64 %4250, 24
  %4252 = load i64, i64* %RAX.i695
  %4253 = load i64, i64* %PC.i694
  %4254 = add i64 %4253, 4
  store i64 %4254, i64* %PC.i694
  %4255 = inttoptr i64 %4251 to i64*
  store i64 %4252, i64* %4255
  store %struct.Memory* %loadMem_400e57, %struct.Memory** %MEMORY
  %loadMem_400e5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4257 = getelementptr inbounds %struct.GPR, %struct.GPR* %4256, i32 0, i32 33
  %4258 = getelementptr inbounds %struct.Reg, %struct.Reg* %4257, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %4258 to i64*
  %4259 = load i64, i64* %PC.i693
  %4260 = add i64 %4259, -154
  %4261 = load i64, i64* %PC.i693
  %4262 = add i64 %4261, 5
  store i64 %4262, i64* %PC.i693
  %4263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4260, i64* %4263, align 8
  store %struct.Memory* %loadMem_400e5b, %struct.Memory** %MEMORY
  br label %block_.L_400dc1

block_.L_400e60:                                  ; preds = %block_.L_400dc1
  %loadMem_400e60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4265 = getelementptr inbounds %struct.GPR, %struct.GPR* %4264, i32 0, i32 33
  %4266 = getelementptr inbounds %struct.Reg, %struct.Reg* %4265, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %4266 to i64*
  %4267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4268 = getelementptr inbounds %struct.GPR, %struct.GPR* %4267, i32 0, i32 1
  %4269 = getelementptr inbounds %struct.Reg, %struct.Reg* %4268, i32 0, i32 0
  %RAX.i691 = bitcast %union.anon* %4269 to i64*
  %4270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4271 = getelementptr inbounds %struct.GPR, %struct.GPR* %4270, i32 0, i32 15
  %4272 = getelementptr inbounds %struct.Reg, %struct.Reg* %4271, i32 0, i32 0
  %RBP.i692 = bitcast %union.anon* %4272 to i64*
  %4273 = load i64, i64* %RBP.i692
  %4274 = sub i64 %4273, 176
  %4275 = load i64, i64* %PC.i690
  %4276 = add i64 %4275, 6
  store i64 %4276, i64* %PC.i690
  %4277 = inttoptr i64 %4274 to i32*
  %4278 = load i32, i32* %4277
  %4279 = zext i32 %4278 to i64
  store i64 %4279, i64* %RAX.i691, align 8
  store %struct.Memory* %loadMem_400e60, %struct.Memory** %MEMORY
  %loadMem_400e66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4281 = getelementptr inbounds %struct.GPR, %struct.GPR* %4280, i32 0, i32 33
  %4282 = getelementptr inbounds %struct.Reg, %struct.Reg* %4281, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %4282 to i64*
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4284 = getelementptr inbounds %struct.GPR, %struct.GPR* %4283, i32 0, i32 1
  %4285 = getelementptr inbounds %struct.Reg, %struct.Reg* %4284, i32 0, i32 0
  %EAX.i688 = bitcast %union.anon* %4285 to i32*
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4287 = getelementptr inbounds %struct.GPR, %struct.GPR* %4286, i32 0, i32 15
  %4288 = getelementptr inbounds %struct.Reg, %struct.Reg* %4287, i32 0, i32 0
  %RBP.i689 = bitcast %union.anon* %4288 to i64*
  %4289 = load i32, i32* %EAX.i688
  %4290 = zext i32 %4289 to i64
  %4291 = load i64, i64* %RBP.i689
  %4292 = sub i64 %4291, 172
  %4293 = load i64, i64* %PC.i687
  %4294 = add i64 %4293, 6
  store i64 %4294, i64* %PC.i687
  %4295 = inttoptr i64 %4292 to i32*
  %4296 = load i32, i32* %4295
  %4297 = sub i32 %4289, %4296
  %4298 = icmp ult i32 %4289, %4296
  %4299 = zext i1 %4298 to i8
  %4300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4299, i8* %4300, align 1
  %4301 = and i32 %4297, 255
  %4302 = call i32 @llvm.ctpop.i32(i32 %4301)
  %4303 = trunc i32 %4302 to i8
  %4304 = and i8 %4303, 1
  %4305 = xor i8 %4304, 1
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4305, i8* %4306, align 1
  %4307 = xor i32 %4296, %4289
  %4308 = xor i32 %4307, %4297
  %4309 = lshr i32 %4308, 4
  %4310 = trunc i32 %4309 to i8
  %4311 = and i8 %4310, 1
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4311, i8* %4312, align 1
  %4313 = icmp eq i32 %4297, 0
  %4314 = zext i1 %4313 to i8
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4314, i8* %4315, align 1
  %4316 = lshr i32 %4297, 31
  %4317 = trunc i32 %4316 to i8
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4317, i8* %4318, align 1
  %4319 = lshr i32 %4289, 31
  %4320 = lshr i32 %4296, 31
  %4321 = xor i32 %4320, %4319
  %4322 = xor i32 %4316, %4319
  %4323 = add i32 %4322, %4321
  %4324 = icmp eq i32 %4323, 2
  %4325 = zext i1 %4324 to i8
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4325, i8* %4326, align 1
  store %struct.Memory* %loadMem_400e66, %struct.Memory** %MEMORY
  %loadMem_400e6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4328 = getelementptr inbounds %struct.GPR, %struct.GPR* %4327, i32 0, i32 33
  %4329 = getelementptr inbounds %struct.Reg, %struct.Reg* %4328, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %4329 to i64*
  %4330 = load i64, i64* %PC.i686
  %4331 = add i64 %4330, 54
  %4332 = load i64, i64* %PC.i686
  %4333 = add i64 %4332, 6
  %4334 = load i64, i64* %PC.i686
  %4335 = add i64 %4334, 6
  store i64 %4335, i64* %PC.i686
  %4336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4337 = load i8, i8* %4336, align 1
  %4338 = icmp eq i8 %4337, 0
  %4339 = zext i1 %4338 to i8
  store i8 %4339, i8* %BRANCH_TAKEN, align 1
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4341 = select i1 %4338, i64 %4331, i64 %4333
  store i64 %4341, i64* %4340, align 8
  store %struct.Memory* %loadMem_400e6c, %struct.Memory** %MEMORY
  %loadBr_400e6c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e6c = icmp eq i8 %loadBr_400e6c, 1
  br i1 %cmpBr_400e6c, label %block_.L_400ea2, label %block_400e72

block_400e72:                                     ; preds = %block_.L_400e60
  %loadMem_400e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4343 = getelementptr inbounds %struct.GPR, %struct.GPR* %4342, i32 0, i32 33
  %4344 = getelementptr inbounds %struct.Reg, %struct.Reg* %4343, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %4344 to i64*
  %4345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4346 = getelementptr inbounds %struct.GPR, %struct.GPR* %4345, i32 0, i32 11
  %4347 = getelementptr inbounds %struct.Reg, %struct.Reg* %4346, i32 0, i32 0
  %RDI.i684 = bitcast %union.anon* %4347 to i64*
  %4348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4349 = getelementptr inbounds %struct.GPR, %struct.GPR* %4348, i32 0, i32 15
  %4350 = getelementptr inbounds %struct.Reg, %struct.Reg* %4349, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %4350 to i64*
  %4351 = load i64, i64* %RBP.i685
  %4352 = sub i64 %4351, 56
  %4353 = load i64, i64* %PC.i683
  %4354 = add i64 %4353, 4
  store i64 %4354, i64* %PC.i683
  %4355 = inttoptr i64 %4352 to i64*
  %4356 = load i64, i64* %4355
  store i64 %4356, i64* %RDI.i684, align 8
  store %struct.Memory* %loadMem_400e72, %struct.Memory** %MEMORY
  %loadMem_400e76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4358 = getelementptr inbounds %struct.GPR, %struct.GPR* %4357, i32 0, i32 33
  %4359 = getelementptr inbounds %struct.Reg, %struct.Reg* %4358, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %4359 to i64*
  %4360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4361 = getelementptr inbounds %struct.GPR, %struct.GPR* %4360, i32 0, i32 9
  %4362 = getelementptr inbounds %struct.Reg, %struct.Reg* %4361, i32 0, i32 0
  %RSI.i682 = bitcast %union.anon* %4362 to i64*
  %4363 = load i64, i64* %PC.i681
  %4364 = add i64 %4363, 8
  store i64 %4364, i64* %PC.i681
  %4365 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4366 = sext i32 %4365 to i64
  store i64 %4366, i64* %RSI.i682, align 8
  store %struct.Memory* %loadMem_400e76, %struct.Memory** %MEMORY
  %loadMem_400e7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4368 = getelementptr inbounds %struct.GPR, %struct.GPR* %4367, i32 0, i32 33
  %4369 = getelementptr inbounds %struct.Reg, %struct.Reg* %4368, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %4369 to i64*
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4371 = getelementptr inbounds %struct.GPR, %struct.GPR* %4370, i32 0, i32 7
  %4372 = getelementptr inbounds %struct.Reg, %struct.Reg* %4371, i32 0, i32 0
  %RDX.i680 = bitcast %union.anon* %4372 to i64*
  %4373 = load i64, i64* %PC.i679
  %4374 = add i64 %4373, 8
  store i64 %4374, i64* %PC.i679
  %4375 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4376 = sext i32 %4375 to i64
  store i64 %4376, i64* %RDX.i680, align 8
  store %struct.Memory* %loadMem_400e7e, %struct.Memory** %MEMORY
  %loadMem_400e86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4378 = getelementptr inbounds %struct.GPR, %struct.GPR* %4377, i32 0, i32 33
  %4379 = getelementptr inbounds %struct.Reg, %struct.Reg* %4378, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %4379 to i64*
  %4380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4381 = getelementptr inbounds %struct.GPR, %struct.GPR* %4380, i32 0, i32 15
  %4382 = getelementptr inbounds %struct.Reg, %struct.Reg* %4381, i32 0, i32 0
  %RBP.i677 = bitcast %union.anon* %4382 to i64*
  %4383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4384 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4383, i64 0, i64 0
  %YMM0.i678 = bitcast %union.VectorReg* %4384 to %"class.std::bitset"*
  %4385 = bitcast %"class.std::bitset"* %YMM0.i678 to i8*
  %4386 = load i64, i64* %RBP.i677
  %4387 = sub i64 %4386, 112
  %4388 = load i64, i64* %PC.i676
  %4389 = add i64 %4388, 5
  store i64 %4389, i64* %PC.i676
  %4390 = inttoptr i64 %4387 to double*
  %4391 = load double, double* %4390
  %4392 = bitcast i8* %4385 to double*
  store double %4391, double* %4392, align 1
  %4393 = getelementptr inbounds i8, i8* %4385, i64 8
  %4394 = bitcast i8* %4393 to double*
  store double 0.000000e+00, double* %4394, align 1
  store %struct.Memory* %loadMem_400e86, %struct.Memory** %MEMORY
  %loadMem_400e8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4396 = getelementptr inbounds %struct.GPR, %struct.GPR* %4395, i32 0, i32 33
  %4397 = getelementptr inbounds %struct.Reg, %struct.Reg* %4396, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %4397 to i64*
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4399 = getelementptr inbounds %struct.GPR, %struct.GPR* %4398, i32 0, i32 15
  %4400 = getelementptr inbounds %struct.Reg, %struct.Reg* %4399, i32 0, i32 0
  %RBP.i674 = bitcast %union.anon* %4400 to i64*
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4402 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4401, i64 0, i64 1
  %YMM1.i675 = bitcast %union.VectorReg* %4402 to %"class.std::bitset"*
  %4403 = bitcast %"class.std::bitset"* %YMM1.i675 to i8*
  %4404 = load i64, i64* %RBP.i674
  %4405 = sub i64 %4404, 120
  %4406 = load i64, i64* %PC.i673
  %4407 = add i64 %4406, 5
  store i64 %4407, i64* %PC.i673
  %4408 = inttoptr i64 %4405 to double*
  %4409 = load double, double* %4408
  %4410 = bitcast i8* %4403 to double*
  store double %4409, double* %4410, align 1
  %4411 = getelementptr inbounds i8, i8* %4403, i64 8
  %4412 = bitcast i8* %4411 to double*
  store double 0.000000e+00, double* %4412, align 1
  store %struct.Memory* %loadMem_400e8b, %struct.Memory** %MEMORY
  %loadMem_400e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4414 = getelementptr inbounds %struct.GPR, %struct.GPR* %4413, i32 0, i32 33
  %4415 = getelementptr inbounds %struct.Reg, %struct.Reg* %4414, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %4415 to i64*
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4417 = getelementptr inbounds %struct.GPR, %struct.GPR* %4416, i32 0, i32 15
  %4418 = getelementptr inbounds %struct.Reg, %struct.Reg* %4417, i32 0, i32 0
  %RBP.i671 = bitcast %union.anon* %4418 to i64*
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4420 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4419, i64 0, i64 2
  %YMM2.i672 = bitcast %union.VectorReg* %4420 to %"class.std::bitset"*
  %4421 = bitcast %"class.std::bitset"* %YMM2.i672 to i8*
  %4422 = load i64, i64* %RBP.i671
  %4423 = sub i64 %4422, 128
  %4424 = load i64, i64* %PC.i670
  %4425 = add i64 %4424, 5
  store i64 %4425, i64* %PC.i670
  %4426 = inttoptr i64 %4423 to double*
  %4427 = load double, double* %4426
  %4428 = bitcast i8* %4421 to double*
  store double %4427, double* %4428, align 1
  %4429 = getelementptr inbounds i8, i8* %4421, i64 8
  %4430 = bitcast i8* %4429 to double*
  store double 0.000000e+00, double* %4430, align 1
  store %struct.Memory* %loadMem_400e90, %struct.Memory** %MEMORY
  %loadMem_400e95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4432 = getelementptr inbounds %struct.GPR, %struct.GPR* %4431, i32 0, i32 33
  %4433 = getelementptr inbounds %struct.Reg, %struct.Reg* %4432, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %4433 to i64*
  %4434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4435 = getelementptr inbounds %struct.GPR, %struct.GPR* %4434, i32 0, i32 15
  %4436 = getelementptr inbounds %struct.Reg, %struct.Reg* %4435, i32 0, i32 0
  %RBP.i668 = bitcast %union.anon* %4436 to i64*
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4438 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4437, i64 0, i64 3
  %YMM3.i669 = bitcast %union.VectorReg* %4438 to %"class.std::bitset"*
  %4439 = bitcast %"class.std::bitset"* %YMM3.i669 to i8*
  %4440 = load i64, i64* %RBP.i668
  %4441 = sub i64 %4440, 136
  %4442 = load i64, i64* %PC.i667
  %4443 = add i64 %4442, 8
  store i64 %4443, i64* %PC.i667
  %4444 = inttoptr i64 %4441 to double*
  %4445 = load double, double* %4444
  %4446 = bitcast i8* %4439 to double*
  store double %4445, double* %4446, align 1
  %4447 = getelementptr inbounds i8, i8* %4439, i64 8
  %4448 = bitcast i8* %4447 to double*
  store double 0.000000e+00, double* %4448, align 1
  store %struct.Memory* %loadMem_400e95, %struct.Memory** %MEMORY
  %loadMem1_400e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4450 = getelementptr inbounds %struct.GPR, %struct.GPR* %4449, i32 0, i32 33
  %4451 = getelementptr inbounds %struct.Reg, %struct.Reg* %4450, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %4451 to i64*
  %4452 = load i64, i64* %PC.i666
  %4453 = add i64 %4452, 1875
  %4454 = load i64, i64* %PC.i666
  %4455 = add i64 %4454, 5
  %4456 = load i64, i64* %PC.i666
  %4457 = add i64 %4456, 5
  store i64 %4457, i64* %PC.i666
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4459 = load i64, i64* %4458, align 8
  %4460 = add i64 %4459, -8
  %4461 = inttoptr i64 %4460 to i64*
  store i64 %4455, i64* %4461
  store i64 %4460, i64* %4458, align 8
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4453, i64* %4462, align 8
  store %struct.Memory* %loadMem1_400e9d, %struct.Memory** %MEMORY
  %loadMem2_400e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400e9d = load i64, i64* %3
  %call2_400e9d = call %struct.Memory* @sub_4015f0.POUT(%struct.State* %0, i64 %loadPC_400e9d, %struct.Memory* %loadMem2_400e9d)
  store %struct.Memory* %call2_400e9d, %struct.Memory** %MEMORY
  br label %block_.L_400ea2

block_.L_400ea2:                                  ; preds = %block_400e72, %block_.L_400e60
  %loadMem_400ea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4464 = getelementptr inbounds %struct.GPR, %struct.GPR* %4463, i32 0, i32 33
  %4465 = getelementptr inbounds %struct.Reg, %struct.Reg* %4464, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %4465 to i64*
  %4466 = load i64, i64* %PC.i665
  %4467 = add i64 %4466, 11
  store i64 %4467, i64* %PC.i665
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400ea2, %struct.Memory** %MEMORY
  %loadMem_400ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %4468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4469 = getelementptr inbounds %struct.GPR, %struct.GPR* %4468, i32 0, i32 33
  %4470 = getelementptr inbounds %struct.Reg, %struct.Reg* %4469, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %4470 to i64*
  %4471 = load i64, i64* %PC.i664
  %4472 = add i64 %4471, 11
  store i64 %4472, i64* %PC.i664
  store i32 2, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_400ead, %struct.Memory** %MEMORY
  %loadMem_400eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4474 = getelementptr inbounds %struct.GPR, %struct.GPR* %4473, i32 0, i32 33
  %4475 = getelementptr inbounds %struct.Reg, %struct.Reg* %4474, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %4475 to i64*
  %4476 = load i64, i64* %PC.i663
  %4477 = add i64 %4476, 11
  store i64 %4477, i64* %PC.i663
  store i32 3, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  store %struct.Memory* %loadMem_400eb8, %struct.Memory** %MEMORY
  %loadMem_400ec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4479 = getelementptr inbounds %struct.GPR, %struct.GPR* %4478, i32 0, i32 33
  %4480 = getelementptr inbounds %struct.Reg, %struct.Reg* %4479, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %4480 to i64*
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4482 = getelementptr inbounds %struct.GPR, %struct.GPR* %4481, i32 0, i32 15
  %4483 = getelementptr inbounds %struct.Reg, %struct.Reg* %4482, i32 0, i32 0
  %RBP.i662 = bitcast %union.anon* %4483 to i64*
  %4484 = load i64, i64* %RBP.i662
  %4485 = sub i64 %4484, 24
  %4486 = load i64, i64* %PC.i661
  %4487 = add i64 %4486, 8
  store i64 %4487, i64* %PC.i661
  %4488 = inttoptr i64 %4485 to i64*
  store i64 1, i64* %4488
  store %struct.Memory* %loadMem_400ec3, %struct.Memory** %MEMORY
  br label %block_.L_400ecb

block_.L_400ecb:                                  ; preds = %block_400ed9, %block_.L_400ea2
  %loadMem_400ecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4490 = getelementptr inbounds %struct.GPR, %struct.GPR* %4489, i32 0, i32 33
  %4491 = getelementptr inbounds %struct.Reg, %struct.Reg* %4490, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %4491 to i64*
  %4492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4493 = getelementptr inbounds %struct.GPR, %struct.GPR* %4492, i32 0, i32 1
  %4494 = getelementptr inbounds %struct.Reg, %struct.Reg* %4493, i32 0, i32 0
  %RAX.i659 = bitcast %union.anon* %4494 to i64*
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4496 = getelementptr inbounds %struct.GPR, %struct.GPR* %4495, i32 0, i32 15
  %4497 = getelementptr inbounds %struct.Reg, %struct.Reg* %4496, i32 0, i32 0
  %RBP.i660 = bitcast %union.anon* %4497 to i64*
  %4498 = load i64, i64* %RBP.i660
  %4499 = sub i64 %4498, 24
  %4500 = load i64, i64* %PC.i658
  %4501 = add i64 %4500, 4
  store i64 %4501, i64* %PC.i658
  %4502 = inttoptr i64 %4499 to i64*
  %4503 = load i64, i64* %4502
  store i64 %4503, i64* %RAX.i659, align 8
  store %struct.Memory* %loadMem_400ecb, %struct.Memory** %MEMORY
  %loadMem_400ecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4505 = getelementptr inbounds %struct.GPR, %struct.GPR* %4504, i32 0, i32 33
  %4506 = getelementptr inbounds %struct.Reg, %struct.Reg* %4505, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %4506 to i64*
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4508 = getelementptr inbounds %struct.GPR, %struct.GPR* %4507, i32 0, i32 1
  %4509 = getelementptr inbounds %struct.Reg, %struct.Reg* %4508, i32 0, i32 0
  %RAX.i656 = bitcast %union.anon* %4509 to i64*
  %4510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4511 = getelementptr inbounds %struct.GPR, %struct.GPR* %4510, i32 0, i32 15
  %4512 = getelementptr inbounds %struct.Reg, %struct.Reg* %4511, i32 0, i32 0
  %RBP.i657 = bitcast %union.anon* %4512 to i64*
  %4513 = load i64, i64* %RAX.i656
  %4514 = load i64, i64* %RBP.i657
  %4515 = sub i64 %4514, 64
  %4516 = load i64, i64* %PC.i655
  %4517 = add i64 %4516, 4
  store i64 %4517, i64* %PC.i655
  %4518 = inttoptr i64 %4515 to i64*
  %4519 = load i64, i64* %4518
  %4520 = sub i64 %4513, %4519
  %4521 = icmp ugt i64 %4519, %4513
  %4522 = zext i1 %4521 to i8
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4522, i8* %4523, align 1
  %4524 = trunc i64 %4520 to i32
  %4525 = and i32 %4524, 255
  %4526 = call i32 @llvm.ctpop.i32(i32 %4525)
  %4527 = trunc i32 %4526 to i8
  %4528 = and i8 %4527, 1
  %4529 = xor i8 %4528, 1
  %4530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4529, i8* %4530, align 1
  %4531 = xor i64 %4519, %4513
  %4532 = xor i64 %4531, %4520
  %4533 = lshr i64 %4532, 4
  %4534 = trunc i64 %4533 to i8
  %4535 = and i8 %4534, 1
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4535, i8* %4536, align 1
  %4537 = icmp eq i64 %4520, 0
  %4538 = zext i1 %4537 to i8
  %4539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4538, i8* %4539, align 1
  %4540 = lshr i64 %4520, 63
  %4541 = trunc i64 %4540 to i8
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4541, i8* %4542, align 1
  %4543 = lshr i64 %4513, 63
  %4544 = lshr i64 %4519, 63
  %4545 = xor i64 %4544, %4543
  %4546 = xor i64 %4540, %4543
  %4547 = add i64 %4546, %4545
  %4548 = icmp eq i64 %4547, 2
  %4549 = zext i1 %4548 to i8
  %4550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4549, i8* %4550, align 1
  store %struct.Memory* %loadMem_400ecf, %struct.Memory** %MEMORY
  %loadMem_400ed3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4552 = getelementptr inbounds %struct.GPR, %struct.GPR* %4551, i32 0, i32 33
  %4553 = getelementptr inbounds %struct.Reg, %struct.Reg* %4552, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %4553 to i64*
  %4554 = load i64, i64* %PC.i654
  %4555 = add i64 %4554, 251
  %4556 = load i64, i64* %PC.i654
  %4557 = add i64 %4556, 6
  %4558 = load i64, i64* %PC.i654
  %4559 = add i64 %4558, 6
  store i64 %4559, i64* %PC.i654
  %4560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4561 = load i8, i8* %4560, align 1
  %4562 = icmp eq i8 %4561, 0
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4564 = load i8, i8* %4563, align 1
  %4565 = icmp ne i8 %4564, 0
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4567 = load i8, i8* %4566, align 1
  %4568 = icmp ne i8 %4567, 0
  %4569 = xor i1 %4565, %4568
  %4570 = xor i1 %4569, true
  %4571 = and i1 %4562, %4570
  %4572 = zext i1 %4571 to i8
  store i8 %4572, i8* %BRANCH_TAKEN, align 1
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4574 = select i1 %4571, i64 %4555, i64 %4557
  store i64 %4574, i64* %4573, align 8
  store %struct.Memory* %loadMem_400ed3, %struct.Memory** %MEMORY
  %loadBr_400ed3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400ed3 = icmp eq i8 %loadBr_400ed3, 1
  br i1 %cmpBr_400ed3, label %block_.L_400fce, label %block_400ed9

block_400ed9:                                     ; preds = %block_.L_400ecb
  %loadMem_400ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4576 = getelementptr inbounds %struct.GPR, %struct.GPR* %4575, i32 0, i32 33
  %4577 = getelementptr inbounds %struct.Reg, %struct.Reg* %4576, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %4577 to i64*
  %4578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4579 = getelementptr inbounds %struct.GPR, %struct.GPR* %4578, i32 0, i32 1
  %4580 = getelementptr inbounds %struct.Reg, %struct.Reg* %4579, i32 0, i32 0
  %RAX.i653 = bitcast %union.anon* %4580 to i64*
  %4581 = load i64, i64* %PC.i652
  %4582 = add i64 %4581, 7
  store i64 %4582, i64* %PC.i652
  %4583 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4584 = zext i32 %4583 to i64
  store i64 %4584, i64* %RAX.i653, align 8
  store %struct.Memory* %loadMem_400ed9, %struct.Memory** %MEMORY
  %loadMem_400ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4586 = getelementptr inbounds %struct.GPR, %struct.GPR* %4585, i32 0, i32 33
  %4587 = getelementptr inbounds %struct.Reg, %struct.Reg* %4586, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %4587 to i64*
  %4588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4589 = getelementptr inbounds %struct.GPR, %struct.GPR* %4588, i32 0, i32 5
  %4590 = getelementptr inbounds %struct.Reg, %struct.Reg* %4589, i32 0, i32 0
  %RCX.i651 = bitcast %union.anon* %4590 to i64*
  %4591 = load i64, i64* %PC.i650
  %4592 = add i64 %4591, 7
  store i64 %4592, i64* %PC.i650
  %4593 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %4594 = zext i32 %4593 to i64
  store i64 %4594, i64* %RCX.i651, align 8
  store %struct.Memory* %loadMem_400ee0, %struct.Memory** %MEMORY
  %loadMem_400ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4596 = getelementptr inbounds %struct.GPR, %struct.GPR* %4595, i32 0, i32 33
  %4597 = getelementptr inbounds %struct.Reg, %struct.Reg* %4596, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %4597 to i64*
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4599 = getelementptr inbounds %struct.GPR, %struct.GPR* %4598, i32 0, i32 5
  %4600 = getelementptr inbounds %struct.Reg, %struct.Reg* %4599, i32 0, i32 0
  %RCX.i649 = bitcast %union.anon* %4600 to i64*
  %4601 = load i64, i64* %RCX.i649
  %4602 = load i64, i64* %PC.i648
  %4603 = add i64 %4602, 7
  store i64 %4603, i64* %PC.i648
  %4604 = trunc i64 %4601 to i32
  %4605 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4606 = sub i32 %4604, %4605
  %4607 = zext i32 %4606 to i64
  store i64 %4607, i64* %RCX.i649, align 8
  %4608 = icmp ult i32 %4604, %4605
  %4609 = zext i1 %4608 to i8
  %4610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4609, i8* %4610, align 1
  %4611 = and i32 %4606, 255
  %4612 = call i32 @llvm.ctpop.i32(i32 %4611)
  %4613 = trunc i32 %4612 to i8
  %4614 = and i8 %4613, 1
  %4615 = xor i8 %4614, 1
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4615, i8* %4616, align 1
  %4617 = xor i32 %4605, %4604
  %4618 = xor i32 %4617, %4606
  %4619 = lshr i32 %4618, 4
  %4620 = trunc i32 %4619 to i8
  %4621 = and i8 %4620, 1
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4621, i8* %4622, align 1
  %4623 = icmp eq i32 %4606, 0
  %4624 = zext i1 %4623 to i8
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4624, i8* %4625, align 1
  %4626 = lshr i32 %4606, 31
  %4627 = trunc i32 %4626 to i8
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4627, i8* %4628, align 1
  %4629 = lshr i32 %4604, 31
  %4630 = lshr i32 %4605, 31
  %4631 = xor i32 %4630, %4629
  %4632 = xor i32 %4626, %4629
  %4633 = add i32 %4632, %4631
  %4634 = icmp eq i32 %4633, 2
  %4635 = zext i1 %4634 to i8
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4635, i8* %4636, align 1
  store %struct.Memory* %loadMem_400ee7, %struct.Memory** %MEMORY
  %loadMem_400eee = load %struct.Memory*, %struct.Memory** %MEMORY
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4638 = getelementptr inbounds %struct.GPR, %struct.GPR* %4637, i32 0, i32 33
  %4639 = getelementptr inbounds %struct.Reg, %struct.Reg* %4638, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %4639 to i64*
  %4640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4641 = getelementptr inbounds %struct.GPR, %struct.GPR* %4640, i32 0, i32 5
  %4642 = getelementptr inbounds %struct.Reg, %struct.Reg* %4641, i32 0, i32 0
  %ECX.i646 = bitcast %union.anon* %4642 to i32*
  %4643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4644 = getelementptr inbounds %struct.GPR, %struct.GPR* %4643, i32 0, i32 1
  %4645 = getelementptr inbounds %struct.Reg, %struct.Reg* %4644, i32 0, i32 0
  %RAX.i647 = bitcast %union.anon* %4645 to i64*
  %4646 = load i64, i64* %RAX.i647
  %4647 = load i32, i32* %ECX.i646
  %4648 = zext i32 %4647 to i64
  %4649 = load i64, i64* %PC.i645
  %4650 = add i64 %4649, 3
  store i64 %4650, i64* %PC.i645
  %4651 = shl i64 %4646, 32
  %4652 = ashr exact i64 %4651, 32
  %4653 = shl i64 %4648, 32
  %4654 = ashr exact i64 %4653, 32
  %4655 = mul i64 %4654, %4652
  %4656 = trunc i64 %4655 to i32
  %4657 = and i64 %4655, 4294967295
  store i64 %4657, i64* %RAX.i647, align 8
  %4658 = shl i64 %4655, 32
  %4659 = ashr exact i64 %4658, 32
  %4660 = icmp ne i64 %4659, %4655
  %4661 = zext i1 %4660 to i8
  %4662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4661, i8* %4662, align 1
  %4663 = and i32 %4656, 255
  %4664 = call i32 @llvm.ctpop.i32(i32 %4663)
  %4665 = trunc i32 %4664 to i8
  %4666 = and i8 %4665, 1
  %4667 = xor i8 %4666, 1
  %4668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4667, i8* %4668, align 1
  %4669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4669, align 1
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4670, align 1
  %4671 = lshr i32 %4656, 31
  %4672 = trunc i32 %4671 to i8
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4672, i8* %4673, align 1
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4661, i8* %4674, align 1
  store %struct.Memory* %loadMem_400eee, %struct.Memory** %MEMORY
  %loadMem_400ef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4676 = getelementptr inbounds %struct.GPR, %struct.GPR* %4675, i32 0, i32 33
  %4677 = getelementptr inbounds %struct.Reg, %struct.Reg* %4676, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %4677 to i64*
  %4678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4679 = getelementptr inbounds %struct.GPR, %struct.GPR* %4678, i32 0, i32 5
  %4680 = getelementptr inbounds %struct.Reg, %struct.Reg* %4679, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %4680 to i64*
  %4681 = load i64, i64* %PC.i643
  %4682 = add i64 %4681, 7
  store i64 %4682, i64* %PC.i643
  %4683 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %4684 = zext i32 %4683 to i64
  store i64 %4684, i64* %RCX.i644, align 8
  store %struct.Memory* %loadMem_400ef1, %struct.Memory** %MEMORY
  %loadMem_400ef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4686 = getelementptr inbounds %struct.GPR, %struct.GPR* %4685, i32 0, i32 33
  %4687 = getelementptr inbounds %struct.Reg, %struct.Reg* %4686, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %4687 to i64*
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4689 = getelementptr inbounds %struct.GPR, %struct.GPR* %4688, i32 0, i32 5
  %4690 = getelementptr inbounds %struct.Reg, %struct.Reg* %4689, i32 0, i32 0
  %RCX.i642 = bitcast %union.anon* %4690 to i64*
  %4691 = load i64, i64* %RCX.i642
  %4692 = load i64, i64* %PC.i641
  %4693 = add i64 %4692, 7
  store i64 %4693, i64* %PC.i641
  %4694 = trunc i64 %4691 to i32
  %4695 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %4696 = sub i32 %4694, %4695
  %4697 = zext i32 %4696 to i64
  store i64 %4697, i64* %RCX.i642, align 8
  %4698 = icmp ult i32 %4694, %4695
  %4699 = zext i1 %4698 to i8
  %4700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4699, i8* %4700, align 1
  %4701 = and i32 %4696, 255
  %4702 = call i32 @llvm.ctpop.i32(i32 %4701)
  %4703 = trunc i32 %4702 to i8
  %4704 = and i8 %4703, 1
  %4705 = xor i8 %4704, 1
  %4706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4705, i8* %4706, align 1
  %4707 = xor i32 %4695, %4694
  %4708 = xor i32 %4707, %4696
  %4709 = lshr i32 %4708, 4
  %4710 = trunc i32 %4709 to i8
  %4711 = and i8 %4710, 1
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4711, i8* %4712, align 1
  %4713 = icmp eq i32 %4696, 0
  %4714 = zext i1 %4713 to i8
  %4715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4714, i8* %4715, align 1
  %4716 = lshr i32 %4696, 31
  %4717 = trunc i32 %4716 to i8
  %4718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4717, i8* %4718, align 1
  %4719 = lshr i32 %4694, 31
  %4720 = lshr i32 %4695, 31
  %4721 = xor i32 %4720, %4719
  %4722 = xor i32 %4716, %4719
  %4723 = add i32 %4722, %4721
  %4724 = icmp eq i32 %4723, 2
  %4725 = zext i1 %4724 to i8
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4725, i8* %4726, align 1
  store %struct.Memory* %loadMem_400ef8, %struct.Memory** %MEMORY
  %loadMem_400eff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4728 = getelementptr inbounds %struct.GPR, %struct.GPR* %4727, i32 0, i32 33
  %4729 = getelementptr inbounds %struct.Reg, %struct.Reg* %4728, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %4729 to i64*
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4731 = getelementptr inbounds %struct.GPR, %struct.GPR* %4730, i32 0, i32 5
  %4732 = getelementptr inbounds %struct.Reg, %struct.Reg* %4731, i32 0, i32 0
  %ECX.i639 = bitcast %union.anon* %4732 to i32*
  %4733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4734 = getelementptr inbounds %struct.GPR, %struct.GPR* %4733, i32 0, i32 1
  %4735 = getelementptr inbounds %struct.Reg, %struct.Reg* %4734, i32 0, i32 0
  %RAX.i640 = bitcast %union.anon* %4735 to i64*
  %4736 = load i64, i64* %RAX.i640
  %4737 = load i32, i32* %ECX.i639
  %4738 = zext i32 %4737 to i64
  %4739 = load i64, i64* %PC.i638
  %4740 = add i64 %4739, 3
  store i64 %4740, i64* %PC.i638
  %4741 = shl i64 %4736, 32
  %4742 = ashr exact i64 %4741, 32
  %4743 = shl i64 %4738, 32
  %4744 = ashr exact i64 %4743, 32
  %4745 = mul i64 %4744, %4742
  %4746 = trunc i64 %4745 to i32
  %4747 = and i64 %4745, 4294967295
  store i64 %4747, i64* %RAX.i640, align 8
  %4748 = shl i64 %4745, 32
  %4749 = ashr exact i64 %4748, 32
  %4750 = icmp ne i64 %4749, %4745
  %4751 = zext i1 %4750 to i8
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4751, i8* %4752, align 1
  %4753 = and i32 %4746, 255
  %4754 = call i32 @llvm.ctpop.i32(i32 %4753)
  %4755 = trunc i32 %4754 to i8
  %4756 = and i8 %4755, 1
  %4757 = xor i8 %4756, 1
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4757, i8* %4758, align 1
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4759, align 1
  %4760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4760, align 1
  %4761 = lshr i32 %4746, 31
  %4762 = trunc i32 %4761 to i8
  %4763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4762, i8* %4763, align 1
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4751, i8* %4764, align 1
  store %struct.Memory* %loadMem_400eff, %struct.Memory** %MEMORY
  %loadMem_400f02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4766 = getelementptr inbounds %struct.GPR, %struct.GPR* %4765, i32 0, i32 33
  %4767 = getelementptr inbounds %struct.Reg, %struct.Reg* %4766, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %4767 to i64*
  %4768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4769 = getelementptr inbounds %struct.GPR, %struct.GPR* %4768, i32 0, i32 1
  %4770 = getelementptr inbounds %struct.Reg, %struct.Reg* %4769, i32 0, i32 0
  %EAX.i637 = bitcast %union.anon* %4770 to i32*
  %4771 = load i32, i32* %EAX.i637
  %4772 = zext i32 %4771 to i64
  %4773 = load i64, i64* %PC.i636
  %4774 = add i64 %4773, 7
  store i64 %4774, i64* %PC.i636
  store i32 %4771, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400f02, %struct.Memory** %MEMORY
  %loadMem_400f09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4776 = getelementptr inbounds %struct.GPR, %struct.GPR* %4775, i32 0, i32 33
  %4777 = getelementptr inbounds %struct.Reg, %struct.Reg* %4776, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %4777 to i64*
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4779 = getelementptr inbounds %struct.GPR, %struct.GPR* %4778, i32 0, i32 1
  %4780 = getelementptr inbounds %struct.Reg, %struct.Reg* %4779, i32 0, i32 0
  %RAX.i635 = bitcast %union.anon* %4780 to i64*
  %4781 = load i64, i64* %PC.i634
  %4782 = add i64 %4781, 7
  store i64 %4782, i64* %PC.i634
  %4783 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %4784 = zext i32 %4783 to i64
  store i64 %4784, i64* %RAX.i635, align 8
  store %struct.Memory* %loadMem_400f09, %struct.Memory** %MEMORY
  %loadMem_400f10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4786 = getelementptr inbounds %struct.GPR, %struct.GPR* %4785, i32 0, i32 33
  %4787 = getelementptr inbounds %struct.Reg, %struct.Reg* %4786, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %4787 to i64*
  %4788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4789 = getelementptr inbounds %struct.GPR, %struct.GPR* %4788, i32 0, i32 1
  %4790 = getelementptr inbounds %struct.Reg, %struct.Reg* %4789, i32 0, i32 0
  %RAX.i633 = bitcast %union.anon* %4790 to i64*
  %4791 = load i64, i64* %RAX.i633
  %4792 = load i64, i64* %PC.i632
  %4793 = add i64 %4792, 8
  store i64 %4793, i64* %PC.i632
  %4794 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %4795 = shl i64 %4791, 32
  %4796 = ashr exact i64 %4795, 32
  %4797 = sext i32 %4794 to i64
  %4798 = mul i64 %4797, %4796
  %4799 = trunc i64 %4798 to i32
  %4800 = and i64 %4798, 4294967295
  store i64 %4800, i64* %RAX.i633, align 8
  %4801 = shl i64 %4798, 32
  %4802 = ashr exact i64 %4801, 32
  %4803 = icmp ne i64 %4802, %4798
  %4804 = zext i1 %4803 to i8
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4804, i8* %4805, align 1
  %4806 = and i32 %4799, 255
  %4807 = call i32 @llvm.ctpop.i32(i32 %4806)
  %4808 = trunc i32 %4807 to i8
  %4809 = and i8 %4808, 1
  %4810 = xor i8 %4809, 1
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4810, i8* %4811, align 1
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4812, align 1
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4813, align 1
  %4814 = lshr i32 %4799, 31
  %4815 = trunc i32 %4814 to i8
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4815, i8* %4816, align 1
  %4817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4804, i8* %4817, align 1
  store %struct.Memory* %loadMem_400f10, %struct.Memory** %MEMORY
  %loadMem_400f18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4819 = getelementptr inbounds %struct.GPR, %struct.GPR* %4818, i32 0, i32 33
  %4820 = getelementptr inbounds %struct.Reg, %struct.Reg* %4819, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %4820 to i64*
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4822 = getelementptr inbounds %struct.GPR, %struct.GPR* %4821, i32 0, i32 5
  %4823 = getelementptr inbounds %struct.Reg, %struct.Reg* %4822, i32 0, i32 0
  %RCX.i631 = bitcast %union.anon* %4823 to i64*
  %4824 = load i64, i64* %PC.i630
  %4825 = add i64 %4824, 7
  store i64 %4825, i64* %PC.i630
  %4826 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %4827 = zext i32 %4826 to i64
  store i64 %4827, i64* %RCX.i631, align 8
  store %struct.Memory* %loadMem_400f18, %struct.Memory** %MEMORY
  %loadMem_400f1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4829 = getelementptr inbounds %struct.GPR, %struct.GPR* %4828, i32 0, i32 33
  %4830 = getelementptr inbounds %struct.Reg, %struct.Reg* %4829, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %4830 to i64*
  %4831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4832 = getelementptr inbounds %struct.GPR, %struct.GPR* %4831, i32 0, i32 5
  %4833 = getelementptr inbounds %struct.Reg, %struct.Reg* %4832, i32 0, i32 0
  %RCX.i629 = bitcast %union.anon* %4833 to i64*
  %4834 = load i64, i64* %RCX.i629
  %4835 = load i64, i64* %PC.i628
  %4836 = add i64 %4835, 7
  store i64 %4836, i64* %PC.i628
  %4837 = trunc i64 %4834 to i32
  %4838 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4839 = sub i32 %4837, %4838
  %4840 = zext i32 %4839 to i64
  store i64 %4840, i64* %RCX.i629, align 8
  %4841 = icmp ult i32 %4837, %4838
  %4842 = zext i1 %4841 to i8
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4842, i8* %4843, align 1
  %4844 = and i32 %4839, 255
  %4845 = call i32 @llvm.ctpop.i32(i32 %4844)
  %4846 = trunc i32 %4845 to i8
  %4847 = and i8 %4846, 1
  %4848 = xor i8 %4847, 1
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4848, i8* %4849, align 1
  %4850 = xor i32 %4838, %4837
  %4851 = xor i32 %4850, %4839
  %4852 = lshr i32 %4851, 4
  %4853 = trunc i32 %4852 to i8
  %4854 = and i8 %4853, 1
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4854, i8* %4855, align 1
  %4856 = icmp eq i32 %4839, 0
  %4857 = zext i1 %4856 to i8
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4857, i8* %4858, align 1
  %4859 = lshr i32 %4839, 31
  %4860 = trunc i32 %4859 to i8
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4860, i8* %4861, align 1
  %4862 = lshr i32 %4837, 31
  %4863 = lshr i32 %4838, 31
  %4864 = xor i32 %4863, %4862
  %4865 = xor i32 %4859, %4862
  %4866 = add i32 %4865, %4864
  %4867 = icmp eq i32 %4866, 2
  %4868 = zext i1 %4867 to i8
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4868, i8* %4869, align 1
  store %struct.Memory* %loadMem_400f1f, %struct.Memory** %MEMORY
  %loadMem_400f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4871 = getelementptr inbounds %struct.GPR, %struct.GPR* %4870, i32 0, i32 33
  %4872 = getelementptr inbounds %struct.Reg, %struct.Reg* %4871, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %4872 to i64*
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4874 = getelementptr inbounds %struct.GPR, %struct.GPR* %4873, i32 0, i32 5
  %4875 = getelementptr inbounds %struct.Reg, %struct.Reg* %4874, i32 0, i32 0
  %RCX.i627 = bitcast %union.anon* %4875 to i64*
  %4876 = load i64, i64* %RCX.i627
  %4877 = load i64, i64* %PC.i626
  %4878 = add i64 %4877, 8
  store i64 %4878, i64* %PC.i626
  %4879 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %4880 = shl i64 %4876, 32
  %4881 = ashr exact i64 %4880, 32
  %4882 = sext i32 %4879 to i64
  %4883 = mul i64 %4882, %4881
  %4884 = trunc i64 %4883 to i32
  %4885 = and i64 %4883, 4294967295
  store i64 %4885, i64* %RCX.i627, align 8
  %4886 = shl i64 %4883, 32
  %4887 = ashr exact i64 %4886, 32
  %4888 = icmp ne i64 %4887, %4883
  %4889 = zext i1 %4888 to i8
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4889, i8* %4890, align 1
  %4891 = and i32 %4884, 255
  %4892 = call i32 @llvm.ctpop.i32(i32 %4891)
  %4893 = trunc i32 %4892 to i8
  %4894 = and i8 %4893, 1
  %4895 = xor i8 %4894, 1
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4895, i8* %4896, align 1
  %4897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4897, align 1
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4898, align 1
  %4899 = lshr i32 %4884, 31
  %4900 = trunc i32 %4899 to i8
  %4901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4900, i8* %4901, align 1
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4889, i8* %4902, align 1
  store %struct.Memory* %loadMem_400f26, %struct.Memory** %MEMORY
  %loadMem_400f2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4904 = getelementptr inbounds %struct.GPR, %struct.GPR* %4903, i32 0, i32 33
  %4905 = getelementptr inbounds %struct.Reg, %struct.Reg* %4904, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %4905 to i64*
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4907 = getelementptr inbounds %struct.GPR, %struct.GPR* %4906, i32 0, i32 5
  %4908 = getelementptr inbounds %struct.Reg, %struct.Reg* %4907, i32 0, i32 0
  %ECX.i624 = bitcast %union.anon* %4908 to i32*
  %4909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4910 = getelementptr inbounds %struct.GPR, %struct.GPR* %4909, i32 0, i32 1
  %4911 = getelementptr inbounds %struct.Reg, %struct.Reg* %4910, i32 0, i32 0
  %RAX.i625 = bitcast %union.anon* %4911 to i64*
  %4912 = load i64, i64* %RAX.i625
  %4913 = load i32, i32* %ECX.i624
  %4914 = zext i32 %4913 to i64
  %4915 = load i64, i64* %PC.i623
  %4916 = add i64 %4915, 2
  store i64 %4916, i64* %PC.i623
  %4917 = trunc i64 %4912 to i32
  %4918 = sub i32 %4917, %4913
  %4919 = zext i32 %4918 to i64
  store i64 %4919, i64* %RAX.i625, align 8
  %4920 = icmp ult i32 %4917, %4913
  %4921 = zext i1 %4920 to i8
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4921, i8* %4922, align 1
  %4923 = and i32 %4918, 255
  %4924 = call i32 @llvm.ctpop.i32(i32 %4923)
  %4925 = trunc i32 %4924 to i8
  %4926 = and i8 %4925, 1
  %4927 = xor i8 %4926, 1
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4927, i8* %4928, align 1
  %4929 = xor i64 %4914, %4912
  %4930 = trunc i64 %4929 to i32
  %4931 = xor i32 %4930, %4918
  %4932 = lshr i32 %4931, 4
  %4933 = trunc i32 %4932 to i8
  %4934 = and i8 %4933, 1
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4934, i8* %4935, align 1
  %4936 = icmp eq i32 %4918, 0
  %4937 = zext i1 %4936 to i8
  %4938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4937, i8* %4938, align 1
  %4939 = lshr i32 %4918, 31
  %4940 = trunc i32 %4939 to i8
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4940, i8* %4941, align 1
  %4942 = lshr i32 %4917, 31
  %4943 = lshr i32 %4913, 31
  %4944 = xor i32 %4943, %4942
  %4945 = xor i32 %4939, %4942
  %4946 = add i32 %4945, %4944
  %4947 = icmp eq i32 %4946, 2
  %4948 = zext i1 %4947 to i8
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4948, i8* %4949, align 1
  store %struct.Memory* %loadMem_400f2e, %struct.Memory** %MEMORY
  %loadMem_400f30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4951 = getelementptr inbounds %struct.GPR, %struct.GPR* %4950, i32 0, i32 33
  %4952 = getelementptr inbounds %struct.Reg, %struct.Reg* %4951, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %4952 to i64*
  %4953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4954 = getelementptr inbounds %struct.GPR, %struct.GPR* %4953, i32 0, i32 1
  %4955 = getelementptr inbounds %struct.Reg, %struct.Reg* %4954, i32 0, i32 0
  %EAX.i622 = bitcast %union.anon* %4955 to i32*
  %4956 = load i32, i32* %EAX.i622
  %4957 = zext i32 %4956 to i64
  %4958 = load i64, i64* %PC.i621
  %4959 = add i64 %4958, 7
  store i64 %4959, i64* %PC.i621
  store i32 %4956, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_400f30, %struct.Memory** %MEMORY
  %loadMem_400f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 33
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %4962 to i64*
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 1
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %RAX.i620 = bitcast %union.anon* %4965 to i64*
  %4966 = load i64, i64* %PC.i619
  %4967 = add i64 %4966, 7
  store i64 %4967, i64* %PC.i619
  %4968 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %4969 = zext i32 %4968 to i64
  store i64 %4969, i64* %RAX.i620, align 8
  store %struct.Memory* %loadMem_400f37, %struct.Memory** %MEMORY
  %loadMem_400f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4971 = getelementptr inbounds %struct.GPR, %struct.GPR* %4970, i32 0, i32 33
  %4972 = getelementptr inbounds %struct.Reg, %struct.Reg* %4971, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %4972 to i64*
  %4973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4974 = getelementptr inbounds %struct.GPR, %struct.GPR* %4973, i32 0, i32 1
  %4975 = getelementptr inbounds %struct.Reg, %struct.Reg* %4974, i32 0, i32 0
  %RAX.i618 = bitcast %union.anon* %4975 to i64*
  %4976 = load i64, i64* %RAX.i618
  %4977 = load i64, i64* %PC.i617
  %4978 = add i64 %4977, 7
  store i64 %4978, i64* %PC.i617
  %4979 = trunc i64 %4976 to i32
  %4980 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %4981 = sub i32 %4979, %4980
  %4982 = zext i32 %4981 to i64
  store i64 %4982, i64* %RAX.i618, align 8
  %4983 = icmp ult i32 %4979, %4980
  %4984 = zext i1 %4983 to i8
  %4985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4984, i8* %4985, align 1
  %4986 = and i32 %4981, 255
  %4987 = call i32 @llvm.ctpop.i32(i32 %4986)
  %4988 = trunc i32 %4987 to i8
  %4989 = and i8 %4988, 1
  %4990 = xor i8 %4989, 1
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4990, i8* %4991, align 1
  %4992 = xor i32 %4980, %4979
  %4993 = xor i32 %4992, %4981
  %4994 = lshr i32 %4993, 4
  %4995 = trunc i32 %4994 to i8
  %4996 = and i8 %4995, 1
  %4997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4996, i8* %4997, align 1
  %4998 = icmp eq i32 %4981, 0
  %4999 = zext i1 %4998 to i8
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4999, i8* %5000, align 1
  %5001 = lshr i32 %4981, 31
  %5002 = trunc i32 %5001 to i8
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5002, i8* %5003, align 1
  %5004 = lshr i32 %4979, 31
  %5005 = lshr i32 %4980, 31
  %5006 = xor i32 %5005, %5004
  %5007 = xor i32 %5001, %5004
  %5008 = add i32 %5007, %5006
  %5009 = icmp eq i32 %5008, 2
  %5010 = zext i1 %5009 to i8
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5010, i8* %5011, align 1
  store %struct.Memory* %loadMem_400f3e, %struct.Memory** %MEMORY
  %loadMem_400f45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5013 = getelementptr inbounds %struct.GPR, %struct.GPR* %5012, i32 0, i32 33
  %5014 = getelementptr inbounds %struct.Reg, %struct.Reg* %5013, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %5014 to i64*
  %5015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5016 = getelementptr inbounds %struct.GPR, %struct.GPR* %5015, i32 0, i32 5
  %5017 = getelementptr inbounds %struct.Reg, %struct.Reg* %5016, i32 0, i32 0
  %RCX.i616 = bitcast %union.anon* %5017 to i64*
  %5018 = load i64, i64* %PC.i615
  %5019 = add i64 %5018, 7
  store i64 %5019, i64* %PC.i615
  %5020 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %5021 = zext i32 %5020 to i64
  store i64 %5021, i64* %RCX.i616, align 8
  store %struct.Memory* %loadMem_400f45, %struct.Memory** %MEMORY
  %loadMem_400f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 33
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %5024 to i64*
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5026 = getelementptr inbounds %struct.GPR, %struct.GPR* %5025, i32 0, i32 5
  %5027 = getelementptr inbounds %struct.Reg, %struct.Reg* %5026, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %5027 to i64*
  %5028 = load i64, i64* %RCX.i
  %5029 = load i64, i64* %PC.i614
  %5030 = add i64 %5029, 7
  store i64 %5030, i64* %PC.i614
  %5031 = trunc i64 %5028 to i32
  %5032 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %5033 = add i32 %5032, %5031
  %5034 = zext i32 %5033 to i64
  store i64 %5034, i64* %RCX.i, align 8
  %5035 = icmp ult i32 %5033, %5031
  %5036 = icmp ult i32 %5033, %5032
  %5037 = or i1 %5035, %5036
  %5038 = zext i1 %5037 to i8
  %5039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5038, i8* %5039, align 1
  %5040 = and i32 %5033, 255
  %5041 = call i32 @llvm.ctpop.i32(i32 %5040)
  %5042 = trunc i32 %5041 to i8
  %5043 = and i8 %5042, 1
  %5044 = xor i8 %5043, 1
  %5045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5044, i8* %5045, align 1
  %5046 = xor i32 %5032, %5031
  %5047 = xor i32 %5046, %5033
  %5048 = lshr i32 %5047, 4
  %5049 = trunc i32 %5048 to i8
  %5050 = and i8 %5049, 1
  %5051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5050, i8* %5051, align 1
  %5052 = icmp eq i32 %5033, 0
  %5053 = zext i1 %5052 to i8
  %5054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5053, i8* %5054, align 1
  %5055 = lshr i32 %5033, 31
  %5056 = trunc i32 %5055 to i8
  %5057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5056, i8* %5057, align 1
  %5058 = lshr i32 %5031, 31
  %5059 = lshr i32 %5032, 31
  %5060 = xor i32 %5055, %5058
  %5061 = xor i32 %5055, %5059
  %5062 = add i32 %5060, %5061
  %5063 = icmp eq i32 %5062, 2
  %5064 = zext i1 %5063 to i8
  %5065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5064, i8* %5065, align 1
  store %struct.Memory* %loadMem_400f4c, %struct.Memory** %MEMORY
  %loadMem_400f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5067 = getelementptr inbounds %struct.GPR, %struct.GPR* %5066, i32 0, i32 33
  %5068 = getelementptr inbounds %struct.Reg, %struct.Reg* %5067, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %5068 to i64*
  %5069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5070 = getelementptr inbounds %struct.GPR, %struct.GPR* %5069, i32 0, i32 5
  %5071 = getelementptr inbounds %struct.Reg, %struct.Reg* %5070, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %5071 to i32*
  %5072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5073 = getelementptr inbounds %struct.GPR, %struct.GPR* %5072, i32 0, i32 1
  %5074 = getelementptr inbounds %struct.Reg, %struct.Reg* %5073, i32 0, i32 0
  %RAX.i613 = bitcast %union.anon* %5074 to i64*
  %5075 = load i64, i64* %RAX.i613
  %5076 = load i32, i32* %ECX.i
  %5077 = zext i32 %5076 to i64
  %5078 = load i64, i64* %PC.i612
  %5079 = add i64 %5078, 3
  store i64 %5079, i64* %PC.i612
  %5080 = shl i64 %5075, 32
  %5081 = ashr exact i64 %5080, 32
  %5082 = shl i64 %5077, 32
  %5083 = ashr exact i64 %5082, 32
  %5084 = mul i64 %5083, %5081
  %5085 = trunc i64 %5084 to i32
  %5086 = and i64 %5084, 4294967295
  store i64 %5086, i64* %RAX.i613, align 8
  %5087 = shl i64 %5084, 32
  %5088 = ashr exact i64 %5087, 32
  %5089 = icmp ne i64 %5088, %5084
  %5090 = zext i1 %5089 to i8
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5090, i8* %5091, align 1
  %5092 = and i32 %5085, 255
  %5093 = call i32 @llvm.ctpop.i32(i32 %5092)
  %5094 = trunc i32 %5093 to i8
  %5095 = and i8 %5094, 1
  %5096 = xor i8 %5095, 1
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5096, i8* %5097, align 1
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5098, align 1
  %5099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5099, align 1
  %5100 = lshr i32 %5085, 31
  %5101 = trunc i32 %5100 to i8
  %5102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5101, i8* %5102, align 1
  %5103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5090, i8* %5103, align 1
  store %struct.Memory* %loadMem_400f53, %struct.Memory** %MEMORY
  %loadMem_400f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5105 = getelementptr inbounds %struct.GPR, %struct.GPR* %5104, i32 0, i32 33
  %5106 = getelementptr inbounds %struct.Reg, %struct.Reg* %5105, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %5106 to i64*
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5108 = getelementptr inbounds %struct.GPR, %struct.GPR* %5107, i32 0, i32 1
  %5109 = getelementptr inbounds %struct.Reg, %struct.Reg* %5108, i32 0, i32 0
  %EAX.i611 = bitcast %union.anon* %5109 to i32*
  %5110 = load i32, i32* %EAX.i611
  %5111 = zext i32 %5110 to i64
  %5112 = load i64, i64* %PC.i610
  %5113 = add i64 %5112, 7
  store i64 %5113, i64* %PC.i610
  store i32 %5110, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  store %struct.Memory* %loadMem_400f56, %struct.Memory** %MEMORY
  %loadMem_400f5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5115 = getelementptr inbounds %struct.GPR, %struct.GPR* %5114, i32 0, i32 33
  %5116 = getelementptr inbounds %struct.Reg, %struct.Reg* %5115, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %5116 to i64*
  %5117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5118 = getelementptr inbounds %struct.GPR, %struct.GPR* %5117, i32 0, i32 1
  %5119 = getelementptr inbounds %struct.Reg, %struct.Reg* %5118, i32 0, i32 0
  %RAX.i609 = bitcast %union.anon* %5119 to i64*
  %5120 = load i64, i64* %PC.i608
  %5121 = add i64 %5120, 7
  store i64 %5121, i64* %PC.i608
  %5122 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %5123 = zext i32 %5122 to i64
  store i64 %5123, i64* %RAX.i609, align 8
  store %struct.Memory* %loadMem_400f5d, %struct.Memory** %MEMORY
  %loadMem_400f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5125 = getelementptr inbounds %struct.GPR, %struct.GPR* %5124, i32 0, i32 33
  %5126 = getelementptr inbounds %struct.Reg, %struct.Reg* %5125, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %5126 to i64*
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5128 = getelementptr inbounds %struct.GPR, %struct.GPR* %5127, i32 0, i32 1
  %5129 = getelementptr inbounds %struct.Reg, %struct.Reg* %5128, i32 0, i32 0
  %RAX.i607 = bitcast %union.anon* %5129 to i64*
  %5130 = load i64, i64* %RAX.i607
  %5131 = load i64, i64* %PC.i606
  %5132 = add i64 %5131, 7
  store i64 %5132, i64* %PC.i606
  %5133 = trunc i64 %5130 to i32
  %5134 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %5135 = add i32 %5134, %5133
  %5136 = zext i32 %5135 to i64
  store i64 %5136, i64* %RAX.i607, align 8
  %5137 = icmp ult i32 %5135, %5133
  %5138 = icmp ult i32 %5135, %5134
  %5139 = or i1 %5137, %5138
  %5140 = zext i1 %5139 to i8
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5140, i8* %5141, align 1
  %5142 = and i32 %5135, 255
  %5143 = call i32 @llvm.ctpop.i32(i32 %5142)
  %5144 = trunc i32 %5143 to i8
  %5145 = and i8 %5144, 1
  %5146 = xor i8 %5145, 1
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5146, i8* %5147, align 1
  %5148 = xor i32 %5134, %5133
  %5149 = xor i32 %5148, %5135
  %5150 = lshr i32 %5149, 4
  %5151 = trunc i32 %5150 to i8
  %5152 = and i8 %5151, 1
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5152, i8* %5153, align 1
  %5154 = icmp eq i32 %5135, 0
  %5155 = zext i1 %5154 to i8
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5155, i8* %5156, align 1
  %5157 = lshr i32 %5135, 31
  %5158 = trunc i32 %5157 to i8
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5158, i8* %5159, align 1
  %5160 = lshr i32 %5133, 31
  %5161 = lshr i32 %5134, 31
  %5162 = xor i32 %5157, %5160
  %5163 = xor i32 %5157, %5161
  %5164 = add i32 %5162, %5163
  %5165 = icmp eq i32 %5164, 2
  %5166 = zext i1 %5165 to i8
  %5167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5166, i8* %5167, align 1
  store %struct.Memory* %loadMem_400f64, %struct.Memory** %MEMORY
  %loadMem_400f6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5169 = getelementptr inbounds %struct.GPR, %struct.GPR* %5168, i32 0, i32 33
  %5170 = getelementptr inbounds %struct.Reg, %struct.Reg* %5169, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %5170 to i64*
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5172 = getelementptr inbounds %struct.GPR, %struct.GPR* %5171, i32 0, i32 1
  %5173 = getelementptr inbounds %struct.Reg, %struct.Reg* %5172, i32 0, i32 0
  %RAX.i605 = bitcast %union.anon* %5173 to i64*
  %5174 = load i64, i64* %RAX.i605
  %5175 = load i64, i64* %PC.i604
  %5176 = add i64 %5175, 7
  store i64 %5176, i64* %PC.i604
  %5177 = trunc i64 %5174 to i32
  %5178 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %5179 = add i32 %5178, %5177
  %5180 = zext i32 %5179 to i64
  store i64 %5180, i64* %RAX.i605, align 8
  %5181 = icmp ult i32 %5179, %5177
  %5182 = icmp ult i32 %5179, %5178
  %5183 = or i1 %5181, %5182
  %5184 = zext i1 %5183 to i8
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5184, i8* %5185, align 1
  %5186 = and i32 %5179, 255
  %5187 = call i32 @llvm.ctpop.i32(i32 %5186)
  %5188 = trunc i32 %5187 to i8
  %5189 = and i8 %5188, 1
  %5190 = xor i8 %5189, 1
  %5191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5190, i8* %5191, align 1
  %5192 = xor i32 %5178, %5177
  %5193 = xor i32 %5192, %5179
  %5194 = lshr i32 %5193, 4
  %5195 = trunc i32 %5194 to i8
  %5196 = and i8 %5195, 1
  %5197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5196, i8* %5197, align 1
  %5198 = icmp eq i32 %5179, 0
  %5199 = zext i1 %5198 to i8
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5199, i8* %5200, align 1
  %5201 = lshr i32 %5179, 31
  %5202 = trunc i32 %5201 to i8
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5202, i8* %5203, align 1
  %5204 = lshr i32 %5177, 31
  %5205 = lshr i32 %5178, 31
  %5206 = xor i32 %5201, %5204
  %5207 = xor i32 %5201, %5205
  %5208 = add i32 %5206, %5207
  %5209 = icmp eq i32 %5208, 2
  %5210 = zext i1 %5209 to i8
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5210, i8* %5211, align 1
  store %struct.Memory* %loadMem_400f6b, %struct.Memory** %MEMORY
  %loadMem_400f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5213 = getelementptr inbounds %struct.GPR, %struct.GPR* %5212, i32 0, i32 33
  %5214 = getelementptr inbounds %struct.Reg, %struct.Reg* %5213, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %5214 to i64*
  %5215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5216 = getelementptr inbounds %struct.GPR, %struct.GPR* %5215, i32 0, i32 1
  %5217 = getelementptr inbounds %struct.Reg, %struct.Reg* %5216, i32 0, i32 0
  %EAX.i602 = bitcast %union.anon* %5217 to i32*
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5219 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5218, i64 0, i64 0
  %YMM0.i603 = bitcast %union.VectorReg* %5219 to %"class.std::bitset"*
  %5220 = bitcast %"class.std::bitset"* %YMM0.i603 to i8*
  %5221 = load i32, i32* %EAX.i602
  %5222 = zext i32 %5221 to i64
  %5223 = load i64, i64* %PC.i601
  %5224 = add i64 %5223, 4
  store i64 %5224, i64* %PC.i601
  %5225 = sitofp i32 %5221 to double
  %5226 = bitcast i8* %5220 to double*
  store double %5225, double* %5226, align 1
  store %struct.Memory* %loadMem_400f72, %struct.Memory** %MEMORY
  %loadMem_400f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5228 = getelementptr inbounds %struct.GPR, %struct.GPR* %5227, i32 0, i32 33
  %5229 = getelementptr inbounds %struct.Reg, %struct.Reg* %5228, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %5229 to i64*
  %5230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5231 = getelementptr inbounds %struct.GPR, %struct.GPR* %5230, i32 0, i32 1
  %5232 = getelementptr inbounds %struct.Reg, %struct.Reg* %5231, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %5232 to i64*
  %5233 = load i64, i64* %PC.i599
  %5234 = add i64 %5233, 7
  store i64 %5234, i64* %PC.i599
  %5235 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %5236 = zext i32 %5235 to i64
  store i64 %5236, i64* %RAX.i600, align 8
  store %struct.Memory* %loadMem_400f76, %struct.Memory** %MEMORY
  %loadMem_400f7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5238 = getelementptr inbounds %struct.GPR, %struct.GPR* %5237, i32 0, i32 33
  %5239 = getelementptr inbounds %struct.Reg, %struct.Reg* %5238, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %5239 to i64*
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5241 = getelementptr inbounds %struct.GPR, %struct.GPR* %5240, i32 0, i32 1
  %5242 = getelementptr inbounds %struct.Reg, %struct.Reg* %5241, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %5242 to i64*
  %5243 = load i64, i64* %RAX.i598
  %5244 = load i64, i64* %PC.i597
  %5245 = add i64 %5244, 3
  store i64 %5245, i64* %PC.i597
  %5246 = trunc i64 %5243 to i32
  %5247 = sub i32 %5246, 1
  %5248 = zext i32 %5247 to i64
  store i64 %5248, i64* %RAX.i598, align 8
  %5249 = icmp ult i32 %5246, 1
  %5250 = zext i1 %5249 to i8
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5250, i8* %5251, align 1
  %5252 = and i32 %5247, 255
  %5253 = call i32 @llvm.ctpop.i32(i32 %5252)
  %5254 = trunc i32 %5253 to i8
  %5255 = and i8 %5254, 1
  %5256 = xor i8 %5255, 1
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5256, i8* %5257, align 1
  %5258 = xor i64 1, %5243
  %5259 = trunc i64 %5258 to i32
  %5260 = xor i32 %5259, %5247
  %5261 = lshr i32 %5260, 4
  %5262 = trunc i32 %5261 to i8
  %5263 = and i8 %5262, 1
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5263, i8* %5264, align 1
  %5265 = icmp eq i32 %5247, 0
  %5266 = zext i1 %5265 to i8
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5266, i8* %5267, align 1
  %5268 = lshr i32 %5247, 31
  %5269 = trunc i32 %5268 to i8
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5269, i8* %5270, align 1
  %5271 = lshr i32 %5246, 31
  %5272 = xor i32 %5268, %5271
  %5273 = add i32 %5272, %5271
  %5274 = icmp eq i32 %5273, 2
  %5275 = zext i1 %5274 to i8
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5275, i8* %5276, align 1
  store %struct.Memory* %loadMem_400f7d, %struct.Memory** %MEMORY
  %loadMem_400f80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5278 = getelementptr inbounds %struct.GPR, %struct.GPR* %5277, i32 0, i32 33
  %5279 = getelementptr inbounds %struct.Reg, %struct.Reg* %5278, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %5279 to i64*
  %5280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5281 = getelementptr inbounds %struct.GPR, %struct.GPR* %5280, i32 0, i32 1
  %5282 = getelementptr inbounds %struct.Reg, %struct.Reg* %5281, i32 0, i32 0
  %EAX.i595 = bitcast %union.anon* %5282 to i32*
  %5283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5284 = getelementptr inbounds %struct.GPR, %struct.GPR* %5283, i32 0, i32 7
  %5285 = getelementptr inbounds %struct.Reg, %struct.Reg* %5284, i32 0, i32 0
  %RDX.i596 = bitcast %union.anon* %5285 to i64*
  %5286 = load i32, i32* %EAX.i595
  %5287 = zext i32 %5286 to i64
  %5288 = load i64, i64* %PC.i594
  %5289 = add i64 %5288, 3
  store i64 %5289, i64* %PC.i594
  %5290 = shl i64 %5287, 32
  %5291 = ashr exact i64 %5290, 32
  store i64 %5291, i64* %RDX.i596, align 8
  store %struct.Memory* %loadMem_400f80, %struct.Memory** %MEMORY
  %loadMem_400f83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5293 = getelementptr inbounds %struct.GPR, %struct.GPR* %5292, i32 0, i32 33
  %5294 = getelementptr inbounds %struct.Reg, %struct.Reg* %5293, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %5294 to i64*
  %5295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5296 = getelementptr inbounds %struct.GPR, %struct.GPR* %5295, i32 0, i32 7
  %5297 = getelementptr inbounds %struct.Reg, %struct.Reg* %5296, i32 0, i32 0
  %RDX.i592 = bitcast %union.anon* %5297 to i64*
  %5298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5298, i64 0, i64 0
  %XMM0.i593 = bitcast %union.VectorReg* %5299 to %union.vec128_t*
  %5300 = load i64, i64* %RDX.i592
  %5301 = mul i64 %5300, 8
  %5302 = add i64 %5301, 6299840
  %5303 = bitcast %union.vec128_t* %XMM0.i593 to i8*
  %5304 = load i64, i64* %PC.i591
  %5305 = add i64 %5304, 9
  store i64 %5305, i64* %PC.i591
  %5306 = bitcast i8* %5303 to double*
  %5307 = load double, double* %5306, align 1
  %5308 = inttoptr i64 %5302 to double*
  store double %5307, double* %5308
  store %struct.Memory* %loadMem_400f83, %struct.Memory** %MEMORY
  %loadMem_400f8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5310 = getelementptr inbounds %struct.GPR, %struct.GPR* %5309, i32 0, i32 33
  %5311 = getelementptr inbounds %struct.Reg, %struct.Reg* %5310, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %5311 to i64*
  %5312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5313 = getelementptr inbounds %struct.GPR, %struct.GPR* %5312, i32 0, i32 1
  %5314 = getelementptr inbounds %struct.Reg, %struct.Reg* %5313, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %5314 to i64*
  %5315 = load i64, i64* %PC.i589
  %5316 = add i64 %5315, 7
  store i64 %5316, i64* %PC.i589
  %5317 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %5318 = zext i32 %5317 to i64
  store i64 %5318, i64* %RAX.i590, align 8
  store %struct.Memory* %loadMem_400f8c, %struct.Memory** %MEMORY
  %loadMem_400f93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5320 = getelementptr inbounds %struct.GPR, %struct.GPR* %5319, i32 0, i32 33
  %5321 = getelementptr inbounds %struct.Reg, %struct.Reg* %5320, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %5321 to i64*
  %5322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5323 = getelementptr inbounds %struct.GPR, %struct.GPR* %5322, i32 0, i32 1
  %5324 = getelementptr inbounds %struct.Reg, %struct.Reg* %5323, i32 0, i32 0
  %RAX.i588 = bitcast %union.anon* %5324 to i64*
  %5325 = load i64, i64* %RAX.i588
  %5326 = load i64, i64* %PC.i587
  %5327 = add i64 %5326, 8
  store i64 %5327, i64* %PC.i587
  %5328 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %5329 = shl i64 %5325, 32
  %5330 = ashr exact i64 %5329, 32
  %5331 = sext i32 %5328 to i64
  %5332 = mul i64 %5331, %5330
  %5333 = trunc i64 %5332 to i32
  %5334 = and i64 %5332, 4294967295
  store i64 %5334, i64* %RAX.i588, align 8
  %5335 = shl i64 %5332, 32
  %5336 = ashr exact i64 %5335, 32
  %5337 = icmp ne i64 %5336, %5332
  %5338 = zext i1 %5337 to i8
  %5339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5338, i8* %5339, align 1
  %5340 = and i32 %5333, 255
  %5341 = call i32 @llvm.ctpop.i32(i32 %5340)
  %5342 = trunc i32 %5341 to i8
  %5343 = and i8 %5342, 1
  %5344 = xor i8 %5343, 1
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5344, i8* %5345, align 1
  %5346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5346, align 1
  %5347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5347, align 1
  %5348 = lshr i32 %5333, 31
  %5349 = trunc i32 %5348 to i8
  %5350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5349, i8* %5350, align 1
  %5351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5338, i8* %5351, align 1
  store %struct.Memory* %loadMem_400f93, %struct.Memory** %MEMORY
  %loadMem_400f9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5353 = getelementptr inbounds %struct.GPR, %struct.GPR* %5352, i32 0, i32 33
  %5354 = getelementptr inbounds %struct.Reg, %struct.Reg* %5353, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %5354 to i64*
  %5355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5356 = getelementptr inbounds %struct.GPR, %struct.GPR* %5355, i32 0, i32 1
  %5357 = getelementptr inbounds %struct.Reg, %struct.Reg* %5356, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %5357 to i64*
  %5358 = load i64, i64* %RAX.i586
  %5359 = load i64, i64* %PC.i585
  %5360 = add i64 %5359, 8
  store i64 %5360, i64* %PC.i585
  %5361 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %5362 = shl i64 %5358, 32
  %5363 = ashr exact i64 %5362, 32
  %5364 = sext i32 %5361 to i64
  %5365 = mul i64 %5364, %5363
  %5366 = trunc i64 %5365 to i32
  %5367 = and i64 %5365, 4294967295
  store i64 %5367, i64* %RAX.i586, align 8
  %5368 = shl i64 %5365, 32
  %5369 = ashr exact i64 %5368, 32
  %5370 = icmp ne i64 %5369, %5365
  %5371 = zext i1 %5370 to i8
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5371, i8* %5372, align 1
  %5373 = and i32 %5366, 255
  %5374 = call i32 @llvm.ctpop.i32(i32 %5373)
  %5375 = trunc i32 %5374 to i8
  %5376 = and i8 %5375, 1
  %5377 = xor i8 %5376, 1
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5377, i8* %5378, align 1
  %5379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5379, align 1
  %5380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5380, align 1
  %5381 = lshr i32 %5366, 31
  %5382 = trunc i32 %5381 to i8
  %5383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5382, i8* %5383, align 1
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5371, i8* %5384, align 1
  store %struct.Memory* %loadMem_400f9b, %struct.Memory** %MEMORY
  %loadMem_400fa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5386 = getelementptr inbounds %struct.GPR, %struct.GPR* %5385, i32 0, i32 33
  %5387 = getelementptr inbounds %struct.Reg, %struct.Reg* %5386, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %5387 to i64*
  %5388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5389 = getelementptr inbounds %struct.GPR, %struct.GPR* %5388, i32 0, i32 1
  %5390 = getelementptr inbounds %struct.Reg, %struct.Reg* %5389, i32 0, i32 0
  %EAX.i583 = bitcast %union.anon* %5390 to i32*
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5392 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5391, i64 0, i64 0
  %YMM0.i584 = bitcast %union.VectorReg* %5392 to %"class.std::bitset"*
  %5393 = bitcast %"class.std::bitset"* %YMM0.i584 to i8*
  %5394 = load i32, i32* %EAX.i583
  %5395 = zext i32 %5394 to i64
  %5396 = load i64, i64* %PC.i582
  %5397 = add i64 %5396, 4
  store i64 %5397, i64* %PC.i582
  %5398 = sitofp i32 %5394 to double
  %5399 = bitcast i8* %5393 to double*
  store double %5398, double* %5399, align 1
  store %struct.Memory* %loadMem_400fa3, %struct.Memory** %MEMORY
  %loadMem_400fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5401 = getelementptr inbounds %struct.GPR, %struct.GPR* %5400, i32 0, i32 33
  %5402 = getelementptr inbounds %struct.Reg, %struct.Reg* %5401, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %5402 to i64*
  %5403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5404 = getelementptr inbounds %struct.GPR, %struct.GPR* %5403, i32 0, i32 1
  %5405 = getelementptr inbounds %struct.Reg, %struct.Reg* %5404, i32 0, i32 0
  %RAX.i581 = bitcast %union.anon* %5405 to i64*
  %5406 = load i64, i64* %PC.i580
  %5407 = add i64 %5406, 7
  store i64 %5407, i64* %PC.i580
  %5408 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %5409 = zext i32 %5408 to i64
  store i64 %5409, i64* %RAX.i581, align 8
  store %struct.Memory* %loadMem_400fa7, %struct.Memory** %MEMORY
  %loadMem_400fae = load %struct.Memory*, %struct.Memory** %MEMORY
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5411 = getelementptr inbounds %struct.GPR, %struct.GPR* %5410, i32 0, i32 33
  %5412 = getelementptr inbounds %struct.Reg, %struct.Reg* %5411, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %5412 to i64*
  %5413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5414 = getelementptr inbounds %struct.GPR, %struct.GPR* %5413, i32 0, i32 1
  %5415 = getelementptr inbounds %struct.Reg, %struct.Reg* %5414, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %5415 to i64*
  %5416 = load i64, i64* %RAX.i579
  %5417 = load i64, i64* %PC.i578
  %5418 = add i64 %5417, 3
  store i64 %5418, i64* %PC.i578
  %5419 = trunc i64 %5416 to i32
  %5420 = sub i32 %5419, 1
  %5421 = zext i32 %5420 to i64
  store i64 %5421, i64* %RAX.i579, align 8
  %5422 = icmp ult i32 %5419, 1
  %5423 = zext i1 %5422 to i8
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5423, i8* %5424, align 1
  %5425 = and i32 %5420, 255
  %5426 = call i32 @llvm.ctpop.i32(i32 %5425)
  %5427 = trunc i32 %5426 to i8
  %5428 = and i8 %5427, 1
  %5429 = xor i8 %5428, 1
  %5430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5429, i8* %5430, align 1
  %5431 = xor i64 1, %5416
  %5432 = trunc i64 %5431 to i32
  %5433 = xor i32 %5432, %5420
  %5434 = lshr i32 %5433, 4
  %5435 = trunc i32 %5434 to i8
  %5436 = and i8 %5435, 1
  %5437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5436, i8* %5437, align 1
  %5438 = icmp eq i32 %5420, 0
  %5439 = zext i1 %5438 to i8
  %5440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5439, i8* %5440, align 1
  %5441 = lshr i32 %5420, 31
  %5442 = trunc i32 %5441 to i8
  %5443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5442, i8* %5443, align 1
  %5444 = lshr i32 %5419, 31
  %5445 = xor i32 %5441, %5444
  %5446 = add i32 %5445, %5444
  %5447 = icmp eq i32 %5446, 2
  %5448 = zext i1 %5447 to i8
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5448, i8* %5449, align 1
  store %struct.Memory* %loadMem_400fae, %struct.Memory** %MEMORY
  %loadMem_400fb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5451 = getelementptr inbounds %struct.GPR, %struct.GPR* %5450, i32 0, i32 33
  %5452 = getelementptr inbounds %struct.Reg, %struct.Reg* %5451, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %5452 to i64*
  %5453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5454 = getelementptr inbounds %struct.GPR, %struct.GPR* %5453, i32 0, i32 1
  %5455 = getelementptr inbounds %struct.Reg, %struct.Reg* %5454, i32 0, i32 0
  %EAX.i576 = bitcast %union.anon* %5455 to i32*
  %5456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5457 = getelementptr inbounds %struct.GPR, %struct.GPR* %5456, i32 0, i32 7
  %5458 = getelementptr inbounds %struct.Reg, %struct.Reg* %5457, i32 0, i32 0
  %RDX.i577 = bitcast %union.anon* %5458 to i64*
  %5459 = load i32, i32* %EAX.i576
  %5460 = zext i32 %5459 to i64
  %5461 = load i64, i64* %PC.i575
  %5462 = add i64 %5461, 3
  store i64 %5462, i64* %PC.i575
  %5463 = shl i64 %5460, 32
  %5464 = ashr exact i64 %5463, 32
  store i64 %5464, i64* %RDX.i577, align 8
  store %struct.Memory* %loadMem_400fb1, %struct.Memory** %MEMORY
  %loadMem_400fb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5466 = getelementptr inbounds %struct.GPR, %struct.GPR* %5465, i32 0, i32 33
  %5467 = getelementptr inbounds %struct.Reg, %struct.Reg* %5466, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %5467 to i64*
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5469 = getelementptr inbounds %struct.GPR, %struct.GPR* %5468, i32 0, i32 7
  %5470 = getelementptr inbounds %struct.Reg, %struct.Reg* %5469, i32 0, i32 0
  %RDX.i573 = bitcast %union.anon* %5470 to i64*
  %5471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5472 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5471, i64 0, i64 0
  %XMM0.i574 = bitcast %union.VectorReg* %5472 to %union.vec128_t*
  %5473 = load i64, i64* %RDX.i573
  %5474 = mul i64 %5473, 8
  %5475 = add i64 %5474, 6299840
  %5476 = bitcast %union.vec128_t* %XMM0.i574 to i8*
  %5477 = load i64, i64* %PC.i572
  %5478 = add i64 %5477, 9
  store i64 %5478, i64* %PC.i572
  %5479 = bitcast i8* %5476 to double*
  %5480 = load double, double* %5479, align 1
  %5481 = inttoptr i64 %5475 to double*
  store double %5480, double* %5481
  store %struct.Memory* %loadMem_400fb4, %struct.Memory** %MEMORY
  %loadMem_400fbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5483 = getelementptr inbounds %struct.GPR, %struct.GPR* %5482, i32 0, i32 33
  %5484 = getelementptr inbounds %struct.Reg, %struct.Reg* %5483, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %5484 to i64*
  %5485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5486 = getelementptr inbounds %struct.GPR, %struct.GPR* %5485, i32 0, i32 1
  %5487 = getelementptr inbounds %struct.Reg, %struct.Reg* %5486, i32 0, i32 0
  %RAX.i570 = bitcast %union.anon* %5487 to i64*
  %5488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5489 = getelementptr inbounds %struct.GPR, %struct.GPR* %5488, i32 0, i32 15
  %5490 = getelementptr inbounds %struct.Reg, %struct.Reg* %5489, i32 0, i32 0
  %RBP.i571 = bitcast %union.anon* %5490 to i64*
  %5491 = load i64, i64* %RBP.i571
  %5492 = sub i64 %5491, 24
  %5493 = load i64, i64* %PC.i569
  %5494 = add i64 %5493, 4
  store i64 %5494, i64* %PC.i569
  %5495 = inttoptr i64 %5492 to i64*
  %5496 = load i64, i64* %5495
  store i64 %5496, i64* %RAX.i570, align 8
  store %struct.Memory* %loadMem_400fbd, %struct.Memory** %MEMORY
  %loadMem_400fc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5498 = getelementptr inbounds %struct.GPR, %struct.GPR* %5497, i32 0, i32 33
  %5499 = getelementptr inbounds %struct.Reg, %struct.Reg* %5498, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %5499 to i64*
  %5500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5501 = getelementptr inbounds %struct.GPR, %struct.GPR* %5500, i32 0, i32 1
  %5502 = getelementptr inbounds %struct.Reg, %struct.Reg* %5501, i32 0, i32 0
  %RAX.i568 = bitcast %union.anon* %5502 to i64*
  %5503 = load i64, i64* %RAX.i568
  %5504 = load i64, i64* %PC.i567
  %5505 = add i64 %5504, 4
  store i64 %5505, i64* %PC.i567
  %5506 = add i64 1, %5503
  store i64 %5506, i64* %RAX.i568, align 8
  %5507 = icmp ult i64 %5506, %5503
  %5508 = icmp ult i64 %5506, 1
  %5509 = or i1 %5507, %5508
  %5510 = zext i1 %5509 to i8
  %5511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5510, i8* %5511, align 1
  %5512 = trunc i64 %5506 to i32
  %5513 = and i32 %5512, 255
  %5514 = call i32 @llvm.ctpop.i32(i32 %5513)
  %5515 = trunc i32 %5514 to i8
  %5516 = and i8 %5515, 1
  %5517 = xor i8 %5516, 1
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5517, i8* %5518, align 1
  %5519 = xor i64 1, %5503
  %5520 = xor i64 %5519, %5506
  %5521 = lshr i64 %5520, 4
  %5522 = trunc i64 %5521 to i8
  %5523 = and i8 %5522, 1
  %5524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5523, i8* %5524, align 1
  %5525 = icmp eq i64 %5506, 0
  %5526 = zext i1 %5525 to i8
  %5527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5526, i8* %5527, align 1
  %5528 = lshr i64 %5506, 63
  %5529 = trunc i64 %5528 to i8
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5529, i8* %5530, align 1
  %5531 = lshr i64 %5503, 63
  %5532 = xor i64 %5528, %5531
  %5533 = add i64 %5532, %5528
  %5534 = icmp eq i64 %5533, 2
  %5535 = zext i1 %5534 to i8
  %5536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5535, i8* %5536, align 1
  store %struct.Memory* %loadMem_400fc1, %struct.Memory** %MEMORY
  %loadMem_400fc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5538 = getelementptr inbounds %struct.GPR, %struct.GPR* %5537, i32 0, i32 33
  %5539 = getelementptr inbounds %struct.Reg, %struct.Reg* %5538, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %5539 to i64*
  %5540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5541 = getelementptr inbounds %struct.GPR, %struct.GPR* %5540, i32 0, i32 1
  %5542 = getelementptr inbounds %struct.Reg, %struct.Reg* %5541, i32 0, i32 0
  %RAX.i565 = bitcast %union.anon* %5542 to i64*
  %5543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5544 = getelementptr inbounds %struct.GPR, %struct.GPR* %5543, i32 0, i32 15
  %5545 = getelementptr inbounds %struct.Reg, %struct.Reg* %5544, i32 0, i32 0
  %RBP.i566 = bitcast %union.anon* %5545 to i64*
  %5546 = load i64, i64* %RBP.i566
  %5547 = sub i64 %5546, 24
  %5548 = load i64, i64* %RAX.i565
  %5549 = load i64, i64* %PC.i564
  %5550 = add i64 %5549, 4
  store i64 %5550, i64* %PC.i564
  %5551 = inttoptr i64 %5547 to i64*
  store i64 %5548, i64* %5551
  store %struct.Memory* %loadMem_400fc5, %struct.Memory** %MEMORY
  %loadMem_400fc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 33
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %5554 to i64*
  %5555 = load i64, i64* %PC.i563
  %5556 = add i64 %5555, -254
  %5557 = load i64, i64* %PC.i563
  %5558 = add i64 %5557, 5
  store i64 %5558, i64* %PC.i563
  %5559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5556, i64* %5559, align 8
  store %struct.Memory* %loadMem_400fc9, %struct.Memory** %MEMORY
  br label %block_.L_400ecb

block_.L_400fce:                                  ; preds = %block_.L_400ecb
  %loadMem_400fce = load %struct.Memory*, %struct.Memory** %MEMORY
  %5560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5561 = getelementptr inbounds %struct.GPR, %struct.GPR* %5560, i32 0, i32 33
  %5562 = getelementptr inbounds %struct.Reg, %struct.Reg* %5561, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %5562 to i64*
  %5563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5564 = getelementptr inbounds %struct.GPR, %struct.GPR* %5563, i32 0, i32 1
  %5565 = getelementptr inbounds %struct.Reg, %struct.Reg* %5564, i32 0, i32 0
  %RAX.i561 = bitcast %union.anon* %5565 to i64*
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5567 = getelementptr inbounds %struct.GPR, %struct.GPR* %5566, i32 0, i32 15
  %5568 = getelementptr inbounds %struct.Reg, %struct.Reg* %5567, i32 0, i32 0
  %RBP.i562 = bitcast %union.anon* %5568 to i64*
  %5569 = load i64, i64* %RBP.i562
  %5570 = sub i64 %5569, 176
  %5571 = load i64, i64* %PC.i560
  %5572 = add i64 %5571, 6
  store i64 %5572, i64* %PC.i560
  %5573 = inttoptr i64 %5570 to i32*
  %5574 = load i32, i32* %5573
  %5575 = zext i32 %5574 to i64
  store i64 %5575, i64* %RAX.i561, align 8
  store %struct.Memory* %loadMem_400fce, %struct.Memory** %MEMORY
  %loadMem_400fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5577 = getelementptr inbounds %struct.GPR, %struct.GPR* %5576, i32 0, i32 33
  %5578 = getelementptr inbounds %struct.Reg, %struct.Reg* %5577, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %5578 to i64*
  %5579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5580 = getelementptr inbounds %struct.GPR, %struct.GPR* %5579, i32 0, i32 1
  %5581 = getelementptr inbounds %struct.Reg, %struct.Reg* %5580, i32 0, i32 0
  %EAX.i558 = bitcast %union.anon* %5581 to i32*
  %5582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5583 = getelementptr inbounds %struct.GPR, %struct.GPR* %5582, i32 0, i32 15
  %5584 = getelementptr inbounds %struct.Reg, %struct.Reg* %5583, i32 0, i32 0
  %RBP.i559 = bitcast %union.anon* %5584 to i64*
  %5585 = load i32, i32* %EAX.i558
  %5586 = zext i32 %5585 to i64
  %5587 = load i64, i64* %RBP.i559
  %5588 = sub i64 %5587, 172
  %5589 = load i64, i64* %PC.i557
  %5590 = add i64 %5589, 6
  store i64 %5590, i64* %PC.i557
  %5591 = inttoptr i64 %5588 to i32*
  %5592 = load i32, i32* %5591
  %5593 = sub i32 %5585, %5592
  %5594 = icmp ult i32 %5585, %5592
  %5595 = zext i1 %5594 to i8
  %5596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5595, i8* %5596, align 1
  %5597 = and i32 %5593, 255
  %5598 = call i32 @llvm.ctpop.i32(i32 %5597)
  %5599 = trunc i32 %5598 to i8
  %5600 = and i8 %5599, 1
  %5601 = xor i8 %5600, 1
  %5602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5601, i8* %5602, align 1
  %5603 = xor i32 %5592, %5585
  %5604 = xor i32 %5603, %5593
  %5605 = lshr i32 %5604, 4
  %5606 = trunc i32 %5605 to i8
  %5607 = and i8 %5606, 1
  %5608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5607, i8* %5608, align 1
  %5609 = icmp eq i32 %5593, 0
  %5610 = zext i1 %5609 to i8
  %5611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5610, i8* %5611, align 1
  %5612 = lshr i32 %5593, 31
  %5613 = trunc i32 %5612 to i8
  %5614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5613, i8* %5614, align 1
  %5615 = lshr i32 %5585, 31
  %5616 = lshr i32 %5592, 31
  %5617 = xor i32 %5616, %5615
  %5618 = xor i32 %5612, %5615
  %5619 = add i32 %5618, %5617
  %5620 = icmp eq i32 %5619, 2
  %5621 = zext i1 %5620 to i8
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5621, i8* %5622, align 1
  store %struct.Memory* %loadMem_400fd4, %struct.Memory** %MEMORY
  %loadMem_400fda = load %struct.Memory*, %struct.Memory** %MEMORY
  %5623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5624 = getelementptr inbounds %struct.GPR, %struct.GPR* %5623, i32 0, i32 33
  %5625 = getelementptr inbounds %struct.Reg, %struct.Reg* %5624, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %5625 to i64*
  %5626 = load i64, i64* %PC.i556
  %5627 = add i64 %5626, 67
  %5628 = load i64, i64* %PC.i556
  %5629 = add i64 %5628, 6
  %5630 = load i64, i64* %PC.i556
  %5631 = add i64 %5630, 6
  store i64 %5631, i64* %PC.i556
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5633 = load i8, i8* %5632, align 1
  %5634 = icmp eq i8 %5633, 0
  %5635 = zext i1 %5634 to i8
  store i8 %5635, i8* %BRANCH_TAKEN, align 1
  %5636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5637 = select i1 %5634, i64 %5627, i64 %5629
  store i64 %5637, i64* %5636, align 8
  store %struct.Memory* %loadMem_400fda, %struct.Memory** %MEMORY
  %loadBr_400fda = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400fda = icmp eq i8 %loadBr_400fda, 1
  br i1 %cmpBr_400fda, label %block_.L_40101d, label %block_400fe0

block_400fe0:                                     ; preds = %block_.L_400fce
  %loadMem_400fe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5639 = getelementptr inbounds %struct.GPR, %struct.GPR* %5638, i32 0, i32 33
  %5640 = getelementptr inbounds %struct.Reg, %struct.Reg* %5639, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %5640 to i64*
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5642 = getelementptr inbounds %struct.GPR, %struct.GPR* %5641, i32 0, i32 11
  %5643 = getelementptr inbounds %struct.Reg, %struct.Reg* %5642, i32 0, i32 0
  %RDI.i554 = bitcast %union.anon* %5643 to i64*
  %5644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5645 = getelementptr inbounds %struct.GPR, %struct.GPR* %5644, i32 0, i32 15
  %5646 = getelementptr inbounds %struct.Reg, %struct.Reg* %5645, i32 0, i32 0
  %RBP.i555 = bitcast %union.anon* %5646 to i64*
  %5647 = load i64, i64* %RBP.i555
  %5648 = sub i64 %5647, 64
  %5649 = load i64, i64* %PC.i553
  %5650 = add i64 %5649, 4
  store i64 %5650, i64* %PC.i553
  %5651 = inttoptr i64 %5648 to i64*
  %5652 = load i64, i64* %5651
  store i64 %5652, i64* %RDI.i554, align 8
  store %struct.Memory* %loadMem_400fe0, %struct.Memory** %MEMORY
  %loadMem_400fe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5654 = getelementptr inbounds %struct.GPR, %struct.GPR* %5653, i32 0, i32 33
  %5655 = getelementptr inbounds %struct.Reg, %struct.Reg* %5654, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %5655 to i64*
  %5656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5657 = getelementptr inbounds %struct.GPR, %struct.GPR* %5656, i32 0, i32 9
  %5658 = getelementptr inbounds %struct.Reg, %struct.Reg* %5657, i32 0, i32 0
  %RSI.i552 = bitcast %union.anon* %5658 to i64*
  %5659 = load i64, i64* %PC.i551
  %5660 = add i64 %5659, 8
  store i64 %5660, i64* %PC.i551
  %5661 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %5662 = sext i32 %5661 to i64
  store i64 %5662, i64* %RSI.i552, align 8
  store %struct.Memory* %loadMem_400fe4, %struct.Memory** %MEMORY
  %loadMem_400fec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5664 = getelementptr inbounds %struct.GPR, %struct.GPR* %5663, i32 0, i32 33
  %5665 = getelementptr inbounds %struct.Reg, %struct.Reg* %5664, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %5665 to i64*
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5667 = getelementptr inbounds %struct.GPR, %struct.GPR* %5666, i32 0, i32 7
  %5668 = getelementptr inbounds %struct.Reg, %struct.Reg* %5667, i32 0, i32 0
  %RDX.i550 = bitcast %union.anon* %5668 to i64*
  %5669 = load i64, i64* %PC.i549
  %5670 = add i64 %5669, 8
  store i64 %5670, i64* %PC.i549
  %5671 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %5672 = sext i32 %5671 to i64
  store i64 %5672, i64* %RDX.i550, align 8
  store %struct.Memory* %loadMem_400fec, %struct.Memory** %MEMORY
  %loadMem_400ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5674 = getelementptr inbounds %struct.GPR, %struct.GPR* %5673, i32 0, i32 33
  %5675 = getelementptr inbounds %struct.Reg, %struct.Reg* %5674, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %5675 to i64*
  %5676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5677 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5676, i64 0, i64 0
  %YMM0.i548 = bitcast %union.VectorReg* %5677 to %"class.std::bitset"*
  %5678 = bitcast %"class.std::bitset"* %YMM0.i548 to i8*
  %5679 = load i64, i64* %PC.i547
  %5680 = add i64 %5679, 9
  store i64 %5680, i64* %PC.i547
  %5681 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %5682 = bitcast i8* %5678 to double*
  store double %5681, double* %5682, align 1
  %5683 = getelementptr inbounds i8, i8* %5678, i64 8
  %5684 = bitcast i8* %5683 to double*
  store double 0.000000e+00, double* %5684, align 1
  store %struct.Memory* %loadMem_400ff4, %struct.Memory** %MEMORY
  %loadMem_400ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5686 = getelementptr inbounds %struct.GPR, %struct.GPR* %5685, i32 0, i32 33
  %5687 = getelementptr inbounds %struct.Reg, %struct.Reg* %5686, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %5687 to i64*
  %5688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5689 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5688, i64 0, i64 1
  %YMM1.i546 = bitcast %union.VectorReg* %5689 to %"class.std::bitset"*
  %5690 = bitcast %"class.std::bitset"* %YMM1.i546 to i8*
  %5691 = load i64, i64* %PC.i545
  %5692 = add i64 %5691, 9
  store i64 %5692, i64* %PC.i545
  %5693 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %5694 = bitcast i8* %5690 to double*
  store double %5693, double* %5694, align 1
  %5695 = getelementptr inbounds i8, i8* %5690, i64 8
  %5696 = bitcast i8* %5695 to double*
  store double 0.000000e+00, double* %5696, align 1
  store %struct.Memory* %loadMem_400ffd, %struct.Memory** %MEMORY
  %loadMem_401006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5698 = getelementptr inbounds %struct.GPR, %struct.GPR* %5697, i32 0, i32 33
  %5699 = getelementptr inbounds %struct.Reg, %struct.Reg* %5698, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %5699 to i64*
  %5700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5701 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5700, i64 0, i64 2
  %YMM2.i544 = bitcast %union.VectorReg* %5701 to %"class.std::bitset"*
  %5702 = bitcast %"class.std::bitset"* %YMM2.i544 to i8*
  %5703 = load i64, i64* %PC.i543
  %5704 = add i64 %5703, 9
  store i64 %5704, i64* %PC.i543
  %5705 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %5706 = bitcast i8* %5702 to double*
  store double %5705, double* %5706, align 1
  %5707 = getelementptr inbounds i8, i8* %5702, i64 8
  %5708 = bitcast i8* %5707 to double*
  store double 0.000000e+00, double* %5708, align 1
  store %struct.Memory* %loadMem_401006, %struct.Memory** %MEMORY
  %loadMem_40100f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5710 = getelementptr inbounds %struct.GPR, %struct.GPR* %5709, i32 0, i32 33
  %5711 = getelementptr inbounds %struct.Reg, %struct.Reg* %5710, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %5711 to i64*
  %5712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5713 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5712, i64 0, i64 3
  %YMM3.i542 = bitcast %union.VectorReg* %5713 to %"class.std::bitset"*
  %5714 = bitcast %"class.std::bitset"* %YMM3.i542 to i8*
  %5715 = load i64, i64* %PC.i541
  %5716 = add i64 %5715, 9
  store i64 %5716, i64* %PC.i541
  %5717 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %5718 = bitcast i8* %5714 to double*
  store double %5717, double* %5718, align 1
  %5719 = getelementptr inbounds i8, i8* %5714, i64 8
  %5720 = bitcast i8* %5719 to double*
  store double 0.000000e+00, double* %5720, align 1
  store %struct.Memory* %loadMem_40100f, %struct.Memory** %MEMORY
  %loadMem1_401018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5722 = getelementptr inbounds %struct.GPR, %struct.GPR* %5721, i32 0, i32 33
  %5723 = getelementptr inbounds %struct.Reg, %struct.Reg* %5722, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %5723 to i64*
  %5724 = load i64, i64* %PC.i540
  %5725 = add i64 %5724, 1496
  %5726 = load i64, i64* %PC.i540
  %5727 = add i64 %5726, 5
  %5728 = load i64, i64* %PC.i540
  %5729 = add i64 %5728, 5
  store i64 %5729, i64* %PC.i540
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5731 = load i64, i64* %5730, align 8
  %5732 = add i64 %5731, -8
  %5733 = inttoptr i64 %5732 to i64*
  store i64 %5727, i64* %5733
  store i64 %5732, i64* %5730, align 8
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5725, i64* %5734, align 8
  store %struct.Memory* %loadMem1_401018, %struct.Memory** %MEMORY
  %loadMem2_401018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401018 = load i64, i64* %3
  %call2_401018 = call %struct.Memory* @sub_4015f0.POUT(%struct.State* %0, i64 %loadPC_401018, %struct.Memory* %loadMem2_401018)
  store %struct.Memory* %call2_401018, %struct.Memory** %MEMORY
  br label %block_.L_40101d

block_.L_40101d:                                  ; preds = %block_400fe0, %block_.L_400fce
  %loadMem_40101d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5736 = getelementptr inbounds %struct.GPR, %struct.GPR* %5735, i32 0, i32 33
  %5737 = getelementptr inbounds %struct.Reg, %struct.Reg* %5736, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %5737 to i64*
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5739 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5738, i64 0, i64 0
  %YMM0.i539 = bitcast %union.VectorReg* %5739 to %"class.std::bitset"*
  %5740 = bitcast %"class.std::bitset"* %YMM0.i539 to i8*
  %5741 = load i64, i64* %PC.i538
  %5742 = add i64 %5741, 2323
  %5743 = load i64, i64* %PC.i538
  %5744 = add i64 %5743, 8
  store i64 %5744, i64* %PC.i538
  %5745 = inttoptr i64 %5742 to double*
  %5746 = load double, double* %5745
  %5747 = bitcast i8* %5740 to double*
  store double %5746, double* %5747, align 1
  %5748 = getelementptr inbounds i8, i8* %5740, i64 8
  %5749 = bitcast i8* %5748 to double*
  store double 0.000000e+00, double* %5749, align 1
  store %struct.Memory* %loadMem_40101d, %struct.Memory** %MEMORY
  %loadMem_401025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 33
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %5752 to i64*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5754 = getelementptr inbounds %struct.GPR, %struct.GPR* %5753, i32 0, i32 15
  %5755 = getelementptr inbounds %struct.Reg, %struct.Reg* %5754, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %5755 to i64*
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5757 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5756, i64 0, i64 0
  %XMM0.i537 = bitcast %union.VectorReg* %5757 to %union.vec128_t*
  %5758 = load i64, i64* %RBP.i536
  %5759 = sub i64 %5758, 144
  %5760 = bitcast %union.vec128_t* %XMM0.i537 to i8*
  %5761 = load i64, i64* %PC.i535
  %5762 = add i64 %5761, 8
  store i64 %5762, i64* %PC.i535
  %5763 = bitcast i8* %5760 to double*
  %5764 = load double, double* %5763, align 1
  %5765 = inttoptr i64 %5759 to double*
  store double %5764, double* %5765
  store %struct.Memory* %loadMem_401025, %struct.Memory** %MEMORY
  %loadMem_40102d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 33
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %5768 to i64*
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5770 = getelementptr inbounds %struct.GPR, %struct.GPR* %5769, i32 0, i32 15
  %5771 = getelementptr inbounds %struct.Reg, %struct.Reg* %5770, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %5771 to i64*
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5773 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5772, i64 0, i64 0
  %XMM0.i534 = bitcast %union.VectorReg* %5773 to %union.vec128_t*
  %5774 = load i64, i64* %RBP.i533
  %5775 = sub i64 %5774, 152
  %5776 = bitcast %union.vec128_t* %XMM0.i534 to i8*
  %5777 = load i64, i64* %PC.i532
  %5778 = add i64 %5777, 8
  store i64 %5778, i64* %PC.i532
  %5779 = bitcast i8* %5776 to double*
  %5780 = load double, double* %5779, align 1
  %5781 = inttoptr i64 %5775 to double*
  store double %5780, double* %5781
  store %struct.Memory* %loadMem_40102d, %struct.Memory** %MEMORY
  %loadMem_401035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5783 = getelementptr inbounds %struct.GPR, %struct.GPR* %5782, i32 0, i32 33
  %5784 = getelementptr inbounds %struct.Reg, %struct.Reg* %5783, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %5784 to i64*
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5786 = getelementptr inbounds %struct.GPR, %struct.GPR* %5785, i32 0, i32 15
  %5787 = getelementptr inbounds %struct.Reg, %struct.Reg* %5786, i32 0, i32 0
  %RBP.i531 = bitcast %union.anon* %5787 to i64*
  %5788 = load i64, i64* %RBP.i531
  %5789 = sub i64 %5788, 24
  %5790 = load i64, i64* %PC.i530
  %5791 = add i64 %5790, 8
  store i64 %5791, i64* %PC.i530
  %5792 = inttoptr i64 %5789 to i64*
  store i64 1, i64* %5792
  store %struct.Memory* %loadMem_401035, %struct.Memory** %MEMORY
  br label %block_.L_40103d

block_.L_40103d:                                  ; preds = %block_40104b, %block_.L_40101d
  %loadMem_40103d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5794 = getelementptr inbounds %struct.GPR, %struct.GPR* %5793, i32 0, i32 33
  %5795 = getelementptr inbounds %struct.Reg, %struct.Reg* %5794, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %5795 to i64*
  %5796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5797 = getelementptr inbounds %struct.GPR, %struct.GPR* %5796, i32 0, i32 1
  %5798 = getelementptr inbounds %struct.Reg, %struct.Reg* %5797, i32 0, i32 0
  %RAX.i528 = bitcast %union.anon* %5798 to i64*
  %5799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5800 = getelementptr inbounds %struct.GPR, %struct.GPR* %5799, i32 0, i32 15
  %5801 = getelementptr inbounds %struct.Reg, %struct.Reg* %5800, i32 0, i32 0
  %RBP.i529 = bitcast %union.anon* %5801 to i64*
  %5802 = load i64, i64* %RBP.i529
  %5803 = sub i64 %5802, 24
  %5804 = load i64, i64* %PC.i527
  %5805 = add i64 %5804, 4
  store i64 %5805, i64* %PC.i527
  %5806 = inttoptr i64 %5803 to i64*
  %5807 = load i64, i64* %5806
  store i64 %5807, i64* %RAX.i528, align 8
  store %struct.Memory* %loadMem_40103d, %struct.Memory** %MEMORY
  %loadMem_401041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5809 = getelementptr inbounds %struct.GPR, %struct.GPR* %5808, i32 0, i32 33
  %5810 = getelementptr inbounds %struct.Reg, %struct.Reg* %5809, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %5810 to i64*
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5812 = getelementptr inbounds %struct.GPR, %struct.GPR* %5811, i32 0, i32 1
  %5813 = getelementptr inbounds %struct.Reg, %struct.Reg* %5812, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %5813 to i64*
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5815 = getelementptr inbounds %struct.GPR, %struct.GPR* %5814, i32 0, i32 15
  %5816 = getelementptr inbounds %struct.Reg, %struct.Reg* %5815, i32 0, i32 0
  %RBP.i526 = bitcast %union.anon* %5816 to i64*
  %5817 = load i64, i64* %RAX.i525
  %5818 = load i64, i64* %RBP.i526
  %5819 = sub i64 %5818, 72
  %5820 = load i64, i64* %PC.i524
  %5821 = add i64 %5820, 4
  store i64 %5821, i64* %PC.i524
  %5822 = inttoptr i64 %5819 to i64*
  %5823 = load i64, i64* %5822
  %5824 = sub i64 %5817, %5823
  %5825 = icmp ugt i64 %5823, %5817
  %5826 = zext i1 %5825 to i8
  %5827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5826, i8* %5827, align 1
  %5828 = trunc i64 %5824 to i32
  %5829 = and i32 %5828, 255
  %5830 = call i32 @llvm.ctpop.i32(i32 %5829)
  %5831 = trunc i32 %5830 to i8
  %5832 = and i8 %5831, 1
  %5833 = xor i8 %5832, 1
  %5834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5833, i8* %5834, align 1
  %5835 = xor i64 %5823, %5817
  %5836 = xor i64 %5835, %5824
  %5837 = lshr i64 %5836, 4
  %5838 = trunc i64 %5837 to i8
  %5839 = and i8 %5838, 1
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5839, i8* %5840, align 1
  %5841 = icmp eq i64 %5824, 0
  %5842 = zext i1 %5841 to i8
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5842, i8* %5843, align 1
  %5844 = lshr i64 %5824, 63
  %5845 = trunc i64 %5844 to i8
  %5846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5845, i8* %5846, align 1
  %5847 = lshr i64 %5817, 63
  %5848 = lshr i64 %5823, 63
  %5849 = xor i64 %5848, %5847
  %5850 = xor i64 %5844, %5847
  %5851 = add i64 %5850, %5849
  %5852 = icmp eq i64 %5851, 2
  %5853 = zext i1 %5852 to i8
  %5854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5853, i8* %5854, align 1
  store %struct.Memory* %loadMem_401041, %struct.Memory** %MEMORY
  %loadMem_401045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5856 = getelementptr inbounds %struct.GPR, %struct.GPR* %5855, i32 0, i32 33
  %5857 = getelementptr inbounds %struct.Reg, %struct.Reg* %5856, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %5857 to i64*
  %5858 = load i64, i64* %PC.i523
  %5859 = add i64 %5858, 495
  %5860 = load i64, i64* %PC.i523
  %5861 = add i64 %5860, 6
  %5862 = load i64, i64* %PC.i523
  %5863 = add i64 %5862, 6
  store i64 %5863, i64* %PC.i523
  %5864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5865 = load i8, i8* %5864, align 1
  %5866 = icmp eq i8 %5865, 0
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5868 = load i8, i8* %5867, align 1
  %5869 = icmp ne i8 %5868, 0
  %5870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5871 = load i8, i8* %5870, align 1
  %5872 = icmp ne i8 %5871, 0
  %5873 = xor i1 %5869, %5872
  %5874 = xor i1 %5873, true
  %5875 = and i1 %5866, %5874
  %5876 = zext i1 %5875 to i8
  store i8 %5876, i8* %BRANCH_TAKEN, align 1
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5878 = select i1 %5875, i64 %5859, i64 %5861
  store i64 %5878, i64* %5877, align 8
  store %struct.Memory* %loadMem_401045, %struct.Memory** %MEMORY
  %loadBr_401045 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401045 = icmp eq i8 %loadBr_401045, 1
  br i1 %cmpBr_401045, label %block_.L_401234, label %block_40104b

block_40104b:                                     ; preds = %block_.L_40103d
  %loadMem_40104b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5880 = getelementptr inbounds %struct.GPR, %struct.GPR* %5879, i32 0, i32 33
  %5881 = getelementptr inbounds %struct.Reg, %struct.Reg* %5880, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %5881 to i64*
  %5882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5883 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5882, i64 0, i64 0
  %YMM0.i522 = bitcast %union.VectorReg* %5883 to %"class.std::bitset"*
  %5884 = bitcast %"class.std::bitset"* %YMM0.i522 to i8*
  %5885 = load i64, i64* %PC.i521
  %5886 = add i64 %5885, 2269
  %5887 = load i64, i64* %PC.i521
  %5888 = add i64 %5887, 8
  store i64 %5888, i64* %PC.i521
  %5889 = inttoptr i64 %5886 to double*
  %5890 = load double, double* %5889
  %5891 = bitcast i8* %5884 to double*
  store double %5890, double* %5891, align 1
  %5892 = getelementptr inbounds i8, i8* %5884, i64 8
  %5893 = bitcast i8* %5892 to double*
  store double 0.000000e+00, double* %5893, align 1
  store %struct.Memory* %loadMem_40104b, %struct.Memory** %MEMORY
  %loadMem_401053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5895 = getelementptr inbounds %struct.GPR, %struct.GPR* %5894, i32 0, i32 33
  %5896 = getelementptr inbounds %struct.Reg, %struct.Reg* %5895, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %5896 to i64*
  %5897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5898 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5897, i64 0, i64 1
  %YMM1.i520 = bitcast %union.VectorReg* %5898 to %"class.std::bitset"*
  %5899 = bitcast %"class.std::bitset"* %YMM1.i520 to i8*
  %5900 = load i64, i64* %PC.i519
  %5901 = add i64 %5900, 9
  store i64 %5901, i64* %PC.i519
  %5902 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %5903 = bitcast i8* %5899 to double*
  store double %5902, double* %5903, align 1
  %5904 = getelementptr inbounds i8, i8* %5899, i64 8
  %5905 = bitcast i8* %5904 to double*
  store double 0.000000e+00, double* %5905, align 1
  store %struct.Memory* %loadMem_401053, %struct.Memory** %MEMORY
  %loadMem_40105c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5907 = getelementptr inbounds %struct.GPR, %struct.GPR* %5906, i32 0, i32 33
  %5908 = getelementptr inbounds %struct.Reg, %struct.Reg* %5907, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %5908 to i64*
  %5909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5910 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5909, i64 0, i64 2
  %YMM2.i518 = bitcast %union.VectorReg* %5910 to %"class.std::bitset"*
  %5911 = bitcast %"class.std::bitset"* %YMM2.i518 to i8*
  %5912 = load i64, i64* %PC.i517
  %5913 = add i64 %5912, 9
  store i64 %5913, i64* %PC.i517
  %5914 = load double, double* bitcast (%G_0x6020b0_type* @G_0x6020b0 to double*)
  %5915 = bitcast i8* %5911 to double*
  store double %5914, double* %5915, align 1
  %5916 = getelementptr inbounds i8, i8* %5911, i64 8
  %5917 = bitcast i8* %5916 to double*
  store double 0.000000e+00, double* %5917, align 1
  store %struct.Memory* %loadMem_40105c, %struct.Memory** %MEMORY
  %loadMem_401065 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5919 = getelementptr inbounds %struct.GPR, %struct.GPR* %5918, i32 0, i32 33
  %5920 = getelementptr inbounds %struct.Reg, %struct.Reg* %5919, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %5920 to i64*
  %5921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5922 = getelementptr inbounds %struct.GPR, %struct.GPR* %5921, i32 0, i32 15
  %5923 = getelementptr inbounds %struct.Reg, %struct.Reg* %5922, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %5923 to i64*
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5925 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5924, i64 0, i64 3
  %YMM3.i516 = bitcast %union.VectorReg* %5925 to %"class.std::bitset"*
  %5926 = bitcast %"class.std::bitset"* %YMM3.i516 to i8*
  %5927 = load i64, i64* %RBP.i515
  %5928 = sub i64 %5927, 144
  %5929 = load i64, i64* %PC.i514
  %5930 = add i64 %5929, 8
  store i64 %5930, i64* %PC.i514
  %5931 = inttoptr i64 %5928 to double*
  %5932 = load double, double* %5931
  %5933 = bitcast i8* %5926 to double*
  store double %5932, double* %5933, align 1
  %5934 = getelementptr inbounds i8, i8* %5926, i64 8
  %5935 = bitcast i8* %5934 to double*
  store double 0.000000e+00, double* %5935, align 1
  store %struct.Memory* %loadMem_401065, %struct.Memory** %MEMORY
  %loadMem_40106d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5937 = getelementptr inbounds %struct.GPR, %struct.GPR* %5936, i32 0, i32 33
  %5938 = getelementptr inbounds %struct.Reg, %struct.Reg* %5937, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %5938 to i64*
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5940 = getelementptr inbounds %struct.GPR, %struct.GPR* %5939, i32 0, i32 15
  %5941 = getelementptr inbounds %struct.Reg, %struct.Reg* %5940, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %5941 to i64*
  %5942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5943 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5942, i64 0, i64 0
  %XMM0.i513 = bitcast %union.VectorReg* %5943 to %union.vec128_t*
  %5944 = load i64, i64* %RBP.i512
  %5945 = sub i64 %5944, 224
  %5946 = bitcast %union.vec128_t* %XMM0.i513 to i8*
  %5947 = load i64, i64* %PC.i511
  %5948 = add i64 %5947, 8
  store i64 %5948, i64* %PC.i511
  %5949 = bitcast i8* %5946 to double*
  %5950 = load double, double* %5949, align 1
  %5951 = inttoptr i64 %5945 to double*
  store double %5950, double* %5951
  store %struct.Memory* %loadMem_40106d, %struct.Memory** %MEMORY
  %loadMem_401075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5953 = getelementptr inbounds %struct.GPR, %struct.GPR* %5952, i32 0, i32 33
  %5954 = getelementptr inbounds %struct.Reg, %struct.Reg* %5953, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %5954 to i64*
  %5955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5956 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5955, i64 0, i64 0
  %YMM0.i509 = bitcast %union.VectorReg* %5956 to %"class.std::bitset"*
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5958 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5957, i64 0, i64 3
  %XMM3.i510 = bitcast %union.VectorReg* %5958 to %union.vec128_t*
  %5959 = bitcast %"class.std::bitset"* %YMM0.i509 to i8*
  %5960 = bitcast %union.vec128_t* %XMM3.i510 to i8*
  %5961 = load i64, i64* %PC.i508
  %5962 = add i64 %5961, 3
  store i64 %5962, i64* %PC.i508
  %5963 = bitcast i8* %5960 to <2 x i32>*
  %5964 = load <2 x i32>, <2 x i32>* %5963, align 1
  %5965 = getelementptr inbounds i8, i8* %5960, i64 8
  %5966 = bitcast i8* %5965 to <2 x i32>*
  %5967 = load <2 x i32>, <2 x i32>* %5966, align 1
  %5968 = extractelement <2 x i32> %5964, i32 0
  %5969 = bitcast i8* %5959 to i32*
  store i32 %5968, i32* %5969, align 1
  %5970 = extractelement <2 x i32> %5964, i32 1
  %5971 = getelementptr inbounds i8, i8* %5959, i64 4
  %5972 = bitcast i8* %5971 to i32*
  store i32 %5970, i32* %5972, align 1
  %5973 = extractelement <2 x i32> %5967, i32 0
  %5974 = getelementptr inbounds i8, i8* %5959, i64 8
  %5975 = bitcast i8* %5974 to i32*
  store i32 %5973, i32* %5975, align 1
  %5976 = extractelement <2 x i32> %5967, i32 1
  %5977 = getelementptr inbounds i8, i8* %5959, i64 12
  %5978 = bitcast i8* %5977 to i32*
  store i32 %5976, i32* %5978, align 1
  store %struct.Memory* %loadMem_401075, %struct.Memory** %MEMORY
  %loadMem_401078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5980 = getelementptr inbounds %struct.GPR, %struct.GPR* %5979, i32 0, i32 33
  %5981 = getelementptr inbounds %struct.Reg, %struct.Reg* %5980, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %5981 to i64*
  %5982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5983 = getelementptr inbounds %struct.GPR, %struct.GPR* %5982, i32 0, i32 15
  %5984 = getelementptr inbounds %struct.Reg, %struct.Reg* %5983, i32 0, i32 0
  %RBP.i506 = bitcast %union.anon* %5984 to i64*
  %5985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5986 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5985, i64 0, i64 2
  %XMM2.i507 = bitcast %union.VectorReg* %5986 to %union.vec128_t*
  %5987 = load i64, i64* %RBP.i506
  %5988 = sub i64 %5987, 232
  %5989 = bitcast %union.vec128_t* %XMM2.i507 to i8*
  %5990 = load i64, i64* %PC.i505
  %5991 = add i64 %5990, 8
  store i64 %5991, i64* %PC.i505
  %5992 = bitcast i8* %5989 to double*
  %5993 = load double, double* %5992, align 1
  %5994 = inttoptr i64 %5988 to double*
  store double %5993, double* %5994
  store %struct.Memory* %loadMem_401078, %struct.Memory** %MEMORY
  %loadMem_401080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 33
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %5997 to i64*
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 15
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %RBP.i503 = bitcast %union.anon* %6000 to i64*
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6002 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6001, i64 0, i64 1
  %XMM1.i504 = bitcast %union.VectorReg* %6002 to %union.vec128_t*
  %6003 = load i64, i64* %RBP.i503
  %6004 = sub i64 %6003, 240
  %6005 = bitcast %union.vec128_t* %XMM1.i504 to i8*
  %6006 = load i64, i64* %PC.i502
  %6007 = add i64 %6006, 8
  store i64 %6007, i64* %PC.i502
  %6008 = bitcast i8* %6005 to double*
  %6009 = load double, double* %6008, align 1
  %6010 = inttoptr i64 %6004 to double*
  store double %6009, double* %6010
  store %struct.Memory* %loadMem_401080, %struct.Memory** %MEMORY
  %loadMem1_401088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6012 = getelementptr inbounds %struct.GPR, %struct.GPR* %6011, i32 0, i32 33
  %6013 = getelementptr inbounds %struct.Reg, %struct.Reg* %6012, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %6013 to i64*
  %6014 = load i64, i64* %PC.i501
  %6015 = add i64 %6014, -2360
  %6016 = load i64, i64* %PC.i501
  %6017 = add i64 %6016, 5
  %6018 = load i64, i64* %PC.i501
  %6019 = add i64 %6018, 5
  store i64 %6019, i64* %PC.i501
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6021 = load i64, i64* %6020, align 8
  %6022 = add i64 %6021, -8
  %6023 = inttoptr i64 %6022 to i64*
  store i64 %6017, i64* %6023
  store i64 %6022, i64* %6020, align 8
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6015, i64* %6024, align 8
  store %struct.Memory* %loadMem1_401088, %struct.Memory** %MEMORY
  %loadMem2_401088 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401088 = load i64, i64* %3
  %call2_401088 = call %struct.Memory* @ext_sin(%struct.State* %0, i64 %loadPC_401088, %struct.Memory* %loadMem2_401088)
  store %struct.Memory* %call2_401088, %struct.Memory** %MEMORY
  %loadMem_40108d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6026 = getelementptr inbounds %struct.GPR, %struct.GPR* %6025, i32 0, i32 33
  %6027 = getelementptr inbounds %struct.Reg, %struct.Reg* %6026, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %6027 to i64*
  %6028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6029 = getelementptr inbounds %struct.GPR, %struct.GPR* %6028, i32 0, i32 15
  %6030 = getelementptr inbounds %struct.Reg, %struct.Reg* %6029, i32 0, i32 0
  %RBP.i499 = bitcast %union.anon* %6030 to i64*
  %6031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6032 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6031, i64 0, i64 1
  %YMM1.i500 = bitcast %union.VectorReg* %6032 to %"class.std::bitset"*
  %6033 = bitcast %"class.std::bitset"* %YMM1.i500 to i8*
  %6034 = load i64, i64* %RBP.i499
  %6035 = sub i64 %6034, 232
  %6036 = load i64, i64* %PC.i498
  %6037 = add i64 %6036, 8
  store i64 %6037, i64* %PC.i498
  %6038 = inttoptr i64 %6035 to double*
  %6039 = load double, double* %6038
  %6040 = bitcast i8* %6033 to double*
  store double %6039, double* %6040, align 1
  %6041 = getelementptr inbounds i8, i8* %6033, i64 8
  %6042 = bitcast i8* %6041 to double*
  store double 0.000000e+00, double* %6042, align 1
  store %struct.Memory* %loadMem_40108d, %struct.Memory** %MEMORY
  %loadMem_401095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6044 = getelementptr inbounds %struct.GPR, %struct.GPR* %6043, i32 0, i32 33
  %6045 = getelementptr inbounds %struct.Reg, %struct.Reg* %6044, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %6045 to i64*
  %6046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6047 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6046, i64 0, i64 1
  %YMM1.i496 = bitcast %union.VectorReg* %6047 to %"class.std::bitset"*
  %6048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6049 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6048, i64 0, i64 0
  %XMM0.i497 = bitcast %union.VectorReg* %6049 to %union.vec128_t*
  %6050 = bitcast %"class.std::bitset"* %YMM1.i496 to i8*
  %6051 = bitcast %"class.std::bitset"* %YMM1.i496 to i8*
  %6052 = bitcast %union.vec128_t* %XMM0.i497 to i8*
  %6053 = load i64, i64* %PC.i495
  %6054 = add i64 %6053, 4
  store i64 %6054, i64* %PC.i495
  %6055 = bitcast i8* %6051 to double*
  %6056 = load double, double* %6055, align 1
  %6057 = getelementptr inbounds i8, i8* %6051, i64 8
  %6058 = bitcast i8* %6057 to i64*
  %6059 = load i64, i64* %6058, align 1
  %6060 = bitcast i8* %6052 to double*
  %6061 = load double, double* %6060, align 1
  %6062 = fmul double %6056, %6061
  %6063 = bitcast i8* %6050 to double*
  store double %6062, double* %6063, align 1
  %6064 = getelementptr inbounds i8, i8* %6050, i64 8
  %6065 = bitcast i8* %6064 to i64*
  store i64 %6059, i64* %6065, align 1
  store %struct.Memory* %loadMem_401095, %struct.Memory** %MEMORY
  %loadMem_401099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6067 = getelementptr inbounds %struct.GPR, %struct.GPR* %6066, i32 0, i32 33
  %6068 = getelementptr inbounds %struct.Reg, %struct.Reg* %6067, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %6068 to i64*
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6070 = getelementptr inbounds %struct.GPR, %struct.GPR* %6069, i32 0, i32 15
  %6071 = getelementptr inbounds %struct.Reg, %struct.Reg* %6070, i32 0, i32 0
  %RBP.i493 = bitcast %union.anon* %6071 to i64*
  %6072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6073 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6072, i64 0, i64 0
  %YMM0.i494 = bitcast %union.VectorReg* %6073 to %"class.std::bitset"*
  %6074 = bitcast %"class.std::bitset"* %YMM0.i494 to i8*
  %6075 = load i64, i64* %RBP.i493
  %6076 = sub i64 %6075, 144
  %6077 = load i64, i64* %PC.i492
  %6078 = add i64 %6077, 8
  store i64 %6078, i64* %PC.i492
  %6079 = inttoptr i64 %6076 to double*
  %6080 = load double, double* %6079
  %6081 = bitcast i8* %6074 to double*
  store double %6080, double* %6081, align 1
  %6082 = getelementptr inbounds i8, i8* %6074, i64 8
  %6083 = bitcast i8* %6082 to double*
  store double 0.000000e+00, double* %6083, align 1
  store %struct.Memory* %loadMem_401099, %struct.Memory** %MEMORY
  %loadMem_4010a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6085 = getelementptr inbounds %struct.GPR, %struct.GPR* %6084, i32 0, i32 33
  %6086 = getelementptr inbounds %struct.Reg, %struct.Reg* %6085, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %6086 to i64*
  %6087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6088 = getelementptr inbounds %struct.GPR, %struct.GPR* %6087, i32 0, i32 15
  %6089 = getelementptr inbounds %struct.Reg, %struct.Reg* %6088, i32 0, i32 0
  %RBP.i490 = bitcast %union.anon* %6089 to i64*
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6091 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6090, i64 0, i64 1
  %XMM1.i491 = bitcast %union.VectorReg* %6091 to %union.vec128_t*
  %6092 = load i64, i64* %RBP.i490
  %6093 = sub i64 %6092, 248
  %6094 = bitcast %union.vec128_t* %XMM1.i491 to i8*
  %6095 = load i64, i64* %PC.i489
  %6096 = add i64 %6095, 8
  store i64 %6096, i64* %PC.i489
  %6097 = bitcast i8* %6094 to double*
  %6098 = load double, double* %6097, align 1
  %6099 = inttoptr i64 %6093 to double*
  store double %6098, double* %6099
  store %struct.Memory* %loadMem_4010a1, %struct.Memory** %MEMORY
  %loadMem1_4010a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6101 = getelementptr inbounds %struct.GPR, %struct.GPR* %6100, i32 0, i32 33
  %6102 = getelementptr inbounds %struct.Reg, %struct.Reg* %6101, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %6102 to i64*
  %6103 = load i64, i64* %PC.i488
  %6104 = add i64 %6103, -2457
  %6105 = load i64, i64* %PC.i488
  %6106 = add i64 %6105, 5
  %6107 = load i64, i64* %PC.i488
  %6108 = add i64 %6107, 5
  store i64 %6108, i64* %PC.i488
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6110 = load i64, i64* %6109, align 8
  %6111 = add i64 %6110, -8
  %6112 = inttoptr i64 %6111 to i64*
  store i64 %6106, i64* %6112
  store i64 %6111, i64* %6109, align 8
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6104, i64* %6113, align 8
  store %struct.Memory* %loadMem1_4010a9, %struct.Memory** %MEMORY
  %loadMem2_4010a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4010a9 = load i64, i64* %3
  %call2_4010a9 = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_4010a9, %struct.Memory* %loadMem2_4010a9)
  store %struct.Memory* %call2_4010a9, %struct.Memory** %MEMORY
  %loadMem_4010ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6115 = getelementptr inbounds %struct.GPR, %struct.GPR* %6114, i32 0, i32 33
  %6116 = getelementptr inbounds %struct.Reg, %struct.Reg* %6115, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %6116 to i64*
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6118 = getelementptr inbounds %struct.GPR, %struct.GPR* %6117, i32 0, i32 15
  %6119 = getelementptr inbounds %struct.Reg, %struct.Reg* %6118, i32 0, i32 0
  %RBP.i486 = bitcast %union.anon* %6119 to i64*
  %6120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6121 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6120, i64 0, i64 1
  %YMM1.i487 = bitcast %union.VectorReg* %6121 to %"class.std::bitset"*
  %6122 = bitcast %"class.std::bitset"* %YMM1.i487 to i8*
  %6123 = load i64, i64* %RBP.i486
  %6124 = sub i64 %6123, 248
  %6125 = load i64, i64* %PC.i485
  %6126 = add i64 %6125, 8
  store i64 %6126, i64* %PC.i485
  %6127 = inttoptr i64 %6124 to double*
  %6128 = load double, double* %6127
  %6129 = bitcast i8* %6122 to double*
  store double %6128, double* %6129, align 1
  %6130 = getelementptr inbounds i8, i8* %6122, i64 8
  %6131 = bitcast i8* %6130 to double*
  store double 0.000000e+00, double* %6131, align 1
  store %struct.Memory* %loadMem_4010ae, %struct.Memory** %MEMORY
  %loadMem_4010b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6133 = getelementptr inbounds %struct.GPR, %struct.GPR* %6132, i32 0, i32 33
  %6134 = getelementptr inbounds %struct.Reg, %struct.Reg* %6133, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %6134 to i64*
  %6135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6136 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6135, i64 0, i64 1
  %YMM1.i483 = bitcast %union.VectorReg* %6136 to %"class.std::bitset"*
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6138 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6137, i64 0, i64 0
  %XMM0.i484 = bitcast %union.VectorReg* %6138 to %union.vec128_t*
  %6139 = bitcast %"class.std::bitset"* %YMM1.i483 to i8*
  %6140 = bitcast %"class.std::bitset"* %YMM1.i483 to i8*
  %6141 = bitcast %union.vec128_t* %XMM0.i484 to i8*
  %6142 = load i64, i64* %PC.i482
  %6143 = add i64 %6142, 4
  store i64 %6143, i64* %PC.i482
  %6144 = bitcast i8* %6140 to double*
  %6145 = load double, double* %6144, align 1
  %6146 = getelementptr inbounds i8, i8* %6140, i64 8
  %6147 = bitcast i8* %6146 to i64*
  %6148 = load i64, i64* %6147, align 1
  %6149 = bitcast i8* %6141 to double*
  %6150 = load double, double* %6149, align 1
  %6151 = fmul double %6145, %6150
  %6152 = bitcast i8* %6139 to double*
  store double %6151, double* %6152, align 1
  %6153 = getelementptr inbounds i8, i8* %6139, i64 8
  %6154 = bitcast i8* %6153 to i64*
  store i64 %6148, i64* %6154, align 1
  store %struct.Memory* %loadMem_4010b6, %struct.Memory** %MEMORY
  %loadMem_4010ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6156 = getelementptr inbounds %struct.GPR, %struct.GPR* %6155, i32 0, i32 33
  %6157 = getelementptr inbounds %struct.Reg, %struct.Reg* %6156, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %6157 to i64*
  %6158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6159 = getelementptr inbounds %struct.GPR, %struct.GPR* %6158, i32 0, i32 15
  %6160 = getelementptr inbounds %struct.Reg, %struct.Reg* %6159, i32 0, i32 0
  %RBP.i480 = bitcast %union.anon* %6160 to i64*
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6162 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6161, i64 0, i64 0
  %YMM0.i481 = bitcast %union.VectorReg* %6162 to %"class.std::bitset"*
  %6163 = bitcast %"class.std::bitset"* %YMM0.i481 to i8*
  %6164 = load i64, i64* %RBP.i480
  %6165 = sub i64 %6164, 144
  %6166 = load i64, i64* %PC.i479
  %6167 = add i64 %6166, 8
  store i64 %6167, i64* %PC.i479
  %6168 = inttoptr i64 %6165 to double*
  %6169 = load double, double* %6168
  %6170 = bitcast i8* %6163 to double*
  store double %6169, double* %6170, align 1
  %6171 = getelementptr inbounds i8, i8* %6163, i64 8
  %6172 = bitcast i8* %6171 to double*
  store double 0.000000e+00, double* %6172, align 1
  store %struct.Memory* %loadMem_4010ba, %struct.Memory** %MEMORY
  %loadMem_4010c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6174 = getelementptr inbounds %struct.GPR, %struct.GPR* %6173, i32 0, i32 33
  %6175 = getelementptr inbounds %struct.Reg, %struct.Reg* %6174, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %6175 to i64*
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6177 = getelementptr inbounds %struct.GPR, %struct.GPR* %6176, i32 0, i32 15
  %6178 = getelementptr inbounds %struct.Reg, %struct.Reg* %6177, i32 0, i32 0
  %RBP.i477 = bitcast %union.anon* %6178 to i64*
  %6179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6180 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6179, i64 0, i64 0
  %YMM0.i478 = bitcast %union.VectorReg* %6180 to %"class.std::bitset"*
  %6181 = bitcast %"class.std::bitset"* %YMM0.i478 to i8*
  %6182 = bitcast %"class.std::bitset"* %YMM0.i478 to i8*
  %6183 = load i64, i64* %RBP.i477
  %6184 = sub i64 %6183, 152
  %6185 = load i64, i64* %PC.i476
  %6186 = add i64 %6185, 8
  store i64 %6186, i64* %PC.i476
  %6187 = bitcast i8* %6182 to double*
  %6188 = load double, double* %6187, align 1
  %6189 = getelementptr inbounds i8, i8* %6182, i64 8
  %6190 = bitcast i8* %6189 to i64*
  %6191 = load i64, i64* %6190, align 1
  %6192 = inttoptr i64 %6184 to double*
  %6193 = load double, double* %6192
  %6194 = fadd double %6188, %6193
  %6195 = bitcast i8* %6181 to double*
  store double %6194, double* %6195, align 1
  %6196 = getelementptr inbounds i8, i8* %6181, i64 8
  %6197 = bitcast i8* %6196 to i64*
  store i64 %6191, i64* %6197, align 1
  store %struct.Memory* %loadMem_4010c2, %struct.Memory** %MEMORY
  %loadMem_4010ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6199 = getelementptr inbounds %struct.GPR, %struct.GPR* %6198, i32 0, i32 33
  %6200 = getelementptr inbounds %struct.Reg, %struct.Reg* %6199, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %6200 to i64*
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6202 = getelementptr inbounds %struct.GPR, %struct.GPR* %6201, i32 0, i32 15
  %6203 = getelementptr inbounds %struct.Reg, %struct.Reg* %6202, i32 0, i32 0
  %RBP.i474 = bitcast %union.anon* %6203 to i64*
  %6204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6205 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6204, i64 0, i64 1
  %XMM1.i475 = bitcast %union.VectorReg* %6205 to %union.vec128_t*
  %6206 = load i64, i64* %RBP.i474
  %6207 = sub i64 %6206, 256
  %6208 = bitcast %union.vec128_t* %XMM1.i475 to i8*
  %6209 = load i64, i64* %PC.i473
  %6210 = add i64 %6209, 8
  store i64 %6210, i64* %PC.i473
  %6211 = bitcast i8* %6208 to double*
  %6212 = load double, double* %6211, align 1
  %6213 = inttoptr i64 %6207 to double*
  store double %6212, double* %6213
  store %struct.Memory* %loadMem_4010ca, %struct.Memory** %MEMORY
  %loadMem1_4010d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6215 = getelementptr inbounds %struct.GPR, %struct.GPR* %6214, i32 0, i32 33
  %6216 = getelementptr inbounds %struct.Reg, %struct.Reg* %6215, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %6216 to i64*
  %6217 = load i64, i64* %PC.i472
  %6218 = add i64 %6217, -2498
  %6219 = load i64, i64* %PC.i472
  %6220 = add i64 %6219, 5
  %6221 = load i64, i64* %PC.i472
  %6222 = add i64 %6221, 5
  store i64 %6222, i64* %PC.i472
  %6223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6224 = load i64, i64* %6223, align 8
  %6225 = add i64 %6224, -8
  %6226 = inttoptr i64 %6225 to i64*
  store i64 %6220, i64* %6226
  store i64 %6225, i64* %6223, align 8
  %6227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6218, i64* %6227, align 8
  store %struct.Memory* %loadMem1_4010d2, %struct.Memory** %MEMORY
  %loadMem2_4010d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4010d2 = load i64, i64* %3
  %call2_4010d2 = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_4010d2, %struct.Memory* %loadMem2_4010d2)
  store %struct.Memory* %call2_4010d2, %struct.Memory** %MEMORY
  %loadMem_4010d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6229 = getelementptr inbounds %struct.GPR, %struct.GPR* %6228, i32 0, i32 33
  %6230 = getelementptr inbounds %struct.Reg, %struct.Reg* %6229, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %6230 to i64*
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6232 = getelementptr inbounds %struct.GPR, %struct.GPR* %6231, i32 0, i32 15
  %6233 = getelementptr inbounds %struct.Reg, %struct.Reg* %6232, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %6233 to i64*
  %6234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6235 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6234, i64 0, i64 1
  %YMM1.i471 = bitcast %union.VectorReg* %6235 to %"class.std::bitset"*
  %6236 = bitcast %"class.std::bitset"* %YMM1.i471 to i8*
  %6237 = load i64, i64* %RBP.i470
  %6238 = sub i64 %6237, 144
  %6239 = load i64, i64* %PC.i469
  %6240 = add i64 %6239, 8
  store i64 %6240, i64* %PC.i469
  %6241 = inttoptr i64 %6238 to double*
  %6242 = load double, double* %6241
  %6243 = bitcast i8* %6236 to double*
  store double %6242, double* %6243, align 1
  %6244 = getelementptr inbounds i8, i8* %6236, i64 8
  %6245 = bitcast i8* %6244 to double*
  store double 0.000000e+00, double* %6245, align 1
  store %struct.Memory* %loadMem_4010d7, %struct.Memory** %MEMORY
  %loadMem_4010df = load %struct.Memory*, %struct.Memory** %MEMORY
  %6246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6247 = getelementptr inbounds %struct.GPR, %struct.GPR* %6246, i32 0, i32 33
  %6248 = getelementptr inbounds %struct.Reg, %struct.Reg* %6247, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %6248 to i64*
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6250 = getelementptr inbounds %struct.GPR, %struct.GPR* %6249, i32 0, i32 15
  %6251 = getelementptr inbounds %struct.Reg, %struct.Reg* %6250, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %6251 to i64*
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6253 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6252, i64 0, i64 1
  %YMM1.i468 = bitcast %union.VectorReg* %6253 to %"class.std::bitset"*
  %6254 = bitcast %"class.std::bitset"* %YMM1.i468 to i8*
  %6255 = bitcast %"class.std::bitset"* %YMM1.i468 to i8*
  %6256 = load i64, i64* %RBP.i467
  %6257 = sub i64 %6256, 152
  %6258 = load i64, i64* %PC.i466
  %6259 = add i64 %6258, 8
  store i64 %6259, i64* %PC.i466
  %6260 = bitcast i8* %6255 to double*
  %6261 = load double, double* %6260, align 1
  %6262 = getelementptr inbounds i8, i8* %6255, i64 8
  %6263 = bitcast i8* %6262 to i64*
  %6264 = load i64, i64* %6263, align 1
  %6265 = inttoptr i64 %6257 to double*
  %6266 = load double, double* %6265
  %6267 = fsub double %6261, %6266
  %6268 = bitcast i8* %6254 to double*
  store double %6267, double* %6268, align 1
  %6269 = getelementptr inbounds i8, i8* %6254, i64 8
  %6270 = bitcast i8* %6269 to i64*
  store i64 %6264, i64* %6270, align 1
  store %struct.Memory* %loadMem_4010df, %struct.Memory** %MEMORY
  %loadMem_4010e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6272 = getelementptr inbounds %struct.GPR, %struct.GPR* %6271, i32 0, i32 33
  %6273 = getelementptr inbounds %struct.Reg, %struct.Reg* %6272, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %6273 to i64*
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6275 = getelementptr inbounds %struct.GPR, %struct.GPR* %6274, i32 0, i32 15
  %6276 = getelementptr inbounds %struct.Reg, %struct.Reg* %6275, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %6276 to i64*
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6278 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6277, i64 0, i64 0
  %XMM0.i465 = bitcast %union.VectorReg* %6278 to %union.vec128_t*
  %6279 = load i64, i64* %RBP.i464
  %6280 = sub i64 %6279, 264
  %6281 = bitcast %union.vec128_t* %XMM0.i465 to i8*
  %6282 = load i64, i64* %PC.i463
  %6283 = add i64 %6282, 8
  store i64 %6283, i64* %PC.i463
  %6284 = bitcast i8* %6281 to double*
  %6285 = load double, double* %6284, align 1
  %6286 = inttoptr i64 %6280 to double*
  store double %6285, double* %6286
  store %struct.Memory* %loadMem_4010e7, %struct.Memory** %MEMORY
  %loadMem_4010ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6288 = getelementptr inbounds %struct.GPR, %struct.GPR* %6287, i32 0, i32 33
  %6289 = getelementptr inbounds %struct.Reg, %struct.Reg* %6288, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %6289 to i64*
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6290, i64 0, i64 0
  %YMM0.i461 = bitcast %union.VectorReg* %6291 to %"class.std::bitset"*
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6292, i64 0, i64 1
  %XMM1.i462 = bitcast %union.VectorReg* %6293 to %union.vec128_t*
  %6294 = bitcast %"class.std::bitset"* %YMM0.i461 to i8*
  %6295 = bitcast %union.vec128_t* %XMM1.i462 to i8*
  %6296 = load i64, i64* %PC.i460
  %6297 = add i64 %6296, 3
  store i64 %6297, i64* %PC.i460
  %6298 = bitcast i8* %6295 to <2 x i32>*
  %6299 = load <2 x i32>, <2 x i32>* %6298, align 1
  %6300 = getelementptr inbounds i8, i8* %6295, i64 8
  %6301 = bitcast i8* %6300 to <2 x i32>*
  %6302 = load <2 x i32>, <2 x i32>* %6301, align 1
  %6303 = extractelement <2 x i32> %6299, i32 0
  %6304 = bitcast i8* %6294 to i32*
  store i32 %6303, i32* %6304, align 1
  %6305 = extractelement <2 x i32> %6299, i32 1
  %6306 = getelementptr inbounds i8, i8* %6294, i64 4
  %6307 = bitcast i8* %6306 to i32*
  store i32 %6305, i32* %6307, align 1
  %6308 = extractelement <2 x i32> %6302, i32 0
  %6309 = getelementptr inbounds i8, i8* %6294, i64 8
  %6310 = bitcast i8* %6309 to i32*
  store i32 %6308, i32* %6310, align 1
  %6311 = extractelement <2 x i32> %6302, i32 1
  %6312 = getelementptr inbounds i8, i8* %6294, i64 12
  %6313 = bitcast i8* %6312 to i32*
  store i32 %6311, i32* %6313, align 1
  store %struct.Memory* %loadMem_4010ef, %struct.Memory** %MEMORY
  %loadMem1_4010f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6315 = getelementptr inbounds %struct.GPR, %struct.GPR* %6314, i32 0, i32 33
  %6316 = getelementptr inbounds %struct.Reg, %struct.Reg* %6315, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %6316 to i64*
  %6317 = load i64, i64* %PC.i459
  %6318 = add i64 %6317, -2530
  %6319 = load i64, i64* %PC.i459
  %6320 = add i64 %6319, 5
  %6321 = load i64, i64* %PC.i459
  %6322 = add i64 %6321, 5
  store i64 %6322, i64* %PC.i459
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6324 = load i64, i64* %6323, align 8
  %6325 = add i64 %6324, -8
  %6326 = inttoptr i64 %6325 to i64*
  store i64 %6320, i64* %6326
  store i64 %6325, i64* %6323, align 8
  %6327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6318, i64* %6327, align 8
  store %struct.Memory* %loadMem1_4010f2, %struct.Memory** %MEMORY
  %loadMem2_4010f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4010f2 = load i64, i64* %3
  %call2_4010f2 = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_4010f2, %struct.Memory* %loadMem2_4010f2)
  store %struct.Memory* %call2_4010f2, %struct.Memory** %MEMORY
  %loadMem_4010f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6329 = getelementptr inbounds %struct.GPR, %struct.GPR* %6328, i32 0, i32 33
  %6330 = getelementptr inbounds %struct.Reg, %struct.Reg* %6329, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %6330 to i64*
  %6331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6332 = getelementptr inbounds %struct.GPR, %struct.GPR* %6331, i32 0, i32 15
  %6333 = getelementptr inbounds %struct.Reg, %struct.Reg* %6332, i32 0, i32 0
  %RBP.i457 = bitcast %union.anon* %6333 to i64*
  %6334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6335 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6334, i64 0, i64 1
  %YMM1.i458 = bitcast %union.VectorReg* %6335 to %"class.std::bitset"*
  %6336 = bitcast %"class.std::bitset"* %YMM1.i458 to i8*
  %6337 = load i64, i64* %RBP.i457
  %6338 = sub i64 %6337, 264
  %6339 = load i64, i64* %PC.i456
  %6340 = add i64 %6339, 8
  store i64 %6340, i64* %PC.i456
  %6341 = inttoptr i64 %6338 to double*
  %6342 = load double, double* %6341
  %6343 = bitcast i8* %6336 to double*
  store double %6342, double* %6343, align 1
  %6344 = getelementptr inbounds i8, i8* %6336, i64 8
  %6345 = bitcast i8* %6344 to double*
  store double 0.000000e+00, double* %6345, align 1
  store %struct.Memory* %loadMem_4010f7, %struct.Memory** %MEMORY
  %loadMem_4010ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %6346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6347 = getelementptr inbounds %struct.GPR, %struct.GPR* %6346, i32 0, i32 33
  %6348 = getelementptr inbounds %struct.Reg, %struct.Reg* %6347, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %6348 to i64*
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6350 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6349, i64 0, i64 1
  %YMM1.i454 = bitcast %union.VectorReg* %6350 to %"class.std::bitset"*
  %6351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6352 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6351, i64 0, i64 0
  %XMM0.i455 = bitcast %union.VectorReg* %6352 to %union.vec128_t*
  %6353 = bitcast %"class.std::bitset"* %YMM1.i454 to i8*
  %6354 = bitcast %"class.std::bitset"* %YMM1.i454 to i8*
  %6355 = bitcast %union.vec128_t* %XMM0.i455 to i8*
  %6356 = load i64, i64* %PC.i453
  %6357 = add i64 %6356, 4
  store i64 %6357, i64* %PC.i453
  %6358 = bitcast i8* %6354 to double*
  %6359 = load double, double* %6358, align 1
  %6360 = getelementptr inbounds i8, i8* %6354, i64 8
  %6361 = bitcast i8* %6360 to i64*
  %6362 = load i64, i64* %6361, align 1
  %6363 = bitcast i8* %6355 to double*
  %6364 = load double, double* %6363, align 1
  %6365 = fadd double %6359, %6364
  %6366 = bitcast i8* %6353 to double*
  store double %6365, double* %6366, align 1
  %6367 = getelementptr inbounds i8, i8* %6353, i64 8
  %6368 = bitcast i8* %6367 to i64*
  store i64 %6362, i64* %6368, align 1
  store %struct.Memory* %loadMem_4010ff, %struct.Memory** %MEMORY
  %loadMem_401103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6370 = getelementptr inbounds %struct.GPR, %struct.GPR* %6369, i32 0, i32 33
  %6371 = getelementptr inbounds %struct.Reg, %struct.Reg* %6370, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %6371 to i64*
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6373 = getelementptr inbounds %struct.GPR, %struct.GPR* %6372, i32 0, i32 15
  %6374 = getelementptr inbounds %struct.Reg, %struct.Reg* %6373, i32 0, i32 0
  %RBP.i451 = bitcast %union.anon* %6374 to i64*
  %6375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6376 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6375, i64 0, i64 0
  %YMM0.i452 = bitcast %union.VectorReg* %6376 to %"class.std::bitset"*
  %6377 = bitcast %"class.std::bitset"* %YMM0.i452 to i8*
  %6378 = load i64, i64* %RBP.i451
  %6379 = sub i64 %6378, 224
  %6380 = load i64, i64* %PC.i450
  %6381 = add i64 %6380, 8
  store i64 %6381, i64* %PC.i450
  %6382 = inttoptr i64 %6379 to double*
  %6383 = load double, double* %6382
  %6384 = bitcast i8* %6377 to double*
  store double %6383, double* %6384, align 1
  %6385 = getelementptr inbounds i8, i8* %6377, i64 8
  %6386 = bitcast i8* %6385 to double*
  store double 0.000000e+00, double* %6386, align 1
  store %struct.Memory* %loadMem_401103, %struct.Memory** %MEMORY
  %loadMem_40110b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6388 = getelementptr inbounds %struct.GPR, %struct.GPR* %6387, i32 0, i32 33
  %6389 = getelementptr inbounds %struct.Reg, %struct.Reg* %6388, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %6389 to i64*
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6391 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6390, i64 0, i64 1
  %YMM1.i448 = bitcast %union.VectorReg* %6391 to %"class.std::bitset"*
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6393 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6392, i64 0, i64 0
  %XMM0.i449 = bitcast %union.VectorReg* %6393 to %union.vec128_t*
  %6394 = bitcast %"class.std::bitset"* %YMM1.i448 to i8*
  %6395 = bitcast %"class.std::bitset"* %YMM1.i448 to i8*
  %6396 = bitcast %union.vec128_t* %XMM0.i449 to i8*
  %6397 = load i64, i64* %PC.i447
  %6398 = add i64 %6397, 4
  store i64 %6398, i64* %PC.i447
  %6399 = bitcast i8* %6395 to double*
  %6400 = load double, double* %6399, align 1
  %6401 = getelementptr inbounds i8, i8* %6395, i64 8
  %6402 = bitcast i8* %6401 to i64*
  %6403 = load i64, i64* %6402, align 1
  %6404 = bitcast i8* %6396 to double*
  %6405 = load double, double* %6404, align 1
  %6406 = fsub double %6400, %6405
  %6407 = bitcast i8* %6394 to double*
  store double %6406, double* %6407, align 1
  %6408 = getelementptr inbounds i8, i8* %6394, i64 8
  %6409 = bitcast i8* %6408 to i64*
  store i64 %6403, i64* %6409, align 1
  store %struct.Memory* %loadMem_40110b, %struct.Memory** %MEMORY
  %loadMem_40110f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6411 = getelementptr inbounds %struct.GPR, %struct.GPR* %6410, i32 0, i32 33
  %6412 = getelementptr inbounds %struct.Reg, %struct.Reg* %6411, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %6412 to i64*
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6414 = getelementptr inbounds %struct.GPR, %struct.GPR* %6413, i32 0, i32 15
  %6415 = getelementptr inbounds %struct.Reg, %struct.Reg* %6414, i32 0, i32 0
  %RBP.i445 = bitcast %union.anon* %6415 to i64*
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6417 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6416, i64 0, i64 2
  %YMM2.i446 = bitcast %union.VectorReg* %6417 to %"class.std::bitset"*
  %6418 = bitcast %"class.std::bitset"* %YMM2.i446 to i8*
  %6419 = load i64, i64* %RBP.i445
  %6420 = sub i64 %6419, 256
  %6421 = load i64, i64* %PC.i444
  %6422 = add i64 %6421, 8
  store i64 %6422, i64* %PC.i444
  %6423 = inttoptr i64 %6420 to double*
  %6424 = load double, double* %6423
  %6425 = bitcast i8* %6418 to double*
  store double %6424, double* %6425, align 1
  %6426 = getelementptr inbounds i8, i8* %6418, i64 8
  %6427 = bitcast i8* %6426 to double*
  store double 0.000000e+00, double* %6427, align 1
  store %struct.Memory* %loadMem_40110f, %struct.Memory** %MEMORY
  %loadMem_401117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6429 = getelementptr inbounds %struct.GPR, %struct.GPR* %6428, i32 0, i32 33
  %6430 = getelementptr inbounds %struct.Reg, %struct.Reg* %6429, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %6430 to i64*
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6432 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6431, i64 0, i64 2
  %YMM2.i442 = bitcast %union.VectorReg* %6432 to %"class.std::bitset"*
  %6433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6434 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6433, i64 0, i64 1
  %XMM1.i443 = bitcast %union.VectorReg* %6434 to %union.vec128_t*
  %6435 = bitcast %"class.std::bitset"* %YMM2.i442 to i8*
  %6436 = bitcast %"class.std::bitset"* %YMM2.i442 to i8*
  %6437 = bitcast %union.vec128_t* %XMM1.i443 to i8*
  %6438 = load i64, i64* %PC.i441
  %6439 = add i64 %6438, 4
  store i64 %6439, i64* %PC.i441
  %6440 = bitcast i8* %6436 to double*
  %6441 = load double, double* %6440, align 1
  %6442 = getelementptr inbounds i8, i8* %6436, i64 8
  %6443 = bitcast i8* %6442 to i64*
  %6444 = load i64, i64* %6443, align 1
  %6445 = bitcast i8* %6437 to double*
  %6446 = load double, double* %6445, align 1
  %6447 = fdiv double %6441, %6446
  %6448 = bitcast i8* %6435 to double*
  store double %6447, double* %6448, align 1
  %6449 = getelementptr inbounds i8, i8* %6435, i64 8
  %6450 = bitcast i8* %6449 to i64*
  store i64 %6444, i64* %6450, align 1
  store %struct.Memory* %loadMem_401117, %struct.Memory** %MEMORY
  %loadMem_40111b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6452 = getelementptr inbounds %struct.GPR, %struct.GPR* %6451, i32 0, i32 33
  %6453 = getelementptr inbounds %struct.Reg, %struct.Reg* %6452, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %6453 to i64*
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6455 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6454, i64 0, i64 0
  %YMM0.i439 = bitcast %union.VectorReg* %6455 to %"class.std::bitset"*
  %6456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6457 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6456, i64 0, i64 2
  %XMM2.i440 = bitcast %union.VectorReg* %6457 to %union.vec128_t*
  %6458 = bitcast %"class.std::bitset"* %YMM0.i439 to i8*
  %6459 = bitcast %union.vec128_t* %XMM2.i440 to i8*
  %6460 = load i64, i64* %PC.i438
  %6461 = add i64 %6460, 3
  store i64 %6461, i64* %PC.i438
  %6462 = bitcast i8* %6459 to <2 x i32>*
  %6463 = load <2 x i32>, <2 x i32>* %6462, align 1
  %6464 = getelementptr inbounds i8, i8* %6459, i64 8
  %6465 = bitcast i8* %6464 to <2 x i32>*
  %6466 = load <2 x i32>, <2 x i32>* %6465, align 1
  %6467 = extractelement <2 x i32> %6463, i32 0
  %6468 = bitcast i8* %6458 to i32*
  store i32 %6467, i32* %6468, align 1
  %6469 = extractelement <2 x i32> %6463, i32 1
  %6470 = getelementptr inbounds i8, i8* %6458, i64 4
  %6471 = bitcast i8* %6470 to i32*
  store i32 %6469, i32* %6471, align 1
  %6472 = extractelement <2 x i32> %6466, i32 0
  %6473 = getelementptr inbounds i8, i8* %6458, i64 8
  %6474 = bitcast i8* %6473 to i32*
  store i32 %6472, i32* %6474, align 1
  %6475 = extractelement <2 x i32> %6466, i32 1
  %6476 = getelementptr inbounds i8, i8* %6458, i64 12
  %6477 = bitcast i8* %6476 to i32*
  store i32 %6475, i32* %6477, align 1
  store %struct.Memory* %loadMem_40111b, %struct.Memory** %MEMORY
  %loadMem1_40111e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6479 = getelementptr inbounds %struct.GPR, %struct.GPR* %6478, i32 0, i32 33
  %6480 = getelementptr inbounds %struct.Reg, %struct.Reg* %6479, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %6480 to i64*
  %6481 = load i64, i64* %PC.i437
  %6482 = add i64 %6481, -2622
  %6483 = load i64, i64* %PC.i437
  %6484 = add i64 %6483, 5
  %6485 = load i64, i64* %PC.i437
  %6486 = add i64 %6485, 5
  store i64 %6486, i64* %PC.i437
  %6487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6488 = load i64, i64* %6487, align 8
  %6489 = add i64 %6488, -8
  %6490 = inttoptr i64 %6489 to i64*
  store i64 %6484, i64* %6490
  store i64 %6489, i64* %6487, align 8
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6482, i64* %6491, align 8
  store %struct.Memory* %loadMem1_40111e, %struct.Memory** %MEMORY
  %loadMem2_40111e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40111e = load i64, i64* %3
  %call2_40111e = call %struct.Memory* @ext_atan(%struct.State* %0, i64 %loadPC_40111e, %struct.Memory* %loadMem2_40111e)
  store %struct.Memory* %call2_40111e, %struct.Memory** %MEMORY
  %loadMem_401123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6493 = getelementptr inbounds %struct.GPR, %struct.GPR* %6492, i32 0, i32 33
  %6494 = getelementptr inbounds %struct.Reg, %struct.Reg* %6493, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %6494 to i64*
  %6495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6496 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6495, i64 0, i64 1
  %YMM1.i436 = bitcast %union.VectorReg* %6496 to %"class.std::bitset"*
  %6497 = bitcast %"class.std::bitset"* %YMM1.i436 to i8*
  %6498 = load i64, i64* %PC.i435
  %6499 = add i64 %6498, 2053
  %6500 = load i64, i64* %PC.i435
  %6501 = add i64 %6500, 8
  store i64 %6501, i64* %PC.i435
  %6502 = inttoptr i64 %6499 to double*
  %6503 = load double, double* %6502
  %6504 = bitcast i8* %6497 to double*
  store double %6503, double* %6504, align 1
  %6505 = getelementptr inbounds i8, i8* %6497, i64 8
  %6506 = bitcast i8* %6505 to double*
  store double 0.000000e+00, double* %6506, align 1
  store %struct.Memory* %loadMem_401123, %struct.Memory** %MEMORY
  %loadMem_40112b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6508 = getelementptr inbounds %struct.GPR, %struct.GPR* %6507, i32 0, i32 33
  %6509 = getelementptr inbounds %struct.Reg, %struct.Reg* %6508, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %6509 to i64*
  %6510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6511 = getelementptr inbounds %struct.GPR, %struct.GPR* %6510, i32 0, i32 15
  %6512 = getelementptr inbounds %struct.Reg, %struct.Reg* %6511, i32 0, i32 0
  %RBP.i433 = bitcast %union.anon* %6512 to i64*
  %6513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6514 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6513, i64 0, i64 2
  %YMM2.i434 = bitcast %union.VectorReg* %6514 to %"class.std::bitset"*
  %6515 = bitcast %"class.std::bitset"* %YMM2.i434 to i8*
  %6516 = load i64, i64* %RBP.i433
  %6517 = sub i64 %6516, 240
  %6518 = load i64, i64* %PC.i432
  %6519 = add i64 %6518, 8
  store i64 %6519, i64* %PC.i432
  %6520 = inttoptr i64 %6517 to double*
  %6521 = load double, double* %6520
  %6522 = bitcast i8* %6515 to double*
  store double %6521, double* %6522, align 1
  %6523 = getelementptr inbounds i8, i8* %6515, i64 8
  %6524 = bitcast i8* %6523 to double*
  store double 0.000000e+00, double* %6524, align 1
  store %struct.Memory* %loadMem_40112b, %struct.Memory** %MEMORY
  %loadMem_401133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6526 = getelementptr inbounds %struct.GPR, %struct.GPR* %6525, i32 0, i32 33
  %6527 = getelementptr inbounds %struct.Reg, %struct.Reg* %6526, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %6527 to i64*
  %6528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6529 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6528, i64 0, i64 2
  %YMM2.i430 = bitcast %union.VectorReg* %6529 to %"class.std::bitset"*
  %6530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6531 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6530, i64 0, i64 0
  %XMM0.i431 = bitcast %union.VectorReg* %6531 to %union.vec128_t*
  %6532 = bitcast %"class.std::bitset"* %YMM2.i430 to i8*
  %6533 = bitcast %"class.std::bitset"* %YMM2.i430 to i8*
  %6534 = bitcast %union.vec128_t* %XMM0.i431 to i8*
  %6535 = load i64, i64* %PC.i429
  %6536 = add i64 %6535, 4
  store i64 %6536, i64* %PC.i429
  %6537 = bitcast i8* %6533 to double*
  %6538 = load double, double* %6537, align 1
  %6539 = getelementptr inbounds i8, i8* %6533, i64 8
  %6540 = bitcast i8* %6539 to i64*
  %6541 = load i64, i64* %6540, align 1
  %6542 = bitcast i8* %6534 to double*
  %6543 = load double, double* %6542, align 1
  %6544 = fmul double %6538, %6543
  %6545 = bitcast i8* %6532 to double*
  store double %6544, double* %6545, align 1
  %6546 = getelementptr inbounds i8, i8* %6532, i64 8
  %6547 = bitcast i8* %6546 to i64*
  store i64 %6541, i64* %6547, align 1
  store %struct.Memory* %loadMem_401133, %struct.Memory** %MEMORY
  %loadMem_401137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6549 = getelementptr inbounds %struct.GPR, %struct.GPR* %6548, i32 0, i32 33
  %6550 = getelementptr inbounds %struct.Reg, %struct.Reg* %6549, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %6550 to i64*
  %6551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6552 = getelementptr inbounds %struct.GPR, %struct.GPR* %6551, i32 0, i32 15
  %6553 = getelementptr inbounds %struct.Reg, %struct.Reg* %6552, i32 0, i32 0
  %RBP.i427 = bitcast %union.anon* %6553 to i64*
  %6554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6555 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6554, i64 0, i64 2
  %XMM2.i428 = bitcast %union.VectorReg* %6555 to %union.vec128_t*
  %6556 = load i64, i64* %RBP.i427
  %6557 = sub i64 %6556, 144
  %6558 = bitcast %union.vec128_t* %XMM2.i428 to i8*
  %6559 = load i64, i64* %PC.i426
  %6560 = add i64 %6559, 8
  store i64 %6560, i64* %PC.i426
  %6561 = bitcast i8* %6558 to double*
  %6562 = load double, double* %6561, align 1
  %6563 = inttoptr i64 %6557 to double*
  store double %6562, double* %6563
  store %struct.Memory* %loadMem_401137, %struct.Memory** %MEMORY
  %loadMem_40113f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6565 = getelementptr inbounds %struct.GPR, %struct.GPR* %6564, i32 0, i32 33
  %6566 = getelementptr inbounds %struct.Reg, %struct.Reg* %6565, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %6566 to i64*
  %6567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6568 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6567, i64 0, i64 0
  %YMM0.i425 = bitcast %union.VectorReg* %6568 to %"class.std::bitset"*
  %6569 = bitcast %"class.std::bitset"* %YMM0.i425 to i8*
  %6570 = load i64, i64* %PC.i424
  %6571 = add i64 %6570, 9
  store i64 %6571, i64* %PC.i424
  %6572 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %6573 = bitcast i8* %6569 to double*
  store double %6572, double* %6573, align 1
  %6574 = getelementptr inbounds i8, i8* %6569, i64 8
  %6575 = bitcast i8* %6574 to double*
  store double 0.000000e+00, double* %6575, align 1
  store %struct.Memory* %loadMem_40113f, %struct.Memory** %MEMORY
  %loadMem_401148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6577 = getelementptr inbounds %struct.GPR, %struct.GPR* %6576, i32 0, i32 33
  %6578 = getelementptr inbounds %struct.Reg, %struct.Reg* %6577, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %6578 to i64*
  %6579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6580 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6579, i64 0, i64 2
  %YMM2.i423 = bitcast %union.VectorReg* %6580 to %"class.std::bitset"*
  %6581 = bitcast %"class.std::bitset"* %YMM2.i423 to i8*
  %6582 = load i64, i64* %PC.i422
  %6583 = add i64 %6582, 9
  store i64 %6583, i64* %PC.i422
  %6584 = load double, double* bitcast (%G_0x6020b0_type* @G_0x6020b0 to double*)
  %6585 = bitcast i8* %6581 to double*
  store double %6584, double* %6585, align 1
  %6586 = getelementptr inbounds i8, i8* %6581, i64 8
  %6587 = bitcast i8* %6586 to double*
  store double 0.000000e+00, double* %6587, align 1
  store %struct.Memory* %loadMem_401148, %struct.Memory** %MEMORY
  %loadMem_401151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6589 = getelementptr inbounds %struct.GPR, %struct.GPR* %6588, i32 0, i32 33
  %6590 = getelementptr inbounds %struct.Reg, %struct.Reg* %6589, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %6590 to i64*
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6592 = getelementptr inbounds %struct.GPR, %struct.GPR* %6591, i32 0, i32 15
  %6593 = getelementptr inbounds %struct.Reg, %struct.Reg* %6592, i32 0, i32 0
  %RBP.i420 = bitcast %union.anon* %6593 to i64*
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6595 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6594, i64 0, i64 3
  %YMM3.i421 = bitcast %union.VectorReg* %6595 to %"class.std::bitset"*
  %6596 = bitcast %"class.std::bitset"* %YMM3.i421 to i8*
  %6597 = load i64, i64* %RBP.i420
  %6598 = sub i64 %6597, 152
  %6599 = load i64, i64* %PC.i419
  %6600 = add i64 %6599, 8
  store i64 %6600, i64* %PC.i419
  %6601 = inttoptr i64 %6598 to double*
  %6602 = load double, double* %6601
  %6603 = bitcast i8* %6596 to double*
  store double %6602, double* %6603, align 1
  %6604 = getelementptr inbounds i8, i8* %6596, i64 8
  %6605 = bitcast i8* %6604 to double*
  store double 0.000000e+00, double* %6605, align 1
  store %struct.Memory* %loadMem_401151, %struct.Memory** %MEMORY
  %loadMem_401159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6607 = getelementptr inbounds %struct.GPR, %struct.GPR* %6606, i32 0, i32 33
  %6608 = getelementptr inbounds %struct.Reg, %struct.Reg* %6607, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %6608 to i64*
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6610 = getelementptr inbounds %struct.GPR, %struct.GPR* %6609, i32 0, i32 15
  %6611 = getelementptr inbounds %struct.Reg, %struct.Reg* %6610, i32 0, i32 0
  %RBP.i417 = bitcast %union.anon* %6611 to i64*
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6613 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6612, i64 0, i64 0
  %XMM0.i418 = bitcast %union.VectorReg* %6613 to %union.vec128_t*
  %6614 = load i64, i64* %RBP.i417
  %6615 = sub i64 %6614, 272
  %6616 = bitcast %union.vec128_t* %XMM0.i418 to i8*
  %6617 = load i64, i64* %PC.i416
  %6618 = add i64 %6617, 8
  store i64 %6618, i64* %PC.i416
  %6619 = bitcast i8* %6616 to double*
  %6620 = load double, double* %6619, align 1
  %6621 = inttoptr i64 %6615 to double*
  store double %6620, double* %6621
  store %struct.Memory* %loadMem_401159, %struct.Memory** %MEMORY
  %loadMem_401161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 33
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %6624 to i64*
  %6625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6626 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6625, i64 0, i64 0
  %YMM0.i415 = bitcast %union.VectorReg* %6626 to %"class.std::bitset"*
  %6627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6628 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6627, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %6628 to %union.vec128_t*
  %6629 = bitcast %"class.std::bitset"* %YMM0.i415 to i8*
  %6630 = bitcast %union.vec128_t* %XMM3.i to i8*
  %6631 = load i64, i64* %PC.i414
  %6632 = add i64 %6631, 3
  store i64 %6632, i64* %PC.i414
  %6633 = bitcast i8* %6630 to <2 x i32>*
  %6634 = load <2 x i32>, <2 x i32>* %6633, align 1
  %6635 = getelementptr inbounds i8, i8* %6630, i64 8
  %6636 = bitcast i8* %6635 to <2 x i32>*
  %6637 = load <2 x i32>, <2 x i32>* %6636, align 1
  %6638 = extractelement <2 x i32> %6634, i32 0
  %6639 = bitcast i8* %6629 to i32*
  store i32 %6638, i32* %6639, align 1
  %6640 = extractelement <2 x i32> %6634, i32 1
  %6641 = getelementptr inbounds i8, i8* %6629, i64 4
  %6642 = bitcast i8* %6641 to i32*
  store i32 %6640, i32* %6642, align 1
  %6643 = extractelement <2 x i32> %6637, i32 0
  %6644 = getelementptr inbounds i8, i8* %6629, i64 8
  %6645 = bitcast i8* %6644 to i32*
  store i32 %6643, i32* %6645, align 1
  %6646 = extractelement <2 x i32> %6637, i32 1
  %6647 = getelementptr inbounds i8, i8* %6629, i64 12
  %6648 = bitcast i8* %6647 to i32*
  store i32 %6646, i32* %6648, align 1
  store %struct.Memory* %loadMem_401161, %struct.Memory** %MEMORY
  %loadMem_401164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 33
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %6651 to i64*
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6653 = getelementptr inbounds %struct.GPR, %struct.GPR* %6652, i32 0, i32 15
  %6654 = getelementptr inbounds %struct.Reg, %struct.Reg* %6653, i32 0, i32 0
  %RBP.i412 = bitcast %union.anon* %6654 to i64*
  %6655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6656 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6655, i64 0, i64 1
  %XMM1.i413 = bitcast %union.VectorReg* %6656 to %union.vec128_t*
  %6657 = load i64, i64* %RBP.i412
  %6658 = sub i64 %6657, 280
  %6659 = bitcast %union.vec128_t* %XMM1.i413 to i8*
  %6660 = load i64, i64* %PC.i411
  %6661 = add i64 %6660, 8
  store i64 %6661, i64* %PC.i411
  %6662 = bitcast i8* %6659 to double*
  %6663 = load double, double* %6662, align 1
  %6664 = inttoptr i64 %6658 to double*
  store double %6663, double* %6664
  store %struct.Memory* %loadMem_401164, %struct.Memory** %MEMORY
  %loadMem_40116c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6666 = getelementptr inbounds %struct.GPR, %struct.GPR* %6665, i32 0, i32 33
  %6667 = getelementptr inbounds %struct.Reg, %struct.Reg* %6666, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %6667 to i64*
  %6668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6669 = getelementptr inbounds %struct.GPR, %struct.GPR* %6668, i32 0, i32 15
  %6670 = getelementptr inbounds %struct.Reg, %struct.Reg* %6669, i32 0, i32 0
  %RBP.i409 = bitcast %union.anon* %6670 to i64*
  %6671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6672 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6671, i64 0, i64 2
  %XMM2.i410 = bitcast %union.VectorReg* %6672 to %union.vec128_t*
  %6673 = load i64, i64* %RBP.i409
  %6674 = sub i64 %6673, 288
  %6675 = bitcast %union.vec128_t* %XMM2.i410 to i8*
  %6676 = load i64, i64* %PC.i408
  %6677 = add i64 %6676, 8
  store i64 %6677, i64* %PC.i408
  %6678 = bitcast i8* %6675 to double*
  %6679 = load double, double* %6678, align 1
  %6680 = inttoptr i64 %6674 to double*
  store double %6679, double* %6680
  store %struct.Memory* %loadMem_40116c, %struct.Memory** %MEMORY
  %loadMem1_401174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6682 = getelementptr inbounds %struct.GPR, %struct.GPR* %6681, i32 0, i32 33
  %6683 = getelementptr inbounds %struct.Reg, %struct.Reg* %6682, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %6683 to i64*
  %6684 = load i64, i64* %PC.i407
  %6685 = add i64 %6684, -2596
  %6686 = load i64, i64* %PC.i407
  %6687 = add i64 %6686, 5
  %6688 = load i64, i64* %PC.i407
  %6689 = add i64 %6688, 5
  store i64 %6689, i64* %PC.i407
  %6690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6691 = load i64, i64* %6690, align 8
  %6692 = add i64 %6691, -8
  %6693 = inttoptr i64 %6692 to i64*
  store i64 %6687, i64* %6693
  store i64 %6692, i64* %6690, align 8
  %6694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6685, i64* %6694, align 8
  store %struct.Memory* %loadMem1_401174, %struct.Memory** %MEMORY
  %loadMem2_401174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401174 = load i64, i64* %3
  %call2_401174 = call %struct.Memory* @ext_sin(%struct.State* %0, i64 %loadPC_401174, %struct.Memory* %loadMem2_401174)
  store %struct.Memory* %call2_401174, %struct.Memory** %MEMORY
  %loadMem_401179 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6696 = getelementptr inbounds %struct.GPR, %struct.GPR* %6695, i32 0, i32 33
  %6697 = getelementptr inbounds %struct.Reg, %struct.Reg* %6696, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %6697 to i64*
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6699 = getelementptr inbounds %struct.GPR, %struct.GPR* %6698, i32 0, i32 15
  %6700 = getelementptr inbounds %struct.Reg, %struct.Reg* %6699, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %6700 to i64*
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6702 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6701, i64 0, i64 1
  %YMM1.i406 = bitcast %union.VectorReg* %6702 to %"class.std::bitset"*
  %6703 = bitcast %"class.std::bitset"* %YMM1.i406 to i8*
  %6704 = load i64, i64* %RBP.i405
  %6705 = sub i64 %6704, 288
  %6706 = load i64, i64* %PC.i404
  %6707 = add i64 %6706, 8
  store i64 %6707, i64* %PC.i404
  %6708 = inttoptr i64 %6705 to double*
  %6709 = load double, double* %6708
  %6710 = bitcast i8* %6703 to double*
  store double %6709, double* %6710, align 1
  %6711 = getelementptr inbounds i8, i8* %6703, i64 8
  %6712 = bitcast i8* %6711 to double*
  store double 0.000000e+00, double* %6712, align 1
  store %struct.Memory* %loadMem_401179, %struct.Memory** %MEMORY
  %loadMem_401181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 33
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %6715 to i64*
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6717 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6716, i64 0, i64 1
  %YMM1.i402 = bitcast %union.VectorReg* %6717 to %"class.std::bitset"*
  %6718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6719 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6718, i64 0, i64 0
  %XMM0.i403 = bitcast %union.VectorReg* %6719 to %union.vec128_t*
  %6720 = bitcast %"class.std::bitset"* %YMM1.i402 to i8*
  %6721 = bitcast %"class.std::bitset"* %YMM1.i402 to i8*
  %6722 = bitcast %union.vec128_t* %XMM0.i403 to i8*
  %6723 = load i64, i64* %PC.i401
  %6724 = add i64 %6723, 4
  store i64 %6724, i64* %PC.i401
  %6725 = bitcast i8* %6721 to double*
  %6726 = load double, double* %6725, align 1
  %6727 = getelementptr inbounds i8, i8* %6721, i64 8
  %6728 = bitcast i8* %6727 to i64*
  %6729 = load i64, i64* %6728, align 1
  %6730 = bitcast i8* %6722 to double*
  %6731 = load double, double* %6730, align 1
  %6732 = fmul double %6726, %6731
  %6733 = bitcast i8* %6720 to double*
  store double %6732, double* %6733, align 1
  %6734 = getelementptr inbounds i8, i8* %6720, i64 8
  %6735 = bitcast i8* %6734 to i64*
  store i64 %6729, i64* %6735, align 1
  store %struct.Memory* %loadMem_401181, %struct.Memory** %MEMORY
  %loadMem_401185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6737 = getelementptr inbounds %struct.GPR, %struct.GPR* %6736, i32 0, i32 33
  %6738 = getelementptr inbounds %struct.Reg, %struct.Reg* %6737, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %6738 to i64*
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6740 = getelementptr inbounds %struct.GPR, %struct.GPR* %6739, i32 0, i32 15
  %6741 = getelementptr inbounds %struct.Reg, %struct.Reg* %6740, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %6741 to i64*
  %6742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6743 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6742, i64 0, i64 0
  %YMM0.i400 = bitcast %union.VectorReg* %6743 to %"class.std::bitset"*
  %6744 = bitcast %"class.std::bitset"* %YMM0.i400 to i8*
  %6745 = load i64, i64* %RBP.i399
  %6746 = sub i64 %6745, 152
  %6747 = load i64, i64* %PC.i398
  %6748 = add i64 %6747, 8
  store i64 %6748, i64* %PC.i398
  %6749 = inttoptr i64 %6746 to double*
  %6750 = load double, double* %6749
  %6751 = bitcast i8* %6744 to double*
  store double %6750, double* %6751, align 1
  %6752 = getelementptr inbounds i8, i8* %6744, i64 8
  %6753 = bitcast i8* %6752 to double*
  store double 0.000000e+00, double* %6753, align 1
  store %struct.Memory* %loadMem_401185, %struct.Memory** %MEMORY
  %loadMem_40118d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6755 = getelementptr inbounds %struct.GPR, %struct.GPR* %6754, i32 0, i32 33
  %6756 = getelementptr inbounds %struct.Reg, %struct.Reg* %6755, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %6756 to i64*
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6758 = getelementptr inbounds %struct.GPR, %struct.GPR* %6757, i32 0, i32 15
  %6759 = getelementptr inbounds %struct.Reg, %struct.Reg* %6758, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %6759 to i64*
  %6760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6761 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6760, i64 0, i64 1
  %XMM1.i397 = bitcast %union.VectorReg* %6761 to %union.vec128_t*
  %6762 = load i64, i64* %RBP.i396
  %6763 = sub i64 %6762, 296
  %6764 = bitcast %union.vec128_t* %XMM1.i397 to i8*
  %6765 = load i64, i64* %PC.i395
  %6766 = add i64 %6765, 8
  store i64 %6766, i64* %PC.i395
  %6767 = bitcast i8* %6764 to double*
  %6768 = load double, double* %6767, align 1
  %6769 = inttoptr i64 %6763 to double*
  store double %6768, double* %6769
  store %struct.Memory* %loadMem_40118d, %struct.Memory** %MEMORY
  %loadMem1_401195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6771 = getelementptr inbounds %struct.GPR, %struct.GPR* %6770, i32 0, i32 33
  %6772 = getelementptr inbounds %struct.Reg, %struct.Reg* %6771, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %6772 to i64*
  %6773 = load i64, i64* %PC.i394
  %6774 = add i64 %6773, -2693
  %6775 = load i64, i64* %PC.i394
  %6776 = add i64 %6775, 5
  %6777 = load i64, i64* %PC.i394
  %6778 = add i64 %6777, 5
  store i64 %6778, i64* %PC.i394
  %6779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6780 = load i64, i64* %6779, align 8
  %6781 = add i64 %6780, -8
  %6782 = inttoptr i64 %6781 to i64*
  store i64 %6776, i64* %6782
  store i64 %6781, i64* %6779, align 8
  %6783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6774, i64* %6783, align 8
  store %struct.Memory* %loadMem1_401195, %struct.Memory** %MEMORY
  %loadMem2_401195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401195 = load i64, i64* %3
  %call2_401195 = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_401195, %struct.Memory* %loadMem2_401195)
  store %struct.Memory* %call2_401195, %struct.Memory** %MEMORY
  %loadMem_40119a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6785 = getelementptr inbounds %struct.GPR, %struct.GPR* %6784, i32 0, i32 33
  %6786 = getelementptr inbounds %struct.Reg, %struct.Reg* %6785, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %6786 to i64*
  %6787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6788 = getelementptr inbounds %struct.GPR, %struct.GPR* %6787, i32 0, i32 15
  %6789 = getelementptr inbounds %struct.Reg, %struct.Reg* %6788, i32 0, i32 0
  %RBP.i392 = bitcast %union.anon* %6789 to i64*
  %6790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6791 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6790, i64 0, i64 1
  %YMM1.i393 = bitcast %union.VectorReg* %6791 to %"class.std::bitset"*
  %6792 = bitcast %"class.std::bitset"* %YMM1.i393 to i8*
  %6793 = load i64, i64* %RBP.i392
  %6794 = sub i64 %6793, 296
  %6795 = load i64, i64* %PC.i391
  %6796 = add i64 %6795, 8
  store i64 %6796, i64* %PC.i391
  %6797 = inttoptr i64 %6794 to double*
  %6798 = load double, double* %6797
  %6799 = bitcast i8* %6792 to double*
  store double %6798, double* %6799, align 1
  %6800 = getelementptr inbounds i8, i8* %6792, i64 8
  %6801 = bitcast i8* %6800 to double*
  store double 0.000000e+00, double* %6801, align 1
  store %struct.Memory* %loadMem_40119a, %struct.Memory** %MEMORY
  %loadMem_4011a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6803 = getelementptr inbounds %struct.GPR, %struct.GPR* %6802, i32 0, i32 33
  %6804 = getelementptr inbounds %struct.Reg, %struct.Reg* %6803, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %6804 to i64*
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6806 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6805, i64 0, i64 1
  %YMM1.i389 = bitcast %union.VectorReg* %6806 to %"class.std::bitset"*
  %6807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6808 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6807, i64 0, i64 0
  %XMM0.i390 = bitcast %union.VectorReg* %6808 to %union.vec128_t*
  %6809 = bitcast %"class.std::bitset"* %YMM1.i389 to i8*
  %6810 = bitcast %"class.std::bitset"* %YMM1.i389 to i8*
  %6811 = bitcast %union.vec128_t* %XMM0.i390 to i8*
  %6812 = load i64, i64* %PC.i388
  %6813 = add i64 %6812, 4
  store i64 %6813, i64* %PC.i388
  %6814 = bitcast i8* %6810 to double*
  %6815 = load double, double* %6814, align 1
  %6816 = getelementptr inbounds i8, i8* %6810, i64 8
  %6817 = bitcast i8* %6816 to i64*
  %6818 = load i64, i64* %6817, align 1
  %6819 = bitcast i8* %6811 to double*
  %6820 = load double, double* %6819, align 1
  %6821 = fmul double %6815, %6820
  %6822 = bitcast i8* %6809 to double*
  store double %6821, double* %6822, align 1
  %6823 = getelementptr inbounds i8, i8* %6809, i64 8
  %6824 = bitcast i8* %6823 to i64*
  store i64 %6818, i64* %6824, align 1
  store %struct.Memory* %loadMem_4011a2, %struct.Memory** %MEMORY
  %loadMem_4011a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6826 = getelementptr inbounds %struct.GPR, %struct.GPR* %6825, i32 0, i32 33
  %6827 = getelementptr inbounds %struct.Reg, %struct.Reg* %6826, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %6827 to i64*
  %6828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6829 = getelementptr inbounds %struct.GPR, %struct.GPR* %6828, i32 0, i32 15
  %6830 = getelementptr inbounds %struct.Reg, %struct.Reg* %6829, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %6830 to i64*
  %6831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6832 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6831, i64 0, i64 0
  %YMM0.i387 = bitcast %union.VectorReg* %6832 to %"class.std::bitset"*
  %6833 = bitcast %"class.std::bitset"* %YMM0.i387 to i8*
  %6834 = load i64, i64* %RBP.i386
  %6835 = sub i64 %6834, 144
  %6836 = load i64, i64* %PC.i385
  %6837 = add i64 %6836, 8
  store i64 %6837, i64* %PC.i385
  %6838 = inttoptr i64 %6835 to double*
  %6839 = load double, double* %6838
  %6840 = bitcast i8* %6833 to double*
  store double %6839, double* %6840, align 1
  %6841 = getelementptr inbounds i8, i8* %6833, i64 8
  %6842 = bitcast i8* %6841 to double*
  store double 0.000000e+00, double* %6842, align 1
  store %struct.Memory* %loadMem_4011a6, %struct.Memory** %MEMORY
  %loadMem_4011ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6844 = getelementptr inbounds %struct.GPR, %struct.GPR* %6843, i32 0, i32 33
  %6845 = getelementptr inbounds %struct.Reg, %struct.Reg* %6844, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %6845 to i64*
  %6846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6847 = getelementptr inbounds %struct.GPR, %struct.GPR* %6846, i32 0, i32 15
  %6848 = getelementptr inbounds %struct.Reg, %struct.Reg* %6847, i32 0, i32 0
  %RBP.i383 = bitcast %union.anon* %6848 to i64*
  %6849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6850 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6849, i64 0, i64 0
  %YMM0.i384 = bitcast %union.VectorReg* %6850 to %"class.std::bitset"*
  %6851 = bitcast %"class.std::bitset"* %YMM0.i384 to i8*
  %6852 = bitcast %"class.std::bitset"* %YMM0.i384 to i8*
  %6853 = load i64, i64* %RBP.i383
  %6854 = sub i64 %6853, 152
  %6855 = load i64, i64* %PC.i382
  %6856 = add i64 %6855, 8
  store i64 %6856, i64* %PC.i382
  %6857 = bitcast i8* %6852 to double*
  %6858 = load double, double* %6857, align 1
  %6859 = getelementptr inbounds i8, i8* %6852, i64 8
  %6860 = bitcast i8* %6859 to i64*
  %6861 = load i64, i64* %6860, align 1
  %6862 = inttoptr i64 %6854 to double*
  %6863 = load double, double* %6862
  %6864 = fadd double %6858, %6863
  %6865 = bitcast i8* %6851 to double*
  store double %6864, double* %6865, align 1
  %6866 = getelementptr inbounds i8, i8* %6851, i64 8
  %6867 = bitcast i8* %6866 to i64*
  store i64 %6861, i64* %6867, align 1
  store %struct.Memory* %loadMem_4011ae, %struct.Memory** %MEMORY
  %loadMem_4011b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6869 = getelementptr inbounds %struct.GPR, %struct.GPR* %6868, i32 0, i32 33
  %6870 = getelementptr inbounds %struct.Reg, %struct.Reg* %6869, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %6870 to i64*
  %6871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6872 = getelementptr inbounds %struct.GPR, %struct.GPR* %6871, i32 0, i32 15
  %6873 = getelementptr inbounds %struct.Reg, %struct.Reg* %6872, i32 0, i32 0
  %RBP.i380 = bitcast %union.anon* %6873 to i64*
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6875 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6874, i64 0, i64 1
  %XMM1.i381 = bitcast %union.VectorReg* %6875 to %union.vec128_t*
  %6876 = load i64, i64* %RBP.i380
  %6877 = sub i64 %6876, 304
  %6878 = bitcast %union.vec128_t* %XMM1.i381 to i8*
  %6879 = load i64, i64* %PC.i379
  %6880 = add i64 %6879, 8
  store i64 %6880, i64* %PC.i379
  %6881 = bitcast i8* %6878 to double*
  %6882 = load double, double* %6881, align 1
  %6883 = inttoptr i64 %6877 to double*
  store double %6882, double* %6883
  store %struct.Memory* %loadMem_4011b6, %struct.Memory** %MEMORY
  %loadMem1_4011be = load %struct.Memory*, %struct.Memory** %MEMORY
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 33
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %6886 to i64*
  %6887 = load i64, i64* %PC.i378
  %6888 = add i64 %6887, -2734
  %6889 = load i64, i64* %PC.i378
  %6890 = add i64 %6889, 5
  %6891 = load i64, i64* %PC.i378
  %6892 = add i64 %6891, 5
  store i64 %6892, i64* %PC.i378
  %6893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6894 = load i64, i64* %6893, align 8
  %6895 = add i64 %6894, -8
  %6896 = inttoptr i64 %6895 to i64*
  store i64 %6890, i64* %6896
  store i64 %6895, i64* %6893, align 8
  %6897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6888, i64* %6897, align 8
  store %struct.Memory* %loadMem1_4011be, %struct.Memory** %MEMORY
  %loadMem2_4011be = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011be = load i64, i64* %3
  %call2_4011be = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_4011be, %struct.Memory* %loadMem2_4011be)
  store %struct.Memory* %call2_4011be, %struct.Memory** %MEMORY
  %loadMem_4011c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6899 = getelementptr inbounds %struct.GPR, %struct.GPR* %6898, i32 0, i32 33
  %6900 = getelementptr inbounds %struct.Reg, %struct.Reg* %6899, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %6900 to i64*
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6902 = getelementptr inbounds %struct.GPR, %struct.GPR* %6901, i32 0, i32 15
  %6903 = getelementptr inbounds %struct.Reg, %struct.Reg* %6902, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %6903 to i64*
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6905 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6904, i64 0, i64 1
  %YMM1.i377 = bitcast %union.VectorReg* %6905 to %"class.std::bitset"*
  %6906 = bitcast %"class.std::bitset"* %YMM1.i377 to i8*
  %6907 = load i64, i64* %RBP.i376
  %6908 = sub i64 %6907, 144
  %6909 = load i64, i64* %PC.i375
  %6910 = add i64 %6909, 8
  store i64 %6910, i64* %PC.i375
  %6911 = inttoptr i64 %6908 to double*
  %6912 = load double, double* %6911
  %6913 = bitcast i8* %6906 to double*
  store double %6912, double* %6913, align 1
  %6914 = getelementptr inbounds i8, i8* %6906, i64 8
  %6915 = bitcast i8* %6914 to double*
  store double 0.000000e+00, double* %6915, align 1
  store %struct.Memory* %loadMem_4011c3, %struct.Memory** %MEMORY
  %loadMem_4011cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6917 = getelementptr inbounds %struct.GPR, %struct.GPR* %6916, i32 0, i32 33
  %6918 = getelementptr inbounds %struct.Reg, %struct.Reg* %6917, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %6918 to i64*
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6920 = getelementptr inbounds %struct.GPR, %struct.GPR* %6919, i32 0, i32 15
  %6921 = getelementptr inbounds %struct.Reg, %struct.Reg* %6920, i32 0, i32 0
  %RBP.i373 = bitcast %union.anon* %6921 to i64*
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6923 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6922, i64 0, i64 1
  %YMM1.i374 = bitcast %union.VectorReg* %6923 to %"class.std::bitset"*
  %6924 = bitcast %"class.std::bitset"* %YMM1.i374 to i8*
  %6925 = bitcast %"class.std::bitset"* %YMM1.i374 to i8*
  %6926 = load i64, i64* %RBP.i373
  %6927 = sub i64 %6926, 152
  %6928 = load i64, i64* %PC.i372
  %6929 = add i64 %6928, 8
  store i64 %6929, i64* %PC.i372
  %6930 = bitcast i8* %6925 to double*
  %6931 = load double, double* %6930, align 1
  %6932 = getelementptr inbounds i8, i8* %6925, i64 8
  %6933 = bitcast i8* %6932 to i64*
  %6934 = load i64, i64* %6933, align 1
  %6935 = inttoptr i64 %6927 to double*
  %6936 = load double, double* %6935
  %6937 = fsub double %6931, %6936
  %6938 = bitcast i8* %6924 to double*
  store double %6937, double* %6938, align 1
  %6939 = getelementptr inbounds i8, i8* %6924, i64 8
  %6940 = bitcast i8* %6939 to i64*
  store i64 %6934, i64* %6940, align 1
  store %struct.Memory* %loadMem_4011cb, %struct.Memory** %MEMORY
  %loadMem_4011d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6942 = getelementptr inbounds %struct.GPR, %struct.GPR* %6941, i32 0, i32 33
  %6943 = getelementptr inbounds %struct.Reg, %struct.Reg* %6942, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %6943 to i64*
  %6944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6945 = getelementptr inbounds %struct.GPR, %struct.GPR* %6944, i32 0, i32 15
  %6946 = getelementptr inbounds %struct.Reg, %struct.Reg* %6945, i32 0, i32 0
  %RBP.i370 = bitcast %union.anon* %6946 to i64*
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6948 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6947, i64 0, i64 0
  %XMM0.i371 = bitcast %union.VectorReg* %6948 to %union.vec128_t*
  %6949 = load i64, i64* %RBP.i370
  %6950 = sub i64 %6949, 312
  %6951 = bitcast %union.vec128_t* %XMM0.i371 to i8*
  %6952 = load i64, i64* %PC.i369
  %6953 = add i64 %6952, 8
  store i64 %6953, i64* %PC.i369
  %6954 = bitcast i8* %6951 to double*
  %6955 = load double, double* %6954, align 1
  %6956 = inttoptr i64 %6950 to double*
  store double %6955, double* %6956
  store %struct.Memory* %loadMem_4011d3, %struct.Memory** %MEMORY
  %loadMem_4011db = load %struct.Memory*, %struct.Memory** %MEMORY
  %6957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6958 = getelementptr inbounds %struct.GPR, %struct.GPR* %6957, i32 0, i32 33
  %6959 = getelementptr inbounds %struct.Reg, %struct.Reg* %6958, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %6959 to i64*
  %6960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6961 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6960, i64 0, i64 0
  %YMM0.i367 = bitcast %union.VectorReg* %6961 to %"class.std::bitset"*
  %6962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6963 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6962, i64 0, i64 1
  %XMM1.i368 = bitcast %union.VectorReg* %6963 to %union.vec128_t*
  %6964 = bitcast %"class.std::bitset"* %YMM0.i367 to i8*
  %6965 = bitcast %union.vec128_t* %XMM1.i368 to i8*
  %6966 = load i64, i64* %PC.i366
  %6967 = add i64 %6966, 3
  store i64 %6967, i64* %PC.i366
  %6968 = bitcast i8* %6965 to <2 x i32>*
  %6969 = load <2 x i32>, <2 x i32>* %6968, align 1
  %6970 = getelementptr inbounds i8, i8* %6965, i64 8
  %6971 = bitcast i8* %6970 to <2 x i32>*
  %6972 = load <2 x i32>, <2 x i32>* %6971, align 1
  %6973 = extractelement <2 x i32> %6969, i32 0
  %6974 = bitcast i8* %6964 to i32*
  store i32 %6973, i32* %6974, align 1
  %6975 = extractelement <2 x i32> %6969, i32 1
  %6976 = getelementptr inbounds i8, i8* %6964, i64 4
  %6977 = bitcast i8* %6976 to i32*
  store i32 %6975, i32* %6977, align 1
  %6978 = extractelement <2 x i32> %6972, i32 0
  %6979 = getelementptr inbounds i8, i8* %6964, i64 8
  %6980 = bitcast i8* %6979 to i32*
  store i32 %6978, i32* %6980, align 1
  %6981 = extractelement <2 x i32> %6972, i32 1
  %6982 = getelementptr inbounds i8, i8* %6964, i64 12
  %6983 = bitcast i8* %6982 to i32*
  store i32 %6981, i32* %6983, align 1
  store %struct.Memory* %loadMem_4011db, %struct.Memory** %MEMORY
  %loadMem1_4011de = load %struct.Memory*, %struct.Memory** %MEMORY
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6985 = getelementptr inbounds %struct.GPR, %struct.GPR* %6984, i32 0, i32 33
  %6986 = getelementptr inbounds %struct.Reg, %struct.Reg* %6985, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %6986 to i64*
  %6987 = load i64, i64* %PC.i365
  %6988 = add i64 %6987, -2766
  %6989 = load i64, i64* %PC.i365
  %6990 = add i64 %6989, 5
  %6991 = load i64, i64* %PC.i365
  %6992 = add i64 %6991, 5
  store i64 %6992, i64* %PC.i365
  %6993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6994 = load i64, i64* %6993, align 8
  %6995 = add i64 %6994, -8
  %6996 = inttoptr i64 %6995 to i64*
  store i64 %6990, i64* %6996
  store i64 %6995, i64* %6993, align 8
  %6997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6988, i64* %6997, align 8
  store %struct.Memory* %loadMem1_4011de, %struct.Memory** %MEMORY
  %loadMem2_4011de = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011de = load i64, i64* %3
  %call2_4011de = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_4011de, %struct.Memory* %loadMem2_4011de)
  store %struct.Memory* %call2_4011de, %struct.Memory** %MEMORY
  %loadMem_4011e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6999 = getelementptr inbounds %struct.GPR, %struct.GPR* %6998, i32 0, i32 33
  %7000 = getelementptr inbounds %struct.Reg, %struct.Reg* %6999, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %7000 to i64*
  %7001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7002 = getelementptr inbounds %struct.GPR, %struct.GPR* %7001, i32 0, i32 15
  %7003 = getelementptr inbounds %struct.Reg, %struct.Reg* %7002, i32 0, i32 0
  %RBP.i363 = bitcast %union.anon* %7003 to i64*
  %7004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7005 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7004, i64 0, i64 1
  %YMM1.i364 = bitcast %union.VectorReg* %7005 to %"class.std::bitset"*
  %7006 = bitcast %"class.std::bitset"* %YMM1.i364 to i8*
  %7007 = load i64, i64* %RBP.i363
  %7008 = sub i64 %7007, 312
  %7009 = load i64, i64* %PC.i362
  %7010 = add i64 %7009, 8
  store i64 %7010, i64* %PC.i362
  %7011 = inttoptr i64 %7008 to double*
  %7012 = load double, double* %7011
  %7013 = bitcast i8* %7006 to double*
  store double %7012, double* %7013, align 1
  %7014 = getelementptr inbounds i8, i8* %7006, i64 8
  %7015 = bitcast i8* %7014 to double*
  store double 0.000000e+00, double* %7015, align 1
  store %struct.Memory* %loadMem_4011e3, %struct.Memory** %MEMORY
  %loadMem_4011eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7017 = getelementptr inbounds %struct.GPR, %struct.GPR* %7016, i32 0, i32 33
  %7018 = getelementptr inbounds %struct.Reg, %struct.Reg* %7017, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %7018 to i64*
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7020 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7019, i64 0, i64 1
  %YMM1.i360 = bitcast %union.VectorReg* %7020 to %"class.std::bitset"*
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7022 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7021, i64 0, i64 0
  %XMM0.i361 = bitcast %union.VectorReg* %7022 to %union.vec128_t*
  %7023 = bitcast %"class.std::bitset"* %YMM1.i360 to i8*
  %7024 = bitcast %"class.std::bitset"* %YMM1.i360 to i8*
  %7025 = bitcast %union.vec128_t* %XMM0.i361 to i8*
  %7026 = load i64, i64* %PC.i359
  %7027 = add i64 %7026, 4
  store i64 %7027, i64* %PC.i359
  %7028 = bitcast i8* %7024 to double*
  %7029 = load double, double* %7028, align 1
  %7030 = getelementptr inbounds i8, i8* %7024, i64 8
  %7031 = bitcast i8* %7030 to i64*
  %7032 = load i64, i64* %7031, align 1
  %7033 = bitcast i8* %7025 to double*
  %7034 = load double, double* %7033, align 1
  %7035 = fadd double %7029, %7034
  %7036 = bitcast i8* %7023 to double*
  store double %7035, double* %7036, align 1
  %7037 = getelementptr inbounds i8, i8* %7023, i64 8
  %7038 = bitcast i8* %7037 to i64*
  store i64 %7032, i64* %7038, align 1
  store %struct.Memory* %loadMem_4011eb, %struct.Memory** %MEMORY
  %loadMem_4011ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7040 = getelementptr inbounds %struct.GPR, %struct.GPR* %7039, i32 0, i32 33
  %7041 = getelementptr inbounds %struct.Reg, %struct.Reg* %7040, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %7041 to i64*
  %7042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7043 = getelementptr inbounds %struct.GPR, %struct.GPR* %7042, i32 0, i32 15
  %7044 = getelementptr inbounds %struct.Reg, %struct.Reg* %7043, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %7044 to i64*
  %7045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7046 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7045, i64 0, i64 0
  %YMM0.i358 = bitcast %union.VectorReg* %7046 to %"class.std::bitset"*
  %7047 = bitcast %"class.std::bitset"* %YMM0.i358 to i8*
  %7048 = load i64, i64* %RBP.i357
  %7049 = sub i64 %7048, 280
  %7050 = load i64, i64* %PC.i356
  %7051 = add i64 %7050, 8
  store i64 %7051, i64* %PC.i356
  %7052 = inttoptr i64 %7049 to double*
  %7053 = load double, double* %7052
  %7054 = bitcast i8* %7047 to double*
  store double %7053, double* %7054, align 1
  %7055 = getelementptr inbounds i8, i8* %7047, i64 8
  %7056 = bitcast i8* %7055 to double*
  store double 0.000000e+00, double* %7056, align 1
  store %struct.Memory* %loadMem_4011ef, %struct.Memory** %MEMORY
  %loadMem_4011f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7058 = getelementptr inbounds %struct.GPR, %struct.GPR* %7057, i32 0, i32 33
  %7059 = getelementptr inbounds %struct.Reg, %struct.Reg* %7058, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %7059 to i64*
  %7060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7061 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7060, i64 0, i64 1
  %YMM1.i354 = bitcast %union.VectorReg* %7061 to %"class.std::bitset"*
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7063 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7062, i64 0, i64 0
  %XMM0.i355 = bitcast %union.VectorReg* %7063 to %union.vec128_t*
  %7064 = bitcast %"class.std::bitset"* %YMM1.i354 to i8*
  %7065 = bitcast %"class.std::bitset"* %YMM1.i354 to i8*
  %7066 = bitcast %union.vec128_t* %XMM0.i355 to i8*
  %7067 = load i64, i64* %PC.i353
  %7068 = add i64 %7067, 4
  store i64 %7068, i64* %PC.i353
  %7069 = bitcast i8* %7065 to double*
  %7070 = load double, double* %7069, align 1
  %7071 = getelementptr inbounds i8, i8* %7065, i64 8
  %7072 = bitcast i8* %7071 to i64*
  %7073 = load i64, i64* %7072, align 1
  %7074 = bitcast i8* %7066 to double*
  %7075 = load double, double* %7074, align 1
  %7076 = fsub double %7070, %7075
  %7077 = bitcast i8* %7064 to double*
  store double %7076, double* %7077, align 1
  %7078 = getelementptr inbounds i8, i8* %7064, i64 8
  %7079 = bitcast i8* %7078 to i64*
  store i64 %7073, i64* %7079, align 1
  store %struct.Memory* %loadMem_4011f7, %struct.Memory** %MEMORY
  %loadMem_4011fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7081 = getelementptr inbounds %struct.GPR, %struct.GPR* %7080, i32 0, i32 33
  %7082 = getelementptr inbounds %struct.Reg, %struct.Reg* %7081, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %7082 to i64*
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7084 = getelementptr inbounds %struct.GPR, %struct.GPR* %7083, i32 0, i32 15
  %7085 = getelementptr inbounds %struct.Reg, %struct.Reg* %7084, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %7085 to i64*
  %7086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7087 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7086, i64 0, i64 2
  %YMM2.i352 = bitcast %union.VectorReg* %7087 to %"class.std::bitset"*
  %7088 = bitcast %"class.std::bitset"* %YMM2.i352 to i8*
  %7089 = load i64, i64* %RBP.i351
  %7090 = sub i64 %7089, 304
  %7091 = load i64, i64* %PC.i350
  %7092 = add i64 %7091, 8
  store i64 %7092, i64* %PC.i350
  %7093 = inttoptr i64 %7090 to double*
  %7094 = load double, double* %7093
  %7095 = bitcast i8* %7088 to double*
  store double %7094, double* %7095, align 1
  %7096 = getelementptr inbounds i8, i8* %7088, i64 8
  %7097 = bitcast i8* %7096 to double*
  store double 0.000000e+00, double* %7097, align 1
  store %struct.Memory* %loadMem_4011fb, %struct.Memory** %MEMORY
  %loadMem_401203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7099 = getelementptr inbounds %struct.GPR, %struct.GPR* %7098, i32 0, i32 33
  %7100 = getelementptr inbounds %struct.Reg, %struct.Reg* %7099, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %7100 to i64*
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7102 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7101, i64 0, i64 2
  %YMM2.i348 = bitcast %union.VectorReg* %7102 to %"class.std::bitset"*
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7104 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7103, i64 0, i64 1
  %XMM1.i349 = bitcast %union.VectorReg* %7104 to %union.vec128_t*
  %7105 = bitcast %"class.std::bitset"* %YMM2.i348 to i8*
  %7106 = bitcast %"class.std::bitset"* %YMM2.i348 to i8*
  %7107 = bitcast %union.vec128_t* %XMM1.i349 to i8*
  %7108 = load i64, i64* %PC.i347
  %7109 = add i64 %7108, 4
  store i64 %7109, i64* %PC.i347
  %7110 = bitcast i8* %7106 to double*
  %7111 = load double, double* %7110, align 1
  %7112 = getelementptr inbounds i8, i8* %7106, i64 8
  %7113 = bitcast i8* %7112 to i64*
  %7114 = load i64, i64* %7113, align 1
  %7115 = bitcast i8* %7107 to double*
  %7116 = load double, double* %7115, align 1
  %7117 = fdiv double %7111, %7116
  %7118 = bitcast i8* %7105 to double*
  store double %7117, double* %7118, align 1
  %7119 = getelementptr inbounds i8, i8* %7105, i64 8
  %7120 = bitcast i8* %7119 to i64*
  store i64 %7114, i64* %7120, align 1
  store %struct.Memory* %loadMem_401203, %struct.Memory** %MEMORY
  %loadMem_401207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7122 = getelementptr inbounds %struct.GPR, %struct.GPR* %7121, i32 0, i32 33
  %7123 = getelementptr inbounds %struct.Reg, %struct.Reg* %7122, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %7123 to i64*
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7125 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7124, i64 0, i64 0
  %YMM0.i345 = bitcast %union.VectorReg* %7125 to %"class.std::bitset"*
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7127 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7126, i64 0, i64 2
  %XMM2.i346 = bitcast %union.VectorReg* %7127 to %union.vec128_t*
  %7128 = bitcast %"class.std::bitset"* %YMM0.i345 to i8*
  %7129 = bitcast %union.vec128_t* %XMM2.i346 to i8*
  %7130 = load i64, i64* %PC.i344
  %7131 = add i64 %7130, 3
  store i64 %7131, i64* %PC.i344
  %7132 = bitcast i8* %7129 to <2 x i32>*
  %7133 = load <2 x i32>, <2 x i32>* %7132, align 1
  %7134 = getelementptr inbounds i8, i8* %7129, i64 8
  %7135 = bitcast i8* %7134 to <2 x i32>*
  %7136 = load <2 x i32>, <2 x i32>* %7135, align 1
  %7137 = extractelement <2 x i32> %7133, i32 0
  %7138 = bitcast i8* %7128 to i32*
  store i32 %7137, i32* %7138, align 1
  %7139 = extractelement <2 x i32> %7133, i32 1
  %7140 = getelementptr inbounds i8, i8* %7128, i64 4
  %7141 = bitcast i8* %7140 to i32*
  store i32 %7139, i32* %7141, align 1
  %7142 = extractelement <2 x i32> %7136, i32 0
  %7143 = getelementptr inbounds i8, i8* %7128, i64 8
  %7144 = bitcast i8* %7143 to i32*
  store i32 %7142, i32* %7144, align 1
  %7145 = extractelement <2 x i32> %7136, i32 1
  %7146 = getelementptr inbounds i8, i8* %7128, i64 12
  %7147 = bitcast i8* %7146 to i32*
  store i32 %7145, i32* %7147, align 1
  store %struct.Memory* %loadMem_401207, %struct.Memory** %MEMORY
  %loadMem1_40120a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7149 = getelementptr inbounds %struct.GPR, %struct.GPR* %7148, i32 0, i32 33
  %7150 = getelementptr inbounds %struct.Reg, %struct.Reg* %7149, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %7150 to i64*
  %7151 = load i64, i64* %PC.i343
  %7152 = add i64 %7151, -2858
  %7153 = load i64, i64* %PC.i343
  %7154 = add i64 %7153, 5
  %7155 = load i64, i64* %PC.i343
  %7156 = add i64 %7155, 5
  store i64 %7156, i64* %PC.i343
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7158 = load i64, i64* %7157, align 8
  %7159 = add i64 %7158, -8
  %7160 = inttoptr i64 %7159 to i64*
  store i64 %7154, i64* %7160
  store i64 %7159, i64* %7157, align 8
  %7161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7152, i64* %7161, align 8
  store %struct.Memory* %loadMem1_40120a, %struct.Memory** %MEMORY
  %loadMem2_40120a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40120a = load i64, i64* %3
  %call2_40120a = call %struct.Memory* @ext_atan(%struct.State* %0, i64 %loadPC_40120a, %struct.Memory* %loadMem2_40120a)
  store %struct.Memory* %call2_40120a, %struct.Memory** %MEMORY
  %loadMem_40120f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7163 = getelementptr inbounds %struct.GPR, %struct.GPR* %7162, i32 0, i32 33
  %7164 = getelementptr inbounds %struct.Reg, %struct.Reg* %7163, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %7164 to i64*
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7166 = getelementptr inbounds %struct.GPR, %struct.GPR* %7165, i32 0, i32 15
  %7167 = getelementptr inbounds %struct.Reg, %struct.Reg* %7166, i32 0, i32 0
  %RBP.i341 = bitcast %union.anon* %7167 to i64*
  %7168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7169 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7168, i64 0, i64 1
  %YMM1.i342 = bitcast %union.VectorReg* %7169 to %"class.std::bitset"*
  %7170 = bitcast %"class.std::bitset"* %YMM1.i342 to i8*
  %7171 = load i64, i64* %RBP.i341
  %7172 = sub i64 %7171, 272
  %7173 = load i64, i64* %PC.i340
  %7174 = add i64 %7173, 8
  store i64 %7174, i64* %PC.i340
  %7175 = inttoptr i64 %7172 to double*
  %7176 = load double, double* %7175
  %7177 = bitcast i8* %7170 to double*
  store double %7176, double* %7177, align 1
  %7178 = getelementptr inbounds i8, i8* %7170, i64 8
  %7179 = bitcast i8* %7178 to double*
  store double 0.000000e+00, double* %7179, align 1
  store %struct.Memory* %loadMem_40120f, %struct.Memory** %MEMORY
  %loadMem_401217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7181 = getelementptr inbounds %struct.GPR, %struct.GPR* %7180, i32 0, i32 33
  %7182 = getelementptr inbounds %struct.Reg, %struct.Reg* %7181, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %7182 to i64*
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7184 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7183, i64 0, i64 1
  %YMM1.i338 = bitcast %union.VectorReg* %7184 to %"class.std::bitset"*
  %7185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7186 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7185, i64 0, i64 0
  %XMM0.i339 = bitcast %union.VectorReg* %7186 to %union.vec128_t*
  %7187 = bitcast %"class.std::bitset"* %YMM1.i338 to i8*
  %7188 = bitcast %"class.std::bitset"* %YMM1.i338 to i8*
  %7189 = bitcast %union.vec128_t* %XMM0.i339 to i8*
  %7190 = load i64, i64* %PC.i337
  %7191 = add i64 %7190, 4
  store i64 %7191, i64* %PC.i337
  %7192 = bitcast i8* %7188 to double*
  %7193 = load double, double* %7192, align 1
  %7194 = getelementptr inbounds i8, i8* %7188, i64 8
  %7195 = bitcast i8* %7194 to i64*
  %7196 = load i64, i64* %7195, align 1
  %7197 = bitcast i8* %7189 to double*
  %7198 = load double, double* %7197, align 1
  %7199 = fmul double %7193, %7198
  %7200 = bitcast i8* %7187 to double*
  store double %7199, double* %7200, align 1
  %7201 = getelementptr inbounds i8, i8* %7187, i64 8
  %7202 = bitcast i8* %7201 to i64*
  store i64 %7196, i64* %7202, align 1
  store %struct.Memory* %loadMem_401217, %struct.Memory** %MEMORY
  %loadMem_40121b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7204 = getelementptr inbounds %struct.GPR, %struct.GPR* %7203, i32 0, i32 33
  %7205 = getelementptr inbounds %struct.Reg, %struct.Reg* %7204, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %7205 to i64*
  %7206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7207 = getelementptr inbounds %struct.GPR, %struct.GPR* %7206, i32 0, i32 15
  %7208 = getelementptr inbounds %struct.Reg, %struct.Reg* %7207, i32 0, i32 0
  %RBP.i335 = bitcast %union.anon* %7208 to i64*
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7210 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7209, i64 0, i64 1
  %XMM1.i336 = bitcast %union.VectorReg* %7210 to %union.vec128_t*
  %7211 = load i64, i64* %RBP.i335
  %7212 = sub i64 %7211, 152
  %7213 = bitcast %union.vec128_t* %XMM1.i336 to i8*
  %7214 = load i64, i64* %PC.i334
  %7215 = add i64 %7214, 8
  store i64 %7215, i64* %PC.i334
  %7216 = bitcast i8* %7213 to double*
  %7217 = load double, double* %7216, align 1
  %7218 = inttoptr i64 %7212 to double*
  store double %7217, double* %7218
  store %struct.Memory* %loadMem_40121b, %struct.Memory** %MEMORY
  %loadMem_401223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7220 = getelementptr inbounds %struct.GPR, %struct.GPR* %7219, i32 0, i32 33
  %7221 = getelementptr inbounds %struct.Reg, %struct.Reg* %7220, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %7221 to i64*
  %7222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7223 = getelementptr inbounds %struct.GPR, %struct.GPR* %7222, i32 0, i32 1
  %7224 = getelementptr inbounds %struct.Reg, %struct.Reg* %7223, i32 0, i32 0
  %RAX.i332 = bitcast %union.anon* %7224 to i64*
  %7225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7226 = getelementptr inbounds %struct.GPR, %struct.GPR* %7225, i32 0, i32 15
  %7227 = getelementptr inbounds %struct.Reg, %struct.Reg* %7226, i32 0, i32 0
  %RBP.i333 = bitcast %union.anon* %7227 to i64*
  %7228 = load i64, i64* %RBP.i333
  %7229 = sub i64 %7228, 24
  %7230 = load i64, i64* %PC.i331
  %7231 = add i64 %7230, 4
  store i64 %7231, i64* %PC.i331
  %7232 = inttoptr i64 %7229 to i64*
  %7233 = load i64, i64* %7232
  store i64 %7233, i64* %RAX.i332, align 8
  store %struct.Memory* %loadMem_401223, %struct.Memory** %MEMORY
  %loadMem_401227 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7235 = getelementptr inbounds %struct.GPR, %struct.GPR* %7234, i32 0, i32 33
  %7236 = getelementptr inbounds %struct.Reg, %struct.Reg* %7235, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %7236 to i64*
  %7237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7238 = getelementptr inbounds %struct.GPR, %struct.GPR* %7237, i32 0, i32 1
  %7239 = getelementptr inbounds %struct.Reg, %struct.Reg* %7238, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %7239 to i64*
  %7240 = load i64, i64* %RAX.i330
  %7241 = load i64, i64* %PC.i329
  %7242 = add i64 %7241, 4
  store i64 %7242, i64* %PC.i329
  %7243 = add i64 1, %7240
  store i64 %7243, i64* %RAX.i330, align 8
  %7244 = icmp ult i64 %7243, %7240
  %7245 = icmp ult i64 %7243, 1
  %7246 = or i1 %7244, %7245
  %7247 = zext i1 %7246 to i8
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7247, i8* %7248, align 1
  %7249 = trunc i64 %7243 to i32
  %7250 = and i32 %7249, 255
  %7251 = call i32 @llvm.ctpop.i32(i32 %7250)
  %7252 = trunc i32 %7251 to i8
  %7253 = and i8 %7252, 1
  %7254 = xor i8 %7253, 1
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7254, i8* %7255, align 1
  %7256 = xor i64 1, %7240
  %7257 = xor i64 %7256, %7243
  %7258 = lshr i64 %7257, 4
  %7259 = trunc i64 %7258 to i8
  %7260 = and i8 %7259, 1
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7260, i8* %7261, align 1
  %7262 = icmp eq i64 %7243, 0
  %7263 = zext i1 %7262 to i8
  %7264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7263, i8* %7264, align 1
  %7265 = lshr i64 %7243, 63
  %7266 = trunc i64 %7265 to i8
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7266, i8* %7267, align 1
  %7268 = lshr i64 %7240, 63
  %7269 = xor i64 %7265, %7268
  %7270 = add i64 %7269, %7265
  %7271 = icmp eq i64 %7270, 2
  %7272 = zext i1 %7271 to i8
  %7273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7272, i8* %7273, align 1
  store %struct.Memory* %loadMem_401227, %struct.Memory** %MEMORY
  %loadMem_40122b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7275 = getelementptr inbounds %struct.GPR, %struct.GPR* %7274, i32 0, i32 33
  %7276 = getelementptr inbounds %struct.Reg, %struct.Reg* %7275, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %7276 to i64*
  %7277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7278 = getelementptr inbounds %struct.GPR, %struct.GPR* %7277, i32 0, i32 1
  %7279 = getelementptr inbounds %struct.Reg, %struct.Reg* %7278, i32 0, i32 0
  %RAX.i327 = bitcast %union.anon* %7279 to i64*
  %7280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7281 = getelementptr inbounds %struct.GPR, %struct.GPR* %7280, i32 0, i32 15
  %7282 = getelementptr inbounds %struct.Reg, %struct.Reg* %7281, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %7282 to i64*
  %7283 = load i64, i64* %RBP.i328
  %7284 = sub i64 %7283, 24
  %7285 = load i64, i64* %RAX.i327
  %7286 = load i64, i64* %PC.i326
  %7287 = add i64 %7286, 4
  store i64 %7287, i64* %PC.i326
  %7288 = inttoptr i64 %7284 to i64*
  store i64 %7285, i64* %7288
  store %struct.Memory* %loadMem_40122b, %struct.Memory** %MEMORY
  %loadMem_40122f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7290 = getelementptr inbounds %struct.GPR, %struct.GPR* %7289, i32 0, i32 33
  %7291 = getelementptr inbounds %struct.Reg, %struct.Reg* %7290, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %7291 to i64*
  %7292 = load i64, i64* %PC.i325
  %7293 = add i64 %7292, -498
  %7294 = load i64, i64* %PC.i325
  %7295 = add i64 %7294, 5
  store i64 %7295, i64* %PC.i325
  %7296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7293, i64* %7296, align 8
  store %struct.Memory* %loadMem_40122f, %struct.Memory** %MEMORY
  br label %block_.L_40103d

block_.L_401234:                                  ; preds = %block_.L_40103d
  %loadMem_401234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7298 = getelementptr inbounds %struct.GPR, %struct.GPR* %7297, i32 0, i32 33
  %7299 = getelementptr inbounds %struct.Reg, %struct.Reg* %7298, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %7299 to i64*
  %7300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7301 = getelementptr inbounds %struct.GPR, %struct.GPR* %7300, i32 0, i32 1
  %7302 = getelementptr inbounds %struct.Reg, %struct.Reg* %7301, i32 0, i32 0
  %RAX.i323 = bitcast %union.anon* %7302 to i64*
  %7303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7304 = getelementptr inbounds %struct.GPR, %struct.GPR* %7303, i32 0, i32 15
  %7305 = getelementptr inbounds %struct.Reg, %struct.Reg* %7304, i32 0, i32 0
  %RBP.i324 = bitcast %union.anon* %7305 to i64*
  %7306 = load i64, i64* %RBP.i324
  %7307 = sub i64 %7306, 176
  %7308 = load i64, i64* %PC.i322
  %7309 = add i64 %7308, 6
  store i64 %7309, i64* %PC.i322
  %7310 = inttoptr i64 %7307 to i32*
  %7311 = load i32, i32* %7310
  %7312 = zext i32 %7311 to i64
  store i64 %7312, i64* %RAX.i323, align 8
  store %struct.Memory* %loadMem_401234, %struct.Memory** %MEMORY
  %loadMem_40123a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7314 = getelementptr inbounds %struct.GPR, %struct.GPR* %7313, i32 0, i32 33
  %7315 = getelementptr inbounds %struct.Reg, %struct.Reg* %7314, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %7315 to i64*
  %7316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7317 = getelementptr inbounds %struct.GPR, %struct.GPR* %7316, i32 0, i32 1
  %7318 = getelementptr inbounds %struct.Reg, %struct.Reg* %7317, i32 0, i32 0
  %EAX.i320 = bitcast %union.anon* %7318 to i32*
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7320 = getelementptr inbounds %struct.GPR, %struct.GPR* %7319, i32 0, i32 15
  %7321 = getelementptr inbounds %struct.Reg, %struct.Reg* %7320, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %7321 to i64*
  %7322 = load i32, i32* %EAX.i320
  %7323 = zext i32 %7322 to i64
  %7324 = load i64, i64* %RBP.i321
  %7325 = sub i64 %7324, 172
  %7326 = load i64, i64* %PC.i319
  %7327 = add i64 %7326, 6
  store i64 %7327, i64* %PC.i319
  %7328 = inttoptr i64 %7325 to i32*
  %7329 = load i32, i32* %7328
  %7330 = sub i32 %7322, %7329
  %7331 = icmp ult i32 %7322, %7329
  %7332 = zext i1 %7331 to i8
  %7333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7332, i8* %7333, align 1
  %7334 = and i32 %7330, 255
  %7335 = call i32 @llvm.ctpop.i32(i32 %7334)
  %7336 = trunc i32 %7335 to i8
  %7337 = and i8 %7336, 1
  %7338 = xor i8 %7337, 1
  %7339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7338, i8* %7339, align 1
  %7340 = xor i32 %7329, %7322
  %7341 = xor i32 %7340, %7330
  %7342 = lshr i32 %7341, 4
  %7343 = trunc i32 %7342 to i8
  %7344 = and i8 %7343, 1
  %7345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7344, i8* %7345, align 1
  %7346 = icmp eq i32 %7330, 0
  %7347 = zext i1 %7346 to i8
  %7348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7347, i8* %7348, align 1
  %7349 = lshr i32 %7330, 31
  %7350 = trunc i32 %7349 to i8
  %7351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7350, i8* %7351, align 1
  %7352 = lshr i32 %7322, 31
  %7353 = lshr i32 %7329, 31
  %7354 = xor i32 %7353, %7352
  %7355 = xor i32 %7349, %7352
  %7356 = add i32 %7355, %7354
  %7357 = icmp eq i32 %7356, 2
  %7358 = zext i1 %7357 to i8
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7358, i8* %7359, align 1
  store %struct.Memory* %loadMem_40123a, %struct.Memory** %MEMORY
  %loadMem_401240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7361 = getelementptr inbounds %struct.GPR, %struct.GPR* %7360, i32 0, i32 33
  %7362 = getelementptr inbounds %struct.Reg, %struct.Reg* %7361, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %7362 to i64*
  %7363 = load i64, i64* %PC.i318
  %7364 = add i64 %7363, 63
  %7365 = load i64, i64* %PC.i318
  %7366 = add i64 %7365, 6
  %7367 = load i64, i64* %PC.i318
  %7368 = add i64 %7367, 6
  store i64 %7368, i64* %PC.i318
  %7369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7370 = load i8, i8* %7369, align 1
  %7371 = icmp eq i8 %7370, 0
  %7372 = zext i1 %7371 to i8
  store i8 %7372, i8* %BRANCH_TAKEN, align 1
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7374 = select i1 %7371, i64 %7364, i64 %7366
  store i64 %7374, i64* %7373, align 8
  store %struct.Memory* %loadMem_401240, %struct.Memory** %MEMORY
  %loadBr_401240 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401240 = icmp eq i8 %loadBr_401240, 1
  br i1 %cmpBr_401240, label %block_.L_40127f, label %block_401246

block_401246:                                     ; preds = %block_.L_401234
  %loadMem_401246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7376 = getelementptr inbounds %struct.GPR, %struct.GPR* %7375, i32 0, i32 33
  %7377 = getelementptr inbounds %struct.Reg, %struct.Reg* %7376, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %7377 to i64*
  %7378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7379 = getelementptr inbounds %struct.GPR, %struct.GPR* %7378, i32 0, i32 11
  %7380 = getelementptr inbounds %struct.Reg, %struct.Reg* %7379, i32 0, i32 0
  %RDI.i316 = bitcast %union.anon* %7380 to i64*
  %7381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7382 = getelementptr inbounds %struct.GPR, %struct.GPR* %7381, i32 0, i32 15
  %7383 = getelementptr inbounds %struct.Reg, %struct.Reg* %7382, i32 0, i32 0
  %RBP.i317 = bitcast %union.anon* %7383 to i64*
  %7384 = load i64, i64* %RBP.i317
  %7385 = sub i64 %7384, 72
  %7386 = load i64, i64* %PC.i315
  %7387 = add i64 %7386, 4
  store i64 %7387, i64* %PC.i315
  %7388 = inttoptr i64 %7385 to i64*
  %7389 = load i64, i64* %7388
  store i64 %7389, i64* %RDI.i316, align 8
  store %struct.Memory* %loadMem_401246, %struct.Memory** %MEMORY
  %loadMem_40124a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7391 = getelementptr inbounds %struct.GPR, %struct.GPR* %7390, i32 0, i32 33
  %7392 = getelementptr inbounds %struct.Reg, %struct.Reg* %7391, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %7392 to i64*
  %7393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7394 = getelementptr inbounds %struct.GPR, %struct.GPR* %7393, i32 0, i32 9
  %7395 = getelementptr inbounds %struct.Reg, %struct.Reg* %7394, i32 0, i32 0
  %RSI.i314 = bitcast %union.anon* %7395 to i64*
  %7396 = load i64, i64* %PC.i313
  %7397 = add i64 %7396, 8
  store i64 %7397, i64* %PC.i313
  %7398 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %7399 = sext i32 %7398 to i64
  store i64 %7399, i64* %RSI.i314, align 8
  store %struct.Memory* %loadMem_40124a, %struct.Memory** %MEMORY
  %loadMem_401252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 33
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %7402 to i64*
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7404 = getelementptr inbounds %struct.GPR, %struct.GPR* %7403, i32 0, i32 7
  %7405 = getelementptr inbounds %struct.Reg, %struct.Reg* %7404, i32 0, i32 0
  %RDX.i312 = bitcast %union.anon* %7405 to i64*
  %7406 = load i64, i64* %PC.i311
  %7407 = add i64 %7406, 8
  store i64 %7407, i64* %PC.i311
  %7408 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %7409 = sext i32 %7408 to i64
  store i64 %7409, i64* %RDX.i312, align 8
  store %struct.Memory* %loadMem_401252, %struct.Memory** %MEMORY
  %loadMem_40125a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7411 = getelementptr inbounds %struct.GPR, %struct.GPR* %7410, i32 0, i32 33
  %7412 = getelementptr inbounds %struct.Reg, %struct.Reg* %7411, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %7412 to i64*
  %7413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7414 = getelementptr inbounds %struct.GPR, %struct.GPR* %7413, i32 0, i32 15
  %7415 = getelementptr inbounds %struct.Reg, %struct.Reg* %7414, i32 0, i32 0
  %RBP.i309 = bitcast %union.anon* %7415 to i64*
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7417 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7416, i64 0, i64 0
  %YMM0.i310 = bitcast %union.VectorReg* %7417 to %"class.std::bitset"*
  %7418 = bitcast %"class.std::bitset"* %YMM0.i310 to i8*
  %7419 = load i64, i64* %RBP.i309
  %7420 = sub i64 %7419, 144
  %7421 = load i64, i64* %PC.i308
  %7422 = add i64 %7421, 8
  store i64 %7422, i64* %PC.i308
  %7423 = inttoptr i64 %7420 to double*
  %7424 = load double, double* %7423
  %7425 = bitcast i8* %7418 to double*
  store double %7424, double* %7425, align 1
  %7426 = getelementptr inbounds i8, i8* %7418, i64 8
  %7427 = bitcast i8* %7426 to double*
  store double 0.000000e+00, double* %7427, align 1
  store %struct.Memory* %loadMem_40125a, %struct.Memory** %MEMORY
  %loadMem_401262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7429 = getelementptr inbounds %struct.GPR, %struct.GPR* %7428, i32 0, i32 33
  %7430 = getelementptr inbounds %struct.Reg, %struct.Reg* %7429, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %7430 to i64*
  %7431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7432 = getelementptr inbounds %struct.GPR, %struct.GPR* %7431, i32 0, i32 15
  %7433 = getelementptr inbounds %struct.Reg, %struct.Reg* %7432, i32 0, i32 0
  %RBP.i306 = bitcast %union.anon* %7433 to i64*
  %7434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7435 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7434, i64 0, i64 1
  %YMM1.i307 = bitcast %union.VectorReg* %7435 to %"class.std::bitset"*
  %7436 = bitcast %"class.std::bitset"* %YMM1.i307 to i8*
  %7437 = load i64, i64* %RBP.i306
  %7438 = sub i64 %7437, 144
  %7439 = load i64, i64* %PC.i305
  %7440 = add i64 %7439, 8
  store i64 %7440, i64* %PC.i305
  %7441 = inttoptr i64 %7438 to double*
  %7442 = load double, double* %7441
  %7443 = bitcast i8* %7436 to double*
  store double %7442, double* %7443, align 1
  %7444 = getelementptr inbounds i8, i8* %7436, i64 8
  %7445 = bitcast i8* %7444 to double*
  store double 0.000000e+00, double* %7445, align 1
  store %struct.Memory* %loadMem_401262, %struct.Memory** %MEMORY
  %loadMem_40126a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7447 = getelementptr inbounds %struct.GPR, %struct.GPR* %7446, i32 0, i32 33
  %7448 = getelementptr inbounds %struct.Reg, %struct.Reg* %7447, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %7448 to i64*
  %7449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7450 = getelementptr inbounds %struct.GPR, %struct.GPR* %7449, i32 0, i32 15
  %7451 = getelementptr inbounds %struct.Reg, %struct.Reg* %7450, i32 0, i32 0
  %RBP.i303 = bitcast %union.anon* %7451 to i64*
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7453 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7452, i64 0, i64 2
  %YMM2.i304 = bitcast %union.VectorReg* %7453 to %"class.std::bitset"*
  %7454 = bitcast %"class.std::bitset"* %YMM2.i304 to i8*
  %7455 = load i64, i64* %RBP.i303
  %7456 = sub i64 %7455, 152
  %7457 = load i64, i64* %PC.i302
  %7458 = add i64 %7457, 8
  store i64 %7458, i64* %PC.i302
  %7459 = inttoptr i64 %7456 to double*
  %7460 = load double, double* %7459
  %7461 = bitcast i8* %7454 to double*
  store double %7460, double* %7461, align 1
  %7462 = getelementptr inbounds i8, i8* %7454, i64 8
  %7463 = bitcast i8* %7462 to double*
  store double 0.000000e+00, double* %7463, align 1
  store %struct.Memory* %loadMem_40126a, %struct.Memory** %MEMORY
  %loadMem_401272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7465 = getelementptr inbounds %struct.GPR, %struct.GPR* %7464, i32 0, i32 33
  %7466 = getelementptr inbounds %struct.Reg, %struct.Reg* %7465, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %7466 to i64*
  %7467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7468 = getelementptr inbounds %struct.GPR, %struct.GPR* %7467, i32 0, i32 15
  %7469 = getelementptr inbounds %struct.Reg, %struct.Reg* %7468, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %7469 to i64*
  %7470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7471 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7470, i64 0, i64 3
  %YMM3.i301 = bitcast %union.VectorReg* %7471 to %"class.std::bitset"*
  %7472 = bitcast %"class.std::bitset"* %YMM3.i301 to i8*
  %7473 = load i64, i64* %RBP.i300
  %7474 = sub i64 %7473, 152
  %7475 = load i64, i64* %PC.i299
  %7476 = add i64 %7475, 8
  store i64 %7476, i64* %PC.i299
  %7477 = inttoptr i64 %7474 to double*
  %7478 = load double, double* %7477
  %7479 = bitcast i8* %7472 to double*
  store double %7478, double* %7479, align 1
  %7480 = getelementptr inbounds i8, i8* %7472, i64 8
  %7481 = bitcast i8* %7480 to double*
  store double 0.000000e+00, double* %7481, align 1
  store %struct.Memory* %loadMem_401272, %struct.Memory** %MEMORY
  %loadMem1_40127a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7483 = getelementptr inbounds %struct.GPR, %struct.GPR* %7482, i32 0, i32 33
  %7484 = getelementptr inbounds %struct.Reg, %struct.Reg* %7483, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %7484 to i64*
  %7485 = load i64, i64* %PC.i298
  %7486 = add i64 %7485, 886
  %7487 = load i64, i64* %PC.i298
  %7488 = add i64 %7487, 5
  %7489 = load i64, i64* %PC.i298
  %7490 = add i64 %7489, 5
  store i64 %7490, i64* %PC.i298
  %7491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7492 = load i64, i64* %7491, align 8
  %7493 = add i64 %7492, -8
  %7494 = inttoptr i64 %7493 to i64*
  store i64 %7488, i64* %7494
  store i64 %7493, i64* %7491, align 8
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7486, i64* %7495, align 8
  store %struct.Memory* %loadMem1_40127a, %struct.Memory** %MEMORY
  %loadMem2_40127a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40127a = load i64, i64* %3
  %call2_40127a = call %struct.Memory* @sub_4015f0.POUT(%struct.State* %0, i64 %loadPC_40127a, %struct.Memory* %loadMem2_40127a)
  store %struct.Memory* %call2_40127a, %struct.Memory** %MEMORY
  br label %block_.L_40127f

block_.L_40127f:                                  ; preds = %block_401246, %block_.L_401234
  %loadMem_40127f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7497 = getelementptr inbounds %struct.GPR, %struct.GPR* %7496, i32 0, i32 33
  %7498 = getelementptr inbounds %struct.Reg, %struct.Reg* %7497, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %7498 to i64*
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7500 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7499, i64 0, i64 0
  %YMM0.i297 = bitcast %union.VectorReg* %7500 to %"class.std::bitset"*
  %7501 = bitcast %"class.std::bitset"* %YMM0.i297 to i8*
  %7502 = load i64, i64* %PC.i296
  %7503 = add i64 %7502, 1705
  %7504 = load i64, i64* %PC.i296
  %7505 = add i64 %7504, 8
  store i64 %7505, i64* %PC.i296
  %7506 = inttoptr i64 %7503 to double*
  %7507 = load double, double* %7506
  %7508 = bitcast i8* %7501 to double*
  store double %7507, double* %7508, align 1
  %7509 = getelementptr inbounds i8, i8* %7501, i64 8
  %7510 = bitcast i8* %7509 to double*
  store double 0.000000e+00, double* %7510, align 1
  store %struct.Memory* %loadMem_40127f, %struct.Memory** %MEMORY
  %loadMem_401287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7512 = getelementptr inbounds %struct.GPR, %struct.GPR* %7511, i32 0, i32 33
  %7513 = getelementptr inbounds %struct.Reg, %struct.Reg* %7512, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %7513 to i64*
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7515 = getelementptr inbounds %struct.GPR, %struct.GPR* %7514, i32 0, i32 15
  %7516 = getelementptr inbounds %struct.Reg, %struct.Reg* %7515, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %7516 to i64*
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7518 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7517, i64 0, i64 0
  %XMM0.i295 = bitcast %union.VectorReg* %7518 to %union.vec128_t*
  %7519 = load i64, i64* %RBP.i294
  %7520 = sub i64 %7519, 144
  %7521 = bitcast %union.vec128_t* %XMM0.i295 to i8*
  %7522 = load i64, i64* %PC.i293
  %7523 = add i64 %7522, 8
  store i64 %7523, i64* %PC.i293
  %7524 = bitcast i8* %7521 to double*
  %7525 = load double, double* %7524, align 1
  %7526 = inttoptr i64 %7520 to double*
  store double %7525, double* %7526
  store %struct.Memory* %loadMem_401287, %struct.Memory** %MEMORY
  %loadMem_40128f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7528 = getelementptr inbounds %struct.GPR, %struct.GPR* %7527, i32 0, i32 33
  %7529 = getelementptr inbounds %struct.Reg, %struct.Reg* %7528, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %7529 to i64*
  %7530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7531 = getelementptr inbounds %struct.GPR, %struct.GPR* %7530, i32 0, i32 15
  %7532 = getelementptr inbounds %struct.Reg, %struct.Reg* %7531, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %7532 to i64*
  %7533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7534 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7533, i64 0, i64 0
  %XMM0.i292 = bitcast %union.VectorReg* %7534 to %union.vec128_t*
  %7535 = load i64, i64* %RBP.i291
  %7536 = sub i64 %7535, 152
  %7537 = bitcast %union.vec128_t* %XMM0.i292 to i8*
  %7538 = load i64, i64* %PC.i290
  %7539 = add i64 %7538, 8
  store i64 %7539, i64* %PC.i290
  %7540 = bitcast i8* %7537 to double*
  %7541 = load double, double* %7540, align 1
  %7542 = inttoptr i64 %7536 to double*
  store double %7541, double* %7542
  store %struct.Memory* %loadMem_40128f, %struct.Memory** %MEMORY
  %loadMem_401297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7544 = getelementptr inbounds %struct.GPR, %struct.GPR* %7543, i32 0, i32 33
  %7545 = getelementptr inbounds %struct.Reg, %struct.Reg* %7544, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %7545 to i64*
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7547 = getelementptr inbounds %struct.GPR, %struct.GPR* %7546, i32 0, i32 15
  %7548 = getelementptr inbounds %struct.Reg, %struct.Reg* %7547, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %7548 to i64*
  %7549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7550 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7549, i64 0, i64 0
  %XMM0.i289 = bitcast %union.VectorReg* %7550 to %union.vec128_t*
  %7551 = load i64, i64* %RBP.i288
  %7552 = sub i64 %7551, 160
  %7553 = bitcast %union.vec128_t* %XMM0.i289 to i8*
  %7554 = load i64, i64* %PC.i287
  %7555 = add i64 %7554, 8
  store i64 %7555, i64* %PC.i287
  %7556 = bitcast i8* %7553 to double*
  %7557 = load double, double* %7556, align 1
  %7558 = inttoptr i64 %7552 to double*
  store double %7557, double* %7558
  store %struct.Memory* %loadMem_401297, %struct.Memory** %MEMORY
  %loadMem_40129f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7560 = getelementptr inbounds %struct.GPR, %struct.GPR* %7559, i32 0, i32 33
  %7561 = getelementptr inbounds %struct.Reg, %struct.Reg* %7560, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %7561 to i64*
  %7562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7563 = getelementptr inbounds %struct.GPR, %struct.GPR* %7562, i32 0, i32 15
  %7564 = getelementptr inbounds %struct.Reg, %struct.Reg* %7563, i32 0, i32 0
  %RBP.i286 = bitcast %union.anon* %7564 to i64*
  %7565 = load i64, i64* %RBP.i286
  %7566 = sub i64 %7565, 24
  %7567 = load i64, i64* %PC.i285
  %7568 = add i64 %7567, 8
  store i64 %7568, i64* %PC.i285
  %7569 = inttoptr i64 %7566 to i64*
  store i64 1, i64* %7569
  store %struct.Memory* %loadMem_40129f, %struct.Memory** %MEMORY
  br label %block_.L_4012a7

block_.L_4012a7:                                  ; preds = %block_4012b5, %block_.L_40127f
  %loadMem_4012a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7571 = getelementptr inbounds %struct.GPR, %struct.GPR* %7570, i32 0, i32 33
  %7572 = getelementptr inbounds %struct.Reg, %struct.Reg* %7571, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %7572 to i64*
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7574 = getelementptr inbounds %struct.GPR, %struct.GPR* %7573, i32 0, i32 1
  %7575 = getelementptr inbounds %struct.Reg, %struct.Reg* %7574, i32 0, i32 0
  %RAX.i283 = bitcast %union.anon* %7575 to i64*
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7577 = getelementptr inbounds %struct.GPR, %struct.GPR* %7576, i32 0, i32 15
  %7578 = getelementptr inbounds %struct.Reg, %struct.Reg* %7577, i32 0, i32 0
  %RBP.i284 = bitcast %union.anon* %7578 to i64*
  %7579 = load i64, i64* %RBP.i284
  %7580 = sub i64 %7579, 24
  %7581 = load i64, i64* %PC.i282
  %7582 = add i64 %7581, 4
  store i64 %7582, i64* %PC.i282
  %7583 = inttoptr i64 %7580 to i64*
  %7584 = load i64, i64* %7583
  store i64 %7584, i64* %RAX.i283, align 8
  store %struct.Memory* %loadMem_4012a7, %struct.Memory** %MEMORY
  %loadMem_4012ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7586 = getelementptr inbounds %struct.GPR, %struct.GPR* %7585, i32 0, i32 33
  %7587 = getelementptr inbounds %struct.Reg, %struct.Reg* %7586, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %7587 to i64*
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7589 = getelementptr inbounds %struct.GPR, %struct.GPR* %7588, i32 0, i32 1
  %7590 = getelementptr inbounds %struct.Reg, %struct.Reg* %7589, i32 0, i32 0
  %RAX.i280 = bitcast %union.anon* %7590 to i64*
  %7591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7592 = getelementptr inbounds %struct.GPR, %struct.GPR* %7591, i32 0, i32 15
  %7593 = getelementptr inbounds %struct.Reg, %struct.Reg* %7592, i32 0, i32 0
  %RBP.i281 = bitcast %union.anon* %7593 to i64*
  %7594 = load i64, i64* %RAX.i280
  %7595 = load i64, i64* %RBP.i281
  %7596 = sub i64 %7595, 80
  %7597 = load i64, i64* %PC.i279
  %7598 = add i64 %7597, 4
  store i64 %7598, i64* %PC.i279
  %7599 = inttoptr i64 %7596 to i64*
  %7600 = load i64, i64* %7599
  %7601 = sub i64 %7594, %7600
  %7602 = icmp ugt i64 %7600, %7594
  %7603 = zext i1 %7602 to i8
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7603, i8* %7604, align 1
  %7605 = trunc i64 %7601 to i32
  %7606 = and i32 %7605, 255
  %7607 = call i32 @llvm.ctpop.i32(i32 %7606)
  %7608 = trunc i32 %7607 to i8
  %7609 = and i8 %7608, 1
  %7610 = xor i8 %7609, 1
  %7611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7610, i8* %7611, align 1
  %7612 = xor i64 %7600, %7594
  %7613 = xor i64 %7612, %7601
  %7614 = lshr i64 %7613, 4
  %7615 = trunc i64 %7614 to i8
  %7616 = and i8 %7615, 1
  %7617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7616, i8* %7617, align 1
  %7618 = icmp eq i64 %7601, 0
  %7619 = zext i1 %7618 to i8
  %7620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7619, i8* %7620, align 1
  %7621 = lshr i64 %7601, 63
  %7622 = trunc i64 %7621 to i8
  %7623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7622, i8* %7623, align 1
  %7624 = lshr i64 %7594, 63
  %7625 = lshr i64 %7600, 63
  %7626 = xor i64 %7625, %7624
  %7627 = xor i64 %7621, %7624
  %7628 = add i64 %7627, %7626
  %7629 = icmp eq i64 %7628, 2
  %7630 = zext i1 %7629 to i8
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7630, i8* %7631, align 1
  store %struct.Memory* %loadMem_4012ab, %struct.Memory** %MEMORY
  %loadMem_4012af = load %struct.Memory*, %struct.Memory** %MEMORY
  %7632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7633 = getelementptr inbounds %struct.GPR, %struct.GPR* %7632, i32 0, i32 33
  %7634 = getelementptr inbounds %struct.Reg, %struct.Reg* %7633, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %7634 to i64*
  %7635 = load i64, i64* %PC.i278
  %7636 = add i64 %7635, 51
  %7637 = load i64, i64* %PC.i278
  %7638 = add i64 %7637, 6
  %7639 = load i64, i64* %PC.i278
  %7640 = add i64 %7639, 6
  store i64 %7640, i64* %PC.i278
  %7641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7642 = load i8, i8* %7641, align 1
  %7643 = icmp eq i8 %7642, 0
  %7644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7645 = load i8, i8* %7644, align 1
  %7646 = icmp ne i8 %7645, 0
  %7647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7648 = load i8, i8* %7647, align 1
  %7649 = icmp ne i8 %7648, 0
  %7650 = xor i1 %7646, %7649
  %7651 = xor i1 %7650, true
  %7652 = and i1 %7643, %7651
  %7653 = zext i1 %7652 to i8
  store i8 %7653, i8* %BRANCH_TAKEN, align 1
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7655 = select i1 %7652, i64 %7636, i64 %7638
  store i64 %7655, i64* %7654, align 8
  store %struct.Memory* %loadMem_4012af, %struct.Memory** %MEMORY
  %loadBr_4012af = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4012af = icmp eq i8 %loadBr_4012af, 1
  br i1 %cmpBr_4012af, label %block_.L_4012e2, label %block_4012b5

block_4012b5:                                     ; preds = %block_.L_4012a7
  %loadMem_4012b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7657 = getelementptr inbounds %struct.GPR, %struct.GPR* %7656, i32 0, i32 33
  %7658 = getelementptr inbounds %struct.Reg, %struct.Reg* %7657, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %7658 to i64*
  %7659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7660 = getelementptr inbounds %struct.GPR, %struct.GPR* %7659, i32 0, i32 11
  %7661 = getelementptr inbounds %struct.Reg, %struct.Reg* %7660, i32 0, i32 0
  %RDI.i276 = bitcast %union.anon* %7661 to i64*
  %7662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7663 = getelementptr inbounds %struct.GPR, %struct.GPR* %7662, i32 0, i32 15
  %7664 = getelementptr inbounds %struct.Reg, %struct.Reg* %7663, i32 0, i32 0
  %RBP.i277 = bitcast %union.anon* %7664 to i64*
  %7665 = load i64, i64* %RBP.i277
  %7666 = sub i64 %7665, 160
  %7667 = load i64, i64* %PC.i275
  %7668 = add i64 %7667, 7
  store i64 %7668, i64* %PC.i275
  store i64 %7666, i64* %RDI.i276, align 8
  store %struct.Memory* %loadMem_4012b5, %struct.Memory** %MEMORY
  %loadMem_4012bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7670 = getelementptr inbounds %struct.GPR, %struct.GPR* %7669, i32 0, i32 33
  %7671 = getelementptr inbounds %struct.Reg, %struct.Reg* %7670, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %7671 to i64*
  %7672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7673 = getelementptr inbounds %struct.GPR, %struct.GPR* %7672, i32 0, i32 15
  %7674 = getelementptr inbounds %struct.Reg, %struct.Reg* %7673, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %7674 to i64*
  %7675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7676 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7675, i64 0, i64 0
  %YMM0.i274 = bitcast %union.VectorReg* %7676 to %"class.std::bitset"*
  %7677 = bitcast %"class.std::bitset"* %YMM0.i274 to i8*
  %7678 = load i64, i64* %RBP.i273
  %7679 = sub i64 %7678, 144
  %7680 = load i64, i64* %PC.i272
  %7681 = add i64 %7680, 8
  store i64 %7681, i64* %PC.i272
  %7682 = inttoptr i64 %7679 to double*
  %7683 = load double, double* %7682
  %7684 = bitcast i8* %7677 to double*
  store double %7683, double* %7684, align 1
  %7685 = getelementptr inbounds i8, i8* %7677, i64 8
  %7686 = bitcast i8* %7685 to double*
  store double 0.000000e+00, double* %7686, align 1
  store %struct.Memory* %loadMem_4012bc, %struct.Memory** %MEMORY
  %loadMem_4012c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7688 = getelementptr inbounds %struct.GPR, %struct.GPR* %7687, i32 0, i32 33
  %7689 = getelementptr inbounds %struct.Reg, %struct.Reg* %7688, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %7689 to i64*
  %7690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7691 = getelementptr inbounds %struct.GPR, %struct.GPR* %7690, i32 0, i32 15
  %7692 = getelementptr inbounds %struct.Reg, %struct.Reg* %7691, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %7692 to i64*
  %7693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7694 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7693, i64 0, i64 1
  %YMM1.i271 = bitcast %union.VectorReg* %7694 to %"class.std::bitset"*
  %7695 = bitcast %"class.std::bitset"* %YMM1.i271 to i8*
  %7696 = load i64, i64* %RBP.i270
  %7697 = sub i64 %7696, 152
  %7698 = load i64, i64* %PC.i269
  %7699 = add i64 %7698, 8
  store i64 %7699, i64* %PC.i269
  %7700 = inttoptr i64 %7697 to double*
  %7701 = load double, double* %7700
  %7702 = bitcast i8* %7695 to double*
  store double %7701, double* %7702, align 1
  %7703 = getelementptr inbounds i8, i8* %7695, i64 8
  %7704 = bitcast i8* %7703 to double*
  store double 0.000000e+00, double* %7704, align 1
  store %struct.Memory* %loadMem_4012c4, %struct.Memory** %MEMORY
  %loadMem1_4012cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7706 = getelementptr inbounds %struct.GPR, %struct.GPR* %7705, i32 0, i32 33
  %7707 = getelementptr inbounds %struct.Reg, %struct.Reg* %7706, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %7707 to i64*
  %7708 = load i64, i64* %PC.i268
  %7709 = add i64 %7708, 1220
  %7710 = load i64, i64* %PC.i268
  %7711 = add i64 %7710, 5
  %7712 = load i64, i64* %PC.i268
  %7713 = add i64 %7712, 5
  store i64 %7713, i64* %PC.i268
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7715 = load i64, i64* %7714, align 8
  %7716 = add i64 %7715, -8
  %7717 = inttoptr i64 %7716 to i64*
  store i64 %7711, i64* %7717
  store i64 %7716, i64* %7714, align 8
  %7718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7709, i64* %7718, align 8
  store %struct.Memory* %loadMem1_4012cc, %struct.Memory** %MEMORY
  %loadMem2_4012cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4012cc = load i64, i64* %3
  %call2_4012cc = call %struct.Memory* @sub_401790.P3(%struct.State* %0, i64 %loadPC_4012cc, %struct.Memory* %loadMem2_4012cc)
  store %struct.Memory* %call2_4012cc, %struct.Memory** %MEMORY
  %loadMem_4012d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7720 = getelementptr inbounds %struct.GPR, %struct.GPR* %7719, i32 0, i32 33
  %7721 = getelementptr inbounds %struct.Reg, %struct.Reg* %7720, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %7721 to i64*
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7723 = getelementptr inbounds %struct.GPR, %struct.GPR* %7722, i32 0, i32 1
  %7724 = getelementptr inbounds %struct.Reg, %struct.Reg* %7723, i32 0, i32 0
  %RAX.i266 = bitcast %union.anon* %7724 to i64*
  %7725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7726 = getelementptr inbounds %struct.GPR, %struct.GPR* %7725, i32 0, i32 15
  %7727 = getelementptr inbounds %struct.Reg, %struct.Reg* %7726, i32 0, i32 0
  %RBP.i267 = bitcast %union.anon* %7727 to i64*
  %7728 = load i64, i64* %RBP.i267
  %7729 = sub i64 %7728, 24
  %7730 = load i64, i64* %PC.i265
  %7731 = add i64 %7730, 4
  store i64 %7731, i64* %PC.i265
  %7732 = inttoptr i64 %7729 to i64*
  %7733 = load i64, i64* %7732
  store i64 %7733, i64* %RAX.i266, align 8
  store %struct.Memory* %loadMem_4012d1, %struct.Memory** %MEMORY
  %loadMem_4012d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7735 = getelementptr inbounds %struct.GPR, %struct.GPR* %7734, i32 0, i32 33
  %7736 = getelementptr inbounds %struct.Reg, %struct.Reg* %7735, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %7736 to i64*
  %7737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7738 = getelementptr inbounds %struct.GPR, %struct.GPR* %7737, i32 0, i32 1
  %7739 = getelementptr inbounds %struct.Reg, %struct.Reg* %7738, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %7739 to i64*
  %7740 = load i64, i64* %RAX.i264
  %7741 = load i64, i64* %PC.i263
  %7742 = add i64 %7741, 4
  store i64 %7742, i64* %PC.i263
  %7743 = add i64 1, %7740
  store i64 %7743, i64* %RAX.i264, align 8
  %7744 = icmp ult i64 %7743, %7740
  %7745 = icmp ult i64 %7743, 1
  %7746 = or i1 %7744, %7745
  %7747 = zext i1 %7746 to i8
  %7748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7747, i8* %7748, align 1
  %7749 = trunc i64 %7743 to i32
  %7750 = and i32 %7749, 255
  %7751 = call i32 @llvm.ctpop.i32(i32 %7750)
  %7752 = trunc i32 %7751 to i8
  %7753 = and i8 %7752, 1
  %7754 = xor i8 %7753, 1
  %7755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7754, i8* %7755, align 1
  %7756 = xor i64 1, %7740
  %7757 = xor i64 %7756, %7743
  %7758 = lshr i64 %7757, 4
  %7759 = trunc i64 %7758 to i8
  %7760 = and i8 %7759, 1
  %7761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7760, i8* %7761, align 1
  %7762 = icmp eq i64 %7743, 0
  %7763 = zext i1 %7762 to i8
  %7764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7763, i8* %7764, align 1
  %7765 = lshr i64 %7743, 63
  %7766 = trunc i64 %7765 to i8
  %7767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7766, i8* %7767, align 1
  %7768 = lshr i64 %7740, 63
  %7769 = xor i64 %7765, %7768
  %7770 = add i64 %7769, %7765
  %7771 = icmp eq i64 %7770, 2
  %7772 = zext i1 %7771 to i8
  %7773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7772, i8* %7773, align 1
  store %struct.Memory* %loadMem_4012d5, %struct.Memory** %MEMORY
  %loadMem_4012d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7775 = getelementptr inbounds %struct.GPR, %struct.GPR* %7774, i32 0, i32 33
  %7776 = getelementptr inbounds %struct.Reg, %struct.Reg* %7775, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %7776 to i64*
  %7777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7778 = getelementptr inbounds %struct.GPR, %struct.GPR* %7777, i32 0, i32 1
  %7779 = getelementptr inbounds %struct.Reg, %struct.Reg* %7778, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %7779 to i64*
  %7780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7781 = getelementptr inbounds %struct.GPR, %struct.GPR* %7780, i32 0, i32 15
  %7782 = getelementptr inbounds %struct.Reg, %struct.Reg* %7781, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %7782 to i64*
  %7783 = load i64, i64* %RBP.i262
  %7784 = sub i64 %7783, 24
  %7785 = load i64, i64* %RAX.i261
  %7786 = load i64, i64* %PC.i260
  %7787 = add i64 %7786, 4
  store i64 %7787, i64* %PC.i260
  %7788 = inttoptr i64 %7784 to i64*
  store i64 %7785, i64* %7788
  store %struct.Memory* %loadMem_4012d9, %struct.Memory** %MEMORY
  %loadMem_4012dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7790 = getelementptr inbounds %struct.GPR, %struct.GPR* %7789, i32 0, i32 33
  %7791 = getelementptr inbounds %struct.Reg, %struct.Reg* %7790, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %7791 to i64*
  %7792 = load i64, i64* %PC.i259
  %7793 = add i64 %7792, -54
  %7794 = load i64, i64* %PC.i259
  %7795 = add i64 %7794, 5
  store i64 %7795, i64* %PC.i259
  %7796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7793, i64* %7796, align 8
  store %struct.Memory* %loadMem_4012dd, %struct.Memory** %MEMORY
  br label %block_.L_4012a7

block_.L_4012e2:                                  ; preds = %block_.L_4012a7
  %loadMem_4012e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7798 = getelementptr inbounds %struct.GPR, %struct.GPR* %7797, i32 0, i32 33
  %7799 = getelementptr inbounds %struct.Reg, %struct.Reg* %7798, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %7799 to i64*
  %7800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7801 = getelementptr inbounds %struct.GPR, %struct.GPR* %7800, i32 0, i32 1
  %7802 = getelementptr inbounds %struct.Reg, %struct.Reg* %7801, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %7802 to i64*
  %7803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7804 = getelementptr inbounds %struct.GPR, %struct.GPR* %7803, i32 0, i32 15
  %7805 = getelementptr inbounds %struct.Reg, %struct.Reg* %7804, i32 0, i32 0
  %RBP.i258 = bitcast %union.anon* %7805 to i64*
  %7806 = load i64, i64* %RBP.i258
  %7807 = sub i64 %7806, 176
  %7808 = load i64, i64* %PC.i256
  %7809 = add i64 %7808, 6
  store i64 %7809, i64* %PC.i256
  %7810 = inttoptr i64 %7807 to i32*
  %7811 = load i32, i32* %7810
  %7812 = zext i32 %7811 to i64
  store i64 %7812, i64* %RAX.i257, align 8
  store %struct.Memory* %loadMem_4012e2, %struct.Memory** %MEMORY
  %loadMem_4012e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7814 = getelementptr inbounds %struct.GPR, %struct.GPR* %7813, i32 0, i32 33
  %7815 = getelementptr inbounds %struct.Reg, %struct.Reg* %7814, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %7815 to i64*
  %7816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7817 = getelementptr inbounds %struct.GPR, %struct.GPR* %7816, i32 0, i32 1
  %7818 = getelementptr inbounds %struct.Reg, %struct.Reg* %7817, i32 0, i32 0
  %EAX.i254 = bitcast %union.anon* %7818 to i32*
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7820 = getelementptr inbounds %struct.GPR, %struct.GPR* %7819, i32 0, i32 15
  %7821 = getelementptr inbounds %struct.Reg, %struct.Reg* %7820, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %7821 to i64*
  %7822 = load i32, i32* %EAX.i254
  %7823 = zext i32 %7822 to i64
  %7824 = load i64, i64* %RBP.i255
  %7825 = sub i64 %7824, 172
  %7826 = load i64, i64* %PC.i253
  %7827 = add i64 %7826, 6
  store i64 %7827, i64* %PC.i253
  %7828 = inttoptr i64 %7825 to i32*
  %7829 = load i32, i32* %7828
  %7830 = sub i32 %7822, %7829
  %7831 = icmp ult i32 %7822, %7829
  %7832 = zext i1 %7831 to i8
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7832, i8* %7833, align 1
  %7834 = and i32 %7830, 255
  %7835 = call i32 @llvm.ctpop.i32(i32 %7834)
  %7836 = trunc i32 %7835 to i8
  %7837 = and i8 %7836, 1
  %7838 = xor i8 %7837, 1
  %7839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7838, i8* %7839, align 1
  %7840 = xor i32 %7829, %7822
  %7841 = xor i32 %7840, %7830
  %7842 = lshr i32 %7841, 4
  %7843 = trunc i32 %7842 to i8
  %7844 = and i8 %7843, 1
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7844, i8* %7845, align 1
  %7846 = icmp eq i32 %7830, 0
  %7847 = zext i1 %7846 to i8
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7847, i8* %7848, align 1
  %7849 = lshr i32 %7830, 31
  %7850 = trunc i32 %7849 to i8
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7850, i8* %7851, align 1
  %7852 = lshr i32 %7822, 31
  %7853 = lshr i32 %7829, 31
  %7854 = xor i32 %7853, %7852
  %7855 = xor i32 %7849, %7852
  %7856 = add i32 %7855, %7854
  %7857 = icmp eq i32 %7856, 2
  %7858 = zext i1 %7857 to i8
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7858, i8* %7859, align 1
  store %struct.Memory* %loadMem_4012e8, %struct.Memory** %MEMORY
  %loadMem_4012ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7861 = getelementptr inbounds %struct.GPR, %struct.GPR* %7860, i32 0, i32 33
  %7862 = getelementptr inbounds %struct.Reg, %struct.Reg* %7861, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %7862 to i64*
  %7863 = load i64, i64* %PC.i252
  %7864 = add i64 %7863, 63
  %7865 = load i64, i64* %PC.i252
  %7866 = add i64 %7865, 6
  %7867 = load i64, i64* %PC.i252
  %7868 = add i64 %7867, 6
  store i64 %7868, i64* %PC.i252
  %7869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7870 = load i8, i8* %7869, align 1
  %7871 = icmp eq i8 %7870, 0
  %7872 = zext i1 %7871 to i8
  store i8 %7872, i8* %BRANCH_TAKEN, align 1
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7874 = select i1 %7871, i64 %7864, i64 %7866
  store i64 %7874, i64* %7873, align 8
  store %struct.Memory* %loadMem_4012ee, %struct.Memory** %MEMORY
  %loadBr_4012ee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4012ee = icmp eq i8 %loadBr_4012ee, 1
  br i1 %cmpBr_4012ee, label %block_.L_40132d, label %block_4012f4

block_4012f4:                                     ; preds = %block_.L_4012e2
  %loadMem_4012f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7876 = getelementptr inbounds %struct.GPR, %struct.GPR* %7875, i32 0, i32 33
  %7877 = getelementptr inbounds %struct.Reg, %struct.Reg* %7876, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %7877 to i64*
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7879 = getelementptr inbounds %struct.GPR, %struct.GPR* %7878, i32 0, i32 11
  %7880 = getelementptr inbounds %struct.Reg, %struct.Reg* %7879, i32 0, i32 0
  %RDI.i250 = bitcast %union.anon* %7880 to i64*
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 15
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %RBP.i251 = bitcast %union.anon* %7883 to i64*
  %7884 = load i64, i64* %RBP.i251
  %7885 = sub i64 %7884, 80
  %7886 = load i64, i64* %PC.i249
  %7887 = add i64 %7886, 4
  store i64 %7887, i64* %PC.i249
  %7888 = inttoptr i64 %7885 to i64*
  %7889 = load i64, i64* %7888
  store i64 %7889, i64* %RDI.i250, align 8
  store %struct.Memory* %loadMem_4012f4, %struct.Memory** %MEMORY
  %loadMem_4012f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7891 = getelementptr inbounds %struct.GPR, %struct.GPR* %7890, i32 0, i32 33
  %7892 = getelementptr inbounds %struct.Reg, %struct.Reg* %7891, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %7892 to i64*
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7894 = getelementptr inbounds %struct.GPR, %struct.GPR* %7893, i32 0, i32 9
  %7895 = getelementptr inbounds %struct.Reg, %struct.Reg* %7894, i32 0, i32 0
  %RSI.i248 = bitcast %union.anon* %7895 to i64*
  %7896 = load i64, i64* %PC.i247
  %7897 = add i64 %7896, 8
  store i64 %7897, i64* %PC.i247
  %7898 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %7899 = sext i32 %7898 to i64
  store i64 %7899, i64* %RSI.i248, align 8
  store %struct.Memory* %loadMem_4012f8, %struct.Memory** %MEMORY
  %loadMem_401300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7901 = getelementptr inbounds %struct.GPR, %struct.GPR* %7900, i32 0, i32 33
  %7902 = getelementptr inbounds %struct.Reg, %struct.Reg* %7901, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %7902 to i64*
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7904 = getelementptr inbounds %struct.GPR, %struct.GPR* %7903, i32 0, i32 7
  %7905 = getelementptr inbounds %struct.Reg, %struct.Reg* %7904, i32 0, i32 0
  %RDX.i246 = bitcast %union.anon* %7905 to i64*
  %7906 = load i64, i64* %PC.i245
  %7907 = add i64 %7906, 8
  store i64 %7907, i64* %PC.i245
  %7908 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %7909 = sext i32 %7908 to i64
  store i64 %7909, i64* %RDX.i246, align 8
  store %struct.Memory* %loadMem_401300, %struct.Memory** %MEMORY
  %loadMem_401308 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7911 = getelementptr inbounds %struct.GPR, %struct.GPR* %7910, i32 0, i32 33
  %7912 = getelementptr inbounds %struct.Reg, %struct.Reg* %7911, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %7912 to i64*
  %7913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7914 = getelementptr inbounds %struct.GPR, %struct.GPR* %7913, i32 0, i32 15
  %7915 = getelementptr inbounds %struct.Reg, %struct.Reg* %7914, i32 0, i32 0
  %RBP.i243 = bitcast %union.anon* %7915 to i64*
  %7916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7917 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7916, i64 0, i64 0
  %YMM0.i244 = bitcast %union.VectorReg* %7917 to %"class.std::bitset"*
  %7918 = bitcast %"class.std::bitset"* %YMM0.i244 to i8*
  %7919 = load i64, i64* %RBP.i243
  %7920 = sub i64 %7919, 144
  %7921 = load i64, i64* %PC.i242
  %7922 = add i64 %7921, 8
  store i64 %7922, i64* %PC.i242
  %7923 = inttoptr i64 %7920 to double*
  %7924 = load double, double* %7923
  %7925 = bitcast i8* %7918 to double*
  store double %7924, double* %7925, align 1
  %7926 = getelementptr inbounds i8, i8* %7918, i64 8
  %7927 = bitcast i8* %7926 to double*
  store double 0.000000e+00, double* %7927, align 1
  store %struct.Memory* %loadMem_401308, %struct.Memory** %MEMORY
  %loadMem_401310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7929 = getelementptr inbounds %struct.GPR, %struct.GPR* %7928, i32 0, i32 33
  %7930 = getelementptr inbounds %struct.Reg, %struct.Reg* %7929, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %7930 to i64*
  %7931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7932 = getelementptr inbounds %struct.GPR, %struct.GPR* %7931, i32 0, i32 15
  %7933 = getelementptr inbounds %struct.Reg, %struct.Reg* %7932, i32 0, i32 0
  %RBP.i240 = bitcast %union.anon* %7933 to i64*
  %7934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7935 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7934, i64 0, i64 1
  %YMM1.i241 = bitcast %union.VectorReg* %7935 to %"class.std::bitset"*
  %7936 = bitcast %"class.std::bitset"* %YMM1.i241 to i8*
  %7937 = load i64, i64* %RBP.i240
  %7938 = sub i64 %7937, 152
  %7939 = load i64, i64* %PC.i239
  %7940 = add i64 %7939, 8
  store i64 %7940, i64* %PC.i239
  %7941 = inttoptr i64 %7938 to double*
  %7942 = load double, double* %7941
  %7943 = bitcast i8* %7936 to double*
  store double %7942, double* %7943, align 1
  %7944 = getelementptr inbounds i8, i8* %7936, i64 8
  %7945 = bitcast i8* %7944 to double*
  store double 0.000000e+00, double* %7945, align 1
  store %struct.Memory* %loadMem_401310, %struct.Memory** %MEMORY
  %loadMem_401318 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7947 = getelementptr inbounds %struct.GPR, %struct.GPR* %7946, i32 0, i32 33
  %7948 = getelementptr inbounds %struct.Reg, %struct.Reg* %7947, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %7948 to i64*
  %7949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7950 = getelementptr inbounds %struct.GPR, %struct.GPR* %7949, i32 0, i32 15
  %7951 = getelementptr inbounds %struct.Reg, %struct.Reg* %7950, i32 0, i32 0
  %RBP.i237 = bitcast %union.anon* %7951 to i64*
  %7952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7953 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7952, i64 0, i64 2
  %YMM2.i238 = bitcast %union.VectorReg* %7953 to %"class.std::bitset"*
  %7954 = bitcast %"class.std::bitset"* %YMM2.i238 to i8*
  %7955 = load i64, i64* %RBP.i237
  %7956 = sub i64 %7955, 160
  %7957 = load i64, i64* %PC.i236
  %7958 = add i64 %7957, 8
  store i64 %7958, i64* %PC.i236
  %7959 = inttoptr i64 %7956 to double*
  %7960 = load double, double* %7959
  %7961 = bitcast i8* %7954 to double*
  store double %7960, double* %7961, align 1
  %7962 = getelementptr inbounds i8, i8* %7954, i64 8
  %7963 = bitcast i8* %7962 to double*
  store double 0.000000e+00, double* %7963, align 1
  store %struct.Memory* %loadMem_401318, %struct.Memory** %MEMORY
  %loadMem_401320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7965 = getelementptr inbounds %struct.GPR, %struct.GPR* %7964, i32 0, i32 33
  %7966 = getelementptr inbounds %struct.Reg, %struct.Reg* %7965, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %7966 to i64*
  %7967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7968 = getelementptr inbounds %struct.GPR, %struct.GPR* %7967, i32 0, i32 15
  %7969 = getelementptr inbounds %struct.Reg, %struct.Reg* %7968, i32 0, i32 0
  %RBP.i234 = bitcast %union.anon* %7969 to i64*
  %7970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7971 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7970, i64 0, i64 3
  %YMM3.i235 = bitcast %union.VectorReg* %7971 to %"class.std::bitset"*
  %7972 = bitcast %"class.std::bitset"* %YMM3.i235 to i8*
  %7973 = load i64, i64* %RBP.i234
  %7974 = sub i64 %7973, 160
  %7975 = load i64, i64* %PC.i233
  %7976 = add i64 %7975, 8
  store i64 %7976, i64* %PC.i233
  %7977 = inttoptr i64 %7974 to double*
  %7978 = load double, double* %7977
  %7979 = bitcast i8* %7972 to double*
  store double %7978, double* %7979, align 1
  %7980 = getelementptr inbounds i8, i8* %7972, i64 8
  %7981 = bitcast i8* %7980 to double*
  store double 0.000000e+00, double* %7981, align 1
  store %struct.Memory* %loadMem_401320, %struct.Memory** %MEMORY
  %loadMem1_401328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7983 = getelementptr inbounds %struct.GPR, %struct.GPR* %7982, i32 0, i32 33
  %7984 = getelementptr inbounds %struct.Reg, %struct.Reg* %7983, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %7984 to i64*
  %7985 = load i64, i64* %PC.i232
  %7986 = add i64 %7985, 712
  %7987 = load i64, i64* %PC.i232
  %7988 = add i64 %7987, 5
  %7989 = load i64, i64* %PC.i232
  %7990 = add i64 %7989, 5
  store i64 %7990, i64* %PC.i232
  %7991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7992 = load i64, i64* %7991, align 8
  %7993 = add i64 %7992, -8
  %7994 = inttoptr i64 %7993 to i64*
  store i64 %7988, i64* %7994
  store i64 %7993, i64* %7991, align 8
  %7995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7986, i64* %7995, align 8
  store %struct.Memory* %loadMem1_401328, %struct.Memory** %MEMORY
  %loadMem2_401328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401328 = load i64, i64* %3
  %call2_401328 = call %struct.Memory* @sub_4015f0.POUT(%struct.State* %0, i64 %loadPC_401328, %struct.Memory* %loadMem2_401328)
  store %struct.Memory* %call2_401328, %struct.Memory** %MEMORY
  br label %block_.L_40132d

block_.L_40132d:                                  ; preds = %block_4012f4, %block_.L_4012e2
  %loadMem_40132d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7997 = getelementptr inbounds %struct.GPR, %struct.GPR* %7996, i32 0, i32 33
  %7998 = getelementptr inbounds %struct.Reg, %struct.Reg* %7997, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %7998 to i64*
  %7999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8000 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7999, i64 0, i64 0
  %YMM0.i231 = bitcast %union.VectorReg* %8000 to %"class.std::bitset"*
  %8001 = bitcast %"class.std::bitset"* %YMM0.i231 to i8*
  %8002 = load i64, i64* %PC.i230
  %8003 = add i64 %8002, 1547
  %8004 = load i64, i64* %PC.i230
  %8005 = add i64 %8004, 8
  store i64 %8005, i64* %PC.i230
  %8006 = inttoptr i64 %8003 to double*
  %8007 = load double, double* %8006
  %8008 = bitcast i8* %8001 to double*
  store double %8007, double* %8008, align 1
  %8009 = getelementptr inbounds i8, i8* %8001, i64 8
  %8010 = bitcast i8* %8009 to double*
  store double 0.000000e+00, double* %8010, align 1
  store %struct.Memory* %loadMem_40132d, %struct.Memory** %MEMORY
  %loadMem_401335 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8012 = getelementptr inbounds %struct.GPR, %struct.GPR* %8011, i32 0, i32 33
  %8013 = getelementptr inbounds %struct.Reg, %struct.Reg* %8012, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %8013 to i64*
  %8014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8015 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8014, i64 0, i64 1
  %YMM1.i229 = bitcast %union.VectorReg* %8015 to %"class.std::bitset"*
  %8016 = bitcast %"class.std::bitset"* %YMM1.i229 to i8*
  %8017 = load i64, i64* %PC.i228
  %8018 = add i64 %8017, 1491
  %8019 = load i64, i64* %PC.i228
  %8020 = add i64 %8019, 8
  store i64 %8020, i64* %PC.i228
  %8021 = inttoptr i64 %8018 to double*
  %8022 = load double, double* %8021
  %8023 = bitcast i8* %8016 to double*
  store double %8022, double* %8023, align 1
  %8024 = getelementptr inbounds i8, i8* %8016, i64 8
  %8025 = bitcast i8* %8024 to double*
  store double 0.000000e+00, double* %8025, align 1
  store %struct.Memory* %loadMem_401335, %struct.Memory** %MEMORY
  %loadMem_40133d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8027 = getelementptr inbounds %struct.GPR, %struct.GPR* %8026, i32 0, i32 33
  %8028 = getelementptr inbounds %struct.Reg, %struct.Reg* %8027, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %8028 to i64*
  %8029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8030 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8029, i64 0, i64 2
  %YMM2.i227 = bitcast %union.VectorReg* %8030 to %"class.std::bitset"*
  %8031 = bitcast %"class.std::bitset"* %YMM2.i227 to i8*
  %8032 = load i64, i64* %PC.i226
  %8033 = add i64 %8032, 1515
  %8034 = load i64, i64* %PC.i226
  %8035 = add i64 %8034, 8
  store i64 %8035, i64* %PC.i226
  %8036 = inttoptr i64 %8033 to double*
  %8037 = load double, double* %8036
  %8038 = bitcast i8* %8031 to double*
  store double %8037, double* %8038, align 1
  %8039 = getelementptr inbounds i8, i8* %8031, i64 8
  %8040 = bitcast i8* %8039 to double*
  store double 0.000000e+00, double* %8040, align 1
  store %struct.Memory* %loadMem_40133d, %struct.Memory** %MEMORY
  %loadMem_401345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8042 = getelementptr inbounds %struct.GPR, %struct.GPR* %8041, i32 0, i32 33
  %8043 = getelementptr inbounds %struct.Reg, %struct.Reg* %8042, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %8043 to i64*
  %8044 = load i64, i64* %PC.i225
  %8045 = add i64 %8044, 11
  store i64 %8045, i64* %PC.i225
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_401345, %struct.Memory** %MEMORY
  %loadMem_401350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8047 = getelementptr inbounds %struct.GPR, %struct.GPR* %8046, i32 0, i32 33
  %8048 = getelementptr inbounds %struct.Reg, %struct.Reg* %8047, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %8048 to i64*
  %8049 = load i64, i64* %PC.i224
  %8050 = add i64 %8049, 11
  store i64 %8050, i64* %PC.i224
  store i32 2, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_401350, %struct.Memory** %MEMORY
  %loadMem_40135b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8052 = getelementptr inbounds %struct.GPR, %struct.GPR* %8051, i32 0, i32 33
  %8053 = getelementptr inbounds %struct.Reg, %struct.Reg* %8052, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %8053 to i64*
  %8054 = load i64, i64* %PC.i223
  %8055 = add i64 %8054, 11
  store i64 %8055, i64* %PC.i223
  store i32 3, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  store %struct.Memory* %loadMem_40135b, %struct.Memory** %MEMORY
  %loadMem_401366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8057 = getelementptr inbounds %struct.GPR, %struct.GPR* %8056, i32 0, i32 33
  %8058 = getelementptr inbounds %struct.Reg, %struct.Reg* %8057, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %8058 to i64*
  %8059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8060 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8059, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %8060 to %union.vec128_t*
  %8061 = bitcast %union.vec128_t* %XMM2.i to i8*
  %8062 = load i64, i64* %PC.i222
  %8063 = add i64 %8062, 9
  store i64 %8063, i64* %PC.i222
  %8064 = bitcast i8* %8061 to double*
  %8065 = load double, double* %8064, align 1
  store double %8065, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  store %struct.Memory* %loadMem_401366, %struct.Memory** %MEMORY
  %loadMem_40136f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8067 = getelementptr inbounds %struct.GPR, %struct.GPR* %8066, i32 0, i32 33
  %8068 = getelementptr inbounds %struct.Reg, %struct.Reg* %8067, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %8068 to i64*
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8070 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8069, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %8070 to %union.vec128_t*
  %8071 = bitcast %union.vec128_t* %XMM1.i to i8*
  %8072 = load i64, i64* %PC.i221
  %8073 = add i64 %8072, 9
  store i64 %8073, i64* %PC.i221
  %8074 = bitcast i8* %8071 to double*
  %8075 = load double, double* %8074, align 1
  store double %8075, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  store %struct.Memory* %loadMem_40136f, %struct.Memory** %MEMORY
  %loadMem_401378 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8077 = getelementptr inbounds %struct.GPR, %struct.GPR* %8076, i32 0, i32 33
  %8078 = getelementptr inbounds %struct.Reg, %struct.Reg* %8077, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %8078 to i64*
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8080 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8079, i64 0, i64 0
  %XMM0.i220 = bitcast %union.VectorReg* %8080 to %union.vec128_t*
  %8081 = bitcast %union.vec128_t* %XMM0.i220 to i8*
  %8082 = load i64, i64* %PC.i219
  %8083 = add i64 %8082, 9
  store i64 %8083, i64* %PC.i219
  %8084 = bitcast i8* %8081 to double*
  %8085 = load double, double* %8084, align 1
  store double %8085, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  store %struct.Memory* %loadMem_401378, %struct.Memory** %MEMORY
  %loadMem_401381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8087 = getelementptr inbounds %struct.GPR, %struct.GPR* %8086, i32 0, i32 33
  %8088 = getelementptr inbounds %struct.Reg, %struct.Reg* %8087, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %8088 to i64*
  %8089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8090 = getelementptr inbounds %struct.GPR, %struct.GPR* %8089, i32 0, i32 15
  %8091 = getelementptr inbounds %struct.Reg, %struct.Reg* %8090, i32 0, i32 0
  %RBP.i218 = bitcast %union.anon* %8091 to i64*
  %8092 = load i64, i64* %RBP.i218
  %8093 = sub i64 %8092, 24
  %8094 = load i64, i64* %PC.i217
  %8095 = add i64 %8094, 8
  store i64 %8095, i64* %PC.i217
  %8096 = inttoptr i64 %8093 to i64*
  store i64 1, i64* %8096
  store %struct.Memory* %loadMem_401381, %struct.Memory** %MEMORY
  br label %block_.L_401389

block_.L_401389:                                  ; preds = %block_401397, %block_.L_40132d
  %loadMem_401389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8098 = getelementptr inbounds %struct.GPR, %struct.GPR* %8097, i32 0, i32 33
  %8099 = getelementptr inbounds %struct.Reg, %struct.Reg* %8098, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %8099 to i64*
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8101 = getelementptr inbounds %struct.GPR, %struct.GPR* %8100, i32 0, i32 1
  %8102 = getelementptr inbounds %struct.Reg, %struct.Reg* %8101, i32 0, i32 0
  %RAX.i215 = bitcast %union.anon* %8102 to i64*
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8104 = getelementptr inbounds %struct.GPR, %struct.GPR* %8103, i32 0, i32 15
  %8105 = getelementptr inbounds %struct.Reg, %struct.Reg* %8104, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %8105 to i64*
  %8106 = load i64, i64* %RBP.i216
  %8107 = sub i64 %8106, 24
  %8108 = load i64, i64* %PC.i214
  %8109 = add i64 %8108, 4
  store i64 %8109, i64* %PC.i214
  %8110 = inttoptr i64 %8107 to i64*
  %8111 = load i64, i64* %8110
  store i64 %8111, i64* %RAX.i215, align 8
  store %struct.Memory* %loadMem_401389, %struct.Memory** %MEMORY
  %loadMem_40138d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8113 = getelementptr inbounds %struct.GPR, %struct.GPR* %8112, i32 0, i32 33
  %8114 = getelementptr inbounds %struct.Reg, %struct.Reg* %8113, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %8114 to i64*
  %8115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8116 = getelementptr inbounds %struct.GPR, %struct.GPR* %8115, i32 0, i32 1
  %8117 = getelementptr inbounds %struct.Reg, %struct.Reg* %8116, i32 0, i32 0
  %RAX.i212 = bitcast %union.anon* %8117 to i64*
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8119 = getelementptr inbounds %struct.GPR, %struct.GPR* %8118, i32 0, i32 15
  %8120 = getelementptr inbounds %struct.Reg, %struct.Reg* %8119, i32 0, i32 0
  %RBP.i213 = bitcast %union.anon* %8120 to i64*
  %8121 = load i64, i64* %RAX.i212
  %8122 = load i64, i64* %RBP.i213
  %8123 = sub i64 %8122, 88
  %8124 = load i64, i64* %PC.i211
  %8125 = add i64 %8124, 4
  store i64 %8125, i64* %PC.i211
  %8126 = inttoptr i64 %8123 to i64*
  %8127 = load i64, i64* %8126
  %8128 = sub i64 %8121, %8127
  %8129 = icmp ugt i64 %8127, %8121
  %8130 = zext i1 %8129 to i8
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8130, i8* %8131, align 1
  %8132 = trunc i64 %8128 to i32
  %8133 = and i32 %8132, 255
  %8134 = call i32 @llvm.ctpop.i32(i32 %8133)
  %8135 = trunc i32 %8134 to i8
  %8136 = and i8 %8135, 1
  %8137 = xor i8 %8136, 1
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8137, i8* %8138, align 1
  %8139 = xor i64 %8127, %8121
  %8140 = xor i64 %8139, %8128
  %8141 = lshr i64 %8140, 4
  %8142 = trunc i64 %8141 to i8
  %8143 = and i8 %8142, 1
  %8144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8143, i8* %8144, align 1
  %8145 = icmp eq i64 %8128, 0
  %8146 = zext i1 %8145 to i8
  %8147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8146, i8* %8147, align 1
  %8148 = lshr i64 %8128, 63
  %8149 = trunc i64 %8148 to i8
  %8150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8149, i8* %8150, align 1
  %8151 = lshr i64 %8121, 63
  %8152 = lshr i64 %8127, 63
  %8153 = xor i64 %8152, %8151
  %8154 = xor i64 %8148, %8151
  %8155 = add i64 %8154, %8153
  %8156 = icmp eq i64 %8155, 2
  %8157 = zext i1 %8156 to i8
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8157, i8* %8158, align 1
  store %struct.Memory* %loadMem_40138d, %struct.Memory** %MEMORY
  %loadMem_401391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8160 = getelementptr inbounds %struct.GPR, %struct.GPR* %8159, i32 0, i32 33
  %8161 = getelementptr inbounds %struct.Reg, %struct.Reg* %8160, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %8161 to i64*
  %8162 = load i64, i64* %PC.i210
  %8163 = add i64 %8162, 28
  %8164 = load i64, i64* %PC.i210
  %8165 = add i64 %8164, 6
  %8166 = load i64, i64* %PC.i210
  %8167 = add i64 %8166, 6
  store i64 %8167, i64* %PC.i210
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8169 = load i8, i8* %8168, align 1
  %8170 = icmp eq i8 %8169, 0
  %8171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8172 = load i8, i8* %8171, align 1
  %8173 = icmp ne i8 %8172, 0
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8175 = load i8, i8* %8174, align 1
  %8176 = icmp ne i8 %8175, 0
  %8177 = xor i1 %8173, %8176
  %8178 = xor i1 %8177, true
  %8179 = and i1 %8170, %8178
  %8180 = zext i1 %8179 to i8
  store i8 %8180, i8* %BRANCH_TAKEN, align 1
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8182 = select i1 %8179, i64 %8163, i64 %8165
  store i64 %8182, i64* %8181, align 8
  store %struct.Memory* %loadMem_401391, %struct.Memory** %MEMORY
  %loadBr_401391 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401391 = icmp eq i8 %loadBr_401391, 1
  br i1 %cmpBr_401391, label %block_.L_4013ad, label %block_401397

block_401397:                                     ; preds = %block_.L_401389
  %loadMem1_401397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8184 = getelementptr inbounds %struct.GPR, %struct.GPR* %8183, i32 0, i32 33
  %8185 = getelementptr inbounds %struct.Reg, %struct.Reg* %8184, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %8185 to i64*
  %8186 = load i64, i64* %PC.i209
  %8187 = add i64 %8186, 1145
  %8188 = load i64, i64* %PC.i209
  %8189 = add i64 %8188, 5
  %8190 = load i64, i64* %PC.i209
  %8191 = add i64 %8190, 5
  store i64 %8191, i64* %PC.i209
  %8192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8193 = load i64, i64* %8192, align 8
  %8194 = add i64 %8193, -8
  %8195 = inttoptr i64 %8194 to i64*
  store i64 %8189, i64* %8195
  store i64 %8194, i64* %8192, align 8
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8187, i64* %8196, align 8
  store %struct.Memory* %loadMem1_401397, %struct.Memory** %MEMORY
  %loadMem2_401397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401397 = load i64, i64* %3
  %call2_401397 = call %struct.Memory* @sub_401810.P0(%struct.State* %0, i64 %loadPC_401397, %struct.Memory* %loadMem2_401397)
  store %struct.Memory* %call2_401397, %struct.Memory** %MEMORY
  %loadMem_40139c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8198 = getelementptr inbounds %struct.GPR, %struct.GPR* %8197, i32 0, i32 33
  %8199 = getelementptr inbounds %struct.Reg, %struct.Reg* %8198, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %8199 to i64*
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8201 = getelementptr inbounds %struct.GPR, %struct.GPR* %8200, i32 0, i32 1
  %8202 = getelementptr inbounds %struct.Reg, %struct.Reg* %8201, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %8202 to i64*
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8204 = getelementptr inbounds %struct.GPR, %struct.GPR* %8203, i32 0, i32 15
  %8205 = getelementptr inbounds %struct.Reg, %struct.Reg* %8204, i32 0, i32 0
  %RBP.i208 = bitcast %union.anon* %8205 to i64*
  %8206 = load i64, i64* %RBP.i208
  %8207 = sub i64 %8206, 24
  %8208 = load i64, i64* %PC.i206
  %8209 = add i64 %8208, 4
  store i64 %8209, i64* %PC.i206
  %8210 = inttoptr i64 %8207 to i64*
  %8211 = load i64, i64* %8210
  store i64 %8211, i64* %RAX.i207, align 8
  store %struct.Memory* %loadMem_40139c, %struct.Memory** %MEMORY
  %loadMem_4013a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8213 = getelementptr inbounds %struct.GPR, %struct.GPR* %8212, i32 0, i32 33
  %8214 = getelementptr inbounds %struct.Reg, %struct.Reg* %8213, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %8214 to i64*
  %8215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8216 = getelementptr inbounds %struct.GPR, %struct.GPR* %8215, i32 0, i32 1
  %8217 = getelementptr inbounds %struct.Reg, %struct.Reg* %8216, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %8217 to i64*
  %8218 = load i64, i64* %RAX.i205
  %8219 = load i64, i64* %PC.i204
  %8220 = add i64 %8219, 4
  store i64 %8220, i64* %PC.i204
  %8221 = add i64 1, %8218
  store i64 %8221, i64* %RAX.i205, align 8
  %8222 = icmp ult i64 %8221, %8218
  %8223 = icmp ult i64 %8221, 1
  %8224 = or i1 %8222, %8223
  %8225 = zext i1 %8224 to i8
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8225, i8* %8226, align 1
  %8227 = trunc i64 %8221 to i32
  %8228 = and i32 %8227, 255
  %8229 = call i32 @llvm.ctpop.i32(i32 %8228)
  %8230 = trunc i32 %8229 to i8
  %8231 = and i8 %8230, 1
  %8232 = xor i8 %8231, 1
  %8233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8232, i8* %8233, align 1
  %8234 = xor i64 1, %8218
  %8235 = xor i64 %8234, %8221
  %8236 = lshr i64 %8235, 4
  %8237 = trunc i64 %8236 to i8
  %8238 = and i8 %8237, 1
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8238, i8* %8239, align 1
  %8240 = icmp eq i64 %8221, 0
  %8241 = zext i1 %8240 to i8
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8241, i8* %8242, align 1
  %8243 = lshr i64 %8221, 63
  %8244 = trunc i64 %8243 to i8
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8244, i8* %8245, align 1
  %8246 = lshr i64 %8218, 63
  %8247 = xor i64 %8243, %8246
  %8248 = add i64 %8247, %8243
  %8249 = icmp eq i64 %8248, 2
  %8250 = zext i1 %8249 to i8
  %8251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8250, i8* %8251, align 1
  store %struct.Memory* %loadMem_4013a0, %struct.Memory** %MEMORY
  %loadMem_4013a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8253 = getelementptr inbounds %struct.GPR, %struct.GPR* %8252, i32 0, i32 33
  %8254 = getelementptr inbounds %struct.Reg, %struct.Reg* %8253, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %8254 to i64*
  %8255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8256 = getelementptr inbounds %struct.GPR, %struct.GPR* %8255, i32 0, i32 1
  %8257 = getelementptr inbounds %struct.Reg, %struct.Reg* %8256, i32 0, i32 0
  %RAX.i202 = bitcast %union.anon* %8257 to i64*
  %8258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8259 = getelementptr inbounds %struct.GPR, %struct.GPR* %8258, i32 0, i32 15
  %8260 = getelementptr inbounds %struct.Reg, %struct.Reg* %8259, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %8260 to i64*
  %8261 = load i64, i64* %RBP.i203
  %8262 = sub i64 %8261, 24
  %8263 = load i64, i64* %RAX.i202
  %8264 = load i64, i64* %PC.i201
  %8265 = add i64 %8264, 4
  store i64 %8265, i64* %PC.i201
  %8266 = inttoptr i64 %8262 to i64*
  store i64 %8263, i64* %8266
  store %struct.Memory* %loadMem_4013a4, %struct.Memory** %MEMORY
  %loadMem_4013a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8268 = getelementptr inbounds %struct.GPR, %struct.GPR* %8267, i32 0, i32 33
  %8269 = getelementptr inbounds %struct.Reg, %struct.Reg* %8268, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %8269 to i64*
  %8270 = load i64, i64* %PC.i200
  %8271 = add i64 %8270, -31
  %8272 = load i64, i64* %PC.i200
  %8273 = add i64 %8272, 5
  store i64 %8273, i64* %PC.i200
  %8274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8271, i64* %8274, align 8
  store %struct.Memory* %loadMem_4013a8, %struct.Memory** %MEMORY
  br label %block_.L_401389

block_.L_4013ad:                                  ; preds = %block_.L_401389
  %loadMem_4013ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8276 = getelementptr inbounds %struct.GPR, %struct.GPR* %8275, i32 0, i32 33
  %8277 = getelementptr inbounds %struct.Reg, %struct.Reg* %8276, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %8277 to i64*
  %8278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8279 = getelementptr inbounds %struct.GPR, %struct.GPR* %8278, i32 0, i32 1
  %8280 = getelementptr inbounds %struct.Reg, %struct.Reg* %8279, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %8280 to i64*
  %8281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8282 = getelementptr inbounds %struct.GPR, %struct.GPR* %8281, i32 0, i32 15
  %8283 = getelementptr inbounds %struct.Reg, %struct.Reg* %8282, i32 0, i32 0
  %RBP.i199 = bitcast %union.anon* %8283 to i64*
  %8284 = load i64, i64* %RBP.i199
  %8285 = sub i64 %8284, 176
  %8286 = load i64, i64* %PC.i197
  %8287 = add i64 %8286, 6
  store i64 %8287, i64* %PC.i197
  %8288 = inttoptr i64 %8285 to i32*
  %8289 = load i32, i32* %8288
  %8290 = zext i32 %8289 to i64
  store i64 %8290, i64* %RAX.i198, align 8
  store %struct.Memory* %loadMem_4013ad, %struct.Memory** %MEMORY
  %loadMem_4013b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8292 = getelementptr inbounds %struct.GPR, %struct.GPR* %8291, i32 0, i32 33
  %8293 = getelementptr inbounds %struct.Reg, %struct.Reg* %8292, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %8293 to i64*
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8295 = getelementptr inbounds %struct.GPR, %struct.GPR* %8294, i32 0, i32 1
  %8296 = getelementptr inbounds %struct.Reg, %struct.Reg* %8295, i32 0, i32 0
  %EAX.i195 = bitcast %union.anon* %8296 to i32*
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8298 = getelementptr inbounds %struct.GPR, %struct.GPR* %8297, i32 0, i32 15
  %8299 = getelementptr inbounds %struct.Reg, %struct.Reg* %8298, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %8299 to i64*
  %8300 = load i32, i32* %EAX.i195
  %8301 = zext i32 %8300 to i64
  %8302 = load i64, i64* %RBP.i196
  %8303 = sub i64 %8302, 172
  %8304 = load i64, i64* %PC.i194
  %8305 = add i64 %8304, 6
  store i64 %8305, i64* %PC.i194
  %8306 = inttoptr i64 %8303 to i32*
  %8307 = load i32, i32* %8306
  %8308 = sub i32 %8300, %8307
  %8309 = icmp ult i32 %8300, %8307
  %8310 = zext i1 %8309 to i8
  %8311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8310, i8* %8311, align 1
  %8312 = and i32 %8308, 255
  %8313 = call i32 @llvm.ctpop.i32(i32 %8312)
  %8314 = trunc i32 %8313 to i8
  %8315 = and i8 %8314, 1
  %8316 = xor i8 %8315, 1
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8316, i8* %8317, align 1
  %8318 = xor i32 %8307, %8300
  %8319 = xor i32 %8318, %8308
  %8320 = lshr i32 %8319, 4
  %8321 = trunc i32 %8320 to i8
  %8322 = and i8 %8321, 1
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8322, i8* %8323, align 1
  %8324 = icmp eq i32 %8308, 0
  %8325 = zext i1 %8324 to i8
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8325, i8* %8326, align 1
  %8327 = lshr i32 %8308, 31
  %8328 = trunc i32 %8327 to i8
  %8329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8328, i8* %8329, align 1
  %8330 = lshr i32 %8300, 31
  %8331 = lshr i32 %8307, 31
  %8332 = xor i32 %8331, %8330
  %8333 = xor i32 %8327, %8330
  %8334 = add i32 %8333, %8332
  %8335 = icmp eq i32 %8334, 2
  %8336 = zext i1 %8335 to i8
  %8337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8336, i8* %8337, align 1
  store %struct.Memory* %loadMem_4013b3, %struct.Memory** %MEMORY
  %loadMem_4013b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8339 = getelementptr inbounds %struct.GPR, %struct.GPR* %8338, i32 0, i32 33
  %8340 = getelementptr inbounds %struct.Reg, %struct.Reg* %8339, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %8340 to i64*
  %8341 = load i64, i64* %PC.i193
  %8342 = add i64 %8341, 67
  %8343 = load i64, i64* %PC.i193
  %8344 = add i64 %8343, 6
  %8345 = load i64, i64* %PC.i193
  %8346 = add i64 %8345, 6
  store i64 %8346, i64* %PC.i193
  %8347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8348 = load i8, i8* %8347, align 1
  %8349 = icmp eq i8 %8348, 0
  %8350 = zext i1 %8349 to i8
  store i8 %8350, i8* %BRANCH_TAKEN, align 1
  %8351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8352 = select i1 %8349, i64 %8342, i64 %8344
  store i64 %8352, i64* %8351, align 8
  store %struct.Memory* %loadMem_4013b9, %struct.Memory** %MEMORY
  %loadBr_4013b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4013b9 = icmp eq i8 %loadBr_4013b9, 1
  br i1 %cmpBr_4013b9, label %block_.L_4013fc, label %block_4013bf

block_4013bf:                                     ; preds = %block_.L_4013ad
  %loadMem_4013bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8354 = getelementptr inbounds %struct.GPR, %struct.GPR* %8353, i32 0, i32 33
  %8355 = getelementptr inbounds %struct.Reg, %struct.Reg* %8354, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %8355 to i64*
  %8356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8357 = getelementptr inbounds %struct.GPR, %struct.GPR* %8356, i32 0, i32 11
  %8358 = getelementptr inbounds %struct.Reg, %struct.Reg* %8357, i32 0, i32 0
  %RDI.i191 = bitcast %union.anon* %8358 to i64*
  %8359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8360 = getelementptr inbounds %struct.GPR, %struct.GPR* %8359, i32 0, i32 15
  %8361 = getelementptr inbounds %struct.Reg, %struct.Reg* %8360, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %8361 to i64*
  %8362 = load i64, i64* %RBP.i192
  %8363 = sub i64 %8362, 88
  %8364 = load i64, i64* %PC.i190
  %8365 = add i64 %8364, 4
  store i64 %8365, i64* %PC.i190
  %8366 = inttoptr i64 %8363 to i64*
  %8367 = load i64, i64* %8366
  store i64 %8367, i64* %RDI.i191, align 8
  store %struct.Memory* %loadMem_4013bf, %struct.Memory** %MEMORY
  %loadMem_4013c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8369 = getelementptr inbounds %struct.GPR, %struct.GPR* %8368, i32 0, i32 33
  %8370 = getelementptr inbounds %struct.Reg, %struct.Reg* %8369, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %8370 to i64*
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8372 = getelementptr inbounds %struct.GPR, %struct.GPR* %8371, i32 0, i32 9
  %8373 = getelementptr inbounds %struct.Reg, %struct.Reg* %8372, i32 0, i32 0
  %RSI.i189 = bitcast %union.anon* %8373 to i64*
  %8374 = load i64, i64* %PC.i188
  %8375 = add i64 %8374, 8
  store i64 %8375, i64* %PC.i188
  %8376 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8377 = sext i32 %8376 to i64
  store i64 %8377, i64* %RSI.i189, align 8
  store %struct.Memory* %loadMem_4013c3, %struct.Memory** %MEMORY
  %loadMem_4013cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8379 = getelementptr inbounds %struct.GPR, %struct.GPR* %8378, i32 0, i32 33
  %8380 = getelementptr inbounds %struct.Reg, %struct.Reg* %8379, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %8380 to i64*
  %8381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8382 = getelementptr inbounds %struct.GPR, %struct.GPR* %8381, i32 0, i32 7
  %8383 = getelementptr inbounds %struct.Reg, %struct.Reg* %8382, i32 0, i32 0
  %RDX.i187 = bitcast %union.anon* %8383 to i64*
  %8384 = load i64, i64* %PC.i186
  %8385 = add i64 %8384, 8
  store i64 %8385, i64* %PC.i186
  %8386 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %8387 = sext i32 %8386 to i64
  store i64 %8387, i64* %RDX.i187, align 8
  store %struct.Memory* %loadMem_4013cb, %struct.Memory** %MEMORY
  %loadMem_4013d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8389 = getelementptr inbounds %struct.GPR, %struct.GPR* %8388, i32 0, i32 33
  %8390 = getelementptr inbounds %struct.Reg, %struct.Reg* %8389, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %8390 to i64*
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8392 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8391, i64 0, i64 0
  %YMM0.i185 = bitcast %union.VectorReg* %8392 to %"class.std::bitset"*
  %8393 = bitcast %"class.std::bitset"* %YMM0.i185 to i8*
  %8394 = load i64, i64* %PC.i184
  %8395 = add i64 %8394, 9
  store i64 %8395, i64* %PC.i184
  %8396 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %8397 = bitcast i8* %8393 to double*
  store double %8396, double* %8397, align 1
  %8398 = getelementptr inbounds i8, i8* %8393, i64 8
  %8399 = bitcast i8* %8398 to double*
  store double 0.000000e+00, double* %8399, align 1
  store %struct.Memory* %loadMem_4013d3, %struct.Memory** %MEMORY
  %loadMem_4013dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8401 = getelementptr inbounds %struct.GPR, %struct.GPR* %8400, i32 0, i32 33
  %8402 = getelementptr inbounds %struct.Reg, %struct.Reg* %8401, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %8402 to i64*
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8404 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8403, i64 0, i64 1
  %YMM1.i183 = bitcast %union.VectorReg* %8404 to %"class.std::bitset"*
  %8405 = bitcast %"class.std::bitset"* %YMM1.i183 to i8*
  %8406 = load i64, i64* %PC.i182
  %8407 = add i64 %8406, 9
  store i64 %8407, i64* %PC.i182
  %8408 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %8409 = bitcast i8* %8405 to double*
  store double %8408, double* %8409, align 1
  %8410 = getelementptr inbounds i8, i8* %8405, i64 8
  %8411 = bitcast i8* %8410 to double*
  store double 0.000000e+00, double* %8411, align 1
  store %struct.Memory* %loadMem_4013dc, %struct.Memory** %MEMORY
  %loadMem_4013e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8413 = getelementptr inbounds %struct.GPR, %struct.GPR* %8412, i32 0, i32 33
  %8414 = getelementptr inbounds %struct.Reg, %struct.Reg* %8413, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %8414 to i64*
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8416 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8415, i64 0, i64 2
  %YMM2.i181 = bitcast %union.VectorReg* %8416 to %"class.std::bitset"*
  %8417 = bitcast %"class.std::bitset"* %YMM2.i181 to i8*
  %8418 = load i64, i64* %PC.i180
  %8419 = add i64 %8418, 9
  store i64 %8419, i64* %PC.i180
  %8420 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %8421 = bitcast i8* %8417 to double*
  store double %8420, double* %8421, align 1
  %8422 = getelementptr inbounds i8, i8* %8417, i64 8
  %8423 = bitcast i8* %8422 to double*
  store double 0.000000e+00, double* %8423, align 1
  store %struct.Memory* %loadMem_4013e5, %struct.Memory** %MEMORY
  %loadMem_4013ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %8424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8425 = getelementptr inbounds %struct.GPR, %struct.GPR* %8424, i32 0, i32 33
  %8426 = getelementptr inbounds %struct.Reg, %struct.Reg* %8425, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %8426 to i64*
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8428 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8427, i64 0, i64 3
  %YMM3.i179 = bitcast %union.VectorReg* %8428 to %"class.std::bitset"*
  %8429 = bitcast %"class.std::bitset"* %YMM3.i179 to i8*
  %8430 = load i64, i64* %PC.i178
  %8431 = add i64 %8430, 9
  store i64 %8431, i64* %PC.i178
  %8432 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %8433 = bitcast i8* %8429 to double*
  store double %8432, double* %8433, align 1
  %8434 = getelementptr inbounds i8, i8* %8429, i64 8
  %8435 = bitcast i8* %8434 to double*
  store double 0.000000e+00, double* %8435, align 1
  store %struct.Memory* %loadMem_4013ee, %struct.Memory** %MEMORY
  %loadMem1_4013f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8437 = getelementptr inbounds %struct.GPR, %struct.GPR* %8436, i32 0, i32 33
  %8438 = getelementptr inbounds %struct.Reg, %struct.Reg* %8437, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %8438 to i64*
  %8439 = load i64, i64* %PC.i177
  %8440 = add i64 %8439, 505
  %8441 = load i64, i64* %PC.i177
  %8442 = add i64 %8441, 5
  %8443 = load i64, i64* %PC.i177
  %8444 = add i64 %8443, 5
  store i64 %8444, i64* %PC.i177
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8446 = load i64, i64* %8445, align 8
  %8447 = add i64 %8446, -8
  %8448 = inttoptr i64 %8447 to i64*
  store i64 %8442, i64* %8448
  store i64 %8447, i64* %8445, align 8
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8440, i64* %8449, align 8
  store %struct.Memory* %loadMem1_4013f7, %struct.Memory** %MEMORY
  %loadMem2_4013f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4013f7 = load i64, i64* %3
  %call2_4013f7 = call %struct.Memory* @sub_4015f0.POUT(%struct.State* %0, i64 %loadPC_4013f7, %struct.Memory* %loadMem2_4013f7)
  store %struct.Memory* %call2_4013f7, %struct.Memory** %MEMORY
  br label %block_.L_4013fc

block_.L_4013fc:                                  ; preds = %block_4013bf, %block_.L_4013ad
  %loadMem_4013fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8451 = getelementptr inbounds %struct.GPR, %struct.GPR* %8450, i32 0, i32 33
  %8452 = getelementptr inbounds %struct.Reg, %struct.Reg* %8451, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %8452 to i64*
  %8453 = load i64, i64* %PC.i176
  %8454 = add i64 %8453, 11
  store i64 %8454, i64* %PC.i176
  store i32 2, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_4013fc, %struct.Memory** %MEMORY
  %loadMem_401407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8456 = getelementptr inbounds %struct.GPR, %struct.GPR* %8455, i32 0, i32 33
  %8457 = getelementptr inbounds %struct.Reg, %struct.Reg* %8456, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %8457 to i64*
  %8458 = load i64, i64* %PC.i175
  %8459 = add i64 %8458, 11
  store i64 %8459, i64* %PC.i175
  store i32 3, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_401407, %struct.Memory** %MEMORY
  %loadMem_401412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8461 = getelementptr inbounds %struct.GPR, %struct.GPR* %8460, i32 0, i32 33
  %8462 = getelementptr inbounds %struct.Reg, %struct.Reg* %8461, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %8462 to i64*
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8464 = getelementptr inbounds %struct.GPR, %struct.GPR* %8463, i32 0, i32 15
  %8465 = getelementptr inbounds %struct.Reg, %struct.Reg* %8464, i32 0, i32 0
  %RBP.i174 = bitcast %union.anon* %8465 to i64*
  %8466 = load i64, i64* %RBP.i174
  %8467 = sub i64 %8466, 24
  %8468 = load i64, i64* %PC.i173
  %8469 = add i64 %8468, 8
  store i64 %8469, i64* %PC.i173
  %8470 = inttoptr i64 %8467 to i64*
  store i64 1, i64* %8470
  store %struct.Memory* %loadMem_401412, %struct.Memory** %MEMORY
  br label %block_.L_40141a

block_.L_40141a:                                  ; preds = %block_401428, %block_.L_4013fc
  %loadMem_40141a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8472 = getelementptr inbounds %struct.GPR, %struct.GPR* %8471, i32 0, i32 33
  %8473 = getelementptr inbounds %struct.Reg, %struct.Reg* %8472, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %8473 to i64*
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8475 = getelementptr inbounds %struct.GPR, %struct.GPR* %8474, i32 0, i32 1
  %8476 = getelementptr inbounds %struct.Reg, %struct.Reg* %8475, i32 0, i32 0
  %RAX.i171 = bitcast %union.anon* %8476 to i64*
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8478 = getelementptr inbounds %struct.GPR, %struct.GPR* %8477, i32 0, i32 15
  %8479 = getelementptr inbounds %struct.Reg, %struct.Reg* %8478, i32 0, i32 0
  %RBP.i172 = bitcast %union.anon* %8479 to i64*
  %8480 = load i64, i64* %RBP.i172
  %8481 = sub i64 %8480, 24
  %8482 = load i64, i64* %PC.i170
  %8483 = add i64 %8482, 4
  store i64 %8483, i64* %PC.i170
  %8484 = inttoptr i64 %8481 to i64*
  %8485 = load i64, i64* %8484
  store i64 %8485, i64* %RAX.i171, align 8
  store %struct.Memory* %loadMem_40141a, %struct.Memory** %MEMORY
  %loadMem_40141e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8487 = getelementptr inbounds %struct.GPR, %struct.GPR* %8486, i32 0, i32 33
  %8488 = getelementptr inbounds %struct.Reg, %struct.Reg* %8487, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %8488 to i64*
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8490 = getelementptr inbounds %struct.GPR, %struct.GPR* %8489, i32 0, i32 1
  %8491 = getelementptr inbounds %struct.Reg, %struct.Reg* %8490, i32 0, i32 0
  %RAX.i168 = bitcast %union.anon* %8491 to i64*
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8493 = getelementptr inbounds %struct.GPR, %struct.GPR* %8492, i32 0, i32 15
  %8494 = getelementptr inbounds %struct.Reg, %struct.Reg* %8493, i32 0, i32 0
  %RBP.i169 = bitcast %union.anon* %8494 to i64*
  %8495 = load i64, i64* %RAX.i168
  %8496 = load i64, i64* %RBP.i169
  %8497 = sub i64 %8496, 96
  %8498 = load i64, i64* %PC.i167
  %8499 = add i64 %8498, 4
  store i64 %8499, i64* %PC.i167
  %8500 = inttoptr i64 %8497 to i64*
  %8501 = load i64, i64* %8500
  %8502 = sub i64 %8495, %8501
  %8503 = icmp ugt i64 %8501, %8495
  %8504 = zext i1 %8503 to i8
  %8505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8504, i8* %8505, align 1
  %8506 = trunc i64 %8502 to i32
  %8507 = and i32 %8506, 255
  %8508 = call i32 @llvm.ctpop.i32(i32 %8507)
  %8509 = trunc i32 %8508 to i8
  %8510 = and i8 %8509, 1
  %8511 = xor i8 %8510, 1
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8511, i8* %8512, align 1
  %8513 = xor i64 %8501, %8495
  %8514 = xor i64 %8513, %8502
  %8515 = lshr i64 %8514, 4
  %8516 = trunc i64 %8515 to i8
  %8517 = and i8 %8516, 1
  %8518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8517, i8* %8518, align 1
  %8519 = icmp eq i64 %8502, 0
  %8520 = zext i1 %8519 to i8
  %8521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8520, i8* %8521, align 1
  %8522 = lshr i64 %8502, 63
  %8523 = trunc i64 %8522 to i8
  %8524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8523, i8* %8524, align 1
  %8525 = lshr i64 %8495, 63
  %8526 = lshr i64 %8501, 63
  %8527 = xor i64 %8526, %8525
  %8528 = xor i64 %8522, %8525
  %8529 = add i64 %8528, %8527
  %8530 = icmp eq i64 %8529, 2
  %8531 = zext i1 %8530 to i8
  %8532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8531, i8* %8532, align 1
  store %struct.Memory* %loadMem_40141e, %struct.Memory** %MEMORY
  %loadMem_401422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8534 = getelementptr inbounds %struct.GPR, %struct.GPR* %8533, i32 0, i32 33
  %8535 = getelementptr inbounds %struct.Reg, %struct.Reg* %8534, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %8535 to i64*
  %8536 = load i64, i64* %PC.i166
  %8537 = add i64 %8536, 114
  %8538 = load i64, i64* %PC.i166
  %8539 = add i64 %8538, 6
  %8540 = load i64, i64* %PC.i166
  %8541 = add i64 %8540, 6
  store i64 %8541, i64* %PC.i166
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8543 = load i8, i8* %8542, align 1
  %8544 = icmp eq i8 %8543, 0
  %8545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8546 = load i8, i8* %8545, align 1
  %8547 = icmp ne i8 %8546, 0
  %8548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8549 = load i8, i8* %8548, align 1
  %8550 = icmp ne i8 %8549, 0
  %8551 = xor i1 %8547, %8550
  %8552 = xor i1 %8551, true
  %8553 = and i1 %8544, %8552
  %8554 = zext i1 %8553 to i8
  store i8 %8554, i8* %BRANCH_TAKEN, align 1
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8556 = select i1 %8553, i64 %8537, i64 %8539
  store i64 %8556, i64* %8555, align 8
  store %struct.Memory* %loadMem_401422, %struct.Memory** %MEMORY
  %loadBr_401422 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401422 = icmp eq i8 %loadBr_401422, 1
  br i1 %cmpBr_401422, label %block_.L_401494, label %block_401428

block_401428:                                     ; preds = %block_.L_40141a
  %loadMem_401428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8558 = getelementptr inbounds %struct.GPR, %struct.GPR* %8557, i32 0, i32 33
  %8559 = getelementptr inbounds %struct.Reg, %struct.Reg* %8558, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %8559 to i64*
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8561 = getelementptr inbounds %struct.GPR, %struct.GPR* %8560, i32 0, i32 1
  %8562 = getelementptr inbounds %struct.Reg, %struct.Reg* %8561, i32 0, i32 0
  %RAX.i165 = bitcast %union.anon* %8562 to i64*
  %8563 = load i64, i64* %PC.i164
  %8564 = add i64 %8563, 7
  store i64 %8564, i64* %PC.i164
  %8565 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8566 = zext i32 %8565 to i64
  store i64 %8566, i64* %RAX.i165, align 8
  store %struct.Memory* %loadMem_401428, %struct.Memory** %MEMORY
  %loadMem_40142f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8568 = getelementptr inbounds %struct.GPR, %struct.GPR* %8567, i32 0, i32 33
  %8569 = getelementptr inbounds %struct.Reg, %struct.Reg* %8568, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %8569 to i64*
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8571 = getelementptr inbounds %struct.GPR, %struct.GPR* %8570, i32 0, i32 1
  %8572 = getelementptr inbounds %struct.Reg, %struct.Reg* %8571, i32 0, i32 0
  %RAX.i163 = bitcast %union.anon* %8572 to i64*
  %8573 = load i64, i64* %RAX.i163
  %8574 = load i64, i64* %PC.i162
  %8575 = add i64 %8574, 7
  store i64 %8575, i64* %PC.i162
  %8576 = trunc i64 %8573 to i32
  %8577 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %8578 = add i32 %8577, %8576
  %8579 = zext i32 %8578 to i64
  store i64 %8579, i64* %RAX.i163, align 8
  %8580 = icmp ult i32 %8578, %8576
  %8581 = icmp ult i32 %8578, %8577
  %8582 = or i1 %8580, %8581
  %8583 = zext i1 %8582 to i8
  %8584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8583, i8* %8584, align 1
  %8585 = and i32 %8578, 255
  %8586 = call i32 @llvm.ctpop.i32(i32 %8585)
  %8587 = trunc i32 %8586 to i8
  %8588 = and i8 %8587, 1
  %8589 = xor i8 %8588, 1
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8589, i8* %8590, align 1
  %8591 = xor i32 %8577, %8576
  %8592 = xor i32 %8591, %8578
  %8593 = lshr i32 %8592, 4
  %8594 = trunc i32 %8593 to i8
  %8595 = and i8 %8594, 1
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8595, i8* %8596, align 1
  %8597 = icmp eq i32 %8578, 0
  %8598 = zext i1 %8597 to i8
  %8599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8598, i8* %8599, align 1
  %8600 = lshr i32 %8578, 31
  %8601 = trunc i32 %8600 to i8
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8601, i8* %8602, align 1
  %8603 = lshr i32 %8576, 31
  %8604 = lshr i32 %8577, 31
  %8605 = xor i32 %8600, %8603
  %8606 = xor i32 %8600, %8604
  %8607 = add i32 %8605, %8606
  %8608 = icmp eq i32 %8607, 2
  %8609 = zext i1 %8608 to i8
  %8610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8609, i8* %8610, align 1
  store %struct.Memory* %loadMem_40142f, %struct.Memory** %MEMORY
  %loadMem_401436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8612 = getelementptr inbounds %struct.GPR, %struct.GPR* %8611, i32 0, i32 33
  %8613 = getelementptr inbounds %struct.Reg, %struct.Reg* %8612, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %8613 to i64*
  %8614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8615 = getelementptr inbounds %struct.GPR, %struct.GPR* %8614, i32 0, i32 1
  %8616 = getelementptr inbounds %struct.Reg, %struct.Reg* %8615, i32 0, i32 0
  %EAX.i161 = bitcast %union.anon* %8616 to i32*
  %8617 = load i32, i32* %EAX.i161
  %8618 = zext i32 %8617 to i64
  %8619 = load i64, i64* %PC.i160
  %8620 = add i64 %8619, 7
  store i64 %8620, i64* %PC.i160
  store i32 %8617, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_401436, %struct.Memory** %MEMORY
  %loadMem_40143d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8622 = getelementptr inbounds %struct.GPR, %struct.GPR* %8621, i32 0, i32 33
  %8623 = getelementptr inbounds %struct.Reg, %struct.Reg* %8622, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %8623 to i64*
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8625 = getelementptr inbounds %struct.GPR, %struct.GPR* %8624, i32 0, i32 1
  %8626 = getelementptr inbounds %struct.Reg, %struct.Reg* %8625, i32 0, i32 0
  %RAX.i159 = bitcast %union.anon* %8626 to i64*
  %8627 = load i64, i64* %PC.i158
  %8628 = add i64 %8627, 7
  store i64 %8628, i64* %PC.i158
  %8629 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8630 = zext i32 %8629 to i64
  store i64 %8630, i64* %RAX.i159, align 8
  store %struct.Memory* %loadMem_40143d, %struct.Memory** %MEMORY
  %loadMem_401444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8632 = getelementptr inbounds %struct.GPR, %struct.GPR* %8631, i32 0, i32 33
  %8633 = getelementptr inbounds %struct.Reg, %struct.Reg* %8632, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %8633 to i64*
  %8634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8635 = getelementptr inbounds %struct.GPR, %struct.GPR* %8634, i32 0, i32 1
  %8636 = getelementptr inbounds %struct.Reg, %struct.Reg* %8635, i32 0, i32 0
  %RAX.i157 = bitcast %union.anon* %8636 to i64*
  %8637 = load i64, i64* %RAX.i157
  %8638 = load i64, i64* %PC.i156
  %8639 = add i64 %8638, 7
  store i64 %8639, i64* %PC.i156
  %8640 = trunc i64 %8637 to i32
  %8641 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %8642 = add i32 %8641, %8640
  %8643 = zext i32 %8642 to i64
  store i64 %8643, i64* %RAX.i157, align 8
  %8644 = icmp ult i32 %8642, %8640
  %8645 = icmp ult i32 %8642, %8641
  %8646 = or i1 %8644, %8645
  %8647 = zext i1 %8646 to i8
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8647, i8* %8648, align 1
  %8649 = and i32 %8642, 255
  %8650 = call i32 @llvm.ctpop.i32(i32 %8649)
  %8651 = trunc i32 %8650 to i8
  %8652 = and i8 %8651, 1
  %8653 = xor i8 %8652, 1
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8653, i8* %8654, align 1
  %8655 = xor i32 %8641, %8640
  %8656 = xor i32 %8655, %8642
  %8657 = lshr i32 %8656, 4
  %8658 = trunc i32 %8657 to i8
  %8659 = and i8 %8658, 1
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8659, i8* %8660, align 1
  %8661 = icmp eq i32 %8642, 0
  %8662 = zext i1 %8661 to i8
  %8663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8662, i8* %8663, align 1
  %8664 = lshr i32 %8642, 31
  %8665 = trunc i32 %8664 to i8
  %8666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8665, i8* %8666, align 1
  %8667 = lshr i32 %8640, 31
  %8668 = lshr i32 %8641, 31
  %8669 = xor i32 %8664, %8667
  %8670 = xor i32 %8664, %8668
  %8671 = add i32 %8669, %8670
  %8672 = icmp eq i32 %8671, 2
  %8673 = zext i1 %8672 to i8
  %8674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8673, i8* %8674, align 1
  store %struct.Memory* %loadMem_401444, %struct.Memory** %MEMORY
  %loadMem_40144b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8676 = getelementptr inbounds %struct.GPR, %struct.GPR* %8675, i32 0, i32 33
  %8677 = getelementptr inbounds %struct.Reg, %struct.Reg* %8676, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %8677 to i64*
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8679 = getelementptr inbounds %struct.GPR, %struct.GPR* %8678, i32 0, i32 1
  %8680 = getelementptr inbounds %struct.Reg, %struct.Reg* %8679, i32 0, i32 0
  %EAX.i155 = bitcast %union.anon* %8680 to i32*
  %8681 = load i32, i32* %EAX.i155
  %8682 = zext i32 %8681 to i64
  %8683 = load i64, i64* %PC.i154
  %8684 = add i64 %8683, 7
  store i64 %8684, i64* %PC.i154
  store i32 %8681, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_40144b, %struct.Memory** %MEMORY
  %loadMem_401452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8686 = getelementptr inbounds %struct.GPR, %struct.GPR* %8685, i32 0, i32 33
  %8687 = getelementptr inbounds %struct.Reg, %struct.Reg* %8686, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %8687 to i64*
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8689 = getelementptr inbounds %struct.GPR, %struct.GPR* %8688, i32 0, i32 1
  %8690 = getelementptr inbounds %struct.Reg, %struct.Reg* %8689, i32 0, i32 0
  %RAX.i153 = bitcast %union.anon* %8690 to i64*
  %8691 = load i64, i64* %PC.i152
  %8692 = add i64 %8691, 7
  store i64 %8692, i64* %PC.i152
  %8693 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %8694 = zext i32 %8693 to i64
  store i64 %8694, i64* %RAX.i153, align 8
  store %struct.Memory* %loadMem_401452, %struct.Memory** %MEMORY
  %loadMem_401459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8696 = getelementptr inbounds %struct.GPR, %struct.GPR* %8695, i32 0, i32 33
  %8697 = getelementptr inbounds %struct.Reg, %struct.Reg* %8696, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %8697 to i64*
  %8698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8699 = getelementptr inbounds %struct.GPR, %struct.GPR* %8698, i32 0, i32 1
  %8700 = getelementptr inbounds %struct.Reg, %struct.Reg* %8699, i32 0, i32 0
  %RAX.i151 = bitcast %union.anon* %8700 to i64*
  %8701 = load i64, i64* %RAX.i151
  %8702 = load i64, i64* %PC.i150
  %8703 = add i64 %8702, 7
  store i64 %8703, i64* %PC.i150
  %8704 = trunc i64 %8701 to i32
  %8705 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8706 = sub i32 %8704, %8705
  %8707 = zext i32 %8706 to i64
  store i64 %8707, i64* %RAX.i151, align 8
  %8708 = icmp ult i32 %8704, %8705
  %8709 = zext i1 %8708 to i8
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8709, i8* %8710, align 1
  %8711 = and i32 %8706, 255
  %8712 = call i32 @llvm.ctpop.i32(i32 %8711)
  %8713 = trunc i32 %8712 to i8
  %8714 = and i8 %8713, 1
  %8715 = xor i8 %8714, 1
  %8716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8715, i8* %8716, align 1
  %8717 = xor i32 %8705, %8704
  %8718 = xor i32 %8717, %8706
  %8719 = lshr i32 %8718, 4
  %8720 = trunc i32 %8719 to i8
  %8721 = and i8 %8720, 1
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8721, i8* %8722, align 1
  %8723 = icmp eq i32 %8706, 0
  %8724 = zext i1 %8723 to i8
  %8725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8724, i8* %8725, align 1
  %8726 = lshr i32 %8706, 31
  %8727 = trunc i32 %8726 to i8
  %8728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8727, i8* %8728, align 1
  %8729 = lshr i32 %8704, 31
  %8730 = lshr i32 %8705, 31
  %8731 = xor i32 %8730, %8729
  %8732 = xor i32 %8726, %8729
  %8733 = add i32 %8732, %8731
  %8734 = icmp eq i32 %8733, 2
  %8735 = zext i1 %8734 to i8
  %8736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8735, i8* %8736, align 1
  store %struct.Memory* %loadMem_401459, %struct.Memory** %MEMORY
  %loadMem_401460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8738 = getelementptr inbounds %struct.GPR, %struct.GPR* %8737, i32 0, i32 33
  %8739 = getelementptr inbounds %struct.Reg, %struct.Reg* %8738, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %8739 to i64*
  %8740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8741 = getelementptr inbounds %struct.GPR, %struct.GPR* %8740, i32 0, i32 1
  %8742 = getelementptr inbounds %struct.Reg, %struct.Reg* %8741, i32 0, i32 0
  %EAX.i149 = bitcast %union.anon* %8742 to i32*
  %8743 = load i32, i32* %EAX.i149
  %8744 = zext i32 %8743 to i64
  %8745 = load i64, i64* %PC.i148
  %8746 = add i64 %8745, 7
  store i64 %8746, i64* %PC.i148
  store i32 %8743, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_401460, %struct.Memory** %MEMORY
  %loadMem_401467 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8748 = getelementptr inbounds %struct.GPR, %struct.GPR* %8747, i32 0, i32 33
  %8749 = getelementptr inbounds %struct.Reg, %struct.Reg* %8748, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %8749 to i64*
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8751 = getelementptr inbounds %struct.GPR, %struct.GPR* %8750, i32 0, i32 1
  %8752 = getelementptr inbounds %struct.Reg, %struct.Reg* %8751, i32 0, i32 0
  %RAX.i147 = bitcast %union.anon* %8752 to i64*
  %8753 = load i64, i64* %PC.i146
  %8754 = add i64 %8753, 7
  store i64 %8754, i64* %PC.i146
  %8755 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %8756 = zext i32 %8755 to i64
  store i64 %8756, i64* %RAX.i147, align 8
  store %struct.Memory* %loadMem_401467, %struct.Memory** %MEMORY
  %loadMem_40146e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8758 = getelementptr inbounds %struct.GPR, %struct.GPR* %8757, i32 0, i32 33
  %8759 = getelementptr inbounds %struct.Reg, %struct.Reg* %8758, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %8759 to i64*
  %8760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8761 = getelementptr inbounds %struct.GPR, %struct.GPR* %8760, i32 0, i32 1
  %8762 = getelementptr inbounds %struct.Reg, %struct.Reg* %8761, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %8762 to i64*
  %8763 = load i64, i64* %RAX.i145
  %8764 = load i64, i64* %PC.i144
  %8765 = add i64 %8764, 7
  store i64 %8765, i64* %PC.i144
  %8766 = trunc i64 %8763 to i32
  %8767 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8768 = sub i32 %8766, %8767
  %8769 = zext i32 %8768 to i64
  store i64 %8769, i64* %RAX.i145, align 8
  %8770 = icmp ult i32 %8766, %8767
  %8771 = zext i1 %8770 to i8
  %8772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8771, i8* %8772, align 1
  %8773 = and i32 %8768, 255
  %8774 = call i32 @llvm.ctpop.i32(i32 %8773)
  %8775 = trunc i32 %8774 to i8
  %8776 = and i8 %8775, 1
  %8777 = xor i8 %8776, 1
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8777, i8* %8778, align 1
  %8779 = xor i32 %8767, %8766
  %8780 = xor i32 %8779, %8768
  %8781 = lshr i32 %8780, 4
  %8782 = trunc i32 %8781 to i8
  %8783 = and i8 %8782, 1
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8783, i8* %8784, align 1
  %8785 = icmp eq i32 %8768, 0
  %8786 = zext i1 %8785 to i8
  %8787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8786, i8* %8787, align 1
  %8788 = lshr i32 %8768, 31
  %8789 = trunc i32 %8788 to i8
  %8790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8789, i8* %8790, align 1
  %8791 = lshr i32 %8766, 31
  %8792 = lshr i32 %8767, 31
  %8793 = xor i32 %8792, %8791
  %8794 = xor i32 %8788, %8791
  %8795 = add i32 %8794, %8793
  %8796 = icmp eq i32 %8795, 2
  %8797 = zext i1 %8796 to i8
  %8798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8797, i8* %8798, align 1
  store %struct.Memory* %loadMem_40146e, %struct.Memory** %MEMORY
  %loadMem_401475 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8800 = getelementptr inbounds %struct.GPR, %struct.GPR* %8799, i32 0, i32 33
  %8801 = getelementptr inbounds %struct.Reg, %struct.Reg* %8800, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %8801 to i64*
  %8802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8803 = getelementptr inbounds %struct.GPR, %struct.GPR* %8802, i32 0, i32 1
  %8804 = getelementptr inbounds %struct.Reg, %struct.Reg* %8803, i32 0, i32 0
  %RAX.i143 = bitcast %union.anon* %8804 to i64*
  %8805 = load i64, i64* %RAX.i143
  %8806 = load i64, i64* %PC.i142
  %8807 = add i64 %8806, 7
  store i64 %8807, i64* %PC.i142
  %8808 = trunc i64 %8805 to i32
  %8809 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8810 = sub i32 %8808, %8809
  %8811 = zext i32 %8810 to i64
  store i64 %8811, i64* %RAX.i143, align 8
  %8812 = icmp ult i32 %8808, %8809
  %8813 = zext i1 %8812 to i8
  %8814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8813, i8* %8814, align 1
  %8815 = and i32 %8810, 255
  %8816 = call i32 @llvm.ctpop.i32(i32 %8815)
  %8817 = trunc i32 %8816 to i8
  %8818 = and i8 %8817, 1
  %8819 = xor i8 %8818, 1
  %8820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8819, i8* %8820, align 1
  %8821 = xor i32 %8809, %8808
  %8822 = xor i32 %8821, %8810
  %8823 = lshr i32 %8822, 4
  %8824 = trunc i32 %8823 to i8
  %8825 = and i8 %8824, 1
  %8826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8825, i8* %8826, align 1
  %8827 = icmp eq i32 %8810, 0
  %8828 = zext i1 %8827 to i8
  %8829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8828, i8* %8829, align 1
  %8830 = lshr i32 %8810, 31
  %8831 = trunc i32 %8830 to i8
  %8832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8831, i8* %8832, align 1
  %8833 = lshr i32 %8808, 31
  %8834 = lshr i32 %8809, 31
  %8835 = xor i32 %8834, %8833
  %8836 = xor i32 %8830, %8833
  %8837 = add i32 %8836, %8835
  %8838 = icmp eq i32 %8837, 2
  %8839 = zext i1 %8838 to i8
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8839, i8* %8840, align 1
  store %struct.Memory* %loadMem_401475, %struct.Memory** %MEMORY
  %loadMem_40147c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8842 = getelementptr inbounds %struct.GPR, %struct.GPR* %8841, i32 0, i32 33
  %8843 = getelementptr inbounds %struct.Reg, %struct.Reg* %8842, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %8843 to i64*
  %8844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8845 = getelementptr inbounds %struct.GPR, %struct.GPR* %8844, i32 0, i32 1
  %8846 = getelementptr inbounds %struct.Reg, %struct.Reg* %8845, i32 0, i32 0
  %EAX.i141 = bitcast %union.anon* %8846 to i32*
  %8847 = load i32, i32* %EAX.i141
  %8848 = zext i32 %8847 to i64
  %8849 = load i64, i64* %PC.i140
  %8850 = add i64 %8849, 7
  store i64 %8850, i64* %PC.i140
  store i32 %8847, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_40147c, %struct.Memory** %MEMORY
  %loadMem_401483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8852 = getelementptr inbounds %struct.GPR, %struct.GPR* %8851, i32 0, i32 33
  %8853 = getelementptr inbounds %struct.Reg, %struct.Reg* %8852, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %8853 to i64*
  %8854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8855 = getelementptr inbounds %struct.GPR, %struct.GPR* %8854, i32 0, i32 1
  %8856 = getelementptr inbounds %struct.Reg, %struct.Reg* %8855, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %8856 to i64*
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8858 = getelementptr inbounds %struct.GPR, %struct.GPR* %8857, i32 0, i32 15
  %8859 = getelementptr inbounds %struct.Reg, %struct.Reg* %8858, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %8859 to i64*
  %8860 = load i64, i64* %RBP.i139
  %8861 = sub i64 %8860, 24
  %8862 = load i64, i64* %PC.i137
  %8863 = add i64 %8862, 4
  store i64 %8863, i64* %PC.i137
  %8864 = inttoptr i64 %8861 to i64*
  %8865 = load i64, i64* %8864
  store i64 %8865, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_401483, %struct.Memory** %MEMORY
  %loadMem_401487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8867 = getelementptr inbounds %struct.GPR, %struct.GPR* %8866, i32 0, i32 33
  %8868 = getelementptr inbounds %struct.Reg, %struct.Reg* %8867, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %8868 to i64*
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8870 = getelementptr inbounds %struct.GPR, %struct.GPR* %8869, i32 0, i32 1
  %8871 = getelementptr inbounds %struct.Reg, %struct.Reg* %8870, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %8871 to i64*
  %8872 = load i64, i64* %RAX.i136
  %8873 = load i64, i64* %PC.i135
  %8874 = add i64 %8873, 4
  store i64 %8874, i64* %PC.i135
  %8875 = add i64 1, %8872
  store i64 %8875, i64* %RAX.i136, align 8
  %8876 = icmp ult i64 %8875, %8872
  %8877 = icmp ult i64 %8875, 1
  %8878 = or i1 %8876, %8877
  %8879 = zext i1 %8878 to i8
  %8880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8879, i8* %8880, align 1
  %8881 = trunc i64 %8875 to i32
  %8882 = and i32 %8881, 255
  %8883 = call i32 @llvm.ctpop.i32(i32 %8882)
  %8884 = trunc i32 %8883 to i8
  %8885 = and i8 %8884, 1
  %8886 = xor i8 %8885, 1
  %8887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8886, i8* %8887, align 1
  %8888 = xor i64 1, %8872
  %8889 = xor i64 %8888, %8875
  %8890 = lshr i64 %8889, 4
  %8891 = trunc i64 %8890 to i8
  %8892 = and i8 %8891, 1
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8892, i8* %8893, align 1
  %8894 = icmp eq i64 %8875, 0
  %8895 = zext i1 %8894 to i8
  %8896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8895, i8* %8896, align 1
  %8897 = lshr i64 %8875, 63
  %8898 = trunc i64 %8897 to i8
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8898, i8* %8899, align 1
  %8900 = lshr i64 %8872, 63
  %8901 = xor i64 %8897, %8900
  %8902 = add i64 %8901, %8897
  %8903 = icmp eq i64 %8902, 2
  %8904 = zext i1 %8903 to i8
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8904, i8* %8905, align 1
  store %struct.Memory* %loadMem_401487, %struct.Memory** %MEMORY
  %loadMem_40148b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8907 = getelementptr inbounds %struct.GPR, %struct.GPR* %8906, i32 0, i32 33
  %8908 = getelementptr inbounds %struct.Reg, %struct.Reg* %8907, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %8908 to i64*
  %8909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8910 = getelementptr inbounds %struct.GPR, %struct.GPR* %8909, i32 0, i32 1
  %8911 = getelementptr inbounds %struct.Reg, %struct.Reg* %8910, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %8911 to i64*
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8913 = getelementptr inbounds %struct.GPR, %struct.GPR* %8912, i32 0, i32 15
  %8914 = getelementptr inbounds %struct.Reg, %struct.Reg* %8913, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %8914 to i64*
  %8915 = load i64, i64* %RBP.i134
  %8916 = sub i64 %8915, 24
  %8917 = load i64, i64* %RAX.i133
  %8918 = load i64, i64* %PC.i132
  %8919 = add i64 %8918, 4
  store i64 %8919, i64* %PC.i132
  %8920 = inttoptr i64 %8916 to i64*
  store i64 %8917, i64* %8920
  store %struct.Memory* %loadMem_40148b, %struct.Memory** %MEMORY
  %loadMem_40148f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8922 = getelementptr inbounds %struct.GPR, %struct.GPR* %8921, i32 0, i32 33
  %8923 = getelementptr inbounds %struct.Reg, %struct.Reg* %8922, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %8923 to i64*
  %8924 = load i64, i64* %PC.i131
  %8925 = add i64 %8924, -117
  %8926 = load i64, i64* %PC.i131
  %8927 = add i64 %8926, 5
  store i64 %8927, i64* %PC.i131
  %8928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8925, i64* %8928, align 8
  store %struct.Memory* %loadMem_40148f, %struct.Memory** %MEMORY
  br label %block_.L_40141a

block_.L_401494:                                  ; preds = %block_.L_40141a
  %loadMem_401494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8930 = getelementptr inbounds %struct.GPR, %struct.GPR* %8929, i32 0, i32 33
  %8931 = getelementptr inbounds %struct.Reg, %struct.Reg* %8930, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %8931 to i64*
  %8932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8933 = getelementptr inbounds %struct.GPR, %struct.GPR* %8932, i32 0, i32 1
  %8934 = getelementptr inbounds %struct.Reg, %struct.Reg* %8933, i32 0, i32 0
  %RAX.i129 = bitcast %union.anon* %8934 to i64*
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8936 = getelementptr inbounds %struct.GPR, %struct.GPR* %8935, i32 0, i32 15
  %8937 = getelementptr inbounds %struct.Reg, %struct.Reg* %8936, i32 0, i32 0
  %RBP.i130 = bitcast %union.anon* %8937 to i64*
  %8938 = load i64, i64* %RBP.i130
  %8939 = sub i64 %8938, 176
  %8940 = load i64, i64* %PC.i128
  %8941 = add i64 %8940, 6
  store i64 %8941, i64* %PC.i128
  %8942 = inttoptr i64 %8939 to i32*
  %8943 = load i32, i32* %8942
  %8944 = zext i32 %8943 to i64
  store i64 %8944, i64* %RAX.i129, align 8
  store %struct.Memory* %loadMem_401494, %struct.Memory** %MEMORY
  %loadMem_40149a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8946 = getelementptr inbounds %struct.GPR, %struct.GPR* %8945, i32 0, i32 33
  %8947 = getelementptr inbounds %struct.Reg, %struct.Reg* %8946, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %8947 to i64*
  %8948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8949 = getelementptr inbounds %struct.GPR, %struct.GPR* %8948, i32 0, i32 1
  %8950 = getelementptr inbounds %struct.Reg, %struct.Reg* %8949, i32 0, i32 0
  %EAX.i126 = bitcast %union.anon* %8950 to i32*
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8952 = getelementptr inbounds %struct.GPR, %struct.GPR* %8951, i32 0, i32 15
  %8953 = getelementptr inbounds %struct.Reg, %struct.Reg* %8952, i32 0, i32 0
  %RBP.i127 = bitcast %union.anon* %8953 to i64*
  %8954 = load i32, i32* %EAX.i126
  %8955 = zext i32 %8954 to i64
  %8956 = load i64, i64* %RBP.i127
  %8957 = sub i64 %8956, 172
  %8958 = load i64, i64* %PC.i125
  %8959 = add i64 %8958, 6
  store i64 %8959, i64* %PC.i125
  %8960 = inttoptr i64 %8957 to i32*
  %8961 = load i32, i32* %8960
  %8962 = sub i32 %8954, %8961
  %8963 = icmp ult i32 %8954, %8961
  %8964 = zext i1 %8963 to i8
  %8965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8964, i8* %8965, align 1
  %8966 = and i32 %8962, 255
  %8967 = call i32 @llvm.ctpop.i32(i32 %8966)
  %8968 = trunc i32 %8967 to i8
  %8969 = and i8 %8968, 1
  %8970 = xor i8 %8969, 1
  %8971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8970, i8* %8971, align 1
  %8972 = xor i32 %8961, %8954
  %8973 = xor i32 %8972, %8962
  %8974 = lshr i32 %8973, 4
  %8975 = trunc i32 %8974 to i8
  %8976 = and i8 %8975, 1
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8976, i8* %8977, align 1
  %8978 = icmp eq i32 %8962, 0
  %8979 = zext i1 %8978 to i8
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8979, i8* %8980, align 1
  %8981 = lshr i32 %8962, 31
  %8982 = trunc i32 %8981 to i8
  %8983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8982, i8* %8983, align 1
  %8984 = lshr i32 %8954, 31
  %8985 = lshr i32 %8961, 31
  %8986 = xor i32 %8985, %8984
  %8987 = xor i32 %8981, %8984
  %8988 = add i32 %8987, %8986
  %8989 = icmp eq i32 %8988, 2
  %8990 = zext i1 %8989 to i8
  %8991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8990, i8* %8991, align 1
  store %struct.Memory* %loadMem_40149a, %struct.Memory** %MEMORY
  %loadMem_4014a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8993 = getelementptr inbounds %struct.GPR, %struct.GPR* %8992, i32 0, i32 33
  %8994 = getelementptr inbounds %struct.Reg, %struct.Reg* %8993, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %8994 to i64*
  %8995 = load i64, i64* %PC.i124
  %8996 = add i64 %8995, 54
  %8997 = load i64, i64* %PC.i124
  %8998 = add i64 %8997, 6
  %8999 = load i64, i64* %PC.i124
  %9000 = add i64 %8999, 6
  store i64 %9000, i64* %PC.i124
  %9001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9002 = load i8, i8* %9001, align 1
  %9003 = icmp eq i8 %9002, 0
  %9004 = zext i1 %9003 to i8
  store i8 %9004, i8* %BRANCH_TAKEN, align 1
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9006 = select i1 %9003, i64 %8996, i64 %8998
  store i64 %9006, i64* %9005, align 8
  store %struct.Memory* %loadMem_4014a0, %struct.Memory** %MEMORY
  %loadBr_4014a0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4014a0 = icmp eq i8 %loadBr_4014a0, 1
  br i1 %cmpBr_4014a0, label %block_.L_4014d6, label %block_4014a6

block_4014a6:                                     ; preds = %block_.L_401494
  %loadMem_4014a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9008 = getelementptr inbounds %struct.GPR, %struct.GPR* %9007, i32 0, i32 33
  %9009 = getelementptr inbounds %struct.Reg, %struct.Reg* %9008, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %9009 to i64*
  %9010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9011 = getelementptr inbounds %struct.GPR, %struct.GPR* %9010, i32 0, i32 11
  %9012 = getelementptr inbounds %struct.Reg, %struct.Reg* %9011, i32 0, i32 0
  %RDI.i122 = bitcast %union.anon* %9012 to i64*
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9014 = getelementptr inbounds %struct.GPR, %struct.GPR* %9013, i32 0, i32 15
  %9015 = getelementptr inbounds %struct.Reg, %struct.Reg* %9014, i32 0, i32 0
  %RBP.i123 = bitcast %union.anon* %9015 to i64*
  %9016 = load i64, i64* %RBP.i123
  %9017 = sub i64 %9016, 96
  %9018 = load i64, i64* %PC.i121
  %9019 = add i64 %9018, 4
  store i64 %9019, i64* %PC.i121
  %9020 = inttoptr i64 %9017 to i64*
  %9021 = load i64, i64* %9020
  store i64 %9021, i64* %RDI.i122, align 8
  store %struct.Memory* %loadMem_4014a6, %struct.Memory** %MEMORY
  %loadMem_4014aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9023 = getelementptr inbounds %struct.GPR, %struct.GPR* %9022, i32 0, i32 33
  %9024 = getelementptr inbounds %struct.Reg, %struct.Reg* %9023, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %9024 to i64*
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9026 = getelementptr inbounds %struct.GPR, %struct.GPR* %9025, i32 0, i32 9
  %9027 = getelementptr inbounds %struct.Reg, %struct.Reg* %9026, i32 0, i32 0
  %RSI.i120 = bitcast %union.anon* %9027 to i64*
  %9028 = load i64, i64* %PC.i119
  %9029 = add i64 %9028, 8
  store i64 %9029, i64* %PC.i119
  %9030 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %9031 = sext i32 %9030 to i64
  store i64 %9031, i64* %RSI.i120, align 8
  store %struct.Memory* %loadMem_4014aa, %struct.Memory** %MEMORY
  %loadMem_4014b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 33
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %9034 to i64*
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 7
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %RDX.i118 = bitcast %union.anon* %9037 to i64*
  %9038 = load i64, i64* %PC.i117
  %9039 = add i64 %9038, 8
  store i64 %9039, i64* %PC.i117
  %9040 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %9041 = sext i32 %9040 to i64
  store i64 %9041, i64* %RDX.i118, align 8
  store %struct.Memory* %loadMem_4014b2, %struct.Memory** %MEMORY
  %loadMem_4014ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %9042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9043 = getelementptr inbounds %struct.GPR, %struct.GPR* %9042, i32 0, i32 33
  %9044 = getelementptr inbounds %struct.Reg, %struct.Reg* %9043, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %9044 to i64*
  %9045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9046 = getelementptr inbounds %struct.GPR, %struct.GPR* %9045, i32 0, i32 15
  %9047 = getelementptr inbounds %struct.Reg, %struct.Reg* %9046, i32 0, i32 0
  %RBP.i115 = bitcast %union.anon* %9047 to i64*
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9049 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9048, i64 0, i64 0
  %YMM0.i116 = bitcast %union.VectorReg* %9049 to %"class.std::bitset"*
  %9050 = bitcast %"class.std::bitset"* %YMM0.i116 to i8*
  %9051 = load i64, i64* %RBP.i115
  %9052 = sub i64 %9051, 112
  %9053 = load i64, i64* %PC.i114
  %9054 = add i64 %9053, 5
  store i64 %9054, i64* %PC.i114
  %9055 = inttoptr i64 %9052 to double*
  %9056 = load double, double* %9055
  %9057 = bitcast i8* %9050 to double*
  store double %9056, double* %9057, align 1
  %9058 = getelementptr inbounds i8, i8* %9050, i64 8
  %9059 = bitcast i8* %9058 to double*
  store double 0.000000e+00, double* %9059, align 1
  store %struct.Memory* %loadMem_4014ba, %struct.Memory** %MEMORY
  %loadMem_4014bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9061 = getelementptr inbounds %struct.GPR, %struct.GPR* %9060, i32 0, i32 33
  %9062 = getelementptr inbounds %struct.Reg, %struct.Reg* %9061, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %9062 to i64*
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9064 = getelementptr inbounds %struct.GPR, %struct.GPR* %9063, i32 0, i32 15
  %9065 = getelementptr inbounds %struct.Reg, %struct.Reg* %9064, i32 0, i32 0
  %RBP.i112 = bitcast %union.anon* %9065 to i64*
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9067 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9066, i64 0, i64 1
  %YMM1.i113 = bitcast %union.VectorReg* %9067 to %"class.std::bitset"*
  %9068 = bitcast %"class.std::bitset"* %YMM1.i113 to i8*
  %9069 = load i64, i64* %RBP.i112
  %9070 = sub i64 %9069, 120
  %9071 = load i64, i64* %PC.i111
  %9072 = add i64 %9071, 5
  store i64 %9072, i64* %PC.i111
  %9073 = inttoptr i64 %9070 to double*
  %9074 = load double, double* %9073
  %9075 = bitcast i8* %9068 to double*
  store double %9074, double* %9075, align 1
  %9076 = getelementptr inbounds i8, i8* %9068, i64 8
  %9077 = bitcast i8* %9076 to double*
  store double 0.000000e+00, double* %9077, align 1
  store %struct.Memory* %loadMem_4014bf, %struct.Memory** %MEMORY
  %loadMem_4014c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9079 = getelementptr inbounds %struct.GPR, %struct.GPR* %9078, i32 0, i32 33
  %9080 = getelementptr inbounds %struct.Reg, %struct.Reg* %9079, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %9080 to i64*
  %9081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9082 = getelementptr inbounds %struct.GPR, %struct.GPR* %9081, i32 0, i32 15
  %9083 = getelementptr inbounds %struct.Reg, %struct.Reg* %9082, i32 0, i32 0
  %RBP.i109 = bitcast %union.anon* %9083 to i64*
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9085 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9084, i64 0, i64 2
  %YMM2.i110 = bitcast %union.VectorReg* %9085 to %"class.std::bitset"*
  %9086 = bitcast %"class.std::bitset"* %YMM2.i110 to i8*
  %9087 = load i64, i64* %RBP.i109
  %9088 = sub i64 %9087, 128
  %9089 = load i64, i64* %PC.i108
  %9090 = add i64 %9089, 5
  store i64 %9090, i64* %PC.i108
  %9091 = inttoptr i64 %9088 to double*
  %9092 = load double, double* %9091
  %9093 = bitcast i8* %9086 to double*
  store double %9092, double* %9093, align 1
  %9094 = getelementptr inbounds i8, i8* %9086, i64 8
  %9095 = bitcast i8* %9094 to double*
  store double 0.000000e+00, double* %9095, align 1
  store %struct.Memory* %loadMem_4014c4, %struct.Memory** %MEMORY
  %loadMem_4014c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9097 = getelementptr inbounds %struct.GPR, %struct.GPR* %9096, i32 0, i32 33
  %9098 = getelementptr inbounds %struct.Reg, %struct.Reg* %9097, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %9098 to i64*
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9100 = getelementptr inbounds %struct.GPR, %struct.GPR* %9099, i32 0, i32 15
  %9101 = getelementptr inbounds %struct.Reg, %struct.Reg* %9100, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %9101 to i64*
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9103 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9102, i64 0, i64 3
  %YMM3.i107 = bitcast %union.VectorReg* %9103 to %"class.std::bitset"*
  %9104 = bitcast %"class.std::bitset"* %YMM3.i107 to i8*
  %9105 = load i64, i64* %RBP.i106
  %9106 = sub i64 %9105, 136
  %9107 = load i64, i64* %PC.i105
  %9108 = add i64 %9107, 8
  store i64 %9108, i64* %PC.i105
  %9109 = inttoptr i64 %9106 to double*
  %9110 = load double, double* %9109
  %9111 = bitcast i8* %9104 to double*
  store double %9110, double* %9111, align 1
  %9112 = getelementptr inbounds i8, i8* %9104, i64 8
  %9113 = bitcast i8* %9112 to double*
  store double 0.000000e+00, double* %9113, align 1
  store %struct.Memory* %loadMem_4014c9, %struct.Memory** %MEMORY
  %loadMem1_4014d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9115 = getelementptr inbounds %struct.GPR, %struct.GPR* %9114, i32 0, i32 33
  %9116 = getelementptr inbounds %struct.Reg, %struct.Reg* %9115, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %9116 to i64*
  %9117 = load i64, i64* %PC.i104
  %9118 = add i64 %9117, 287
  %9119 = load i64, i64* %PC.i104
  %9120 = add i64 %9119, 5
  %9121 = load i64, i64* %PC.i104
  %9122 = add i64 %9121, 5
  store i64 %9122, i64* %PC.i104
  %9123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9124 = load i64, i64* %9123, align 8
  %9125 = add i64 %9124, -8
  %9126 = inttoptr i64 %9125 to i64*
  store i64 %9120, i64* %9126
  store i64 %9125, i64* %9123, align 8
  %9127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9118, i64* %9127, align 8
  store %struct.Memory* %loadMem1_4014d1, %struct.Memory** %MEMORY
  %loadMem2_4014d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4014d1 = load i64, i64* %3
  %call2_4014d1 = call %struct.Memory* @sub_4015f0.POUT(%struct.State* %0, i64 %loadPC_4014d1, %struct.Memory* %loadMem2_4014d1)
  store %struct.Memory* %call2_4014d1, %struct.Memory** %MEMORY
  br label %block_.L_4014d6

block_.L_4014d6:                                  ; preds = %block_4014a6, %block_.L_401494
  %loadMem_4014d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9129 = getelementptr inbounds %struct.GPR, %struct.GPR* %9128, i32 0, i32 33
  %9130 = getelementptr inbounds %struct.Reg, %struct.Reg* %9129, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %9130 to i64*
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9132 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9131, i64 0, i64 0
  %YMM0.i103 = bitcast %union.VectorReg* %9132 to %"class.std::bitset"*
  %9133 = bitcast %"class.std::bitset"* %YMM0.i103 to i8*
  %9134 = load i64, i64* %PC.i102
  %9135 = add i64 %9134, 1130
  %9136 = load i64, i64* %PC.i102
  %9137 = add i64 %9136, 8
  store i64 %9137, i64* %PC.i102
  %9138 = inttoptr i64 %9135 to double*
  %9139 = load double, double* %9138
  %9140 = bitcast i8* %9133 to double*
  store double %9139, double* %9140, align 1
  %9141 = getelementptr inbounds i8, i8* %9133, i64 8
  %9142 = bitcast i8* %9141 to double*
  store double 0.000000e+00, double* %9142, align 1
  store %struct.Memory* %loadMem_4014d6, %struct.Memory** %MEMORY
  %loadMem_4014de = load %struct.Memory*, %struct.Memory** %MEMORY
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9144 = getelementptr inbounds %struct.GPR, %struct.GPR* %9143, i32 0, i32 33
  %9145 = getelementptr inbounds %struct.Reg, %struct.Reg* %9144, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %9145 to i64*
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9147 = getelementptr inbounds %struct.GPR, %struct.GPR* %9146, i32 0, i32 15
  %9148 = getelementptr inbounds %struct.Reg, %struct.Reg* %9147, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %9148 to i64*
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9150 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9149, i64 0, i64 0
  %XMM0.i101 = bitcast %union.VectorReg* %9150 to %union.vec128_t*
  %9151 = load i64, i64* %RBP.i100
  %9152 = sub i64 %9151, 144
  %9153 = bitcast %union.vec128_t* %XMM0.i101 to i8*
  %9154 = load i64, i64* %PC.i99
  %9155 = add i64 %9154, 8
  store i64 %9155, i64* %PC.i99
  %9156 = bitcast i8* %9153 to double*
  %9157 = load double, double* %9156, align 1
  %9158 = inttoptr i64 %9152 to double*
  store double %9157, double* %9158
  store %struct.Memory* %loadMem_4014de, %struct.Memory** %MEMORY
  %loadMem_4014e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9160 = getelementptr inbounds %struct.GPR, %struct.GPR* %9159, i32 0, i32 33
  %9161 = getelementptr inbounds %struct.Reg, %struct.Reg* %9160, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %9161 to i64*
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9163 = getelementptr inbounds %struct.GPR, %struct.GPR* %9162, i32 0, i32 15
  %9164 = getelementptr inbounds %struct.Reg, %struct.Reg* %9163, i32 0, i32 0
  %RBP.i98 = bitcast %union.anon* %9164 to i64*
  %9165 = load i64, i64* %RBP.i98
  %9166 = sub i64 %9165, 24
  %9167 = load i64, i64* %PC.i97
  %9168 = add i64 %9167, 8
  store i64 %9168, i64* %PC.i97
  %9169 = inttoptr i64 %9166 to i64*
  store i64 1, i64* %9169
  store %struct.Memory* %loadMem_4014e6, %struct.Memory** %MEMORY
  br label %block_.L_4014ee

block_.L_4014ee:                                  ; preds = %block_4014fc, %block_.L_4014d6
  %loadMem_4014ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %9170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9171 = getelementptr inbounds %struct.GPR, %struct.GPR* %9170, i32 0, i32 33
  %9172 = getelementptr inbounds %struct.Reg, %struct.Reg* %9171, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %9172 to i64*
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9174 = getelementptr inbounds %struct.GPR, %struct.GPR* %9173, i32 0, i32 1
  %9175 = getelementptr inbounds %struct.Reg, %struct.Reg* %9174, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %9175 to i64*
  %9176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9177 = getelementptr inbounds %struct.GPR, %struct.GPR* %9176, i32 0, i32 15
  %9178 = getelementptr inbounds %struct.Reg, %struct.Reg* %9177, i32 0, i32 0
  %RBP.i96 = bitcast %union.anon* %9178 to i64*
  %9179 = load i64, i64* %RBP.i96
  %9180 = sub i64 %9179, 24
  %9181 = load i64, i64* %PC.i94
  %9182 = add i64 %9181, 4
  store i64 %9182, i64* %PC.i94
  %9183 = inttoptr i64 %9180 to i64*
  %9184 = load i64, i64* %9183
  store i64 %9184, i64* %RAX.i95, align 8
  store %struct.Memory* %loadMem_4014ee, %struct.Memory** %MEMORY
  %loadMem_4014f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9186 = getelementptr inbounds %struct.GPR, %struct.GPR* %9185, i32 0, i32 33
  %9187 = getelementptr inbounds %struct.Reg, %struct.Reg* %9186, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %9187 to i64*
  %9188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9189 = getelementptr inbounds %struct.GPR, %struct.GPR* %9188, i32 0, i32 1
  %9190 = getelementptr inbounds %struct.Reg, %struct.Reg* %9189, i32 0, i32 0
  %RAX.i92 = bitcast %union.anon* %9190 to i64*
  %9191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9192 = getelementptr inbounds %struct.GPR, %struct.GPR* %9191, i32 0, i32 15
  %9193 = getelementptr inbounds %struct.Reg, %struct.Reg* %9192, i32 0, i32 0
  %RBP.i93 = bitcast %union.anon* %9193 to i64*
  %9194 = load i64, i64* %RAX.i92
  %9195 = load i64, i64* %RBP.i93
  %9196 = sub i64 %9195, 104
  %9197 = load i64, i64* %PC.i91
  %9198 = add i64 %9197, 4
  store i64 %9198, i64* %PC.i91
  %9199 = inttoptr i64 %9196 to i64*
  %9200 = load i64, i64* %9199
  %9201 = sub i64 %9194, %9200
  %9202 = icmp ugt i64 %9200, %9194
  %9203 = zext i1 %9202 to i8
  %9204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9203, i8* %9204, align 1
  %9205 = trunc i64 %9201 to i32
  %9206 = and i32 %9205, 255
  %9207 = call i32 @llvm.ctpop.i32(i32 %9206)
  %9208 = trunc i32 %9207 to i8
  %9209 = and i8 %9208, 1
  %9210 = xor i8 %9209, 1
  %9211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9210, i8* %9211, align 1
  %9212 = xor i64 %9200, %9194
  %9213 = xor i64 %9212, %9201
  %9214 = lshr i64 %9213, 4
  %9215 = trunc i64 %9214 to i8
  %9216 = and i8 %9215, 1
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9216, i8* %9217, align 1
  %9218 = icmp eq i64 %9201, 0
  %9219 = zext i1 %9218 to i8
  %9220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9219, i8* %9220, align 1
  %9221 = lshr i64 %9201, 63
  %9222 = trunc i64 %9221 to i8
  %9223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9222, i8* %9223, align 1
  %9224 = lshr i64 %9194, 63
  %9225 = lshr i64 %9200, 63
  %9226 = xor i64 %9225, %9224
  %9227 = xor i64 %9221, %9224
  %9228 = add i64 %9227, %9226
  %9229 = icmp eq i64 %9228, 2
  %9230 = zext i1 %9229 to i8
  %9231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9230, i8* %9231, align 1
  store %struct.Memory* %loadMem_4014f2, %struct.Memory** %MEMORY
  %loadMem_4014f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9233 = getelementptr inbounds %struct.GPR, %struct.GPR* %9232, i32 0, i32 33
  %9234 = getelementptr inbounds %struct.Reg, %struct.Reg* %9233, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %9234 to i64*
  %9235 = load i64, i64* %PC.i90
  %9236 = add i64 %9235, 63
  %9237 = load i64, i64* %PC.i90
  %9238 = add i64 %9237, 6
  %9239 = load i64, i64* %PC.i90
  %9240 = add i64 %9239, 6
  store i64 %9240, i64* %PC.i90
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9242 = load i8, i8* %9241, align 1
  %9243 = icmp eq i8 %9242, 0
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9245 = load i8, i8* %9244, align 1
  %9246 = icmp ne i8 %9245, 0
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9248 = load i8, i8* %9247, align 1
  %9249 = icmp ne i8 %9248, 0
  %9250 = xor i1 %9246, %9249
  %9251 = xor i1 %9250, true
  %9252 = and i1 %9243, %9251
  %9253 = zext i1 %9252 to i8
  store i8 %9253, i8* %BRANCH_TAKEN, align 1
  %9254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9255 = select i1 %9252, i64 %9236, i64 %9238
  store i64 %9255, i64* %9254, align 8
  store %struct.Memory* %loadMem_4014f6, %struct.Memory** %MEMORY
  %loadBr_4014f6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4014f6 = icmp eq i8 %loadBr_4014f6, 1
  br i1 %cmpBr_4014f6, label %block_.L_401535, label %block_4014fc

block_4014fc:                                     ; preds = %block_.L_4014ee
  %loadMem_4014fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9257 = getelementptr inbounds %struct.GPR, %struct.GPR* %9256, i32 0, i32 33
  %9258 = getelementptr inbounds %struct.Reg, %struct.Reg* %9257, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %9258 to i64*
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9260 = getelementptr inbounds %struct.GPR, %struct.GPR* %9259, i32 0, i32 15
  %9261 = getelementptr inbounds %struct.Reg, %struct.Reg* %9260, i32 0, i32 0
  %RBP.i88 = bitcast %union.anon* %9261 to i64*
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9262, i64 0, i64 0
  %YMM0.i89 = bitcast %union.VectorReg* %9263 to %"class.std::bitset"*
  %9264 = bitcast %"class.std::bitset"* %YMM0.i89 to i8*
  %9265 = load i64, i64* %RBP.i88
  %9266 = sub i64 %9265, 144
  %9267 = load i64, i64* %PC.i87
  %9268 = add i64 %9267, 8
  store i64 %9268, i64* %PC.i87
  %9269 = inttoptr i64 %9266 to double*
  %9270 = load double, double* %9269
  %9271 = bitcast i8* %9264 to double*
  store double %9270, double* %9271, align 1
  %9272 = getelementptr inbounds i8, i8* %9264, i64 8
  %9273 = bitcast i8* %9272 to double*
  store double 0.000000e+00, double* %9273, align 1
  store %struct.Memory* %loadMem_4014fc, %struct.Memory** %MEMORY
  %loadMem1_401504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9275 = getelementptr inbounds %struct.GPR, %struct.GPR* %9274, i32 0, i32 33
  %9276 = getelementptr inbounds %struct.Reg, %struct.Reg* %9275, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %9276 to i64*
  %9277 = load i64, i64* %PC.i86
  %9278 = add i64 %9277, -3588
  %9279 = load i64, i64* %PC.i86
  %9280 = add i64 %9279, 5
  %9281 = load i64, i64* %PC.i86
  %9282 = add i64 %9281, 5
  store i64 %9282, i64* %PC.i86
  %9283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9284 = load i64, i64* %9283, align 8
  %9285 = add i64 %9284, -8
  %9286 = inttoptr i64 %9285 to i64*
  store i64 %9280, i64* %9286
  store i64 %9285, i64* %9283, align 8
  %9287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9278, i64* %9287, align 8
  store %struct.Memory* %loadMem1_401504, %struct.Memory** %MEMORY
  %loadMem2_401504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401504 = load i64, i64* %3
  %9288 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %loadMem2_401504)
  store %struct.Memory* %9288, %struct.Memory** %MEMORY
  %loadMem_401509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9290 = getelementptr inbounds %struct.GPR, %struct.GPR* %9289, i32 0, i32 33
  %9291 = getelementptr inbounds %struct.Reg, %struct.Reg* %9290, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %9291 to i64*
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9292, i64 0, i64 0
  %YMM0.i83 = bitcast %union.VectorReg* %9293 to %"class.std::bitset"*
  %9294 = bitcast %"class.std::bitset"* %YMM0.i83 to i8*
  %9295 = bitcast %"class.std::bitset"* %YMM0.i83 to i8*
  %9296 = load i64, i64* %PC.i82
  %9297 = add i64 %9296, 9
  store i64 %9297, i64* %PC.i82
  %9298 = bitcast i8* %9295 to double*
  %9299 = load double, double* %9298, align 1
  %9300 = getelementptr inbounds i8, i8* %9295, i64 8
  %9301 = bitcast i8* %9300 to i64*
  %9302 = load i64, i64* %9301, align 1
  %9303 = load double, double* bitcast (%G_0x6020a0_type* @G_0x6020a0 to double*)
  %9304 = fdiv double %9299, %9303
  %9305 = bitcast i8* %9294 to double*
  store double %9304, double* %9305, align 1
  %9306 = getelementptr inbounds i8, i8* %9294, i64 8
  %9307 = bitcast i8* %9306 to i64*
  store i64 %9302, i64* %9307, align 1
  store %struct.Memory* %loadMem_401509, %struct.Memory** %MEMORY
  %loadMem1_401512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9309 = getelementptr inbounds %struct.GPR, %struct.GPR* %9308, i32 0, i32 33
  %9310 = getelementptr inbounds %struct.Reg, %struct.Reg* %9309, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %9310 to i64*
  %9311 = load i64, i64* %PC.i81
  %9312 = add i64 %9311, -3650
  %9313 = load i64, i64* %PC.i81
  %9314 = add i64 %9313, 5
  %9315 = load i64, i64* %PC.i81
  %9316 = add i64 %9315, 5
  store i64 %9316, i64* %PC.i81
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9318 = load i64, i64* %9317, align 8
  %9319 = add i64 %9318, -8
  %9320 = inttoptr i64 %9319 to i64*
  store i64 %9314, i64* %9320
  store i64 %9319, i64* %9317, align 8
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9312, i64* %9321, align 8
  store %struct.Memory* %loadMem1_401512, %struct.Memory** %MEMORY
  %loadMem2_401512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401512 = load i64, i64* %3
  %9322 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %loadMem2_401512)
  store %struct.Memory* %9322, %struct.Memory** %MEMORY
  %loadMem1_401517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9324 = getelementptr inbounds %struct.GPR, %struct.GPR* %9323, i32 0, i32 33
  %9325 = getelementptr inbounds %struct.Reg, %struct.Reg* %9324, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %9325 to i64*
  %9326 = load i64, i64* %PC.i78
  %9327 = add i64 %9326, -3511
  %9328 = load i64, i64* %PC.i78
  %9329 = add i64 %9328, 5
  %9330 = load i64, i64* %PC.i78
  %9331 = add i64 %9330, 5
  store i64 %9331, i64* %PC.i78
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9333 = load i64, i64* %9332, align 8
  %9334 = add i64 %9333, -8
  %9335 = inttoptr i64 %9334 to i64*
  store i64 %9329, i64* %9335
  store i64 %9334, i64* %9332, align 8
  %9336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9327, i64* %9336, align 8
  store %struct.Memory* %loadMem1_401517, %struct.Memory** %MEMORY
  %loadMem2_401517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401517 = load i64, i64* %3
  %call2_401517 = call %struct.Memory* @ext_sqrt(%struct.State* %0, i64 %loadPC_401517, %struct.Memory* %loadMem2_401517)
  store %struct.Memory* %call2_401517, %struct.Memory** %MEMORY
  %loadMem_40151c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9338 = getelementptr inbounds %struct.GPR, %struct.GPR* %9337, i32 0, i32 33
  %9339 = getelementptr inbounds %struct.Reg, %struct.Reg* %9338, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %9339 to i64*
  %9340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9341 = getelementptr inbounds %struct.GPR, %struct.GPR* %9340, i32 0, i32 15
  %9342 = getelementptr inbounds %struct.Reg, %struct.Reg* %9341, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %9342 to i64*
  %9343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9344 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9343, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %9344 to %union.vec128_t*
  %9345 = load i64, i64* %RBP.i77
  %9346 = sub i64 %9345, 144
  %9347 = bitcast %union.vec128_t* %XMM0.i to i8*
  %9348 = load i64, i64* %PC.i76
  %9349 = add i64 %9348, 8
  store i64 %9349, i64* %PC.i76
  %9350 = bitcast i8* %9347 to double*
  %9351 = load double, double* %9350, align 1
  %9352 = inttoptr i64 %9346 to double*
  store double %9351, double* %9352
  store %struct.Memory* %loadMem_40151c, %struct.Memory** %MEMORY
  %loadMem_401524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9354 = getelementptr inbounds %struct.GPR, %struct.GPR* %9353, i32 0, i32 33
  %9355 = getelementptr inbounds %struct.Reg, %struct.Reg* %9354, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %9355 to i64*
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9357 = getelementptr inbounds %struct.GPR, %struct.GPR* %9356, i32 0, i32 1
  %9358 = getelementptr inbounds %struct.Reg, %struct.Reg* %9357, i32 0, i32 0
  %RAX.i74 = bitcast %union.anon* %9358 to i64*
  %9359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9360 = getelementptr inbounds %struct.GPR, %struct.GPR* %9359, i32 0, i32 15
  %9361 = getelementptr inbounds %struct.Reg, %struct.Reg* %9360, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %9361 to i64*
  %9362 = load i64, i64* %RBP.i75
  %9363 = sub i64 %9362, 24
  %9364 = load i64, i64* %PC.i73
  %9365 = add i64 %9364, 4
  store i64 %9365, i64* %PC.i73
  %9366 = inttoptr i64 %9363 to i64*
  %9367 = load i64, i64* %9366
  store i64 %9367, i64* %RAX.i74, align 8
  store %struct.Memory* %loadMem_401524, %struct.Memory** %MEMORY
  %loadMem_401528 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9369 = getelementptr inbounds %struct.GPR, %struct.GPR* %9368, i32 0, i32 33
  %9370 = getelementptr inbounds %struct.Reg, %struct.Reg* %9369, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %9370 to i64*
  %9371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9372 = getelementptr inbounds %struct.GPR, %struct.GPR* %9371, i32 0, i32 1
  %9373 = getelementptr inbounds %struct.Reg, %struct.Reg* %9372, i32 0, i32 0
  %RAX.i72 = bitcast %union.anon* %9373 to i64*
  %9374 = load i64, i64* %RAX.i72
  %9375 = load i64, i64* %PC.i71
  %9376 = add i64 %9375, 4
  store i64 %9376, i64* %PC.i71
  %9377 = add i64 1, %9374
  store i64 %9377, i64* %RAX.i72, align 8
  %9378 = icmp ult i64 %9377, %9374
  %9379 = icmp ult i64 %9377, 1
  %9380 = or i1 %9378, %9379
  %9381 = zext i1 %9380 to i8
  %9382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9381, i8* %9382, align 1
  %9383 = trunc i64 %9377 to i32
  %9384 = and i32 %9383, 255
  %9385 = call i32 @llvm.ctpop.i32(i32 %9384)
  %9386 = trunc i32 %9385 to i8
  %9387 = and i8 %9386, 1
  %9388 = xor i8 %9387, 1
  %9389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9388, i8* %9389, align 1
  %9390 = xor i64 1, %9374
  %9391 = xor i64 %9390, %9377
  %9392 = lshr i64 %9391, 4
  %9393 = trunc i64 %9392 to i8
  %9394 = and i8 %9393, 1
  %9395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9394, i8* %9395, align 1
  %9396 = icmp eq i64 %9377, 0
  %9397 = zext i1 %9396 to i8
  %9398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9397, i8* %9398, align 1
  %9399 = lshr i64 %9377, 63
  %9400 = trunc i64 %9399 to i8
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9400, i8* %9401, align 1
  %9402 = lshr i64 %9374, 63
  %9403 = xor i64 %9399, %9402
  %9404 = add i64 %9403, %9399
  %9405 = icmp eq i64 %9404, 2
  %9406 = zext i1 %9405 to i8
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9406, i8* %9407, align 1
  store %struct.Memory* %loadMem_401528, %struct.Memory** %MEMORY
  %loadMem_40152c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9409 = getelementptr inbounds %struct.GPR, %struct.GPR* %9408, i32 0, i32 33
  %9410 = getelementptr inbounds %struct.Reg, %struct.Reg* %9409, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %9410 to i64*
  %9411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9412 = getelementptr inbounds %struct.GPR, %struct.GPR* %9411, i32 0, i32 1
  %9413 = getelementptr inbounds %struct.Reg, %struct.Reg* %9412, i32 0, i32 0
  %RAX.i69 = bitcast %union.anon* %9413 to i64*
  %9414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9415 = getelementptr inbounds %struct.GPR, %struct.GPR* %9414, i32 0, i32 15
  %9416 = getelementptr inbounds %struct.Reg, %struct.Reg* %9415, i32 0, i32 0
  %RBP.i70 = bitcast %union.anon* %9416 to i64*
  %9417 = load i64, i64* %RBP.i70
  %9418 = sub i64 %9417, 24
  %9419 = load i64, i64* %RAX.i69
  %9420 = load i64, i64* %PC.i68
  %9421 = add i64 %9420, 4
  store i64 %9421, i64* %PC.i68
  %9422 = inttoptr i64 %9418 to i64*
  store i64 %9419, i64* %9422
  store %struct.Memory* %loadMem_40152c, %struct.Memory** %MEMORY
  %loadMem_401530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9424 = getelementptr inbounds %struct.GPR, %struct.GPR* %9423, i32 0, i32 33
  %9425 = getelementptr inbounds %struct.Reg, %struct.Reg* %9424, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %9425 to i64*
  %9426 = load i64, i64* %PC.i67
  %9427 = add i64 %9426, -66
  %9428 = load i64, i64* %PC.i67
  %9429 = add i64 %9428, 5
  store i64 %9429, i64* %PC.i67
  %9430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9427, i64* %9430, align 8
  store %struct.Memory* %loadMem_401530, %struct.Memory** %MEMORY
  br label %block_.L_4014ee

block_.L_401535:                                  ; preds = %block_.L_4014ee
  %loadMem_401535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9432 = getelementptr inbounds %struct.GPR, %struct.GPR* %9431, i32 0, i32 33
  %9433 = getelementptr inbounds %struct.Reg, %struct.Reg* %9432, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %9433 to i64*
  %9434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9435 = getelementptr inbounds %struct.GPR, %struct.GPR* %9434, i32 0, i32 1
  %9436 = getelementptr inbounds %struct.Reg, %struct.Reg* %9435, i32 0, i32 0
  %RAX.i65 = bitcast %union.anon* %9436 to i64*
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9438 = getelementptr inbounds %struct.GPR, %struct.GPR* %9437, i32 0, i32 15
  %9439 = getelementptr inbounds %struct.Reg, %struct.Reg* %9438, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %9439 to i64*
  %9440 = load i64, i64* %RBP.i66
  %9441 = sub i64 %9440, 176
  %9442 = load i64, i64* %PC.i64
  %9443 = add i64 %9442, 6
  store i64 %9443, i64* %PC.i64
  %9444 = inttoptr i64 %9441 to i32*
  %9445 = load i32, i32* %9444
  %9446 = zext i32 %9445 to i64
  store i64 %9446, i64* %RAX.i65, align 8
  store %struct.Memory* %loadMem_401535, %struct.Memory** %MEMORY
  %loadMem_40153b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9448 = getelementptr inbounds %struct.GPR, %struct.GPR* %9447, i32 0, i32 33
  %9449 = getelementptr inbounds %struct.Reg, %struct.Reg* %9448, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %9449 to i64*
  %9450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9451 = getelementptr inbounds %struct.GPR, %struct.GPR* %9450, i32 0, i32 1
  %9452 = getelementptr inbounds %struct.Reg, %struct.Reg* %9451, i32 0, i32 0
  %EAX.i62 = bitcast %union.anon* %9452 to i32*
  %9453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9454 = getelementptr inbounds %struct.GPR, %struct.GPR* %9453, i32 0, i32 15
  %9455 = getelementptr inbounds %struct.Reg, %struct.Reg* %9454, i32 0, i32 0
  %RBP.i63 = bitcast %union.anon* %9455 to i64*
  %9456 = load i32, i32* %EAX.i62
  %9457 = zext i32 %9456 to i64
  %9458 = load i64, i64* %RBP.i63
  %9459 = sub i64 %9458, 172
  %9460 = load i64, i64* %PC.i61
  %9461 = add i64 %9460, 6
  store i64 %9461, i64* %PC.i61
  %9462 = inttoptr i64 %9459 to i32*
  %9463 = load i32, i32* %9462
  %9464 = sub i32 %9456, %9463
  %9465 = icmp ult i32 %9456, %9463
  %9466 = zext i1 %9465 to i8
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9466, i8* %9467, align 1
  %9468 = and i32 %9464, 255
  %9469 = call i32 @llvm.ctpop.i32(i32 %9468)
  %9470 = trunc i32 %9469 to i8
  %9471 = and i8 %9470, 1
  %9472 = xor i8 %9471, 1
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9472, i8* %9473, align 1
  %9474 = xor i32 %9463, %9456
  %9475 = xor i32 %9474, %9464
  %9476 = lshr i32 %9475, 4
  %9477 = trunc i32 %9476 to i8
  %9478 = and i8 %9477, 1
  %9479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9478, i8* %9479, align 1
  %9480 = icmp eq i32 %9464, 0
  %9481 = zext i1 %9480 to i8
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9481, i8* %9482, align 1
  %9483 = lshr i32 %9464, 31
  %9484 = trunc i32 %9483 to i8
  %9485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9484, i8* %9485, align 1
  %9486 = lshr i32 %9456, 31
  %9487 = lshr i32 %9463, 31
  %9488 = xor i32 %9487, %9486
  %9489 = xor i32 %9483, %9486
  %9490 = add i32 %9489, %9488
  %9491 = icmp eq i32 %9490, 2
  %9492 = zext i1 %9491 to i8
  %9493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9492, i8* %9493, align 1
  store %struct.Memory* %loadMem_40153b, %struct.Memory** %MEMORY
  %loadMem_401541 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9495 = getelementptr inbounds %struct.GPR, %struct.GPR* %9494, i32 0, i32 33
  %9496 = getelementptr inbounds %struct.Reg, %struct.Reg* %9495, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %9496 to i64*
  %9497 = load i64, i64* %PC.i60
  %9498 = add i64 %9497, 63
  %9499 = load i64, i64* %PC.i60
  %9500 = add i64 %9499, 6
  %9501 = load i64, i64* %PC.i60
  %9502 = add i64 %9501, 6
  store i64 %9502, i64* %PC.i60
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9504 = load i8, i8* %9503, align 1
  %9505 = icmp eq i8 %9504, 0
  %9506 = zext i1 %9505 to i8
  store i8 %9506, i8* %BRANCH_TAKEN, align 1
  %9507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9508 = select i1 %9505, i64 %9498, i64 %9500
  store i64 %9508, i64* %9507, align 8
  store %struct.Memory* %loadMem_401541, %struct.Memory** %MEMORY
  %loadBr_401541 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401541 = icmp eq i8 %loadBr_401541, 1
  br i1 %cmpBr_401541, label %block_.L_401580, label %block_401547

block_401547:                                     ; preds = %block_.L_401535
  %loadMem_401547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9510 = getelementptr inbounds %struct.GPR, %struct.GPR* %9509, i32 0, i32 33
  %9511 = getelementptr inbounds %struct.Reg, %struct.Reg* %9510, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %9511 to i64*
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9513 = getelementptr inbounds %struct.GPR, %struct.GPR* %9512, i32 0, i32 11
  %9514 = getelementptr inbounds %struct.Reg, %struct.Reg* %9513, i32 0, i32 0
  %RDI.i58 = bitcast %union.anon* %9514 to i64*
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9516 = getelementptr inbounds %struct.GPR, %struct.GPR* %9515, i32 0, i32 15
  %9517 = getelementptr inbounds %struct.Reg, %struct.Reg* %9516, i32 0, i32 0
  %RBP.i59 = bitcast %union.anon* %9517 to i64*
  %9518 = load i64, i64* %RBP.i59
  %9519 = sub i64 %9518, 104
  %9520 = load i64, i64* %PC.i57
  %9521 = add i64 %9520, 4
  store i64 %9521, i64* %PC.i57
  %9522 = inttoptr i64 %9519 to i64*
  %9523 = load i64, i64* %9522
  store i64 %9523, i64* %RDI.i58, align 8
  store %struct.Memory* %loadMem_401547, %struct.Memory** %MEMORY
  %loadMem_40154b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9525 = getelementptr inbounds %struct.GPR, %struct.GPR* %9524, i32 0, i32 33
  %9526 = getelementptr inbounds %struct.Reg, %struct.Reg* %9525, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %9526 to i64*
  %9527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9528 = getelementptr inbounds %struct.GPR, %struct.GPR* %9527, i32 0, i32 9
  %9529 = getelementptr inbounds %struct.Reg, %struct.Reg* %9528, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %9529 to i64*
  %9530 = load i64, i64* %PC.i56
  %9531 = add i64 %9530, 8
  store i64 %9531, i64* %PC.i56
  %9532 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %9533 = sext i32 %9532 to i64
  store i64 %9533, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_40154b, %struct.Memory** %MEMORY
  %loadMem_401553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9535 = getelementptr inbounds %struct.GPR, %struct.GPR* %9534, i32 0, i32 33
  %9536 = getelementptr inbounds %struct.Reg, %struct.Reg* %9535, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %9536 to i64*
  %9537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9538 = getelementptr inbounds %struct.GPR, %struct.GPR* %9537, i32 0, i32 7
  %9539 = getelementptr inbounds %struct.Reg, %struct.Reg* %9538, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9539 to i64*
  %9540 = load i64, i64* %PC.i55
  %9541 = add i64 %9540, 8
  store i64 %9541, i64* %PC.i55
  %9542 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %9543 = sext i32 %9542 to i64
  store i64 %9543, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_401553, %struct.Memory** %MEMORY
  %loadMem_40155b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9545 = getelementptr inbounds %struct.GPR, %struct.GPR* %9544, i32 0, i32 33
  %9546 = getelementptr inbounds %struct.Reg, %struct.Reg* %9545, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %9546 to i64*
  %9547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9548 = getelementptr inbounds %struct.GPR, %struct.GPR* %9547, i32 0, i32 15
  %9549 = getelementptr inbounds %struct.Reg, %struct.Reg* %9548, i32 0, i32 0
  %RBP.i54 = bitcast %union.anon* %9549 to i64*
  %9550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9551 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9550, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %9551 to %"class.std::bitset"*
  %9552 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %9553 = load i64, i64* %RBP.i54
  %9554 = sub i64 %9553, 144
  %9555 = load i64, i64* %PC.i53
  %9556 = add i64 %9555, 8
  store i64 %9556, i64* %PC.i53
  %9557 = inttoptr i64 %9554 to double*
  %9558 = load double, double* %9557
  %9559 = bitcast i8* %9552 to double*
  store double %9558, double* %9559, align 1
  %9560 = getelementptr inbounds i8, i8* %9552, i64 8
  %9561 = bitcast i8* %9560 to double*
  store double 0.000000e+00, double* %9561, align 1
  store %struct.Memory* %loadMem_40155b, %struct.Memory** %MEMORY
  %loadMem_401563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9563 = getelementptr inbounds %struct.GPR, %struct.GPR* %9562, i32 0, i32 33
  %9564 = getelementptr inbounds %struct.Reg, %struct.Reg* %9563, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %9564 to i64*
  %9565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9566 = getelementptr inbounds %struct.GPR, %struct.GPR* %9565, i32 0, i32 15
  %9567 = getelementptr inbounds %struct.Reg, %struct.Reg* %9566, i32 0, i32 0
  %RBP.i52 = bitcast %union.anon* %9567 to i64*
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9569 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9568, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %9569 to %"class.std::bitset"*
  %9570 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %9571 = load i64, i64* %RBP.i52
  %9572 = sub i64 %9571, 144
  %9573 = load i64, i64* %PC.i51
  %9574 = add i64 %9573, 8
  store i64 %9574, i64* %PC.i51
  %9575 = inttoptr i64 %9572 to double*
  %9576 = load double, double* %9575
  %9577 = bitcast i8* %9570 to double*
  store double %9576, double* %9577, align 1
  %9578 = getelementptr inbounds i8, i8* %9570, i64 8
  %9579 = bitcast i8* %9578 to double*
  store double 0.000000e+00, double* %9579, align 1
  store %struct.Memory* %loadMem_401563, %struct.Memory** %MEMORY
  %loadMem_40156b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9581 = getelementptr inbounds %struct.GPR, %struct.GPR* %9580, i32 0, i32 33
  %9582 = getelementptr inbounds %struct.Reg, %struct.Reg* %9581, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %9582 to i64*
  %9583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9584 = getelementptr inbounds %struct.GPR, %struct.GPR* %9583, i32 0, i32 15
  %9585 = getelementptr inbounds %struct.Reg, %struct.Reg* %9584, i32 0, i32 0
  %RBP.i50 = bitcast %union.anon* %9585 to i64*
  %9586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9587 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9586, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %9587 to %"class.std::bitset"*
  %9588 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %9589 = load i64, i64* %RBP.i50
  %9590 = sub i64 %9589, 144
  %9591 = load i64, i64* %PC.i49
  %9592 = add i64 %9591, 8
  store i64 %9592, i64* %PC.i49
  %9593 = inttoptr i64 %9590 to double*
  %9594 = load double, double* %9593
  %9595 = bitcast i8* %9588 to double*
  store double %9594, double* %9595, align 1
  %9596 = getelementptr inbounds i8, i8* %9588, i64 8
  %9597 = bitcast i8* %9596 to double*
  store double 0.000000e+00, double* %9597, align 1
  store %struct.Memory* %loadMem_40156b, %struct.Memory** %MEMORY
  %loadMem_401573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9599 = getelementptr inbounds %struct.GPR, %struct.GPR* %9598, i32 0, i32 33
  %9600 = getelementptr inbounds %struct.Reg, %struct.Reg* %9599, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %9600 to i64*
  %9601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9602 = getelementptr inbounds %struct.GPR, %struct.GPR* %9601, i32 0, i32 15
  %9603 = getelementptr inbounds %struct.Reg, %struct.Reg* %9602, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %9603 to i64*
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9605 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9604, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %9605 to %"class.std::bitset"*
  %9606 = bitcast %"class.std::bitset"* %YMM3.i to i8*
  %9607 = load i64, i64* %RBP.i48
  %9608 = sub i64 %9607, 144
  %9609 = load i64, i64* %PC.i47
  %9610 = add i64 %9609, 8
  store i64 %9610, i64* %PC.i47
  %9611 = inttoptr i64 %9608 to double*
  %9612 = load double, double* %9611
  %9613 = bitcast i8* %9606 to double*
  store double %9612, double* %9613, align 1
  %9614 = getelementptr inbounds i8, i8* %9606, i64 8
  %9615 = bitcast i8* %9614 to double*
  store double 0.000000e+00, double* %9615, align 1
  store %struct.Memory* %loadMem_401573, %struct.Memory** %MEMORY
  %loadMem1_40157b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9617 = getelementptr inbounds %struct.GPR, %struct.GPR* %9616, i32 0, i32 33
  %9618 = getelementptr inbounds %struct.Reg, %struct.Reg* %9617, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %9618 to i64*
  %9619 = load i64, i64* %PC.i46
  %9620 = add i64 %9619, 117
  %9621 = load i64, i64* %PC.i46
  %9622 = add i64 %9621, 5
  %9623 = load i64, i64* %PC.i46
  %9624 = add i64 %9623, 5
  store i64 %9624, i64* %PC.i46
  %9625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9626 = load i64, i64* %9625, align 8
  %9627 = add i64 %9626, -8
  %9628 = inttoptr i64 %9627 to i64*
  store i64 %9622, i64* %9628
  store i64 %9627, i64* %9625, align 8
  %9629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9620, i64* %9629, align 8
  store %struct.Memory* %loadMem1_40157b, %struct.Memory** %MEMORY
  %loadMem2_40157b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40157b = load i64, i64* %3
  %call2_40157b = call %struct.Memory* @sub_4015f0.POUT(%struct.State* %0, i64 %loadPC_40157b, %struct.Memory* %loadMem2_40157b)
  store %struct.Memory* %call2_40157b, %struct.Memory** %MEMORY
  br label %block_.L_401580

block_.L_401580:                                  ; preds = %block_401547, %block_.L_401535
  %loadMem_401580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9631 = getelementptr inbounds %struct.GPR, %struct.GPR* %9630, i32 0, i32 33
  %9632 = getelementptr inbounds %struct.Reg, %struct.Reg* %9631, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %9632 to i64*
  %9633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9634 = getelementptr inbounds %struct.GPR, %struct.GPR* %9633, i32 0, i32 1
  %9635 = getelementptr inbounds %struct.Reg, %struct.Reg* %9634, i32 0, i32 0
  %RAX.i44 = bitcast %union.anon* %9635 to i64*
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9637 = getelementptr inbounds %struct.GPR, %struct.GPR* %9636, i32 0, i32 15
  %9638 = getelementptr inbounds %struct.Reg, %struct.Reg* %9637, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %9638 to i64*
  %9639 = load i64, i64* %RBP.i45
  %9640 = sub i64 %9639, 176
  %9641 = load i64, i64* %PC.i43
  %9642 = add i64 %9641, 6
  store i64 %9642, i64* %PC.i43
  %9643 = inttoptr i64 %9640 to i32*
  %9644 = load i32, i32* %9643
  %9645 = zext i32 %9644 to i64
  store i64 %9645, i64* %RAX.i44, align 8
  store %struct.Memory* %loadMem_401580, %struct.Memory** %MEMORY
  %loadMem_401586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9647 = getelementptr inbounds %struct.GPR, %struct.GPR* %9646, i32 0, i32 33
  %9648 = getelementptr inbounds %struct.Reg, %struct.Reg* %9647, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %9648 to i64*
  %9649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9650 = getelementptr inbounds %struct.GPR, %struct.GPR* %9649, i32 0, i32 1
  %9651 = getelementptr inbounds %struct.Reg, %struct.Reg* %9650, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %9651 to i64*
  %9652 = load i64, i64* %RAX.i42
  %9653 = load i64, i64* %PC.i41
  %9654 = add i64 %9653, 3
  store i64 %9654, i64* %PC.i41
  %9655 = trunc i64 %9652 to i32
  %9656 = add i32 1, %9655
  %9657 = zext i32 %9656 to i64
  store i64 %9657, i64* %RAX.i42, align 8
  %9658 = icmp ult i32 %9656, %9655
  %9659 = icmp ult i32 %9656, 1
  %9660 = or i1 %9658, %9659
  %9661 = zext i1 %9660 to i8
  %9662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9661, i8* %9662, align 1
  %9663 = and i32 %9656, 255
  %9664 = call i32 @llvm.ctpop.i32(i32 %9663)
  %9665 = trunc i32 %9664 to i8
  %9666 = and i8 %9665, 1
  %9667 = xor i8 %9666, 1
  %9668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9667, i8* %9668, align 1
  %9669 = xor i64 1, %9652
  %9670 = trunc i64 %9669 to i32
  %9671 = xor i32 %9670, %9656
  %9672 = lshr i32 %9671, 4
  %9673 = trunc i32 %9672 to i8
  %9674 = and i8 %9673, 1
  %9675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9674, i8* %9675, align 1
  %9676 = icmp eq i32 %9656, 0
  %9677 = zext i1 %9676 to i8
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9677, i8* %9678, align 1
  %9679 = lshr i32 %9656, 31
  %9680 = trunc i32 %9679 to i8
  %9681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9680, i8* %9681, align 1
  %9682 = lshr i32 %9655, 31
  %9683 = xor i32 %9679, %9682
  %9684 = add i32 %9683, %9679
  %9685 = icmp eq i32 %9684, 2
  %9686 = zext i1 %9685 to i8
  %9687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9686, i8* %9687, align 1
  store %struct.Memory* %loadMem_401586, %struct.Memory** %MEMORY
  %loadMem_401589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9689 = getelementptr inbounds %struct.GPR, %struct.GPR* %9688, i32 0, i32 33
  %9690 = getelementptr inbounds %struct.Reg, %struct.Reg* %9689, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %9690 to i64*
  %9691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9692 = getelementptr inbounds %struct.GPR, %struct.GPR* %9691, i32 0, i32 1
  %9693 = getelementptr inbounds %struct.Reg, %struct.Reg* %9692, i32 0, i32 0
  %EAX.i39 = bitcast %union.anon* %9693 to i32*
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9695 = getelementptr inbounds %struct.GPR, %struct.GPR* %9694, i32 0, i32 15
  %9696 = getelementptr inbounds %struct.Reg, %struct.Reg* %9695, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %9696 to i64*
  %9697 = load i64, i64* %RBP.i40
  %9698 = sub i64 %9697, 176
  %9699 = load i32, i32* %EAX.i39
  %9700 = zext i32 %9699 to i64
  %9701 = load i64, i64* %PC.i38
  %9702 = add i64 %9701, 6
  store i64 %9702, i64* %PC.i38
  %9703 = inttoptr i64 %9698 to i32*
  store i32 %9699, i32* %9703
  store %struct.Memory* %loadMem_401589, %struct.Memory** %MEMORY
  %loadMem_40158f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9705 = getelementptr inbounds %struct.GPR, %struct.GPR* %9704, i32 0, i32 33
  %9706 = getelementptr inbounds %struct.Reg, %struct.Reg* %9705, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %9706 to i64*
  %9707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9708 = getelementptr inbounds %struct.GPR, %struct.GPR* %9707, i32 0, i32 1
  %9709 = getelementptr inbounds %struct.Reg, %struct.Reg* %9708, i32 0, i32 0
  %EAX.i36 = bitcast %union.anon* %9709 to i32*
  %9710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9711 = getelementptr inbounds %struct.GPR, %struct.GPR* %9710, i32 0, i32 15
  %9712 = getelementptr inbounds %struct.Reg, %struct.Reg* %9711, i32 0, i32 0
  %RBP.i37 = bitcast %union.anon* %9712 to i64*
  %9713 = load i32, i32* %EAX.i36
  %9714 = zext i32 %9713 to i64
  %9715 = load i64, i64* %RBP.i37
  %9716 = sub i64 %9715, 172
  %9717 = load i64, i64* %PC.i35
  %9718 = add i64 %9717, 6
  store i64 %9718, i64* %PC.i35
  %9719 = inttoptr i64 %9716 to i32*
  %9720 = load i32, i32* %9719
  %9721 = sub i32 %9713, %9720
  %9722 = icmp ult i32 %9713, %9720
  %9723 = zext i1 %9722 to i8
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9723, i8* %9724, align 1
  %9725 = and i32 %9721, 255
  %9726 = call i32 @llvm.ctpop.i32(i32 %9725)
  %9727 = trunc i32 %9726 to i8
  %9728 = and i8 %9727, 1
  %9729 = xor i8 %9728, 1
  %9730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9729, i8* %9730, align 1
  %9731 = xor i32 %9720, %9713
  %9732 = xor i32 %9731, %9721
  %9733 = lshr i32 %9732, 4
  %9734 = trunc i32 %9733 to i8
  %9735 = and i8 %9734, 1
  %9736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9735, i8* %9736, align 1
  %9737 = icmp eq i32 %9721, 0
  %9738 = zext i1 %9737 to i8
  %9739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9738, i8* %9739, align 1
  %9740 = lshr i32 %9721, 31
  %9741 = trunc i32 %9740 to i8
  %9742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9741, i8* %9742, align 1
  %9743 = lshr i32 %9713, 31
  %9744 = lshr i32 %9720, 31
  %9745 = xor i32 %9744, %9743
  %9746 = xor i32 %9740, %9743
  %9747 = add i32 %9746, %9745
  %9748 = icmp eq i32 %9747, 2
  %9749 = zext i1 %9748 to i8
  %9750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9749, i8* %9750, align 1
  store %struct.Memory* %loadMem_40158f, %struct.Memory** %MEMORY
  %loadMem_401595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9752 = getelementptr inbounds %struct.GPR, %struct.GPR* %9751, i32 0, i32 33
  %9753 = getelementptr inbounds %struct.Reg, %struct.Reg* %9752, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %9753 to i64*
  %9754 = load i64, i64* %PC.i34
  %9755 = add i64 %9754, 11
  %9756 = load i64, i64* %PC.i34
  %9757 = add i64 %9756, 6
  %9758 = load i64, i64* %PC.i34
  %9759 = add i64 %9758, 6
  store i64 %9759, i64* %PC.i34
  %9760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9761 = load i8, i8* %9760, align 1
  %9762 = icmp eq i8 %9761, 0
  %9763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9764 = load i8, i8* %9763, align 1
  %9765 = icmp ne i8 %9764, 0
  %9766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9767 = load i8, i8* %9766, align 1
  %9768 = icmp ne i8 %9767, 0
  %9769 = xor i1 %9765, %9768
  %9770 = xor i1 %9769, true
  %9771 = and i1 %9762, %9770
  %9772 = zext i1 %9771 to i8
  store i8 %9772, i8* %BRANCH_TAKEN, align 1
  %9773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9774 = select i1 %9771, i64 %9755, i64 %9757
  store i64 %9774, i64* %9773, align 8
  store %struct.Memory* %loadMem_401595, %struct.Memory** %MEMORY
  %loadBr_401595 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401595 = icmp eq i8 %loadBr_401595, 1
  br i1 %cmpBr_401595, label %block_.L_4015a0, label %block_40159b

block_40159b:                                     ; preds = %block_.L_401580
  %loadMem_40159b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9776 = getelementptr inbounds %struct.GPR, %struct.GPR* %9775, i32 0, i32 33
  %9777 = getelementptr inbounds %struct.Reg, %struct.Reg* %9776, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %9777 to i64*
  %9778 = load i64, i64* %PC.i33
  %9779 = add i64 %9778, -2992
  %9780 = load i64, i64* %PC.i33
  %9781 = add i64 %9780, 5
  store i64 %9781, i64* %PC.i33
  %9782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9779, i64* %9782, align 8
  store %struct.Memory* %loadMem_40159b, %struct.Memory** %MEMORY
  br label %block_.L_4009eb

block_.L_4015a0:                                  ; preds = %block_.L_401580
  %loadMem_4015a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9784 = getelementptr inbounds %struct.GPR, %struct.GPR* %9783, i32 0, i32 33
  %9785 = getelementptr inbounds %struct.Reg, %struct.Reg* %9784, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %9785 to i64*
  %9786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9787 = getelementptr inbounds %struct.GPR, %struct.GPR* %9786, i32 0, i32 1
  %9788 = getelementptr inbounds %struct.Reg, %struct.Reg* %9787, i32 0, i32 0
  %EAX.i31 = bitcast %union.anon* %9788 to i32*
  %9789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9790 = getelementptr inbounds %struct.GPR, %struct.GPR* %9789, i32 0, i32 1
  %9791 = getelementptr inbounds %struct.Reg, %struct.Reg* %9790, i32 0, i32 0
  %RAX.i32 = bitcast %union.anon* %9791 to i64*
  %9792 = load i64, i64* %RAX.i32
  %9793 = load i32, i32* %EAX.i31
  %9794 = zext i32 %9793 to i64
  %9795 = load i64, i64* %PC.i30
  %9796 = add i64 %9795, 2
  store i64 %9796, i64* %PC.i30
  %9797 = xor i64 %9794, %9792
  %9798 = trunc i64 %9797 to i32
  %9799 = and i64 %9797, 4294967295
  store i64 %9799, i64* %RAX.i32, align 8
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9800, align 1
  %9801 = and i32 %9798, 255
  %9802 = call i32 @llvm.ctpop.i32(i32 %9801)
  %9803 = trunc i32 %9802 to i8
  %9804 = and i8 %9803, 1
  %9805 = xor i8 %9804, 1
  %9806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9805, i8* %9806, align 1
  %9807 = icmp eq i32 %9798, 0
  %9808 = zext i1 %9807 to i8
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9808, i8* %9809, align 1
  %9810 = lshr i32 %9798, 31
  %9811 = trunc i32 %9810 to i8
  %9812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9811, i8* %9812, align 1
  %9813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9813, align 1
  %9814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9814, align 1
  store %struct.Memory* %loadMem_4015a0, %struct.Memory** %MEMORY
  %loadMem_4015a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9816 = getelementptr inbounds %struct.GPR, %struct.GPR* %9815, i32 0, i32 33
  %9817 = getelementptr inbounds %struct.Reg, %struct.Reg* %9816, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %9817 to i64*
  %9818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9819 = getelementptr inbounds %struct.GPR, %struct.GPR* %9818, i32 0, i32 1
  %9820 = getelementptr inbounds %struct.Reg, %struct.Reg* %9819, i32 0, i32 0
  %EAX.i28 = bitcast %union.anon* %9820 to i32*
  %9821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9822 = getelementptr inbounds %struct.GPR, %struct.GPR* %9821, i32 0, i32 11
  %9823 = getelementptr inbounds %struct.Reg, %struct.Reg* %9822, i32 0, i32 0
  %RDI.i29 = bitcast %union.anon* %9823 to i64*
  %9824 = load i32, i32* %EAX.i28
  %9825 = zext i32 %9824 to i64
  %9826 = load i64, i64* %PC.i27
  %9827 = add i64 %9826, 2
  store i64 %9827, i64* %PC.i27
  %9828 = and i64 %9825, 4294967295
  store i64 %9828, i64* %RDI.i29, align 8
  store %struct.Memory* %loadMem_4015a2, %struct.Memory** %MEMORY
  %loadMem1_4015a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9830 = getelementptr inbounds %struct.GPR, %struct.GPR* %9829, i32 0, i32 33
  %9831 = getelementptr inbounds %struct.Reg, %struct.Reg* %9830, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %9831 to i64*
  %9832 = load i64, i64* %PC.i26
  %9833 = add i64 %9832, -3700
  %9834 = load i64, i64* %PC.i26
  %9835 = add i64 %9834, 5
  %9836 = load i64, i64* %PC.i26
  %9837 = add i64 %9836, 5
  store i64 %9837, i64* %PC.i26
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9839 = load i64, i64* %9838, align 8
  %9840 = add i64 %9839, -8
  %9841 = inttoptr i64 %9840 to i64*
  store i64 %9835, i64* %9841
  store i64 %9840, i64* %9838, align 8
  %9842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9833, i64* %9842, align 8
  store %struct.Memory* %loadMem1_4015a4, %struct.Memory** %MEMORY
  %loadMem2_4015a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4015a4 = load i64, i64* %3
  %9843 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %loadMem2_4015a4)
  store %struct.Memory* %9843, %struct.Memory** %MEMORY
  %loadMem_4015a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9845 = getelementptr inbounds %struct.GPR, %struct.GPR* %9844, i32 0, i32 33
  %9846 = getelementptr inbounds %struct.Reg, %struct.Reg* %9845, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %9846 to i64*
  %9847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9848 = getelementptr inbounds %struct.GPR, %struct.GPR* %9847, i32 0, i32 11
  %9849 = getelementptr inbounds %struct.Reg, %struct.Reg* %9848, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %9849 to i64*
  %9850 = load i64, i64* %PC.i23
  %9851 = add i64 %9850, 10
  store i64 %9851, i64* %PC.i23
  store i64 ptrtoint (%G__0x401965_type* @G__0x401965 to i64), i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_4015a9, %struct.Memory** %MEMORY
  %loadMem_4015b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9853 = getelementptr inbounds %struct.GPR, %struct.GPR* %9852, i32 0, i32 33
  %9854 = getelementptr inbounds %struct.Reg, %struct.Reg* %9853, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %9854 to i64*
  %9855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9856 = getelementptr inbounds %struct.GPR, %struct.GPR* %9855, i32 0, i32 1
  %9857 = getelementptr inbounds %struct.Reg, %struct.Reg* %9856, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %9857 to i64*
  %9858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9859 = getelementptr inbounds %struct.GPR, %struct.GPR* %9858, i32 0, i32 15
  %9860 = getelementptr inbounds %struct.Reg, %struct.Reg* %9859, i32 0, i32 0
  %RBP.i22 = bitcast %union.anon* %9860 to i64*
  %9861 = load i64, i64* %RBP.i22
  %9862 = sub i64 %9861, 200
  %9863 = load i64, i64* %RAX.i21
  %9864 = load i64, i64* %PC.i20
  %9865 = add i64 %9864, 7
  store i64 %9865, i64* %PC.i20
  %9866 = inttoptr i64 %9862 to i64*
  store i64 %9863, i64* %9866
  store %struct.Memory* %loadMem_4015b3, %struct.Memory** %MEMORY
  %loadMem_4015ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %9867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9868 = getelementptr inbounds %struct.GPR, %struct.GPR* %9867, i32 0, i32 33
  %9869 = getelementptr inbounds %struct.Reg, %struct.Reg* %9868, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %9869 to i64*
  %9870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9871 = getelementptr inbounds %struct.GPR, %struct.GPR* %9870, i32 0, i32 1
  %9872 = getelementptr inbounds %struct.Reg, %struct.Reg* %9871, i32 0, i32 0
  %9873 = bitcast %union.anon* %9872 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9873, i32 0, i32 0
  %9874 = load i64, i64* %PC.i19
  %9875 = add i64 %9874, 2
  store i64 %9875, i64* %PC.i19
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_4015ba, %struct.Memory** %MEMORY
  %loadMem1_4015bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9877 = getelementptr inbounds %struct.GPR, %struct.GPR* %9876, i32 0, i32 33
  %9878 = getelementptr inbounds %struct.Reg, %struct.Reg* %9877, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %9878 to i64*
  %9879 = load i64, i64* %PC.i18
  %9880 = add i64 %9879, -3788
  %9881 = load i64, i64* %PC.i18
  %9882 = add i64 %9881, 5
  %9883 = load i64, i64* %PC.i18
  %9884 = add i64 %9883, 5
  store i64 %9884, i64* %PC.i18
  %9885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9886 = load i64, i64* %9885, align 8
  %9887 = add i64 %9886, -8
  %9888 = inttoptr i64 %9887 to i64*
  store i64 %9882, i64* %9888
  store i64 %9887, i64* %9885, align 8
  %9889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9880, i64* %9889, align 8
  store %struct.Memory* %loadMem1_4015bc, %struct.Memory** %MEMORY
  %loadMem2_4015bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4015bc = load i64, i64* %3
  %9890 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_4015bc)
  store %struct.Memory* %9890, %struct.Memory** %MEMORY
  %loadMem_4015c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9892 = getelementptr inbounds %struct.GPR, %struct.GPR* %9891, i32 0, i32 33
  %9893 = getelementptr inbounds %struct.Reg, %struct.Reg* %9892, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %9893 to i64*
  %9894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9895 = getelementptr inbounds %struct.GPR, %struct.GPR* %9894, i32 0, i32 15
  %9896 = getelementptr inbounds %struct.Reg, %struct.Reg* %9895, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %9896 to i64*
  %9897 = load i64, i64* %RBP.i14
  %9898 = sub i64 %9897, 208
  %9899 = load i64, i64* %PC.i13
  %9900 = add i64 %9899, 7
  store i64 %9900, i64* %PC.i13
  %9901 = inttoptr i64 %9898 to i32*
  %9902 = load i32, i32* %9901
  %9903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9903, align 1
  %9904 = and i32 %9902, 255
  %9905 = call i32 @llvm.ctpop.i32(i32 %9904)
  %9906 = trunc i32 %9905 to i8
  %9907 = and i8 %9906, 1
  %9908 = xor i8 %9907, 1
  %9909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9908, i8* %9909, align 1
  %9910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9910, align 1
  %9911 = icmp eq i32 %9902, 0
  %9912 = zext i1 %9911 to i8
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9912, i8* %9913, align 1
  %9914 = lshr i32 %9902, 31
  %9915 = trunc i32 %9914 to i8
  %9916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9915, i8* %9916, align 1
  %9917 = lshr i32 %9902, 31
  %9918 = xor i32 %9914, %9917
  %9919 = add i32 %9918, %9917
  %9920 = icmp eq i32 %9919, 2
  %9921 = zext i1 %9920 to i8
  %9922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9921, i8* %9922, align 1
  store %struct.Memory* %loadMem_4015c1, %struct.Memory** %MEMORY
  %loadMem_4015c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9924 = getelementptr inbounds %struct.GPR, %struct.GPR* %9923, i32 0, i32 33
  %9925 = getelementptr inbounds %struct.Reg, %struct.Reg* %9924, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %9925 to i64*
  %9926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9927 = getelementptr inbounds %struct.GPR, %struct.GPR* %9926, i32 0, i32 1
  %9928 = getelementptr inbounds %struct.Reg, %struct.Reg* %9927, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %9928 to i32*
  %9929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9930 = getelementptr inbounds %struct.GPR, %struct.GPR* %9929, i32 0, i32 15
  %9931 = getelementptr inbounds %struct.Reg, %struct.Reg* %9930, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %9931 to i64*
  %9932 = load i64, i64* %RBP.i12
  %9933 = sub i64 %9932, 316
  %9934 = load i32, i32* %EAX.i
  %9935 = zext i32 %9934 to i64
  %9936 = load i64, i64* %PC.i11
  %9937 = add i64 %9936, 6
  store i64 %9937, i64* %PC.i11
  %9938 = inttoptr i64 %9933 to i32*
  store i32 %9934, i32* %9938
  store %struct.Memory* %loadMem_4015c8, %struct.Memory** %MEMORY
  %loadMem_4015ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %9939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9940 = getelementptr inbounds %struct.GPR, %struct.GPR* %9939, i32 0, i32 33
  %9941 = getelementptr inbounds %struct.Reg, %struct.Reg* %9940, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %9941 to i64*
  %9942 = load i64, i64* %PC.i10
  %9943 = add i64 %9942, 11
  %9944 = load i64, i64* %PC.i10
  %9945 = add i64 %9944, 6
  %9946 = load i64, i64* %PC.i10
  %9947 = add i64 %9946, 6
  store i64 %9947, i64* %PC.i10
  %9948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9949 = load i8, i8* %9948, align 1
  store i8 %9949, i8* %BRANCH_TAKEN, align 1
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9951 = icmp ne i8 %9949, 0
  %9952 = select i1 %9951, i64 %9943, i64 %9945
  store i64 %9952, i64* %9950, align 8
  store %struct.Memory* %loadMem_4015ce, %struct.Memory** %MEMORY
  %loadBr_4015ce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4015ce = icmp eq i8 %loadBr_4015ce, 1
  br i1 %cmpBr_4015ce, label %block_.L_4015d9, label %block_4015d4

block_4015d4:                                     ; preds = %block_.L_4015a0
  %loadMem_4015d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9954 = getelementptr inbounds %struct.GPR, %struct.GPR* %9953, i32 0, i32 33
  %9955 = getelementptr inbounds %struct.Reg, %struct.Reg* %9954, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %9955 to i64*
  %9956 = load i64, i64* %PC.i9
  %9957 = add i64 %9956, -3150
  %9958 = load i64, i64* %PC.i9
  %9959 = add i64 %9958, 5
  store i64 %9959, i64* %PC.i9
  %9960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9957, i64* %9960, align 8
  store %struct.Memory* %loadMem_4015d4, %struct.Memory** %MEMORY
  br label %block_.L_400986

block_.L_4015d9:                                  ; preds = %block_.L_4015a0
  %loadMem_4015d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9962 = getelementptr inbounds %struct.GPR, %struct.GPR* %9961, i32 0, i32 33
  %9963 = getelementptr inbounds %struct.Reg, %struct.Reg* %9962, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %9963 to i64*
  %9964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9965 = getelementptr inbounds %struct.GPR, %struct.GPR* %9964, i32 0, i32 15
  %9966 = getelementptr inbounds %struct.Reg, %struct.Reg* %9965, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %9966 to i64*
  %9967 = load i64, i64* %RBP.i8
  %9968 = sub i64 %9967, 4
  %9969 = load i64, i64* %PC.i7
  %9970 = add i64 %9969, 7
  store i64 %9970, i64* %PC.i7
  %9971 = inttoptr i64 %9968 to i32*
  store i32 0, i32* %9971
  store %struct.Memory* %loadMem_4015d9, %struct.Memory** %MEMORY
  br label %block_.L_4015e0

block_.L_4015e0:                                  ; preds = %block_.L_4015d9, %block_.L_40093d
  %loadMem_4015e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9973 = getelementptr inbounds %struct.GPR, %struct.GPR* %9972, i32 0, i32 33
  %9974 = getelementptr inbounds %struct.Reg, %struct.Reg* %9973, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %9974 to i64*
  %9975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9976 = getelementptr inbounds %struct.GPR, %struct.GPR* %9975, i32 0, i32 1
  %9977 = getelementptr inbounds %struct.Reg, %struct.Reg* %9976, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %9977 to i64*
  %9978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9979 = getelementptr inbounds %struct.GPR, %struct.GPR* %9978, i32 0, i32 15
  %9980 = getelementptr inbounds %struct.Reg, %struct.Reg* %9979, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %9980 to i64*
  %9981 = load i64, i64* %RBP.i6
  %9982 = sub i64 %9981, 4
  %9983 = load i64, i64* %PC.i5
  %9984 = add i64 %9983, 3
  store i64 %9984, i64* %PC.i5
  %9985 = inttoptr i64 %9982 to i32*
  %9986 = load i32, i32* %9985
  %9987 = zext i32 %9986 to i64
  store i64 %9987, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_4015e0, %struct.Memory** %MEMORY
  %loadMem_4015e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9989 = getelementptr inbounds %struct.GPR, %struct.GPR* %9988, i32 0, i32 33
  %9990 = getelementptr inbounds %struct.Reg, %struct.Reg* %9989, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %9990 to i64*
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9992 = getelementptr inbounds %struct.GPR, %struct.GPR* %9991, i32 0, i32 13
  %9993 = getelementptr inbounds %struct.Reg, %struct.Reg* %9992, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %9993 to i64*
  %9994 = load i64, i64* %RSP.i
  %9995 = load i64, i64* %PC.i4
  %9996 = add i64 %9995, 7
  store i64 %9996, i64* %PC.i4
  %9997 = add i64 320, %9994
  store i64 %9997, i64* %RSP.i, align 8
  %9998 = icmp ult i64 %9997, %9994
  %9999 = icmp ult i64 %9997, 320
  %10000 = or i1 %9998, %9999
  %10001 = zext i1 %10000 to i8
  %10002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10001, i8* %10002, align 1
  %10003 = trunc i64 %9997 to i32
  %10004 = and i32 %10003, 255
  %10005 = call i32 @llvm.ctpop.i32(i32 %10004)
  %10006 = trunc i32 %10005 to i8
  %10007 = and i8 %10006, 1
  %10008 = xor i8 %10007, 1
  %10009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10008, i8* %10009, align 1
  %10010 = xor i64 320, %9994
  %10011 = xor i64 %10010, %9997
  %10012 = lshr i64 %10011, 4
  %10013 = trunc i64 %10012 to i8
  %10014 = and i8 %10013, 1
  %10015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10014, i8* %10015, align 1
  %10016 = icmp eq i64 %9997, 0
  %10017 = zext i1 %10016 to i8
  %10018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10017, i8* %10018, align 1
  %10019 = lshr i64 %9997, 63
  %10020 = trunc i64 %10019 to i8
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10020, i8* %10021, align 1
  %10022 = lshr i64 %9994, 63
  %10023 = xor i64 %10019, %10022
  %10024 = add i64 %10023, %10019
  %10025 = icmp eq i64 %10024, 2
  %10026 = zext i1 %10025 to i8
  %10027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10026, i8* %10027, align 1
  store %struct.Memory* %loadMem_4015e3, %struct.Memory** %MEMORY
  %loadMem_4015ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10029 = getelementptr inbounds %struct.GPR, %struct.GPR* %10028, i32 0, i32 33
  %10030 = getelementptr inbounds %struct.Reg, %struct.Reg* %10029, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %10030 to i64*
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 15
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %10033 to i64*
  %10034 = load i64, i64* %PC.i2
  %10035 = add i64 %10034, 1
  store i64 %10035, i64* %PC.i2
  %10036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10037 = load i64, i64* %10036, align 8
  %10038 = add i64 %10037, 8
  %10039 = inttoptr i64 %10037 to i64*
  %10040 = load i64, i64* %10039
  store i64 %10040, i64* %RBP.i3, align 8
  store i64 %10038, i64* %10036, align 8
  store %struct.Memory* %loadMem_4015ea, %struct.Memory** %MEMORY
  %loadMem_4015eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10042 = getelementptr inbounds %struct.GPR, %struct.GPR* %10041, i32 0, i32 33
  %10043 = getelementptr inbounds %struct.Reg, %struct.Reg* %10042, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %10043 to i64*
  %10044 = load i64, i64* %PC.i1
  %10045 = add i64 %10044, 1
  store i64 %10045, i64* %PC.i1
  %10046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10048 = load i64, i64* %10047, align 8
  %10049 = inttoptr i64 %10048 to i64*
  %10050 = load i64, i64* %10049
  store i64 %10050, i64* %10046, align 8
  %10051 = add i64 %10048, 8
  store i64 %10051, i64* %10047, align 8
  store %struct.Memory* %loadMem_4015eb, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4015eb
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x140___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 320
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 320
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 320, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x186a0__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 184
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 11
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 100000, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 172
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_400981(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x401948___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x401948_type* @G__0x401948 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xac__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdi_8____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4008f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xac__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i8*
  %16 = load i8, i8* %15
  %17 = sext i8 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x63___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 99
  %14 = icmp ult i32 %9, 99
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 99, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4008ff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40096d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 8
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i64*
  %22 = load i64, i64* %21
  store i64 %22, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.atol_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12, align 1
  %13 = trunc i64 %9 to i32
  %14 = and i32 %13, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i64 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %9, 63
  %25 = trunc i64 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %9, 63
  %28 = xor i64 %24, %27
  %29 = add i64 %28, %27
  %30 = icmp eq i64 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_40093d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400968(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x40194b___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x40194b_type* @G__0x40194b to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x602080___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x602080_type* @G_0x602080 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.fprintf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4015e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400898(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400986(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.time_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf71__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3961
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf71__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3961
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf71__rip____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3961
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__0x602098(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__0x6020a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020a0_type* @G_0x6020a0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020b0_type* @G_0x6020b0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xb8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 176
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf2d__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3893
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf2d__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3893
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 0, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 12
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xe__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 14
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x159__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 345
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xd2__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 210
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RAX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x383__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 899
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x268__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 616
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 0, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x5d__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 93
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 112
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 120
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 128
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 136
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x1__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 1, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400b66(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x8000000000000000___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x70__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x78__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x80__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x88__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_0x602098___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %18 = fmul double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 112
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x80__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x88__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x78__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__xmm0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 5
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to i64*
  %15 = load i64, i64* %14, align 1
  store i64 %15, i64* %RCX, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = xor i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17, align 1
  %18 = trunc i64 %16 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %16, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %16, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 5
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  store i64 %12, i64* %15, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x1___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 1, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400a99(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xac__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 172
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400ba0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x78__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x80__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x88__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.POUT(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd78__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3456
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd78__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 3456
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__0x6020c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x28__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400cea(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020c8___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_0x6020d0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %18 = fadd double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_0x6020d8___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %18 = fadd double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6020e0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6020d8___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_0x6020e0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %18 = fadd double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6020d0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400bdc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400d31(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020d0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020d8___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020e0___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400d67(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6020c0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6020c0_type* @G__0x6020c0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.PA(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400d39(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400dae(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x38__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400e60(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %9 = sub i32 %8, 1
  %10 = icmp ult i32 %8, 1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400ded(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400df8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %9 = sub i32 %8, 2
  %10 = icmp ult i32 %8, 2
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 2
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_400e16(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e21(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_400e3f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e4a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e4f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400dc1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400ea2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x602090___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x602090___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x6020ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x6020a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x40__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400fce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x602090___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020ac___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x602090___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RAX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020a8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x6020ac___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020a8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %13 = shl i64 %9, 32
  %14 = ashr exact i64 %13, 32
  %15 = sext i32 %12 to i64
  %16 = mul i64 %15, %14
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %RAX, align 8
  %19 = shl i64 %16, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp ne i64 %20, %16
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %17, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %31, align 1
  %32 = lshr i32 %17, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x6020ac___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %13 = shl i64 %9, 32
  %14 = ashr exact i64 %13, 32
  %15 = sext i32 %12 to i64
  %16 = mul i64 %15, %14
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %RCX, align 8
  %19 = shl i64 %16, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp ne i64 %20, %16
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %17, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %31, align 1
  %32 = lshr i32 %17, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x6020ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x602090___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x6020a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x6020a8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__eax___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020c0___rdx_8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RDX
  %12 = mul i64 %11, 8
  %13 = add i64 %12, 6299840
  %14 = bitcast %union.vec128_t* %XMM0 to i8*
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 9
  store i64 %16, i64* %PC
  %17 = bitcast i8* %14 to double*
  %18 = load double, double* %17, align 1
  %19 = inttoptr i64 %13 to double*
  store double %18, double* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x6020a8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %13 = shl i64 %9, 32
  %14 = ashr exact i64 %13, 32
  %15 = sext i32 %12 to i64
  %16 = mul i64 %15, %14
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %RAX, align 8
  %19 = shl i64 %16, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp ne i64 %20, %16
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %17, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %31, align 1
  %32 = lshr i32 %17, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ecb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40101d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x6020ac___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x90b__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2323
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 144
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 152
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x48__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401234(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x8d5__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2269
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x602098___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020b0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6020b0_type* @G_0x6020b0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 224
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm3___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM3 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0xe8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 232
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0xf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 240
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sin_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xe8__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0xf8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 248
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.cos_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xf8__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x98__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x100__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 256
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x98__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x108__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 264
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x108__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xe0__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fsub double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x100__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm2___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.atan_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x7fd__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2053
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xf0__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 144
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x602098___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x110__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 272
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x118__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 280
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0x120__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 288
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x120__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x128__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 296
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x128__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x130__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 304
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x138__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 312
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x138__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x118__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x130__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x110__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 152
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40103d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40127f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6a1__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1705
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 160
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x50__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 80
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4012e2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xa0__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.P3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4012a7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40132d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xa0__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xa0__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x603__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1547
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x5cb__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1491
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x5e3__rip____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1515
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__0x6020c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__0x6020d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x58__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4013ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.P0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401389(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4013fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x6020ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x60__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401494(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x602090___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40141a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4014d6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x462__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1130
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x68__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401535(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.log_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd_0x6020a0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020a0_type* @G_0x6020a0 to double*)
  %18 = fdiv double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.exp_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sqrt_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4014ee(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_401580(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x68__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4015a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4009eb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x401965___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x401965_type* @G__0x401965 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.printf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4015d9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x140___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 320, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 320
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 320, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
