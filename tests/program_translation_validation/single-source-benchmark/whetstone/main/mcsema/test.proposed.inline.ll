; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400370__init_type = type <{ [23 x i8] }>
%seg_400390__text_type = type <{ [354 x i8] }>
%seg_4004f4__fini_type = type <{ [9 x i8] }>
%seg_400500__rodata_type = type <{ [4 x i8] }>
%seg_400504__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400538__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%G_0x462__rip__type = type <{ [8 x i8] }>
%G_0x5cb__rip__type = type <{ [8 x i8] }>
%G_0x5e3__rip__type = type <{ [8 x i8] }>
%G_0x602080_type = type <{ [8 x i8] }>
%G_0x602090_type = type <{ [4 x i8] }>
%G_0x602098_type = type <{ [16 x i8] }>
%G_0x6020a0_type = type <{ [16 x i8] }>
%G_0x6020a8_type = type <{ [4 x i8] }>
%G_0x6020ac_type = type <{ [4 x i8] }>
%G_0x6020b0_type = type <{ [16 x i8] }>
%G_0x6020c8_type = type <{ [16 x i8] }>
%G_0x6020d0_type = type <{ [16 x i8] }>
%G_0x6020d8_type = type <{ [16 x i8] }>
%G_0x6020e0_type = type <{ [16 x i8] }>
%G_0x603__rip__type = type <{ [8 x i8] }>
%G_0x6a1__rip__type = type <{ [8 x i8] }>
%G_0x7fd__rip__type = type <{ [8 x i8] }>
%G_0x8d5__rip__type = type <{ [8 x i8] }>
%G_0x90b__rip__type = type <{ [8 x i8] }>
%G_0xd78__rip__type = type <{ [8 x i8] }>
%G_0xf2d__rip__type = type <{ [8 x i8] }>
%G_0xf71__rip__type = type <{ [8 x i8] }>
%G__0x4018f8_type = type <{ [8 x i8] }>
%G__0x4018fb_type = type <{ [8 x i8] }>
%G__0x401915_type = type <{ [8 x i8] }>
%G__0x6020c0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400370__init = internal constant %seg_400370__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05}\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_400390__text = internal constant %seg_400390__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\F0\04@\00H\C7\C1\80\04@\00H\C7\C7x\04@\00\FF\156\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\E1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\CF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\BE\09 \00UH\8D-\BE\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\BF\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_4004f4__fini = internal constant %seg_4004f4__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400500__rodata = internal constant %seg_400500__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400504__eh_frame_hdr = internal constant %seg_400504__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400538__eh_frame = internal constant %seg_400538__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0C\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x462__rip_ = global %G_0x462__rip__type zeroinitializer
@G_0x5cb__rip_ = global %G_0x5cb__rip__type zeroinitializer
@G_0x5e3__rip_ = global %G_0x5e3__rip__type zeroinitializer
@G_0x602080 = global %G_0x602080_type zeroinitializer
@G_0x602090 = global %G_0x602090_type zeroinitializer
@G_0x602098 = global %G_0x602098_type zeroinitializer
@G_0x6020a0 = global %G_0x6020a0_type zeroinitializer
@G_0x6020a8 = global %G_0x6020a8_type zeroinitializer
@G_0x6020ac = global %G_0x6020ac_type zeroinitializer
@G_0x6020b0 = global %G_0x6020b0_type zeroinitializer
@G_0x6020c8 = global %G_0x6020c8_type zeroinitializer
@G_0x6020d0 = global %G_0x6020d0_type zeroinitializer
@G_0x6020d8 = global %G_0x6020d8_type zeroinitializer
@G_0x6020e0 = global %G_0x6020e0_type zeroinitializer
@G_0x603__rip_ = global %G_0x603__rip__type zeroinitializer
@G_0x6a1__rip_ = global %G_0x6a1__rip__type zeroinitializer
@G_0x7fd__rip_ = global %G_0x7fd__rip__type zeroinitializer
@G_0x8d5__rip_ = global %G_0x8d5__rip__type zeroinitializer
@G_0x90b__rip_ = global %G_0x90b__rip__type zeroinitializer
@G_0xd78__rip_ = global %G_0xd78__rip__type zeroinitializer
@G_0xf2d__rip_ = global %G_0xf2d__rip__type zeroinitializer
@G_0xf71__rip_ = global %G_0xf71__rip__type zeroinitializer
@G__0x4018f8 = global %G__0x4018f8_type zeroinitializer
@G__0x4018fb = global %G__0x4018fb_type zeroinitializer
@G__0x401915 = global %G__0x401915_type zeroinitializer
@G__0x6020c0 = global %G__0x6020c0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_4015a0.POUT(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401610.PA(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401740.P3(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4017c0.P0(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @main(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_400810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_400810, %struct.Memory** %MEMORY
  %loadMem_400811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i16 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i16
  %27 = load i64, i64* %PC.i15
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i15
  store i64 %26, i64* %RBP.i17, align 8
  store %struct.Memory* %loadMem_400811, %struct.Memory** %MEMORY
  %loadMem_400814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i25 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i25
  %36 = load i64, i64* %PC.i24
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i24
  %38 = sub i64 %35, 320
  store i64 %38, i64* %RSP.i25, align 8
  %39 = icmp ult i64 %35, 320
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 320, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_400814, %struct.Memory** %MEMORY
  %loadMem_40081b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 15
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RBP.i80 = bitcast %union.anon* %72 to i64*
  %73 = load i64, i64* %RBP.i80
  %74 = sub i64 %73, 4
  %75 = load i64, i64* %PC.i79
  %76 = add i64 %75, 7
  store i64 %76, i64* %PC.i79
  %77 = inttoptr i64 %74 to i32*
  store i32 0, i32* %77
  store %struct.Memory* %loadMem_40081b, %struct.Memory** %MEMORY
  %loadMem_400822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %79 = getelementptr inbounds %struct.GPR, %struct.GPR* %78, i32 0, i32 33
  %80 = getelementptr inbounds %struct.Reg, %struct.Reg* %79, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %80 to i64*
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.GPR, %struct.GPR* %81, i32 0, i32 11
  %83 = getelementptr inbounds %struct.Reg, %struct.Reg* %82, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %83 to i32*
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %85 = getelementptr inbounds %struct.GPR, %struct.GPR* %84, i32 0, i32 15
  %86 = getelementptr inbounds %struct.Reg, %struct.Reg* %85, i32 0, i32 0
  %RBP.i85 = bitcast %union.anon* %86 to i64*
  %87 = load i64, i64* %RBP.i85
  %88 = sub i64 %87, 8
  %89 = load i32, i32* %EDI.i
  %90 = zext i32 %89 to i64
  %91 = load i64, i64* %PC.i84
  %92 = add i64 %91, 3
  store i64 %92, i64* %PC.i84
  %93 = inttoptr i64 %88 to i32*
  store i32 %89, i32* %93
  store %struct.Memory* %loadMem_400822, %struct.Memory** %MEMORY
  %loadMem_400825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %95 = getelementptr inbounds %struct.GPR, %struct.GPR* %94, i32 0, i32 33
  %96 = getelementptr inbounds %struct.Reg, %struct.Reg* %95, i32 0, i32 0
  %PC.i1109 = bitcast %union.anon* %96 to i64*
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 9
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %RSI.i1110 = bitcast %union.anon* %99 to i64*
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %101 = getelementptr inbounds %struct.GPR, %struct.GPR* %100, i32 0, i32 15
  %102 = getelementptr inbounds %struct.Reg, %struct.Reg* %101, i32 0, i32 0
  %RBP.i1111 = bitcast %union.anon* %102 to i64*
  %103 = load i64, i64* %RBP.i1111
  %104 = sub i64 %103, 16
  %105 = load i64, i64* %RSI.i1110
  %106 = load i64, i64* %PC.i1109
  %107 = add i64 %106, 4
  store i64 %107, i64* %PC.i1109
  %108 = inttoptr i64 %104 to i64*
  store i64 %105, i64* %108
  store %struct.Memory* %loadMem_400825, %struct.Memory** %MEMORY
  %loadMem_400829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %110 = getelementptr inbounds %struct.GPR, %struct.GPR* %109, i32 0, i32 33
  %111 = getelementptr inbounds %struct.Reg, %struct.Reg* %110, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %111 to i64*
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 15
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %RBP.i1137 = bitcast %union.anon* %114 to i64*
  %115 = load i64, i64* %RBP.i1137
  %116 = sub i64 %115, 184
  %117 = load i64, i64* %PC.i1136
  %118 = add i64 %117, 11
  store i64 %118, i64* %PC.i1136
  %119 = inttoptr i64 %116 to i64*
  store i64 100000, i64* %119
  store %struct.Memory* %loadMem_400829, %struct.Memory** %MEMORY
  %loadMem_400834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 33
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %122 to i64*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 15
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %RBP.i1150 = bitcast %union.anon* %125 to i64*
  %126 = load i64, i64* %RBP.i1150
  %127 = sub i64 %126, 208
  %128 = load i64, i64* %PC.i1149
  %129 = add i64 %128, 10
  store i64 %129, i64* %PC.i1149
  %130 = inttoptr i64 %127 to i32*
  store i32 0, i32* %130
  store %struct.Memory* %loadMem_400834, %struct.Memory** %MEMORY
  %loadMem_40083e = load %struct.Memory*, %struct.Memory** %MEMORY
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 33
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 15
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %RBP.i1166 = bitcast %union.anon* %136 to i64*
  %137 = load i64, i64* %RBP.i1166
  %138 = sub i64 %137, 172
  %139 = load i64, i64* %PC.i1165
  %140 = add i64 %139, 10
  store i64 %140, i64* %PC.i1165
  %141 = inttoptr i64 %138 to i32*
  store i32 1, i32* %141
  store %struct.Memory* %loadMem_40083e, %struct.Memory** %MEMORY
  br label %block_.L_400848

block_.L_400848:                                  ; preds = %block_.L_40091d, %entry
  %loadMem_400848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.GPR, %struct.GPR* %142, i32 0, i32 33
  %144 = getelementptr inbounds %struct.Reg, %struct.Reg* %143, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %144 to i64*
  %145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %146 = getelementptr inbounds %struct.GPR, %struct.GPR* %145, i32 0, i32 1
  %147 = getelementptr inbounds %struct.Reg, %struct.Reg* %146, i32 0, i32 0
  %RAX.i1199 = bitcast %union.anon* %147 to i64*
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %149 = getelementptr inbounds %struct.GPR, %struct.GPR* %148, i32 0, i32 15
  %150 = getelementptr inbounds %struct.Reg, %struct.Reg* %149, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %150 to i64*
  %151 = load i64, i64* %RBP.i1200
  %152 = sub i64 %151, 172
  %153 = load i64, i64* %PC.i1198
  %154 = add i64 %153, 6
  store i64 %154, i64* %PC.i1198
  %155 = inttoptr i64 %152 to i32*
  %156 = load i32, i32* %155
  %157 = zext i32 %156 to i64
  store i64 %157, i64* %RAX.i1199, align 8
  store %struct.Memory* %loadMem_400848, %struct.Memory** %MEMORY
  %loadMem_40084e = load %struct.Memory*, %struct.Memory** %MEMORY
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 33
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %160 to i64*
  %161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %162 = getelementptr inbounds %struct.GPR, %struct.GPR* %161, i32 0, i32 1
  %163 = getelementptr inbounds %struct.Reg, %struct.Reg* %162, i32 0, i32 0
  %EAX.i1220 = bitcast %union.anon* %163 to i32*
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %165 = getelementptr inbounds %struct.GPR, %struct.GPR* %164, i32 0, i32 15
  %166 = getelementptr inbounds %struct.Reg, %struct.Reg* %165, i32 0, i32 0
  %RBP.i1221 = bitcast %union.anon* %166 to i64*
  %167 = load i32, i32* %EAX.i1220
  %168 = zext i32 %167 to i64
  %169 = load i64, i64* %RBP.i1221
  %170 = sub i64 %169, 8
  %171 = load i64, i64* %PC.i1219
  %172 = add i64 %171, 3
  store i64 %172, i64* %PC.i1219
  %173 = inttoptr i64 %170 to i32*
  %174 = load i32, i32* %173
  %175 = sub i32 %167, %174
  %176 = icmp ult i32 %167, %174
  %177 = zext i1 %176 to i8
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %177, i8* %178, align 1
  %179 = and i32 %175, 255
  %180 = call i32 @llvm.ctpop.i32(i32 %179)
  %181 = trunc i32 %180 to i8
  %182 = and i8 %181, 1
  %183 = xor i8 %182, 1
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %183, i8* %184, align 1
  %185 = xor i32 %174, %167
  %186 = xor i32 %185, %175
  %187 = lshr i32 %186, 4
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %189, i8* %190, align 1
  %191 = icmp eq i32 %175, 0
  %192 = zext i1 %191 to i8
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %192, i8* %193, align 1
  %194 = lshr i32 %175, 31
  %195 = trunc i32 %194 to i8
  %196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %195, i8* %196, align 1
  %197 = lshr i32 %167, 31
  %198 = lshr i32 %174, 31
  %199 = xor i32 %198, %197
  %200 = xor i32 %194, %197
  %201 = add i32 %200, %199
  %202 = icmp eq i32 %201, 2
  %203 = zext i1 %202 to i8
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %203, i8* %204, align 1
  store %struct.Memory* %loadMem_40084e, %struct.Memory** %MEMORY
  %loadMem_400851 = load %struct.Memory*, %struct.Memory** %MEMORY
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %206 = getelementptr inbounds %struct.GPR, %struct.GPR* %205, i32 0, i32 33
  %207 = getelementptr inbounds %struct.Reg, %struct.Reg* %206, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %207 to i64*
  %208 = load i64, i64* %PC.i1218
  %209 = add i64 %208, 224
  %210 = load i64, i64* %PC.i1218
  %211 = add i64 %210, 6
  %212 = load i64, i64* %PC.i1218
  %213 = add i64 %212, 6
  store i64 %213, i64* %PC.i1218
  %214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %215 = load i8, i8* %214, align 1
  %216 = icmp ne i8 %215, 0
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %218 = load i8, i8* %217, align 1
  %219 = icmp ne i8 %218, 0
  %220 = xor i1 %216, %219
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i8
  store i8 %222, i8* %BRANCH_TAKEN, align 1
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %224 = select i1 %220, i64 %211, i64 %209
  store i64 %224, i64* %223, align 8
  store %struct.Memory* %loadMem_400851, %struct.Memory** %MEMORY
  %loadBr_400851 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400851 = icmp eq i8 %loadBr_400851, 1
  br i1 %cmpBr_400851, label %block_.L_400931, label %block_400857

block_400857:                                     ; preds = %block_.L_400848
  %loadMem_400857 = load %struct.Memory*, %struct.Memory** %MEMORY
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 33
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 9
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %RSI.i1217 = bitcast %union.anon* %230 to i64*
  %231 = load i64, i64* %PC.i1216
  %232 = add i64 %231, 10
  store i64 %232, i64* %PC.i1216
  store i64 ptrtoint (%G__0x4018f8_type* @G__0x4018f8 to i64), i64* %RSI.i1217, align 8
  store %struct.Memory* %loadMem_400857, %struct.Memory** %MEMORY
  %loadMem_400861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %234 = getelementptr inbounds %struct.GPR, %struct.GPR* %233, i32 0, i32 33
  %235 = getelementptr inbounds %struct.Reg, %struct.Reg* %234, i32 0, i32 0
  %PC.i1214 = bitcast %union.anon* %235 to i64*
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %237 = getelementptr inbounds %struct.GPR, %struct.GPR* %236, i32 0, i32 1
  %238 = getelementptr inbounds %struct.Reg, %struct.Reg* %237, i32 0, i32 0
  %RAX.i1215 = bitcast %union.anon* %238 to i64*
  %239 = load i64, i64* %PC.i1214
  %240 = add i64 %239, 5
  store i64 %240, i64* %PC.i1214
  store i64 2, i64* %RAX.i1215, align 8
  store %struct.Memory* %loadMem_400861, %struct.Memory** %MEMORY
  %loadMem_400866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %242 = getelementptr inbounds %struct.GPR, %struct.GPR* %241, i32 0, i32 33
  %243 = getelementptr inbounds %struct.Reg, %struct.Reg* %242, i32 0, i32 0
  %PC.i1211 = bitcast %union.anon* %243 to i64*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %245 = getelementptr inbounds %struct.GPR, %struct.GPR* %244, i32 0, i32 1
  %246 = getelementptr inbounds %struct.Reg, %struct.Reg* %245, i32 0, i32 0
  %EAX.i1212 = bitcast %union.anon* %246 to i32*
  %247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %248 = getelementptr inbounds %struct.GPR, %struct.GPR* %247, i32 0, i32 7
  %249 = getelementptr inbounds %struct.Reg, %struct.Reg* %248, i32 0, i32 0
  %RDX.i1213 = bitcast %union.anon* %249 to i64*
  %250 = load i32, i32* %EAX.i1212
  %251 = zext i32 %250 to i64
  %252 = load i64, i64* %PC.i1211
  %253 = add i64 %252, 2
  store i64 %253, i64* %PC.i1211
  %254 = and i64 %251, 4294967295
  store i64 %254, i64* %RDX.i1213, align 8
  store %struct.Memory* %loadMem_400866, %struct.Memory** %MEMORY
  %loadMem_400868 = load %struct.Memory*, %struct.Memory** %MEMORY
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %256 = getelementptr inbounds %struct.GPR, %struct.GPR* %255, i32 0, i32 33
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %259 = getelementptr inbounds %struct.GPR, %struct.GPR* %258, i32 0, i32 5
  %260 = getelementptr inbounds %struct.Reg, %struct.Reg* %259, i32 0, i32 0
  %RCX.i1209 = bitcast %union.anon* %260 to i64*
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %262 = getelementptr inbounds %struct.GPR, %struct.GPR* %261, i32 0, i32 15
  %263 = getelementptr inbounds %struct.Reg, %struct.Reg* %262, i32 0, i32 0
  %RBP.i1210 = bitcast %union.anon* %263 to i64*
  %264 = load i64, i64* %RBP.i1210
  %265 = sub i64 %264, 16
  %266 = load i64, i64* %PC.i1208
  %267 = add i64 %266, 4
  store i64 %267, i64* %PC.i1208
  %268 = inttoptr i64 %265 to i64*
  %269 = load i64, i64* %268
  store i64 %269, i64* %RCX.i1209, align 8
  store %struct.Memory* %loadMem_400868, %struct.Memory** %MEMORY
  %loadMem_40086c = load %struct.Memory*, %struct.Memory** %MEMORY
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %271 = getelementptr inbounds %struct.GPR, %struct.GPR* %270, i32 0, i32 33
  %272 = getelementptr inbounds %struct.Reg, %struct.Reg* %271, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %272 to i64*
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %274 = getelementptr inbounds %struct.GPR, %struct.GPR* %273, i32 0, i32 11
  %275 = getelementptr inbounds %struct.Reg, %struct.Reg* %274, i32 0, i32 0
  %RDI.i1206 = bitcast %union.anon* %275 to i64*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %277 = getelementptr inbounds %struct.GPR, %struct.GPR* %276, i32 0, i32 15
  %278 = getelementptr inbounds %struct.Reg, %struct.Reg* %277, i32 0, i32 0
  %RBP.i1207 = bitcast %union.anon* %278 to i64*
  %279 = load i64, i64* %RBP.i1207
  %280 = sub i64 %279, 172
  %281 = load i64, i64* %PC.i1205
  %282 = add i64 %281, 7
  store i64 %282, i64* %PC.i1205
  %283 = inttoptr i64 %280 to i32*
  %284 = load i32, i32* %283
  %285 = sext i32 %284 to i64
  store i64 %285, i64* %RDI.i1206, align 8
  store %struct.Memory* %loadMem_40086c, %struct.Memory** %MEMORY
  %loadMem_400873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %287 = getelementptr inbounds %struct.GPR, %struct.GPR* %286, i32 0, i32 33
  %288 = getelementptr inbounds %struct.Reg, %struct.Reg* %287, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %288 to i64*
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %290 = getelementptr inbounds %struct.GPR, %struct.GPR* %289, i32 0, i32 5
  %291 = getelementptr inbounds %struct.Reg, %struct.Reg* %290, i32 0, i32 0
  %RCX.i1203 = bitcast %union.anon* %291 to i64*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %293 = getelementptr inbounds %struct.GPR, %struct.GPR* %292, i32 0, i32 11
  %294 = getelementptr inbounds %struct.Reg, %struct.Reg* %293, i32 0, i32 0
  %RDI.i1204 = bitcast %union.anon* %294 to i64*
  %295 = load i64, i64* %RCX.i1203
  %296 = load i64, i64* %RDI.i1204
  %297 = mul i64 %296, 8
  %298 = add i64 %297, %295
  %299 = load i64, i64* %PC.i1202
  %300 = add i64 %299, 4
  store i64 %300, i64* %PC.i1202
  %301 = inttoptr i64 %298 to i64*
  %302 = load i64, i64* %301
  store i64 %302, i64* %RDI.i1204, align 8
  store %struct.Memory* %loadMem_400873, %struct.Memory** %MEMORY
  %loadMem1_400877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %304 = getelementptr inbounds %struct.GPR, %struct.GPR* %303, i32 0, i32 33
  %305 = getelementptr inbounds %struct.Reg, %struct.Reg* %304, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %305 to i64*
  %306 = load i64, i64* %PC.i1201
  %307 = add i64 %306, -519
  %308 = load i64, i64* %PC.i1201
  %309 = add i64 %308, 5
  %310 = load i64, i64* %PC.i1201
  %311 = add i64 %310, 5
  store i64 %311, i64* %PC.i1201
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %313 = load i64, i64* %312, align 8
  %314 = add i64 %313, -8
  %315 = inttoptr i64 %314 to i64*
  store i64 %309, i64* %315
  store i64 %314, i64* %312, align 8
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %307, i64* %316, align 8
  store %struct.Memory* %loadMem1_400877, %struct.Memory** %MEMORY
  %loadMem2_400877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400877 = load i64, i64* %3
  %317 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %loadMem2_400877)
  store %struct.Memory* %317, %struct.Memory** %MEMORY
  %loadMem_40087c = load %struct.Memory*, %struct.Memory** %MEMORY
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %319 = getelementptr inbounds %struct.GPR, %struct.GPR* %318, i32 0, i32 33
  %320 = getelementptr inbounds %struct.Reg, %struct.Reg* %319, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %320 to i64*
  %321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %322 = getelementptr inbounds %struct.GPR, %struct.GPR* %321, i32 0, i32 1
  %323 = getelementptr inbounds %struct.Reg, %struct.Reg* %322, i32 0, i32 0
  %EAX.i1197 = bitcast %union.anon* %323 to i32*
  %324 = load i32, i32* %EAX.i1197
  %325 = zext i32 %324 to i64
  %326 = load i64, i64* %PC.i1196
  %327 = add i64 %326, 3
  store i64 %327, i64* %PC.i1196
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %328, align 1
  %329 = and i32 %324, 255
  %330 = call i32 @llvm.ctpop.i32(i32 %329)
  %331 = trunc i32 %330 to i8
  %332 = and i8 %331, 1
  %333 = xor i8 %332, 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %333, i8* %334, align 1
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %335, align 1
  %336 = icmp eq i32 %324, 0
  %337 = zext i1 %336 to i8
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %337, i8* %338, align 1
  %339 = lshr i32 %324, 31
  %340 = trunc i32 %339 to i8
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %340, i8* %341, align 1
  %342 = lshr i32 %324, 31
  %343 = xor i32 %339, %342
  %344 = add i32 %343, %342
  %345 = icmp eq i32 %344, 2
  %346 = zext i1 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %346, i8* %347, align 1
  store %struct.Memory* %loadMem_40087c, %struct.Memory** %MEMORY
  %loadMem_40087f = load %struct.Memory*, %struct.Memory** %MEMORY
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %349 = getelementptr inbounds %struct.GPR, %struct.GPR* %348, i32 0, i32 33
  %350 = getelementptr inbounds %struct.Reg, %struct.Reg* %349, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %350 to i64*
  %351 = load i64, i64* %PC.i1195
  %352 = add i64 %351, 33
  %353 = load i64, i64* %PC.i1195
  %354 = add i64 %353, 6
  %355 = load i64, i64* %PC.i1195
  %356 = add i64 %355, 6
  store i64 %356, i64* %PC.i1195
  %357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %358 = load i8, i8* %357, align 1
  store i8 %358, i8* %BRANCH_TAKEN, align 1
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %360 = icmp ne i8 %358, 0
  %361 = select i1 %360, i64 %352, i64 %354
  store i64 %361, i64* %359, align 8
  store %struct.Memory* %loadMem_40087f, %struct.Memory** %MEMORY
  %loadBr_40087f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40087f = icmp eq i8 %loadBr_40087f, 1
  br i1 %cmpBr_40087f, label %block_.L_4008a0, label %block_400885

block_400885:                                     ; preds = %block_400857
  %loadMem_400885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %363 = getelementptr inbounds %struct.GPR, %struct.GPR* %362, i32 0, i32 33
  %364 = getelementptr inbounds %struct.Reg, %struct.Reg* %363, i32 0, i32 0
  %PC.i1192 = bitcast %union.anon* %364 to i64*
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %366 = getelementptr inbounds %struct.GPR, %struct.GPR* %365, i32 0, i32 1
  %367 = getelementptr inbounds %struct.Reg, %struct.Reg* %366, i32 0, i32 0
  %RAX.i1193 = bitcast %union.anon* %367 to i64*
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %369 = getelementptr inbounds %struct.GPR, %struct.GPR* %368, i32 0, i32 15
  %370 = getelementptr inbounds %struct.Reg, %struct.Reg* %369, i32 0, i32 0
  %RBP.i1194 = bitcast %union.anon* %370 to i64*
  %371 = load i64, i64* %RBP.i1194
  %372 = sub i64 %371, 16
  %373 = load i64, i64* %PC.i1192
  %374 = add i64 %373, 4
  store i64 %374, i64* %PC.i1192
  %375 = inttoptr i64 %372 to i64*
  %376 = load i64, i64* %375
  store i64 %376, i64* %RAX.i1193, align 8
  store %struct.Memory* %loadMem_400885, %struct.Memory** %MEMORY
  %loadMem_400889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %378 = getelementptr inbounds %struct.GPR, %struct.GPR* %377, i32 0, i32 33
  %379 = getelementptr inbounds %struct.Reg, %struct.Reg* %378, i32 0, i32 0
  %PC.i1189 = bitcast %union.anon* %379 to i64*
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %381 = getelementptr inbounds %struct.GPR, %struct.GPR* %380, i32 0, i32 5
  %382 = getelementptr inbounds %struct.Reg, %struct.Reg* %381, i32 0, i32 0
  %RCX.i1190 = bitcast %union.anon* %382 to i64*
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %384 = getelementptr inbounds %struct.GPR, %struct.GPR* %383, i32 0, i32 15
  %385 = getelementptr inbounds %struct.Reg, %struct.Reg* %384, i32 0, i32 0
  %RBP.i1191 = bitcast %union.anon* %385 to i64*
  %386 = load i64, i64* %RBP.i1191
  %387 = sub i64 %386, 172
  %388 = load i64, i64* %PC.i1189
  %389 = add i64 %388, 7
  store i64 %389, i64* %PC.i1189
  %390 = inttoptr i64 %387 to i32*
  %391 = load i32, i32* %390
  %392 = sext i32 %391 to i64
  store i64 %392, i64* %RCX.i1190, align 8
  store %struct.Memory* %loadMem_400889, %struct.Memory** %MEMORY
  %loadMem_400890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %394 = getelementptr inbounds %struct.GPR, %struct.GPR* %393, i32 0, i32 33
  %395 = getelementptr inbounds %struct.Reg, %struct.Reg* %394, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %395 to i64*
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %397 = getelementptr inbounds %struct.GPR, %struct.GPR* %396, i32 0, i32 1
  %398 = getelementptr inbounds %struct.Reg, %struct.Reg* %397, i32 0, i32 0
  %RAX.i1187 = bitcast %union.anon* %398 to i64*
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %400 = getelementptr inbounds %struct.GPR, %struct.GPR* %399, i32 0, i32 5
  %401 = getelementptr inbounds %struct.Reg, %struct.Reg* %400, i32 0, i32 0
  %RCX.i1188 = bitcast %union.anon* %401 to i64*
  %402 = load i64, i64* %RAX.i1187
  %403 = load i64, i64* %RCX.i1188
  %404 = mul i64 %403, 8
  %405 = add i64 %404, %402
  %406 = load i64, i64* %PC.i1186
  %407 = add i64 %406, 4
  store i64 %407, i64* %PC.i1186
  %408 = inttoptr i64 %405 to i64*
  %409 = load i64, i64* %408
  store i64 %409, i64* %RAX.i1187, align 8
  store %struct.Memory* %loadMem_400890, %struct.Memory** %MEMORY
  %loadMem_400894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %411 = getelementptr inbounds %struct.GPR, %struct.GPR* %410, i32 0, i32 33
  %412 = getelementptr inbounds %struct.Reg, %struct.Reg* %411, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %412 to i64*
  %413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %414 = getelementptr inbounds %struct.GPR, %struct.GPR* %413, i32 0, i32 1
  %415 = getelementptr inbounds %struct.Reg, %struct.Reg* %414, i32 0, i32 0
  %RAX.i1184 = bitcast %union.anon* %415 to i64*
  %416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %417 = getelementptr inbounds %struct.GPR, %struct.GPR* %416, i32 0, i32 7
  %418 = getelementptr inbounds %struct.Reg, %struct.Reg* %417, i32 0, i32 0
  %RDX.i1185 = bitcast %union.anon* %418 to i64*
  %419 = load i64, i64* %RAX.i1184
  %420 = load i64, i64* %PC.i1183
  %421 = add i64 %420, 3
  store i64 %421, i64* %PC.i1183
  %422 = inttoptr i64 %419 to i8*
  %423 = load i8, i8* %422
  %424 = sext i8 %423 to i64
  %425 = and i64 %424, 4294967295
  store i64 %425, i64* %RDX.i1185, align 8
  store %struct.Memory* %loadMem_400894, %struct.Memory** %MEMORY
  %loadMem_400897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %427 = getelementptr inbounds %struct.GPR, %struct.GPR* %426, i32 0, i32 33
  %428 = getelementptr inbounds %struct.Reg, %struct.Reg* %427, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %428 to i64*
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 7
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %431 to i32*
  %432 = load i32, i32* %EDX.i
  %433 = zext i32 %432 to i64
  %434 = load i64, i64* %PC.i1182
  %435 = add i64 %434, 3
  store i64 %435, i64* %PC.i1182
  %436 = sub i32 %432, 99
  %437 = icmp ult i32 %432, 99
  %438 = zext i1 %437 to i8
  %439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %438, i8* %439, align 1
  %440 = and i32 %436, 255
  %441 = call i32 @llvm.ctpop.i32(i32 %440)
  %442 = trunc i32 %441 to i8
  %443 = and i8 %442, 1
  %444 = xor i8 %443, 1
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %444, i8* %445, align 1
  %446 = xor i64 99, %433
  %447 = trunc i64 %446 to i32
  %448 = xor i32 %447, %436
  %449 = lshr i32 %448, 4
  %450 = trunc i32 %449 to i8
  %451 = and i8 %450, 1
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %451, i8* %452, align 1
  %453 = icmp eq i32 %436, 0
  %454 = zext i1 %453 to i8
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %454, i8* %455, align 1
  %456 = lshr i32 %436, 31
  %457 = trunc i32 %456 to i8
  %458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %457, i8* %458, align 1
  %459 = lshr i32 %432, 31
  %460 = xor i32 %456, %459
  %461 = add i32 %460, %459
  %462 = icmp eq i32 %461, 2
  %463 = zext i1 %462 to i8
  %464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %463, i8* %464, align 1
  store %struct.Memory* %loadMem_400897, %struct.Memory** %MEMORY
  %loadMem_40089a = load %struct.Memory*, %struct.Memory** %MEMORY
  %465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %466 = getelementptr inbounds %struct.GPR, %struct.GPR* %465, i32 0, i32 33
  %467 = getelementptr inbounds %struct.Reg, %struct.Reg* %466, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %467 to i64*
  %468 = load i64, i64* %PC.i1181
  %469 = add i64 %468, 21
  %470 = load i64, i64* %PC.i1181
  %471 = add i64 %470, 6
  %472 = load i64, i64* %PC.i1181
  %473 = add i64 %472, 6
  store i64 %473, i64* %PC.i1181
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %475 = load i8, i8* %474, align 1
  %476 = icmp eq i8 %475, 0
  %477 = zext i1 %476 to i8
  store i8 %477, i8* %BRANCH_TAKEN, align 1
  %478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %479 = select i1 %476, i64 %469, i64 %471
  store i64 %479, i64* %478, align 8
  store %struct.Memory* %loadMem_40089a, %struct.Memory** %MEMORY
  %loadBr_40089a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40089a = icmp eq i8 %loadBr_40089a, 1
  br i1 %cmpBr_40089a, label %block_.L_4008af, label %block_.L_4008a0

block_.L_4008a0:                                  ; preds = %block_400885, %block_400857
  %loadMem_4008a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %481 = getelementptr inbounds %struct.GPR, %struct.GPR* %480, i32 0, i32 33
  %482 = getelementptr inbounds %struct.Reg, %struct.Reg* %481, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %482 to i64*
  %483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %484 = getelementptr inbounds %struct.GPR, %struct.GPR* %483, i32 0, i32 15
  %485 = getelementptr inbounds %struct.Reg, %struct.Reg* %484, i32 0, i32 0
  %RBP.i1180 = bitcast %union.anon* %485 to i64*
  %486 = load i64, i64* %RBP.i1180
  %487 = sub i64 %486, 208
  %488 = load i64, i64* %PC.i1179
  %489 = add i64 %488, 10
  store i64 %489, i64* %PC.i1179
  %490 = inttoptr i64 %487 to i32*
  store i32 1, i32* %490
  store %struct.Memory* %loadMem_4008a0, %struct.Memory** %MEMORY
  %loadMem_4008aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %492 = getelementptr inbounds %struct.GPR, %struct.GPR* %491, i32 0, i32 33
  %493 = getelementptr inbounds %struct.Reg, %struct.Reg* %492, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %493 to i64*
  %494 = load i64, i64* %PC.i1178
  %495 = add i64 %494, 115
  %496 = load i64, i64* %PC.i1178
  %497 = add i64 %496, 5
  store i64 %497, i64* %PC.i1178
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %495, i64* %498, align 8
  store %struct.Memory* %loadMem_4008aa, %struct.Memory** %MEMORY
  br label %block_.L_40091d

block_.L_4008af:                                  ; preds = %block_400885
  %loadMem_4008af = load %struct.Memory*, %struct.Memory** %MEMORY
  %499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %500 = getelementptr inbounds %struct.GPR, %struct.GPR* %499, i32 0, i32 33
  %501 = getelementptr inbounds %struct.Reg, %struct.Reg* %500, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %501 to i64*
  %502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %503 = getelementptr inbounds %struct.GPR, %struct.GPR* %502, i32 0, i32 1
  %504 = getelementptr inbounds %struct.Reg, %struct.Reg* %503, i32 0, i32 0
  %RAX.i1176 = bitcast %union.anon* %504 to i64*
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %506 = getelementptr inbounds %struct.GPR, %struct.GPR* %505, i32 0, i32 15
  %507 = getelementptr inbounds %struct.Reg, %struct.Reg* %506, i32 0, i32 0
  %RBP.i1177 = bitcast %union.anon* %507 to i64*
  %508 = load i64, i64* %RBP.i1177
  %509 = sub i64 %508, 16
  %510 = load i64, i64* %PC.i1175
  %511 = add i64 %510, 4
  store i64 %511, i64* %PC.i1175
  %512 = inttoptr i64 %509 to i64*
  %513 = load i64, i64* %512
  store i64 %513, i64* %RAX.i1176, align 8
  store %struct.Memory* %loadMem_4008af, %struct.Memory** %MEMORY
  %loadMem_4008b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %515 = getelementptr inbounds %struct.GPR, %struct.GPR* %514, i32 0, i32 33
  %516 = getelementptr inbounds %struct.Reg, %struct.Reg* %515, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %516 to i64*
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %518 = getelementptr inbounds %struct.GPR, %struct.GPR* %517, i32 0, i32 5
  %519 = getelementptr inbounds %struct.Reg, %struct.Reg* %518, i32 0, i32 0
  %RCX.i1173 = bitcast %union.anon* %519 to i64*
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %521 = getelementptr inbounds %struct.GPR, %struct.GPR* %520, i32 0, i32 15
  %522 = getelementptr inbounds %struct.Reg, %struct.Reg* %521, i32 0, i32 0
  %RBP.i1174 = bitcast %union.anon* %522 to i64*
  %523 = load i64, i64* %RBP.i1174
  %524 = sub i64 %523, 172
  %525 = load i64, i64* %PC.i1172
  %526 = add i64 %525, 7
  store i64 %526, i64* %PC.i1172
  %527 = inttoptr i64 %524 to i32*
  %528 = load i32, i32* %527
  %529 = sext i32 %528 to i64
  store i64 %529, i64* %RCX.i1173, align 8
  store %struct.Memory* %loadMem_4008b3, %struct.Memory** %MEMORY
  %loadMem_4008ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %531 = getelementptr inbounds %struct.GPR, %struct.GPR* %530, i32 0, i32 33
  %532 = getelementptr inbounds %struct.Reg, %struct.Reg* %531, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %532 to i64*
  %533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %534 = getelementptr inbounds %struct.GPR, %struct.GPR* %533, i32 0, i32 1
  %535 = getelementptr inbounds %struct.Reg, %struct.Reg* %534, i32 0, i32 0
  %RAX.i1169 = bitcast %union.anon* %535 to i64*
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %537 = getelementptr inbounds %struct.GPR, %struct.GPR* %536, i32 0, i32 5
  %538 = getelementptr inbounds %struct.Reg, %struct.Reg* %537, i32 0, i32 0
  %RCX.i1170 = bitcast %union.anon* %538 to i64*
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %540 = getelementptr inbounds %struct.GPR, %struct.GPR* %539, i32 0, i32 11
  %541 = getelementptr inbounds %struct.Reg, %struct.Reg* %540, i32 0, i32 0
  %RDI.i1171 = bitcast %union.anon* %541 to i64*
  %542 = load i64, i64* %RAX.i1169
  %543 = load i64, i64* %RCX.i1170
  %544 = mul i64 %543, 8
  %545 = add i64 %544, %542
  %546 = load i64, i64* %PC.i1168
  %547 = add i64 %546, 4
  store i64 %547, i64* %PC.i1168
  %548 = inttoptr i64 %545 to i64*
  %549 = load i64, i64* %548
  store i64 %549, i64* %RDI.i1171, align 8
  store %struct.Memory* %loadMem_4008ba, %struct.Memory** %MEMORY
  %loadMem1_4008be = load %struct.Memory*, %struct.Memory** %MEMORY
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %551 = getelementptr inbounds %struct.GPR, %struct.GPR* %550, i32 0, i32 33
  %552 = getelementptr inbounds %struct.Reg, %struct.Reg* %551, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %552 to i64*
  %553 = load i64, i64* %PC.i1167
  %554 = add i64 %553, -462
  %555 = load i64, i64* %PC.i1167
  %556 = add i64 %555, 5
  %557 = load i64, i64* %PC.i1167
  %558 = add i64 %557, 5
  store i64 %558, i64* %PC.i1167
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %560 = load i64, i64* %559, align 8
  %561 = add i64 %560, -8
  %562 = inttoptr i64 %561 to i64*
  store i64 %556, i64* %562
  store i64 %561, i64* %559, align 8
  %563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %554, i64* %563, align 8
  store %struct.Memory* %loadMem1_4008be, %struct.Memory** %MEMORY
  %loadMem2_4008be = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4008be = load i64, i64* %3
  %564 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %loadMem2_4008be)
  store %struct.Memory* %564, %struct.Memory** %MEMORY
  %loadMem_4008c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %566 = getelementptr inbounds %struct.GPR, %struct.GPR* %565, i32 0, i32 33
  %567 = getelementptr inbounds %struct.Reg, %struct.Reg* %566, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %567 to i64*
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %569 = getelementptr inbounds %struct.GPR, %struct.GPR* %568, i32 0, i32 1
  %570 = getelementptr inbounds %struct.Reg, %struct.Reg* %569, i32 0, i32 0
  %RAX.i1164 = bitcast %union.anon* %570 to i64*
  %571 = load i64, i64* %RAX.i1164
  %572 = load i64, i64* %PC.i1163
  %573 = add i64 %572, 4
  store i64 %573, i64* %PC.i1163
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %574, align 1
  %575 = trunc i64 %571 to i32
  %576 = and i32 %575, 255
  %577 = call i32 @llvm.ctpop.i32(i32 %576)
  %578 = trunc i32 %577 to i8
  %579 = and i8 %578, 1
  %580 = xor i8 %579, 1
  %581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %580, i8* %581, align 1
  %582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %582, align 1
  %583 = icmp eq i64 %571, 0
  %584 = zext i1 %583 to i8
  %585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %584, i8* %585, align 1
  %586 = lshr i64 %571, 63
  %587 = trunc i64 %586 to i8
  %588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %587, i8* %588, align 1
  %589 = lshr i64 %571, 63
  %590 = xor i64 %586, %589
  %591 = add i64 %590, %589
  %592 = icmp eq i64 %591, 2
  %593 = zext i1 %592 to i8
  %594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %593, i8* %594, align 1
  store %struct.Memory* %loadMem_4008c3, %struct.Memory** %MEMORY
  %loadMem_4008c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %596 = getelementptr inbounds %struct.GPR, %struct.GPR* %595, i32 0, i32 33
  %597 = getelementptr inbounds %struct.Reg, %struct.Reg* %596, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %597 to i64*
  %598 = load i64, i64* %PC.i1162
  %599 = add i64 %598, 38
  %600 = load i64, i64* %PC.i1162
  %601 = add i64 %600, 6
  %602 = load i64, i64* %PC.i1162
  %603 = add i64 %602, 6
  store i64 %603, i64* %PC.i1162
  %604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %605 = load i8, i8* %604, align 1
  %606 = icmp ne i8 %605, 0
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %608 = load i8, i8* %607, align 1
  %609 = icmp ne i8 %608, 0
  %610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %611 = load i8, i8* %610, align 1
  %612 = icmp ne i8 %611, 0
  %613 = xor i1 %609, %612
  %614 = or i1 %606, %613
  %615 = zext i1 %614 to i8
  store i8 %615, i8* %BRANCH_TAKEN, align 1
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %617 = select i1 %614, i64 %599, i64 %601
  store i64 %617, i64* %616, align 8
  store %struct.Memory* %loadMem_4008c7, %struct.Memory** %MEMORY
  %loadBr_4008c7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4008c7 = icmp eq i8 %loadBr_4008c7, 1
  br i1 %cmpBr_4008c7, label %block_.L_4008ed, label %block_4008cd

block_4008cd:                                     ; preds = %block_.L_4008af
  %loadMem_4008cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %619 = getelementptr inbounds %struct.GPR, %struct.GPR* %618, i32 0, i32 33
  %620 = getelementptr inbounds %struct.Reg, %struct.Reg* %619, i32 0, i32 0
  %PC.i1159 = bitcast %union.anon* %620 to i64*
  %621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %622 = getelementptr inbounds %struct.GPR, %struct.GPR* %621, i32 0, i32 1
  %623 = getelementptr inbounds %struct.Reg, %struct.Reg* %622, i32 0, i32 0
  %RAX.i1160 = bitcast %union.anon* %623 to i64*
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %625 = getelementptr inbounds %struct.GPR, %struct.GPR* %624, i32 0, i32 15
  %626 = getelementptr inbounds %struct.Reg, %struct.Reg* %625, i32 0, i32 0
  %RBP.i1161 = bitcast %union.anon* %626 to i64*
  %627 = load i64, i64* %RBP.i1161
  %628 = sub i64 %627, 16
  %629 = load i64, i64* %PC.i1159
  %630 = add i64 %629, 4
  store i64 %630, i64* %PC.i1159
  %631 = inttoptr i64 %628 to i64*
  %632 = load i64, i64* %631
  store i64 %632, i64* %RAX.i1160, align 8
  store %struct.Memory* %loadMem_4008cd, %struct.Memory** %MEMORY
  %loadMem_4008d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %634 = getelementptr inbounds %struct.GPR, %struct.GPR* %633, i32 0, i32 33
  %635 = getelementptr inbounds %struct.Reg, %struct.Reg* %634, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %635 to i64*
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 5
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %RCX.i1157 = bitcast %union.anon* %638 to i64*
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %640 = getelementptr inbounds %struct.GPR, %struct.GPR* %639, i32 0, i32 15
  %641 = getelementptr inbounds %struct.Reg, %struct.Reg* %640, i32 0, i32 0
  %RBP.i1158 = bitcast %union.anon* %641 to i64*
  %642 = load i64, i64* %RBP.i1158
  %643 = sub i64 %642, 172
  %644 = load i64, i64* %PC.i1156
  %645 = add i64 %644, 7
  store i64 %645, i64* %PC.i1156
  %646 = inttoptr i64 %643 to i32*
  %647 = load i32, i32* %646
  %648 = sext i32 %647 to i64
  store i64 %648, i64* %RCX.i1157, align 8
  store %struct.Memory* %loadMem_4008d1, %struct.Memory** %MEMORY
  %loadMem_4008d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %650 = getelementptr inbounds %struct.GPR, %struct.GPR* %649, i32 0, i32 33
  %651 = getelementptr inbounds %struct.Reg, %struct.Reg* %650, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %651 to i64*
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 1
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %RAX.i1153 = bitcast %union.anon* %654 to i64*
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %656 = getelementptr inbounds %struct.GPR, %struct.GPR* %655, i32 0, i32 5
  %657 = getelementptr inbounds %struct.Reg, %struct.Reg* %656, i32 0, i32 0
  %RCX.i1154 = bitcast %union.anon* %657 to i64*
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %659 = getelementptr inbounds %struct.GPR, %struct.GPR* %658, i32 0, i32 11
  %660 = getelementptr inbounds %struct.Reg, %struct.Reg* %659, i32 0, i32 0
  %RDI.i1155 = bitcast %union.anon* %660 to i64*
  %661 = load i64, i64* %RAX.i1153
  %662 = load i64, i64* %RCX.i1154
  %663 = mul i64 %662, 8
  %664 = add i64 %663, %661
  %665 = load i64, i64* %PC.i1152
  %666 = add i64 %665, 4
  store i64 %666, i64* %PC.i1152
  %667 = inttoptr i64 %664 to i64*
  %668 = load i64, i64* %667
  store i64 %668, i64* %RDI.i1155, align 8
  store %struct.Memory* %loadMem_4008d8, %struct.Memory** %MEMORY
  %loadMem1_4008dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %670 = getelementptr inbounds %struct.GPR, %struct.GPR* %669, i32 0, i32 33
  %671 = getelementptr inbounds %struct.Reg, %struct.Reg* %670, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %671 to i64*
  %672 = load i64, i64* %PC.i1151
  %673 = add i64 %672, -492
  %674 = load i64, i64* %PC.i1151
  %675 = add i64 %674, 5
  %676 = load i64, i64* %PC.i1151
  %677 = add i64 %676, 5
  store i64 %677, i64* %PC.i1151
  %678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %679 = load i64, i64* %678, align 8
  %680 = add i64 %679, -8
  %681 = inttoptr i64 %680 to i64*
  store i64 %675, i64* %681
  store i64 %680, i64* %678, align 8
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %673, i64* %682, align 8
  store %struct.Memory* %loadMem1_4008dc, %struct.Memory** %MEMORY
  %loadMem2_4008dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4008dc = load i64, i64* %3
  %683 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %loadMem2_4008dc)
  store %struct.Memory* %683, %struct.Memory** %MEMORY
  %loadMem_4008e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 33
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %686 to i64*
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %688 = getelementptr inbounds %struct.GPR, %struct.GPR* %687, i32 0, i32 1
  %689 = getelementptr inbounds %struct.Reg, %struct.Reg* %688, i32 0, i32 0
  %RAX.i1147 = bitcast %union.anon* %689 to i64*
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %691 = getelementptr inbounds %struct.GPR, %struct.GPR* %690, i32 0, i32 15
  %692 = getelementptr inbounds %struct.Reg, %struct.Reg* %691, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %692 to i64*
  %693 = load i64, i64* %RBP.i1148
  %694 = sub i64 %693, 184
  %695 = load i64, i64* %RAX.i1147
  %696 = load i64, i64* %PC.i1146
  %697 = add i64 %696, 7
  store i64 %697, i64* %PC.i1146
  %698 = inttoptr i64 %694 to i64*
  store i64 %695, i64* %698
  store %struct.Memory* %loadMem_4008e1, %struct.Memory** %MEMORY
  %loadMem_4008e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %700 = getelementptr inbounds %struct.GPR, %struct.GPR* %699, i32 0, i32 33
  %701 = getelementptr inbounds %struct.Reg, %struct.Reg* %700, i32 0, i32 0
  %PC.i1145 = bitcast %union.anon* %701 to i64*
  %702 = load i64, i64* %PC.i1145
  %703 = add i64 %702, 48
  %704 = load i64, i64* %PC.i1145
  %705 = add i64 %704, 5
  store i64 %705, i64* %PC.i1145
  %706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %703, i64* %706, align 8
  store %struct.Memory* %loadMem_4008e8, %struct.Memory** %MEMORY
  br label %block_.L_400918

block_.L_4008ed:                                  ; preds = %block_.L_4008af
  %loadMem_4008ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %708 = getelementptr inbounds %struct.GPR, %struct.GPR* %707, i32 0, i32 33
  %709 = getelementptr inbounds %struct.Reg, %struct.Reg* %708, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %709 to i64*
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %711 = getelementptr inbounds %struct.GPR, %struct.GPR* %710, i32 0, i32 9
  %712 = getelementptr inbounds %struct.Reg, %struct.Reg* %711, i32 0, i32 0
  %RSI.i1144 = bitcast %union.anon* %712 to i64*
  %713 = load i64, i64* %PC.i1143
  %714 = add i64 %713, 10
  store i64 %714, i64* %PC.i1143
  store i64 ptrtoint (%G__0x4018fb_type* @G__0x4018fb to i64), i64* %RSI.i1144, align 8
  store %struct.Memory* %loadMem_4008ed, %struct.Memory** %MEMORY
  %loadMem_4008f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 33
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %717 to i64*
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %719 = getelementptr inbounds %struct.GPR, %struct.GPR* %718, i32 0, i32 11
  %720 = getelementptr inbounds %struct.Reg, %struct.Reg* %719, i32 0, i32 0
  %RDI.i1142 = bitcast %union.anon* %720 to i64*
  %721 = load i64, i64* %PC.i1141
  %722 = add i64 %721, 8
  store i64 %722, i64* %PC.i1141
  %723 = load i64, i64* bitcast (%G_0x602080_type* @G_0x602080 to i64*)
  store i64 %723, i64* %RDI.i1142, align 8
  store %struct.Memory* %loadMem_4008f7, %struct.Memory** %MEMORY
  %loadMem_4008ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %725 = getelementptr inbounds %struct.GPR, %struct.GPR* %724, i32 0, i32 33
  %726 = getelementptr inbounds %struct.Reg, %struct.Reg* %725, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %726 to i64*
  %727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %728 = getelementptr inbounds %struct.GPR, %struct.GPR* %727, i32 0, i32 1
  %729 = getelementptr inbounds %struct.Reg, %struct.Reg* %728, i32 0, i32 0
  %730 = bitcast %union.anon* %729 to %struct.anon.2*
  %AL.i1140 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %730, i32 0, i32 0
  %731 = load i64, i64* %PC.i1139
  %732 = add i64 %731, 2
  store i64 %732, i64* %PC.i1139
  store i8 0, i8* %AL.i1140, align 1
  store %struct.Memory* %loadMem_4008ff, %struct.Memory** %MEMORY
  %loadMem1_400901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %734 = getelementptr inbounds %struct.GPR, %struct.GPR* %733, i32 0, i32 33
  %735 = getelementptr inbounds %struct.Reg, %struct.Reg* %734, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %735 to i64*
  %736 = load i64, i64* %PC.i1138
  %737 = add i64 %736, -561
  %738 = load i64, i64* %PC.i1138
  %739 = add i64 %738, 5
  %740 = load i64, i64* %PC.i1138
  %741 = add i64 %740, 5
  store i64 %741, i64* %PC.i1138
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %743 = load i64, i64* %742, align 8
  %744 = add i64 %743, -8
  %745 = inttoptr i64 %744 to i64*
  store i64 %739, i64* %745
  store i64 %744, i64* %742, align 8
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %737, i64* %746, align 8
  store %struct.Memory* %loadMem1_400901, %struct.Memory** %MEMORY
  %loadMem2_400901 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400901 = load i64, i64* %3
  %747 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_400901)
  store %struct.Memory* %747, %struct.Memory** %MEMORY
  %loadMem_400906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %749 = getelementptr inbounds %struct.GPR, %struct.GPR* %748, i32 0, i32 33
  %750 = getelementptr inbounds %struct.Reg, %struct.Reg* %749, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %750 to i64*
  %751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %752 = getelementptr inbounds %struct.GPR, %struct.GPR* %751, i32 0, i32 15
  %753 = getelementptr inbounds %struct.Reg, %struct.Reg* %752, i32 0, i32 0
  %RBP.i1135 = bitcast %union.anon* %753 to i64*
  %754 = load i64, i64* %RBP.i1135
  %755 = sub i64 %754, 4
  %756 = load i64, i64* %PC.i1134
  %757 = add i64 %756, 7
  store i64 %757, i64* %PC.i1134
  %758 = inttoptr i64 %755 to i32*
  store i32 1, i32* %758
  store %struct.Memory* %loadMem_400906, %struct.Memory** %MEMORY
  %loadMem_40090d = load %struct.Memory*, %struct.Memory** %MEMORY
  %759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %760 = getelementptr inbounds %struct.GPR, %struct.GPR* %759, i32 0, i32 33
  %761 = getelementptr inbounds %struct.Reg, %struct.Reg* %760, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %761 to i64*
  %762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %763 = getelementptr inbounds %struct.GPR, %struct.GPR* %762, i32 0, i32 1
  %764 = getelementptr inbounds %struct.Reg, %struct.Reg* %763, i32 0, i32 0
  %EAX.i1132 = bitcast %union.anon* %764 to i32*
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %766 = getelementptr inbounds %struct.GPR, %struct.GPR* %765, i32 0, i32 15
  %767 = getelementptr inbounds %struct.Reg, %struct.Reg* %766, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %767 to i64*
  %768 = load i64, i64* %RBP.i1133
  %769 = sub i64 %768, 212
  %770 = load i32, i32* %EAX.i1132
  %771 = zext i32 %770 to i64
  %772 = load i64, i64* %PC.i1131
  %773 = add i64 %772, 6
  store i64 %773, i64* %PC.i1131
  %774 = inttoptr i64 %769 to i32*
  store i32 %770, i32* %774
  store %struct.Memory* %loadMem_40090d, %struct.Memory** %MEMORY
  %loadMem_400913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %776 = getelementptr inbounds %struct.GPR, %struct.GPR* %775, i32 0, i32 33
  %777 = getelementptr inbounds %struct.Reg, %struct.Reg* %776, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %777 to i64*
  %778 = load i64, i64* %PC.i1130
  %779 = add i64 %778, 3197
  %780 = load i64, i64* %PC.i1130
  %781 = add i64 %780, 5
  store i64 %781, i64* %PC.i1130
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %779, i64* %782, align 8
  store %struct.Memory* %loadMem_400913, %struct.Memory** %MEMORY
  br label %block_.L_401590

block_.L_400918:                                  ; preds = %block_4008cd
  %loadMem_400918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %784 = getelementptr inbounds %struct.GPR, %struct.GPR* %783, i32 0, i32 33
  %785 = getelementptr inbounds %struct.Reg, %struct.Reg* %784, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %785 to i64*
  %786 = load i64, i64* %PC.i1129
  %787 = add i64 %786, 5
  %788 = load i64, i64* %PC.i1129
  %789 = add i64 %788, 5
  store i64 %789, i64* %PC.i1129
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %787, i64* %790, align 8
  store %struct.Memory* %loadMem_400918, %struct.Memory** %MEMORY
  br label %block_.L_40091d

block_.L_40091d:                                  ; preds = %block_.L_400918, %block_.L_4008a0
  %loadMem_40091d = load %struct.Memory*, %struct.Memory** %MEMORY
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %792 = getelementptr inbounds %struct.GPR, %struct.GPR* %791, i32 0, i32 33
  %793 = getelementptr inbounds %struct.Reg, %struct.Reg* %792, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %793 to i64*
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 1
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %RAX.i1127 = bitcast %union.anon* %796 to i64*
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 15
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %RBP.i1128 = bitcast %union.anon* %799 to i64*
  %800 = load i64, i64* %RBP.i1128
  %801 = sub i64 %800, 172
  %802 = load i64, i64* %PC.i1126
  %803 = add i64 %802, 6
  store i64 %803, i64* %PC.i1126
  %804 = inttoptr i64 %801 to i32*
  %805 = load i32, i32* %804
  %806 = zext i32 %805 to i64
  store i64 %806, i64* %RAX.i1127, align 8
  store %struct.Memory* %loadMem_40091d, %struct.Memory** %MEMORY
  %loadMem_400923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %808 = getelementptr inbounds %struct.GPR, %struct.GPR* %807, i32 0, i32 33
  %809 = getelementptr inbounds %struct.Reg, %struct.Reg* %808, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %809 to i64*
  %810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %811 = getelementptr inbounds %struct.GPR, %struct.GPR* %810, i32 0, i32 1
  %812 = getelementptr inbounds %struct.Reg, %struct.Reg* %811, i32 0, i32 0
  %RAX.i1125 = bitcast %union.anon* %812 to i64*
  %813 = load i64, i64* %RAX.i1125
  %814 = load i64, i64* %PC.i1124
  %815 = add i64 %814, 3
  store i64 %815, i64* %PC.i1124
  %816 = trunc i64 %813 to i32
  %817 = add i32 1, %816
  %818 = zext i32 %817 to i64
  store i64 %818, i64* %RAX.i1125, align 8
  %819 = icmp ult i32 %817, %816
  %820 = icmp ult i32 %817, 1
  %821 = or i1 %819, %820
  %822 = zext i1 %821 to i8
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %822, i8* %823, align 1
  %824 = and i32 %817, 255
  %825 = call i32 @llvm.ctpop.i32(i32 %824)
  %826 = trunc i32 %825 to i8
  %827 = and i8 %826, 1
  %828 = xor i8 %827, 1
  %829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %828, i8* %829, align 1
  %830 = xor i64 1, %813
  %831 = trunc i64 %830 to i32
  %832 = xor i32 %831, %817
  %833 = lshr i32 %832, 4
  %834 = trunc i32 %833 to i8
  %835 = and i8 %834, 1
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %835, i8* %836, align 1
  %837 = icmp eq i32 %817, 0
  %838 = zext i1 %837 to i8
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %838, i8* %839, align 1
  %840 = lshr i32 %817, 31
  %841 = trunc i32 %840 to i8
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %841, i8* %842, align 1
  %843 = lshr i32 %816, 31
  %844 = xor i32 %840, %843
  %845 = add i32 %844, %840
  %846 = icmp eq i32 %845, 2
  %847 = zext i1 %846 to i8
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %847, i8* %848, align 1
  store %struct.Memory* %loadMem_400923, %struct.Memory** %MEMORY
  %loadMem_400926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 33
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %851 to i64*
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 1
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %EAX.i1122 = bitcast %union.anon* %854 to i32*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 15
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %RBP.i1123 = bitcast %union.anon* %857 to i64*
  %858 = load i64, i64* %RBP.i1123
  %859 = sub i64 %858, 172
  %860 = load i32, i32* %EAX.i1122
  %861 = zext i32 %860 to i64
  %862 = load i64, i64* %PC.i1121
  %863 = add i64 %862, 6
  store i64 %863, i64* %PC.i1121
  %864 = inttoptr i64 %859 to i32*
  store i32 %860, i32* %864
  store %struct.Memory* %loadMem_400926, %struct.Memory** %MEMORY
  %loadMem_40092c = load %struct.Memory*, %struct.Memory** %MEMORY
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 33
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %867 to i64*
  %868 = load i64, i64* %PC.i1120
  %869 = add i64 %868, -228
  %870 = load i64, i64* %PC.i1120
  %871 = add i64 %870, 5
  store i64 %871, i64* %PC.i1120
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %869, i64* %872, align 8
  store %struct.Memory* %loadMem_40092c, %struct.Memory** %MEMORY
  br label %block_.L_400848

block_.L_400931:                                  ; preds = %block_.L_400848
  %loadMem_400931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %874 = getelementptr inbounds %struct.GPR, %struct.GPR* %873, i32 0, i32 33
  %875 = getelementptr inbounds %struct.Reg, %struct.Reg* %874, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %875 to i64*
  %876 = load i64, i64* %PC.i1119
  %877 = add i64 %876, 5
  %878 = load i64, i64* %PC.i1119
  %879 = add i64 %878, 5
  store i64 %879, i64* %PC.i1119
  %880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %877, i64* %880, align 8
  store %struct.Memory* %loadMem_400931, %struct.Memory** %MEMORY
  br label %block_.L_400936

block_.L_400936:                                  ; preds = %block_401584, %block_.L_400931
  %loadMem_400936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %882 = getelementptr inbounds %struct.GPR, %struct.GPR* %881, i32 0, i32 33
  %883 = getelementptr inbounds %struct.Reg, %struct.Reg* %882, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %883 to i64*
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 1
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %EAX.i1117 = bitcast %union.anon* %886 to i32*
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 1
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %RAX.i1118 = bitcast %union.anon* %889 to i64*
  %890 = load i64, i64* %RAX.i1118
  %891 = load i32, i32* %EAX.i1117
  %892 = zext i32 %891 to i64
  %893 = load i64, i64* %PC.i1116
  %894 = add i64 %893, 2
  store i64 %894, i64* %PC.i1116
  %895 = xor i64 %892, %890
  %896 = trunc i64 %895 to i32
  %897 = and i64 %895, 4294967295
  store i64 %897, i64* %RAX.i1118, align 8
  %898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %898, align 1
  %899 = and i32 %896, 255
  %900 = call i32 @llvm.ctpop.i32(i32 %899)
  %901 = trunc i32 %900 to i8
  %902 = and i8 %901, 1
  %903 = xor i8 %902, 1
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %903, i8* %904, align 1
  %905 = icmp eq i32 %896, 0
  %906 = zext i1 %905 to i8
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %906, i8* %907, align 1
  %908 = lshr i32 %896, 31
  %909 = trunc i32 %908 to i8
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %909, i8* %910, align 1
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %911, align 1
  %912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %912, align 1
  store %struct.Memory* %loadMem_400936, %struct.Memory** %MEMORY
  %loadMem_400938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %914 = getelementptr inbounds %struct.GPR, %struct.GPR* %913, i32 0, i32 33
  %915 = getelementptr inbounds %struct.Reg, %struct.Reg* %914, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %915 to i64*
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %917 = getelementptr inbounds %struct.GPR, %struct.GPR* %916, i32 0, i32 1
  %918 = getelementptr inbounds %struct.Reg, %struct.Reg* %917, i32 0, i32 0
  %EAX.i1114 = bitcast %union.anon* %918 to i32*
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %920 = getelementptr inbounds %struct.GPR, %struct.GPR* %919, i32 0, i32 11
  %921 = getelementptr inbounds %struct.Reg, %struct.Reg* %920, i32 0, i32 0
  %RDI.i1115 = bitcast %union.anon* %921 to i64*
  %922 = load i32, i32* %EAX.i1114
  %923 = zext i32 %922 to i64
  %924 = load i64, i64* %PC.i1113
  %925 = add i64 %924, 2
  store i64 %925, i64* %PC.i1113
  %926 = and i64 %923, 4294967295
  store i64 %926, i64* %RDI.i1115, align 8
  store %struct.Memory* %loadMem_400938, %struct.Memory** %MEMORY
  %loadMem1_40093a = load %struct.Memory*, %struct.Memory** %MEMORY
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %928 = getelementptr inbounds %struct.GPR, %struct.GPR* %927, i32 0, i32 33
  %929 = getelementptr inbounds %struct.Reg, %struct.Reg* %928, i32 0, i32 0
  %PC.i1112 = bitcast %union.anon* %929 to i64*
  %930 = load i64, i64* %PC.i1112
  %931 = add i64 %930, -602
  %932 = load i64, i64* %PC.i1112
  %933 = add i64 %932, 5
  %934 = load i64, i64* %PC.i1112
  %935 = add i64 %934, 5
  store i64 %935, i64* %PC.i1112
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %937 = load i64, i64* %936, align 8
  %938 = add i64 %937, -8
  %939 = inttoptr i64 %938 to i64*
  store i64 %933, i64* %939
  store i64 %938, i64* %936, align 8
  %940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %931, i64* %940, align 8
  store %struct.Memory* %loadMem1_40093a, %struct.Memory** %MEMORY
  %loadMem2_40093a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40093a = load i64, i64* %3
  %941 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %loadMem2_40093a)
  store %struct.Memory* %941, %struct.Memory** %MEMORY
  %loadMem_40093f = load %struct.Memory*, %struct.Memory** %MEMORY
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %943 = getelementptr inbounds %struct.GPR, %struct.GPR* %942, i32 0, i32 33
  %944 = getelementptr inbounds %struct.Reg, %struct.Reg* %943, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %944 to i64*
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %946 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %945, i64 0, i64 0
  %YMM0.i1108 = bitcast %union.VectorReg* %946 to %"class.std::bitset"*
  %947 = bitcast %"class.std::bitset"* %YMM0.i1108 to i8*
  %948 = load i64, i64* %PC.i1107
  %949 = load i64, i64* %PC.i1107
  %950 = add i64 %949, 8
  store i64 %950, i64* %PC.i1107
  %951 = load double, double* bitcast (%G_0xf71__rip__type* @G_0xf71__rip_ to double*)
  %952 = bitcast i8* %947 to double*
  store double %951, double* %952, align 1
  %953 = getelementptr inbounds i8, i8* %947, i64 8
  %954 = bitcast i8* %953 to double*
  store double 0.000000e+00, double* %954, align 1
  store %struct.Memory* %loadMem_40093f, %struct.Memory** %MEMORY
  %loadMem_400947 = load %struct.Memory*, %struct.Memory** %MEMORY
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %956 = getelementptr inbounds %struct.GPR, %struct.GPR* %955, i32 0, i32 33
  %957 = getelementptr inbounds %struct.Reg, %struct.Reg* %956, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %957 to i64*
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %959 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %958, i64 0, i64 1
  %YMM1.i1106 = bitcast %union.VectorReg* %959 to %"class.std::bitset"*
  %960 = bitcast %"class.std::bitset"* %YMM1.i1106 to i8*
  %961 = load i64, i64* %PC.i1105
  %962 = load i64, i64* %PC.i1105
  %963 = add i64 %962, 8
  store i64 %963, i64* %PC.i1105
  %964 = load double, double* bitcast (%G_0xf71__rip__type* @G_0xf71__rip_ to double*)
  %965 = bitcast i8* %960 to double*
  store double %964, double* %965, align 1
  %966 = getelementptr inbounds i8, i8* %960, i64 8
  %967 = bitcast i8* %966 to double*
  store double 0.000000e+00, double* %967, align 1
  store %struct.Memory* %loadMem_400947, %struct.Memory** %MEMORY
  %loadMem_40094f = load %struct.Memory*, %struct.Memory** %MEMORY
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 33
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %970 to i64*
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %972 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %971, i64 0, i64 2
  %YMM2.i1104 = bitcast %union.VectorReg* %972 to %"class.std::bitset"*
  %973 = bitcast %"class.std::bitset"* %YMM2.i1104 to i8*
  %974 = load i64, i64* %PC.i1103
  %975 = load i64, i64* %PC.i1103
  %976 = add i64 %975, 8
  store i64 %976, i64* %PC.i1103
  %977 = load double, double* bitcast (%G_0xf71__rip__type* @G_0xf71__rip_ to double*)
  %978 = bitcast i8* %973 to double*
  store double %977, double* %978, align 1
  %979 = getelementptr inbounds i8, i8* %973, i64 8
  %980 = bitcast i8* %979 to double*
  store double 0.000000e+00, double* %980, align 1
  store %struct.Memory* %loadMem_40094f, %struct.Memory** %MEMORY
  %loadMem_400957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %982 = getelementptr inbounds %struct.GPR, %struct.GPR* %981, i32 0, i32 33
  %983 = getelementptr inbounds %struct.Reg, %struct.Reg* %982, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %983 to i64*
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %985 = getelementptr inbounds %struct.GPR, %struct.GPR* %984, i32 0, i32 1
  %986 = getelementptr inbounds %struct.Reg, %struct.Reg* %985, i32 0, i32 0
  %RAX.i1101 = bitcast %union.anon* %986 to i64*
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %988 = getelementptr inbounds %struct.GPR, %struct.GPR* %987, i32 0, i32 15
  %989 = getelementptr inbounds %struct.Reg, %struct.Reg* %988, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %989 to i64*
  %990 = load i64, i64* %RBP.i1102
  %991 = sub i64 %990, 192
  %992 = load i64, i64* %RAX.i1101
  %993 = load i64, i64* %PC.i1100
  %994 = add i64 %993, 7
  store i64 %994, i64* %PC.i1100
  %995 = inttoptr i64 %991 to i64*
  store i64 %992, i64* %995
  store %struct.Memory* %loadMem_400957, %struct.Memory** %MEMORY
  %loadMem_40095e = load %struct.Memory*, %struct.Memory** %MEMORY
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %997 = getelementptr inbounds %struct.GPR, %struct.GPR* %996, i32 0, i32 33
  %998 = getelementptr inbounds %struct.Reg, %struct.Reg* %997, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %998 to i64*
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1000 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %999, i64 0, i64 2
  %XMM2.i1099 = bitcast %union.VectorReg* %1000 to %union.vec128_t*
  %1001 = bitcast %union.vec128_t* %XMM2.i1099 to i8*
  %1002 = load i64, i64* %PC.i1098
  %1003 = add i64 %1002, 9
  store i64 %1003, i64* %PC.i1098
  %1004 = bitcast i8* %1001 to double*
  %1005 = load double, double* %1004, align 1
  store double %1005, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  store %struct.Memory* %loadMem_40095e, %struct.Memory** %MEMORY
  %loadMem_400967 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1007 = getelementptr inbounds %struct.GPR, %struct.GPR* %1006, i32 0, i32 33
  %1008 = getelementptr inbounds %struct.Reg, %struct.Reg* %1007, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %1008 to i64*
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1010 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1009, i64 0, i64 1
  %XMM1.i1097 = bitcast %union.VectorReg* %1010 to %union.vec128_t*
  %1011 = bitcast %union.vec128_t* %XMM1.i1097 to i8*
  %1012 = load i64, i64* %PC.i1096
  %1013 = add i64 %1012, 9
  store i64 %1013, i64* %PC.i1096
  %1014 = bitcast i8* %1011 to double*
  %1015 = load double, double* %1014, align 1
  store double %1015, double* bitcast (%G_0x6020a0_type* @G_0x6020a0 to double*)
  store %struct.Memory* %loadMem_400967, %struct.Memory** %MEMORY
  %loadMem_400970 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1017 = getelementptr inbounds %struct.GPR, %struct.GPR* %1016, i32 0, i32 33
  %1018 = getelementptr inbounds %struct.Reg, %struct.Reg* %1017, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %1018 to i64*
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1020 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1019, i64 0, i64 0
  %XMM0.i1095 = bitcast %union.VectorReg* %1020 to %union.vec128_t*
  %1021 = bitcast %union.vec128_t* %XMM0.i1095 to i8*
  %1022 = load i64, i64* %PC.i1094
  %1023 = add i64 %1022, 9
  store i64 %1023, i64* %PC.i1094
  %1024 = bitcast i8* %1021 to double*
  %1025 = load double, double* %1024, align 1
  store double %1025, double* bitcast (%G_0x6020b0_type* @G_0x6020b0 to double*)
  store %struct.Memory* %loadMem_400970, %struct.Memory** %MEMORY
  %loadMem_400979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1027 = getelementptr inbounds %struct.GPR, %struct.GPR* %1026, i32 0, i32 33
  %1028 = getelementptr inbounds %struct.Reg, %struct.Reg* %1027, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %1028 to i64*
  %1029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1030 = getelementptr inbounds %struct.GPR, %struct.GPR* %1029, i32 0, i32 1
  %1031 = getelementptr inbounds %struct.Reg, %struct.Reg* %1030, i32 0, i32 0
  %RAX.i1092 = bitcast %union.anon* %1031 to i64*
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1033 = getelementptr inbounds %struct.GPR, %struct.GPR* %1032, i32 0, i32 15
  %1034 = getelementptr inbounds %struct.Reg, %struct.Reg* %1033, i32 0, i32 0
  %RBP.i1093 = bitcast %union.anon* %1034 to i64*
  %1035 = load i64, i64* %RBP.i1093
  %1036 = sub i64 %1035, 184
  %1037 = load i64, i64* %PC.i1091
  %1038 = add i64 %1037, 7
  store i64 %1038, i64* %PC.i1091
  %1039 = inttoptr i64 %1036 to i64*
  %1040 = load i64, i64* %1039
  store i64 %1040, i64* %RAX.i1092, align 8
  store %struct.Memory* %loadMem_400979, %struct.Memory** %MEMORY
  %loadMem_400980 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1042 = getelementptr inbounds %struct.GPR, %struct.GPR* %1041, i32 0, i32 33
  %1043 = getelementptr inbounds %struct.Reg, %struct.Reg* %1042, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %1043 to i64*
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1045 = getelementptr inbounds %struct.GPR, %struct.GPR* %1044, i32 0, i32 1
  %1046 = getelementptr inbounds %struct.Reg, %struct.Reg* %1045, i32 0, i32 0
  %RAX.i1089 = bitcast %union.anon* %1046 to i64*
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1048 = getelementptr inbounds %struct.GPR, %struct.GPR* %1047, i32 0, i32 15
  %1049 = getelementptr inbounds %struct.Reg, %struct.Reg* %1048, i32 0, i32 0
  %RBP.i1090 = bitcast %union.anon* %1049 to i64*
  %1050 = load i64, i64* %RBP.i1090
  %1051 = sub i64 %1050, 168
  %1052 = load i64, i64* %RAX.i1089
  %1053 = load i64, i64* %PC.i1088
  %1054 = add i64 %1053, 7
  store i64 %1054, i64* %PC.i1088
  %1055 = inttoptr i64 %1051 to i64*
  store i64 %1052, i64* %1055
  store %struct.Memory* %loadMem_400980, %struct.Memory** %MEMORY
  %loadMem_400987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1057 = getelementptr inbounds %struct.GPR, %struct.GPR* %1056, i32 0, i32 33
  %1058 = getelementptr inbounds %struct.Reg, %struct.Reg* %1057, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %1058 to i64*
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1060 = getelementptr inbounds %struct.GPR, %struct.GPR* %1059, i32 0, i32 15
  %1061 = getelementptr inbounds %struct.Reg, %struct.Reg* %1060, i32 0, i32 0
  %RBP.i1087 = bitcast %union.anon* %1061 to i64*
  %1062 = load i64, i64* %RBP.i1087
  %1063 = sub i64 %1062, 172
  %1064 = load i64, i64* %PC.i1086
  %1065 = add i64 %1064, 10
  store i64 %1065, i64* %PC.i1086
  %1066 = inttoptr i64 %1063 to i32*
  store i32 1, i32* %1066
  store %struct.Memory* %loadMem_400987, %struct.Memory** %MEMORY
  %loadMem_400991 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1068 = getelementptr inbounds %struct.GPR, %struct.GPR* %1067, i32 0, i32 33
  %1069 = getelementptr inbounds %struct.Reg, %struct.Reg* %1068, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %1069 to i64*
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1071 = getelementptr inbounds %struct.GPR, %struct.GPR* %1070, i32 0, i32 15
  %1072 = getelementptr inbounds %struct.Reg, %struct.Reg* %1071, i32 0, i32 0
  %RBP.i1085 = bitcast %union.anon* %1072 to i64*
  %1073 = load i64, i64* %RBP.i1085
  %1074 = sub i64 %1073, 176
  %1075 = load i64, i64* %PC.i1084
  %1076 = add i64 %1075, 10
  store i64 %1076, i64* %PC.i1084
  %1077 = inttoptr i64 %1074 to i32*
  store i32 1, i32* %1077
  store %struct.Memory* %loadMem_400991, %struct.Memory** %MEMORY
  br label %block_.L_40099b

block_.L_40099b:                                  ; preds = %block_40154b, %block_.L_400936
  %loadMem_40099b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1079 = getelementptr inbounds %struct.GPR, %struct.GPR* %1078, i32 0, i32 33
  %1080 = getelementptr inbounds %struct.Reg, %struct.Reg* %1079, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %1080 to i64*
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1082 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1081, i64 0, i64 0
  %YMM0.i1083 = bitcast %union.VectorReg* %1082 to %"class.std::bitset"*
  %1083 = bitcast %"class.std::bitset"* %YMM0.i1083 to i8*
  %1084 = load i64, i64* %PC.i1082
  %1085 = load i64, i64* %PC.i1082
  %1086 = add i64 %1085, 8
  store i64 %1086, i64* %PC.i1082
  %1087 = load double, double* bitcast (%G_0xf2d__rip__type* @G_0xf2d__rip_ to double*)
  %1088 = bitcast i8* %1083 to double*
  store double %1087, double* %1088, align 1
  %1089 = getelementptr inbounds i8, i8* %1083, i64 8
  %1090 = bitcast i8* %1089 to double*
  store double 0.000000e+00, double* %1090, align 1
  store %struct.Memory* %loadMem_40099b, %struct.Memory** %MEMORY
  %loadMem_4009a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1092 = getelementptr inbounds %struct.GPR, %struct.GPR* %1091, i32 0, i32 33
  %1093 = getelementptr inbounds %struct.Reg, %struct.Reg* %1092, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %1093 to i64*
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1095 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1094, i64 0, i64 1
  %YMM1.i1081 = bitcast %union.VectorReg* %1095 to %"class.std::bitset"*
  %1096 = bitcast %"class.std::bitset"* %YMM1.i1081 to i8*
  %1097 = load i64, i64* %PC.i1080
  %1098 = load i64, i64* %PC.i1080
  %1099 = add i64 %1098, 8
  store i64 %1099, i64* %PC.i1080
  %1100 = load double, double* bitcast (%G_0xf2d__rip__type* @G_0xf2d__rip_ to double*)
  %1101 = bitcast i8* %1096 to double*
  store double %1100, double* %1101, align 1
  %1102 = getelementptr inbounds i8, i8* %1096, i64 8
  %1103 = bitcast i8* %1102 to double*
  store double 0.000000e+00, double* %1103, align 1
  store %struct.Memory* %loadMem_4009a3, %struct.Memory** %MEMORY
  %loadMem_4009ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1105 = getelementptr inbounds %struct.GPR, %struct.GPR* %1104, i32 0, i32 33
  %1106 = getelementptr inbounds %struct.Reg, %struct.Reg* %1105, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %1106 to i64*
  %1107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1108 = getelementptr inbounds %struct.GPR, %struct.GPR* %1107, i32 0, i32 15
  %1109 = getelementptr inbounds %struct.Reg, %struct.Reg* %1108, i32 0, i32 0
  %RBP.i1079 = bitcast %union.anon* %1109 to i64*
  %1110 = load i64, i64* %RBP.i1079
  %1111 = sub i64 %1110, 32
  %1112 = load i64, i64* %PC.i1078
  %1113 = add i64 %1112, 8
  store i64 %1113, i64* %PC.i1078
  %1114 = inttoptr i64 %1111 to i64*
  store i64 0, i64* %1114
  store %struct.Memory* %loadMem_4009ab, %struct.Memory** %MEMORY
  %loadMem_4009b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1116 = getelementptr inbounds %struct.GPR, %struct.GPR* %1115, i32 0, i32 33
  %1117 = getelementptr inbounds %struct.Reg, %struct.Reg* %1116, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %1117 to i64*
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1119 = getelementptr inbounds %struct.GPR, %struct.GPR* %1118, i32 0, i32 1
  %1120 = getelementptr inbounds %struct.Reg, %struct.Reg* %1119, i32 0, i32 0
  %RAX.i1076 = bitcast %union.anon* %1120 to i64*
  %1121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1122 = getelementptr inbounds %struct.GPR, %struct.GPR* %1121, i32 0, i32 15
  %1123 = getelementptr inbounds %struct.Reg, %struct.Reg* %1122, i32 0, i32 0
  %RBP.i1077 = bitcast %union.anon* %1123 to i64*
  %1124 = load i64, i64* %RBP.i1077
  %1125 = sub i64 %1124, 168
  %1126 = load i64, i64* %PC.i1075
  %1127 = add i64 %1126, 8
  store i64 %1127, i64* %PC.i1075
  %1128 = inttoptr i64 %1125 to i64*
  %1129 = load i64, i64* %1128
  %1130 = sext i64 %1129 to i128
  %1131 = and i128 %1130, -18446744073709551616
  %1132 = zext i64 %1129 to i128
  %1133 = or i128 %1131, %1132
  %1134 = mul i128 %1133, 12
  %1135 = trunc i128 %1134 to i64
  store i64 %1135, i64* %RAX.i1076, align 8
  %1136 = sext i64 %1135 to i128
  %1137 = icmp ne i128 %1136, %1134
  %1138 = zext i1 %1137 to i8
  %1139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1138, i8* %1139, align 1
  %1140 = trunc i128 %1134 to i32
  %1141 = and i32 %1140, 255
  %1142 = call i32 @llvm.ctpop.i32(i32 %1141)
  %1143 = trunc i32 %1142 to i8
  %1144 = and i8 %1143, 1
  %1145 = xor i8 %1144, 1
  %1146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1145, i8* %1146, align 1
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1147, align 1
  %1148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1148, align 1
  %1149 = lshr i64 %1135, 63
  %1150 = trunc i64 %1149 to i8
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1150, i8* %1151, align 1
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1138, i8* %1152, align 1
  store %struct.Memory* %loadMem_4009b3, %struct.Memory** %MEMORY
  %loadMem_4009bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1154 = getelementptr inbounds %struct.GPR, %struct.GPR* %1153, i32 0, i32 33
  %1155 = getelementptr inbounds %struct.Reg, %struct.Reg* %1154, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %1155 to i64*
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1157 = getelementptr inbounds %struct.GPR, %struct.GPR* %1156, i32 0, i32 1
  %1158 = getelementptr inbounds %struct.Reg, %struct.Reg* %1157, i32 0, i32 0
  %RAX.i1073 = bitcast %union.anon* %1158 to i64*
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 15
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %RBP.i1074 = bitcast %union.anon* %1161 to i64*
  %1162 = load i64, i64* %RBP.i1074
  %1163 = sub i64 %1162, 40
  %1164 = load i64, i64* %RAX.i1073
  %1165 = load i64, i64* %PC.i1072
  %1166 = add i64 %1165, 4
  store i64 %1166, i64* %PC.i1072
  %1167 = inttoptr i64 %1163 to i64*
  store i64 %1164, i64* %1167
  store %struct.Memory* %loadMem_4009bb, %struct.Memory** %MEMORY
  %loadMem_4009bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1169 = getelementptr inbounds %struct.GPR, %struct.GPR* %1168, i32 0, i32 33
  %1170 = getelementptr inbounds %struct.Reg, %struct.Reg* %1169, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %1170 to i64*
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 1
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %RAX.i1070 = bitcast %union.anon* %1173 to i64*
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 15
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %RBP.i1071 = bitcast %union.anon* %1176 to i64*
  %1177 = load i64, i64* %RBP.i1071
  %1178 = sub i64 %1177, 168
  %1179 = load i64, i64* %PC.i1069
  %1180 = add i64 %1179, 8
  store i64 %1180, i64* %PC.i1069
  %1181 = inttoptr i64 %1178 to i64*
  %1182 = load i64, i64* %1181
  %1183 = sext i64 %1182 to i128
  %1184 = and i128 %1183, -18446744073709551616
  %1185 = zext i64 %1182 to i128
  %1186 = or i128 %1184, %1185
  %1187 = mul i128 %1186, 14
  %1188 = trunc i128 %1187 to i64
  store i64 %1188, i64* %RAX.i1070, align 8
  %1189 = sext i64 %1188 to i128
  %1190 = icmp ne i128 %1189, %1187
  %1191 = zext i1 %1190 to i8
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1191, i8* %1192, align 1
  %1193 = trunc i128 %1187 to i32
  %1194 = and i32 %1193, 255
  %1195 = call i32 @llvm.ctpop.i32(i32 %1194)
  %1196 = trunc i32 %1195 to i8
  %1197 = and i8 %1196, 1
  %1198 = xor i8 %1197, 1
  %1199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1198, i8* %1199, align 1
  %1200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1200, align 1
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1201, align 1
  %1202 = lshr i64 %1188, 63
  %1203 = trunc i64 %1202 to i8
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1203, i8* %1204, align 1
  %1205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1191, i8* %1205, align 1
  store %struct.Memory* %loadMem_4009bf, %struct.Memory** %MEMORY
  %loadMem_4009c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1207 = getelementptr inbounds %struct.GPR, %struct.GPR* %1206, i32 0, i32 33
  %1208 = getelementptr inbounds %struct.Reg, %struct.Reg* %1207, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %1208 to i64*
  %1209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1210 = getelementptr inbounds %struct.GPR, %struct.GPR* %1209, i32 0, i32 1
  %1211 = getelementptr inbounds %struct.Reg, %struct.Reg* %1210, i32 0, i32 0
  %RAX.i1067 = bitcast %union.anon* %1211 to i64*
  %1212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1213 = getelementptr inbounds %struct.GPR, %struct.GPR* %1212, i32 0, i32 15
  %1214 = getelementptr inbounds %struct.Reg, %struct.Reg* %1213, i32 0, i32 0
  %RBP.i1068 = bitcast %union.anon* %1214 to i64*
  %1215 = load i64, i64* %RBP.i1068
  %1216 = sub i64 %1215, 48
  %1217 = load i64, i64* %RAX.i1067
  %1218 = load i64, i64* %PC.i1066
  %1219 = add i64 %1218, 4
  store i64 %1219, i64* %PC.i1066
  %1220 = inttoptr i64 %1216 to i64*
  store i64 %1217, i64* %1220
  store %struct.Memory* %loadMem_4009c7, %struct.Memory** %MEMORY
  %loadMem_4009cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1222 = getelementptr inbounds %struct.GPR, %struct.GPR* %1221, i32 0, i32 33
  %1223 = getelementptr inbounds %struct.Reg, %struct.Reg* %1222, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %1223 to i64*
  %1224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1225 = getelementptr inbounds %struct.GPR, %struct.GPR* %1224, i32 0, i32 1
  %1226 = getelementptr inbounds %struct.Reg, %struct.Reg* %1225, i32 0, i32 0
  %RAX.i1064 = bitcast %union.anon* %1226 to i64*
  %1227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1228 = getelementptr inbounds %struct.GPR, %struct.GPR* %1227, i32 0, i32 15
  %1229 = getelementptr inbounds %struct.Reg, %struct.Reg* %1228, i32 0, i32 0
  %RBP.i1065 = bitcast %union.anon* %1229 to i64*
  %1230 = load i64, i64* %RBP.i1065
  %1231 = sub i64 %1230, 168
  %1232 = load i64, i64* %PC.i1063
  %1233 = add i64 %1232, 11
  store i64 %1233, i64* %PC.i1063
  %1234 = inttoptr i64 %1231 to i64*
  %1235 = load i64, i64* %1234
  %1236 = sext i64 %1235 to i128
  %1237 = and i128 %1236, -18446744073709551616
  %1238 = zext i64 %1235 to i128
  %1239 = or i128 %1237, %1238
  %1240 = mul i128 %1239, 345
  %1241 = trunc i128 %1240 to i64
  store i64 %1241, i64* %RAX.i1064, align 8
  %1242 = sext i64 %1241 to i128
  %1243 = icmp ne i128 %1242, %1240
  %1244 = zext i1 %1243 to i8
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1244, i8* %1245, align 1
  %1246 = trunc i128 %1240 to i32
  %1247 = and i32 %1246, 255
  %1248 = call i32 @llvm.ctpop.i32(i32 %1247)
  %1249 = trunc i32 %1248 to i8
  %1250 = and i8 %1249, 1
  %1251 = xor i8 %1250, 1
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1251, i8* %1252, align 1
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1253, align 1
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1254, align 1
  %1255 = lshr i64 %1241, 63
  %1256 = trunc i64 %1255 to i8
  %1257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1256, i8* %1257, align 1
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1244, i8* %1258, align 1
  store %struct.Memory* %loadMem_4009cb, %struct.Memory** %MEMORY
  %loadMem_4009d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1260 = getelementptr inbounds %struct.GPR, %struct.GPR* %1259, i32 0, i32 33
  %1261 = getelementptr inbounds %struct.Reg, %struct.Reg* %1260, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %1261 to i64*
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1263 = getelementptr inbounds %struct.GPR, %struct.GPR* %1262, i32 0, i32 1
  %1264 = getelementptr inbounds %struct.Reg, %struct.Reg* %1263, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %1264 to i64*
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1266 = getelementptr inbounds %struct.GPR, %struct.GPR* %1265, i32 0, i32 15
  %1267 = getelementptr inbounds %struct.Reg, %struct.Reg* %1266, i32 0, i32 0
  %RBP.i1062 = bitcast %union.anon* %1267 to i64*
  %1268 = load i64, i64* %RBP.i1062
  %1269 = sub i64 %1268, 56
  %1270 = load i64, i64* %RAX.i1061
  %1271 = load i64, i64* %PC.i1060
  %1272 = add i64 %1271, 4
  store i64 %1272, i64* %PC.i1060
  %1273 = inttoptr i64 %1269 to i64*
  store i64 %1270, i64* %1273
  store %struct.Memory* %loadMem_4009d6, %struct.Memory** %MEMORY
  %loadMem_4009da = load %struct.Memory*, %struct.Memory** %MEMORY
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1275 = getelementptr inbounds %struct.GPR, %struct.GPR* %1274, i32 0, i32 33
  %1276 = getelementptr inbounds %struct.Reg, %struct.Reg* %1275, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %1276 to i64*
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 1
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %RAX.i1058 = bitcast %union.anon* %1279 to i64*
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1281 = getelementptr inbounds %struct.GPR, %struct.GPR* %1280, i32 0, i32 15
  %1282 = getelementptr inbounds %struct.Reg, %struct.Reg* %1281, i32 0, i32 0
  %RBP.i1059 = bitcast %union.anon* %1282 to i64*
  %1283 = load i64, i64* %RBP.i1059
  %1284 = sub i64 %1283, 168
  %1285 = load i64, i64* %PC.i1057
  %1286 = add i64 %1285, 11
  store i64 %1286, i64* %PC.i1057
  %1287 = inttoptr i64 %1284 to i64*
  %1288 = load i64, i64* %1287
  %1289 = sext i64 %1288 to i128
  %1290 = and i128 %1289, -18446744073709551616
  %1291 = zext i64 %1288 to i128
  %1292 = or i128 %1290, %1291
  %1293 = mul i128 %1292, 210
  %1294 = trunc i128 %1293 to i64
  store i64 %1294, i64* %RAX.i1058, align 8
  %1295 = sext i64 %1294 to i128
  %1296 = icmp ne i128 %1295, %1293
  %1297 = zext i1 %1296 to i8
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1297, i8* %1298, align 1
  %1299 = trunc i128 %1293 to i32
  %1300 = and i32 %1299, 255
  %1301 = call i32 @llvm.ctpop.i32(i32 %1300)
  %1302 = trunc i32 %1301 to i8
  %1303 = and i8 %1302, 1
  %1304 = xor i8 %1303, 1
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1304, i8* %1305, align 1
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1306, align 1
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1307, align 1
  %1308 = lshr i64 %1294, 63
  %1309 = trunc i64 %1308 to i8
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1309, i8* %1310, align 1
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1297, i8* %1311, align 1
  store %struct.Memory* %loadMem_4009da, %struct.Memory** %MEMORY
  %loadMem_4009e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1313 = getelementptr inbounds %struct.GPR, %struct.GPR* %1312, i32 0, i32 33
  %1314 = getelementptr inbounds %struct.Reg, %struct.Reg* %1313, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %1314 to i64*
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1316 = getelementptr inbounds %struct.GPR, %struct.GPR* %1315, i32 0, i32 1
  %1317 = getelementptr inbounds %struct.Reg, %struct.Reg* %1316, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %1317 to i64*
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1319 = getelementptr inbounds %struct.GPR, %struct.GPR* %1318, i32 0, i32 15
  %1320 = getelementptr inbounds %struct.Reg, %struct.Reg* %1319, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %1320 to i64*
  %1321 = load i64, i64* %RBP.i1056
  %1322 = sub i64 %1321, 64
  %1323 = load i64, i64* %RAX.i1055
  %1324 = load i64, i64* %PC.i1054
  %1325 = add i64 %1324, 4
  store i64 %1325, i64* %PC.i1054
  %1326 = inttoptr i64 %1322 to i64*
  store i64 %1323, i64* %1326
  store %struct.Memory* %loadMem_4009e5, %struct.Memory** %MEMORY
  %loadMem_4009e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 33
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %1329 to i64*
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 1
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %RAX.i1052 = bitcast %union.anon* %1332 to i64*
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1334 = getelementptr inbounds %struct.GPR, %struct.GPR* %1333, i32 0, i32 15
  %1335 = getelementptr inbounds %struct.Reg, %struct.Reg* %1334, i32 0, i32 0
  %RBP.i1053 = bitcast %union.anon* %1335 to i64*
  %1336 = load i64, i64* %RBP.i1053
  %1337 = sub i64 %1336, 168
  %1338 = load i64, i64* %PC.i1051
  %1339 = add i64 %1338, 7
  store i64 %1339, i64* %PC.i1051
  %1340 = inttoptr i64 %1337 to i64*
  %1341 = load i64, i64* %1340
  store i64 %1341, i64* %RAX.i1052, align 8
  store %struct.Memory* %loadMem_4009e9, %struct.Memory** %MEMORY
  %loadMem_4009f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1343 = getelementptr inbounds %struct.GPR, %struct.GPR* %1342, i32 0, i32 33
  %1344 = getelementptr inbounds %struct.Reg, %struct.Reg* %1343, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %1344 to i64*
  %1345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1346 = getelementptr inbounds %struct.GPR, %struct.GPR* %1345, i32 0, i32 1
  %1347 = getelementptr inbounds %struct.Reg, %struct.Reg* %1346, i32 0, i32 0
  %RAX.i1050 = bitcast %union.anon* %1347 to i64*
  %1348 = load i64, i64* %RAX.i1050
  %1349 = load i64, i64* %PC.i1049
  %1350 = add i64 %1349, 4
  store i64 %1350, i64* %PC.i1049
  %1351 = shl i64 %1348, 4
  %1352 = icmp slt i64 %1351, 0
  %1353 = shl i64 %1351, 1
  store i64 %1353, i64* %RAX.i1050, align 8
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1355 = zext i1 %1352 to i8
  store i8 %1355, i8* %1354, align 1
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1357 = trunc i64 %1353 to i32
  %1358 = and i32 %1357, 254
  %1359 = call i32 @llvm.ctpop.i32(i32 %1358)
  %1360 = trunc i32 %1359 to i8
  %1361 = and i8 %1360, 1
  %1362 = xor i8 %1361, 1
  store i8 %1362, i8* %1356, align 1
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1363, align 1
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1365 = icmp eq i64 %1353, 0
  %1366 = zext i1 %1365 to i8
  store i8 %1366, i8* %1364, align 1
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1368 = lshr i64 %1353, 63
  %1369 = trunc i64 %1368 to i8
  store i8 %1369, i8* %1367, align 1
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1370, align 1
  store %struct.Memory* %loadMem_4009f0, %struct.Memory** %MEMORY
  %loadMem_4009f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1372 = getelementptr inbounds %struct.GPR, %struct.GPR* %1371, i32 0, i32 33
  %1373 = getelementptr inbounds %struct.Reg, %struct.Reg* %1372, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %1373 to i64*
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1375 = getelementptr inbounds %struct.GPR, %struct.GPR* %1374, i32 0, i32 1
  %1376 = getelementptr inbounds %struct.Reg, %struct.Reg* %1375, i32 0, i32 0
  %RAX.i1047 = bitcast %union.anon* %1376 to i64*
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1378 = getelementptr inbounds %struct.GPR, %struct.GPR* %1377, i32 0, i32 15
  %1379 = getelementptr inbounds %struct.Reg, %struct.Reg* %1378, i32 0, i32 0
  %RBP.i1048 = bitcast %union.anon* %1379 to i64*
  %1380 = load i64, i64* %RBP.i1048
  %1381 = sub i64 %1380, 72
  %1382 = load i64, i64* %RAX.i1047
  %1383 = load i64, i64* %PC.i1046
  %1384 = add i64 %1383, 4
  store i64 %1384, i64* %PC.i1046
  %1385 = inttoptr i64 %1381 to i64*
  store i64 %1382, i64* %1385
  store %struct.Memory* %loadMem_4009f4, %struct.Memory** %MEMORY
  %loadMem_4009f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1387 = getelementptr inbounds %struct.GPR, %struct.GPR* %1386, i32 0, i32 33
  %1388 = getelementptr inbounds %struct.Reg, %struct.Reg* %1387, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %1388 to i64*
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1390 = getelementptr inbounds %struct.GPR, %struct.GPR* %1389, i32 0, i32 1
  %1391 = getelementptr inbounds %struct.Reg, %struct.Reg* %1390, i32 0, i32 0
  %RAX.i1044 = bitcast %union.anon* %1391 to i64*
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1393 = getelementptr inbounds %struct.GPR, %struct.GPR* %1392, i32 0, i32 15
  %1394 = getelementptr inbounds %struct.Reg, %struct.Reg* %1393, i32 0, i32 0
  %RBP.i1045 = bitcast %union.anon* %1394 to i64*
  %1395 = load i64, i64* %RBP.i1045
  %1396 = sub i64 %1395, 168
  %1397 = load i64, i64* %PC.i1043
  %1398 = add i64 %1397, 11
  store i64 %1398, i64* %PC.i1043
  %1399 = inttoptr i64 %1396 to i64*
  %1400 = load i64, i64* %1399
  %1401 = sext i64 %1400 to i128
  %1402 = and i128 %1401, -18446744073709551616
  %1403 = zext i64 %1400 to i128
  %1404 = or i128 %1402, %1403
  %1405 = mul i128 %1404, 899
  %1406 = trunc i128 %1405 to i64
  store i64 %1406, i64* %RAX.i1044, align 8
  %1407 = sext i64 %1406 to i128
  %1408 = icmp ne i128 %1407, %1405
  %1409 = zext i1 %1408 to i8
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1409, i8* %1410, align 1
  %1411 = trunc i128 %1405 to i32
  %1412 = and i32 %1411, 255
  %1413 = call i32 @llvm.ctpop.i32(i32 %1412)
  %1414 = trunc i32 %1413 to i8
  %1415 = and i8 %1414, 1
  %1416 = xor i8 %1415, 1
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1416, i8* %1417, align 1
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1418, align 1
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1419, align 1
  %1420 = lshr i64 %1406, 63
  %1421 = trunc i64 %1420 to i8
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1421, i8* %1422, align 1
  %1423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1409, i8* %1423, align 1
  store %struct.Memory* %loadMem_4009f8, %struct.Memory** %MEMORY
  %loadMem_400a03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1425 = getelementptr inbounds %struct.GPR, %struct.GPR* %1424, i32 0, i32 33
  %1426 = getelementptr inbounds %struct.Reg, %struct.Reg* %1425, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %1426 to i64*
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1428 = getelementptr inbounds %struct.GPR, %struct.GPR* %1427, i32 0, i32 1
  %1429 = getelementptr inbounds %struct.Reg, %struct.Reg* %1428, i32 0, i32 0
  %RAX.i1041 = bitcast %union.anon* %1429 to i64*
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1431 = getelementptr inbounds %struct.GPR, %struct.GPR* %1430, i32 0, i32 15
  %1432 = getelementptr inbounds %struct.Reg, %struct.Reg* %1431, i32 0, i32 0
  %RBP.i1042 = bitcast %union.anon* %1432 to i64*
  %1433 = load i64, i64* %RBP.i1042
  %1434 = sub i64 %1433, 80
  %1435 = load i64, i64* %RAX.i1041
  %1436 = load i64, i64* %PC.i1040
  %1437 = add i64 %1436, 4
  store i64 %1437, i64* %PC.i1040
  %1438 = inttoptr i64 %1434 to i64*
  store i64 %1435, i64* %1438
  store %struct.Memory* %loadMem_400a03, %struct.Memory** %MEMORY
  %loadMem_400a07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1440 = getelementptr inbounds %struct.GPR, %struct.GPR* %1439, i32 0, i32 33
  %1441 = getelementptr inbounds %struct.Reg, %struct.Reg* %1440, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %1441 to i64*
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1443 = getelementptr inbounds %struct.GPR, %struct.GPR* %1442, i32 0, i32 1
  %1444 = getelementptr inbounds %struct.Reg, %struct.Reg* %1443, i32 0, i32 0
  %RAX.i1038 = bitcast %union.anon* %1444 to i64*
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1446 = getelementptr inbounds %struct.GPR, %struct.GPR* %1445, i32 0, i32 15
  %1447 = getelementptr inbounds %struct.Reg, %struct.Reg* %1446, i32 0, i32 0
  %RBP.i1039 = bitcast %union.anon* %1447 to i64*
  %1448 = load i64, i64* %RBP.i1039
  %1449 = sub i64 %1448, 168
  %1450 = load i64, i64* %PC.i1037
  %1451 = add i64 %1450, 11
  store i64 %1451, i64* %PC.i1037
  %1452 = inttoptr i64 %1449 to i64*
  %1453 = load i64, i64* %1452
  %1454 = sext i64 %1453 to i128
  %1455 = and i128 %1454, -18446744073709551616
  %1456 = zext i64 %1453 to i128
  %1457 = or i128 %1455, %1456
  %1458 = mul i128 %1457, 616
  %1459 = trunc i128 %1458 to i64
  store i64 %1459, i64* %RAX.i1038, align 8
  %1460 = sext i64 %1459 to i128
  %1461 = icmp ne i128 %1460, %1458
  %1462 = zext i1 %1461 to i8
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1462, i8* %1463, align 1
  %1464 = trunc i128 %1458 to i32
  %1465 = and i32 %1464, 255
  %1466 = call i32 @llvm.ctpop.i32(i32 %1465)
  %1467 = trunc i32 %1466 to i8
  %1468 = and i8 %1467, 1
  %1469 = xor i8 %1468, 1
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1469, i8* %1470, align 1
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1471, align 1
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1472, align 1
  %1473 = lshr i64 %1459, 63
  %1474 = trunc i64 %1473 to i8
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1474, i8* %1475, align 1
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1462, i8* %1476, align 1
  store %struct.Memory* %loadMem_400a07, %struct.Memory** %MEMORY
  %loadMem_400a12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 33
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %1479 to i64*
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1481 = getelementptr inbounds %struct.GPR, %struct.GPR* %1480, i32 0, i32 1
  %1482 = getelementptr inbounds %struct.Reg, %struct.Reg* %1481, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %1482 to i64*
  %1483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1484 = getelementptr inbounds %struct.GPR, %struct.GPR* %1483, i32 0, i32 15
  %1485 = getelementptr inbounds %struct.Reg, %struct.Reg* %1484, i32 0, i32 0
  %RBP.i1036 = bitcast %union.anon* %1485 to i64*
  %1486 = load i64, i64* %RBP.i1036
  %1487 = sub i64 %1486, 88
  %1488 = load i64, i64* %RAX.i1035
  %1489 = load i64, i64* %PC.i1034
  %1490 = add i64 %1489, 4
  store i64 %1490, i64* %PC.i1034
  %1491 = inttoptr i64 %1487 to i64*
  store i64 %1488, i64* %1491
  store %struct.Memory* %loadMem_400a12, %struct.Memory** %MEMORY
  %loadMem_400a16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1493 = getelementptr inbounds %struct.GPR, %struct.GPR* %1492, i32 0, i32 33
  %1494 = getelementptr inbounds %struct.Reg, %struct.Reg* %1493, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %1494 to i64*
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 15
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %RBP.i1033 = bitcast %union.anon* %1497 to i64*
  %1498 = load i64, i64* %RBP.i1033
  %1499 = sub i64 %1498, 96
  %1500 = load i64, i64* %PC.i1032
  %1501 = add i64 %1500, 8
  store i64 %1501, i64* %PC.i1032
  %1502 = inttoptr i64 %1499 to i64*
  store i64 0, i64* %1502
  store %struct.Memory* %loadMem_400a16, %struct.Memory** %MEMORY
  %loadMem_400a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1504 = getelementptr inbounds %struct.GPR, %struct.GPR* %1503, i32 0, i32 33
  %1505 = getelementptr inbounds %struct.Reg, %struct.Reg* %1504, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %1505 to i64*
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1507 = getelementptr inbounds %struct.GPR, %struct.GPR* %1506, i32 0, i32 1
  %1508 = getelementptr inbounds %struct.Reg, %struct.Reg* %1507, i32 0, i32 0
  %RAX.i1030 = bitcast %union.anon* %1508 to i64*
  %1509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1510 = getelementptr inbounds %struct.GPR, %struct.GPR* %1509, i32 0, i32 15
  %1511 = getelementptr inbounds %struct.Reg, %struct.Reg* %1510, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %1511 to i64*
  %1512 = load i64, i64* %RBP.i1031
  %1513 = sub i64 %1512, 168
  %1514 = load i64, i64* %PC.i1029
  %1515 = add i64 %1514, 8
  store i64 %1515, i64* %PC.i1029
  %1516 = inttoptr i64 %1513 to i64*
  %1517 = load i64, i64* %1516
  %1518 = sext i64 %1517 to i128
  %1519 = and i128 %1518, -18446744073709551616
  %1520 = zext i64 %1517 to i128
  %1521 = or i128 %1519, %1520
  %1522 = mul i128 %1521, 93
  %1523 = trunc i128 %1522 to i64
  store i64 %1523, i64* %RAX.i1030, align 8
  %1524 = sext i64 %1523 to i128
  %1525 = icmp ne i128 %1524, %1522
  %1526 = zext i1 %1525 to i8
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1526, i8* %1527, align 1
  %1528 = trunc i128 %1522 to i32
  %1529 = and i32 %1528, 255
  %1530 = call i32 @llvm.ctpop.i32(i32 %1529)
  %1531 = trunc i32 %1530 to i8
  %1532 = and i8 %1531, 1
  %1533 = xor i8 %1532, 1
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1533, i8* %1534, align 1
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1535, align 1
  %1536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1536, align 1
  %1537 = lshr i64 %1523, 63
  %1538 = trunc i64 %1537 to i8
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1538, i8* %1539, align 1
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1526, i8* %1540, align 1
  store %struct.Memory* %loadMem_400a1e, %struct.Memory** %MEMORY
  %loadMem_400a26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1542 = getelementptr inbounds %struct.GPR, %struct.GPR* %1541, i32 0, i32 33
  %1543 = getelementptr inbounds %struct.Reg, %struct.Reg* %1542, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %1543 to i64*
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1545 = getelementptr inbounds %struct.GPR, %struct.GPR* %1544, i32 0, i32 1
  %1546 = getelementptr inbounds %struct.Reg, %struct.Reg* %1545, i32 0, i32 0
  %RAX.i1027 = bitcast %union.anon* %1546 to i64*
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1548 = getelementptr inbounds %struct.GPR, %struct.GPR* %1547, i32 0, i32 15
  %1549 = getelementptr inbounds %struct.Reg, %struct.Reg* %1548, i32 0, i32 0
  %RBP.i1028 = bitcast %union.anon* %1549 to i64*
  %1550 = load i64, i64* %RBP.i1028
  %1551 = sub i64 %1550, 104
  %1552 = load i64, i64* %RAX.i1027
  %1553 = load i64, i64* %PC.i1026
  %1554 = add i64 %1553, 4
  store i64 %1554, i64* %PC.i1026
  %1555 = inttoptr i64 %1551 to i64*
  store i64 %1552, i64* %1555
  store %struct.Memory* %loadMem_400a26, %struct.Memory** %MEMORY
  %loadMem_400a2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 33
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %1558 to i64*
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1560 = getelementptr inbounds %struct.GPR, %struct.GPR* %1559, i32 0, i32 15
  %1561 = getelementptr inbounds %struct.Reg, %struct.Reg* %1560, i32 0, i32 0
  %RBP.i1024 = bitcast %union.anon* %1561 to i64*
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1563 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1562, i64 0, i64 1
  %XMM1.i1025 = bitcast %union.VectorReg* %1563 to %union.vec128_t*
  %1564 = load i64, i64* %RBP.i1024
  %1565 = sub i64 %1564, 112
  %1566 = bitcast %union.vec128_t* %XMM1.i1025 to i8*
  %1567 = load i64, i64* %PC.i1023
  %1568 = add i64 %1567, 5
  store i64 %1568, i64* %PC.i1023
  %1569 = bitcast i8* %1566 to double*
  %1570 = load double, double* %1569, align 1
  %1571 = inttoptr i64 %1565 to double*
  store double %1570, double* %1571
  store %struct.Memory* %loadMem_400a2a, %struct.Memory** %MEMORY
  %loadMem_400a2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1573 = getelementptr inbounds %struct.GPR, %struct.GPR* %1572, i32 0, i32 33
  %1574 = getelementptr inbounds %struct.Reg, %struct.Reg* %1573, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %1574 to i64*
  %1575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1576 = getelementptr inbounds %struct.GPR, %struct.GPR* %1575, i32 0, i32 15
  %1577 = getelementptr inbounds %struct.Reg, %struct.Reg* %1576, i32 0, i32 0
  %RBP.i1021 = bitcast %union.anon* %1577 to i64*
  %1578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1579 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1578, i64 0, i64 0
  %XMM0.i1022 = bitcast %union.VectorReg* %1579 to %union.vec128_t*
  %1580 = load i64, i64* %RBP.i1021
  %1581 = sub i64 %1580, 120
  %1582 = bitcast %union.vec128_t* %XMM0.i1022 to i8*
  %1583 = load i64, i64* %PC.i1020
  %1584 = add i64 %1583, 5
  store i64 %1584, i64* %PC.i1020
  %1585 = bitcast i8* %1582 to double*
  %1586 = load double, double* %1585, align 1
  %1587 = inttoptr i64 %1581 to double*
  store double %1586, double* %1587
  store %struct.Memory* %loadMem_400a2f, %struct.Memory** %MEMORY
  %loadMem_400a34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1589 = getelementptr inbounds %struct.GPR, %struct.GPR* %1588, i32 0, i32 33
  %1590 = getelementptr inbounds %struct.Reg, %struct.Reg* %1589, i32 0, i32 0
  %PC.i1017 = bitcast %union.anon* %1590 to i64*
  %1591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1592 = getelementptr inbounds %struct.GPR, %struct.GPR* %1591, i32 0, i32 15
  %1593 = getelementptr inbounds %struct.Reg, %struct.Reg* %1592, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %1593 to i64*
  %1594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1595 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1594, i64 0, i64 0
  %XMM0.i1019 = bitcast %union.VectorReg* %1595 to %union.vec128_t*
  %1596 = load i64, i64* %RBP.i1018
  %1597 = sub i64 %1596, 128
  %1598 = bitcast %union.vec128_t* %XMM0.i1019 to i8*
  %1599 = load i64, i64* %PC.i1017
  %1600 = add i64 %1599, 5
  store i64 %1600, i64* %PC.i1017
  %1601 = bitcast i8* %1598 to double*
  %1602 = load double, double* %1601, align 1
  %1603 = inttoptr i64 %1597 to double*
  store double %1602, double* %1603
  store %struct.Memory* %loadMem_400a34, %struct.Memory** %MEMORY
  %loadMem_400a39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1605 = getelementptr inbounds %struct.GPR, %struct.GPR* %1604, i32 0, i32 33
  %1606 = getelementptr inbounds %struct.Reg, %struct.Reg* %1605, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %1606 to i64*
  %1607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1608 = getelementptr inbounds %struct.GPR, %struct.GPR* %1607, i32 0, i32 15
  %1609 = getelementptr inbounds %struct.Reg, %struct.Reg* %1608, i32 0, i32 0
  %RBP.i1015 = bitcast %union.anon* %1609 to i64*
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1611 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1610, i64 0, i64 0
  %XMM0.i1016 = bitcast %union.VectorReg* %1611 to %union.vec128_t*
  %1612 = load i64, i64* %RBP.i1015
  %1613 = sub i64 %1612, 136
  %1614 = bitcast %union.vec128_t* %XMM0.i1016 to i8*
  %1615 = load i64, i64* %PC.i1014
  %1616 = add i64 %1615, 8
  store i64 %1616, i64* %PC.i1014
  %1617 = bitcast i8* %1614 to double*
  %1618 = load double, double* %1617, align 1
  %1619 = inttoptr i64 %1613 to double*
  store double %1618, double* %1619
  store %struct.Memory* %loadMem_400a39, %struct.Memory** %MEMORY
  %loadMem_400a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1621 = getelementptr inbounds %struct.GPR, %struct.GPR* %1620, i32 0, i32 33
  %1622 = getelementptr inbounds %struct.Reg, %struct.Reg* %1621, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %1622 to i64*
  %1623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1624 = getelementptr inbounds %struct.GPR, %struct.GPR* %1623, i32 0, i32 15
  %1625 = getelementptr inbounds %struct.Reg, %struct.Reg* %1624, i32 0, i32 0
  %RBP.i1013 = bitcast %union.anon* %1625 to i64*
  %1626 = load i64, i64* %RBP.i1013
  %1627 = sub i64 %1626, 24
  %1628 = load i64, i64* %PC.i1012
  %1629 = add i64 %1628, 8
  store i64 %1629, i64* %PC.i1012
  %1630 = inttoptr i64 %1627 to i64*
  store i64 1, i64* %1630
  store %struct.Memory* %loadMem_400a41, %struct.Memory** %MEMORY
  br label %block_.L_400a49

block_.L_400a49:                                  ; preds = %block_400a57, %block_.L_40099b
  %loadMem_400a49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1632 = getelementptr inbounds %struct.GPR, %struct.GPR* %1631, i32 0, i32 33
  %1633 = getelementptr inbounds %struct.Reg, %struct.Reg* %1632, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %1633 to i64*
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1635 = getelementptr inbounds %struct.GPR, %struct.GPR* %1634, i32 0, i32 1
  %1636 = getelementptr inbounds %struct.Reg, %struct.Reg* %1635, i32 0, i32 0
  %RAX.i1010 = bitcast %union.anon* %1636 to i64*
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1638 = getelementptr inbounds %struct.GPR, %struct.GPR* %1637, i32 0, i32 15
  %1639 = getelementptr inbounds %struct.Reg, %struct.Reg* %1638, i32 0, i32 0
  %RBP.i1011 = bitcast %union.anon* %1639 to i64*
  %1640 = load i64, i64* %RBP.i1011
  %1641 = sub i64 %1640, 24
  %1642 = load i64, i64* %PC.i1009
  %1643 = add i64 %1642, 4
  store i64 %1643, i64* %PC.i1009
  %1644 = inttoptr i64 %1641 to i64*
  %1645 = load i64, i64* %1644
  store i64 %1645, i64* %RAX.i1010, align 8
  store %struct.Memory* %loadMem_400a49, %struct.Memory** %MEMORY
  %loadMem_400a4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1647 = getelementptr inbounds %struct.GPR, %struct.GPR* %1646, i32 0, i32 33
  %1648 = getelementptr inbounds %struct.Reg, %struct.Reg* %1647, i32 0, i32 0
  %PC.i1006 = bitcast %union.anon* %1648 to i64*
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1650 = getelementptr inbounds %struct.GPR, %struct.GPR* %1649, i32 0, i32 1
  %1651 = getelementptr inbounds %struct.Reg, %struct.Reg* %1650, i32 0, i32 0
  %RAX.i1007 = bitcast %union.anon* %1651 to i64*
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1653 = getelementptr inbounds %struct.GPR, %struct.GPR* %1652, i32 0, i32 15
  %1654 = getelementptr inbounds %struct.Reg, %struct.Reg* %1653, i32 0, i32 0
  %RBP.i1008 = bitcast %union.anon* %1654 to i64*
  %1655 = load i64, i64* %RAX.i1007
  %1656 = load i64, i64* %RBP.i1008
  %1657 = sub i64 %1656, 32
  %1658 = load i64, i64* %PC.i1006
  %1659 = add i64 %1658, 4
  store i64 %1659, i64* %PC.i1006
  %1660 = inttoptr i64 %1657 to i64*
  %1661 = load i64, i64* %1660
  %1662 = sub i64 %1655, %1661
  %1663 = icmp ugt i64 %1661, %1655
  %1664 = zext i1 %1663 to i8
  %1665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1664, i8* %1665, align 1
  %1666 = trunc i64 %1662 to i32
  %1667 = and i32 %1666, 255
  %1668 = call i32 @llvm.ctpop.i32(i32 %1667)
  %1669 = trunc i32 %1668 to i8
  %1670 = and i8 %1669, 1
  %1671 = xor i8 %1670, 1
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1671, i8* %1672, align 1
  %1673 = xor i64 %1661, %1655
  %1674 = xor i64 %1673, %1662
  %1675 = lshr i64 %1674, 4
  %1676 = trunc i64 %1675 to i8
  %1677 = and i8 %1676, 1
  %1678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1677, i8* %1678, align 1
  %1679 = icmp eq i64 %1662, 0
  %1680 = zext i1 %1679 to i8
  %1681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1680, i8* %1681, align 1
  %1682 = lshr i64 %1662, 63
  %1683 = trunc i64 %1682 to i8
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1683, i8* %1684, align 1
  %1685 = lshr i64 %1655, 63
  %1686 = lshr i64 %1661, 63
  %1687 = xor i64 %1686, %1685
  %1688 = xor i64 %1682, %1685
  %1689 = add i64 %1688, %1687
  %1690 = icmp eq i64 %1689, 2
  %1691 = zext i1 %1690 to i8
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1691, i8* %1692, align 1
  store %struct.Memory* %loadMem_400a4d, %struct.Memory** %MEMORY
  %loadMem_400a51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1694 = getelementptr inbounds %struct.GPR, %struct.GPR* %1693, i32 0, i32 33
  %1695 = getelementptr inbounds %struct.Reg, %struct.Reg* %1694, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %1695 to i64*
  %1696 = load i64, i64* %PC.i1005
  %1697 = add i64 %1696, 197
  %1698 = load i64, i64* %PC.i1005
  %1699 = add i64 %1698, 6
  %1700 = load i64, i64* %PC.i1005
  %1701 = add i64 %1700, 6
  store i64 %1701, i64* %PC.i1005
  %1702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1703 = load i8, i8* %1702, align 1
  %1704 = icmp eq i8 %1703, 0
  %1705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1706 = load i8, i8* %1705, align 1
  %1707 = icmp ne i8 %1706, 0
  %1708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1709 = load i8, i8* %1708, align 1
  %1710 = icmp ne i8 %1709, 0
  %1711 = xor i1 %1707, %1710
  %1712 = xor i1 %1711, true
  %1713 = and i1 %1704, %1712
  %1714 = zext i1 %1713 to i8
  store i8 %1714, i8* %BRANCH_TAKEN, align 1
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1716 = select i1 %1713, i64 %1697, i64 %1699
  store i64 %1716, i64* %1715, align 8
  store %struct.Memory* %loadMem_400a51, %struct.Memory** %MEMORY
  %loadBr_400a51 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400a51 = icmp eq i8 %loadBr_400a51, 1
  br i1 %cmpBr_400a51, label %block_.L_400b16, label %block_400a57

block_400a57:                                     ; preds = %block_.L_400a49
  %loadMem_400a57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1718 = getelementptr inbounds %struct.GPR, %struct.GPR* %1717, i32 0, i32 33
  %1719 = getelementptr inbounds %struct.Reg, %struct.Reg* %1718, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %1719 to i64*
  %1720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1721 = getelementptr inbounds %struct.GPR, %struct.GPR* %1720, i32 0, i32 1
  %1722 = getelementptr inbounds %struct.Reg, %struct.Reg* %1721, i32 0, i32 0
  %RAX.i1004 = bitcast %union.anon* %1722 to i64*
  %1723 = load i64, i64* %PC.i1003
  %1724 = add i64 %1723, 10
  store i64 %1724, i64* %PC.i1003
  store i64 -9223372036854775808, i64* %RAX.i1004, align 8
  store %struct.Memory* %loadMem_400a57, %struct.Memory** %MEMORY
  %loadMem_400a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1726 = getelementptr inbounds %struct.GPR, %struct.GPR* %1725, i32 0, i32 33
  %1727 = getelementptr inbounds %struct.Reg, %struct.Reg* %1726, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %1727 to i64*
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1729 = getelementptr inbounds %struct.GPR, %struct.GPR* %1728, i32 0, i32 15
  %1730 = getelementptr inbounds %struct.Reg, %struct.Reg* %1729, i32 0, i32 0
  %RBP.i1001 = bitcast %union.anon* %1730 to i64*
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1732 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1731, i64 0, i64 0
  %YMM0.i1002 = bitcast %union.VectorReg* %1732 to %"class.std::bitset"*
  %1733 = bitcast %"class.std::bitset"* %YMM0.i1002 to i8*
  %1734 = load i64, i64* %RBP.i1001
  %1735 = sub i64 %1734, 112
  %1736 = load i64, i64* %PC.i1000
  %1737 = add i64 %1736, 5
  store i64 %1737, i64* %PC.i1000
  %1738 = inttoptr i64 %1735 to double*
  %1739 = load double, double* %1738
  %1740 = bitcast i8* %1733 to double*
  store double %1739, double* %1740, align 1
  %1741 = getelementptr inbounds i8, i8* %1733, i64 8
  %1742 = bitcast i8* %1741 to double*
  store double 0.000000e+00, double* %1742, align 1
  store %struct.Memory* %loadMem_400a61, %struct.Memory** %MEMORY
  %loadMem_400a66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1744 = getelementptr inbounds %struct.GPR, %struct.GPR* %1743, i32 0, i32 33
  %1745 = getelementptr inbounds %struct.Reg, %struct.Reg* %1744, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %1745 to i64*
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1747 = getelementptr inbounds %struct.GPR, %struct.GPR* %1746, i32 0, i32 15
  %1748 = getelementptr inbounds %struct.Reg, %struct.Reg* %1747, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %1748 to i64*
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1750 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1749, i64 0, i64 0
  %YMM0.i999 = bitcast %union.VectorReg* %1750 to %"class.std::bitset"*
  %1751 = bitcast %"class.std::bitset"* %YMM0.i999 to i8*
  %1752 = bitcast %"class.std::bitset"* %YMM0.i999 to i8*
  %1753 = load i64, i64* %RBP.i998
  %1754 = sub i64 %1753, 120
  %1755 = load i64, i64* %PC.i997
  %1756 = add i64 %1755, 5
  store i64 %1756, i64* %PC.i997
  %1757 = bitcast i8* %1752 to double*
  %1758 = load double, double* %1757, align 1
  %1759 = getelementptr inbounds i8, i8* %1752, i64 8
  %1760 = bitcast i8* %1759 to i64*
  %1761 = load i64, i64* %1760, align 1
  %1762 = inttoptr i64 %1754 to double*
  %1763 = load double, double* %1762
  %1764 = fadd double %1758, %1763
  %1765 = bitcast i8* %1751 to double*
  store double %1764, double* %1765, align 1
  %1766 = getelementptr inbounds i8, i8* %1751, i64 8
  %1767 = bitcast i8* %1766 to i64*
  store i64 %1761, i64* %1767, align 1
  store %struct.Memory* %loadMem_400a66, %struct.Memory** %MEMORY
  %loadMem_400a6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1769 = getelementptr inbounds %struct.GPR, %struct.GPR* %1768, i32 0, i32 33
  %1770 = getelementptr inbounds %struct.Reg, %struct.Reg* %1769, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %1770 to i64*
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1772 = getelementptr inbounds %struct.GPR, %struct.GPR* %1771, i32 0, i32 15
  %1773 = getelementptr inbounds %struct.Reg, %struct.Reg* %1772, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %1773 to i64*
  %1774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1775 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1774, i64 0, i64 0
  %YMM0.i996 = bitcast %union.VectorReg* %1775 to %"class.std::bitset"*
  %1776 = bitcast %"class.std::bitset"* %YMM0.i996 to i8*
  %1777 = bitcast %"class.std::bitset"* %YMM0.i996 to i8*
  %1778 = load i64, i64* %RBP.i995
  %1779 = sub i64 %1778, 128
  %1780 = load i64, i64* %PC.i994
  %1781 = add i64 %1780, 5
  store i64 %1781, i64* %PC.i994
  %1782 = bitcast i8* %1777 to double*
  %1783 = load double, double* %1782, align 1
  %1784 = getelementptr inbounds i8, i8* %1777, i64 8
  %1785 = bitcast i8* %1784 to i64*
  %1786 = load i64, i64* %1785, align 1
  %1787 = inttoptr i64 %1779 to double*
  %1788 = load double, double* %1787
  %1789 = fadd double %1783, %1788
  %1790 = bitcast i8* %1776 to double*
  store double %1789, double* %1790, align 1
  %1791 = getelementptr inbounds i8, i8* %1776, i64 8
  %1792 = bitcast i8* %1791 to i64*
  store i64 %1786, i64* %1792, align 1
  store %struct.Memory* %loadMem_400a6b, %struct.Memory** %MEMORY
  %loadMem_400a70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1794 = getelementptr inbounds %struct.GPR, %struct.GPR* %1793, i32 0, i32 33
  %1795 = getelementptr inbounds %struct.Reg, %struct.Reg* %1794, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %1795 to i64*
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1797 = getelementptr inbounds %struct.GPR, %struct.GPR* %1796, i32 0, i32 15
  %1798 = getelementptr inbounds %struct.Reg, %struct.Reg* %1797, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %1798 to i64*
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1800 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1799, i64 0, i64 0
  %YMM0.i993 = bitcast %union.VectorReg* %1800 to %"class.std::bitset"*
  %1801 = bitcast %"class.std::bitset"* %YMM0.i993 to i8*
  %1802 = bitcast %"class.std::bitset"* %YMM0.i993 to i8*
  %1803 = load i64, i64* %RBP.i992
  %1804 = sub i64 %1803, 136
  %1805 = load i64, i64* %PC.i991
  %1806 = add i64 %1805, 8
  store i64 %1806, i64* %PC.i991
  %1807 = bitcast i8* %1802 to double*
  %1808 = load double, double* %1807, align 1
  %1809 = getelementptr inbounds i8, i8* %1802, i64 8
  %1810 = bitcast i8* %1809 to i64*
  %1811 = load i64, i64* %1810, align 1
  %1812 = inttoptr i64 %1804 to double*
  %1813 = load double, double* %1812
  %1814 = fsub double %1808, %1813
  %1815 = bitcast i8* %1801 to double*
  store double %1814, double* %1815, align 1
  %1816 = getelementptr inbounds i8, i8* %1801, i64 8
  %1817 = bitcast i8* %1816 to i64*
  store i64 %1811, i64* %1817, align 1
  store %struct.Memory* %loadMem_400a70, %struct.Memory** %MEMORY
  %loadMem_400a78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1819 = getelementptr inbounds %struct.GPR, %struct.GPR* %1818, i32 0, i32 33
  %1820 = getelementptr inbounds %struct.Reg, %struct.Reg* %1819, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %1820 to i64*
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1822 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1821, i64 0, i64 0
  %YMM0.i990 = bitcast %union.VectorReg* %1822 to %"class.std::bitset"*
  %1823 = bitcast %"class.std::bitset"* %YMM0.i990 to i8*
  %1824 = bitcast %"class.std::bitset"* %YMM0.i990 to i8*
  %1825 = load i64, i64* %PC.i989
  %1826 = add i64 %1825, 9
  store i64 %1826, i64* %PC.i989
  %1827 = bitcast i8* %1824 to double*
  %1828 = load double, double* %1827, align 1
  %1829 = getelementptr inbounds i8, i8* %1824, i64 8
  %1830 = bitcast i8* %1829 to i64*
  %1831 = load i64, i64* %1830, align 1
  %1832 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %1833 = fmul double %1828, %1832
  %1834 = bitcast i8* %1823 to double*
  store double %1833, double* %1834, align 1
  %1835 = getelementptr inbounds i8, i8* %1823, i64 8
  %1836 = bitcast i8* %1835 to i64*
  store i64 %1831, i64* %1836, align 1
  store %struct.Memory* %loadMem_400a78, %struct.Memory** %MEMORY
  %loadMem_400a81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1838 = getelementptr inbounds %struct.GPR, %struct.GPR* %1837, i32 0, i32 33
  %1839 = getelementptr inbounds %struct.Reg, %struct.Reg* %1838, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %1839 to i64*
  %1840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1841 = getelementptr inbounds %struct.GPR, %struct.GPR* %1840, i32 0, i32 15
  %1842 = getelementptr inbounds %struct.Reg, %struct.Reg* %1841, i32 0, i32 0
  %RBP.i987 = bitcast %union.anon* %1842 to i64*
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1844 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1843, i64 0, i64 0
  %XMM0.i988 = bitcast %union.VectorReg* %1844 to %union.vec128_t*
  %1845 = load i64, i64* %RBP.i987
  %1846 = sub i64 %1845, 112
  %1847 = bitcast %union.vec128_t* %XMM0.i988 to i8*
  %1848 = load i64, i64* %PC.i986
  %1849 = add i64 %1848, 5
  store i64 %1849, i64* %PC.i986
  %1850 = bitcast i8* %1847 to double*
  %1851 = load double, double* %1850, align 1
  %1852 = inttoptr i64 %1846 to double*
  store double %1851, double* %1852
  store %struct.Memory* %loadMem_400a81, %struct.Memory** %MEMORY
  %loadMem_400a86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1854 = getelementptr inbounds %struct.GPR, %struct.GPR* %1853, i32 0, i32 33
  %1855 = getelementptr inbounds %struct.Reg, %struct.Reg* %1854, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %1855 to i64*
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1857 = getelementptr inbounds %struct.GPR, %struct.GPR* %1856, i32 0, i32 15
  %1858 = getelementptr inbounds %struct.Reg, %struct.Reg* %1857, i32 0, i32 0
  %RBP.i984 = bitcast %union.anon* %1858 to i64*
  %1859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1860 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1859, i64 0, i64 0
  %YMM0.i985 = bitcast %union.VectorReg* %1860 to %"class.std::bitset"*
  %1861 = bitcast %"class.std::bitset"* %YMM0.i985 to i8*
  %1862 = load i64, i64* %RBP.i984
  %1863 = sub i64 %1862, 112
  %1864 = load i64, i64* %PC.i983
  %1865 = add i64 %1864, 5
  store i64 %1865, i64* %PC.i983
  %1866 = inttoptr i64 %1863 to double*
  %1867 = load double, double* %1866
  %1868 = bitcast i8* %1861 to double*
  store double %1867, double* %1868, align 1
  %1869 = getelementptr inbounds i8, i8* %1861, i64 8
  %1870 = bitcast i8* %1869 to double*
  store double 0.000000e+00, double* %1870, align 1
  store %struct.Memory* %loadMem_400a86, %struct.Memory** %MEMORY
  %loadMem_400a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1872 = getelementptr inbounds %struct.GPR, %struct.GPR* %1871, i32 0, i32 33
  %1873 = getelementptr inbounds %struct.Reg, %struct.Reg* %1872, i32 0, i32 0
  %PC.i980 = bitcast %union.anon* %1873 to i64*
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 15
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %RBP.i981 = bitcast %union.anon* %1876 to i64*
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1878 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1877, i64 0, i64 0
  %YMM0.i982 = bitcast %union.VectorReg* %1878 to %"class.std::bitset"*
  %1879 = bitcast %"class.std::bitset"* %YMM0.i982 to i8*
  %1880 = bitcast %"class.std::bitset"* %YMM0.i982 to i8*
  %1881 = load i64, i64* %RBP.i981
  %1882 = sub i64 %1881, 120
  %1883 = load i64, i64* %PC.i980
  %1884 = add i64 %1883, 5
  store i64 %1884, i64* %PC.i980
  %1885 = bitcast i8* %1880 to double*
  %1886 = load double, double* %1885, align 1
  %1887 = getelementptr inbounds i8, i8* %1880, i64 8
  %1888 = bitcast i8* %1887 to i64*
  %1889 = load i64, i64* %1888, align 1
  %1890 = inttoptr i64 %1882 to double*
  %1891 = load double, double* %1890
  %1892 = fadd double %1886, %1891
  %1893 = bitcast i8* %1879 to double*
  store double %1892, double* %1893, align 1
  %1894 = getelementptr inbounds i8, i8* %1879, i64 8
  %1895 = bitcast i8* %1894 to i64*
  store i64 %1889, i64* %1895, align 1
  store %struct.Memory* %loadMem_400a8b, %struct.Memory** %MEMORY
  %loadMem_400a90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1897 = getelementptr inbounds %struct.GPR, %struct.GPR* %1896, i32 0, i32 33
  %1898 = getelementptr inbounds %struct.Reg, %struct.Reg* %1897, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %1898 to i64*
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1900 = getelementptr inbounds %struct.GPR, %struct.GPR* %1899, i32 0, i32 15
  %1901 = getelementptr inbounds %struct.Reg, %struct.Reg* %1900, i32 0, i32 0
  %RBP.i978 = bitcast %union.anon* %1901 to i64*
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1903 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1902, i64 0, i64 0
  %YMM0.i979 = bitcast %union.VectorReg* %1903 to %"class.std::bitset"*
  %1904 = bitcast %"class.std::bitset"* %YMM0.i979 to i8*
  %1905 = bitcast %"class.std::bitset"* %YMM0.i979 to i8*
  %1906 = load i64, i64* %RBP.i978
  %1907 = sub i64 %1906, 128
  %1908 = load i64, i64* %PC.i977
  %1909 = add i64 %1908, 5
  store i64 %1909, i64* %PC.i977
  %1910 = bitcast i8* %1905 to double*
  %1911 = load double, double* %1910, align 1
  %1912 = getelementptr inbounds i8, i8* %1905, i64 8
  %1913 = bitcast i8* %1912 to i64*
  %1914 = load i64, i64* %1913, align 1
  %1915 = inttoptr i64 %1907 to double*
  %1916 = load double, double* %1915
  %1917 = fsub double %1911, %1916
  %1918 = bitcast i8* %1904 to double*
  store double %1917, double* %1918, align 1
  %1919 = getelementptr inbounds i8, i8* %1904, i64 8
  %1920 = bitcast i8* %1919 to i64*
  store i64 %1914, i64* %1920, align 1
  store %struct.Memory* %loadMem_400a90, %struct.Memory** %MEMORY
  %loadMem_400a95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1922 = getelementptr inbounds %struct.GPR, %struct.GPR* %1921, i32 0, i32 33
  %1923 = getelementptr inbounds %struct.Reg, %struct.Reg* %1922, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %1923 to i64*
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1925 = getelementptr inbounds %struct.GPR, %struct.GPR* %1924, i32 0, i32 15
  %1926 = getelementptr inbounds %struct.Reg, %struct.Reg* %1925, i32 0, i32 0
  %RBP.i975 = bitcast %union.anon* %1926 to i64*
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1928 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1927, i64 0, i64 0
  %YMM0.i976 = bitcast %union.VectorReg* %1928 to %"class.std::bitset"*
  %1929 = bitcast %"class.std::bitset"* %YMM0.i976 to i8*
  %1930 = bitcast %"class.std::bitset"* %YMM0.i976 to i8*
  %1931 = load i64, i64* %RBP.i975
  %1932 = sub i64 %1931, 136
  %1933 = load i64, i64* %PC.i974
  %1934 = add i64 %1933, 8
  store i64 %1934, i64* %PC.i974
  %1935 = bitcast i8* %1930 to double*
  %1936 = load double, double* %1935, align 1
  %1937 = getelementptr inbounds i8, i8* %1930, i64 8
  %1938 = bitcast i8* %1937 to i64*
  %1939 = load i64, i64* %1938, align 1
  %1940 = inttoptr i64 %1932 to double*
  %1941 = load double, double* %1940
  %1942 = fadd double %1936, %1941
  %1943 = bitcast i8* %1929 to double*
  store double %1942, double* %1943, align 1
  %1944 = getelementptr inbounds i8, i8* %1929, i64 8
  %1945 = bitcast i8* %1944 to i64*
  store i64 %1939, i64* %1945, align 1
  store %struct.Memory* %loadMem_400a95, %struct.Memory** %MEMORY
  %loadMem_400a9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1947 = getelementptr inbounds %struct.GPR, %struct.GPR* %1946, i32 0, i32 33
  %1948 = getelementptr inbounds %struct.Reg, %struct.Reg* %1947, i32 0, i32 0
  %PC.i972 = bitcast %union.anon* %1948 to i64*
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1950 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1949, i64 0, i64 0
  %YMM0.i973 = bitcast %union.VectorReg* %1950 to %"class.std::bitset"*
  %1951 = bitcast %"class.std::bitset"* %YMM0.i973 to i8*
  %1952 = bitcast %"class.std::bitset"* %YMM0.i973 to i8*
  %1953 = load i64, i64* %PC.i972
  %1954 = add i64 %1953, 9
  store i64 %1954, i64* %PC.i972
  %1955 = bitcast i8* %1952 to double*
  %1956 = load double, double* %1955, align 1
  %1957 = getelementptr inbounds i8, i8* %1952, i64 8
  %1958 = bitcast i8* %1957 to i64*
  %1959 = load i64, i64* %1958, align 1
  %1960 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %1961 = fmul double %1956, %1960
  %1962 = bitcast i8* %1951 to double*
  store double %1961, double* %1962, align 1
  %1963 = getelementptr inbounds i8, i8* %1951, i64 8
  %1964 = bitcast i8* %1963 to i64*
  store i64 %1959, i64* %1964, align 1
  store %struct.Memory* %loadMem_400a9d, %struct.Memory** %MEMORY
  %loadMem_400aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1966 = getelementptr inbounds %struct.GPR, %struct.GPR* %1965, i32 0, i32 33
  %1967 = getelementptr inbounds %struct.Reg, %struct.Reg* %1966, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %1967 to i64*
  %1968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1969 = getelementptr inbounds %struct.GPR, %struct.GPR* %1968, i32 0, i32 15
  %1970 = getelementptr inbounds %struct.Reg, %struct.Reg* %1969, i32 0, i32 0
  %RBP.i970 = bitcast %union.anon* %1970 to i64*
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1972 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1971, i64 0, i64 0
  %XMM0.i971 = bitcast %union.VectorReg* %1972 to %union.vec128_t*
  %1973 = load i64, i64* %RBP.i970
  %1974 = sub i64 %1973, 120
  %1975 = bitcast %union.vec128_t* %XMM0.i971 to i8*
  %1976 = load i64, i64* %PC.i969
  %1977 = add i64 %1976, 5
  store i64 %1977, i64* %PC.i969
  %1978 = bitcast i8* %1975 to double*
  %1979 = load double, double* %1978, align 1
  %1980 = inttoptr i64 %1974 to double*
  store double %1979, double* %1980
  store %struct.Memory* %loadMem_400aa6, %struct.Memory** %MEMORY
  %loadMem_400aab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1982 = getelementptr inbounds %struct.GPR, %struct.GPR* %1981, i32 0, i32 33
  %1983 = getelementptr inbounds %struct.Reg, %struct.Reg* %1982, i32 0, i32 0
  %PC.i966 = bitcast %union.anon* %1983 to i64*
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1985 = getelementptr inbounds %struct.GPR, %struct.GPR* %1984, i32 0, i32 15
  %1986 = getelementptr inbounds %struct.Reg, %struct.Reg* %1985, i32 0, i32 0
  %RBP.i967 = bitcast %union.anon* %1986 to i64*
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1988 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1987, i64 0, i64 0
  %YMM0.i968 = bitcast %union.VectorReg* %1988 to %"class.std::bitset"*
  %1989 = bitcast %"class.std::bitset"* %YMM0.i968 to i8*
  %1990 = load i64, i64* %RBP.i967
  %1991 = sub i64 %1990, 112
  %1992 = load i64, i64* %PC.i966
  %1993 = add i64 %1992, 5
  store i64 %1993, i64* %PC.i966
  %1994 = inttoptr i64 %1991 to double*
  %1995 = load double, double* %1994
  %1996 = bitcast i8* %1989 to double*
  store double %1995, double* %1996, align 1
  %1997 = getelementptr inbounds i8, i8* %1989, i64 8
  %1998 = bitcast i8* %1997 to double*
  store double 0.000000e+00, double* %1998, align 1
  store %struct.Memory* %loadMem_400aab, %struct.Memory** %MEMORY
  %loadMem_400ab0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2000 = getelementptr inbounds %struct.GPR, %struct.GPR* %1999, i32 0, i32 33
  %2001 = getelementptr inbounds %struct.Reg, %struct.Reg* %2000, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %2001 to i64*
  %2002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2003 = getelementptr inbounds %struct.GPR, %struct.GPR* %2002, i32 0, i32 15
  %2004 = getelementptr inbounds %struct.Reg, %struct.Reg* %2003, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %2004 to i64*
  %2005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2006 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2005, i64 0, i64 0
  %YMM0.i965 = bitcast %union.VectorReg* %2006 to %"class.std::bitset"*
  %2007 = bitcast %"class.std::bitset"* %YMM0.i965 to i8*
  %2008 = bitcast %"class.std::bitset"* %YMM0.i965 to i8*
  %2009 = load i64, i64* %RBP.i964
  %2010 = sub i64 %2009, 120
  %2011 = load i64, i64* %PC.i963
  %2012 = add i64 %2011, 5
  store i64 %2012, i64* %PC.i963
  %2013 = bitcast i8* %2008 to double*
  %2014 = load double, double* %2013, align 1
  %2015 = getelementptr inbounds i8, i8* %2008, i64 8
  %2016 = bitcast i8* %2015 to i64*
  %2017 = load i64, i64* %2016, align 1
  %2018 = inttoptr i64 %2010 to double*
  %2019 = load double, double* %2018
  %2020 = fsub double %2014, %2019
  %2021 = bitcast i8* %2007 to double*
  store double %2020, double* %2021, align 1
  %2022 = getelementptr inbounds i8, i8* %2007, i64 8
  %2023 = bitcast i8* %2022 to i64*
  store i64 %2017, i64* %2023, align 1
  store %struct.Memory* %loadMem_400ab0, %struct.Memory** %MEMORY
  %loadMem_400ab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2025 = getelementptr inbounds %struct.GPR, %struct.GPR* %2024, i32 0, i32 33
  %2026 = getelementptr inbounds %struct.Reg, %struct.Reg* %2025, i32 0, i32 0
  %PC.i960 = bitcast %union.anon* %2026 to i64*
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2028 = getelementptr inbounds %struct.GPR, %struct.GPR* %2027, i32 0, i32 15
  %2029 = getelementptr inbounds %struct.Reg, %struct.Reg* %2028, i32 0, i32 0
  %RBP.i961 = bitcast %union.anon* %2029 to i64*
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2031 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2030, i64 0, i64 0
  %YMM0.i962 = bitcast %union.VectorReg* %2031 to %"class.std::bitset"*
  %2032 = bitcast %"class.std::bitset"* %YMM0.i962 to i8*
  %2033 = bitcast %"class.std::bitset"* %YMM0.i962 to i8*
  %2034 = load i64, i64* %RBP.i961
  %2035 = sub i64 %2034, 128
  %2036 = load i64, i64* %PC.i960
  %2037 = add i64 %2036, 5
  store i64 %2037, i64* %PC.i960
  %2038 = bitcast i8* %2033 to double*
  %2039 = load double, double* %2038, align 1
  %2040 = getelementptr inbounds i8, i8* %2033, i64 8
  %2041 = bitcast i8* %2040 to i64*
  %2042 = load i64, i64* %2041, align 1
  %2043 = inttoptr i64 %2035 to double*
  %2044 = load double, double* %2043
  %2045 = fadd double %2039, %2044
  %2046 = bitcast i8* %2032 to double*
  store double %2045, double* %2046, align 1
  %2047 = getelementptr inbounds i8, i8* %2032, i64 8
  %2048 = bitcast i8* %2047 to i64*
  store i64 %2042, i64* %2048, align 1
  store %struct.Memory* %loadMem_400ab5, %struct.Memory** %MEMORY
  %loadMem_400aba = load %struct.Memory*, %struct.Memory** %MEMORY
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 33
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %PC.i957 = bitcast %union.anon* %2051 to i64*
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2053 = getelementptr inbounds %struct.GPR, %struct.GPR* %2052, i32 0, i32 15
  %2054 = getelementptr inbounds %struct.Reg, %struct.Reg* %2053, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %2054 to i64*
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2056 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2055, i64 0, i64 0
  %YMM0.i959 = bitcast %union.VectorReg* %2056 to %"class.std::bitset"*
  %2057 = bitcast %"class.std::bitset"* %YMM0.i959 to i8*
  %2058 = bitcast %"class.std::bitset"* %YMM0.i959 to i8*
  %2059 = load i64, i64* %RBP.i958
  %2060 = sub i64 %2059, 136
  %2061 = load i64, i64* %PC.i957
  %2062 = add i64 %2061, 8
  store i64 %2062, i64* %PC.i957
  %2063 = bitcast i8* %2058 to double*
  %2064 = load double, double* %2063, align 1
  %2065 = getelementptr inbounds i8, i8* %2058, i64 8
  %2066 = bitcast i8* %2065 to i64*
  %2067 = load i64, i64* %2066, align 1
  %2068 = inttoptr i64 %2060 to double*
  %2069 = load double, double* %2068
  %2070 = fadd double %2064, %2069
  %2071 = bitcast i8* %2057 to double*
  store double %2070, double* %2071, align 1
  %2072 = getelementptr inbounds i8, i8* %2057, i64 8
  %2073 = bitcast i8* %2072 to i64*
  store i64 %2067, i64* %2073, align 1
  store %struct.Memory* %loadMem_400aba, %struct.Memory** %MEMORY
  %loadMem_400ac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2075 = getelementptr inbounds %struct.GPR, %struct.GPR* %2074, i32 0, i32 33
  %2076 = getelementptr inbounds %struct.Reg, %struct.Reg* %2075, i32 0, i32 0
  %PC.i955 = bitcast %union.anon* %2076 to i64*
  %2077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2078 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2077, i64 0, i64 0
  %YMM0.i956 = bitcast %union.VectorReg* %2078 to %"class.std::bitset"*
  %2079 = bitcast %"class.std::bitset"* %YMM0.i956 to i8*
  %2080 = bitcast %"class.std::bitset"* %YMM0.i956 to i8*
  %2081 = load i64, i64* %PC.i955
  %2082 = add i64 %2081, 9
  store i64 %2082, i64* %PC.i955
  %2083 = bitcast i8* %2080 to double*
  %2084 = load double, double* %2083, align 1
  %2085 = getelementptr inbounds i8, i8* %2080, i64 8
  %2086 = bitcast i8* %2085 to i64*
  %2087 = load i64, i64* %2086, align 1
  %2088 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %2089 = fmul double %2084, %2088
  %2090 = bitcast i8* %2079 to double*
  store double %2089, double* %2090, align 1
  %2091 = getelementptr inbounds i8, i8* %2079, i64 8
  %2092 = bitcast i8* %2091 to i64*
  store i64 %2087, i64* %2092, align 1
  store %struct.Memory* %loadMem_400ac2, %struct.Memory** %MEMORY
  %loadMem_400acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2094 = getelementptr inbounds %struct.GPR, %struct.GPR* %2093, i32 0, i32 33
  %2095 = getelementptr inbounds %struct.Reg, %struct.Reg* %2094, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %2095 to i64*
  %2096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2097 = getelementptr inbounds %struct.GPR, %struct.GPR* %2096, i32 0, i32 15
  %2098 = getelementptr inbounds %struct.Reg, %struct.Reg* %2097, i32 0, i32 0
  %RBP.i953 = bitcast %union.anon* %2098 to i64*
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2100 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2099, i64 0, i64 0
  %XMM0.i954 = bitcast %union.VectorReg* %2100 to %union.vec128_t*
  %2101 = load i64, i64* %RBP.i953
  %2102 = sub i64 %2101, 128
  %2103 = bitcast %union.vec128_t* %XMM0.i954 to i8*
  %2104 = load i64, i64* %PC.i952
  %2105 = add i64 %2104, 5
  store i64 %2105, i64* %PC.i952
  %2106 = bitcast i8* %2103 to double*
  %2107 = load double, double* %2106, align 1
  %2108 = inttoptr i64 %2102 to double*
  store double %2107, double* %2108
  store %struct.Memory* %loadMem_400acb, %struct.Memory** %MEMORY
  %loadMem_400ad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2110 = getelementptr inbounds %struct.GPR, %struct.GPR* %2109, i32 0, i32 33
  %2111 = getelementptr inbounds %struct.Reg, %struct.Reg* %2110, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %2111 to i64*
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2113 = getelementptr inbounds %struct.GPR, %struct.GPR* %2112, i32 0, i32 15
  %2114 = getelementptr inbounds %struct.Reg, %struct.Reg* %2113, i32 0, i32 0
  %RBP.i950 = bitcast %union.anon* %2114 to i64*
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2116 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2115, i64 0, i64 0
  %YMM0.i951 = bitcast %union.VectorReg* %2116 to %"class.std::bitset"*
  %2117 = bitcast %"class.std::bitset"* %YMM0.i951 to i8*
  %2118 = load i64, i64* %RBP.i950
  %2119 = sub i64 %2118, 112
  %2120 = load i64, i64* %PC.i949
  %2121 = add i64 %2120, 5
  store i64 %2121, i64* %PC.i949
  %2122 = inttoptr i64 %2119 to double*
  %2123 = load double, double* %2122
  %2124 = bitcast i8* %2117 to double*
  store double %2123, double* %2124, align 1
  %2125 = getelementptr inbounds i8, i8* %2117, i64 8
  %2126 = bitcast i8* %2125 to double*
  store double 0.000000e+00, double* %2126, align 1
  store %struct.Memory* %loadMem_400ad0, %struct.Memory** %MEMORY
  %loadMem_400ad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2128 = getelementptr inbounds %struct.GPR, %struct.GPR* %2127, i32 0, i32 33
  %2129 = getelementptr inbounds %struct.Reg, %struct.Reg* %2128, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %2129 to i64*
  %2130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2131 = getelementptr inbounds %struct.GPR, %struct.GPR* %2130, i32 0, i32 5
  %2132 = getelementptr inbounds %struct.Reg, %struct.Reg* %2131, i32 0, i32 0
  %RCX.i947 = bitcast %union.anon* %2132 to i64*
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2134 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2133, i64 0, i64 0
  %XMM0.i948 = bitcast %union.VectorReg* %2134 to %union.vec128_t*
  %2135 = bitcast %union.vec128_t* %XMM0.i948 to i8*
  %2136 = load i64, i64* %PC.i946
  %2137 = add i64 %2136, 5
  store i64 %2137, i64* %PC.i946
  %2138 = bitcast i8* %2135 to i64*
  %2139 = load i64, i64* %2138, align 1
  store i64 %2139, i64* %RCX.i947, align 1
  store %struct.Memory* %loadMem_400ad5, %struct.Memory** %MEMORY
  %loadMem_400ada = load %struct.Memory*, %struct.Memory** %MEMORY
  %2140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2141 = getelementptr inbounds %struct.GPR, %struct.GPR* %2140, i32 0, i32 33
  %2142 = getelementptr inbounds %struct.Reg, %struct.Reg* %2141, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %2142 to i64*
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2144 = getelementptr inbounds %struct.GPR, %struct.GPR* %2143, i32 0, i32 1
  %2145 = getelementptr inbounds %struct.Reg, %struct.Reg* %2144, i32 0, i32 0
  %RAX.i944 = bitcast %union.anon* %2145 to i64*
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2147 = getelementptr inbounds %struct.GPR, %struct.GPR* %2146, i32 0, i32 5
  %2148 = getelementptr inbounds %struct.Reg, %struct.Reg* %2147, i32 0, i32 0
  %RCX.i945 = bitcast %union.anon* %2148 to i64*
  %2149 = load i64, i64* %RCX.i945
  %2150 = load i64, i64* %RAX.i944
  %2151 = load i64, i64* %PC.i943
  %2152 = add i64 %2151, 3
  store i64 %2152, i64* %PC.i943
  %2153 = xor i64 %2150, %2149
  store i64 %2153, i64* %RCX.i945, align 8
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2154, align 1
  %2155 = trunc i64 %2153 to i32
  %2156 = and i32 %2155, 255
  %2157 = call i32 @llvm.ctpop.i32(i32 %2156)
  %2158 = trunc i32 %2157 to i8
  %2159 = and i8 %2158, 1
  %2160 = xor i8 %2159, 1
  %2161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2160, i8* %2161, align 1
  %2162 = icmp eq i64 %2153, 0
  %2163 = zext i1 %2162 to i8
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2163, i8* %2164, align 1
  %2165 = lshr i64 %2153, 63
  %2166 = trunc i64 %2165 to i8
  %2167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2166, i8* %2167, align 1
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2168, align 1
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2169, align 1
  store %struct.Memory* %loadMem_400ada, %struct.Memory** %MEMORY
  %loadMem_400add = load %struct.Memory*, %struct.Memory** %MEMORY
  %2170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2171 = getelementptr inbounds %struct.GPR, %struct.GPR* %2170, i32 0, i32 33
  %2172 = getelementptr inbounds %struct.Reg, %struct.Reg* %2171, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %2172 to i64*
  %2173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2174 = getelementptr inbounds %struct.GPR, %struct.GPR* %2173, i32 0, i32 5
  %2175 = getelementptr inbounds %struct.Reg, %struct.Reg* %2174, i32 0, i32 0
  %RCX.i941 = bitcast %union.anon* %2175 to i64*
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2177 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2176, i64 0, i64 0
  %YMM0.i942 = bitcast %union.VectorReg* %2177 to %"class.std::bitset"*
  %2178 = bitcast %"class.std::bitset"* %YMM0.i942 to i8*
  %2179 = load i64, i64* %RCX.i941
  %2180 = load i64, i64* %PC.i940
  %2181 = add i64 %2180, 5
  store i64 %2181, i64* %PC.i940
  %2182 = bitcast i8* %2178 to i64*
  store i64 %2179, i64* %2182, align 1
  %2183 = getelementptr inbounds i8, i8* %2178, i64 8
  %2184 = bitcast i8* %2183 to i64*
  store i64 0, i64* %2184, align 1
  store %struct.Memory* %loadMem_400add, %struct.Memory** %MEMORY
  %loadMem_400ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2186 = getelementptr inbounds %struct.GPR, %struct.GPR* %2185, i32 0, i32 33
  %2187 = getelementptr inbounds %struct.Reg, %struct.Reg* %2186, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %2187 to i64*
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2189 = getelementptr inbounds %struct.GPR, %struct.GPR* %2188, i32 0, i32 15
  %2190 = getelementptr inbounds %struct.Reg, %struct.Reg* %2189, i32 0, i32 0
  %RBP.i938 = bitcast %union.anon* %2190 to i64*
  %2191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2192 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2191, i64 0, i64 0
  %YMM0.i939 = bitcast %union.VectorReg* %2192 to %"class.std::bitset"*
  %2193 = bitcast %"class.std::bitset"* %YMM0.i939 to i8*
  %2194 = bitcast %"class.std::bitset"* %YMM0.i939 to i8*
  %2195 = load i64, i64* %RBP.i938
  %2196 = sub i64 %2195, 120
  %2197 = load i64, i64* %PC.i937
  %2198 = add i64 %2197, 5
  store i64 %2198, i64* %PC.i937
  %2199 = bitcast i8* %2194 to double*
  %2200 = load double, double* %2199, align 1
  %2201 = getelementptr inbounds i8, i8* %2194, i64 8
  %2202 = bitcast i8* %2201 to i64*
  %2203 = load i64, i64* %2202, align 1
  %2204 = inttoptr i64 %2196 to double*
  %2205 = load double, double* %2204
  %2206 = fadd double %2200, %2205
  %2207 = bitcast i8* %2193 to double*
  store double %2206, double* %2207, align 1
  %2208 = getelementptr inbounds i8, i8* %2193, i64 8
  %2209 = bitcast i8* %2208 to i64*
  store i64 %2203, i64* %2209, align 1
  store %struct.Memory* %loadMem_400ae2, %struct.Memory** %MEMORY
  %loadMem_400ae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2211 = getelementptr inbounds %struct.GPR, %struct.GPR* %2210, i32 0, i32 33
  %2212 = getelementptr inbounds %struct.Reg, %struct.Reg* %2211, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %2212 to i64*
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2214 = getelementptr inbounds %struct.GPR, %struct.GPR* %2213, i32 0, i32 15
  %2215 = getelementptr inbounds %struct.Reg, %struct.Reg* %2214, i32 0, i32 0
  %RBP.i935 = bitcast %union.anon* %2215 to i64*
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2217 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2216, i64 0, i64 0
  %YMM0.i936 = bitcast %union.VectorReg* %2217 to %"class.std::bitset"*
  %2218 = bitcast %"class.std::bitset"* %YMM0.i936 to i8*
  %2219 = bitcast %"class.std::bitset"* %YMM0.i936 to i8*
  %2220 = load i64, i64* %RBP.i935
  %2221 = sub i64 %2220, 128
  %2222 = load i64, i64* %PC.i934
  %2223 = add i64 %2222, 5
  store i64 %2223, i64* %PC.i934
  %2224 = bitcast i8* %2219 to double*
  %2225 = load double, double* %2224, align 1
  %2226 = getelementptr inbounds i8, i8* %2219, i64 8
  %2227 = bitcast i8* %2226 to i64*
  %2228 = load i64, i64* %2227, align 1
  %2229 = inttoptr i64 %2221 to double*
  %2230 = load double, double* %2229
  %2231 = fadd double %2225, %2230
  %2232 = bitcast i8* %2218 to double*
  store double %2231, double* %2232, align 1
  %2233 = getelementptr inbounds i8, i8* %2218, i64 8
  %2234 = bitcast i8* %2233 to i64*
  store i64 %2228, i64* %2234, align 1
  store %struct.Memory* %loadMem_400ae7, %struct.Memory** %MEMORY
  %loadMem_400aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2236 = getelementptr inbounds %struct.GPR, %struct.GPR* %2235, i32 0, i32 33
  %2237 = getelementptr inbounds %struct.Reg, %struct.Reg* %2236, i32 0, i32 0
  %PC.i931 = bitcast %union.anon* %2237 to i64*
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2239 = getelementptr inbounds %struct.GPR, %struct.GPR* %2238, i32 0, i32 15
  %2240 = getelementptr inbounds %struct.Reg, %struct.Reg* %2239, i32 0, i32 0
  %RBP.i932 = bitcast %union.anon* %2240 to i64*
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2242 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2241, i64 0, i64 0
  %YMM0.i933 = bitcast %union.VectorReg* %2242 to %"class.std::bitset"*
  %2243 = bitcast %"class.std::bitset"* %YMM0.i933 to i8*
  %2244 = bitcast %"class.std::bitset"* %YMM0.i933 to i8*
  %2245 = load i64, i64* %RBP.i932
  %2246 = sub i64 %2245, 136
  %2247 = load i64, i64* %PC.i931
  %2248 = add i64 %2247, 8
  store i64 %2248, i64* %PC.i931
  %2249 = bitcast i8* %2244 to double*
  %2250 = load double, double* %2249, align 1
  %2251 = getelementptr inbounds i8, i8* %2244, i64 8
  %2252 = bitcast i8* %2251 to i64*
  %2253 = load i64, i64* %2252, align 1
  %2254 = inttoptr i64 %2246 to double*
  %2255 = load double, double* %2254
  %2256 = fadd double %2250, %2255
  %2257 = bitcast i8* %2243 to double*
  store double %2256, double* %2257, align 1
  %2258 = getelementptr inbounds i8, i8* %2243, i64 8
  %2259 = bitcast i8* %2258 to i64*
  store i64 %2253, i64* %2259, align 1
  store %struct.Memory* %loadMem_400aec, %struct.Memory** %MEMORY
  %loadMem_400af4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2261 = getelementptr inbounds %struct.GPR, %struct.GPR* %2260, i32 0, i32 33
  %2262 = getelementptr inbounds %struct.Reg, %struct.Reg* %2261, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %2262 to i64*
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2264 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2263, i64 0, i64 0
  %YMM0.i930 = bitcast %union.VectorReg* %2264 to %"class.std::bitset"*
  %2265 = bitcast %"class.std::bitset"* %YMM0.i930 to i8*
  %2266 = bitcast %"class.std::bitset"* %YMM0.i930 to i8*
  %2267 = load i64, i64* %PC.i929
  %2268 = add i64 %2267, 9
  store i64 %2268, i64* %PC.i929
  %2269 = bitcast i8* %2266 to double*
  %2270 = load double, double* %2269, align 1
  %2271 = getelementptr inbounds i8, i8* %2266, i64 8
  %2272 = bitcast i8* %2271 to i64*
  %2273 = load i64, i64* %2272, align 1
  %2274 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %2275 = fmul double %2270, %2274
  %2276 = bitcast i8* %2265 to double*
  store double %2275, double* %2276, align 1
  %2277 = getelementptr inbounds i8, i8* %2265, i64 8
  %2278 = bitcast i8* %2277 to i64*
  store i64 %2273, i64* %2278, align 1
  store %struct.Memory* %loadMem_400af4, %struct.Memory** %MEMORY
  %loadMem_400afd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2280 = getelementptr inbounds %struct.GPR, %struct.GPR* %2279, i32 0, i32 33
  %2281 = getelementptr inbounds %struct.Reg, %struct.Reg* %2280, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %2281 to i64*
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2283 = getelementptr inbounds %struct.GPR, %struct.GPR* %2282, i32 0, i32 15
  %2284 = getelementptr inbounds %struct.Reg, %struct.Reg* %2283, i32 0, i32 0
  %RBP.i927 = bitcast %union.anon* %2284 to i64*
  %2285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2286 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2285, i64 0, i64 0
  %XMM0.i928 = bitcast %union.VectorReg* %2286 to %union.vec128_t*
  %2287 = load i64, i64* %RBP.i927
  %2288 = sub i64 %2287, 136
  %2289 = bitcast %union.vec128_t* %XMM0.i928 to i8*
  %2290 = load i64, i64* %PC.i926
  %2291 = add i64 %2290, 8
  store i64 %2291, i64* %PC.i926
  %2292 = bitcast i8* %2289 to double*
  %2293 = load double, double* %2292, align 1
  %2294 = inttoptr i64 %2288 to double*
  store double %2293, double* %2294
  store %struct.Memory* %loadMem_400afd, %struct.Memory** %MEMORY
  %loadMem_400b05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2296 = getelementptr inbounds %struct.GPR, %struct.GPR* %2295, i32 0, i32 33
  %2297 = getelementptr inbounds %struct.Reg, %struct.Reg* %2296, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %2297 to i64*
  %2298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2299 = getelementptr inbounds %struct.GPR, %struct.GPR* %2298, i32 0, i32 1
  %2300 = getelementptr inbounds %struct.Reg, %struct.Reg* %2299, i32 0, i32 0
  %RAX.i924 = bitcast %union.anon* %2300 to i64*
  %2301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2302 = getelementptr inbounds %struct.GPR, %struct.GPR* %2301, i32 0, i32 15
  %2303 = getelementptr inbounds %struct.Reg, %struct.Reg* %2302, i32 0, i32 0
  %RBP.i925 = bitcast %union.anon* %2303 to i64*
  %2304 = load i64, i64* %RBP.i925
  %2305 = sub i64 %2304, 24
  %2306 = load i64, i64* %PC.i923
  %2307 = add i64 %2306, 4
  store i64 %2307, i64* %PC.i923
  %2308 = inttoptr i64 %2305 to i64*
  %2309 = load i64, i64* %2308
  store i64 %2309, i64* %RAX.i924, align 8
  store %struct.Memory* %loadMem_400b05, %struct.Memory** %MEMORY
  %loadMem_400b09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2311 = getelementptr inbounds %struct.GPR, %struct.GPR* %2310, i32 0, i32 33
  %2312 = getelementptr inbounds %struct.Reg, %struct.Reg* %2311, i32 0, i32 0
  %PC.i921 = bitcast %union.anon* %2312 to i64*
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2314 = getelementptr inbounds %struct.GPR, %struct.GPR* %2313, i32 0, i32 1
  %2315 = getelementptr inbounds %struct.Reg, %struct.Reg* %2314, i32 0, i32 0
  %RAX.i922 = bitcast %union.anon* %2315 to i64*
  %2316 = load i64, i64* %RAX.i922
  %2317 = load i64, i64* %PC.i921
  %2318 = add i64 %2317, 4
  store i64 %2318, i64* %PC.i921
  %2319 = add i64 1, %2316
  store i64 %2319, i64* %RAX.i922, align 8
  %2320 = icmp ult i64 %2319, %2316
  %2321 = icmp ult i64 %2319, 1
  %2322 = or i1 %2320, %2321
  %2323 = zext i1 %2322 to i8
  %2324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2323, i8* %2324, align 1
  %2325 = trunc i64 %2319 to i32
  %2326 = and i32 %2325, 255
  %2327 = call i32 @llvm.ctpop.i32(i32 %2326)
  %2328 = trunc i32 %2327 to i8
  %2329 = and i8 %2328, 1
  %2330 = xor i8 %2329, 1
  %2331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2330, i8* %2331, align 1
  %2332 = xor i64 1, %2316
  %2333 = xor i64 %2332, %2319
  %2334 = lshr i64 %2333, 4
  %2335 = trunc i64 %2334 to i8
  %2336 = and i8 %2335, 1
  %2337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2336, i8* %2337, align 1
  %2338 = icmp eq i64 %2319, 0
  %2339 = zext i1 %2338 to i8
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2339, i8* %2340, align 1
  %2341 = lshr i64 %2319, 63
  %2342 = trunc i64 %2341 to i8
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2342, i8* %2343, align 1
  %2344 = lshr i64 %2316, 63
  %2345 = xor i64 %2341, %2344
  %2346 = add i64 %2345, %2341
  %2347 = icmp eq i64 %2346, 2
  %2348 = zext i1 %2347 to i8
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2348, i8* %2349, align 1
  store %struct.Memory* %loadMem_400b09, %struct.Memory** %MEMORY
  %loadMem_400b0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2351 = getelementptr inbounds %struct.GPR, %struct.GPR* %2350, i32 0, i32 33
  %2352 = getelementptr inbounds %struct.Reg, %struct.Reg* %2351, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %2352 to i64*
  %2353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2354 = getelementptr inbounds %struct.GPR, %struct.GPR* %2353, i32 0, i32 1
  %2355 = getelementptr inbounds %struct.Reg, %struct.Reg* %2354, i32 0, i32 0
  %RAX.i919 = bitcast %union.anon* %2355 to i64*
  %2356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2357 = getelementptr inbounds %struct.GPR, %struct.GPR* %2356, i32 0, i32 15
  %2358 = getelementptr inbounds %struct.Reg, %struct.Reg* %2357, i32 0, i32 0
  %RBP.i920 = bitcast %union.anon* %2358 to i64*
  %2359 = load i64, i64* %RBP.i920
  %2360 = sub i64 %2359, 24
  %2361 = load i64, i64* %RAX.i919
  %2362 = load i64, i64* %PC.i918
  %2363 = add i64 %2362, 4
  store i64 %2363, i64* %PC.i918
  %2364 = inttoptr i64 %2360 to i64*
  store i64 %2361, i64* %2364
  store %struct.Memory* %loadMem_400b0d, %struct.Memory** %MEMORY
  %loadMem_400b11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2366 = getelementptr inbounds %struct.GPR, %struct.GPR* %2365, i32 0, i32 33
  %2367 = getelementptr inbounds %struct.Reg, %struct.Reg* %2366, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %2367 to i64*
  %2368 = load i64, i64* %PC.i917
  %2369 = add i64 %2368, -200
  %2370 = load i64, i64* %PC.i917
  %2371 = add i64 %2370, 5
  store i64 %2371, i64* %PC.i917
  %2372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2369, i64* %2372, align 8
  store %struct.Memory* %loadMem_400b11, %struct.Memory** %MEMORY
  br label %block_.L_400a49

block_.L_400b16:                                  ; preds = %block_.L_400a49
  %loadMem_400b16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2374 = getelementptr inbounds %struct.GPR, %struct.GPR* %2373, i32 0, i32 33
  %2375 = getelementptr inbounds %struct.Reg, %struct.Reg* %2374, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %2375 to i64*
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2377 = getelementptr inbounds %struct.GPR, %struct.GPR* %2376, i32 0, i32 1
  %2378 = getelementptr inbounds %struct.Reg, %struct.Reg* %2377, i32 0, i32 0
  %RAX.i915 = bitcast %union.anon* %2378 to i64*
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2380 = getelementptr inbounds %struct.GPR, %struct.GPR* %2379, i32 0, i32 15
  %2381 = getelementptr inbounds %struct.Reg, %struct.Reg* %2380, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %2381 to i64*
  %2382 = load i64, i64* %RBP.i916
  %2383 = sub i64 %2382, 176
  %2384 = load i64, i64* %PC.i914
  %2385 = add i64 %2384, 6
  store i64 %2385, i64* %PC.i914
  %2386 = inttoptr i64 %2383 to i32*
  %2387 = load i32, i32* %2386
  %2388 = zext i32 %2387 to i64
  store i64 %2388, i64* %RAX.i915, align 8
  store %struct.Memory* %loadMem_400b16, %struct.Memory** %MEMORY
  %loadMem_400b1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2390 = getelementptr inbounds %struct.GPR, %struct.GPR* %2389, i32 0, i32 33
  %2391 = getelementptr inbounds %struct.Reg, %struct.Reg* %2390, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %2391 to i64*
  %2392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2393 = getelementptr inbounds %struct.GPR, %struct.GPR* %2392, i32 0, i32 1
  %2394 = getelementptr inbounds %struct.Reg, %struct.Reg* %2393, i32 0, i32 0
  %EAX.i912 = bitcast %union.anon* %2394 to i32*
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2396 = getelementptr inbounds %struct.GPR, %struct.GPR* %2395, i32 0, i32 15
  %2397 = getelementptr inbounds %struct.Reg, %struct.Reg* %2396, i32 0, i32 0
  %RBP.i913 = bitcast %union.anon* %2397 to i64*
  %2398 = load i32, i32* %EAX.i912
  %2399 = zext i32 %2398 to i64
  %2400 = load i64, i64* %RBP.i913
  %2401 = sub i64 %2400, 172
  %2402 = load i64, i64* %PC.i911
  %2403 = add i64 %2402, 6
  store i64 %2403, i64* %PC.i911
  %2404 = inttoptr i64 %2401 to i32*
  %2405 = load i32, i32* %2404
  %2406 = sub i32 %2398, %2405
  %2407 = icmp ult i32 %2398, %2405
  %2408 = zext i1 %2407 to i8
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2408, i8* %2409, align 1
  %2410 = and i32 %2406, 255
  %2411 = call i32 @llvm.ctpop.i32(i32 %2410)
  %2412 = trunc i32 %2411 to i8
  %2413 = and i8 %2412, 1
  %2414 = xor i8 %2413, 1
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2414, i8* %2415, align 1
  %2416 = xor i32 %2405, %2398
  %2417 = xor i32 %2416, %2406
  %2418 = lshr i32 %2417, 4
  %2419 = trunc i32 %2418 to i8
  %2420 = and i8 %2419, 1
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2420, i8* %2421, align 1
  %2422 = icmp eq i32 %2406, 0
  %2423 = zext i1 %2422 to i8
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2423, i8* %2424, align 1
  %2425 = lshr i32 %2406, 31
  %2426 = trunc i32 %2425 to i8
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2426, i8* %2427, align 1
  %2428 = lshr i32 %2398, 31
  %2429 = lshr i32 %2405, 31
  %2430 = xor i32 %2429, %2428
  %2431 = xor i32 %2425, %2428
  %2432 = add i32 %2431, %2430
  %2433 = icmp eq i32 %2432, 2
  %2434 = zext i1 %2433 to i8
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2434, i8* %2435, align 1
  store %struct.Memory* %loadMem_400b1c, %struct.Memory** %MEMORY
  %loadMem_400b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2437 = getelementptr inbounds %struct.GPR, %struct.GPR* %2436, i32 0, i32 33
  %2438 = getelementptr inbounds %struct.Reg, %struct.Reg* %2437, i32 0, i32 0
  %PC.i910 = bitcast %union.anon* %2438 to i64*
  %2439 = load i64, i64* %PC.i910
  %2440 = add i64 %2439, 46
  %2441 = load i64, i64* %PC.i910
  %2442 = add i64 %2441, 6
  %2443 = load i64, i64* %PC.i910
  %2444 = add i64 %2443, 6
  store i64 %2444, i64* %PC.i910
  %2445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2446 = load i8, i8* %2445, align 1
  %2447 = icmp eq i8 %2446, 0
  %2448 = zext i1 %2447 to i8
  store i8 %2448, i8* %BRANCH_TAKEN, align 1
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2450 = select i1 %2447, i64 %2440, i64 %2442
  store i64 %2450, i64* %2449, align 8
  store %struct.Memory* %loadMem_400b22, %struct.Memory** %MEMORY
  %loadBr_400b22 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400b22 = icmp eq i8 %loadBr_400b22, 1
  br i1 %cmpBr_400b22, label %block_.L_400b50, label %block_400b28

block_400b28:                                     ; preds = %block_.L_400b16
  %loadMem_400b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2452 = getelementptr inbounds %struct.GPR, %struct.GPR* %2451, i32 0, i32 33
  %2453 = getelementptr inbounds %struct.Reg, %struct.Reg* %2452, i32 0, i32 0
  %PC.i907 = bitcast %union.anon* %2453 to i64*
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2455 = getelementptr inbounds %struct.GPR, %struct.GPR* %2454, i32 0, i32 11
  %2456 = getelementptr inbounds %struct.Reg, %struct.Reg* %2455, i32 0, i32 0
  %RDI.i908 = bitcast %union.anon* %2456 to i64*
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2458 = getelementptr inbounds %struct.GPR, %struct.GPR* %2457, i32 0, i32 15
  %2459 = getelementptr inbounds %struct.Reg, %struct.Reg* %2458, i32 0, i32 0
  %RBP.i909 = bitcast %union.anon* %2459 to i64*
  %2460 = load i64, i64* %RBP.i909
  %2461 = sub i64 %2460, 32
  %2462 = load i64, i64* %PC.i907
  %2463 = add i64 %2462, 4
  store i64 %2463, i64* %PC.i907
  %2464 = inttoptr i64 %2461 to i64*
  %2465 = load i64, i64* %2464
  store i64 %2465, i64* %RDI.i908, align 8
  store %struct.Memory* %loadMem_400b28, %struct.Memory** %MEMORY
  %loadMem_400b2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2467 = getelementptr inbounds %struct.GPR, %struct.GPR* %2466, i32 0, i32 33
  %2468 = getelementptr inbounds %struct.Reg, %struct.Reg* %2467, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %2468 to i64*
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2470 = getelementptr inbounds %struct.GPR, %struct.GPR* %2469, i32 0, i32 9
  %2471 = getelementptr inbounds %struct.Reg, %struct.Reg* %2470, i32 0, i32 0
  %RSI.i905 = bitcast %union.anon* %2471 to i64*
  %2472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2473 = getelementptr inbounds %struct.GPR, %struct.GPR* %2472, i32 0, i32 15
  %2474 = getelementptr inbounds %struct.Reg, %struct.Reg* %2473, i32 0, i32 0
  %RBP.i906 = bitcast %union.anon* %2474 to i64*
  %2475 = load i64, i64* %RBP.i906
  %2476 = sub i64 %2475, 32
  %2477 = load i64, i64* %PC.i904
  %2478 = add i64 %2477, 4
  store i64 %2478, i64* %PC.i904
  %2479 = inttoptr i64 %2476 to i64*
  %2480 = load i64, i64* %2479
  store i64 %2480, i64* %RSI.i905, align 8
  store %struct.Memory* %loadMem_400b2c, %struct.Memory** %MEMORY
  %loadMem_400b30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2482 = getelementptr inbounds %struct.GPR, %struct.GPR* %2481, i32 0, i32 33
  %2483 = getelementptr inbounds %struct.Reg, %struct.Reg* %2482, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %2483 to i64*
  %2484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2485 = getelementptr inbounds %struct.GPR, %struct.GPR* %2484, i32 0, i32 7
  %2486 = getelementptr inbounds %struct.Reg, %struct.Reg* %2485, i32 0, i32 0
  %RDX.i902 = bitcast %union.anon* %2486 to i64*
  %2487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2488 = getelementptr inbounds %struct.GPR, %struct.GPR* %2487, i32 0, i32 15
  %2489 = getelementptr inbounds %struct.Reg, %struct.Reg* %2488, i32 0, i32 0
  %RBP.i903 = bitcast %union.anon* %2489 to i64*
  %2490 = load i64, i64* %RBP.i903
  %2491 = sub i64 %2490, 32
  %2492 = load i64, i64* %PC.i901
  %2493 = add i64 %2492, 4
  store i64 %2493, i64* %PC.i901
  %2494 = inttoptr i64 %2491 to i64*
  %2495 = load i64, i64* %2494
  store i64 %2495, i64* %RDX.i902, align 8
  store %struct.Memory* %loadMem_400b30, %struct.Memory** %MEMORY
  %loadMem_400b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2497 = getelementptr inbounds %struct.GPR, %struct.GPR* %2496, i32 0, i32 33
  %2498 = getelementptr inbounds %struct.Reg, %struct.Reg* %2497, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %2498 to i64*
  %2499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2500 = getelementptr inbounds %struct.GPR, %struct.GPR* %2499, i32 0, i32 15
  %2501 = getelementptr inbounds %struct.Reg, %struct.Reg* %2500, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %2501 to i64*
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2503 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2502, i64 0, i64 0
  %YMM0.i900 = bitcast %union.VectorReg* %2503 to %"class.std::bitset"*
  %2504 = bitcast %"class.std::bitset"* %YMM0.i900 to i8*
  %2505 = load i64, i64* %RBP.i899
  %2506 = sub i64 %2505, 112
  %2507 = load i64, i64* %PC.i898
  %2508 = add i64 %2507, 5
  store i64 %2508, i64* %PC.i898
  %2509 = inttoptr i64 %2506 to double*
  %2510 = load double, double* %2509
  %2511 = bitcast i8* %2504 to double*
  store double %2510, double* %2511, align 1
  %2512 = getelementptr inbounds i8, i8* %2504, i64 8
  %2513 = bitcast i8* %2512 to double*
  store double 0.000000e+00, double* %2513, align 1
  store %struct.Memory* %loadMem_400b34, %struct.Memory** %MEMORY
  %loadMem_400b39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2515 = getelementptr inbounds %struct.GPR, %struct.GPR* %2514, i32 0, i32 33
  %2516 = getelementptr inbounds %struct.Reg, %struct.Reg* %2515, i32 0, i32 0
  %PC.i895 = bitcast %union.anon* %2516 to i64*
  %2517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2518 = getelementptr inbounds %struct.GPR, %struct.GPR* %2517, i32 0, i32 15
  %2519 = getelementptr inbounds %struct.Reg, %struct.Reg* %2518, i32 0, i32 0
  %RBP.i896 = bitcast %union.anon* %2519 to i64*
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2521 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2520, i64 0, i64 1
  %YMM1.i897 = bitcast %union.VectorReg* %2521 to %"class.std::bitset"*
  %2522 = bitcast %"class.std::bitset"* %YMM1.i897 to i8*
  %2523 = load i64, i64* %RBP.i896
  %2524 = sub i64 %2523, 120
  %2525 = load i64, i64* %PC.i895
  %2526 = add i64 %2525, 5
  store i64 %2526, i64* %PC.i895
  %2527 = inttoptr i64 %2524 to double*
  %2528 = load double, double* %2527
  %2529 = bitcast i8* %2522 to double*
  store double %2528, double* %2529, align 1
  %2530 = getelementptr inbounds i8, i8* %2522, i64 8
  %2531 = bitcast i8* %2530 to double*
  store double 0.000000e+00, double* %2531, align 1
  store %struct.Memory* %loadMem_400b39, %struct.Memory** %MEMORY
  %loadMem_400b3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2533 = getelementptr inbounds %struct.GPR, %struct.GPR* %2532, i32 0, i32 33
  %2534 = getelementptr inbounds %struct.Reg, %struct.Reg* %2533, i32 0, i32 0
  %PC.i892 = bitcast %union.anon* %2534 to i64*
  %2535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2536 = getelementptr inbounds %struct.GPR, %struct.GPR* %2535, i32 0, i32 15
  %2537 = getelementptr inbounds %struct.Reg, %struct.Reg* %2536, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %2537 to i64*
  %2538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2539 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2538, i64 0, i64 2
  %YMM2.i894 = bitcast %union.VectorReg* %2539 to %"class.std::bitset"*
  %2540 = bitcast %"class.std::bitset"* %YMM2.i894 to i8*
  %2541 = load i64, i64* %RBP.i893
  %2542 = sub i64 %2541, 128
  %2543 = load i64, i64* %PC.i892
  %2544 = add i64 %2543, 5
  store i64 %2544, i64* %PC.i892
  %2545 = inttoptr i64 %2542 to double*
  %2546 = load double, double* %2545
  %2547 = bitcast i8* %2540 to double*
  store double %2546, double* %2547, align 1
  %2548 = getelementptr inbounds i8, i8* %2540, i64 8
  %2549 = bitcast i8* %2548 to double*
  store double 0.000000e+00, double* %2549, align 1
  store %struct.Memory* %loadMem_400b3e, %struct.Memory** %MEMORY
  %loadMem_400b43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2551 = getelementptr inbounds %struct.GPR, %struct.GPR* %2550, i32 0, i32 33
  %2552 = getelementptr inbounds %struct.Reg, %struct.Reg* %2551, i32 0, i32 0
  %PC.i889 = bitcast %union.anon* %2552 to i64*
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2554 = getelementptr inbounds %struct.GPR, %struct.GPR* %2553, i32 0, i32 15
  %2555 = getelementptr inbounds %struct.Reg, %struct.Reg* %2554, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %2555 to i64*
  %2556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2557 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2556, i64 0, i64 3
  %YMM3.i891 = bitcast %union.VectorReg* %2557 to %"class.std::bitset"*
  %2558 = bitcast %"class.std::bitset"* %YMM3.i891 to i8*
  %2559 = load i64, i64* %RBP.i890
  %2560 = sub i64 %2559, 136
  %2561 = load i64, i64* %PC.i889
  %2562 = add i64 %2561, 8
  store i64 %2562, i64* %PC.i889
  %2563 = inttoptr i64 %2560 to double*
  %2564 = load double, double* %2563
  %2565 = bitcast i8* %2558 to double*
  store double %2564, double* %2565, align 1
  %2566 = getelementptr inbounds i8, i8* %2558, i64 8
  %2567 = bitcast i8* %2566 to double*
  store double 0.000000e+00, double* %2567, align 1
  store %struct.Memory* %loadMem_400b43, %struct.Memory** %MEMORY
  %loadMem1_400b4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2569 = getelementptr inbounds %struct.GPR, %struct.GPR* %2568, i32 0, i32 33
  %2570 = getelementptr inbounds %struct.Reg, %struct.Reg* %2569, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %2570 to i64*
  %2571 = load i64, i64* %PC.i888
  %2572 = add i64 %2571, 2645
  %2573 = load i64, i64* %PC.i888
  %2574 = add i64 %2573, 5
  %2575 = load i64, i64* %PC.i888
  %2576 = add i64 %2575, 5
  store i64 %2576, i64* %PC.i888
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2578 = load i64, i64* %2577, align 8
  %2579 = add i64 %2578, -8
  %2580 = inttoptr i64 %2579 to i64*
  store i64 %2574, i64* %2580
  store i64 %2579, i64* %2577, align 8
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2572, i64* %2581, align 8
  store %struct.Memory* %loadMem1_400b4b, %struct.Memory** %MEMORY
  %loadMem2_400b4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400b4b = load i64, i64* %3
  %call2_400b4b = call %struct.Memory* @sub_4015a0.POUT(%struct.State* %0, i64 %loadPC_400b4b, %struct.Memory* %loadMem2_400b4b)
  store %struct.Memory* %call2_400b4b, %struct.Memory** %MEMORY
  br label %block_.L_400b50

block_.L_400b50:                                  ; preds = %block_400b28, %block_.L_400b16
  %loadMem_400b50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2583 = getelementptr inbounds %struct.GPR, %struct.GPR* %2582, i32 0, i32 33
  %2584 = getelementptr inbounds %struct.Reg, %struct.Reg* %2583, i32 0, i32 0
  %PC.i886 = bitcast %union.anon* %2584 to i64*
  %2585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2586 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2585, i64 0, i64 0
  %YMM0.i887 = bitcast %union.VectorReg* %2586 to %"class.std::bitset"*
  %2587 = bitcast %"class.std::bitset"* %YMM0.i887 to i8*
  %2588 = load i64, i64* %PC.i886
  %2589 = load i64, i64* %PC.i886
  %2590 = add i64 %2589, 8
  store i64 %2590, i64* %PC.i886
  %2591 = load double, double* bitcast (%G_0xd78__rip__type* @G_0xd78__rip_ to double*)
  %2592 = bitcast i8* %2587 to double*
  store double %2591, double* %2592, align 1
  %2593 = getelementptr inbounds i8, i8* %2587, i64 8
  %2594 = bitcast i8* %2593 to double*
  store double 0.000000e+00, double* %2594, align 1
  store %struct.Memory* %loadMem_400b50, %struct.Memory** %MEMORY
  %loadMem_400b58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2596 = getelementptr inbounds %struct.GPR, %struct.GPR* %2595, i32 0, i32 33
  %2597 = getelementptr inbounds %struct.Reg, %struct.Reg* %2596, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %2597 to i64*
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2599 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2598, i64 0, i64 1
  %YMM1.i885 = bitcast %union.VectorReg* %2599 to %"class.std::bitset"*
  %2600 = bitcast %"class.std::bitset"* %YMM1.i885 to i8*
  %2601 = load i64, i64* %PC.i884
  %2602 = load i64, i64* %PC.i884
  %2603 = add i64 %2602, 8
  store i64 %2603, i64* %PC.i884
  %2604 = load double, double* bitcast (%G_0xd78__rip__type* @G_0xd78__rip_ to double*)
  %2605 = bitcast i8* %2600 to double*
  store double %2604, double* %2605, align 1
  %2606 = getelementptr inbounds i8, i8* %2600, i64 8
  %2607 = bitcast i8* %2606 to double*
  store double 0.000000e+00, double* %2607, align 1
  store %struct.Memory* %loadMem_400b58, %struct.Memory** %MEMORY
  %loadMem_400b60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2609 = getelementptr inbounds %struct.GPR, %struct.GPR* %2608, i32 0, i32 33
  %2610 = getelementptr inbounds %struct.Reg, %struct.Reg* %2609, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %2610 to i64*
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2612 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2611, i64 0, i64 1
  %XMM1.i883 = bitcast %union.VectorReg* %2612 to %union.vec128_t*
  %2613 = bitcast %union.vec128_t* %XMM1.i883 to i8*
  %2614 = load i64, i64* %PC.i882
  %2615 = add i64 %2614, 9
  store i64 %2615, i64* %PC.i882
  %2616 = bitcast i8* %2613 to double*
  %2617 = load double, double* %2616, align 1
  store double %2617, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  store %struct.Memory* %loadMem_400b60, %struct.Memory** %MEMORY
  %loadMem_400b69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2619 = getelementptr inbounds %struct.GPR, %struct.GPR* %2618, i32 0, i32 33
  %2620 = getelementptr inbounds %struct.Reg, %struct.Reg* %2619, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %2620 to i64*
  %2621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2622 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2621, i64 0, i64 0
  %XMM0.i881 = bitcast %union.VectorReg* %2622 to %union.vec128_t*
  %2623 = bitcast %union.vec128_t* %XMM0.i881 to i8*
  %2624 = load i64, i64* %PC.i880
  %2625 = add i64 %2624, 9
  store i64 %2625, i64* %PC.i880
  %2626 = bitcast i8* %2623 to double*
  %2627 = load double, double* %2626, align 1
  store double %2627, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  store %struct.Memory* %loadMem_400b69, %struct.Memory** %MEMORY
  %loadMem_400b72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2629 = getelementptr inbounds %struct.GPR, %struct.GPR* %2628, i32 0, i32 33
  %2630 = getelementptr inbounds %struct.Reg, %struct.Reg* %2629, i32 0, i32 0
  %PC.i878 = bitcast %union.anon* %2630 to i64*
  %2631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2632 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2631, i64 0, i64 0
  %XMM0.i879 = bitcast %union.VectorReg* %2632 to %union.vec128_t*
  %2633 = bitcast %union.vec128_t* %XMM0.i879 to i8*
  %2634 = load i64, i64* %PC.i878
  %2635 = add i64 %2634, 9
  store i64 %2635, i64* %PC.i878
  %2636 = bitcast i8* %2633 to double*
  %2637 = load double, double* %2636, align 1
  store double %2637, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  store %struct.Memory* %loadMem_400b72, %struct.Memory** %MEMORY
  %loadMem_400b7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2639 = getelementptr inbounds %struct.GPR, %struct.GPR* %2638, i32 0, i32 33
  %2640 = getelementptr inbounds %struct.Reg, %struct.Reg* %2639, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %2640 to i64*
  %2641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2642 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2641, i64 0, i64 0
  %XMM0.i877 = bitcast %union.VectorReg* %2642 to %union.vec128_t*
  %2643 = bitcast %union.vec128_t* %XMM0.i877 to i8*
  %2644 = load i64, i64* %PC.i876
  %2645 = add i64 %2644, 9
  store i64 %2645, i64* %PC.i876
  %2646 = bitcast i8* %2643 to double*
  %2647 = load double, double* %2646, align 1
  store double %2647, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  store %struct.Memory* %loadMem_400b7b, %struct.Memory** %MEMORY
  %loadMem_400b84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2649 = getelementptr inbounds %struct.GPR, %struct.GPR* %2648, i32 0, i32 33
  %2650 = getelementptr inbounds %struct.Reg, %struct.Reg* %2649, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %2650 to i64*
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2652 = getelementptr inbounds %struct.GPR, %struct.GPR* %2651, i32 0, i32 15
  %2653 = getelementptr inbounds %struct.Reg, %struct.Reg* %2652, i32 0, i32 0
  %RBP.i875 = bitcast %union.anon* %2653 to i64*
  %2654 = load i64, i64* %RBP.i875
  %2655 = sub i64 %2654, 24
  %2656 = load i64, i64* %PC.i874
  %2657 = add i64 %2656, 8
  store i64 %2657, i64* %PC.i874
  %2658 = inttoptr i64 %2655 to i64*
  store i64 1, i64* %2658
  store %struct.Memory* %loadMem_400b84, %struct.Memory** %MEMORY
  br label %block_.L_400b8c

block_.L_400b8c:                                  ; preds = %block_400b9a, %block_.L_400b50
  %loadMem_400b8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2660 = getelementptr inbounds %struct.GPR, %struct.GPR* %2659, i32 0, i32 33
  %2661 = getelementptr inbounds %struct.Reg, %struct.Reg* %2660, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %2661 to i64*
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2663 = getelementptr inbounds %struct.GPR, %struct.GPR* %2662, i32 0, i32 1
  %2664 = getelementptr inbounds %struct.Reg, %struct.Reg* %2663, i32 0, i32 0
  %RAX.i872 = bitcast %union.anon* %2664 to i64*
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2666 = getelementptr inbounds %struct.GPR, %struct.GPR* %2665, i32 0, i32 15
  %2667 = getelementptr inbounds %struct.Reg, %struct.Reg* %2666, i32 0, i32 0
  %RBP.i873 = bitcast %union.anon* %2667 to i64*
  %2668 = load i64, i64* %RBP.i873
  %2669 = sub i64 %2668, 24
  %2670 = load i64, i64* %PC.i871
  %2671 = add i64 %2670, 4
  store i64 %2671, i64* %PC.i871
  %2672 = inttoptr i64 %2669 to i64*
  %2673 = load i64, i64* %2672
  store i64 %2673, i64* %RAX.i872, align 8
  store %struct.Memory* %loadMem_400b8c, %struct.Memory** %MEMORY
  %loadMem_400b90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2675 = getelementptr inbounds %struct.GPR, %struct.GPR* %2674, i32 0, i32 33
  %2676 = getelementptr inbounds %struct.Reg, %struct.Reg* %2675, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %2676 to i64*
  %2677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2678 = getelementptr inbounds %struct.GPR, %struct.GPR* %2677, i32 0, i32 1
  %2679 = getelementptr inbounds %struct.Reg, %struct.Reg* %2678, i32 0, i32 0
  %RAX.i869 = bitcast %union.anon* %2679 to i64*
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2681 = getelementptr inbounds %struct.GPR, %struct.GPR* %2680, i32 0, i32 15
  %2682 = getelementptr inbounds %struct.Reg, %struct.Reg* %2681, i32 0, i32 0
  %RBP.i870 = bitcast %union.anon* %2682 to i64*
  %2683 = load i64, i64* %RAX.i869
  %2684 = load i64, i64* %RBP.i870
  %2685 = sub i64 %2684, 40
  %2686 = load i64, i64* %PC.i868
  %2687 = add i64 %2686, 4
  store i64 %2687, i64* %PC.i868
  %2688 = inttoptr i64 %2685 to i64*
  %2689 = load i64, i64* %2688
  %2690 = sub i64 %2683, %2689
  %2691 = icmp ugt i64 %2689, %2683
  %2692 = zext i1 %2691 to i8
  %2693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2692, i8* %2693, align 1
  %2694 = trunc i64 %2690 to i32
  %2695 = and i32 %2694, 255
  %2696 = call i32 @llvm.ctpop.i32(i32 %2695)
  %2697 = trunc i32 %2696 to i8
  %2698 = and i8 %2697, 1
  %2699 = xor i8 %2698, 1
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2699, i8* %2700, align 1
  %2701 = xor i64 %2689, %2683
  %2702 = xor i64 %2701, %2690
  %2703 = lshr i64 %2702, 4
  %2704 = trunc i64 %2703 to i8
  %2705 = and i8 %2704, 1
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2705, i8* %2706, align 1
  %2707 = icmp eq i64 %2690, 0
  %2708 = zext i1 %2707 to i8
  %2709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2708, i8* %2709, align 1
  %2710 = lshr i64 %2690, 63
  %2711 = trunc i64 %2710 to i8
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2711, i8* %2712, align 1
  %2713 = lshr i64 %2683, 63
  %2714 = lshr i64 %2689, 63
  %2715 = xor i64 %2714, %2713
  %2716 = xor i64 %2710, %2713
  %2717 = add i64 %2716, %2715
  %2718 = icmp eq i64 %2717, 2
  %2719 = zext i1 %2718 to i8
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2719, i8* %2720, align 1
  store %struct.Memory* %loadMem_400b90, %struct.Memory** %MEMORY
  %loadMem_400b94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2722 = getelementptr inbounds %struct.GPR, %struct.GPR* %2721, i32 0, i32 33
  %2723 = getelementptr inbounds %struct.Reg, %struct.Reg* %2722, i32 0, i32 0
  %PC.i867 = bitcast %union.anon* %2723 to i64*
  %2724 = load i64, i64* %PC.i867
  %2725 = add i64 %2724, 262
  %2726 = load i64, i64* %PC.i867
  %2727 = add i64 %2726, 6
  %2728 = load i64, i64* %PC.i867
  %2729 = add i64 %2728, 6
  store i64 %2729, i64* %PC.i867
  %2730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2731 = load i8, i8* %2730, align 1
  %2732 = icmp eq i8 %2731, 0
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2734 = load i8, i8* %2733, align 1
  %2735 = icmp ne i8 %2734, 0
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2737 = load i8, i8* %2736, align 1
  %2738 = icmp ne i8 %2737, 0
  %2739 = xor i1 %2735, %2738
  %2740 = xor i1 %2739, true
  %2741 = and i1 %2732, %2740
  %2742 = zext i1 %2741 to i8
  store i8 %2742, i8* %BRANCH_TAKEN, align 1
  %2743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2744 = select i1 %2741, i64 %2725, i64 %2727
  store i64 %2744, i64* %2743, align 8
  store %struct.Memory* %loadMem_400b94, %struct.Memory** %MEMORY
  %loadBr_400b94 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400b94 = icmp eq i8 %loadBr_400b94, 1
  br i1 %cmpBr_400b94, label %block_.L_400c9a, label %block_400b9a

block_400b9a:                                     ; preds = %block_.L_400b8c
  %loadMem_400b9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2746 = getelementptr inbounds %struct.GPR, %struct.GPR* %2745, i32 0, i32 33
  %2747 = getelementptr inbounds %struct.Reg, %struct.Reg* %2746, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %2747 to i64*
  %2748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2749 = getelementptr inbounds %struct.GPR, %struct.GPR* %2748, i32 0, i32 1
  %2750 = getelementptr inbounds %struct.Reg, %struct.Reg* %2749, i32 0, i32 0
  %RAX.i866 = bitcast %union.anon* %2750 to i64*
  %2751 = load i64, i64* %PC.i865
  %2752 = add i64 %2751, 10
  store i64 %2752, i64* %PC.i865
  store i64 -9223372036854775808, i64* %RAX.i866, align 8
  store %struct.Memory* %loadMem_400b9a, %struct.Memory** %MEMORY
  %loadMem_400ba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2754 = getelementptr inbounds %struct.GPR, %struct.GPR* %2753, i32 0, i32 33
  %2755 = getelementptr inbounds %struct.Reg, %struct.Reg* %2754, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %2755 to i64*
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2757 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2756, i64 0, i64 0
  %YMM0.i864 = bitcast %union.VectorReg* %2757 to %"class.std::bitset"*
  %2758 = bitcast %"class.std::bitset"* %YMM0.i864 to i8*
  %2759 = load i64, i64* %PC.i863
  %2760 = add i64 %2759, 9
  store i64 %2760, i64* %PC.i863
  %2761 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %2762 = bitcast i8* %2758 to double*
  store double %2761, double* %2762, align 1
  %2763 = getelementptr inbounds i8, i8* %2758, i64 8
  %2764 = bitcast i8* %2763 to double*
  store double 0.000000e+00, double* %2764, align 1
  store %struct.Memory* %loadMem_400ba4, %struct.Memory** %MEMORY
  %loadMem_400bad = load %struct.Memory*, %struct.Memory** %MEMORY
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2766 = getelementptr inbounds %struct.GPR, %struct.GPR* %2765, i32 0, i32 33
  %2767 = getelementptr inbounds %struct.Reg, %struct.Reg* %2766, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %2767 to i64*
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2769 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2768, i64 0, i64 0
  %YMM0.i862 = bitcast %union.VectorReg* %2769 to %"class.std::bitset"*
  %2770 = bitcast %"class.std::bitset"* %YMM0.i862 to i8*
  %2771 = bitcast %"class.std::bitset"* %YMM0.i862 to i8*
  %2772 = load i64, i64* %PC.i861
  %2773 = add i64 %2772, 9
  store i64 %2773, i64* %PC.i861
  %2774 = bitcast i8* %2771 to double*
  %2775 = load double, double* %2774, align 1
  %2776 = getelementptr inbounds i8, i8* %2771, i64 8
  %2777 = bitcast i8* %2776 to i64*
  %2778 = load i64, i64* %2777, align 1
  %2779 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %2780 = fadd double %2775, %2779
  %2781 = bitcast i8* %2770 to double*
  store double %2780, double* %2781, align 1
  %2782 = getelementptr inbounds i8, i8* %2770, i64 8
  %2783 = bitcast i8* %2782 to i64*
  store i64 %2778, i64* %2783, align 1
  store %struct.Memory* %loadMem_400bad, %struct.Memory** %MEMORY
  %loadMem_400bb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2785 = getelementptr inbounds %struct.GPR, %struct.GPR* %2784, i32 0, i32 33
  %2786 = getelementptr inbounds %struct.Reg, %struct.Reg* %2785, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %2786 to i64*
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2788 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2787, i64 0, i64 0
  %YMM0.i860 = bitcast %union.VectorReg* %2788 to %"class.std::bitset"*
  %2789 = bitcast %"class.std::bitset"* %YMM0.i860 to i8*
  %2790 = bitcast %"class.std::bitset"* %YMM0.i860 to i8*
  %2791 = load i64, i64* %PC.i859
  %2792 = add i64 %2791, 9
  store i64 %2792, i64* %PC.i859
  %2793 = bitcast i8* %2790 to double*
  %2794 = load double, double* %2793, align 1
  %2795 = getelementptr inbounds i8, i8* %2790, i64 8
  %2796 = bitcast i8* %2795 to i64*
  %2797 = load i64, i64* %2796, align 1
  %2798 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %2799 = fadd double %2794, %2798
  %2800 = bitcast i8* %2789 to double*
  store double %2799, double* %2800, align 1
  %2801 = getelementptr inbounds i8, i8* %2789, i64 8
  %2802 = bitcast i8* %2801 to i64*
  store i64 %2797, i64* %2802, align 1
  store %struct.Memory* %loadMem_400bb6, %struct.Memory** %MEMORY
  %loadMem_400bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2804 = getelementptr inbounds %struct.GPR, %struct.GPR* %2803, i32 0, i32 33
  %2805 = getelementptr inbounds %struct.Reg, %struct.Reg* %2804, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %2805 to i64*
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2807 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2806, i64 0, i64 0
  %YMM0.i858 = bitcast %union.VectorReg* %2807 to %"class.std::bitset"*
  %2808 = bitcast %"class.std::bitset"* %YMM0.i858 to i8*
  %2809 = bitcast %"class.std::bitset"* %YMM0.i858 to i8*
  %2810 = load i64, i64* %PC.i857
  %2811 = add i64 %2810, 9
  store i64 %2811, i64* %PC.i857
  %2812 = bitcast i8* %2809 to double*
  %2813 = load double, double* %2812, align 1
  %2814 = getelementptr inbounds i8, i8* %2809, i64 8
  %2815 = bitcast i8* %2814 to i64*
  %2816 = load i64, i64* %2815, align 1
  %2817 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %2818 = fsub double %2813, %2817
  %2819 = bitcast i8* %2808 to double*
  store double %2818, double* %2819, align 1
  %2820 = getelementptr inbounds i8, i8* %2808, i64 8
  %2821 = bitcast i8* %2820 to i64*
  store i64 %2816, i64* %2821, align 1
  store %struct.Memory* %loadMem_400bbf, %struct.Memory** %MEMORY
  %loadMem_400bc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2823 = getelementptr inbounds %struct.GPR, %struct.GPR* %2822, i32 0, i32 33
  %2824 = getelementptr inbounds %struct.Reg, %struct.Reg* %2823, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %2824 to i64*
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2826 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2825, i64 0, i64 0
  %YMM0.i856 = bitcast %union.VectorReg* %2826 to %"class.std::bitset"*
  %2827 = bitcast %"class.std::bitset"* %YMM0.i856 to i8*
  %2828 = bitcast %"class.std::bitset"* %YMM0.i856 to i8*
  %2829 = load i64, i64* %PC.i855
  %2830 = add i64 %2829, 9
  store i64 %2830, i64* %PC.i855
  %2831 = bitcast i8* %2828 to double*
  %2832 = load double, double* %2831, align 1
  %2833 = getelementptr inbounds i8, i8* %2828, i64 8
  %2834 = bitcast i8* %2833 to i64*
  %2835 = load i64, i64* %2834, align 1
  %2836 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %2837 = fmul double %2832, %2836
  %2838 = bitcast i8* %2827 to double*
  store double %2837, double* %2838, align 1
  %2839 = getelementptr inbounds i8, i8* %2827, i64 8
  %2840 = bitcast i8* %2839 to i64*
  store i64 %2835, i64* %2840, align 1
  store %struct.Memory* %loadMem_400bc8, %struct.Memory** %MEMORY
  %loadMem_400bd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2842 = getelementptr inbounds %struct.GPR, %struct.GPR* %2841, i32 0, i32 33
  %2843 = getelementptr inbounds %struct.Reg, %struct.Reg* %2842, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %2843 to i64*
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2845 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2844, i64 0, i64 0
  %XMM0.i854 = bitcast %union.VectorReg* %2845 to %union.vec128_t*
  %2846 = bitcast %union.vec128_t* %XMM0.i854 to i8*
  %2847 = load i64, i64* %PC.i853
  %2848 = add i64 %2847, 9
  store i64 %2848, i64* %PC.i853
  %2849 = bitcast i8* %2846 to double*
  %2850 = load double, double* %2849, align 1
  store double %2850, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  store %struct.Memory* %loadMem_400bd1, %struct.Memory** %MEMORY
  %loadMem_400bda = load %struct.Memory*, %struct.Memory** %MEMORY
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2852 = getelementptr inbounds %struct.GPR, %struct.GPR* %2851, i32 0, i32 33
  %2853 = getelementptr inbounds %struct.Reg, %struct.Reg* %2852, i32 0, i32 0
  %PC.i851 = bitcast %union.anon* %2853 to i64*
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2855 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2854, i64 0, i64 0
  %YMM0.i852 = bitcast %union.VectorReg* %2855 to %"class.std::bitset"*
  %2856 = bitcast %"class.std::bitset"* %YMM0.i852 to i8*
  %2857 = load i64, i64* %PC.i851
  %2858 = add i64 %2857, 9
  store i64 %2858, i64* %PC.i851
  %2859 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %2860 = bitcast i8* %2856 to double*
  store double %2859, double* %2860, align 1
  %2861 = getelementptr inbounds i8, i8* %2856, i64 8
  %2862 = bitcast i8* %2861 to double*
  store double 0.000000e+00, double* %2862, align 1
  store %struct.Memory* %loadMem_400bda, %struct.Memory** %MEMORY
  %loadMem_400be3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2864 = getelementptr inbounds %struct.GPR, %struct.GPR* %2863, i32 0, i32 33
  %2865 = getelementptr inbounds %struct.Reg, %struct.Reg* %2864, i32 0, i32 0
  %PC.i849 = bitcast %union.anon* %2865 to i64*
  %2866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2867 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2866, i64 0, i64 0
  %YMM0.i850 = bitcast %union.VectorReg* %2867 to %"class.std::bitset"*
  %2868 = bitcast %"class.std::bitset"* %YMM0.i850 to i8*
  %2869 = bitcast %"class.std::bitset"* %YMM0.i850 to i8*
  %2870 = load i64, i64* %PC.i849
  %2871 = add i64 %2870, 9
  store i64 %2871, i64* %PC.i849
  %2872 = bitcast i8* %2869 to double*
  %2873 = load double, double* %2872, align 1
  %2874 = getelementptr inbounds i8, i8* %2869, i64 8
  %2875 = bitcast i8* %2874 to i64*
  %2876 = load i64, i64* %2875, align 1
  %2877 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %2878 = fadd double %2873, %2877
  %2879 = bitcast i8* %2868 to double*
  store double %2878, double* %2879, align 1
  %2880 = getelementptr inbounds i8, i8* %2868, i64 8
  %2881 = bitcast i8* %2880 to i64*
  store i64 %2876, i64* %2881, align 1
  store %struct.Memory* %loadMem_400be3, %struct.Memory** %MEMORY
  %loadMem_400bec = load %struct.Memory*, %struct.Memory** %MEMORY
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2883 = getelementptr inbounds %struct.GPR, %struct.GPR* %2882, i32 0, i32 33
  %2884 = getelementptr inbounds %struct.Reg, %struct.Reg* %2883, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %2884 to i64*
  %2885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2886 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2885, i64 0, i64 0
  %YMM0.i848 = bitcast %union.VectorReg* %2886 to %"class.std::bitset"*
  %2887 = bitcast %"class.std::bitset"* %YMM0.i848 to i8*
  %2888 = bitcast %"class.std::bitset"* %YMM0.i848 to i8*
  %2889 = load i64, i64* %PC.i847
  %2890 = add i64 %2889, 9
  store i64 %2890, i64* %PC.i847
  %2891 = bitcast i8* %2888 to double*
  %2892 = load double, double* %2891, align 1
  %2893 = getelementptr inbounds i8, i8* %2888, i64 8
  %2894 = bitcast i8* %2893 to i64*
  %2895 = load i64, i64* %2894, align 1
  %2896 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %2897 = fsub double %2892, %2896
  %2898 = bitcast i8* %2887 to double*
  store double %2897, double* %2898, align 1
  %2899 = getelementptr inbounds i8, i8* %2887, i64 8
  %2900 = bitcast i8* %2899 to i64*
  store i64 %2895, i64* %2900, align 1
  store %struct.Memory* %loadMem_400bec, %struct.Memory** %MEMORY
  %loadMem_400bf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2902 = getelementptr inbounds %struct.GPR, %struct.GPR* %2901, i32 0, i32 33
  %2903 = getelementptr inbounds %struct.Reg, %struct.Reg* %2902, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %2903 to i64*
  %2904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2905 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2904, i64 0, i64 0
  %YMM0.i846 = bitcast %union.VectorReg* %2905 to %"class.std::bitset"*
  %2906 = bitcast %"class.std::bitset"* %YMM0.i846 to i8*
  %2907 = bitcast %"class.std::bitset"* %YMM0.i846 to i8*
  %2908 = load i64, i64* %PC.i845
  %2909 = add i64 %2908, 9
  store i64 %2909, i64* %PC.i845
  %2910 = bitcast i8* %2907 to double*
  %2911 = load double, double* %2910, align 1
  %2912 = getelementptr inbounds i8, i8* %2907, i64 8
  %2913 = bitcast i8* %2912 to i64*
  %2914 = load i64, i64* %2913, align 1
  %2915 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %2916 = fadd double %2911, %2915
  %2917 = bitcast i8* %2906 to double*
  store double %2916, double* %2917, align 1
  %2918 = getelementptr inbounds i8, i8* %2906, i64 8
  %2919 = bitcast i8* %2918 to i64*
  store i64 %2914, i64* %2919, align 1
  store %struct.Memory* %loadMem_400bf5, %struct.Memory** %MEMORY
  %loadMem_400bfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2921 = getelementptr inbounds %struct.GPR, %struct.GPR* %2920, i32 0, i32 33
  %2922 = getelementptr inbounds %struct.Reg, %struct.Reg* %2921, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %2922 to i64*
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2924 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2923, i64 0, i64 0
  %YMM0.i844 = bitcast %union.VectorReg* %2924 to %"class.std::bitset"*
  %2925 = bitcast %"class.std::bitset"* %YMM0.i844 to i8*
  %2926 = bitcast %"class.std::bitset"* %YMM0.i844 to i8*
  %2927 = load i64, i64* %PC.i843
  %2928 = add i64 %2927, 9
  store i64 %2928, i64* %PC.i843
  %2929 = bitcast i8* %2926 to double*
  %2930 = load double, double* %2929, align 1
  %2931 = getelementptr inbounds i8, i8* %2926, i64 8
  %2932 = bitcast i8* %2931 to i64*
  %2933 = load i64, i64* %2932, align 1
  %2934 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %2935 = fmul double %2930, %2934
  %2936 = bitcast i8* %2925 to double*
  store double %2935, double* %2936, align 1
  %2937 = getelementptr inbounds i8, i8* %2925, i64 8
  %2938 = bitcast i8* %2937 to i64*
  store i64 %2933, i64* %2938, align 1
  store %struct.Memory* %loadMem_400bfe, %struct.Memory** %MEMORY
  %loadMem_400c07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2940 = getelementptr inbounds %struct.GPR, %struct.GPR* %2939, i32 0, i32 33
  %2941 = getelementptr inbounds %struct.Reg, %struct.Reg* %2940, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %2941 to i64*
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2943 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2942, i64 0, i64 0
  %XMM0.i842 = bitcast %union.VectorReg* %2943 to %union.vec128_t*
  %2944 = bitcast %union.vec128_t* %XMM0.i842 to i8*
  %2945 = load i64, i64* %PC.i841
  %2946 = add i64 %2945, 9
  store i64 %2946, i64* %PC.i841
  %2947 = bitcast i8* %2944 to double*
  %2948 = load double, double* %2947, align 1
  store double %2948, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  store %struct.Memory* %loadMem_400c07, %struct.Memory** %MEMORY
  %loadMem_400c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 33
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %PC.i839 = bitcast %union.anon* %2951 to i64*
  %2952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2953 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2952, i64 0, i64 0
  %YMM0.i840 = bitcast %union.VectorReg* %2953 to %"class.std::bitset"*
  %2954 = bitcast %"class.std::bitset"* %YMM0.i840 to i8*
  %2955 = load i64, i64* %PC.i839
  %2956 = add i64 %2955, 9
  store i64 %2956, i64* %PC.i839
  %2957 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %2958 = bitcast i8* %2954 to double*
  store double %2957, double* %2958, align 1
  %2959 = getelementptr inbounds i8, i8* %2954, i64 8
  %2960 = bitcast i8* %2959 to double*
  store double 0.000000e+00, double* %2960, align 1
  store %struct.Memory* %loadMem_400c10, %struct.Memory** %MEMORY
  %loadMem_400c19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2962 = getelementptr inbounds %struct.GPR, %struct.GPR* %2961, i32 0, i32 33
  %2963 = getelementptr inbounds %struct.Reg, %struct.Reg* %2962, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %2963 to i64*
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2965 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2964, i64 0, i64 0
  %YMM0.i838 = bitcast %union.VectorReg* %2965 to %"class.std::bitset"*
  %2966 = bitcast %"class.std::bitset"* %YMM0.i838 to i8*
  %2967 = bitcast %"class.std::bitset"* %YMM0.i838 to i8*
  %2968 = load i64, i64* %PC.i837
  %2969 = add i64 %2968, 9
  store i64 %2969, i64* %PC.i837
  %2970 = bitcast i8* %2967 to double*
  %2971 = load double, double* %2970, align 1
  %2972 = getelementptr inbounds i8, i8* %2967, i64 8
  %2973 = bitcast i8* %2972 to i64*
  %2974 = load i64, i64* %2973, align 1
  %2975 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %2976 = fsub double %2971, %2975
  %2977 = bitcast i8* %2966 to double*
  store double %2976, double* %2977, align 1
  %2978 = getelementptr inbounds i8, i8* %2966, i64 8
  %2979 = bitcast i8* %2978 to i64*
  store i64 %2974, i64* %2979, align 1
  store %struct.Memory* %loadMem_400c19, %struct.Memory** %MEMORY
  %loadMem_400c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2981 = getelementptr inbounds %struct.GPR, %struct.GPR* %2980, i32 0, i32 33
  %2982 = getelementptr inbounds %struct.Reg, %struct.Reg* %2981, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %2982 to i64*
  %2983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2984 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2983, i64 0, i64 0
  %YMM0.i836 = bitcast %union.VectorReg* %2984 to %"class.std::bitset"*
  %2985 = bitcast %"class.std::bitset"* %YMM0.i836 to i8*
  %2986 = bitcast %"class.std::bitset"* %YMM0.i836 to i8*
  %2987 = load i64, i64* %PC.i835
  %2988 = add i64 %2987, 9
  store i64 %2988, i64* %PC.i835
  %2989 = bitcast i8* %2986 to double*
  %2990 = load double, double* %2989, align 1
  %2991 = getelementptr inbounds i8, i8* %2986, i64 8
  %2992 = bitcast i8* %2991 to i64*
  %2993 = load i64, i64* %2992, align 1
  %2994 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %2995 = fadd double %2990, %2994
  %2996 = bitcast i8* %2985 to double*
  store double %2995, double* %2996, align 1
  %2997 = getelementptr inbounds i8, i8* %2985, i64 8
  %2998 = bitcast i8* %2997 to i64*
  store i64 %2993, i64* %2998, align 1
  store %struct.Memory* %loadMem_400c22, %struct.Memory** %MEMORY
  %loadMem_400c2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3000 = getelementptr inbounds %struct.GPR, %struct.GPR* %2999, i32 0, i32 33
  %3001 = getelementptr inbounds %struct.Reg, %struct.Reg* %3000, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %3001 to i64*
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3003 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3002, i64 0, i64 0
  %YMM0.i834 = bitcast %union.VectorReg* %3003 to %"class.std::bitset"*
  %3004 = bitcast %"class.std::bitset"* %YMM0.i834 to i8*
  %3005 = bitcast %"class.std::bitset"* %YMM0.i834 to i8*
  %3006 = load i64, i64* %PC.i833
  %3007 = add i64 %3006, 9
  store i64 %3007, i64* %PC.i833
  %3008 = bitcast i8* %3005 to double*
  %3009 = load double, double* %3008, align 1
  %3010 = getelementptr inbounds i8, i8* %3005, i64 8
  %3011 = bitcast i8* %3010 to i64*
  %3012 = load i64, i64* %3011, align 1
  %3013 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %3014 = fadd double %3009, %3013
  %3015 = bitcast i8* %3004 to double*
  store double %3014, double* %3015, align 1
  %3016 = getelementptr inbounds i8, i8* %3004, i64 8
  %3017 = bitcast i8* %3016 to i64*
  store i64 %3012, i64* %3017, align 1
  store %struct.Memory* %loadMem_400c2b, %struct.Memory** %MEMORY
  %loadMem_400c34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3019 = getelementptr inbounds %struct.GPR, %struct.GPR* %3018, i32 0, i32 33
  %3020 = getelementptr inbounds %struct.Reg, %struct.Reg* %3019, i32 0, i32 0
  %PC.i831 = bitcast %union.anon* %3020 to i64*
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3022 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3021, i64 0, i64 0
  %YMM0.i832 = bitcast %union.VectorReg* %3022 to %"class.std::bitset"*
  %3023 = bitcast %"class.std::bitset"* %YMM0.i832 to i8*
  %3024 = bitcast %"class.std::bitset"* %YMM0.i832 to i8*
  %3025 = load i64, i64* %PC.i831
  %3026 = add i64 %3025, 9
  store i64 %3026, i64* %PC.i831
  %3027 = bitcast i8* %3024 to double*
  %3028 = load double, double* %3027, align 1
  %3029 = getelementptr inbounds i8, i8* %3024, i64 8
  %3030 = bitcast i8* %3029 to i64*
  %3031 = load i64, i64* %3030, align 1
  %3032 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %3033 = fmul double %3028, %3032
  %3034 = bitcast i8* %3023 to double*
  store double %3033, double* %3034, align 1
  %3035 = getelementptr inbounds i8, i8* %3023, i64 8
  %3036 = bitcast i8* %3035 to i64*
  store i64 %3031, i64* %3036, align 1
  store %struct.Memory* %loadMem_400c34, %struct.Memory** %MEMORY
  %loadMem_400c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3038 = getelementptr inbounds %struct.GPR, %struct.GPR* %3037, i32 0, i32 33
  %3039 = getelementptr inbounds %struct.Reg, %struct.Reg* %3038, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %3039 to i64*
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3041 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3040, i64 0, i64 0
  %XMM0.i830 = bitcast %union.VectorReg* %3041 to %union.vec128_t*
  %3042 = bitcast %union.vec128_t* %XMM0.i830 to i8*
  %3043 = load i64, i64* %PC.i829
  %3044 = add i64 %3043, 9
  store i64 %3044, i64* %PC.i829
  %3045 = bitcast i8* %3042 to double*
  %3046 = load double, double* %3045, align 1
  store double %3046, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  store %struct.Memory* %loadMem_400c3d, %struct.Memory** %MEMORY
  %loadMem_400c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3048 = getelementptr inbounds %struct.GPR, %struct.GPR* %3047, i32 0, i32 33
  %3049 = getelementptr inbounds %struct.Reg, %struct.Reg* %3048, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %3049 to i64*
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3051 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3050, i64 0, i64 0
  %YMM0.i828 = bitcast %union.VectorReg* %3051 to %"class.std::bitset"*
  %3052 = bitcast %"class.std::bitset"* %YMM0.i828 to i8*
  %3053 = load i64, i64* %PC.i827
  %3054 = add i64 %3053, 9
  store i64 %3054, i64* %PC.i827
  %3055 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %3056 = bitcast i8* %3052 to double*
  store double %3055, double* %3056, align 1
  %3057 = getelementptr inbounds i8, i8* %3052, i64 8
  %3058 = bitcast i8* %3057 to double*
  store double 0.000000e+00, double* %3058, align 1
  store %struct.Memory* %loadMem_400c46, %struct.Memory** %MEMORY
  %loadMem_400c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3060 = getelementptr inbounds %struct.GPR, %struct.GPR* %3059, i32 0, i32 33
  %3061 = getelementptr inbounds %struct.Reg, %struct.Reg* %3060, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %3061 to i64*
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3063 = getelementptr inbounds %struct.GPR, %struct.GPR* %3062, i32 0, i32 5
  %3064 = getelementptr inbounds %struct.Reg, %struct.Reg* %3063, i32 0, i32 0
  %RCX.i825 = bitcast %union.anon* %3064 to i64*
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3066 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3065, i64 0, i64 0
  %XMM0.i826 = bitcast %union.VectorReg* %3066 to %union.vec128_t*
  %3067 = bitcast %union.vec128_t* %XMM0.i826 to i8*
  %3068 = load i64, i64* %PC.i824
  %3069 = add i64 %3068, 5
  store i64 %3069, i64* %PC.i824
  %3070 = bitcast i8* %3067 to i64*
  %3071 = load i64, i64* %3070, align 1
  store i64 %3071, i64* %RCX.i825, align 1
  store %struct.Memory* %loadMem_400c4f, %struct.Memory** %MEMORY
  %loadMem_400c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3073 = getelementptr inbounds %struct.GPR, %struct.GPR* %3072, i32 0, i32 33
  %3074 = getelementptr inbounds %struct.Reg, %struct.Reg* %3073, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %3074 to i64*
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 1
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %RAX.i822 = bitcast %union.anon* %3077 to i64*
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3079 = getelementptr inbounds %struct.GPR, %struct.GPR* %3078, i32 0, i32 5
  %3080 = getelementptr inbounds %struct.Reg, %struct.Reg* %3079, i32 0, i32 0
  %RCX.i823 = bitcast %union.anon* %3080 to i64*
  %3081 = load i64, i64* %RCX.i823
  %3082 = load i64, i64* %RAX.i822
  %3083 = load i64, i64* %PC.i821
  %3084 = add i64 %3083, 3
  store i64 %3084, i64* %PC.i821
  %3085 = xor i64 %3082, %3081
  store i64 %3085, i64* %RCX.i823, align 8
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3086, align 1
  %3087 = trunc i64 %3085 to i32
  %3088 = and i32 %3087, 255
  %3089 = call i32 @llvm.ctpop.i32(i32 %3088)
  %3090 = trunc i32 %3089 to i8
  %3091 = and i8 %3090, 1
  %3092 = xor i8 %3091, 1
  %3093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3092, i8* %3093, align 1
  %3094 = icmp eq i64 %3085, 0
  %3095 = zext i1 %3094 to i8
  %3096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3095, i8* %3096, align 1
  %3097 = lshr i64 %3085, 63
  %3098 = trunc i64 %3097 to i8
  %3099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3098, i8* %3099, align 1
  %3100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3100, align 1
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3101, align 1
  store %struct.Memory* %loadMem_400c54, %struct.Memory** %MEMORY
  %loadMem_400c57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3103 = getelementptr inbounds %struct.GPR, %struct.GPR* %3102, i32 0, i32 33
  %3104 = getelementptr inbounds %struct.Reg, %struct.Reg* %3103, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %3104 to i64*
  %3105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3106 = getelementptr inbounds %struct.GPR, %struct.GPR* %3105, i32 0, i32 5
  %3107 = getelementptr inbounds %struct.Reg, %struct.Reg* %3106, i32 0, i32 0
  %RCX.i819 = bitcast %union.anon* %3107 to i64*
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3109 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3108, i64 0, i64 0
  %YMM0.i820 = bitcast %union.VectorReg* %3109 to %"class.std::bitset"*
  %3110 = bitcast %"class.std::bitset"* %YMM0.i820 to i8*
  %3111 = load i64, i64* %RCX.i819
  %3112 = load i64, i64* %PC.i818
  %3113 = add i64 %3112, 5
  store i64 %3113, i64* %PC.i818
  %3114 = bitcast i8* %3110 to i64*
  store i64 %3111, i64* %3114, align 1
  %3115 = getelementptr inbounds i8, i8* %3110, i64 8
  %3116 = bitcast i8* %3115 to i64*
  store i64 0, i64* %3116, align 1
  store %struct.Memory* %loadMem_400c57, %struct.Memory** %MEMORY
  %loadMem_400c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3118 = getelementptr inbounds %struct.GPR, %struct.GPR* %3117, i32 0, i32 33
  %3119 = getelementptr inbounds %struct.Reg, %struct.Reg* %3118, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %3119 to i64*
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3121 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3120, i64 0, i64 0
  %YMM0.i817 = bitcast %union.VectorReg* %3121 to %"class.std::bitset"*
  %3122 = bitcast %"class.std::bitset"* %YMM0.i817 to i8*
  %3123 = bitcast %"class.std::bitset"* %YMM0.i817 to i8*
  %3124 = load i64, i64* %PC.i816
  %3125 = add i64 %3124, 9
  store i64 %3125, i64* %PC.i816
  %3126 = bitcast i8* %3123 to double*
  %3127 = load double, double* %3126, align 1
  %3128 = getelementptr inbounds i8, i8* %3123, i64 8
  %3129 = bitcast i8* %3128 to i64*
  %3130 = load i64, i64* %3129, align 1
  %3131 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %3132 = fadd double %3127, %3131
  %3133 = bitcast i8* %3122 to double*
  store double %3132, double* %3133, align 1
  %3134 = getelementptr inbounds i8, i8* %3122, i64 8
  %3135 = bitcast i8* %3134 to i64*
  store i64 %3130, i64* %3135, align 1
  store %struct.Memory* %loadMem_400c5c, %struct.Memory** %MEMORY
  %loadMem_400c65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 33
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %3138 to i64*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3140 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3139, i64 0, i64 0
  %YMM0.i815 = bitcast %union.VectorReg* %3140 to %"class.std::bitset"*
  %3141 = bitcast %"class.std::bitset"* %YMM0.i815 to i8*
  %3142 = bitcast %"class.std::bitset"* %YMM0.i815 to i8*
  %3143 = load i64, i64* %PC.i814
  %3144 = add i64 %3143, 9
  store i64 %3144, i64* %PC.i814
  %3145 = bitcast i8* %3142 to double*
  %3146 = load double, double* %3145, align 1
  %3147 = getelementptr inbounds i8, i8* %3142, i64 8
  %3148 = bitcast i8* %3147 to i64*
  %3149 = load i64, i64* %3148, align 1
  %3150 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %3151 = fadd double %3146, %3150
  %3152 = bitcast i8* %3141 to double*
  store double %3151, double* %3152, align 1
  %3153 = getelementptr inbounds i8, i8* %3141, i64 8
  %3154 = bitcast i8* %3153 to i64*
  store i64 %3149, i64* %3154, align 1
  store %struct.Memory* %loadMem_400c65, %struct.Memory** %MEMORY
  %loadMem_400c6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3156 = getelementptr inbounds %struct.GPR, %struct.GPR* %3155, i32 0, i32 33
  %3157 = getelementptr inbounds %struct.Reg, %struct.Reg* %3156, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %3157 to i64*
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3159 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3158, i64 0, i64 0
  %YMM0.i813 = bitcast %union.VectorReg* %3159 to %"class.std::bitset"*
  %3160 = bitcast %"class.std::bitset"* %YMM0.i813 to i8*
  %3161 = bitcast %"class.std::bitset"* %YMM0.i813 to i8*
  %3162 = load i64, i64* %PC.i812
  %3163 = add i64 %3162, 9
  store i64 %3163, i64* %PC.i812
  %3164 = bitcast i8* %3161 to double*
  %3165 = load double, double* %3164, align 1
  %3166 = getelementptr inbounds i8, i8* %3161, i64 8
  %3167 = bitcast i8* %3166 to i64*
  %3168 = load i64, i64* %3167, align 1
  %3169 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %3170 = fadd double %3165, %3169
  %3171 = bitcast i8* %3160 to double*
  store double %3170, double* %3171, align 1
  %3172 = getelementptr inbounds i8, i8* %3160, i64 8
  %3173 = bitcast i8* %3172 to i64*
  store i64 %3168, i64* %3173, align 1
  store %struct.Memory* %loadMem_400c6e, %struct.Memory** %MEMORY
  %loadMem_400c77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3175 = getelementptr inbounds %struct.GPR, %struct.GPR* %3174, i32 0, i32 33
  %3176 = getelementptr inbounds %struct.Reg, %struct.Reg* %3175, i32 0, i32 0
  %PC.i810 = bitcast %union.anon* %3176 to i64*
  %3177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3178 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3177, i64 0, i64 0
  %YMM0.i811 = bitcast %union.VectorReg* %3178 to %"class.std::bitset"*
  %3179 = bitcast %"class.std::bitset"* %YMM0.i811 to i8*
  %3180 = bitcast %"class.std::bitset"* %YMM0.i811 to i8*
  %3181 = load i64, i64* %PC.i810
  %3182 = add i64 %3181, 9
  store i64 %3182, i64* %PC.i810
  %3183 = bitcast i8* %3180 to double*
  %3184 = load double, double* %3183, align 1
  %3185 = getelementptr inbounds i8, i8* %3180, i64 8
  %3186 = bitcast i8* %3185 to i64*
  %3187 = load i64, i64* %3186, align 1
  %3188 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %3189 = fmul double %3184, %3188
  %3190 = bitcast i8* %3179 to double*
  store double %3189, double* %3190, align 1
  %3191 = getelementptr inbounds i8, i8* %3179, i64 8
  %3192 = bitcast i8* %3191 to i64*
  store i64 %3187, i64* %3192, align 1
  store %struct.Memory* %loadMem_400c77, %struct.Memory** %MEMORY
  %loadMem_400c80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3194 = getelementptr inbounds %struct.GPR, %struct.GPR* %3193, i32 0, i32 33
  %3195 = getelementptr inbounds %struct.Reg, %struct.Reg* %3194, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %3195 to i64*
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3197 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3196, i64 0, i64 0
  %XMM0.i809 = bitcast %union.VectorReg* %3197 to %union.vec128_t*
  %3198 = bitcast %union.vec128_t* %XMM0.i809 to i8*
  %3199 = load i64, i64* %PC.i808
  %3200 = add i64 %3199, 9
  store i64 %3200, i64* %PC.i808
  %3201 = bitcast i8* %3198 to double*
  %3202 = load double, double* %3201, align 1
  store double %3202, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  store %struct.Memory* %loadMem_400c80, %struct.Memory** %MEMORY
  %loadMem_400c89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3204 = getelementptr inbounds %struct.GPR, %struct.GPR* %3203, i32 0, i32 33
  %3205 = getelementptr inbounds %struct.Reg, %struct.Reg* %3204, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %3205 to i64*
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3207 = getelementptr inbounds %struct.GPR, %struct.GPR* %3206, i32 0, i32 1
  %3208 = getelementptr inbounds %struct.Reg, %struct.Reg* %3207, i32 0, i32 0
  %RAX.i806 = bitcast %union.anon* %3208 to i64*
  %3209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3210 = getelementptr inbounds %struct.GPR, %struct.GPR* %3209, i32 0, i32 15
  %3211 = getelementptr inbounds %struct.Reg, %struct.Reg* %3210, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %3211 to i64*
  %3212 = load i64, i64* %RBP.i807
  %3213 = sub i64 %3212, 24
  %3214 = load i64, i64* %PC.i805
  %3215 = add i64 %3214, 4
  store i64 %3215, i64* %PC.i805
  %3216 = inttoptr i64 %3213 to i64*
  %3217 = load i64, i64* %3216
  store i64 %3217, i64* %RAX.i806, align 8
  store %struct.Memory* %loadMem_400c89, %struct.Memory** %MEMORY
  %loadMem_400c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3219 = getelementptr inbounds %struct.GPR, %struct.GPR* %3218, i32 0, i32 33
  %3220 = getelementptr inbounds %struct.Reg, %struct.Reg* %3219, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %3220 to i64*
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3222 = getelementptr inbounds %struct.GPR, %struct.GPR* %3221, i32 0, i32 1
  %3223 = getelementptr inbounds %struct.Reg, %struct.Reg* %3222, i32 0, i32 0
  %RAX.i804 = bitcast %union.anon* %3223 to i64*
  %3224 = load i64, i64* %RAX.i804
  %3225 = load i64, i64* %PC.i803
  %3226 = add i64 %3225, 4
  store i64 %3226, i64* %PC.i803
  %3227 = add i64 1, %3224
  store i64 %3227, i64* %RAX.i804, align 8
  %3228 = icmp ult i64 %3227, %3224
  %3229 = icmp ult i64 %3227, 1
  %3230 = or i1 %3228, %3229
  %3231 = zext i1 %3230 to i8
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3231, i8* %3232, align 1
  %3233 = trunc i64 %3227 to i32
  %3234 = and i32 %3233, 255
  %3235 = call i32 @llvm.ctpop.i32(i32 %3234)
  %3236 = trunc i32 %3235 to i8
  %3237 = and i8 %3236, 1
  %3238 = xor i8 %3237, 1
  %3239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3238, i8* %3239, align 1
  %3240 = xor i64 1, %3224
  %3241 = xor i64 %3240, %3227
  %3242 = lshr i64 %3241, 4
  %3243 = trunc i64 %3242 to i8
  %3244 = and i8 %3243, 1
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3244, i8* %3245, align 1
  %3246 = icmp eq i64 %3227, 0
  %3247 = zext i1 %3246 to i8
  %3248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3247, i8* %3248, align 1
  %3249 = lshr i64 %3227, 63
  %3250 = trunc i64 %3249 to i8
  %3251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3250, i8* %3251, align 1
  %3252 = lshr i64 %3224, 63
  %3253 = xor i64 %3249, %3252
  %3254 = add i64 %3253, %3249
  %3255 = icmp eq i64 %3254, 2
  %3256 = zext i1 %3255 to i8
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3256, i8* %3257, align 1
  store %struct.Memory* %loadMem_400c8d, %struct.Memory** %MEMORY
  %loadMem_400c91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3259 = getelementptr inbounds %struct.GPR, %struct.GPR* %3258, i32 0, i32 33
  %3260 = getelementptr inbounds %struct.Reg, %struct.Reg* %3259, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %3260 to i64*
  %3261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3262 = getelementptr inbounds %struct.GPR, %struct.GPR* %3261, i32 0, i32 1
  %3263 = getelementptr inbounds %struct.Reg, %struct.Reg* %3262, i32 0, i32 0
  %RAX.i801 = bitcast %union.anon* %3263 to i64*
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3265 = getelementptr inbounds %struct.GPR, %struct.GPR* %3264, i32 0, i32 15
  %3266 = getelementptr inbounds %struct.Reg, %struct.Reg* %3265, i32 0, i32 0
  %RBP.i802 = bitcast %union.anon* %3266 to i64*
  %3267 = load i64, i64* %RBP.i802
  %3268 = sub i64 %3267, 24
  %3269 = load i64, i64* %RAX.i801
  %3270 = load i64, i64* %PC.i800
  %3271 = add i64 %3270, 4
  store i64 %3271, i64* %PC.i800
  %3272 = inttoptr i64 %3268 to i64*
  store i64 %3269, i64* %3272
  store %struct.Memory* %loadMem_400c91, %struct.Memory** %MEMORY
  %loadMem_400c95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3274 = getelementptr inbounds %struct.GPR, %struct.GPR* %3273, i32 0, i32 33
  %3275 = getelementptr inbounds %struct.Reg, %struct.Reg* %3274, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %3275 to i64*
  %3276 = load i64, i64* %PC.i799
  %3277 = add i64 %3276, -265
  %3278 = load i64, i64* %PC.i799
  %3279 = add i64 %3278, 5
  store i64 %3279, i64* %PC.i799
  %3280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3277, i64* %3280, align 8
  store %struct.Memory* %loadMem_400c95, %struct.Memory** %MEMORY
  br label %block_.L_400b8c

block_.L_400c9a:                                  ; preds = %block_.L_400b8c
  %loadMem_400c9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3282 = getelementptr inbounds %struct.GPR, %struct.GPR* %3281, i32 0, i32 33
  %3283 = getelementptr inbounds %struct.Reg, %struct.Reg* %3282, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %3283 to i64*
  %3284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3285 = getelementptr inbounds %struct.GPR, %struct.GPR* %3284, i32 0, i32 1
  %3286 = getelementptr inbounds %struct.Reg, %struct.Reg* %3285, i32 0, i32 0
  %RAX.i797 = bitcast %union.anon* %3286 to i64*
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3288 = getelementptr inbounds %struct.GPR, %struct.GPR* %3287, i32 0, i32 15
  %3289 = getelementptr inbounds %struct.Reg, %struct.Reg* %3288, i32 0, i32 0
  %RBP.i798 = bitcast %union.anon* %3289 to i64*
  %3290 = load i64, i64* %RBP.i798
  %3291 = sub i64 %3290, 176
  %3292 = load i64, i64* %PC.i796
  %3293 = add i64 %3292, 6
  store i64 %3293, i64* %PC.i796
  %3294 = inttoptr i64 %3291 to i32*
  %3295 = load i32, i32* %3294
  %3296 = zext i32 %3295 to i64
  store i64 %3296, i64* %RAX.i797, align 8
  store %struct.Memory* %loadMem_400c9a, %struct.Memory** %MEMORY
  %loadMem_400ca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3298 = getelementptr inbounds %struct.GPR, %struct.GPR* %3297, i32 0, i32 33
  %3299 = getelementptr inbounds %struct.Reg, %struct.Reg* %3298, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %3299 to i64*
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3301 = getelementptr inbounds %struct.GPR, %struct.GPR* %3300, i32 0, i32 1
  %3302 = getelementptr inbounds %struct.Reg, %struct.Reg* %3301, i32 0, i32 0
  %EAX.i794 = bitcast %union.anon* %3302 to i32*
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3304 = getelementptr inbounds %struct.GPR, %struct.GPR* %3303, i32 0, i32 15
  %3305 = getelementptr inbounds %struct.Reg, %struct.Reg* %3304, i32 0, i32 0
  %RBP.i795 = bitcast %union.anon* %3305 to i64*
  %3306 = load i32, i32* %EAX.i794
  %3307 = zext i32 %3306 to i64
  %3308 = load i64, i64* %RBP.i795
  %3309 = sub i64 %3308, 172
  %3310 = load i64, i64* %PC.i793
  %3311 = add i64 %3310, 6
  store i64 %3311, i64* %PC.i793
  %3312 = inttoptr i64 %3309 to i32*
  %3313 = load i32, i32* %3312
  %3314 = sub i32 %3306, %3313
  %3315 = icmp ult i32 %3306, %3313
  %3316 = zext i1 %3315 to i8
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3316, i8* %3317, align 1
  %3318 = and i32 %3314, 255
  %3319 = call i32 @llvm.ctpop.i32(i32 %3318)
  %3320 = trunc i32 %3319 to i8
  %3321 = and i8 %3320, 1
  %3322 = xor i8 %3321, 1
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3322, i8* %3323, align 1
  %3324 = xor i32 %3313, %3306
  %3325 = xor i32 %3324, %3314
  %3326 = lshr i32 %3325, 4
  %3327 = trunc i32 %3326 to i8
  %3328 = and i8 %3327, 1
  %3329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3328, i8* %3329, align 1
  %3330 = icmp eq i32 %3314, 0
  %3331 = zext i1 %3330 to i8
  %3332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3331, i8* %3332, align 1
  %3333 = lshr i32 %3314, 31
  %3334 = trunc i32 %3333 to i8
  %3335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3334, i8* %3335, align 1
  %3336 = lshr i32 %3306, 31
  %3337 = lshr i32 %3313, 31
  %3338 = xor i32 %3337, %3336
  %3339 = xor i32 %3333, %3336
  %3340 = add i32 %3339, %3338
  %3341 = icmp eq i32 %3340, 2
  %3342 = zext i1 %3341 to i8
  %3343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3342, i8* %3343, align 1
  store %struct.Memory* %loadMem_400ca0, %struct.Memory** %MEMORY
  %loadMem_400ca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3345 = getelementptr inbounds %struct.GPR, %struct.GPR* %3344, i32 0, i32 33
  %3346 = getelementptr inbounds %struct.Reg, %struct.Reg* %3345, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %3346 to i64*
  %3347 = load i64, i64* %PC.i792
  %3348 = add i64 %3347, 59
  %3349 = load i64, i64* %PC.i792
  %3350 = add i64 %3349, 6
  %3351 = load i64, i64* %PC.i792
  %3352 = add i64 %3351, 6
  store i64 %3352, i64* %PC.i792
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3354 = load i8, i8* %3353, align 1
  %3355 = icmp eq i8 %3354, 0
  %3356 = zext i1 %3355 to i8
  store i8 %3356, i8* %BRANCH_TAKEN, align 1
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3358 = select i1 %3355, i64 %3348, i64 %3350
  store i64 %3358, i64* %3357, align 8
  store %struct.Memory* %loadMem_400ca6, %struct.Memory** %MEMORY
  %loadBr_400ca6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400ca6 = icmp eq i8 %loadBr_400ca6, 1
  br i1 %cmpBr_400ca6, label %block_.L_400ce1, label %block_400cac

block_400cac:                                     ; preds = %block_.L_400c9a
  %loadMem_400cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %3359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3360 = getelementptr inbounds %struct.GPR, %struct.GPR* %3359, i32 0, i32 33
  %3361 = getelementptr inbounds %struct.Reg, %struct.Reg* %3360, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %3361 to i64*
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3363 = getelementptr inbounds %struct.GPR, %struct.GPR* %3362, i32 0, i32 11
  %3364 = getelementptr inbounds %struct.Reg, %struct.Reg* %3363, i32 0, i32 0
  %RDI.i790 = bitcast %union.anon* %3364 to i64*
  %3365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3366 = getelementptr inbounds %struct.GPR, %struct.GPR* %3365, i32 0, i32 15
  %3367 = getelementptr inbounds %struct.Reg, %struct.Reg* %3366, i32 0, i32 0
  %RBP.i791 = bitcast %union.anon* %3367 to i64*
  %3368 = load i64, i64* %RBP.i791
  %3369 = sub i64 %3368, 40
  %3370 = load i64, i64* %PC.i789
  %3371 = add i64 %3370, 4
  store i64 %3371, i64* %PC.i789
  %3372 = inttoptr i64 %3369 to i64*
  %3373 = load i64, i64* %3372
  store i64 %3373, i64* %RDI.i790, align 8
  store %struct.Memory* %loadMem_400cac, %struct.Memory** %MEMORY
  %loadMem_400cb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3375 = getelementptr inbounds %struct.GPR, %struct.GPR* %3374, i32 0, i32 33
  %3376 = getelementptr inbounds %struct.Reg, %struct.Reg* %3375, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %3376 to i64*
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3378 = getelementptr inbounds %struct.GPR, %struct.GPR* %3377, i32 0, i32 9
  %3379 = getelementptr inbounds %struct.Reg, %struct.Reg* %3378, i32 0, i32 0
  %RSI.i787 = bitcast %union.anon* %3379 to i64*
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3381 = getelementptr inbounds %struct.GPR, %struct.GPR* %3380, i32 0, i32 15
  %3382 = getelementptr inbounds %struct.Reg, %struct.Reg* %3381, i32 0, i32 0
  %RBP.i788 = bitcast %union.anon* %3382 to i64*
  %3383 = load i64, i64* %RBP.i788
  %3384 = sub i64 %3383, 48
  %3385 = load i64, i64* %PC.i786
  %3386 = add i64 %3385, 4
  store i64 %3386, i64* %PC.i786
  %3387 = inttoptr i64 %3384 to i64*
  %3388 = load i64, i64* %3387
  store i64 %3388, i64* %RSI.i787, align 8
  store %struct.Memory* %loadMem_400cb0, %struct.Memory** %MEMORY
  %loadMem_400cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3390 = getelementptr inbounds %struct.GPR, %struct.GPR* %3389, i32 0, i32 33
  %3391 = getelementptr inbounds %struct.Reg, %struct.Reg* %3390, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %3391 to i64*
  %3392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3393 = getelementptr inbounds %struct.GPR, %struct.GPR* %3392, i32 0, i32 7
  %3394 = getelementptr inbounds %struct.Reg, %struct.Reg* %3393, i32 0, i32 0
  %RDX.i784 = bitcast %union.anon* %3394 to i64*
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3396 = getelementptr inbounds %struct.GPR, %struct.GPR* %3395, i32 0, i32 15
  %3397 = getelementptr inbounds %struct.Reg, %struct.Reg* %3396, i32 0, i32 0
  %RBP.i785 = bitcast %union.anon* %3397 to i64*
  %3398 = load i64, i64* %RBP.i785
  %3399 = sub i64 %3398, 40
  %3400 = load i64, i64* %PC.i783
  %3401 = add i64 %3400, 4
  store i64 %3401, i64* %PC.i783
  %3402 = inttoptr i64 %3399 to i64*
  %3403 = load i64, i64* %3402
  store i64 %3403, i64* %RDX.i784, align 8
  store %struct.Memory* %loadMem_400cb4, %struct.Memory** %MEMORY
  %loadMem_400cb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3405 = getelementptr inbounds %struct.GPR, %struct.GPR* %3404, i32 0, i32 33
  %3406 = getelementptr inbounds %struct.Reg, %struct.Reg* %3405, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %3406 to i64*
  %3407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3408 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3407, i64 0, i64 0
  %YMM0.i782 = bitcast %union.VectorReg* %3408 to %"class.std::bitset"*
  %3409 = bitcast %"class.std::bitset"* %YMM0.i782 to i8*
  %3410 = load i64, i64* %PC.i781
  %3411 = add i64 %3410, 9
  store i64 %3411, i64* %PC.i781
  %3412 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %3413 = bitcast i8* %3409 to double*
  store double %3412, double* %3413, align 1
  %3414 = getelementptr inbounds i8, i8* %3409, i64 8
  %3415 = bitcast i8* %3414 to double*
  store double 0.000000e+00, double* %3415, align 1
  store %struct.Memory* %loadMem_400cb8, %struct.Memory** %MEMORY
  %loadMem_400cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3417 = getelementptr inbounds %struct.GPR, %struct.GPR* %3416, i32 0, i32 33
  %3418 = getelementptr inbounds %struct.Reg, %struct.Reg* %3417, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %3418 to i64*
  %3419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3420 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3419, i64 0, i64 1
  %YMM1.i780 = bitcast %union.VectorReg* %3420 to %"class.std::bitset"*
  %3421 = bitcast %"class.std::bitset"* %YMM1.i780 to i8*
  %3422 = load i64, i64* %PC.i779
  %3423 = add i64 %3422, 9
  store i64 %3423, i64* %PC.i779
  %3424 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %3425 = bitcast i8* %3421 to double*
  store double %3424, double* %3425, align 1
  %3426 = getelementptr inbounds i8, i8* %3421, i64 8
  %3427 = bitcast i8* %3426 to double*
  store double 0.000000e+00, double* %3427, align 1
  store %struct.Memory* %loadMem_400cc1, %struct.Memory** %MEMORY
  %loadMem_400cca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3429 = getelementptr inbounds %struct.GPR, %struct.GPR* %3428, i32 0, i32 33
  %3430 = getelementptr inbounds %struct.Reg, %struct.Reg* %3429, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %3430 to i64*
  %3431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3432 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3431, i64 0, i64 2
  %YMM2.i778 = bitcast %union.VectorReg* %3432 to %"class.std::bitset"*
  %3433 = bitcast %"class.std::bitset"* %YMM2.i778 to i8*
  %3434 = load i64, i64* %PC.i777
  %3435 = add i64 %3434, 9
  store i64 %3435, i64* %PC.i777
  %3436 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %3437 = bitcast i8* %3433 to double*
  store double %3436, double* %3437, align 1
  %3438 = getelementptr inbounds i8, i8* %3433, i64 8
  %3439 = bitcast i8* %3438 to double*
  store double 0.000000e+00, double* %3439, align 1
  store %struct.Memory* %loadMem_400cca, %struct.Memory** %MEMORY
  %loadMem_400cd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3441 = getelementptr inbounds %struct.GPR, %struct.GPR* %3440, i32 0, i32 33
  %3442 = getelementptr inbounds %struct.Reg, %struct.Reg* %3441, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %3442 to i64*
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3444 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3443, i64 0, i64 3
  %YMM3.i776 = bitcast %union.VectorReg* %3444 to %"class.std::bitset"*
  %3445 = bitcast %"class.std::bitset"* %YMM3.i776 to i8*
  %3446 = load i64, i64* %PC.i775
  %3447 = add i64 %3446, 9
  store i64 %3447, i64* %PC.i775
  %3448 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %3449 = bitcast i8* %3445 to double*
  store double %3448, double* %3449, align 1
  %3450 = getelementptr inbounds i8, i8* %3445, i64 8
  %3451 = bitcast i8* %3450 to double*
  store double 0.000000e+00, double* %3451, align 1
  store %struct.Memory* %loadMem_400cd3, %struct.Memory** %MEMORY
  %loadMem1_400cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3453 = getelementptr inbounds %struct.GPR, %struct.GPR* %3452, i32 0, i32 33
  %3454 = getelementptr inbounds %struct.Reg, %struct.Reg* %3453, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %3454 to i64*
  %3455 = load i64, i64* %PC.i774
  %3456 = add i64 %3455, 2244
  %3457 = load i64, i64* %PC.i774
  %3458 = add i64 %3457, 5
  %3459 = load i64, i64* %PC.i774
  %3460 = add i64 %3459, 5
  store i64 %3460, i64* %PC.i774
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3462 = load i64, i64* %3461, align 8
  %3463 = add i64 %3462, -8
  %3464 = inttoptr i64 %3463 to i64*
  store i64 %3458, i64* %3464
  store i64 %3463, i64* %3461, align 8
  %3465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3456, i64* %3465, align 8
  store %struct.Memory* %loadMem1_400cdc, %struct.Memory** %MEMORY
  %loadMem2_400cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400cdc = load i64, i64* %3
  %call2_400cdc = call %struct.Memory* @sub_4015a0.POUT(%struct.State* %0, i64 %loadPC_400cdc, %struct.Memory* %loadMem2_400cdc)
  store %struct.Memory* %call2_400cdc, %struct.Memory** %MEMORY
  br label %block_.L_400ce1

block_.L_400ce1:                                  ; preds = %block_400cac, %block_.L_400c9a
  %loadMem_400ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3467 = getelementptr inbounds %struct.GPR, %struct.GPR* %3466, i32 0, i32 33
  %3468 = getelementptr inbounds %struct.Reg, %struct.Reg* %3467, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %3468 to i64*
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3470 = getelementptr inbounds %struct.GPR, %struct.GPR* %3469, i32 0, i32 15
  %3471 = getelementptr inbounds %struct.Reg, %struct.Reg* %3470, i32 0, i32 0
  %RBP.i773 = bitcast %union.anon* %3471 to i64*
  %3472 = load i64, i64* %RBP.i773
  %3473 = sub i64 %3472, 24
  %3474 = load i64, i64* %PC.i772
  %3475 = add i64 %3474, 8
  store i64 %3475, i64* %PC.i772
  %3476 = inttoptr i64 %3473 to i64*
  store i64 1, i64* %3476
  store %struct.Memory* %loadMem_400ce1, %struct.Memory** %MEMORY
  br label %block_.L_400ce9

block_.L_400ce9:                                  ; preds = %block_400cf7, %block_.L_400ce1
  %loadMem_400ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3478 = getelementptr inbounds %struct.GPR, %struct.GPR* %3477, i32 0, i32 33
  %3479 = getelementptr inbounds %struct.Reg, %struct.Reg* %3478, i32 0, i32 0
  %PC.i769 = bitcast %union.anon* %3479 to i64*
  %3480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3481 = getelementptr inbounds %struct.GPR, %struct.GPR* %3480, i32 0, i32 1
  %3482 = getelementptr inbounds %struct.Reg, %struct.Reg* %3481, i32 0, i32 0
  %RAX.i770 = bitcast %union.anon* %3482 to i64*
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3484 = getelementptr inbounds %struct.GPR, %struct.GPR* %3483, i32 0, i32 15
  %3485 = getelementptr inbounds %struct.Reg, %struct.Reg* %3484, i32 0, i32 0
  %RBP.i771 = bitcast %union.anon* %3485 to i64*
  %3486 = load i64, i64* %RBP.i771
  %3487 = sub i64 %3486, 24
  %3488 = load i64, i64* %PC.i769
  %3489 = add i64 %3488, 4
  store i64 %3489, i64* %PC.i769
  %3490 = inttoptr i64 %3487 to i64*
  %3491 = load i64, i64* %3490
  store i64 %3491, i64* %RAX.i770, align 8
  store %struct.Memory* %loadMem_400ce9, %struct.Memory** %MEMORY
  %loadMem_400ced = load %struct.Memory*, %struct.Memory** %MEMORY
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3493 = getelementptr inbounds %struct.GPR, %struct.GPR* %3492, i32 0, i32 33
  %3494 = getelementptr inbounds %struct.Reg, %struct.Reg* %3493, i32 0, i32 0
  %PC.i766 = bitcast %union.anon* %3494 to i64*
  %3495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3496 = getelementptr inbounds %struct.GPR, %struct.GPR* %3495, i32 0, i32 1
  %3497 = getelementptr inbounds %struct.Reg, %struct.Reg* %3496, i32 0, i32 0
  %RAX.i767 = bitcast %union.anon* %3497 to i64*
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 15
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %RBP.i768 = bitcast %union.anon* %3500 to i64*
  %3501 = load i64, i64* %RAX.i767
  %3502 = load i64, i64* %RBP.i768
  %3503 = sub i64 %3502, 48
  %3504 = load i64, i64* %PC.i766
  %3505 = add i64 %3504, 4
  store i64 %3505, i64* %PC.i766
  %3506 = inttoptr i64 %3503 to i64*
  %3507 = load i64, i64* %3506
  %3508 = sub i64 %3501, %3507
  %3509 = icmp ugt i64 %3507, %3501
  %3510 = zext i1 %3509 to i8
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3510, i8* %3511, align 1
  %3512 = trunc i64 %3508 to i32
  %3513 = and i32 %3512, 255
  %3514 = call i32 @llvm.ctpop.i32(i32 %3513)
  %3515 = trunc i32 %3514 to i8
  %3516 = and i8 %3515, 1
  %3517 = xor i8 %3516, 1
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3517, i8* %3518, align 1
  %3519 = xor i64 %3507, %3501
  %3520 = xor i64 %3519, %3508
  %3521 = lshr i64 %3520, 4
  %3522 = trunc i64 %3521 to i8
  %3523 = and i8 %3522, 1
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3523, i8* %3524, align 1
  %3525 = icmp eq i64 %3508, 0
  %3526 = zext i1 %3525 to i8
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3526, i8* %3527, align 1
  %3528 = lshr i64 %3508, 63
  %3529 = trunc i64 %3528 to i8
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3529, i8* %3530, align 1
  %3531 = lshr i64 %3501, 63
  %3532 = lshr i64 %3507, 63
  %3533 = xor i64 %3532, %3531
  %3534 = xor i64 %3528, %3531
  %3535 = add i64 %3534, %3533
  %3536 = icmp eq i64 %3535, 2
  %3537 = zext i1 %3536 to i8
  %3538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3537, i8* %3538, align 1
  store %struct.Memory* %loadMem_400ced, %struct.Memory** %MEMORY
  %loadMem_400cf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 33
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %3541 to i64*
  %3542 = load i64, i64* %PC.i765
  %3543 = add i64 %3542, 38
  %3544 = load i64, i64* %PC.i765
  %3545 = add i64 %3544, 6
  %3546 = load i64, i64* %PC.i765
  %3547 = add i64 %3546, 6
  store i64 %3547, i64* %PC.i765
  %3548 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3549 = load i8, i8* %3548, align 1
  %3550 = icmp eq i8 %3549, 0
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3552 = load i8, i8* %3551, align 1
  %3553 = icmp ne i8 %3552, 0
  %3554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3555 = load i8, i8* %3554, align 1
  %3556 = icmp ne i8 %3555, 0
  %3557 = xor i1 %3553, %3556
  %3558 = xor i1 %3557, true
  %3559 = and i1 %3550, %3558
  %3560 = zext i1 %3559 to i8
  store i8 %3560, i8* %BRANCH_TAKEN, align 1
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3562 = select i1 %3559, i64 %3543, i64 %3545
  store i64 %3562, i64* %3561, align 8
  store %struct.Memory* %loadMem_400cf1, %struct.Memory** %MEMORY
  %loadBr_400cf1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400cf1 = icmp eq i8 %loadBr_400cf1, 1
  br i1 %cmpBr_400cf1, label %block_.L_400d17, label %block_400cf7

block_400cf7:                                     ; preds = %block_.L_400ce9
  %loadMem_400cf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3564 = getelementptr inbounds %struct.GPR, %struct.GPR* %3563, i32 0, i32 33
  %3565 = getelementptr inbounds %struct.Reg, %struct.Reg* %3564, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %3565 to i64*
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3567 = getelementptr inbounds %struct.GPR, %struct.GPR* %3566, i32 0, i32 11
  %3568 = getelementptr inbounds %struct.Reg, %struct.Reg* %3567, i32 0, i32 0
  %RDI.i764 = bitcast %union.anon* %3568 to i64*
  %3569 = load i64, i64* %PC.i763
  %3570 = add i64 %3569, 10
  store i64 %3570, i64* %PC.i763
  store i64 ptrtoint (%G__0x6020c0_type* @G__0x6020c0 to i64), i64* %RDI.i764, align 8
  store %struct.Memory* %loadMem_400cf7, %struct.Memory** %MEMORY
  %loadMem1_400d01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3572 = getelementptr inbounds %struct.GPR, %struct.GPR* %3571, i32 0, i32 33
  %3573 = getelementptr inbounds %struct.Reg, %struct.Reg* %3572, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %3573 to i64*
  %3574 = load i64, i64* %PC.i762
  %3575 = add i64 %3574, 2319
  %3576 = load i64, i64* %PC.i762
  %3577 = add i64 %3576, 5
  %3578 = load i64, i64* %PC.i762
  %3579 = add i64 %3578, 5
  store i64 %3579, i64* %PC.i762
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3581 = load i64, i64* %3580, align 8
  %3582 = add i64 %3581, -8
  %3583 = inttoptr i64 %3582 to i64*
  store i64 %3577, i64* %3583
  store i64 %3582, i64* %3580, align 8
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3575, i64* %3584, align 8
  store %struct.Memory* %loadMem1_400d01, %struct.Memory** %MEMORY
  %loadMem2_400d01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400d01 = load i64, i64* %3
  %call2_400d01 = call %struct.Memory* @sub_401610.PA(%struct.State* %0, i64 %loadPC_400d01, %struct.Memory* %loadMem2_400d01)
  store %struct.Memory* %call2_400d01, %struct.Memory** %MEMORY
  %loadMem_400d06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3586 = getelementptr inbounds %struct.GPR, %struct.GPR* %3585, i32 0, i32 33
  %3587 = getelementptr inbounds %struct.Reg, %struct.Reg* %3586, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %3587 to i64*
  %3588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3589 = getelementptr inbounds %struct.GPR, %struct.GPR* %3588, i32 0, i32 1
  %3590 = getelementptr inbounds %struct.Reg, %struct.Reg* %3589, i32 0, i32 0
  %RAX.i760 = bitcast %union.anon* %3590 to i64*
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3592 = getelementptr inbounds %struct.GPR, %struct.GPR* %3591, i32 0, i32 15
  %3593 = getelementptr inbounds %struct.Reg, %struct.Reg* %3592, i32 0, i32 0
  %RBP.i761 = bitcast %union.anon* %3593 to i64*
  %3594 = load i64, i64* %RBP.i761
  %3595 = sub i64 %3594, 24
  %3596 = load i64, i64* %PC.i759
  %3597 = add i64 %3596, 4
  store i64 %3597, i64* %PC.i759
  %3598 = inttoptr i64 %3595 to i64*
  %3599 = load i64, i64* %3598
  store i64 %3599, i64* %RAX.i760, align 8
  store %struct.Memory* %loadMem_400d06, %struct.Memory** %MEMORY
  %loadMem_400d0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3601 = getelementptr inbounds %struct.GPR, %struct.GPR* %3600, i32 0, i32 33
  %3602 = getelementptr inbounds %struct.Reg, %struct.Reg* %3601, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %3602 to i64*
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3604 = getelementptr inbounds %struct.GPR, %struct.GPR* %3603, i32 0, i32 1
  %3605 = getelementptr inbounds %struct.Reg, %struct.Reg* %3604, i32 0, i32 0
  %RAX.i758 = bitcast %union.anon* %3605 to i64*
  %3606 = load i64, i64* %RAX.i758
  %3607 = load i64, i64* %PC.i757
  %3608 = add i64 %3607, 4
  store i64 %3608, i64* %PC.i757
  %3609 = add i64 1, %3606
  store i64 %3609, i64* %RAX.i758, align 8
  %3610 = icmp ult i64 %3609, %3606
  %3611 = icmp ult i64 %3609, 1
  %3612 = or i1 %3610, %3611
  %3613 = zext i1 %3612 to i8
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3613, i8* %3614, align 1
  %3615 = trunc i64 %3609 to i32
  %3616 = and i32 %3615, 255
  %3617 = call i32 @llvm.ctpop.i32(i32 %3616)
  %3618 = trunc i32 %3617 to i8
  %3619 = and i8 %3618, 1
  %3620 = xor i8 %3619, 1
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3620, i8* %3621, align 1
  %3622 = xor i64 1, %3606
  %3623 = xor i64 %3622, %3609
  %3624 = lshr i64 %3623, 4
  %3625 = trunc i64 %3624 to i8
  %3626 = and i8 %3625, 1
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3626, i8* %3627, align 1
  %3628 = icmp eq i64 %3609, 0
  %3629 = zext i1 %3628 to i8
  %3630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3629, i8* %3630, align 1
  %3631 = lshr i64 %3609, 63
  %3632 = trunc i64 %3631 to i8
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3632, i8* %3633, align 1
  %3634 = lshr i64 %3606, 63
  %3635 = xor i64 %3631, %3634
  %3636 = add i64 %3635, %3631
  %3637 = icmp eq i64 %3636, 2
  %3638 = zext i1 %3637 to i8
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3638, i8* %3639, align 1
  store %struct.Memory* %loadMem_400d0a, %struct.Memory** %MEMORY
  %loadMem_400d0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3641 = getelementptr inbounds %struct.GPR, %struct.GPR* %3640, i32 0, i32 33
  %3642 = getelementptr inbounds %struct.Reg, %struct.Reg* %3641, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %3642 to i64*
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3644 = getelementptr inbounds %struct.GPR, %struct.GPR* %3643, i32 0, i32 1
  %3645 = getelementptr inbounds %struct.Reg, %struct.Reg* %3644, i32 0, i32 0
  %RAX.i755 = bitcast %union.anon* %3645 to i64*
  %3646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3647 = getelementptr inbounds %struct.GPR, %struct.GPR* %3646, i32 0, i32 15
  %3648 = getelementptr inbounds %struct.Reg, %struct.Reg* %3647, i32 0, i32 0
  %RBP.i756 = bitcast %union.anon* %3648 to i64*
  %3649 = load i64, i64* %RBP.i756
  %3650 = sub i64 %3649, 24
  %3651 = load i64, i64* %RAX.i755
  %3652 = load i64, i64* %PC.i754
  %3653 = add i64 %3652, 4
  store i64 %3653, i64* %PC.i754
  %3654 = inttoptr i64 %3650 to i64*
  store i64 %3651, i64* %3654
  store %struct.Memory* %loadMem_400d0e, %struct.Memory** %MEMORY
  %loadMem_400d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3656 = getelementptr inbounds %struct.GPR, %struct.GPR* %3655, i32 0, i32 33
  %3657 = getelementptr inbounds %struct.Reg, %struct.Reg* %3656, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %3657 to i64*
  %3658 = load i64, i64* %PC.i753
  %3659 = add i64 %3658, -41
  %3660 = load i64, i64* %PC.i753
  %3661 = add i64 %3660, 5
  store i64 %3661, i64* %PC.i753
  %3662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3659, i64* %3662, align 8
  store %struct.Memory* %loadMem_400d12, %struct.Memory** %MEMORY
  br label %block_.L_400ce9

block_.L_400d17:                                  ; preds = %block_.L_400ce9
  %loadMem_400d17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3664 = getelementptr inbounds %struct.GPR, %struct.GPR* %3663, i32 0, i32 33
  %3665 = getelementptr inbounds %struct.Reg, %struct.Reg* %3664, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %3665 to i64*
  %3666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3667 = getelementptr inbounds %struct.GPR, %struct.GPR* %3666, i32 0, i32 1
  %3668 = getelementptr inbounds %struct.Reg, %struct.Reg* %3667, i32 0, i32 0
  %RAX.i751 = bitcast %union.anon* %3668 to i64*
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3670 = getelementptr inbounds %struct.GPR, %struct.GPR* %3669, i32 0, i32 15
  %3671 = getelementptr inbounds %struct.Reg, %struct.Reg* %3670, i32 0, i32 0
  %RBP.i752 = bitcast %union.anon* %3671 to i64*
  %3672 = load i64, i64* %RBP.i752
  %3673 = sub i64 %3672, 176
  %3674 = load i64, i64* %PC.i750
  %3675 = add i64 %3674, 6
  store i64 %3675, i64* %PC.i750
  %3676 = inttoptr i64 %3673 to i32*
  %3677 = load i32, i32* %3676
  %3678 = zext i32 %3677 to i64
  store i64 %3678, i64* %RAX.i751, align 8
  store %struct.Memory* %loadMem_400d17, %struct.Memory** %MEMORY
  %loadMem_400d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3680 = getelementptr inbounds %struct.GPR, %struct.GPR* %3679, i32 0, i32 33
  %3681 = getelementptr inbounds %struct.Reg, %struct.Reg* %3680, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %3681 to i64*
  %3682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3683 = getelementptr inbounds %struct.GPR, %struct.GPR* %3682, i32 0, i32 1
  %3684 = getelementptr inbounds %struct.Reg, %struct.Reg* %3683, i32 0, i32 0
  %EAX.i748 = bitcast %union.anon* %3684 to i32*
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3686 = getelementptr inbounds %struct.GPR, %struct.GPR* %3685, i32 0, i32 15
  %3687 = getelementptr inbounds %struct.Reg, %struct.Reg* %3686, i32 0, i32 0
  %RBP.i749 = bitcast %union.anon* %3687 to i64*
  %3688 = load i32, i32* %EAX.i748
  %3689 = zext i32 %3688 to i64
  %3690 = load i64, i64* %RBP.i749
  %3691 = sub i64 %3690, 172
  %3692 = load i64, i64* %PC.i747
  %3693 = add i64 %3692, 6
  store i64 %3693, i64* %PC.i747
  %3694 = inttoptr i64 %3691 to i32*
  %3695 = load i32, i32* %3694
  %3696 = sub i32 %3688, %3695
  %3697 = icmp ult i32 %3688, %3695
  %3698 = zext i1 %3697 to i8
  %3699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3698, i8* %3699, align 1
  %3700 = and i32 %3696, 255
  %3701 = call i32 @llvm.ctpop.i32(i32 %3700)
  %3702 = trunc i32 %3701 to i8
  %3703 = and i8 %3702, 1
  %3704 = xor i8 %3703, 1
  %3705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3704, i8* %3705, align 1
  %3706 = xor i32 %3695, %3688
  %3707 = xor i32 %3706, %3696
  %3708 = lshr i32 %3707, 4
  %3709 = trunc i32 %3708 to i8
  %3710 = and i8 %3709, 1
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3710, i8* %3711, align 1
  %3712 = icmp eq i32 %3696, 0
  %3713 = zext i1 %3712 to i8
  %3714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3713, i8* %3714, align 1
  %3715 = lshr i32 %3696, 31
  %3716 = trunc i32 %3715 to i8
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3716, i8* %3717, align 1
  %3718 = lshr i32 %3688, 31
  %3719 = lshr i32 %3695, 31
  %3720 = xor i32 %3719, %3718
  %3721 = xor i32 %3715, %3718
  %3722 = add i32 %3721, %3720
  %3723 = icmp eq i32 %3722, 2
  %3724 = zext i1 %3723 to i8
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3724, i8* %3725, align 1
  store %struct.Memory* %loadMem_400d1d, %struct.Memory** %MEMORY
  %loadMem_400d23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3727 = getelementptr inbounds %struct.GPR, %struct.GPR* %3726, i32 0, i32 33
  %3728 = getelementptr inbounds %struct.Reg, %struct.Reg* %3727, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %3728 to i64*
  %3729 = load i64, i64* %PC.i746
  %3730 = add i64 %3729, 59
  %3731 = load i64, i64* %PC.i746
  %3732 = add i64 %3731, 6
  %3733 = load i64, i64* %PC.i746
  %3734 = add i64 %3733, 6
  store i64 %3734, i64* %PC.i746
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3736 = load i8, i8* %3735, align 1
  %3737 = icmp eq i8 %3736, 0
  %3738 = zext i1 %3737 to i8
  store i8 %3738, i8* %BRANCH_TAKEN, align 1
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3740 = select i1 %3737, i64 %3730, i64 %3732
  store i64 %3740, i64* %3739, align 8
  store %struct.Memory* %loadMem_400d23, %struct.Memory** %MEMORY
  %loadBr_400d23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d23 = icmp eq i8 %loadBr_400d23, 1
  br i1 %cmpBr_400d23, label %block_.L_400d5e, label %block_400d29

block_400d29:                                     ; preds = %block_.L_400d17
  %loadMem_400d29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3742 = getelementptr inbounds %struct.GPR, %struct.GPR* %3741, i32 0, i32 33
  %3743 = getelementptr inbounds %struct.Reg, %struct.Reg* %3742, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %3743 to i64*
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3745 = getelementptr inbounds %struct.GPR, %struct.GPR* %3744, i32 0, i32 11
  %3746 = getelementptr inbounds %struct.Reg, %struct.Reg* %3745, i32 0, i32 0
  %RDI.i744 = bitcast %union.anon* %3746 to i64*
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3748 = getelementptr inbounds %struct.GPR, %struct.GPR* %3747, i32 0, i32 15
  %3749 = getelementptr inbounds %struct.Reg, %struct.Reg* %3748, i32 0, i32 0
  %RBP.i745 = bitcast %union.anon* %3749 to i64*
  %3750 = load i64, i64* %RBP.i745
  %3751 = sub i64 %3750, 48
  %3752 = load i64, i64* %PC.i743
  %3753 = add i64 %3752, 4
  store i64 %3753, i64* %PC.i743
  %3754 = inttoptr i64 %3751 to i64*
  %3755 = load i64, i64* %3754
  store i64 %3755, i64* %RDI.i744, align 8
  store %struct.Memory* %loadMem_400d29, %struct.Memory** %MEMORY
  %loadMem_400d2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3757 = getelementptr inbounds %struct.GPR, %struct.GPR* %3756, i32 0, i32 33
  %3758 = getelementptr inbounds %struct.Reg, %struct.Reg* %3757, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %3758 to i64*
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3760 = getelementptr inbounds %struct.GPR, %struct.GPR* %3759, i32 0, i32 9
  %3761 = getelementptr inbounds %struct.Reg, %struct.Reg* %3760, i32 0, i32 0
  %RSI.i741 = bitcast %union.anon* %3761 to i64*
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3763 = getelementptr inbounds %struct.GPR, %struct.GPR* %3762, i32 0, i32 15
  %3764 = getelementptr inbounds %struct.Reg, %struct.Reg* %3763, i32 0, i32 0
  %RBP.i742 = bitcast %union.anon* %3764 to i64*
  %3765 = load i64, i64* %RBP.i742
  %3766 = sub i64 %3765, 40
  %3767 = load i64, i64* %PC.i740
  %3768 = add i64 %3767, 4
  store i64 %3768, i64* %PC.i740
  %3769 = inttoptr i64 %3766 to i64*
  %3770 = load i64, i64* %3769
  store i64 %3770, i64* %RSI.i741, align 8
  store %struct.Memory* %loadMem_400d2d, %struct.Memory** %MEMORY
  %loadMem_400d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3772 = getelementptr inbounds %struct.GPR, %struct.GPR* %3771, i32 0, i32 33
  %3773 = getelementptr inbounds %struct.Reg, %struct.Reg* %3772, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %3773 to i64*
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3775 = getelementptr inbounds %struct.GPR, %struct.GPR* %3774, i32 0, i32 7
  %3776 = getelementptr inbounds %struct.Reg, %struct.Reg* %3775, i32 0, i32 0
  %RDX.i738 = bitcast %union.anon* %3776 to i64*
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3778 = getelementptr inbounds %struct.GPR, %struct.GPR* %3777, i32 0, i32 15
  %3779 = getelementptr inbounds %struct.Reg, %struct.Reg* %3778, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %3779 to i64*
  %3780 = load i64, i64* %RBP.i739
  %3781 = sub i64 %3780, 40
  %3782 = load i64, i64* %PC.i737
  %3783 = add i64 %3782, 4
  store i64 %3783, i64* %PC.i737
  %3784 = inttoptr i64 %3781 to i64*
  %3785 = load i64, i64* %3784
  store i64 %3785, i64* %RDX.i738, align 8
  store %struct.Memory* %loadMem_400d31, %struct.Memory** %MEMORY
  %loadMem_400d35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 33
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %3788 to i64*
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3790 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3789, i64 0, i64 0
  %YMM0.i736 = bitcast %union.VectorReg* %3790 to %"class.std::bitset"*
  %3791 = bitcast %"class.std::bitset"* %YMM0.i736 to i8*
  %3792 = load i64, i64* %PC.i735
  %3793 = add i64 %3792, 9
  store i64 %3793, i64* %PC.i735
  %3794 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %3795 = bitcast i8* %3791 to double*
  store double %3794, double* %3795, align 1
  %3796 = getelementptr inbounds i8, i8* %3791, i64 8
  %3797 = bitcast i8* %3796 to double*
  store double 0.000000e+00, double* %3797, align 1
  store %struct.Memory* %loadMem_400d35, %struct.Memory** %MEMORY
  %loadMem_400d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3799 = getelementptr inbounds %struct.GPR, %struct.GPR* %3798, i32 0, i32 33
  %3800 = getelementptr inbounds %struct.Reg, %struct.Reg* %3799, i32 0, i32 0
  %PC.i733 = bitcast %union.anon* %3800 to i64*
  %3801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3802 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3801, i64 0, i64 1
  %YMM1.i734 = bitcast %union.VectorReg* %3802 to %"class.std::bitset"*
  %3803 = bitcast %"class.std::bitset"* %YMM1.i734 to i8*
  %3804 = load i64, i64* %PC.i733
  %3805 = add i64 %3804, 9
  store i64 %3805, i64* %PC.i733
  %3806 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %3807 = bitcast i8* %3803 to double*
  store double %3806, double* %3807, align 1
  %3808 = getelementptr inbounds i8, i8* %3803, i64 8
  %3809 = bitcast i8* %3808 to double*
  store double 0.000000e+00, double* %3809, align 1
  store %struct.Memory* %loadMem_400d3e, %struct.Memory** %MEMORY
  %loadMem_400d47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3811 = getelementptr inbounds %struct.GPR, %struct.GPR* %3810, i32 0, i32 33
  %3812 = getelementptr inbounds %struct.Reg, %struct.Reg* %3811, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %3812 to i64*
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3814 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3813, i64 0, i64 2
  %YMM2.i732 = bitcast %union.VectorReg* %3814 to %"class.std::bitset"*
  %3815 = bitcast %"class.std::bitset"* %YMM2.i732 to i8*
  %3816 = load i64, i64* %PC.i731
  %3817 = add i64 %3816, 9
  store i64 %3817, i64* %PC.i731
  %3818 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %3819 = bitcast i8* %3815 to double*
  store double %3818, double* %3819, align 1
  %3820 = getelementptr inbounds i8, i8* %3815, i64 8
  %3821 = bitcast i8* %3820 to double*
  store double 0.000000e+00, double* %3821, align 1
  store %struct.Memory* %loadMem_400d47, %struct.Memory** %MEMORY
  %loadMem_400d50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3823 = getelementptr inbounds %struct.GPR, %struct.GPR* %3822, i32 0, i32 33
  %3824 = getelementptr inbounds %struct.Reg, %struct.Reg* %3823, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %3824 to i64*
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3826 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3825, i64 0, i64 3
  %YMM3.i730 = bitcast %union.VectorReg* %3826 to %"class.std::bitset"*
  %3827 = bitcast %"class.std::bitset"* %YMM3.i730 to i8*
  %3828 = load i64, i64* %PC.i729
  %3829 = add i64 %3828, 9
  store i64 %3829, i64* %PC.i729
  %3830 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %3831 = bitcast i8* %3827 to double*
  store double %3830, double* %3831, align 1
  %3832 = getelementptr inbounds i8, i8* %3827, i64 8
  %3833 = bitcast i8* %3832 to double*
  store double 0.000000e+00, double* %3833, align 1
  store %struct.Memory* %loadMem_400d50, %struct.Memory** %MEMORY
  %loadMem1_400d59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3835 = getelementptr inbounds %struct.GPR, %struct.GPR* %3834, i32 0, i32 33
  %3836 = getelementptr inbounds %struct.Reg, %struct.Reg* %3835, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %3836 to i64*
  %3837 = load i64, i64* %PC.i728
  %3838 = add i64 %3837, 2119
  %3839 = load i64, i64* %PC.i728
  %3840 = add i64 %3839, 5
  %3841 = load i64, i64* %PC.i728
  %3842 = add i64 %3841, 5
  store i64 %3842, i64* %PC.i728
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3844 = load i64, i64* %3843, align 8
  %3845 = add i64 %3844, -8
  %3846 = inttoptr i64 %3845 to i64*
  store i64 %3840, i64* %3846
  store i64 %3845, i64* %3843, align 8
  %3847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3838, i64* %3847, align 8
  store %struct.Memory* %loadMem1_400d59, %struct.Memory** %MEMORY
  %loadMem2_400d59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400d59 = load i64, i64* %3
  %call2_400d59 = call %struct.Memory* @sub_4015a0.POUT(%struct.State* %0, i64 %loadPC_400d59, %struct.Memory* %loadMem2_400d59)
  store %struct.Memory* %call2_400d59, %struct.Memory** %MEMORY
  br label %block_.L_400d5e

block_.L_400d5e:                                  ; preds = %block_400d29, %block_.L_400d17
  %loadMem_400d5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3849 = getelementptr inbounds %struct.GPR, %struct.GPR* %3848, i32 0, i32 33
  %3850 = getelementptr inbounds %struct.Reg, %struct.Reg* %3849, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %3850 to i64*
  %3851 = load i64, i64* %PC.i727
  %3852 = add i64 %3851, 11
  store i64 %3852, i64* %PC.i727
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400d5e, %struct.Memory** %MEMORY
  %loadMem_400d69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3854 = getelementptr inbounds %struct.GPR, %struct.GPR* %3853, i32 0, i32 33
  %3855 = getelementptr inbounds %struct.Reg, %struct.Reg* %3854, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %3855 to i64*
  %3856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3857 = getelementptr inbounds %struct.GPR, %struct.GPR* %3856, i32 0, i32 15
  %3858 = getelementptr inbounds %struct.Reg, %struct.Reg* %3857, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %3858 to i64*
  %3859 = load i64, i64* %RBP.i726
  %3860 = sub i64 %3859, 24
  %3861 = load i64, i64* %PC.i725
  %3862 = add i64 %3861, 8
  store i64 %3862, i64* %PC.i725
  %3863 = inttoptr i64 %3860 to i64*
  store i64 1, i64* %3863
  store %struct.Memory* %loadMem_400d69, %struct.Memory** %MEMORY
  br label %block_.L_400d71

block_.L_400d71:                                  ; preds = %block_.L_400dff, %block_.L_400d5e
  %loadMem_400d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3865 = getelementptr inbounds %struct.GPR, %struct.GPR* %3864, i32 0, i32 33
  %3866 = getelementptr inbounds %struct.Reg, %struct.Reg* %3865, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %3866 to i64*
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3868 = getelementptr inbounds %struct.GPR, %struct.GPR* %3867, i32 0, i32 1
  %3869 = getelementptr inbounds %struct.Reg, %struct.Reg* %3868, i32 0, i32 0
  %RAX.i723 = bitcast %union.anon* %3869 to i64*
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3871 = getelementptr inbounds %struct.GPR, %struct.GPR* %3870, i32 0, i32 15
  %3872 = getelementptr inbounds %struct.Reg, %struct.Reg* %3871, i32 0, i32 0
  %RBP.i724 = bitcast %union.anon* %3872 to i64*
  %3873 = load i64, i64* %RBP.i724
  %3874 = sub i64 %3873, 24
  %3875 = load i64, i64* %PC.i722
  %3876 = add i64 %3875, 4
  store i64 %3876, i64* %PC.i722
  %3877 = inttoptr i64 %3874 to i64*
  %3878 = load i64, i64* %3877
  store i64 %3878, i64* %RAX.i723, align 8
  store %struct.Memory* %loadMem_400d71, %struct.Memory** %MEMORY
  %loadMem_400d75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3880 = getelementptr inbounds %struct.GPR, %struct.GPR* %3879, i32 0, i32 33
  %3881 = getelementptr inbounds %struct.Reg, %struct.Reg* %3880, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %3881 to i64*
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3883 = getelementptr inbounds %struct.GPR, %struct.GPR* %3882, i32 0, i32 1
  %3884 = getelementptr inbounds %struct.Reg, %struct.Reg* %3883, i32 0, i32 0
  %RAX.i720 = bitcast %union.anon* %3884 to i64*
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3886 = getelementptr inbounds %struct.GPR, %struct.GPR* %3885, i32 0, i32 15
  %3887 = getelementptr inbounds %struct.Reg, %struct.Reg* %3886, i32 0, i32 0
  %RBP.i721 = bitcast %union.anon* %3887 to i64*
  %3888 = load i64, i64* %RAX.i720
  %3889 = load i64, i64* %RBP.i721
  %3890 = sub i64 %3889, 56
  %3891 = load i64, i64* %PC.i719
  %3892 = add i64 %3891, 4
  store i64 %3892, i64* %PC.i719
  %3893 = inttoptr i64 %3890 to i64*
  %3894 = load i64, i64* %3893
  %3895 = sub i64 %3888, %3894
  %3896 = icmp ugt i64 %3894, %3888
  %3897 = zext i1 %3896 to i8
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3897, i8* %3898, align 1
  %3899 = trunc i64 %3895 to i32
  %3900 = and i32 %3899, 255
  %3901 = call i32 @llvm.ctpop.i32(i32 %3900)
  %3902 = trunc i32 %3901 to i8
  %3903 = and i8 %3902, 1
  %3904 = xor i8 %3903, 1
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3904, i8* %3905, align 1
  %3906 = xor i64 %3894, %3888
  %3907 = xor i64 %3906, %3895
  %3908 = lshr i64 %3907, 4
  %3909 = trunc i64 %3908 to i8
  %3910 = and i8 %3909, 1
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3910, i8* %3911, align 1
  %3912 = icmp eq i64 %3895, 0
  %3913 = zext i1 %3912 to i8
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3913, i8* %3914, align 1
  %3915 = lshr i64 %3895, 63
  %3916 = trunc i64 %3915 to i8
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3916, i8* %3917, align 1
  %3918 = lshr i64 %3888, 63
  %3919 = lshr i64 %3894, 63
  %3920 = xor i64 %3919, %3918
  %3921 = xor i64 %3915, %3918
  %3922 = add i64 %3921, %3920
  %3923 = icmp eq i64 %3922, 2
  %3924 = zext i1 %3923 to i8
  %3925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3924, i8* %3925, align 1
  store %struct.Memory* %loadMem_400d75, %struct.Memory** %MEMORY
  %loadMem_400d79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3927 = getelementptr inbounds %struct.GPR, %struct.GPR* %3926, i32 0, i32 33
  %3928 = getelementptr inbounds %struct.Reg, %struct.Reg* %3927, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %3928 to i64*
  %3929 = load i64, i64* %PC.i718
  %3930 = add i64 %3929, 151
  %3931 = load i64, i64* %PC.i718
  %3932 = add i64 %3931, 6
  %3933 = load i64, i64* %PC.i718
  %3934 = add i64 %3933, 6
  store i64 %3934, i64* %PC.i718
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3936 = load i8, i8* %3935, align 1
  %3937 = icmp eq i8 %3936, 0
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3939 = load i8, i8* %3938, align 1
  %3940 = icmp ne i8 %3939, 0
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3942 = load i8, i8* %3941, align 1
  %3943 = icmp ne i8 %3942, 0
  %3944 = xor i1 %3940, %3943
  %3945 = xor i1 %3944, true
  %3946 = and i1 %3937, %3945
  %3947 = zext i1 %3946 to i8
  store i8 %3947, i8* %BRANCH_TAKEN, align 1
  %3948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3949 = select i1 %3946, i64 %3930, i64 %3932
  store i64 %3949, i64* %3948, align 8
  store %struct.Memory* %loadMem_400d79, %struct.Memory** %MEMORY
  %loadBr_400d79 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d79 = icmp eq i8 %loadBr_400d79, 1
  br i1 %cmpBr_400d79, label %block_.L_400e10, label %block_400d7f

block_400d7f:                                     ; preds = %block_.L_400d71
  %loadMem_400d7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3951 = getelementptr inbounds %struct.GPR, %struct.GPR* %3950, i32 0, i32 33
  %3952 = getelementptr inbounds %struct.Reg, %struct.Reg* %3951, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %3952 to i64*
  %3953 = load i64, i64* %PC.i717
  %3954 = add i64 %3953, 8
  store i64 %3954, i64* %PC.i717
  %3955 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %3956 = sub i32 %3955, 1
  %3957 = icmp ult i32 %3955, 1
  %3958 = zext i1 %3957 to i8
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3958, i8* %3959, align 1
  %3960 = and i32 %3956, 255
  %3961 = call i32 @llvm.ctpop.i32(i32 %3960)
  %3962 = trunc i32 %3961 to i8
  %3963 = and i8 %3962, 1
  %3964 = xor i8 %3963, 1
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3964, i8* %3965, align 1
  %3966 = xor i32 %3955, 1
  %3967 = xor i32 %3966, %3956
  %3968 = lshr i32 %3967, 4
  %3969 = trunc i32 %3968 to i8
  %3970 = and i8 %3969, 1
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3970, i8* %3971, align 1
  %3972 = icmp eq i32 %3956, 0
  %3973 = zext i1 %3972 to i8
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3973, i8* %3974, align 1
  %3975 = lshr i32 %3956, 31
  %3976 = trunc i32 %3975 to i8
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3976, i8* %3977, align 1
  %3978 = lshr i32 %3955, 31
  %3979 = xor i32 %3975, %3978
  %3980 = add i32 %3979, %3978
  %3981 = icmp eq i32 %3980, 2
  %3982 = zext i1 %3981 to i8
  %3983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3982, i8* %3983, align 1
  store %struct.Memory* %loadMem_400d7f, %struct.Memory** %MEMORY
  %loadMem_400d87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3985 = getelementptr inbounds %struct.GPR, %struct.GPR* %3984, i32 0, i32 33
  %3986 = getelementptr inbounds %struct.Reg, %struct.Reg* %3985, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %3986 to i64*
  %3987 = load i64, i64* %PC.i716
  %3988 = add i64 %3987, 22
  %3989 = load i64, i64* %PC.i716
  %3990 = add i64 %3989, 6
  %3991 = load i64, i64* %PC.i716
  %3992 = add i64 %3991, 6
  store i64 %3992, i64* %PC.i716
  %3993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3994 = load i8, i8* %3993, align 1
  %3995 = icmp eq i8 %3994, 0
  %3996 = zext i1 %3995 to i8
  store i8 %3996, i8* %BRANCH_TAKEN, align 1
  %3997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3998 = select i1 %3995, i64 %3988, i64 %3990
  store i64 %3998, i64* %3997, align 8
  store %struct.Memory* %loadMem_400d87, %struct.Memory** %MEMORY
  %loadBr_400d87 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400d87 = icmp eq i8 %loadBr_400d87, 1
  br i1 %cmpBr_400d87, label %block_.L_400d9d, label %block_400d8d

block_400d8d:                                     ; preds = %block_400d7f
  %loadMem_400d8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4000 = getelementptr inbounds %struct.GPR, %struct.GPR* %3999, i32 0, i32 33
  %4001 = getelementptr inbounds %struct.Reg, %struct.Reg* %4000, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %4001 to i64*
  %4002 = load i64, i64* %PC.i715
  %4003 = add i64 %4002, 11
  store i64 %4003, i64* %PC.i715
  store i32 2, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400d8d, %struct.Memory** %MEMORY
  %loadMem_400d98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4005 = getelementptr inbounds %struct.GPR, %struct.GPR* %4004, i32 0, i32 33
  %4006 = getelementptr inbounds %struct.Reg, %struct.Reg* %4005, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %4006 to i64*
  %4007 = load i64, i64* %PC.i714
  %4008 = add i64 %4007, 16
  %4009 = load i64, i64* %PC.i714
  %4010 = add i64 %4009, 5
  store i64 %4010, i64* %PC.i714
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4008, i64* %4011, align 8
  store %struct.Memory* %loadMem_400d98, %struct.Memory** %MEMORY
  br label %block_.L_400da8

block_.L_400d9d:                                  ; preds = %block_400d7f
  %loadMem_400d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4013 = getelementptr inbounds %struct.GPR, %struct.GPR* %4012, i32 0, i32 33
  %4014 = getelementptr inbounds %struct.Reg, %struct.Reg* %4013, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %4014 to i64*
  %4015 = load i64, i64* %PC.i713
  %4016 = add i64 %4015, 11
  store i64 %4016, i64* %PC.i713
  store i32 3, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400d9d, %struct.Memory** %MEMORY
  br label %block_.L_400da8

block_.L_400da8:                                  ; preds = %block_.L_400d9d, %block_400d8d
  %loadMem_400da8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4018 = getelementptr inbounds %struct.GPR, %struct.GPR* %4017, i32 0, i32 33
  %4019 = getelementptr inbounds %struct.Reg, %struct.Reg* %4018, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %4019 to i64*
  %4020 = load i64, i64* %PC.i712
  %4021 = add i64 %4020, 8
  store i64 %4021, i64* %PC.i712
  %4022 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4023 = sub i32 %4022, 2
  %4024 = icmp ult i32 %4022, 2
  %4025 = zext i1 %4024 to i8
  %4026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4025, i8* %4026, align 1
  %4027 = and i32 %4023, 255
  %4028 = call i32 @llvm.ctpop.i32(i32 %4027)
  %4029 = trunc i32 %4028 to i8
  %4030 = and i8 %4029, 1
  %4031 = xor i8 %4030, 1
  %4032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4031, i8* %4032, align 1
  %4033 = xor i32 %4022, 2
  %4034 = xor i32 %4033, %4023
  %4035 = lshr i32 %4034, 4
  %4036 = trunc i32 %4035 to i8
  %4037 = and i8 %4036, 1
  %4038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4037, i8* %4038, align 1
  %4039 = icmp eq i32 %4023, 0
  %4040 = zext i1 %4039 to i8
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4040, i8* %4041, align 1
  %4042 = lshr i32 %4023, 31
  %4043 = trunc i32 %4042 to i8
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4043, i8* %4044, align 1
  %4045 = lshr i32 %4022, 31
  %4046 = xor i32 %4042, %4045
  %4047 = add i32 %4046, %4045
  %4048 = icmp eq i32 %4047, 2
  %4049 = zext i1 %4048 to i8
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4049, i8* %4050, align 1
  store %struct.Memory* %loadMem_400da8, %struct.Memory** %MEMORY
  %loadMem_400db0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4052 = getelementptr inbounds %struct.GPR, %struct.GPR* %4051, i32 0, i32 33
  %4053 = getelementptr inbounds %struct.Reg, %struct.Reg* %4052, i32 0, i32 0
  %PC.i711 = bitcast %union.anon* %4053 to i64*
  %4054 = load i64, i64* %PC.i711
  %4055 = add i64 %4054, 22
  %4056 = load i64, i64* %PC.i711
  %4057 = add i64 %4056, 6
  %4058 = load i64, i64* %PC.i711
  %4059 = add i64 %4058, 6
  store i64 %4059, i64* %PC.i711
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4061 = load i8, i8* %4060, align 1
  %4062 = icmp ne i8 %4061, 0
  %4063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4064 = load i8, i8* %4063, align 1
  %4065 = icmp ne i8 %4064, 0
  %4066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4067 = load i8, i8* %4066, align 1
  %4068 = icmp ne i8 %4067, 0
  %4069 = xor i1 %4065, %4068
  %4070 = or i1 %4062, %4069
  %4071 = zext i1 %4070 to i8
  store i8 %4071, i8* %BRANCH_TAKEN, align 1
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4073 = select i1 %4070, i64 %4055, i64 %4057
  store i64 %4073, i64* %4072, align 8
  store %struct.Memory* %loadMem_400db0, %struct.Memory** %MEMORY
  %loadBr_400db0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400db0 = icmp eq i8 %loadBr_400db0, 1
  br i1 %cmpBr_400db0, label %block_.L_400dc6, label %block_400db6

block_400db6:                                     ; preds = %block_.L_400da8
  %loadMem_400db6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4075 = getelementptr inbounds %struct.GPR, %struct.GPR* %4074, i32 0, i32 33
  %4076 = getelementptr inbounds %struct.Reg, %struct.Reg* %4075, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %4076 to i64*
  %4077 = load i64, i64* %PC.i710
  %4078 = add i64 %4077, 11
  store i64 %4078, i64* %PC.i710
  store i32 0, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400db6, %struct.Memory** %MEMORY
  %loadMem_400dc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4080 = getelementptr inbounds %struct.GPR, %struct.GPR* %4079, i32 0, i32 33
  %4081 = getelementptr inbounds %struct.Reg, %struct.Reg* %4080, i32 0, i32 0
  %PC.i709 = bitcast %union.anon* %4081 to i64*
  %4082 = load i64, i64* %PC.i709
  %4083 = add i64 %4082, 16
  %4084 = load i64, i64* %PC.i709
  %4085 = add i64 %4084, 5
  store i64 %4085, i64* %PC.i709
  %4086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4083, i64* %4086, align 8
  store %struct.Memory* %loadMem_400dc1, %struct.Memory** %MEMORY
  br label %block_.L_400dd1

block_.L_400dc6:                                  ; preds = %block_.L_400da8
  %loadMem_400dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4088 = getelementptr inbounds %struct.GPR, %struct.GPR* %4087, i32 0, i32 33
  %4089 = getelementptr inbounds %struct.Reg, %struct.Reg* %4088, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %4089 to i64*
  %4090 = load i64, i64* %PC.i708
  %4091 = add i64 %4090, 11
  store i64 %4091, i64* %PC.i708
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400dc6, %struct.Memory** %MEMORY
  br label %block_.L_400dd1

block_.L_400dd1:                                  ; preds = %block_.L_400dc6, %block_400db6
  %loadMem_400dd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4093 = getelementptr inbounds %struct.GPR, %struct.GPR* %4092, i32 0, i32 33
  %4094 = getelementptr inbounds %struct.Reg, %struct.Reg* %4093, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %4094 to i64*
  %4095 = load i64, i64* %PC.i707
  %4096 = add i64 %4095, 8
  store i64 %4096, i64* %PC.i707
  %4097 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4098 = sub i32 %4097, 1
  %4099 = icmp ult i32 %4097, 1
  %4100 = zext i1 %4099 to i8
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4100, i8* %4101, align 1
  %4102 = and i32 %4098, 255
  %4103 = call i32 @llvm.ctpop.i32(i32 %4102)
  %4104 = trunc i32 %4103 to i8
  %4105 = and i8 %4104, 1
  %4106 = xor i8 %4105, 1
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4106, i8* %4107, align 1
  %4108 = xor i32 %4097, 1
  %4109 = xor i32 %4108, %4098
  %4110 = lshr i32 %4109, 4
  %4111 = trunc i32 %4110 to i8
  %4112 = and i8 %4111, 1
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4112, i8* %4113, align 1
  %4114 = icmp eq i32 %4098, 0
  %4115 = zext i1 %4114 to i8
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4115, i8* %4116, align 1
  %4117 = lshr i32 %4098, 31
  %4118 = trunc i32 %4117 to i8
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4118, i8* %4119, align 1
  %4120 = lshr i32 %4097, 31
  %4121 = xor i32 %4117, %4120
  %4122 = add i32 %4121, %4120
  %4123 = icmp eq i32 %4122, 2
  %4124 = zext i1 %4123 to i8
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4124, i8* %4125, align 1
  store %struct.Memory* %loadMem_400dd1, %struct.Memory** %MEMORY
  %loadMem_400dd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4127 = getelementptr inbounds %struct.GPR, %struct.GPR* %4126, i32 0, i32 33
  %4128 = getelementptr inbounds %struct.Reg, %struct.Reg* %4127, i32 0, i32 0
  %PC.i706 = bitcast %union.anon* %4128 to i64*
  %4129 = load i64, i64* %PC.i706
  %4130 = add i64 %4129, 22
  %4131 = load i64, i64* %PC.i706
  %4132 = add i64 %4131, 6
  %4133 = load i64, i64* %PC.i706
  %4134 = add i64 %4133, 6
  store i64 %4134, i64* %PC.i706
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4136 = load i8, i8* %4135, align 1
  %4137 = icmp ne i8 %4136, 0
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4139 = load i8, i8* %4138, align 1
  %4140 = icmp ne i8 %4139, 0
  %4141 = xor i1 %4137, %4140
  %4142 = xor i1 %4141, true
  %4143 = zext i1 %4142 to i8
  store i8 %4143, i8* %BRANCH_TAKEN, align 1
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4145 = select i1 %4141, i64 %4132, i64 %4130
  store i64 %4145, i64* %4144, align 8
  store %struct.Memory* %loadMem_400dd9, %struct.Memory** %MEMORY
  %loadBr_400dd9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400dd9 = icmp eq i8 %loadBr_400dd9, 1
  br i1 %cmpBr_400dd9, label %block_.L_400def, label %block_400ddf

block_400ddf:                                     ; preds = %block_.L_400dd1
  %loadMem_400ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4147 = getelementptr inbounds %struct.GPR, %struct.GPR* %4146, i32 0, i32 33
  %4148 = getelementptr inbounds %struct.Reg, %struct.Reg* %4147, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %4148 to i64*
  %4149 = load i64, i64* %PC.i705
  %4150 = add i64 %4149, 11
  store i64 %4150, i64* %PC.i705
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400ddf, %struct.Memory** %MEMORY
  %loadMem_400dea = load %struct.Memory*, %struct.Memory** %MEMORY
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4152 = getelementptr inbounds %struct.GPR, %struct.GPR* %4151, i32 0, i32 33
  %4153 = getelementptr inbounds %struct.Reg, %struct.Reg* %4152, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %4153 to i64*
  %4154 = load i64, i64* %PC.i704
  %4155 = add i64 %4154, 16
  %4156 = load i64, i64* %PC.i704
  %4157 = add i64 %4156, 5
  store i64 %4157, i64* %PC.i704
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4155, i64* %4158, align 8
  store %struct.Memory* %loadMem_400dea, %struct.Memory** %MEMORY
  br label %block_.L_400dfa

block_.L_400def:                                  ; preds = %block_.L_400dd1
  %loadMem_400def = load %struct.Memory*, %struct.Memory** %MEMORY
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4160 = getelementptr inbounds %struct.GPR, %struct.GPR* %4159, i32 0, i32 33
  %4161 = getelementptr inbounds %struct.Reg, %struct.Reg* %4160, i32 0, i32 0
  %PC.i703 = bitcast %union.anon* %4161 to i64*
  %4162 = load i64, i64* %PC.i703
  %4163 = add i64 %4162, 11
  store i64 %4163, i64* %PC.i703
  store i32 0, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400def, %struct.Memory** %MEMORY
  br label %block_.L_400dfa

block_.L_400dfa:                                  ; preds = %block_.L_400def, %block_400ddf
  %loadMem_400dfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4165 = getelementptr inbounds %struct.GPR, %struct.GPR* %4164, i32 0, i32 33
  %4166 = getelementptr inbounds %struct.Reg, %struct.Reg* %4165, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %4166 to i64*
  %4167 = load i64, i64* %PC.i702
  %4168 = add i64 %4167, 5
  %4169 = load i64, i64* %PC.i702
  %4170 = add i64 %4169, 5
  store i64 %4170, i64* %PC.i702
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4168, i64* %4171, align 8
  store %struct.Memory* %loadMem_400dfa, %struct.Memory** %MEMORY
  br label %block_.L_400dff

block_.L_400dff:                                  ; preds = %block_.L_400dfa
  %loadMem_400dff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4173 = getelementptr inbounds %struct.GPR, %struct.GPR* %4172, i32 0, i32 33
  %4174 = getelementptr inbounds %struct.Reg, %struct.Reg* %4173, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %4174 to i64*
  %4175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4176 = getelementptr inbounds %struct.GPR, %struct.GPR* %4175, i32 0, i32 1
  %4177 = getelementptr inbounds %struct.Reg, %struct.Reg* %4176, i32 0, i32 0
  %RAX.i700 = bitcast %union.anon* %4177 to i64*
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4179 = getelementptr inbounds %struct.GPR, %struct.GPR* %4178, i32 0, i32 15
  %4180 = getelementptr inbounds %struct.Reg, %struct.Reg* %4179, i32 0, i32 0
  %RBP.i701 = bitcast %union.anon* %4180 to i64*
  %4181 = load i64, i64* %RBP.i701
  %4182 = sub i64 %4181, 24
  %4183 = load i64, i64* %PC.i699
  %4184 = add i64 %4183, 4
  store i64 %4184, i64* %PC.i699
  %4185 = inttoptr i64 %4182 to i64*
  %4186 = load i64, i64* %4185
  store i64 %4186, i64* %RAX.i700, align 8
  store %struct.Memory* %loadMem_400dff, %struct.Memory** %MEMORY
  %loadMem_400e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4188 = getelementptr inbounds %struct.GPR, %struct.GPR* %4187, i32 0, i32 33
  %4189 = getelementptr inbounds %struct.Reg, %struct.Reg* %4188, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %4189 to i64*
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4191 = getelementptr inbounds %struct.GPR, %struct.GPR* %4190, i32 0, i32 1
  %4192 = getelementptr inbounds %struct.Reg, %struct.Reg* %4191, i32 0, i32 0
  %RAX.i698 = bitcast %union.anon* %4192 to i64*
  %4193 = load i64, i64* %RAX.i698
  %4194 = load i64, i64* %PC.i697
  %4195 = add i64 %4194, 4
  store i64 %4195, i64* %PC.i697
  %4196 = add i64 1, %4193
  store i64 %4196, i64* %RAX.i698, align 8
  %4197 = icmp ult i64 %4196, %4193
  %4198 = icmp ult i64 %4196, 1
  %4199 = or i1 %4197, %4198
  %4200 = zext i1 %4199 to i8
  %4201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4200, i8* %4201, align 1
  %4202 = trunc i64 %4196 to i32
  %4203 = and i32 %4202, 255
  %4204 = call i32 @llvm.ctpop.i32(i32 %4203)
  %4205 = trunc i32 %4204 to i8
  %4206 = and i8 %4205, 1
  %4207 = xor i8 %4206, 1
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4207, i8* %4208, align 1
  %4209 = xor i64 1, %4193
  %4210 = xor i64 %4209, %4196
  %4211 = lshr i64 %4210, 4
  %4212 = trunc i64 %4211 to i8
  %4213 = and i8 %4212, 1
  %4214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4213, i8* %4214, align 1
  %4215 = icmp eq i64 %4196, 0
  %4216 = zext i1 %4215 to i8
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4216, i8* %4217, align 1
  %4218 = lshr i64 %4196, 63
  %4219 = trunc i64 %4218 to i8
  %4220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4219, i8* %4220, align 1
  %4221 = lshr i64 %4193, 63
  %4222 = xor i64 %4218, %4221
  %4223 = add i64 %4222, %4218
  %4224 = icmp eq i64 %4223, 2
  %4225 = zext i1 %4224 to i8
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4225, i8* %4226, align 1
  store %struct.Memory* %loadMem_400e03, %struct.Memory** %MEMORY
  %loadMem_400e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4228 = getelementptr inbounds %struct.GPR, %struct.GPR* %4227, i32 0, i32 33
  %4229 = getelementptr inbounds %struct.Reg, %struct.Reg* %4228, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %4229 to i64*
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4231 = getelementptr inbounds %struct.GPR, %struct.GPR* %4230, i32 0, i32 1
  %4232 = getelementptr inbounds %struct.Reg, %struct.Reg* %4231, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %4232 to i64*
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4234 = getelementptr inbounds %struct.GPR, %struct.GPR* %4233, i32 0, i32 15
  %4235 = getelementptr inbounds %struct.Reg, %struct.Reg* %4234, i32 0, i32 0
  %RBP.i696 = bitcast %union.anon* %4235 to i64*
  %4236 = load i64, i64* %RBP.i696
  %4237 = sub i64 %4236, 24
  %4238 = load i64, i64* %RAX.i695
  %4239 = load i64, i64* %PC.i694
  %4240 = add i64 %4239, 4
  store i64 %4240, i64* %PC.i694
  %4241 = inttoptr i64 %4237 to i64*
  store i64 %4238, i64* %4241
  store %struct.Memory* %loadMem_400e07, %struct.Memory** %MEMORY
  %loadMem_400e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4243 = getelementptr inbounds %struct.GPR, %struct.GPR* %4242, i32 0, i32 33
  %4244 = getelementptr inbounds %struct.Reg, %struct.Reg* %4243, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %4244 to i64*
  %4245 = load i64, i64* %PC.i693
  %4246 = add i64 %4245, -154
  %4247 = load i64, i64* %PC.i693
  %4248 = add i64 %4247, 5
  store i64 %4248, i64* %PC.i693
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4246, i64* %4249, align 8
  store %struct.Memory* %loadMem_400e0b, %struct.Memory** %MEMORY
  br label %block_.L_400d71

block_.L_400e10:                                  ; preds = %block_.L_400d71
  %loadMem_400e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4251 = getelementptr inbounds %struct.GPR, %struct.GPR* %4250, i32 0, i32 33
  %4252 = getelementptr inbounds %struct.Reg, %struct.Reg* %4251, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %4252 to i64*
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4254 = getelementptr inbounds %struct.GPR, %struct.GPR* %4253, i32 0, i32 1
  %4255 = getelementptr inbounds %struct.Reg, %struct.Reg* %4254, i32 0, i32 0
  %RAX.i691 = bitcast %union.anon* %4255 to i64*
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4257 = getelementptr inbounds %struct.GPR, %struct.GPR* %4256, i32 0, i32 15
  %4258 = getelementptr inbounds %struct.Reg, %struct.Reg* %4257, i32 0, i32 0
  %RBP.i692 = bitcast %union.anon* %4258 to i64*
  %4259 = load i64, i64* %RBP.i692
  %4260 = sub i64 %4259, 176
  %4261 = load i64, i64* %PC.i690
  %4262 = add i64 %4261, 6
  store i64 %4262, i64* %PC.i690
  %4263 = inttoptr i64 %4260 to i32*
  %4264 = load i32, i32* %4263
  %4265 = zext i32 %4264 to i64
  store i64 %4265, i64* %RAX.i691, align 8
  store %struct.Memory* %loadMem_400e10, %struct.Memory** %MEMORY
  %loadMem_400e16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4267 = getelementptr inbounds %struct.GPR, %struct.GPR* %4266, i32 0, i32 33
  %4268 = getelementptr inbounds %struct.Reg, %struct.Reg* %4267, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %4268 to i64*
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4270 = getelementptr inbounds %struct.GPR, %struct.GPR* %4269, i32 0, i32 1
  %4271 = getelementptr inbounds %struct.Reg, %struct.Reg* %4270, i32 0, i32 0
  %EAX.i688 = bitcast %union.anon* %4271 to i32*
  %4272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4273 = getelementptr inbounds %struct.GPR, %struct.GPR* %4272, i32 0, i32 15
  %4274 = getelementptr inbounds %struct.Reg, %struct.Reg* %4273, i32 0, i32 0
  %RBP.i689 = bitcast %union.anon* %4274 to i64*
  %4275 = load i32, i32* %EAX.i688
  %4276 = zext i32 %4275 to i64
  %4277 = load i64, i64* %RBP.i689
  %4278 = sub i64 %4277, 172
  %4279 = load i64, i64* %PC.i687
  %4280 = add i64 %4279, 6
  store i64 %4280, i64* %PC.i687
  %4281 = inttoptr i64 %4278 to i32*
  %4282 = load i32, i32* %4281
  %4283 = sub i32 %4275, %4282
  %4284 = icmp ult i32 %4275, %4282
  %4285 = zext i1 %4284 to i8
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4285, i8* %4286, align 1
  %4287 = and i32 %4283, 255
  %4288 = call i32 @llvm.ctpop.i32(i32 %4287)
  %4289 = trunc i32 %4288 to i8
  %4290 = and i8 %4289, 1
  %4291 = xor i8 %4290, 1
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4291, i8* %4292, align 1
  %4293 = xor i32 %4282, %4275
  %4294 = xor i32 %4293, %4283
  %4295 = lshr i32 %4294, 4
  %4296 = trunc i32 %4295 to i8
  %4297 = and i8 %4296, 1
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4297, i8* %4298, align 1
  %4299 = icmp eq i32 %4283, 0
  %4300 = zext i1 %4299 to i8
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4300, i8* %4301, align 1
  %4302 = lshr i32 %4283, 31
  %4303 = trunc i32 %4302 to i8
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4303, i8* %4304, align 1
  %4305 = lshr i32 %4275, 31
  %4306 = lshr i32 %4282, 31
  %4307 = xor i32 %4306, %4305
  %4308 = xor i32 %4302, %4305
  %4309 = add i32 %4308, %4307
  %4310 = icmp eq i32 %4309, 2
  %4311 = zext i1 %4310 to i8
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4311, i8* %4312, align 1
  store %struct.Memory* %loadMem_400e16, %struct.Memory** %MEMORY
  %loadMem_400e1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4314 = getelementptr inbounds %struct.GPR, %struct.GPR* %4313, i32 0, i32 33
  %4315 = getelementptr inbounds %struct.Reg, %struct.Reg* %4314, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %4315 to i64*
  %4316 = load i64, i64* %PC.i686
  %4317 = add i64 %4316, 54
  %4318 = load i64, i64* %PC.i686
  %4319 = add i64 %4318, 6
  %4320 = load i64, i64* %PC.i686
  %4321 = add i64 %4320, 6
  store i64 %4321, i64* %PC.i686
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4323 = load i8, i8* %4322, align 1
  %4324 = icmp eq i8 %4323, 0
  %4325 = zext i1 %4324 to i8
  store i8 %4325, i8* %BRANCH_TAKEN, align 1
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4327 = select i1 %4324, i64 %4317, i64 %4319
  store i64 %4327, i64* %4326, align 8
  store %struct.Memory* %loadMem_400e1c, %struct.Memory** %MEMORY
  %loadBr_400e1c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e1c = icmp eq i8 %loadBr_400e1c, 1
  br i1 %cmpBr_400e1c, label %block_.L_400e52, label %block_400e22

block_400e22:                                     ; preds = %block_.L_400e10
  %loadMem_400e22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4329 = getelementptr inbounds %struct.GPR, %struct.GPR* %4328, i32 0, i32 33
  %4330 = getelementptr inbounds %struct.Reg, %struct.Reg* %4329, i32 0, i32 0
  %PC.i683 = bitcast %union.anon* %4330 to i64*
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 11
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %RDI.i684 = bitcast %union.anon* %4333 to i64*
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4335 = getelementptr inbounds %struct.GPR, %struct.GPR* %4334, i32 0, i32 15
  %4336 = getelementptr inbounds %struct.Reg, %struct.Reg* %4335, i32 0, i32 0
  %RBP.i685 = bitcast %union.anon* %4336 to i64*
  %4337 = load i64, i64* %RBP.i685
  %4338 = sub i64 %4337, 56
  %4339 = load i64, i64* %PC.i683
  %4340 = add i64 %4339, 4
  store i64 %4340, i64* %PC.i683
  %4341 = inttoptr i64 %4338 to i64*
  %4342 = load i64, i64* %4341
  store i64 %4342, i64* %RDI.i684, align 8
  store %struct.Memory* %loadMem_400e22, %struct.Memory** %MEMORY
  %loadMem_400e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4344 = getelementptr inbounds %struct.GPR, %struct.GPR* %4343, i32 0, i32 33
  %4345 = getelementptr inbounds %struct.Reg, %struct.Reg* %4344, i32 0, i32 0
  %PC.i681 = bitcast %union.anon* %4345 to i64*
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4347 = getelementptr inbounds %struct.GPR, %struct.GPR* %4346, i32 0, i32 9
  %4348 = getelementptr inbounds %struct.Reg, %struct.Reg* %4347, i32 0, i32 0
  %RSI.i682 = bitcast %union.anon* %4348 to i64*
  %4349 = load i64, i64* %PC.i681
  %4350 = add i64 %4349, 8
  store i64 %4350, i64* %PC.i681
  %4351 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4352 = sext i32 %4351 to i64
  store i64 %4352, i64* %RSI.i682, align 8
  store %struct.Memory* %loadMem_400e26, %struct.Memory** %MEMORY
  %loadMem_400e2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4354 = getelementptr inbounds %struct.GPR, %struct.GPR* %4353, i32 0, i32 33
  %4355 = getelementptr inbounds %struct.Reg, %struct.Reg* %4354, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %4355 to i64*
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4357 = getelementptr inbounds %struct.GPR, %struct.GPR* %4356, i32 0, i32 7
  %4358 = getelementptr inbounds %struct.Reg, %struct.Reg* %4357, i32 0, i32 0
  %RDX.i680 = bitcast %union.anon* %4358 to i64*
  %4359 = load i64, i64* %PC.i679
  %4360 = add i64 %4359, 8
  store i64 %4360, i64* %PC.i679
  %4361 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4362 = sext i32 %4361 to i64
  store i64 %4362, i64* %RDX.i680, align 8
  store %struct.Memory* %loadMem_400e2e, %struct.Memory** %MEMORY
  %loadMem_400e36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4364 = getelementptr inbounds %struct.GPR, %struct.GPR* %4363, i32 0, i32 33
  %4365 = getelementptr inbounds %struct.Reg, %struct.Reg* %4364, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %4365 to i64*
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4367 = getelementptr inbounds %struct.GPR, %struct.GPR* %4366, i32 0, i32 15
  %4368 = getelementptr inbounds %struct.Reg, %struct.Reg* %4367, i32 0, i32 0
  %RBP.i677 = bitcast %union.anon* %4368 to i64*
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4370 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4369, i64 0, i64 0
  %YMM0.i678 = bitcast %union.VectorReg* %4370 to %"class.std::bitset"*
  %4371 = bitcast %"class.std::bitset"* %YMM0.i678 to i8*
  %4372 = load i64, i64* %RBP.i677
  %4373 = sub i64 %4372, 112
  %4374 = load i64, i64* %PC.i676
  %4375 = add i64 %4374, 5
  store i64 %4375, i64* %PC.i676
  %4376 = inttoptr i64 %4373 to double*
  %4377 = load double, double* %4376
  %4378 = bitcast i8* %4371 to double*
  store double %4377, double* %4378, align 1
  %4379 = getelementptr inbounds i8, i8* %4371, i64 8
  %4380 = bitcast i8* %4379 to double*
  store double 0.000000e+00, double* %4380, align 1
  store %struct.Memory* %loadMem_400e36, %struct.Memory** %MEMORY
  %loadMem_400e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4382 = getelementptr inbounds %struct.GPR, %struct.GPR* %4381, i32 0, i32 33
  %4383 = getelementptr inbounds %struct.Reg, %struct.Reg* %4382, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %4383 to i64*
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4385 = getelementptr inbounds %struct.GPR, %struct.GPR* %4384, i32 0, i32 15
  %4386 = getelementptr inbounds %struct.Reg, %struct.Reg* %4385, i32 0, i32 0
  %RBP.i674 = bitcast %union.anon* %4386 to i64*
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4388 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4387, i64 0, i64 1
  %YMM1.i675 = bitcast %union.VectorReg* %4388 to %"class.std::bitset"*
  %4389 = bitcast %"class.std::bitset"* %YMM1.i675 to i8*
  %4390 = load i64, i64* %RBP.i674
  %4391 = sub i64 %4390, 120
  %4392 = load i64, i64* %PC.i673
  %4393 = add i64 %4392, 5
  store i64 %4393, i64* %PC.i673
  %4394 = inttoptr i64 %4391 to double*
  %4395 = load double, double* %4394
  %4396 = bitcast i8* %4389 to double*
  store double %4395, double* %4396, align 1
  %4397 = getelementptr inbounds i8, i8* %4389, i64 8
  %4398 = bitcast i8* %4397 to double*
  store double 0.000000e+00, double* %4398, align 1
  store %struct.Memory* %loadMem_400e3b, %struct.Memory** %MEMORY
  %loadMem_400e40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4400 = getelementptr inbounds %struct.GPR, %struct.GPR* %4399, i32 0, i32 33
  %4401 = getelementptr inbounds %struct.Reg, %struct.Reg* %4400, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %4401 to i64*
  %4402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4403 = getelementptr inbounds %struct.GPR, %struct.GPR* %4402, i32 0, i32 15
  %4404 = getelementptr inbounds %struct.Reg, %struct.Reg* %4403, i32 0, i32 0
  %RBP.i671 = bitcast %union.anon* %4404 to i64*
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4406 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4405, i64 0, i64 2
  %YMM2.i672 = bitcast %union.VectorReg* %4406 to %"class.std::bitset"*
  %4407 = bitcast %"class.std::bitset"* %YMM2.i672 to i8*
  %4408 = load i64, i64* %RBP.i671
  %4409 = sub i64 %4408, 128
  %4410 = load i64, i64* %PC.i670
  %4411 = add i64 %4410, 5
  store i64 %4411, i64* %PC.i670
  %4412 = inttoptr i64 %4409 to double*
  %4413 = load double, double* %4412
  %4414 = bitcast i8* %4407 to double*
  store double %4413, double* %4414, align 1
  %4415 = getelementptr inbounds i8, i8* %4407, i64 8
  %4416 = bitcast i8* %4415 to double*
  store double 0.000000e+00, double* %4416, align 1
  store %struct.Memory* %loadMem_400e40, %struct.Memory** %MEMORY
  %loadMem_400e45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4418 = getelementptr inbounds %struct.GPR, %struct.GPR* %4417, i32 0, i32 33
  %4419 = getelementptr inbounds %struct.Reg, %struct.Reg* %4418, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %4419 to i64*
  %4420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4421 = getelementptr inbounds %struct.GPR, %struct.GPR* %4420, i32 0, i32 15
  %4422 = getelementptr inbounds %struct.Reg, %struct.Reg* %4421, i32 0, i32 0
  %RBP.i668 = bitcast %union.anon* %4422 to i64*
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4424 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4423, i64 0, i64 3
  %YMM3.i669 = bitcast %union.VectorReg* %4424 to %"class.std::bitset"*
  %4425 = bitcast %"class.std::bitset"* %YMM3.i669 to i8*
  %4426 = load i64, i64* %RBP.i668
  %4427 = sub i64 %4426, 136
  %4428 = load i64, i64* %PC.i667
  %4429 = add i64 %4428, 8
  store i64 %4429, i64* %PC.i667
  %4430 = inttoptr i64 %4427 to double*
  %4431 = load double, double* %4430
  %4432 = bitcast i8* %4425 to double*
  store double %4431, double* %4432, align 1
  %4433 = getelementptr inbounds i8, i8* %4425, i64 8
  %4434 = bitcast i8* %4433 to double*
  store double 0.000000e+00, double* %4434, align 1
  store %struct.Memory* %loadMem_400e45, %struct.Memory** %MEMORY
  %loadMem1_400e4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4436 = getelementptr inbounds %struct.GPR, %struct.GPR* %4435, i32 0, i32 33
  %4437 = getelementptr inbounds %struct.Reg, %struct.Reg* %4436, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %4437 to i64*
  %4438 = load i64, i64* %PC.i666
  %4439 = add i64 %4438, 1875
  %4440 = load i64, i64* %PC.i666
  %4441 = add i64 %4440, 5
  %4442 = load i64, i64* %PC.i666
  %4443 = add i64 %4442, 5
  store i64 %4443, i64* %PC.i666
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4445 = load i64, i64* %4444, align 8
  %4446 = add i64 %4445, -8
  %4447 = inttoptr i64 %4446 to i64*
  store i64 %4441, i64* %4447
  store i64 %4446, i64* %4444, align 8
  %4448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4439, i64* %4448, align 8
  store %struct.Memory* %loadMem1_400e4d, %struct.Memory** %MEMORY
  %loadMem2_400e4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400e4d = load i64, i64* %3
  %call2_400e4d = call %struct.Memory* @sub_4015a0.POUT(%struct.State* %0, i64 %loadPC_400e4d, %struct.Memory* %loadMem2_400e4d)
  store %struct.Memory* %call2_400e4d, %struct.Memory** %MEMORY
  br label %block_.L_400e52

block_.L_400e52:                                  ; preds = %block_400e22, %block_.L_400e10
  %loadMem_400e52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4450 = getelementptr inbounds %struct.GPR, %struct.GPR* %4449, i32 0, i32 33
  %4451 = getelementptr inbounds %struct.Reg, %struct.Reg* %4450, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %4451 to i64*
  %4452 = load i64, i64* %PC.i665
  %4453 = add i64 %4452, 11
  store i64 %4453, i64* %PC.i665
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400e52, %struct.Memory** %MEMORY
  %loadMem_400e5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4455 = getelementptr inbounds %struct.GPR, %struct.GPR* %4454, i32 0, i32 33
  %4456 = getelementptr inbounds %struct.Reg, %struct.Reg* %4455, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %4456 to i64*
  %4457 = load i64, i64* %PC.i664
  %4458 = add i64 %4457, 11
  store i64 %4458, i64* %PC.i664
  store i32 2, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_400e5d, %struct.Memory** %MEMORY
  %loadMem_400e68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4460 = getelementptr inbounds %struct.GPR, %struct.GPR* %4459, i32 0, i32 33
  %4461 = getelementptr inbounds %struct.Reg, %struct.Reg* %4460, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %4461 to i64*
  %4462 = load i64, i64* %PC.i663
  %4463 = add i64 %4462, 11
  store i64 %4463, i64* %PC.i663
  store i32 3, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  store %struct.Memory* %loadMem_400e68, %struct.Memory** %MEMORY
  %loadMem_400e73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4465 = getelementptr inbounds %struct.GPR, %struct.GPR* %4464, i32 0, i32 33
  %4466 = getelementptr inbounds %struct.Reg, %struct.Reg* %4465, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %4466 to i64*
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4468 = getelementptr inbounds %struct.GPR, %struct.GPR* %4467, i32 0, i32 15
  %4469 = getelementptr inbounds %struct.Reg, %struct.Reg* %4468, i32 0, i32 0
  %RBP.i662 = bitcast %union.anon* %4469 to i64*
  %4470 = load i64, i64* %RBP.i662
  %4471 = sub i64 %4470, 24
  %4472 = load i64, i64* %PC.i661
  %4473 = add i64 %4472, 8
  store i64 %4473, i64* %PC.i661
  %4474 = inttoptr i64 %4471 to i64*
  store i64 1, i64* %4474
  store %struct.Memory* %loadMem_400e73, %struct.Memory** %MEMORY
  br label %block_.L_400e7b

block_.L_400e7b:                                  ; preds = %block_400e89, %block_.L_400e52
  %loadMem_400e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4476 = getelementptr inbounds %struct.GPR, %struct.GPR* %4475, i32 0, i32 33
  %4477 = getelementptr inbounds %struct.Reg, %struct.Reg* %4476, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %4477 to i64*
  %4478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4479 = getelementptr inbounds %struct.GPR, %struct.GPR* %4478, i32 0, i32 1
  %4480 = getelementptr inbounds %struct.Reg, %struct.Reg* %4479, i32 0, i32 0
  %RAX.i659 = bitcast %union.anon* %4480 to i64*
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4482 = getelementptr inbounds %struct.GPR, %struct.GPR* %4481, i32 0, i32 15
  %4483 = getelementptr inbounds %struct.Reg, %struct.Reg* %4482, i32 0, i32 0
  %RBP.i660 = bitcast %union.anon* %4483 to i64*
  %4484 = load i64, i64* %RBP.i660
  %4485 = sub i64 %4484, 24
  %4486 = load i64, i64* %PC.i658
  %4487 = add i64 %4486, 4
  store i64 %4487, i64* %PC.i658
  %4488 = inttoptr i64 %4485 to i64*
  %4489 = load i64, i64* %4488
  store i64 %4489, i64* %RAX.i659, align 8
  store %struct.Memory* %loadMem_400e7b, %struct.Memory** %MEMORY
  %loadMem_400e7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4491 = getelementptr inbounds %struct.GPR, %struct.GPR* %4490, i32 0, i32 33
  %4492 = getelementptr inbounds %struct.Reg, %struct.Reg* %4491, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %4492 to i64*
  %4493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4494 = getelementptr inbounds %struct.GPR, %struct.GPR* %4493, i32 0, i32 1
  %4495 = getelementptr inbounds %struct.Reg, %struct.Reg* %4494, i32 0, i32 0
  %RAX.i656 = bitcast %union.anon* %4495 to i64*
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4497 = getelementptr inbounds %struct.GPR, %struct.GPR* %4496, i32 0, i32 15
  %4498 = getelementptr inbounds %struct.Reg, %struct.Reg* %4497, i32 0, i32 0
  %RBP.i657 = bitcast %union.anon* %4498 to i64*
  %4499 = load i64, i64* %RAX.i656
  %4500 = load i64, i64* %RBP.i657
  %4501 = sub i64 %4500, 64
  %4502 = load i64, i64* %PC.i655
  %4503 = add i64 %4502, 4
  store i64 %4503, i64* %PC.i655
  %4504 = inttoptr i64 %4501 to i64*
  %4505 = load i64, i64* %4504
  %4506 = sub i64 %4499, %4505
  %4507 = icmp ugt i64 %4505, %4499
  %4508 = zext i1 %4507 to i8
  %4509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4508, i8* %4509, align 1
  %4510 = trunc i64 %4506 to i32
  %4511 = and i32 %4510, 255
  %4512 = call i32 @llvm.ctpop.i32(i32 %4511)
  %4513 = trunc i32 %4512 to i8
  %4514 = and i8 %4513, 1
  %4515 = xor i8 %4514, 1
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4515, i8* %4516, align 1
  %4517 = xor i64 %4505, %4499
  %4518 = xor i64 %4517, %4506
  %4519 = lshr i64 %4518, 4
  %4520 = trunc i64 %4519 to i8
  %4521 = and i8 %4520, 1
  %4522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4521, i8* %4522, align 1
  %4523 = icmp eq i64 %4506, 0
  %4524 = zext i1 %4523 to i8
  %4525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4524, i8* %4525, align 1
  %4526 = lshr i64 %4506, 63
  %4527 = trunc i64 %4526 to i8
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4527, i8* %4528, align 1
  %4529 = lshr i64 %4499, 63
  %4530 = lshr i64 %4505, 63
  %4531 = xor i64 %4530, %4529
  %4532 = xor i64 %4526, %4529
  %4533 = add i64 %4532, %4531
  %4534 = icmp eq i64 %4533, 2
  %4535 = zext i1 %4534 to i8
  %4536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4535, i8* %4536, align 1
  store %struct.Memory* %loadMem_400e7f, %struct.Memory** %MEMORY
  %loadMem_400e83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4538 = getelementptr inbounds %struct.GPR, %struct.GPR* %4537, i32 0, i32 33
  %4539 = getelementptr inbounds %struct.Reg, %struct.Reg* %4538, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %4539 to i64*
  %4540 = load i64, i64* %PC.i654
  %4541 = add i64 %4540, 251
  %4542 = load i64, i64* %PC.i654
  %4543 = add i64 %4542, 6
  %4544 = load i64, i64* %PC.i654
  %4545 = add i64 %4544, 6
  store i64 %4545, i64* %PC.i654
  %4546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4547 = load i8, i8* %4546, align 1
  %4548 = icmp eq i8 %4547, 0
  %4549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4550 = load i8, i8* %4549, align 1
  %4551 = icmp ne i8 %4550, 0
  %4552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4553 = load i8, i8* %4552, align 1
  %4554 = icmp ne i8 %4553, 0
  %4555 = xor i1 %4551, %4554
  %4556 = xor i1 %4555, true
  %4557 = and i1 %4548, %4556
  %4558 = zext i1 %4557 to i8
  store i8 %4558, i8* %BRANCH_TAKEN, align 1
  %4559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4560 = select i1 %4557, i64 %4541, i64 %4543
  store i64 %4560, i64* %4559, align 8
  store %struct.Memory* %loadMem_400e83, %struct.Memory** %MEMORY
  %loadBr_400e83 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e83 = icmp eq i8 %loadBr_400e83, 1
  br i1 %cmpBr_400e83, label %block_.L_400f7e, label %block_400e89

block_400e89:                                     ; preds = %block_.L_400e7b
  %loadMem_400e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4562 = getelementptr inbounds %struct.GPR, %struct.GPR* %4561, i32 0, i32 33
  %4563 = getelementptr inbounds %struct.Reg, %struct.Reg* %4562, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %4563 to i64*
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4565 = getelementptr inbounds %struct.GPR, %struct.GPR* %4564, i32 0, i32 1
  %4566 = getelementptr inbounds %struct.Reg, %struct.Reg* %4565, i32 0, i32 0
  %RAX.i653 = bitcast %union.anon* %4566 to i64*
  %4567 = load i64, i64* %PC.i652
  %4568 = add i64 %4567, 7
  store i64 %4568, i64* %PC.i652
  %4569 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4570 = zext i32 %4569 to i64
  store i64 %4570, i64* %RAX.i653, align 8
  store %struct.Memory* %loadMem_400e89, %struct.Memory** %MEMORY
  %loadMem_400e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4572 = getelementptr inbounds %struct.GPR, %struct.GPR* %4571, i32 0, i32 33
  %4573 = getelementptr inbounds %struct.Reg, %struct.Reg* %4572, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %4573 to i64*
  %4574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4575 = getelementptr inbounds %struct.GPR, %struct.GPR* %4574, i32 0, i32 5
  %4576 = getelementptr inbounds %struct.Reg, %struct.Reg* %4575, i32 0, i32 0
  %RCX.i651 = bitcast %union.anon* %4576 to i64*
  %4577 = load i64, i64* %PC.i650
  %4578 = add i64 %4577, 7
  store i64 %4578, i64* %PC.i650
  %4579 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %4580 = zext i32 %4579 to i64
  store i64 %4580, i64* %RCX.i651, align 8
  store %struct.Memory* %loadMem_400e90, %struct.Memory** %MEMORY
  %loadMem_400e97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4582 = getelementptr inbounds %struct.GPR, %struct.GPR* %4581, i32 0, i32 33
  %4583 = getelementptr inbounds %struct.Reg, %struct.Reg* %4582, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %4583 to i64*
  %4584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4585 = getelementptr inbounds %struct.GPR, %struct.GPR* %4584, i32 0, i32 5
  %4586 = getelementptr inbounds %struct.Reg, %struct.Reg* %4585, i32 0, i32 0
  %RCX.i649 = bitcast %union.anon* %4586 to i64*
  %4587 = load i64, i64* %RCX.i649
  %4588 = load i64, i64* %PC.i648
  %4589 = add i64 %4588, 7
  store i64 %4589, i64* %PC.i648
  %4590 = trunc i64 %4587 to i32
  %4591 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4592 = sub i32 %4590, %4591
  %4593 = zext i32 %4592 to i64
  store i64 %4593, i64* %RCX.i649, align 8
  %4594 = icmp ult i32 %4590, %4591
  %4595 = zext i1 %4594 to i8
  %4596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4595, i8* %4596, align 1
  %4597 = and i32 %4592, 255
  %4598 = call i32 @llvm.ctpop.i32(i32 %4597)
  %4599 = trunc i32 %4598 to i8
  %4600 = and i8 %4599, 1
  %4601 = xor i8 %4600, 1
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4601, i8* %4602, align 1
  %4603 = xor i32 %4591, %4590
  %4604 = xor i32 %4603, %4592
  %4605 = lshr i32 %4604, 4
  %4606 = trunc i32 %4605 to i8
  %4607 = and i8 %4606, 1
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4607, i8* %4608, align 1
  %4609 = icmp eq i32 %4592, 0
  %4610 = zext i1 %4609 to i8
  %4611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4610, i8* %4611, align 1
  %4612 = lshr i32 %4592, 31
  %4613 = trunc i32 %4612 to i8
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4613, i8* %4614, align 1
  %4615 = lshr i32 %4590, 31
  %4616 = lshr i32 %4591, 31
  %4617 = xor i32 %4616, %4615
  %4618 = xor i32 %4612, %4615
  %4619 = add i32 %4618, %4617
  %4620 = icmp eq i32 %4619, 2
  %4621 = zext i1 %4620 to i8
  %4622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4621, i8* %4622, align 1
  store %struct.Memory* %loadMem_400e97, %struct.Memory** %MEMORY
  %loadMem_400e9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4624 = getelementptr inbounds %struct.GPR, %struct.GPR* %4623, i32 0, i32 33
  %4625 = getelementptr inbounds %struct.Reg, %struct.Reg* %4624, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %4625 to i64*
  %4626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4627 = getelementptr inbounds %struct.GPR, %struct.GPR* %4626, i32 0, i32 5
  %4628 = getelementptr inbounds %struct.Reg, %struct.Reg* %4627, i32 0, i32 0
  %ECX.i646 = bitcast %union.anon* %4628 to i32*
  %4629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4630 = getelementptr inbounds %struct.GPR, %struct.GPR* %4629, i32 0, i32 1
  %4631 = getelementptr inbounds %struct.Reg, %struct.Reg* %4630, i32 0, i32 0
  %RAX.i647 = bitcast %union.anon* %4631 to i64*
  %4632 = load i64, i64* %RAX.i647
  %4633 = load i32, i32* %ECX.i646
  %4634 = zext i32 %4633 to i64
  %4635 = load i64, i64* %PC.i645
  %4636 = add i64 %4635, 3
  store i64 %4636, i64* %PC.i645
  %4637 = shl i64 %4632, 32
  %4638 = ashr exact i64 %4637, 32
  %4639 = shl i64 %4634, 32
  %4640 = ashr exact i64 %4639, 32
  %4641 = mul i64 %4640, %4638
  %4642 = trunc i64 %4641 to i32
  %4643 = and i64 %4641, 4294967295
  store i64 %4643, i64* %RAX.i647, align 8
  %4644 = shl i64 %4641, 32
  %4645 = ashr exact i64 %4644, 32
  %4646 = icmp ne i64 %4645, %4641
  %4647 = zext i1 %4646 to i8
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4647, i8* %4648, align 1
  %4649 = and i32 %4642, 255
  %4650 = call i32 @llvm.ctpop.i32(i32 %4649)
  %4651 = trunc i32 %4650 to i8
  %4652 = and i8 %4651, 1
  %4653 = xor i8 %4652, 1
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4653, i8* %4654, align 1
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4655, align 1
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4656, align 1
  %4657 = lshr i32 %4642, 31
  %4658 = trunc i32 %4657 to i8
  %4659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4658, i8* %4659, align 1
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4647, i8* %4660, align 1
  store %struct.Memory* %loadMem_400e9e, %struct.Memory** %MEMORY
  %loadMem_400ea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4662 = getelementptr inbounds %struct.GPR, %struct.GPR* %4661, i32 0, i32 33
  %4663 = getelementptr inbounds %struct.Reg, %struct.Reg* %4662, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %4663 to i64*
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4665 = getelementptr inbounds %struct.GPR, %struct.GPR* %4664, i32 0, i32 5
  %4666 = getelementptr inbounds %struct.Reg, %struct.Reg* %4665, i32 0, i32 0
  %RCX.i644 = bitcast %union.anon* %4666 to i64*
  %4667 = load i64, i64* %PC.i643
  %4668 = add i64 %4667, 7
  store i64 %4668, i64* %PC.i643
  %4669 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %4670 = zext i32 %4669 to i64
  store i64 %4670, i64* %RCX.i644, align 8
  store %struct.Memory* %loadMem_400ea1, %struct.Memory** %MEMORY
  %loadMem_400ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4672 = getelementptr inbounds %struct.GPR, %struct.GPR* %4671, i32 0, i32 33
  %4673 = getelementptr inbounds %struct.Reg, %struct.Reg* %4672, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %4673 to i64*
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4675 = getelementptr inbounds %struct.GPR, %struct.GPR* %4674, i32 0, i32 5
  %4676 = getelementptr inbounds %struct.Reg, %struct.Reg* %4675, i32 0, i32 0
  %RCX.i642 = bitcast %union.anon* %4676 to i64*
  %4677 = load i64, i64* %RCX.i642
  %4678 = load i64, i64* %PC.i641
  %4679 = add i64 %4678, 7
  store i64 %4679, i64* %PC.i641
  %4680 = trunc i64 %4677 to i32
  %4681 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %4682 = sub i32 %4680, %4681
  %4683 = zext i32 %4682 to i64
  store i64 %4683, i64* %RCX.i642, align 8
  %4684 = icmp ult i32 %4680, %4681
  %4685 = zext i1 %4684 to i8
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4685, i8* %4686, align 1
  %4687 = and i32 %4682, 255
  %4688 = call i32 @llvm.ctpop.i32(i32 %4687)
  %4689 = trunc i32 %4688 to i8
  %4690 = and i8 %4689, 1
  %4691 = xor i8 %4690, 1
  %4692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4691, i8* %4692, align 1
  %4693 = xor i32 %4681, %4680
  %4694 = xor i32 %4693, %4682
  %4695 = lshr i32 %4694, 4
  %4696 = trunc i32 %4695 to i8
  %4697 = and i8 %4696, 1
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4697, i8* %4698, align 1
  %4699 = icmp eq i32 %4682, 0
  %4700 = zext i1 %4699 to i8
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4700, i8* %4701, align 1
  %4702 = lshr i32 %4682, 31
  %4703 = trunc i32 %4702 to i8
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4703, i8* %4704, align 1
  %4705 = lshr i32 %4680, 31
  %4706 = lshr i32 %4681, 31
  %4707 = xor i32 %4706, %4705
  %4708 = xor i32 %4702, %4705
  %4709 = add i32 %4708, %4707
  %4710 = icmp eq i32 %4709, 2
  %4711 = zext i1 %4710 to i8
  %4712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4711, i8* %4712, align 1
  store %struct.Memory* %loadMem_400ea8, %struct.Memory** %MEMORY
  %loadMem_400eaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4714 = getelementptr inbounds %struct.GPR, %struct.GPR* %4713, i32 0, i32 33
  %4715 = getelementptr inbounds %struct.Reg, %struct.Reg* %4714, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %4715 to i64*
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4717 = getelementptr inbounds %struct.GPR, %struct.GPR* %4716, i32 0, i32 5
  %4718 = getelementptr inbounds %struct.Reg, %struct.Reg* %4717, i32 0, i32 0
  %ECX.i639 = bitcast %union.anon* %4718 to i32*
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4720 = getelementptr inbounds %struct.GPR, %struct.GPR* %4719, i32 0, i32 1
  %4721 = getelementptr inbounds %struct.Reg, %struct.Reg* %4720, i32 0, i32 0
  %RAX.i640 = bitcast %union.anon* %4721 to i64*
  %4722 = load i64, i64* %RAX.i640
  %4723 = load i32, i32* %ECX.i639
  %4724 = zext i32 %4723 to i64
  %4725 = load i64, i64* %PC.i638
  %4726 = add i64 %4725, 3
  store i64 %4726, i64* %PC.i638
  %4727 = shl i64 %4722, 32
  %4728 = ashr exact i64 %4727, 32
  %4729 = shl i64 %4724, 32
  %4730 = ashr exact i64 %4729, 32
  %4731 = mul i64 %4730, %4728
  %4732 = trunc i64 %4731 to i32
  %4733 = and i64 %4731, 4294967295
  store i64 %4733, i64* %RAX.i640, align 8
  %4734 = shl i64 %4731, 32
  %4735 = ashr exact i64 %4734, 32
  %4736 = icmp ne i64 %4735, %4731
  %4737 = zext i1 %4736 to i8
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4737, i8* %4738, align 1
  %4739 = and i32 %4732, 255
  %4740 = call i32 @llvm.ctpop.i32(i32 %4739)
  %4741 = trunc i32 %4740 to i8
  %4742 = and i8 %4741, 1
  %4743 = xor i8 %4742, 1
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4743, i8* %4744, align 1
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4745, align 1
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4746, align 1
  %4747 = lshr i32 %4732, 31
  %4748 = trunc i32 %4747 to i8
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4748, i8* %4749, align 1
  %4750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4737, i8* %4750, align 1
  store %struct.Memory* %loadMem_400eaf, %struct.Memory** %MEMORY
  %loadMem_400eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4752 = getelementptr inbounds %struct.GPR, %struct.GPR* %4751, i32 0, i32 33
  %4753 = getelementptr inbounds %struct.Reg, %struct.Reg* %4752, i32 0, i32 0
  %PC.i636 = bitcast %union.anon* %4753 to i64*
  %4754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4755 = getelementptr inbounds %struct.GPR, %struct.GPR* %4754, i32 0, i32 1
  %4756 = getelementptr inbounds %struct.Reg, %struct.Reg* %4755, i32 0, i32 0
  %EAX.i637 = bitcast %union.anon* %4756 to i32*
  %4757 = load i32, i32* %EAX.i637
  %4758 = zext i32 %4757 to i64
  %4759 = load i64, i64* %PC.i636
  %4760 = add i64 %4759, 7
  store i64 %4760, i64* %PC.i636
  store i32 %4757, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_400eb2, %struct.Memory** %MEMORY
  %loadMem_400eb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 33
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %4763 to i64*
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4765 = getelementptr inbounds %struct.GPR, %struct.GPR* %4764, i32 0, i32 1
  %4766 = getelementptr inbounds %struct.Reg, %struct.Reg* %4765, i32 0, i32 0
  %RAX.i635 = bitcast %union.anon* %4766 to i64*
  %4767 = load i64, i64* %PC.i634
  %4768 = add i64 %4767, 7
  store i64 %4768, i64* %PC.i634
  %4769 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %4770 = zext i32 %4769 to i64
  store i64 %4770, i64* %RAX.i635, align 8
  store %struct.Memory* %loadMem_400eb9, %struct.Memory** %MEMORY
  %loadMem_400ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4772 = getelementptr inbounds %struct.GPR, %struct.GPR* %4771, i32 0, i32 33
  %4773 = getelementptr inbounds %struct.Reg, %struct.Reg* %4772, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %4773 to i64*
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4775 = getelementptr inbounds %struct.GPR, %struct.GPR* %4774, i32 0, i32 1
  %4776 = getelementptr inbounds %struct.Reg, %struct.Reg* %4775, i32 0, i32 0
  %RAX.i633 = bitcast %union.anon* %4776 to i64*
  %4777 = load i64, i64* %RAX.i633
  %4778 = load i64, i64* %PC.i632
  %4779 = add i64 %4778, 8
  store i64 %4779, i64* %PC.i632
  %4780 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %4781 = shl i64 %4777, 32
  %4782 = ashr exact i64 %4781, 32
  %4783 = sext i32 %4780 to i64
  %4784 = mul i64 %4783, %4782
  %4785 = trunc i64 %4784 to i32
  %4786 = and i64 %4784, 4294967295
  store i64 %4786, i64* %RAX.i633, align 8
  %4787 = shl i64 %4784, 32
  %4788 = ashr exact i64 %4787, 32
  %4789 = icmp ne i64 %4788, %4784
  %4790 = zext i1 %4789 to i8
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4790, i8* %4791, align 1
  %4792 = and i32 %4785, 255
  %4793 = call i32 @llvm.ctpop.i32(i32 %4792)
  %4794 = trunc i32 %4793 to i8
  %4795 = and i8 %4794, 1
  %4796 = xor i8 %4795, 1
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4796, i8* %4797, align 1
  %4798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4798, align 1
  %4799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4799, align 1
  %4800 = lshr i32 %4785, 31
  %4801 = trunc i32 %4800 to i8
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4801, i8* %4802, align 1
  %4803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4790, i8* %4803, align 1
  store %struct.Memory* %loadMem_400ec0, %struct.Memory** %MEMORY
  %loadMem_400ec8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4805 = getelementptr inbounds %struct.GPR, %struct.GPR* %4804, i32 0, i32 33
  %4806 = getelementptr inbounds %struct.Reg, %struct.Reg* %4805, i32 0, i32 0
  %PC.i630 = bitcast %union.anon* %4806 to i64*
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4808 = getelementptr inbounds %struct.GPR, %struct.GPR* %4807, i32 0, i32 5
  %4809 = getelementptr inbounds %struct.Reg, %struct.Reg* %4808, i32 0, i32 0
  %RCX.i631 = bitcast %union.anon* %4809 to i64*
  %4810 = load i64, i64* %PC.i630
  %4811 = add i64 %4810, 7
  store i64 %4811, i64* %PC.i630
  %4812 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %4813 = zext i32 %4812 to i64
  store i64 %4813, i64* %RCX.i631, align 8
  store %struct.Memory* %loadMem_400ec8, %struct.Memory** %MEMORY
  %loadMem_400ecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4815 = getelementptr inbounds %struct.GPR, %struct.GPR* %4814, i32 0, i32 33
  %4816 = getelementptr inbounds %struct.Reg, %struct.Reg* %4815, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %4816 to i64*
  %4817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4818 = getelementptr inbounds %struct.GPR, %struct.GPR* %4817, i32 0, i32 5
  %4819 = getelementptr inbounds %struct.Reg, %struct.Reg* %4818, i32 0, i32 0
  %RCX.i629 = bitcast %union.anon* %4819 to i64*
  %4820 = load i64, i64* %RCX.i629
  %4821 = load i64, i64* %PC.i628
  %4822 = add i64 %4821, 7
  store i64 %4822, i64* %PC.i628
  %4823 = trunc i64 %4820 to i32
  %4824 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %4825 = sub i32 %4823, %4824
  %4826 = zext i32 %4825 to i64
  store i64 %4826, i64* %RCX.i629, align 8
  %4827 = icmp ult i32 %4823, %4824
  %4828 = zext i1 %4827 to i8
  %4829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4828, i8* %4829, align 1
  %4830 = and i32 %4825, 255
  %4831 = call i32 @llvm.ctpop.i32(i32 %4830)
  %4832 = trunc i32 %4831 to i8
  %4833 = and i8 %4832, 1
  %4834 = xor i8 %4833, 1
  %4835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4834, i8* %4835, align 1
  %4836 = xor i32 %4824, %4823
  %4837 = xor i32 %4836, %4825
  %4838 = lshr i32 %4837, 4
  %4839 = trunc i32 %4838 to i8
  %4840 = and i8 %4839, 1
  %4841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4840, i8* %4841, align 1
  %4842 = icmp eq i32 %4825, 0
  %4843 = zext i1 %4842 to i8
  %4844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4843, i8* %4844, align 1
  %4845 = lshr i32 %4825, 31
  %4846 = trunc i32 %4845 to i8
  %4847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4846, i8* %4847, align 1
  %4848 = lshr i32 %4823, 31
  %4849 = lshr i32 %4824, 31
  %4850 = xor i32 %4849, %4848
  %4851 = xor i32 %4845, %4848
  %4852 = add i32 %4851, %4850
  %4853 = icmp eq i32 %4852, 2
  %4854 = zext i1 %4853 to i8
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4854, i8* %4855, align 1
  store %struct.Memory* %loadMem_400ecf, %struct.Memory** %MEMORY
  %loadMem_400ed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4857 = getelementptr inbounds %struct.GPR, %struct.GPR* %4856, i32 0, i32 33
  %4858 = getelementptr inbounds %struct.Reg, %struct.Reg* %4857, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %4858 to i64*
  %4859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4860 = getelementptr inbounds %struct.GPR, %struct.GPR* %4859, i32 0, i32 5
  %4861 = getelementptr inbounds %struct.Reg, %struct.Reg* %4860, i32 0, i32 0
  %RCX.i627 = bitcast %union.anon* %4861 to i64*
  %4862 = load i64, i64* %RCX.i627
  %4863 = load i64, i64* %PC.i626
  %4864 = add i64 %4863, 8
  store i64 %4864, i64* %PC.i626
  %4865 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %4866 = shl i64 %4862, 32
  %4867 = ashr exact i64 %4866, 32
  %4868 = sext i32 %4865 to i64
  %4869 = mul i64 %4868, %4867
  %4870 = trunc i64 %4869 to i32
  %4871 = and i64 %4869, 4294967295
  store i64 %4871, i64* %RCX.i627, align 8
  %4872 = shl i64 %4869, 32
  %4873 = ashr exact i64 %4872, 32
  %4874 = icmp ne i64 %4873, %4869
  %4875 = zext i1 %4874 to i8
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4875, i8* %4876, align 1
  %4877 = and i32 %4870, 255
  %4878 = call i32 @llvm.ctpop.i32(i32 %4877)
  %4879 = trunc i32 %4878 to i8
  %4880 = and i8 %4879, 1
  %4881 = xor i8 %4880, 1
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4881, i8* %4882, align 1
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4883, align 1
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4884, align 1
  %4885 = lshr i32 %4870, 31
  %4886 = trunc i32 %4885 to i8
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4886, i8* %4887, align 1
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4875, i8* %4888, align 1
  store %struct.Memory* %loadMem_400ed6, %struct.Memory** %MEMORY
  %loadMem_400ede = load %struct.Memory*, %struct.Memory** %MEMORY
  %4889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4890 = getelementptr inbounds %struct.GPR, %struct.GPR* %4889, i32 0, i32 33
  %4891 = getelementptr inbounds %struct.Reg, %struct.Reg* %4890, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %4891 to i64*
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4893 = getelementptr inbounds %struct.GPR, %struct.GPR* %4892, i32 0, i32 5
  %4894 = getelementptr inbounds %struct.Reg, %struct.Reg* %4893, i32 0, i32 0
  %ECX.i624 = bitcast %union.anon* %4894 to i32*
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4896 = getelementptr inbounds %struct.GPR, %struct.GPR* %4895, i32 0, i32 1
  %4897 = getelementptr inbounds %struct.Reg, %struct.Reg* %4896, i32 0, i32 0
  %RAX.i625 = bitcast %union.anon* %4897 to i64*
  %4898 = load i64, i64* %RAX.i625
  %4899 = load i32, i32* %ECX.i624
  %4900 = zext i32 %4899 to i64
  %4901 = load i64, i64* %PC.i623
  %4902 = add i64 %4901, 2
  store i64 %4902, i64* %PC.i623
  %4903 = trunc i64 %4898 to i32
  %4904 = sub i32 %4903, %4899
  %4905 = zext i32 %4904 to i64
  store i64 %4905, i64* %RAX.i625, align 8
  %4906 = icmp ult i32 %4903, %4899
  %4907 = zext i1 %4906 to i8
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4907, i8* %4908, align 1
  %4909 = and i32 %4904, 255
  %4910 = call i32 @llvm.ctpop.i32(i32 %4909)
  %4911 = trunc i32 %4910 to i8
  %4912 = and i8 %4911, 1
  %4913 = xor i8 %4912, 1
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4913, i8* %4914, align 1
  %4915 = xor i64 %4900, %4898
  %4916 = trunc i64 %4915 to i32
  %4917 = xor i32 %4916, %4904
  %4918 = lshr i32 %4917, 4
  %4919 = trunc i32 %4918 to i8
  %4920 = and i8 %4919, 1
  %4921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4920, i8* %4921, align 1
  %4922 = icmp eq i32 %4904, 0
  %4923 = zext i1 %4922 to i8
  %4924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4923, i8* %4924, align 1
  %4925 = lshr i32 %4904, 31
  %4926 = trunc i32 %4925 to i8
  %4927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4926, i8* %4927, align 1
  %4928 = lshr i32 %4903, 31
  %4929 = lshr i32 %4899, 31
  %4930 = xor i32 %4929, %4928
  %4931 = xor i32 %4925, %4928
  %4932 = add i32 %4931, %4930
  %4933 = icmp eq i32 %4932, 2
  %4934 = zext i1 %4933 to i8
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4934, i8* %4935, align 1
  store %struct.Memory* %loadMem_400ede, %struct.Memory** %MEMORY
  %loadMem_400ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4937 = getelementptr inbounds %struct.GPR, %struct.GPR* %4936, i32 0, i32 33
  %4938 = getelementptr inbounds %struct.Reg, %struct.Reg* %4937, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %4938 to i64*
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 1
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %EAX.i622 = bitcast %union.anon* %4941 to i32*
  %4942 = load i32, i32* %EAX.i622
  %4943 = zext i32 %4942 to i64
  %4944 = load i64, i64* %PC.i621
  %4945 = add i64 %4944, 7
  store i64 %4945, i64* %PC.i621
  store i32 %4942, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_400ee0, %struct.Memory** %MEMORY
  %loadMem_400ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4947 = getelementptr inbounds %struct.GPR, %struct.GPR* %4946, i32 0, i32 33
  %4948 = getelementptr inbounds %struct.Reg, %struct.Reg* %4947, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %4948 to i64*
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4950 = getelementptr inbounds %struct.GPR, %struct.GPR* %4949, i32 0, i32 1
  %4951 = getelementptr inbounds %struct.Reg, %struct.Reg* %4950, i32 0, i32 0
  %RAX.i620 = bitcast %union.anon* %4951 to i64*
  %4952 = load i64, i64* %PC.i619
  %4953 = add i64 %4952, 7
  store i64 %4953, i64* %PC.i619
  %4954 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %4955 = zext i32 %4954 to i64
  store i64 %4955, i64* %RAX.i620, align 8
  store %struct.Memory* %loadMem_400ee7, %struct.Memory** %MEMORY
  %loadMem_400eee = load %struct.Memory*, %struct.Memory** %MEMORY
  %4956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4957 = getelementptr inbounds %struct.GPR, %struct.GPR* %4956, i32 0, i32 33
  %4958 = getelementptr inbounds %struct.Reg, %struct.Reg* %4957, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %4958 to i64*
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4960 = getelementptr inbounds %struct.GPR, %struct.GPR* %4959, i32 0, i32 1
  %4961 = getelementptr inbounds %struct.Reg, %struct.Reg* %4960, i32 0, i32 0
  %RAX.i618 = bitcast %union.anon* %4961 to i64*
  %4962 = load i64, i64* %RAX.i618
  %4963 = load i64, i64* %PC.i617
  %4964 = add i64 %4963, 7
  store i64 %4964, i64* %PC.i617
  %4965 = trunc i64 %4962 to i32
  %4966 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %4967 = sub i32 %4965, %4966
  %4968 = zext i32 %4967 to i64
  store i64 %4968, i64* %RAX.i618, align 8
  %4969 = icmp ult i32 %4965, %4966
  %4970 = zext i1 %4969 to i8
  %4971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4970, i8* %4971, align 1
  %4972 = and i32 %4967, 255
  %4973 = call i32 @llvm.ctpop.i32(i32 %4972)
  %4974 = trunc i32 %4973 to i8
  %4975 = and i8 %4974, 1
  %4976 = xor i8 %4975, 1
  %4977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4976, i8* %4977, align 1
  %4978 = xor i32 %4966, %4965
  %4979 = xor i32 %4978, %4967
  %4980 = lshr i32 %4979, 4
  %4981 = trunc i32 %4980 to i8
  %4982 = and i8 %4981, 1
  %4983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4982, i8* %4983, align 1
  %4984 = icmp eq i32 %4967, 0
  %4985 = zext i1 %4984 to i8
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4985, i8* %4986, align 1
  %4987 = lshr i32 %4967, 31
  %4988 = trunc i32 %4987 to i8
  %4989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4988, i8* %4989, align 1
  %4990 = lshr i32 %4965, 31
  %4991 = lshr i32 %4966, 31
  %4992 = xor i32 %4991, %4990
  %4993 = xor i32 %4987, %4990
  %4994 = add i32 %4993, %4992
  %4995 = icmp eq i32 %4994, 2
  %4996 = zext i1 %4995 to i8
  %4997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4996, i8* %4997, align 1
  store %struct.Memory* %loadMem_400eee, %struct.Memory** %MEMORY
  %loadMem_400ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4999 = getelementptr inbounds %struct.GPR, %struct.GPR* %4998, i32 0, i32 33
  %5000 = getelementptr inbounds %struct.Reg, %struct.Reg* %4999, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %5000 to i64*
  %5001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5002 = getelementptr inbounds %struct.GPR, %struct.GPR* %5001, i32 0, i32 5
  %5003 = getelementptr inbounds %struct.Reg, %struct.Reg* %5002, i32 0, i32 0
  %RCX.i616 = bitcast %union.anon* %5003 to i64*
  %5004 = load i64, i64* %PC.i615
  %5005 = add i64 %5004, 7
  store i64 %5005, i64* %PC.i615
  %5006 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %5007 = zext i32 %5006 to i64
  store i64 %5007, i64* %RCX.i616, align 8
  store %struct.Memory* %loadMem_400ef5, %struct.Memory** %MEMORY
  %loadMem_400efc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5009 = getelementptr inbounds %struct.GPR, %struct.GPR* %5008, i32 0, i32 33
  %5010 = getelementptr inbounds %struct.Reg, %struct.Reg* %5009, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %5010 to i64*
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5012 = getelementptr inbounds %struct.GPR, %struct.GPR* %5011, i32 0, i32 5
  %5013 = getelementptr inbounds %struct.Reg, %struct.Reg* %5012, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %5013 to i64*
  %5014 = load i64, i64* %RCX.i
  %5015 = load i64, i64* %PC.i614
  %5016 = add i64 %5015, 7
  store i64 %5016, i64* %PC.i614
  %5017 = trunc i64 %5014 to i32
  %5018 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %5019 = add i32 %5018, %5017
  %5020 = zext i32 %5019 to i64
  store i64 %5020, i64* %RCX.i, align 8
  %5021 = icmp ult i32 %5019, %5017
  %5022 = icmp ult i32 %5019, %5018
  %5023 = or i1 %5021, %5022
  %5024 = zext i1 %5023 to i8
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5024, i8* %5025, align 1
  %5026 = and i32 %5019, 255
  %5027 = call i32 @llvm.ctpop.i32(i32 %5026)
  %5028 = trunc i32 %5027 to i8
  %5029 = and i8 %5028, 1
  %5030 = xor i8 %5029, 1
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5030, i8* %5031, align 1
  %5032 = xor i32 %5018, %5017
  %5033 = xor i32 %5032, %5019
  %5034 = lshr i32 %5033, 4
  %5035 = trunc i32 %5034 to i8
  %5036 = and i8 %5035, 1
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5036, i8* %5037, align 1
  %5038 = icmp eq i32 %5019, 0
  %5039 = zext i1 %5038 to i8
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5039, i8* %5040, align 1
  %5041 = lshr i32 %5019, 31
  %5042 = trunc i32 %5041 to i8
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5042, i8* %5043, align 1
  %5044 = lshr i32 %5017, 31
  %5045 = lshr i32 %5018, 31
  %5046 = xor i32 %5041, %5044
  %5047 = xor i32 %5041, %5045
  %5048 = add i32 %5046, %5047
  %5049 = icmp eq i32 %5048, 2
  %5050 = zext i1 %5049 to i8
  %5051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5050, i8* %5051, align 1
  store %struct.Memory* %loadMem_400efc, %struct.Memory** %MEMORY
  %loadMem_400f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5053 = getelementptr inbounds %struct.GPR, %struct.GPR* %5052, i32 0, i32 33
  %5054 = getelementptr inbounds %struct.Reg, %struct.Reg* %5053, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %5054 to i64*
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5056 = getelementptr inbounds %struct.GPR, %struct.GPR* %5055, i32 0, i32 5
  %5057 = getelementptr inbounds %struct.Reg, %struct.Reg* %5056, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %5057 to i32*
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5059 = getelementptr inbounds %struct.GPR, %struct.GPR* %5058, i32 0, i32 1
  %5060 = getelementptr inbounds %struct.Reg, %struct.Reg* %5059, i32 0, i32 0
  %RAX.i613 = bitcast %union.anon* %5060 to i64*
  %5061 = load i64, i64* %RAX.i613
  %5062 = load i32, i32* %ECX.i
  %5063 = zext i32 %5062 to i64
  %5064 = load i64, i64* %PC.i612
  %5065 = add i64 %5064, 3
  store i64 %5065, i64* %PC.i612
  %5066 = shl i64 %5061, 32
  %5067 = ashr exact i64 %5066, 32
  %5068 = shl i64 %5063, 32
  %5069 = ashr exact i64 %5068, 32
  %5070 = mul i64 %5069, %5067
  %5071 = trunc i64 %5070 to i32
  %5072 = and i64 %5070, 4294967295
  store i64 %5072, i64* %RAX.i613, align 8
  %5073 = shl i64 %5070, 32
  %5074 = ashr exact i64 %5073, 32
  %5075 = icmp ne i64 %5074, %5070
  %5076 = zext i1 %5075 to i8
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5076, i8* %5077, align 1
  %5078 = and i32 %5071, 255
  %5079 = call i32 @llvm.ctpop.i32(i32 %5078)
  %5080 = trunc i32 %5079 to i8
  %5081 = and i8 %5080, 1
  %5082 = xor i8 %5081, 1
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5082, i8* %5083, align 1
  %5084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5084, align 1
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5085, align 1
  %5086 = lshr i32 %5071, 31
  %5087 = trunc i32 %5086 to i8
  %5088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5087, i8* %5088, align 1
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5076, i8* %5089, align 1
  store %struct.Memory* %loadMem_400f03, %struct.Memory** %MEMORY
  %loadMem_400f06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5091 = getelementptr inbounds %struct.GPR, %struct.GPR* %5090, i32 0, i32 33
  %5092 = getelementptr inbounds %struct.Reg, %struct.Reg* %5091, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %5092 to i64*
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5094 = getelementptr inbounds %struct.GPR, %struct.GPR* %5093, i32 0, i32 1
  %5095 = getelementptr inbounds %struct.Reg, %struct.Reg* %5094, i32 0, i32 0
  %EAX.i611 = bitcast %union.anon* %5095 to i32*
  %5096 = load i32, i32* %EAX.i611
  %5097 = zext i32 %5096 to i64
  %5098 = load i64, i64* %PC.i610
  %5099 = add i64 %5098, 7
  store i64 %5099, i64* %PC.i610
  store i32 %5096, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  store %struct.Memory* %loadMem_400f06, %struct.Memory** %MEMORY
  %loadMem_400f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5101 = getelementptr inbounds %struct.GPR, %struct.GPR* %5100, i32 0, i32 33
  %5102 = getelementptr inbounds %struct.Reg, %struct.Reg* %5101, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %5102 to i64*
  %5103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5104 = getelementptr inbounds %struct.GPR, %struct.GPR* %5103, i32 0, i32 1
  %5105 = getelementptr inbounds %struct.Reg, %struct.Reg* %5104, i32 0, i32 0
  %RAX.i609 = bitcast %union.anon* %5105 to i64*
  %5106 = load i64, i64* %PC.i608
  %5107 = add i64 %5106, 7
  store i64 %5107, i64* %PC.i608
  %5108 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %5109 = zext i32 %5108 to i64
  store i64 %5109, i64* %RAX.i609, align 8
  store %struct.Memory* %loadMem_400f0d, %struct.Memory** %MEMORY
  %loadMem_400f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5111 = getelementptr inbounds %struct.GPR, %struct.GPR* %5110, i32 0, i32 33
  %5112 = getelementptr inbounds %struct.Reg, %struct.Reg* %5111, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %5112 to i64*
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5114 = getelementptr inbounds %struct.GPR, %struct.GPR* %5113, i32 0, i32 1
  %5115 = getelementptr inbounds %struct.Reg, %struct.Reg* %5114, i32 0, i32 0
  %RAX.i607 = bitcast %union.anon* %5115 to i64*
  %5116 = load i64, i64* %RAX.i607
  %5117 = load i64, i64* %PC.i606
  %5118 = add i64 %5117, 7
  store i64 %5118, i64* %PC.i606
  %5119 = trunc i64 %5116 to i32
  %5120 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %5121 = add i32 %5120, %5119
  %5122 = zext i32 %5121 to i64
  store i64 %5122, i64* %RAX.i607, align 8
  %5123 = icmp ult i32 %5121, %5119
  %5124 = icmp ult i32 %5121, %5120
  %5125 = or i1 %5123, %5124
  %5126 = zext i1 %5125 to i8
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5126, i8* %5127, align 1
  %5128 = and i32 %5121, 255
  %5129 = call i32 @llvm.ctpop.i32(i32 %5128)
  %5130 = trunc i32 %5129 to i8
  %5131 = and i8 %5130, 1
  %5132 = xor i8 %5131, 1
  %5133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5132, i8* %5133, align 1
  %5134 = xor i32 %5120, %5119
  %5135 = xor i32 %5134, %5121
  %5136 = lshr i32 %5135, 4
  %5137 = trunc i32 %5136 to i8
  %5138 = and i8 %5137, 1
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5138, i8* %5139, align 1
  %5140 = icmp eq i32 %5121, 0
  %5141 = zext i1 %5140 to i8
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5141, i8* %5142, align 1
  %5143 = lshr i32 %5121, 31
  %5144 = trunc i32 %5143 to i8
  %5145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5144, i8* %5145, align 1
  %5146 = lshr i32 %5119, 31
  %5147 = lshr i32 %5120, 31
  %5148 = xor i32 %5143, %5146
  %5149 = xor i32 %5143, %5147
  %5150 = add i32 %5148, %5149
  %5151 = icmp eq i32 %5150, 2
  %5152 = zext i1 %5151 to i8
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5152, i8* %5153, align 1
  store %struct.Memory* %loadMem_400f14, %struct.Memory** %MEMORY
  %loadMem_400f1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5155 = getelementptr inbounds %struct.GPR, %struct.GPR* %5154, i32 0, i32 33
  %5156 = getelementptr inbounds %struct.Reg, %struct.Reg* %5155, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %5156 to i64*
  %5157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5158 = getelementptr inbounds %struct.GPR, %struct.GPR* %5157, i32 0, i32 1
  %5159 = getelementptr inbounds %struct.Reg, %struct.Reg* %5158, i32 0, i32 0
  %RAX.i605 = bitcast %union.anon* %5159 to i64*
  %5160 = load i64, i64* %RAX.i605
  %5161 = load i64, i64* %PC.i604
  %5162 = add i64 %5161, 7
  store i64 %5162, i64* %PC.i604
  %5163 = trunc i64 %5160 to i32
  %5164 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %5165 = add i32 %5164, %5163
  %5166 = zext i32 %5165 to i64
  store i64 %5166, i64* %RAX.i605, align 8
  %5167 = icmp ult i32 %5165, %5163
  %5168 = icmp ult i32 %5165, %5164
  %5169 = or i1 %5167, %5168
  %5170 = zext i1 %5169 to i8
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5170, i8* %5171, align 1
  %5172 = and i32 %5165, 255
  %5173 = call i32 @llvm.ctpop.i32(i32 %5172)
  %5174 = trunc i32 %5173 to i8
  %5175 = and i8 %5174, 1
  %5176 = xor i8 %5175, 1
  %5177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5176, i8* %5177, align 1
  %5178 = xor i32 %5164, %5163
  %5179 = xor i32 %5178, %5165
  %5180 = lshr i32 %5179, 4
  %5181 = trunc i32 %5180 to i8
  %5182 = and i8 %5181, 1
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5182, i8* %5183, align 1
  %5184 = icmp eq i32 %5165, 0
  %5185 = zext i1 %5184 to i8
  %5186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5185, i8* %5186, align 1
  %5187 = lshr i32 %5165, 31
  %5188 = trunc i32 %5187 to i8
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5188, i8* %5189, align 1
  %5190 = lshr i32 %5163, 31
  %5191 = lshr i32 %5164, 31
  %5192 = xor i32 %5187, %5190
  %5193 = xor i32 %5187, %5191
  %5194 = add i32 %5192, %5193
  %5195 = icmp eq i32 %5194, 2
  %5196 = zext i1 %5195 to i8
  %5197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5196, i8* %5197, align 1
  store %struct.Memory* %loadMem_400f1b, %struct.Memory** %MEMORY
  %loadMem_400f22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5199 = getelementptr inbounds %struct.GPR, %struct.GPR* %5198, i32 0, i32 33
  %5200 = getelementptr inbounds %struct.Reg, %struct.Reg* %5199, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %5200 to i64*
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5202 = getelementptr inbounds %struct.GPR, %struct.GPR* %5201, i32 0, i32 1
  %5203 = getelementptr inbounds %struct.Reg, %struct.Reg* %5202, i32 0, i32 0
  %EAX.i602 = bitcast %union.anon* %5203 to i32*
  %5204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5205 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5204, i64 0, i64 0
  %YMM0.i603 = bitcast %union.VectorReg* %5205 to %"class.std::bitset"*
  %5206 = bitcast %"class.std::bitset"* %YMM0.i603 to i8*
  %5207 = load i32, i32* %EAX.i602
  %5208 = zext i32 %5207 to i64
  %5209 = load i64, i64* %PC.i601
  %5210 = add i64 %5209, 4
  store i64 %5210, i64* %PC.i601
  %5211 = sitofp i32 %5207 to double
  %5212 = bitcast i8* %5206 to double*
  store double %5211, double* %5212, align 1
  store %struct.Memory* %loadMem_400f22, %struct.Memory** %MEMORY
  %loadMem_400f26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5214 = getelementptr inbounds %struct.GPR, %struct.GPR* %5213, i32 0, i32 33
  %5215 = getelementptr inbounds %struct.Reg, %struct.Reg* %5214, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %5215 to i64*
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5217 = getelementptr inbounds %struct.GPR, %struct.GPR* %5216, i32 0, i32 1
  %5218 = getelementptr inbounds %struct.Reg, %struct.Reg* %5217, i32 0, i32 0
  %RAX.i600 = bitcast %union.anon* %5218 to i64*
  %5219 = load i64, i64* %PC.i599
  %5220 = add i64 %5219, 7
  store i64 %5220, i64* %PC.i599
  %5221 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %5222 = zext i32 %5221 to i64
  store i64 %5222, i64* %RAX.i600, align 8
  store %struct.Memory* %loadMem_400f26, %struct.Memory** %MEMORY
  %loadMem_400f2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5224 = getelementptr inbounds %struct.GPR, %struct.GPR* %5223, i32 0, i32 33
  %5225 = getelementptr inbounds %struct.Reg, %struct.Reg* %5224, i32 0, i32 0
  %PC.i597 = bitcast %union.anon* %5225 to i64*
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5227 = getelementptr inbounds %struct.GPR, %struct.GPR* %5226, i32 0, i32 1
  %5228 = getelementptr inbounds %struct.Reg, %struct.Reg* %5227, i32 0, i32 0
  %RAX.i598 = bitcast %union.anon* %5228 to i64*
  %5229 = load i64, i64* %RAX.i598
  %5230 = load i64, i64* %PC.i597
  %5231 = add i64 %5230, 3
  store i64 %5231, i64* %PC.i597
  %5232 = trunc i64 %5229 to i32
  %5233 = sub i32 %5232, 1
  %5234 = zext i32 %5233 to i64
  store i64 %5234, i64* %RAX.i598, align 8
  %5235 = icmp ult i32 %5232, 1
  %5236 = zext i1 %5235 to i8
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5236, i8* %5237, align 1
  %5238 = and i32 %5233, 255
  %5239 = call i32 @llvm.ctpop.i32(i32 %5238)
  %5240 = trunc i32 %5239 to i8
  %5241 = and i8 %5240, 1
  %5242 = xor i8 %5241, 1
  %5243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5242, i8* %5243, align 1
  %5244 = xor i64 1, %5229
  %5245 = trunc i64 %5244 to i32
  %5246 = xor i32 %5245, %5233
  %5247 = lshr i32 %5246, 4
  %5248 = trunc i32 %5247 to i8
  %5249 = and i8 %5248, 1
  %5250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5249, i8* %5250, align 1
  %5251 = icmp eq i32 %5233, 0
  %5252 = zext i1 %5251 to i8
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5252, i8* %5253, align 1
  %5254 = lshr i32 %5233, 31
  %5255 = trunc i32 %5254 to i8
  %5256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5255, i8* %5256, align 1
  %5257 = lshr i32 %5232, 31
  %5258 = xor i32 %5254, %5257
  %5259 = add i32 %5258, %5257
  %5260 = icmp eq i32 %5259, 2
  %5261 = zext i1 %5260 to i8
  %5262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5261, i8* %5262, align 1
  store %struct.Memory* %loadMem_400f2d, %struct.Memory** %MEMORY
  %loadMem_400f30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5264 = getelementptr inbounds %struct.GPR, %struct.GPR* %5263, i32 0, i32 33
  %5265 = getelementptr inbounds %struct.Reg, %struct.Reg* %5264, i32 0, i32 0
  %PC.i594 = bitcast %union.anon* %5265 to i64*
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5267 = getelementptr inbounds %struct.GPR, %struct.GPR* %5266, i32 0, i32 1
  %5268 = getelementptr inbounds %struct.Reg, %struct.Reg* %5267, i32 0, i32 0
  %EAX.i595 = bitcast %union.anon* %5268 to i32*
  %5269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5270 = getelementptr inbounds %struct.GPR, %struct.GPR* %5269, i32 0, i32 7
  %5271 = getelementptr inbounds %struct.Reg, %struct.Reg* %5270, i32 0, i32 0
  %RDX.i596 = bitcast %union.anon* %5271 to i64*
  %5272 = load i32, i32* %EAX.i595
  %5273 = zext i32 %5272 to i64
  %5274 = load i64, i64* %PC.i594
  %5275 = add i64 %5274, 3
  store i64 %5275, i64* %PC.i594
  %5276 = shl i64 %5273, 32
  %5277 = ashr exact i64 %5276, 32
  store i64 %5277, i64* %RDX.i596, align 8
  store %struct.Memory* %loadMem_400f30, %struct.Memory** %MEMORY
  %loadMem_400f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5279 = getelementptr inbounds %struct.GPR, %struct.GPR* %5278, i32 0, i32 33
  %5280 = getelementptr inbounds %struct.Reg, %struct.Reg* %5279, i32 0, i32 0
  %PC.i591 = bitcast %union.anon* %5280 to i64*
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5282 = getelementptr inbounds %struct.GPR, %struct.GPR* %5281, i32 0, i32 7
  %5283 = getelementptr inbounds %struct.Reg, %struct.Reg* %5282, i32 0, i32 0
  %RDX.i592 = bitcast %union.anon* %5283 to i64*
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5284, i64 0, i64 0
  %XMM0.i593 = bitcast %union.VectorReg* %5285 to %union.vec128_t*
  %5286 = load i64, i64* %RDX.i592
  %5287 = mul i64 %5286, 8
  %5288 = add i64 %5287, 6299840
  %5289 = bitcast %union.vec128_t* %XMM0.i593 to i8*
  %5290 = load i64, i64* %PC.i591
  %5291 = add i64 %5290, 9
  store i64 %5291, i64* %PC.i591
  %5292 = bitcast i8* %5289 to double*
  %5293 = load double, double* %5292, align 1
  %5294 = inttoptr i64 %5288 to double*
  store double %5293, double* %5294
  store %struct.Memory* %loadMem_400f33, %struct.Memory** %MEMORY
  %loadMem_400f3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5296 = getelementptr inbounds %struct.GPR, %struct.GPR* %5295, i32 0, i32 33
  %5297 = getelementptr inbounds %struct.Reg, %struct.Reg* %5296, i32 0, i32 0
  %PC.i589 = bitcast %union.anon* %5297 to i64*
  %5298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5299 = getelementptr inbounds %struct.GPR, %struct.GPR* %5298, i32 0, i32 1
  %5300 = getelementptr inbounds %struct.Reg, %struct.Reg* %5299, i32 0, i32 0
  %RAX.i590 = bitcast %union.anon* %5300 to i64*
  %5301 = load i64, i64* %PC.i589
  %5302 = add i64 %5301, 7
  store i64 %5302, i64* %PC.i589
  %5303 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %5304 = zext i32 %5303 to i64
  store i64 %5304, i64* %RAX.i590, align 8
  store %struct.Memory* %loadMem_400f3c, %struct.Memory** %MEMORY
  %loadMem_400f43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5306 = getelementptr inbounds %struct.GPR, %struct.GPR* %5305, i32 0, i32 33
  %5307 = getelementptr inbounds %struct.Reg, %struct.Reg* %5306, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %5307 to i64*
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5309 = getelementptr inbounds %struct.GPR, %struct.GPR* %5308, i32 0, i32 1
  %5310 = getelementptr inbounds %struct.Reg, %struct.Reg* %5309, i32 0, i32 0
  %RAX.i588 = bitcast %union.anon* %5310 to i64*
  %5311 = load i64, i64* %RAX.i588
  %5312 = load i64, i64* %PC.i587
  %5313 = add i64 %5312, 8
  store i64 %5313, i64* %PC.i587
  %5314 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %5315 = shl i64 %5311, 32
  %5316 = ashr exact i64 %5315, 32
  %5317 = sext i32 %5314 to i64
  %5318 = mul i64 %5317, %5316
  %5319 = trunc i64 %5318 to i32
  %5320 = and i64 %5318, 4294967295
  store i64 %5320, i64* %RAX.i588, align 8
  %5321 = shl i64 %5318, 32
  %5322 = ashr exact i64 %5321, 32
  %5323 = icmp ne i64 %5322, %5318
  %5324 = zext i1 %5323 to i8
  %5325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5324, i8* %5325, align 1
  %5326 = and i32 %5319, 255
  %5327 = call i32 @llvm.ctpop.i32(i32 %5326)
  %5328 = trunc i32 %5327 to i8
  %5329 = and i8 %5328, 1
  %5330 = xor i8 %5329, 1
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5330, i8* %5331, align 1
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5332, align 1
  %5333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5333, align 1
  %5334 = lshr i32 %5319, 31
  %5335 = trunc i32 %5334 to i8
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5335, i8* %5336, align 1
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5324, i8* %5337, align 1
  store %struct.Memory* %loadMem_400f43, %struct.Memory** %MEMORY
  %loadMem_400f4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5339 = getelementptr inbounds %struct.GPR, %struct.GPR* %5338, i32 0, i32 33
  %5340 = getelementptr inbounds %struct.Reg, %struct.Reg* %5339, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %5340 to i64*
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 1
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %5343 to i64*
  %5344 = load i64, i64* %RAX.i586
  %5345 = load i64, i64* %PC.i585
  %5346 = add i64 %5345, 8
  store i64 %5346, i64* %PC.i585
  %5347 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %5348 = shl i64 %5344, 32
  %5349 = ashr exact i64 %5348, 32
  %5350 = sext i32 %5347 to i64
  %5351 = mul i64 %5350, %5349
  %5352 = trunc i64 %5351 to i32
  %5353 = and i64 %5351, 4294967295
  store i64 %5353, i64* %RAX.i586, align 8
  %5354 = shl i64 %5351, 32
  %5355 = ashr exact i64 %5354, 32
  %5356 = icmp ne i64 %5355, %5351
  %5357 = zext i1 %5356 to i8
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5357, i8* %5358, align 1
  %5359 = and i32 %5352, 255
  %5360 = call i32 @llvm.ctpop.i32(i32 %5359)
  %5361 = trunc i32 %5360 to i8
  %5362 = and i8 %5361, 1
  %5363 = xor i8 %5362, 1
  %5364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5363, i8* %5364, align 1
  %5365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5365, align 1
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5366, align 1
  %5367 = lshr i32 %5352, 31
  %5368 = trunc i32 %5367 to i8
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5368, i8* %5369, align 1
  %5370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5357, i8* %5370, align 1
  store %struct.Memory* %loadMem_400f4b, %struct.Memory** %MEMORY
  %loadMem_400f53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5372 = getelementptr inbounds %struct.GPR, %struct.GPR* %5371, i32 0, i32 33
  %5373 = getelementptr inbounds %struct.Reg, %struct.Reg* %5372, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %5373 to i64*
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5375 = getelementptr inbounds %struct.GPR, %struct.GPR* %5374, i32 0, i32 1
  %5376 = getelementptr inbounds %struct.Reg, %struct.Reg* %5375, i32 0, i32 0
  %EAX.i583 = bitcast %union.anon* %5376 to i32*
  %5377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5378 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5377, i64 0, i64 0
  %YMM0.i584 = bitcast %union.VectorReg* %5378 to %"class.std::bitset"*
  %5379 = bitcast %"class.std::bitset"* %YMM0.i584 to i8*
  %5380 = load i32, i32* %EAX.i583
  %5381 = zext i32 %5380 to i64
  %5382 = load i64, i64* %PC.i582
  %5383 = add i64 %5382, 4
  store i64 %5383, i64* %PC.i582
  %5384 = sitofp i32 %5380 to double
  %5385 = bitcast i8* %5379 to double*
  store double %5384, double* %5385, align 1
  store %struct.Memory* %loadMem_400f53, %struct.Memory** %MEMORY
  %loadMem_400f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5387 = getelementptr inbounds %struct.GPR, %struct.GPR* %5386, i32 0, i32 33
  %5388 = getelementptr inbounds %struct.Reg, %struct.Reg* %5387, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %5388 to i64*
  %5389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5390 = getelementptr inbounds %struct.GPR, %struct.GPR* %5389, i32 0, i32 1
  %5391 = getelementptr inbounds %struct.Reg, %struct.Reg* %5390, i32 0, i32 0
  %RAX.i581 = bitcast %union.anon* %5391 to i64*
  %5392 = load i64, i64* %PC.i580
  %5393 = add i64 %5392, 7
  store i64 %5393, i64* %PC.i580
  %5394 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %5395 = zext i32 %5394 to i64
  store i64 %5395, i64* %RAX.i581, align 8
  store %struct.Memory* %loadMem_400f57, %struct.Memory** %MEMORY
  %loadMem_400f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5397 = getelementptr inbounds %struct.GPR, %struct.GPR* %5396, i32 0, i32 33
  %5398 = getelementptr inbounds %struct.Reg, %struct.Reg* %5397, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %5398 to i64*
  %5399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5400 = getelementptr inbounds %struct.GPR, %struct.GPR* %5399, i32 0, i32 1
  %5401 = getelementptr inbounds %struct.Reg, %struct.Reg* %5400, i32 0, i32 0
  %RAX.i579 = bitcast %union.anon* %5401 to i64*
  %5402 = load i64, i64* %RAX.i579
  %5403 = load i64, i64* %PC.i578
  %5404 = add i64 %5403, 3
  store i64 %5404, i64* %PC.i578
  %5405 = trunc i64 %5402 to i32
  %5406 = sub i32 %5405, 1
  %5407 = zext i32 %5406 to i64
  store i64 %5407, i64* %RAX.i579, align 8
  %5408 = icmp ult i32 %5405, 1
  %5409 = zext i1 %5408 to i8
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5409, i8* %5410, align 1
  %5411 = and i32 %5406, 255
  %5412 = call i32 @llvm.ctpop.i32(i32 %5411)
  %5413 = trunc i32 %5412 to i8
  %5414 = and i8 %5413, 1
  %5415 = xor i8 %5414, 1
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5415, i8* %5416, align 1
  %5417 = xor i64 1, %5402
  %5418 = trunc i64 %5417 to i32
  %5419 = xor i32 %5418, %5406
  %5420 = lshr i32 %5419, 4
  %5421 = trunc i32 %5420 to i8
  %5422 = and i8 %5421, 1
  %5423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5422, i8* %5423, align 1
  %5424 = icmp eq i32 %5406, 0
  %5425 = zext i1 %5424 to i8
  %5426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5425, i8* %5426, align 1
  %5427 = lshr i32 %5406, 31
  %5428 = trunc i32 %5427 to i8
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5428, i8* %5429, align 1
  %5430 = lshr i32 %5405, 31
  %5431 = xor i32 %5427, %5430
  %5432 = add i32 %5431, %5430
  %5433 = icmp eq i32 %5432, 2
  %5434 = zext i1 %5433 to i8
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5434, i8* %5435, align 1
  store %struct.Memory* %loadMem_400f5e, %struct.Memory** %MEMORY
  %loadMem_400f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5437 = getelementptr inbounds %struct.GPR, %struct.GPR* %5436, i32 0, i32 33
  %5438 = getelementptr inbounds %struct.Reg, %struct.Reg* %5437, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %5438 to i64*
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5440 = getelementptr inbounds %struct.GPR, %struct.GPR* %5439, i32 0, i32 1
  %5441 = getelementptr inbounds %struct.Reg, %struct.Reg* %5440, i32 0, i32 0
  %EAX.i576 = bitcast %union.anon* %5441 to i32*
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5443 = getelementptr inbounds %struct.GPR, %struct.GPR* %5442, i32 0, i32 7
  %5444 = getelementptr inbounds %struct.Reg, %struct.Reg* %5443, i32 0, i32 0
  %RDX.i577 = bitcast %union.anon* %5444 to i64*
  %5445 = load i32, i32* %EAX.i576
  %5446 = zext i32 %5445 to i64
  %5447 = load i64, i64* %PC.i575
  %5448 = add i64 %5447, 3
  store i64 %5448, i64* %PC.i575
  %5449 = shl i64 %5446, 32
  %5450 = ashr exact i64 %5449, 32
  store i64 %5450, i64* %RDX.i577, align 8
  store %struct.Memory* %loadMem_400f61, %struct.Memory** %MEMORY
  %loadMem_400f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5452 = getelementptr inbounds %struct.GPR, %struct.GPR* %5451, i32 0, i32 33
  %5453 = getelementptr inbounds %struct.Reg, %struct.Reg* %5452, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %5453 to i64*
  %5454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5455 = getelementptr inbounds %struct.GPR, %struct.GPR* %5454, i32 0, i32 7
  %5456 = getelementptr inbounds %struct.Reg, %struct.Reg* %5455, i32 0, i32 0
  %RDX.i573 = bitcast %union.anon* %5456 to i64*
  %5457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5458 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5457, i64 0, i64 0
  %XMM0.i574 = bitcast %union.VectorReg* %5458 to %union.vec128_t*
  %5459 = load i64, i64* %RDX.i573
  %5460 = mul i64 %5459, 8
  %5461 = add i64 %5460, 6299840
  %5462 = bitcast %union.vec128_t* %XMM0.i574 to i8*
  %5463 = load i64, i64* %PC.i572
  %5464 = add i64 %5463, 9
  store i64 %5464, i64* %PC.i572
  %5465 = bitcast i8* %5462 to double*
  %5466 = load double, double* %5465, align 1
  %5467 = inttoptr i64 %5461 to double*
  store double %5466, double* %5467
  store %struct.Memory* %loadMem_400f64, %struct.Memory** %MEMORY
  %loadMem_400f6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5469 = getelementptr inbounds %struct.GPR, %struct.GPR* %5468, i32 0, i32 33
  %5470 = getelementptr inbounds %struct.Reg, %struct.Reg* %5469, i32 0, i32 0
  %PC.i569 = bitcast %union.anon* %5470 to i64*
  %5471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5472 = getelementptr inbounds %struct.GPR, %struct.GPR* %5471, i32 0, i32 1
  %5473 = getelementptr inbounds %struct.Reg, %struct.Reg* %5472, i32 0, i32 0
  %RAX.i570 = bitcast %union.anon* %5473 to i64*
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5475 = getelementptr inbounds %struct.GPR, %struct.GPR* %5474, i32 0, i32 15
  %5476 = getelementptr inbounds %struct.Reg, %struct.Reg* %5475, i32 0, i32 0
  %RBP.i571 = bitcast %union.anon* %5476 to i64*
  %5477 = load i64, i64* %RBP.i571
  %5478 = sub i64 %5477, 24
  %5479 = load i64, i64* %PC.i569
  %5480 = add i64 %5479, 4
  store i64 %5480, i64* %PC.i569
  %5481 = inttoptr i64 %5478 to i64*
  %5482 = load i64, i64* %5481
  store i64 %5482, i64* %RAX.i570, align 8
  store %struct.Memory* %loadMem_400f6d, %struct.Memory** %MEMORY
  %loadMem_400f71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5484 = getelementptr inbounds %struct.GPR, %struct.GPR* %5483, i32 0, i32 33
  %5485 = getelementptr inbounds %struct.Reg, %struct.Reg* %5484, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %5485 to i64*
  %5486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5487 = getelementptr inbounds %struct.GPR, %struct.GPR* %5486, i32 0, i32 1
  %5488 = getelementptr inbounds %struct.Reg, %struct.Reg* %5487, i32 0, i32 0
  %RAX.i568 = bitcast %union.anon* %5488 to i64*
  %5489 = load i64, i64* %RAX.i568
  %5490 = load i64, i64* %PC.i567
  %5491 = add i64 %5490, 4
  store i64 %5491, i64* %PC.i567
  %5492 = add i64 1, %5489
  store i64 %5492, i64* %RAX.i568, align 8
  %5493 = icmp ult i64 %5492, %5489
  %5494 = icmp ult i64 %5492, 1
  %5495 = or i1 %5493, %5494
  %5496 = zext i1 %5495 to i8
  %5497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5496, i8* %5497, align 1
  %5498 = trunc i64 %5492 to i32
  %5499 = and i32 %5498, 255
  %5500 = call i32 @llvm.ctpop.i32(i32 %5499)
  %5501 = trunc i32 %5500 to i8
  %5502 = and i8 %5501, 1
  %5503 = xor i8 %5502, 1
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5503, i8* %5504, align 1
  %5505 = xor i64 1, %5489
  %5506 = xor i64 %5505, %5492
  %5507 = lshr i64 %5506, 4
  %5508 = trunc i64 %5507 to i8
  %5509 = and i8 %5508, 1
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5509, i8* %5510, align 1
  %5511 = icmp eq i64 %5492, 0
  %5512 = zext i1 %5511 to i8
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5512, i8* %5513, align 1
  %5514 = lshr i64 %5492, 63
  %5515 = trunc i64 %5514 to i8
  %5516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5515, i8* %5516, align 1
  %5517 = lshr i64 %5489, 63
  %5518 = xor i64 %5514, %5517
  %5519 = add i64 %5518, %5514
  %5520 = icmp eq i64 %5519, 2
  %5521 = zext i1 %5520 to i8
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5521, i8* %5522, align 1
  store %struct.Memory* %loadMem_400f71, %struct.Memory** %MEMORY
  %loadMem_400f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5524 = getelementptr inbounds %struct.GPR, %struct.GPR* %5523, i32 0, i32 33
  %5525 = getelementptr inbounds %struct.Reg, %struct.Reg* %5524, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %5525 to i64*
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5527 = getelementptr inbounds %struct.GPR, %struct.GPR* %5526, i32 0, i32 1
  %5528 = getelementptr inbounds %struct.Reg, %struct.Reg* %5527, i32 0, i32 0
  %RAX.i565 = bitcast %union.anon* %5528 to i64*
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5530 = getelementptr inbounds %struct.GPR, %struct.GPR* %5529, i32 0, i32 15
  %5531 = getelementptr inbounds %struct.Reg, %struct.Reg* %5530, i32 0, i32 0
  %RBP.i566 = bitcast %union.anon* %5531 to i64*
  %5532 = load i64, i64* %RBP.i566
  %5533 = sub i64 %5532, 24
  %5534 = load i64, i64* %RAX.i565
  %5535 = load i64, i64* %PC.i564
  %5536 = add i64 %5535, 4
  store i64 %5536, i64* %PC.i564
  %5537 = inttoptr i64 %5533 to i64*
  store i64 %5534, i64* %5537
  store %struct.Memory* %loadMem_400f75, %struct.Memory** %MEMORY
  %loadMem_400f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5539 = getelementptr inbounds %struct.GPR, %struct.GPR* %5538, i32 0, i32 33
  %5540 = getelementptr inbounds %struct.Reg, %struct.Reg* %5539, i32 0, i32 0
  %PC.i563 = bitcast %union.anon* %5540 to i64*
  %5541 = load i64, i64* %PC.i563
  %5542 = add i64 %5541, -254
  %5543 = load i64, i64* %PC.i563
  %5544 = add i64 %5543, 5
  store i64 %5544, i64* %PC.i563
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5542, i64* %5545, align 8
  store %struct.Memory* %loadMem_400f79, %struct.Memory** %MEMORY
  br label %block_.L_400e7b

block_.L_400f7e:                                  ; preds = %block_.L_400e7b
  %loadMem_400f7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5547 = getelementptr inbounds %struct.GPR, %struct.GPR* %5546, i32 0, i32 33
  %5548 = getelementptr inbounds %struct.Reg, %struct.Reg* %5547, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %5548 to i64*
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5550 = getelementptr inbounds %struct.GPR, %struct.GPR* %5549, i32 0, i32 1
  %5551 = getelementptr inbounds %struct.Reg, %struct.Reg* %5550, i32 0, i32 0
  %RAX.i561 = bitcast %union.anon* %5551 to i64*
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 15
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %RBP.i562 = bitcast %union.anon* %5554 to i64*
  %5555 = load i64, i64* %RBP.i562
  %5556 = sub i64 %5555, 176
  %5557 = load i64, i64* %PC.i560
  %5558 = add i64 %5557, 6
  store i64 %5558, i64* %PC.i560
  %5559 = inttoptr i64 %5556 to i32*
  %5560 = load i32, i32* %5559
  %5561 = zext i32 %5560 to i64
  store i64 %5561, i64* %RAX.i561, align 8
  store %struct.Memory* %loadMem_400f7e, %struct.Memory** %MEMORY
  %loadMem_400f84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5563 = getelementptr inbounds %struct.GPR, %struct.GPR* %5562, i32 0, i32 33
  %5564 = getelementptr inbounds %struct.Reg, %struct.Reg* %5563, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %5564 to i64*
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5566 = getelementptr inbounds %struct.GPR, %struct.GPR* %5565, i32 0, i32 1
  %5567 = getelementptr inbounds %struct.Reg, %struct.Reg* %5566, i32 0, i32 0
  %EAX.i558 = bitcast %union.anon* %5567 to i32*
  %5568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5569 = getelementptr inbounds %struct.GPR, %struct.GPR* %5568, i32 0, i32 15
  %5570 = getelementptr inbounds %struct.Reg, %struct.Reg* %5569, i32 0, i32 0
  %RBP.i559 = bitcast %union.anon* %5570 to i64*
  %5571 = load i32, i32* %EAX.i558
  %5572 = zext i32 %5571 to i64
  %5573 = load i64, i64* %RBP.i559
  %5574 = sub i64 %5573, 172
  %5575 = load i64, i64* %PC.i557
  %5576 = add i64 %5575, 6
  store i64 %5576, i64* %PC.i557
  %5577 = inttoptr i64 %5574 to i32*
  %5578 = load i32, i32* %5577
  %5579 = sub i32 %5571, %5578
  %5580 = icmp ult i32 %5571, %5578
  %5581 = zext i1 %5580 to i8
  %5582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5581, i8* %5582, align 1
  %5583 = and i32 %5579, 255
  %5584 = call i32 @llvm.ctpop.i32(i32 %5583)
  %5585 = trunc i32 %5584 to i8
  %5586 = and i8 %5585, 1
  %5587 = xor i8 %5586, 1
  %5588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5587, i8* %5588, align 1
  %5589 = xor i32 %5578, %5571
  %5590 = xor i32 %5589, %5579
  %5591 = lshr i32 %5590, 4
  %5592 = trunc i32 %5591 to i8
  %5593 = and i8 %5592, 1
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5593, i8* %5594, align 1
  %5595 = icmp eq i32 %5579, 0
  %5596 = zext i1 %5595 to i8
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5596, i8* %5597, align 1
  %5598 = lshr i32 %5579, 31
  %5599 = trunc i32 %5598 to i8
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5599, i8* %5600, align 1
  %5601 = lshr i32 %5571, 31
  %5602 = lshr i32 %5578, 31
  %5603 = xor i32 %5602, %5601
  %5604 = xor i32 %5598, %5601
  %5605 = add i32 %5604, %5603
  %5606 = icmp eq i32 %5605, 2
  %5607 = zext i1 %5606 to i8
  %5608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5607, i8* %5608, align 1
  store %struct.Memory* %loadMem_400f84, %struct.Memory** %MEMORY
  %loadMem_400f8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5610 = getelementptr inbounds %struct.GPR, %struct.GPR* %5609, i32 0, i32 33
  %5611 = getelementptr inbounds %struct.Reg, %struct.Reg* %5610, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %5611 to i64*
  %5612 = load i64, i64* %PC.i556
  %5613 = add i64 %5612, 67
  %5614 = load i64, i64* %PC.i556
  %5615 = add i64 %5614, 6
  %5616 = load i64, i64* %PC.i556
  %5617 = add i64 %5616, 6
  store i64 %5617, i64* %PC.i556
  %5618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5619 = load i8, i8* %5618, align 1
  %5620 = icmp eq i8 %5619, 0
  %5621 = zext i1 %5620 to i8
  store i8 %5621, i8* %BRANCH_TAKEN, align 1
  %5622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5623 = select i1 %5620, i64 %5613, i64 %5615
  store i64 %5623, i64* %5622, align 8
  store %struct.Memory* %loadMem_400f8a, %struct.Memory** %MEMORY
  %loadBr_400f8a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400f8a = icmp eq i8 %loadBr_400f8a, 1
  br i1 %cmpBr_400f8a, label %block_.L_400fcd, label %block_400f90

block_400f90:                                     ; preds = %block_.L_400f7e
  %loadMem_400f90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5625 = getelementptr inbounds %struct.GPR, %struct.GPR* %5624, i32 0, i32 33
  %5626 = getelementptr inbounds %struct.Reg, %struct.Reg* %5625, i32 0, i32 0
  %PC.i553 = bitcast %union.anon* %5626 to i64*
  %5627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5628 = getelementptr inbounds %struct.GPR, %struct.GPR* %5627, i32 0, i32 11
  %5629 = getelementptr inbounds %struct.Reg, %struct.Reg* %5628, i32 0, i32 0
  %RDI.i554 = bitcast %union.anon* %5629 to i64*
  %5630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5631 = getelementptr inbounds %struct.GPR, %struct.GPR* %5630, i32 0, i32 15
  %5632 = getelementptr inbounds %struct.Reg, %struct.Reg* %5631, i32 0, i32 0
  %RBP.i555 = bitcast %union.anon* %5632 to i64*
  %5633 = load i64, i64* %RBP.i555
  %5634 = sub i64 %5633, 64
  %5635 = load i64, i64* %PC.i553
  %5636 = add i64 %5635, 4
  store i64 %5636, i64* %PC.i553
  %5637 = inttoptr i64 %5634 to i64*
  %5638 = load i64, i64* %5637
  store i64 %5638, i64* %RDI.i554, align 8
  store %struct.Memory* %loadMem_400f90, %struct.Memory** %MEMORY
  %loadMem_400f94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5640 = getelementptr inbounds %struct.GPR, %struct.GPR* %5639, i32 0, i32 33
  %5641 = getelementptr inbounds %struct.Reg, %struct.Reg* %5640, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %5641 to i64*
  %5642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5643 = getelementptr inbounds %struct.GPR, %struct.GPR* %5642, i32 0, i32 9
  %5644 = getelementptr inbounds %struct.Reg, %struct.Reg* %5643, i32 0, i32 0
  %RSI.i552 = bitcast %union.anon* %5644 to i64*
  %5645 = load i64, i64* %PC.i551
  %5646 = add i64 %5645, 8
  store i64 %5646, i64* %PC.i551
  %5647 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %5648 = sext i32 %5647 to i64
  store i64 %5648, i64* %RSI.i552, align 8
  store %struct.Memory* %loadMem_400f94, %struct.Memory** %MEMORY
  %loadMem_400f9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5650 = getelementptr inbounds %struct.GPR, %struct.GPR* %5649, i32 0, i32 33
  %5651 = getelementptr inbounds %struct.Reg, %struct.Reg* %5650, i32 0, i32 0
  %PC.i549 = bitcast %union.anon* %5651 to i64*
  %5652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5653 = getelementptr inbounds %struct.GPR, %struct.GPR* %5652, i32 0, i32 7
  %5654 = getelementptr inbounds %struct.Reg, %struct.Reg* %5653, i32 0, i32 0
  %RDX.i550 = bitcast %union.anon* %5654 to i64*
  %5655 = load i64, i64* %PC.i549
  %5656 = add i64 %5655, 8
  store i64 %5656, i64* %PC.i549
  %5657 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %5658 = sext i32 %5657 to i64
  store i64 %5658, i64* %RDX.i550, align 8
  store %struct.Memory* %loadMem_400f9c, %struct.Memory** %MEMORY
  %loadMem_400fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5660 = getelementptr inbounds %struct.GPR, %struct.GPR* %5659, i32 0, i32 33
  %5661 = getelementptr inbounds %struct.Reg, %struct.Reg* %5660, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %5661 to i64*
  %5662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5663 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5662, i64 0, i64 0
  %YMM0.i548 = bitcast %union.VectorReg* %5663 to %"class.std::bitset"*
  %5664 = bitcast %"class.std::bitset"* %YMM0.i548 to i8*
  %5665 = load i64, i64* %PC.i547
  %5666 = add i64 %5665, 9
  store i64 %5666, i64* %PC.i547
  %5667 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %5668 = bitcast i8* %5664 to double*
  store double %5667, double* %5668, align 1
  %5669 = getelementptr inbounds i8, i8* %5664, i64 8
  %5670 = bitcast i8* %5669 to double*
  store double 0.000000e+00, double* %5670, align 1
  store %struct.Memory* %loadMem_400fa4, %struct.Memory** %MEMORY
  %loadMem_400fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %5671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5672 = getelementptr inbounds %struct.GPR, %struct.GPR* %5671, i32 0, i32 33
  %5673 = getelementptr inbounds %struct.Reg, %struct.Reg* %5672, i32 0, i32 0
  %PC.i545 = bitcast %union.anon* %5673 to i64*
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5675 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5674, i64 0, i64 1
  %YMM1.i546 = bitcast %union.VectorReg* %5675 to %"class.std::bitset"*
  %5676 = bitcast %"class.std::bitset"* %YMM1.i546 to i8*
  %5677 = load i64, i64* %PC.i545
  %5678 = add i64 %5677, 9
  store i64 %5678, i64* %PC.i545
  %5679 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %5680 = bitcast i8* %5676 to double*
  store double %5679, double* %5680, align 1
  %5681 = getelementptr inbounds i8, i8* %5676, i64 8
  %5682 = bitcast i8* %5681 to double*
  store double 0.000000e+00, double* %5682, align 1
  store %struct.Memory* %loadMem_400fad, %struct.Memory** %MEMORY
  %loadMem_400fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5684 = getelementptr inbounds %struct.GPR, %struct.GPR* %5683, i32 0, i32 33
  %5685 = getelementptr inbounds %struct.Reg, %struct.Reg* %5684, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %5685 to i64*
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5687 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5686, i64 0, i64 2
  %YMM2.i544 = bitcast %union.VectorReg* %5687 to %"class.std::bitset"*
  %5688 = bitcast %"class.std::bitset"* %YMM2.i544 to i8*
  %5689 = load i64, i64* %PC.i543
  %5690 = add i64 %5689, 9
  store i64 %5690, i64* %PC.i543
  %5691 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %5692 = bitcast i8* %5688 to double*
  store double %5691, double* %5692, align 1
  %5693 = getelementptr inbounds i8, i8* %5688, i64 8
  %5694 = bitcast i8* %5693 to double*
  store double 0.000000e+00, double* %5694, align 1
  store %struct.Memory* %loadMem_400fb6, %struct.Memory** %MEMORY
  %loadMem_400fbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5696 = getelementptr inbounds %struct.GPR, %struct.GPR* %5695, i32 0, i32 33
  %5697 = getelementptr inbounds %struct.Reg, %struct.Reg* %5696, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %5697 to i64*
  %5698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5699 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5698, i64 0, i64 3
  %YMM3.i542 = bitcast %union.VectorReg* %5699 to %"class.std::bitset"*
  %5700 = bitcast %"class.std::bitset"* %YMM3.i542 to i8*
  %5701 = load i64, i64* %PC.i541
  %5702 = add i64 %5701, 9
  store i64 %5702, i64* %PC.i541
  %5703 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %5704 = bitcast i8* %5700 to double*
  store double %5703, double* %5704, align 1
  %5705 = getelementptr inbounds i8, i8* %5700, i64 8
  %5706 = bitcast i8* %5705 to double*
  store double 0.000000e+00, double* %5706, align 1
  store %struct.Memory* %loadMem_400fbf, %struct.Memory** %MEMORY
  %loadMem1_400fc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5708 = getelementptr inbounds %struct.GPR, %struct.GPR* %5707, i32 0, i32 33
  %5709 = getelementptr inbounds %struct.Reg, %struct.Reg* %5708, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %5709 to i64*
  %5710 = load i64, i64* %PC.i540
  %5711 = add i64 %5710, 1496
  %5712 = load i64, i64* %PC.i540
  %5713 = add i64 %5712, 5
  %5714 = load i64, i64* %PC.i540
  %5715 = add i64 %5714, 5
  store i64 %5715, i64* %PC.i540
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5717 = load i64, i64* %5716, align 8
  %5718 = add i64 %5717, -8
  %5719 = inttoptr i64 %5718 to i64*
  store i64 %5713, i64* %5719
  store i64 %5718, i64* %5716, align 8
  %5720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5711, i64* %5720, align 8
  store %struct.Memory* %loadMem1_400fc8, %struct.Memory** %MEMORY
  %loadMem2_400fc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400fc8 = load i64, i64* %3
  %call2_400fc8 = call %struct.Memory* @sub_4015a0.POUT(%struct.State* %0, i64 %loadPC_400fc8, %struct.Memory* %loadMem2_400fc8)
  store %struct.Memory* %call2_400fc8, %struct.Memory** %MEMORY
  br label %block_.L_400fcd

block_.L_400fcd:                                  ; preds = %block_400f90, %block_.L_400f7e
  %loadMem_400fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5722 = getelementptr inbounds %struct.GPR, %struct.GPR* %5721, i32 0, i32 33
  %5723 = getelementptr inbounds %struct.Reg, %struct.Reg* %5722, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %5723 to i64*
  %5724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5725 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5724, i64 0, i64 0
  %YMM0.i539 = bitcast %union.VectorReg* %5725 to %"class.std::bitset"*
  %5726 = bitcast %"class.std::bitset"* %YMM0.i539 to i8*
  %5727 = load i64, i64* %PC.i538
  %5728 = load i64, i64* %PC.i538
  %5729 = add i64 %5728, 8
  store i64 %5729, i64* %PC.i538
  %5730 = load double, double* bitcast (%G_0x90b__rip__type* @G_0x90b__rip_ to double*)
  %5731 = bitcast i8* %5726 to double*
  store double %5730, double* %5731, align 1
  %5732 = getelementptr inbounds i8, i8* %5726, i64 8
  %5733 = bitcast i8* %5732 to double*
  store double 0.000000e+00, double* %5733, align 1
  store %struct.Memory* %loadMem_400fcd, %struct.Memory** %MEMORY
  %loadMem_400fd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5735 = getelementptr inbounds %struct.GPR, %struct.GPR* %5734, i32 0, i32 33
  %5736 = getelementptr inbounds %struct.Reg, %struct.Reg* %5735, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %5736 to i64*
  %5737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5738 = getelementptr inbounds %struct.GPR, %struct.GPR* %5737, i32 0, i32 15
  %5739 = getelementptr inbounds %struct.Reg, %struct.Reg* %5738, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %5739 to i64*
  %5740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5741 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5740, i64 0, i64 0
  %XMM0.i537 = bitcast %union.VectorReg* %5741 to %union.vec128_t*
  %5742 = load i64, i64* %RBP.i536
  %5743 = sub i64 %5742, 144
  %5744 = bitcast %union.vec128_t* %XMM0.i537 to i8*
  %5745 = load i64, i64* %PC.i535
  %5746 = add i64 %5745, 8
  store i64 %5746, i64* %PC.i535
  %5747 = bitcast i8* %5744 to double*
  %5748 = load double, double* %5747, align 1
  %5749 = inttoptr i64 %5743 to double*
  store double %5748, double* %5749
  store %struct.Memory* %loadMem_400fd5, %struct.Memory** %MEMORY
  %loadMem_400fdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 33
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %PC.i532 = bitcast %union.anon* %5752 to i64*
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5754 = getelementptr inbounds %struct.GPR, %struct.GPR* %5753, i32 0, i32 15
  %5755 = getelementptr inbounds %struct.Reg, %struct.Reg* %5754, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %5755 to i64*
  %5756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5757 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5756, i64 0, i64 0
  %XMM0.i534 = bitcast %union.VectorReg* %5757 to %union.vec128_t*
  %5758 = load i64, i64* %RBP.i533
  %5759 = sub i64 %5758, 152
  %5760 = bitcast %union.vec128_t* %XMM0.i534 to i8*
  %5761 = load i64, i64* %PC.i532
  %5762 = add i64 %5761, 8
  store i64 %5762, i64* %PC.i532
  %5763 = bitcast i8* %5760 to double*
  %5764 = load double, double* %5763, align 1
  %5765 = inttoptr i64 %5759 to double*
  store double %5764, double* %5765
  store %struct.Memory* %loadMem_400fdd, %struct.Memory** %MEMORY
  %loadMem_400fe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 33
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %5768 to i64*
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5770 = getelementptr inbounds %struct.GPR, %struct.GPR* %5769, i32 0, i32 15
  %5771 = getelementptr inbounds %struct.Reg, %struct.Reg* %5770, i32 0, i32 0
  %RBP.i531 = bitcast %union.anon* %5771 to i64*
  %5772 = load i64, i64* %RBP.i531
  %5773 = sub i64 %5772, 24
  %5774 = load i64, i64* %PC.i530
  %5775 = add i64 %5774, 8
  store i64 %5775, i64* %PC.i530
  %5776 = inttoptr i64 %5773 to i64*
  store i64 1, i64* %5776
  store %struct.Memory* %loadMem_400fe5, %struct.Memory** %MEMORY
  br label %block_.L_400fed

block_.L_400fed:                                  ; preds = %block_400ffb, %block_.L_400fcd
  %loadMem_400fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 33
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %5779 to i64*
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5781 = getelementptr inbounds %struct.GPR, %struct.GPR* %5780, i32 0, i32 1
  %5782 = getelementptr inbounds %struct.Reg, %struct.Reg* %5781, i32 0, i32 0
  %RAX.i528 = bitcast %union.anon* %5782 to i64*
  %5783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5784 = getelementptr inbounds %struct.GPR, %struct.GPR* %5783, i32 0, i32 15
  %5785 = getelementptr inbounds %struct.Reg, %struct.Reg* %5784, i32 0, i32 0
  %RBP.i529 = bitcast %union.anon* %5785 to i64*
  %5786 = load i64, i64* %RBP.i529
  %5787 = sub i64 %5786, 24
  %5788 = load i64, i64* %PC.i527
  %5789 = add i64 %5788, 4
  store i64 %5789, i64* %PC.i527
  %5790 = inttoptr i64 %5787 to i64*
  %5791 = load i64, i64* %5790
  store i64 %5791, i64* %RAX.i528, align 8
  store %struct.Memory* %loadMem_400fed, %struct.Memory** %MEMORY
  %loadMem_400ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5793 = getelementptr inbounds %struct.GPR, %struct.GPR* %5792, i32 0, i32 33
  %5794 = getelementptr inbounds %struct.Reg, %struct.Reg* %5793, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %5794 to i64*
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5796 = getelementptr inbounds %struct.GPR, %struct.GPR* %5795, i32 0, i32 1
  %5797 = getelementptr inbounds %struct.Reg, %struct.Reg* %5796, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %5797 to i64*
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5799 = getelementptr inbounds %struct.GPR, %struct.GPR* %5798, i32 0, i32 15
  %5800 = getelementptr inbounds %struct.Reg, %struct.Reg* %5799, i32 0, i32 0
  %RBP.i526 = bitcast %union.anon* %5800 to i64*
  %5801 = load i64, i64* %RAX.i525
  %5802 = load i64, i64* %RBP.i526
  %5803 = sub i64 %5802, 72
  %5804 = load i64, i64* %PC.i524
  %5805 = add i64 %5804, 4
  store i64 %5805, i64* %PC.i524
  %5806 = inttoptr i64 %5803 to i64*
  %5807 = load i64, i64* %5806
  %5808 = sub i64 %5801, %5807
  %5809 = icmp ugt i64 %5807, %5801
  %5810 = zext i1 %5809 to i8
  %5811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5810, i8* %5811, align 1
  %5812 = trunc i64 %5808 to i32
  %5813 = and i32 %5812, 255
  %5814 = call i32 @llvm.ctpop.i32(i32 %5813)
  %5815 = trunc i32 %5814 to i8
  %5816 = and i8 %5815, 1
  %5817 = xor i8 %5816, 1
  %5818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5817, i8* %5818, align 1
  %5819 = xor i64 %5807, %5801
  %5820 = xor i64 %5819, %5808
  %5821 = lshr i64 %5820, 4
  %5822 = trunc i64 %5821 to i8
  %5823 = and i8 %5822, 1
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5823, i8* %5824, align 1
  %5825 = icmp eq i64 %5808, 0
  %5826 = zext i1 %5825 to i8
  %5827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5826, i8* %5827, align 1
  %5828 = lshr i64 %5808, 63
  %5829 = trunc i64 %5828 to i8
  %5830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5829, i8* %5830, align 1
  %5831 = lshr i64 %5801, 63
  %5832 = lshr i64 %5807, 63
  %5833 = xor i64 %5832, %5831
  %5834 = xor i64 %5828, %5831
  %5835 = add i64 %5834, %5833
  %5836 = icmp eq i64 %5835, 2
  %5837 = zext i1 %5836 to i8
  %5838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5837, i8* %5838, align 1
  store %struct.Memory* %loadMem_400ff1, %struct.Memory** %MEMORY
  %loadMem_400ff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5840 = getelementptr inbounds %struct.GPR, %struct.GPR* %5839, i32 0, i32 33
  %5841 = getelementptr inbounds %struct.Reg, %struct.Reg* %5840, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %5841 to i64*
  %5842 = load i64, i64* %PC.i523
  %5843 = add i64 %5842, 495
  %5844 = load i64, i64* %PC.i523
  %5845 = add i64 %5844, 6
  %5846 = load i64, i64* %PC.i523
  %5847 = add i64 %5846, 6
  store i64 %5847, i64* %PC.i523
  %5848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5849 = load i8, i8* %5848, align 1
  %5850 = icmp eq i8 %5849, 0
  %5851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5852 = load i8, i8* %5851, align 1
  %5853 = icmp ne i8 %5852, 0
  %5854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5855 = load i8, i8* %5854, align 1
  %5856 = icmp ne i8 %5855, 0
  %5857 = xor i1 %5853, %5856
  %5858 = xor i1 %5857, true
  %5859 = and i1 %5850, %5858
  %5860 = zext i1 %5859 to i8
  store i8 %5860, i8* %BRANCH_TAKEN, align 1
  %5861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5862 = select i1 %5859, i64 %5843, i64 %5845
  store i64 %5862, i64* %5861, align 8
  store %struct.Memory* %loadMem_400ff5, %struct.Memory** %MEMORY
  %loadBr_400ff5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400ff5 = icmp eq i8 %loadBr_400ff5, 1
  br i1 %cmpBr_400ff5, label %block_.L_4011e4, label %block_400ffb

block_400ffb:                                     ; preds = %block_.L_400fed
  %loadMem_400ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5864 = getelementptr inbounds %struct.GPR, %struct.GPR* %5863, i32 0, i32 33
  %5865 = getelementptr inbounds %struct.Reg, %struct.Reg* %5864, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %5865 to i64*
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5867 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5866, i64 0, i64 0
  %YMM0.i522 = bitcast %union.VectorReg* %5867 to %"class.std::bitset"*
  %5868 = bitcast %"class.std::bitset"* %YMM0.i522 to i8*
  %5869 = load i64, i64* %PC.i521
  %5870 = load i64, i64* %PC.i521
  %5871 = add i64 %5870, 8
  store i64 %5871, i64* %PC.i521
  %5872 = load double, double* bitcast (%G_0x8d5__rip__type* @G_0x8d5__rip_ to double*)
  %5873 = bitcast i8* %5868 to double*
  store double %5872, double* %5873, align 1
  %5874 = getelementptr inbounds i8, i8* %5868, i64 8
  %5875 = bitcast i8* %5874 to double*
  store double 0.000000e+00, double* %5875, align 1
  store %struct.Memory* %loadMem_400ffb, %struct.Memory** %MEMORY
  %loadMem_401003 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5877 = getelementptr inbounds %struct.GPR, %struct.GPR* %5876, i32 0, i32 33
  %5878 = getelementptr inbounds %struct.Reg, %struct.Reg* %5877, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %5878 to i64*
  %5879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5880 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5879, i64 0, i64 1
  %YMM1.i520 = bitcast %union.VectorReg* %5880 to %"class.std::bitset"*
  %5881 = bitcast %"class.std::bitset"* %YMM1.i520 to i8*
  %5882 = load i64, i64* %PC.i519
  %5883 = add i64 %5882, 9
  store i64 %5883, i64* %PC.i519
  %5884 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %5885 = bitcast i8* %5881 to double*
  store double %5884, double* %5885, align 1
  %5886 = getelementptr inbounds i8, i8* %5881, i64 8
  %5887 = bitcast i8* %5886 to double*
  store double 0.000000e+00, double* %5887, align 1
  store %struct.Memory* %loadMem_401003, %struct.Memory** %MEMORY
  %loadMem_40100c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5889 = getelementptr inbounds %struct.GPR, %struct.GPR* %5888, i32 0, i32 33
  %5890 = getelementptr inbounds %struct.Reg, %struct.Reg* %5889, i32 0, i32 0
  %PC.i517 = bitcast %union.anon* %5890 to i64*
  %5891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5892 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5891, i64 0, i64 2
  %YMM2.i518 = bitcast %union.VectorReg* %5892 to %"class.std::bitset"*
  %5893 = bitcast %"class.std::bitset"* %YMM2.i518 to i8*
  %5894 = load i64, i64* %PC.i517
  %5895 = add i64 %5894, 9
  store i64 %5895, i64* %PC.i517
  %5896 = load double, double* bitcast (%G_0x6020b0_type* @G_0x6020b0 to double*)
  %5897 = bitcast i8* %5893 to double*
  store double %5896, double* %5897, align 1
  %5898 = getelementptr inbounds i8, i8* %5893, i64 8
  %5899 = bitcast i8* %5898 to double*
  store double 0.000000e+00, double* %5899, align 1
  store %struct.Memory* %loadMem_40100c, %struct.Memory** %MEMORY
  %loadMem_401015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5901 = getelementptr inbounds %struct.GPR, %struct.GPR* %5900, i32 0, i32 33
  %5902 = getelementptr inbounds %struct.Reg, %struct.Reg* %5901, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %5902 to i64*
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5904 = getelementptr inbounds %struct.GPR, %struct.GPR* %5903, i32 0, i32 15
  %5905 = getelementptr inbounds %struct.Reg, %struct.Reg* %5904, i32 0, i32 0
  %RBP.i515 = bitcast %union.anon* %5905 to i64*
  %5906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5907 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5906, i64 0, i64 3
  %YMM3.i516 = bitcast %union.VectorReg* %5907 to %"class.std::bitset"*
  %5908 = bitcast %"class.std::bitset"* %YMM3.i516 to i8*
  %5909 = load i64, i64* %RBP.i515
  %5910 = sub i64 %5909, 144
  %5911 = load i64, i64* %PC.i514
  %5912 = add i64 %5911, 8
  store i64 %5912, i64* %PC.i514
  %5913 = inttoptr i64 %5910 to double*
  %5914 = load double, double* %5913
  %5915 = bitcast i8* %5908 to double*
  store double %5914, double* %5915, align 1
  %5916 = getelementptr inbounds i8, i8* %5908, i64 8
  %5917 = bitcast i8* %5916 to double*
  store double 0.000000e+00, double* %5917, align 1
  store %struct.Memory* %loadMem_401015, %struct.Memory** %MEMORY
  %loadMem_40101d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5919 = getelementptr inbounds %struct.GPR, %struct.GPR* %5918, i32 0, i32 33
  %5920 = getelementptr inbounds %struct.Reg, %struct.Reg* %5919, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %5920 to i64*
  %5921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5922 = getelementptr inbounds %struct.GPR, %struct.GPR* %5921, i32 0, i32 15
  %5923 = getelementptr inbounds %struct.Reg, %struct.Reg* %5922, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %5923 to i64*
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5925 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5924, i64 0, i64 0
  %XMM0.i513 = bitcast %union.VectorReg* %5925 to %union.vec128_t*
  %5926 = load i64, i64* %RBP.i512
  %5927 = sub i64 %5926, 224
  %5928 = bitcast %union.vec128_t* %XMM0.i513 to i8*
  %5929 = load i64, i64* %PC.i511
  %5930 = add i64 %5929, 8
  store i64 %5930, i64* %PC.i511
  %5931 = bitcast i8* %5928 to double*
  %5932 = load double, double* %5931, align 1
  %5933 = inttoptr i64 %5927 to double*
  store double %5932, double* %5933
  store %struct.Memory* %loadMem_40101d, %struct.Memory** %MEMORY
  %loadMem_401025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5935 = getelementptr inbounds %struct.GPR, %struct.GPR* %5934, i32 0, i32 33
  %5936 = getelementptr inbounds %struct.Reg, %struct.Reg* %5935, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %5936 to i64*
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5938 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5937, i64 0, i64 0
  %YMM0.i509 = bitcast %union.VectorReg* %5938 to %"class.std::bitset"*
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5940 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5939, i64 0, i64 3
  %XMM3.i510 = bitcast %union.VectorReg* %5940 to %union.vec128_t*
  %5941 = bitcast %"class.std::bitset"* %YMM0.i509 to i8*
  %5942 = bitcast %union.vec128_t* %XMM3.i510 to i8*
  %5943 = load i64, i64* %PC.i508
  %5944 = add i64 %5943, 3
  store i64 %5944, i64* %PC.i508
  %5945 = bitcast i8* %5942 to <2 x i32>*
  %5946 = load <2 x i32>, <2 x i32>* %5945, align 1
  %5947 = getelementptr inbounds i8, i8* %5942, i64 8
  %5948 = bitcast i8* %5947 to <2 x i32>*
  %5949 = load <2 x i32>, <2 x i32>* %5948, align 1
  %5950 = extractelement <2 x i32> %5946, i32 0
  %5951 = bitcast i8* %5941 to i32*
  store i32 %5950, i32* %5951, align 1
  %5952 = extractelement <2 x i32> %5946, i32 1
  %5953 = getelementptr inbounds i8, i8* %5941, i64 4
  %5954 = bitcast i8* %5953 to i32*
  store i32 %5952, i32* %5954, align 1
  %5955 = extractelement <2 x i32> %5949, i32 0
  %5956 = getelementptr inbounds i8, i8* %5941, i64 8
  %5957 = bitcast i8* %5956 to i32*
  store i32 %5955, i32* %5957, align 1
  %5958 = extractelement <2 x i32> %5949, i32 1
  %5959 = getelementptr inbounds i8, i8* %5941, i64 12
  %5960 = bitcast i8* %5959 to i32*
  store i32 %5958, i32* %5960, align 1
  store %struct.Memory* %loadMem_401025, %struct.Memory** %MEMORY
  %loadMem_401028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5962 = getelementptr inbounds %struct.GPR, %struct.GPR* %5961, i32 0, i32 33
  %5963 = getelementptr inbounds %struct.Reg, %struct.Reg* %5962, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %5963 to i64*
  %5964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5965 = getelementptr inbounds %struct.GPR, %struct.GPR* %5964, i32 0, i32 15
  %5966 = getelementptr inbounds %struct.Reg, %struct.Reg* %5965, i32 0, i32 0
  %RBP.i506 = bitcast %union.anon* %5966 to i64*
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5968 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5967, i64 0, i64 2
  %XMM2.i507 = bitcast %union.VectorReg* %5968 to %union.vec128_t*
  %5969 = load i64, i64* %RBP.i506
  %5970 = sub i64 %5969, 232
  %5971 = bitcast %union.vec128_t* %XMM2.i507 to i8*
  %5972 = load i64, i64* %PC.i505
  %5973 = add i64 %5972, 8
  store i64 %5973, i64* %PC.i505
  %5974 = bitcast i8* %5971 to double*
  %5975 = load double, double* %5974, align 1
  %5976 = inttoptr i64 %5970 to double*
  store double %5975, double* %5976
  store %struct.Memory* %loadMem_401028, %struct.Memory** %MEMORY
  %loadMem_401030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5978 = getelementptr inbounds %struct.GPR, %struct.GPR* %5977, i32 0, i32 33
  %5979 = getelementptr inbounds %struct.Reg, %struct.Reg* %5978, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %5979 to i64*
  %5980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5981 = getelementptr inbounds %struct.GPR, %struct.GPR* %5980, i32 0, i32 15
  %5982 = getelementptr inbounds %struct.Reg, %struct.Reg* %5981, i32 0, i32 0
  %RBP.i503 = bitcast %union.anon* %5982 to i64*
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5984 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5983, i64 0, i64 1
  %XMM1.i504 = bitcast %union.VectorReg* %5984 to %union.vec128_t*
  %5985 = load i64, i64* %RBP.i503
  %5986 = sub i64 %5985, 240
  %5987 = bitcast %union.vec128_t* %XMM1.i504 to i8*
  %5988 = load i64, i64* %PC.i502
  %5989 = add i64 %5988, 8
  store i64 %5989, i64* %PC.i502
  %5990 = bitcast i8* %5987 to double*
  %5991 = load double, double* %5990, align 1
  %5992 = inttoptr i64 %5986 to double*
  store double %5991, double* %5992
  store %struct.Memory* %loadMem_401030, %struct.Memory** %MEMORY
  %loadMem1_401038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5994 = getelementptr inbounds %struct.GPR, %struct.GPR* %5993, i32 0, i32 33
  %5995 = getelementptr inbounds %struct.Reg, %struct.Reg* %5994, i32 0, i32 0
  %PC.i501 = bitcast %union.anon* %5995 to i64*
  %5996 = load i64, i64* %PC.i501
  %5997 = add i64 %5996, -2360
  %5998 = load i64, i64* %PC.i501
  %5999 = add i64 %5998, 5
  %6000 = load i64, i64* %PC.i501
  %6001 = add i64 %6000, 5
  store i64 %6001, i64* %PC.i501
  %6002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6003 = load i64, i64* %6002, align 8
  %6004 = add i64 %6003, -8
  %6005 = inttoptr i64 %6004 to i64*
  store i64 %5999, i64* %6005
  store i64 %6004, i64* %6002, align 8
  %6006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5997, i64* %6006, align 8
  store %struct.Memory* %loadMem1_401038, %struct.Memory** %MEMORY
  %loadMem2_401038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401038 = load i64, i64* %3
  %call2_401038 = call %struct.Memory* @ext_sin(%struct.State* %0, i64 %loadPC_401038, %struct.Memory* %loadMem2_401038)
  store %struct.Memory* %call2_401038, %struct.Memory** %MEMORY
  %loadMem_40103d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6008 = getelementptr inbounds %struct.GPR, %struct.GPR* %6007, i32 0, i32 33
  %6009 = getelementptr inbounds %struct.Reg, %struct.Reg* %6008, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %6009 to i64*
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6011 = getelementptr inbounds %struct.GPR, %struct.GPR* %6010, i32 0, i32 15
  %6012 = getelementptr inbounds %struct.Reg, %struct.Reg* %6011, i32 0, i32 0
  %RBP.i499 = bitcast %union.anon* %6012 to i64*
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6014 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6013, i64 0, i64 1
  %YMM1.i500 = bitcast %union.VectorReg* %6014 to %"class.std::bitset"*
  %6015 = bitcast %"class.std::bitset"* %YMM1.i500 to i8*
  %6016 = load i64, i64* %RBP.i499
  %6017 = sub i64 %6016, 232
  %6018 = load i64, i64* %PC.i498
  %6019 = add i64 %6018, 8
  store i64 %6019, i64* %PC.i498
  %6020 = inttoptr i64 %6017 to double*
  %6021 = load double, double* %6020
  %6022 = bitcast i8* %6015 to double*
  store double %6021, double* %6022, align 1
  %6023 = getelementptr inbounds i8, i8* %6015, i64 8
  %6024 = bitcast i8* %6023 to double*
  store double 0.000000e+00, double* %6024, align 1
  store %struct.Memory* %loadMem_40103d, %struct.Memory** %MEMORY
  %loadMem_401045 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6026 = getelementptr inbounds %struct.GPR, %struct.GPR* %6025, i32 0, i32 33
  %6027 = getelementptr inbounds %struct.Reg, %struct.Reg* %6026, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %6027 to i64*
  %6028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6029 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6028, i64 0, i64 1
  %YMM1.i496 = bitcast %union.VectorReg* %6029 to %"class.std::bitset"*
  %6030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6031 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6030, i64 0, i64 0
  %XMM0.i497 = bitcast %union.VectorReg* %6031 to %union.vec128_t*
  %6032 = bitcast %"class.std::bitset"* %YMM1.i496 to i8*
  %6033 = bitcast %"class.std::bitset"* %YMM1.i496 to i8*
  %6034 = bitcast %union.vec128_t* %XMM0.i497 to i8*
  %6035 = load i64, i64* %PC.i495
  %6036 = add i64 %6035, 4
  store i64 %6036, i64* %PC.i495
  %6037 = bitcast i8* %6033 to double*
  %6038 = load double, double* %6037, align 1
  %6039 = getelementptr inbounds i8, i8* %6033, i64 8
  %6040 = bitcast i8* %6039 to i64*
  %6041 = load i64, i64* %6040, align 1
  %6042 = bitcast i8* %6034 to double*
  %6043 = load double, double* %6042, align 1
  %6044 = fmul double %6038, %6043
  %6045 = bitcast i8* %6032 to double*
  store double %6044, double* %6045, align 1
  %6046 = getelementptr inbounds i8, i8* %6032, i64 8
  %6047 = bitcast i8* %6046 to i64*
  store i64 %6041, i64* %6047, align 1
  store %struct.Memory* %loadMem_401045, %struct.Memory** %MEMORY
  %loadMem_401049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6049 = getelementptr inbounds %struct.GPR, %struct.GPR* %6048, i32 0, i32 33
  %6050 = getelementptr inbounds %struct.Reg, %struct.Reg* %6049, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %6050 to i64*
  %6051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6052 = getelementptr inbounds %struct.GPR, %struct.GPR* %6051, i32 0, i32 15
  %6053 = getelementptr inbounds %struct.Reg, %struct.Reg* %6052, i32 0, i32 0
  %RBP.i493 = bitcast %union.anon* %6053 to i64*
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6055 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6054, i64 0, i64 0
  %YMM0.i494 = bitcast %union.VectorReg* %6055 to %"class.std::bitset"*
  %6056 = bitcast %"class.std::bitset"* %YMM0.i494 to i8*
  %6057 = load i64, i64* %RBP.i493
  %6058 = sub i64 %6057, 144
  %6059 = load i64, i64* %PC.i492
  %6060 = add i64 %6059, 8
  store i64 %6060, i64* %PC.i492
  %6061 = inttoptr i64 %6058 to double*
  %6062 = load double, double* %6061
  %6063 = bitcast i8* %6056 to double*
  store double %6062, double* %6063, align 1
  %6064 = getelementptr inbounds i8, i8* %6056, i64 8
  %6065 = bitcast i8* %6064 to double*
  store double 0.000000e+00, double* %6065, align 1
  store %struct.Memory* %loadMem_401049, %struct.Memory** %MEMORY
  %loadMem_401051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6067 = getelementptr inbounds %struct.GPR, %struct.GPR* %6066, i32 0, i32 33
  %6068 = getelementptr inbounds %struct.Reg, %struct.Reg* %6067, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %6068 to i64*
  %6069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6070 = getelementptr inbounds %struct.GPR, %struct.GPR* %6069, i32 0, i32 15
  %6071 = getelementptr inbounds %struct.Reg, %struct.Reg* %6070, i32 0, i32 0
  %RBP.i490 = bitcast %union.anon* %6071 to i64*
  %6072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6073 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6072, i64 0, i64 1
  %XMM1.i491 = bitcast %union.VectorReg* %6073 to %union.vec128_t*
  %6074 = load i64, i64* %RBP.i490
  %6075 = sub i64 %6074, 248
  %6076 = bitcast %union.vec128_t* %XMM1.i491 to i8*
  %6077 = load i64, i64* %PC.i489
  %6078 = add i64 %6077, 8
  store i64 %6078, i64* %PC.i489
  %6079 = bitcast i8* %6076 to double*
  %6080 = load double, double* %6079, align 1
  %6081 = inttoptr i64 %6075 to double*
  store double %6080, double* %6081
  store %struct.Memory* %loadMem_401051, %struct.Memory** %MEMORY
  %loadMem1_401059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 33
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %6084 to i64*
  %6085 = load i64, i64* %PC.i488
  %6086 = add i64 %6085, -2457
  %6087 = load i64, i64* %PC.i488
  %6088 = add i64 %6087, 5
  %6089 = load i64, i64* %PC.i488
  %6090 = add i64 %6089, 5
  store i64 %6090, i64* %PC.i488
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6092 = load i64, i64* %6091, align 8
  %6093 = add i64 %6092, -8
  %6094 = inttoptr i64 %6093 to i64*
  store i64 %6088, i64* %6094
  store i64 %6093, i64* %6091, align 8
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6086, i64* %6095, align 8
  store %struct.Memory* %loadMem1_401059, %struct.Memory** %MEMORY
  %loadMem2_401059 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401059 = load i64, i64* %3
  %call2_401059 = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_401059, %struct.Memory* %loadMem2_401059)
  store %struct.Memory* %call2_401059, %struct.Memory** %MEMORY
  %loadMem_40105e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6097 = getelementptr inbounds %struct.GPR, %struct.GPR* %6096, i32 0, i32 33
  %6098 = getelementptr inbounds %struct.Reg, %struct.Reg* %6097, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %6098 to i64*
  %6099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6100 = getelementptr inbounds %struct.GPR, %struct.GPR* %6099, i32 0, i32 15
  %6101 = getelementptr inbounds %struct.Reg, %struct.Reg* %6100, i32 0, i32 0
  %RBP.i486 = bitcast %union.anon* %6101 to i64*
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6103 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6102, i64 0, i64 1
  %YMM1.i487 = bitcast %union.VectorReg* %6103 to %"class.std::bitset"*
  %6104 = bitcast %"class.std::bitset"* %YMM1.i487 to i8*
  %6105 = load i64, i64* %RBP.i486
  %6106 = sub i64 %6105, 248
  %6107 = load i64, i64* %PC.i485
  %6108 = add i64 %6107, 8
  store i64 %6108, i64* %PC.i485
  %6109 = inttoptr i64 %6106 to double*
  %6110 = load double, double* %6109
  %6111 = bitcast i8* %6104 to double*
  store double %6110, double* %6111, align 1
  %6112 = getelementptr inbounds i8, i8* %6104, i64 8
  %6113 = bitcast i8* %6112 to double*
  store double 0.000000e+00, double* %6113, align 1
  store %struct.Memory* %loadMem_40105e, %struct.Memory** %MEMORY
  %loadMem_401066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6115 = getelementptr inbounds %struct.GPR, %struct.GPR* %6114, i32 0, i32 33
  %6116 = getelementptr inbounds %struct.Reg, %struct.Reg* %6115, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %6116 to i64*
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6118 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6117, i64 0, i64 1
  %YMM1.i483 = bitcast %union.VectorReg* %6118 to %"class.std::bitset"*
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6120 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6119, i64 0, i64 0
  %XMM0.i484 = bitcast %union.VectorReg* %6120 to %union.vec128_t*
  %6121 = bitcast %"class.std::bitset"* %YMM1.i483 to i8*
  %6122 = bitcast %"class.std::bitset"* %YMM1.i483 to i8*
  %6123 = bitcast %union.vec128_t* %XMM0.i484 to i8*
  %6124 = load i64, i64* %PC.i482
  %6125 = add i64 %6124, 4
  store i64 %6125, i64* %PC.i482
  %6126 = bitcast i8* %6122 to double*
  %6127 = load double, double* %6126, align 1
  %6128 = getelementptr inbounds i8, i8* %6122, i64 8
  %6129 = bitcast i8* %6128 to i64*
  %6130 = load i64, i64* %6129, align 1
  %6131 = bitcast i8* %6123 to double*
  %6132 = load double, double* %6131, align 1
  %6133 = fmul double %6127, %6132
  %6134 = bitcast i8* %6121 to double*
  store double %6133, double* %6134, align 1
  %6135 = getelementptr inbounds i8, i8* %6121, i64 8
  %6136 = bitcast i8* %6135 to i64*
  store i64 %6130, i64* %6136, align 1
  store %struct.Memory* %loadMem_401066, %struct.Memory** %MEMORY
  %loadMem_40106a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6138 = getelementptr inbounds %struct.GPR, %struct.GPR* %6137, i32 0, i32 33
  %6139 = getelementptr inbounds %struct.Reg, %struct.Reg* %6138, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %6139 to i64*
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6141 = getelementptr inbounds %struct.GPR, %struct.GPR* %6140, i32 0, i32 15
  %6142 = getelementptr inbounds %struct.Reg, %struct.Reg* %6141, i32 0, i32 0
  %RBP.i480 = bitcast %union.anon* %6142 to i64*
  %6143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6144 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6143, i64 0, i64 0
  %YMM0.i481 = bitcast %union.VectorReg* %6144 to %"class.std::bitset"*
  %6145 = bitcast %"class.std::bitset"* %YMM0.i481 to i8*
  %6146 = load i64, i64* %RBP.i480
  %6147 = sub i64 %6146, 144
  %6148 = load i64, i64* %PC.i479
  %6149 = add i64 %6148, 8
  store i64 %6149, i64* %PC.i479
  %6150 = inttoptr i64 %6147 to double*
  %6151 = load double, double* %6150
  %6152 = bitcast i8* %6145 to double*
  store double %6151, double* %6152, align 1
  %6153 = getelementptr inbounds i8, i8* %6145, i64 8
  %6154 = bitcast i8* %6153 to double*
  store double 0.000000e+00, double* %6154, align 1
  store %struct.Memory* %loadMem_40106a, %struct.Memory** %MEMORY
  %loadMem_401072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6156 = getelementptr inbounds %struct.GPR, %struct.GPR* %6155, i32 0, i32 33
  %6157 = getelementptr inbounds %struct.Reg, %struct.Reg* %6156, i32 0, i32 0
  %PC.i476 = bitcast %union.anon* %6157 to i64*
  %6158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6159 = getelementptr inbounds %struct.GPR, %struct.GPR* %6158, i32 0, i32 15
  %6160 = getelementptr inbounds %struct.Reg, %struct.Reg* %6159, i32 0, i32 0
  %RBP.i477 = bitcast %union.anon* %6160 to i64*
  %6161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6162 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6161, i64 0, i64 0
  %YMM0.i478 = bitcast %union.VectorReg* %6162 to %"class.std::bitset"*
  %6163 = bitcast %"class.std::bitset"* %YMM0.i478 to i8*
  %6164 = bitcast %"class.std::bitset"* %YMM0.i478 to i8*
  %6165 = load i64, i64* %RBP.i477
  %6166 = sub i64 %6165, 152
  %6167 = load i64, i64* %PC.i476
  %6168 = add i64 %6167, 8
  store i64 %6168, i64* %PC.i476
  %6169 = bitcast i8* %6164 to double*
  %6170 = load double, double* %6169, align 1
  %6171 = getelementptr inbounds i8, i8* %6164, i64 8
  %6172 = bitcast i8* %6171 to i64*
  %6173 = load i64, i64* %6172, align 1
  %6174 = inttoptr i64 %6166 to double*
  %6175 = load double, double* %6174
  %6176 = fadd double %6170, %6175
  %6177 = bitcast i8* %6163 to double*
  store double %6176, double* %6177, align 1
  %6178 = getelementptr inbounds i8, i8* %6163, i64 8
  %6179 = bitcast i8* %6178 to i64*
  store i64 %6173, i64* %6179, align 1
  store %struct.Memory* %loadMem_401072, %struct.Memory** %MEMORY
  %loadMem_40107a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6181 = getelementptr inbounds %struct.GPR, %struct.GPR* %6180, i32 0, i32 33
  %6182 = getelementptr inbounds %struct.Reg, %struct.Reg* %6181, i32 0, i32 0
  %PC.i473 = bitcast %union.anon* %6182 to i64*
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6184 = getelementptr inbounds %struct.GPR, %struct.GPR* %6183, i32 0, i32 15
  %6185 = getelementptr inbounds %struct.Reg, %struct.Reg* %6184, i32 0, i32 0
  %RBP.i474 = bitcast %union.anon* %6185 to i64*
  %6186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6187 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6186, i64 0, i64 1
  %XMM1.i475 = bitcast %union.VectorReg* %6187 to %union.vec128_t*
  %6188 = load i64, i64* %RBP.i474
  %6189 = sub i64 %6188, 256
  %6190 = bitcast %union.vec128_t* %XMM1.i475 to i8*
  %6191 = load i64, i64* %PC.i473
  %6192 = add i64 %6191, 8
  store i64 %6192, i64* %PC.i473
  %6193 = bitcast i8* %6190 to double*
  %6194 = load double, double* %6193, align 1
  %6195 = inttoptr i64 %6189 to double*
  store double %6194, double* %6195
  store %struct.Memory* %loadMem_40107a, %struct.Memory** %MEMORY
  %loadMem1_401082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6197 = getelementptr inbounds %struct.GPR, %struct.GPR* %6196, i32 0, i32 33
  %6198 = getelementptr inbounds %struct.Reg, %struct.Reg* %6197, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %6198 to i64*
  %6199 = load i64, i64* %PC.i472
  %6200 = add i64 %6199, -2498
  %6201 = load i64, i64* %PC.i472
  %6202 = add i64 %6201, 5
  %6203 = load i64, i64* %PC.i472
  %6204 = add i64 %6203, 5
  store i64 %6204, i64* %PC.i472
  %6205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6206 = load i64, i64* %6205, align 8
  %6207 = add i64 %6206, -8
  %6208 = inttoptr i64 %6207 to i64*
  store i64 %6202, i64* %6208
  store i64 %6207, i64* %6205, align 8
  %6209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6200, i64* %6209, align 8
  store %struct.Memory* %loadMem1_401082, %struct.Memory** %MEMORY
  %loadMem2_401082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401082 = load i64, i64* %3
  %call2_401082 = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_401082, %struct.Memory* %loadMem2_401082)
  store %struct.Memory* %call2_401082, %struct.Memory** %MEMORY
  %loadMem_401087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6211 = getelementptr inbounds %struct.GPR, %struct.GPR* %6210, i32 0, i32 33
  %6212 = getelementptr inbounds %struct.Reg, %struct.Reg* %6211, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %6212 to i64*
  %6213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6214 = getelementptr inbounds %struct.GPR, %struct.GPR* %6213, i32 0, i32 15
  %6215 = getelementptr inbounds %struct.Reg, %struct.Reg* %6214, i32 0, i32 0
  %RBP.i470 = bitcast %union.anon* %6215 to i64*
  %6216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6217 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6216, i64 0, i64 1
  %YMM1.i471 = bitcast %union.VectorReg* %6217 to %"class.std::bitset"*
  %6218 = bitcast %"class.std::bitset"* %YMM1.i471 to i8*
  %6219 = load i64, i64* %RBP.i470
  %6220 = sub i64 %6219, 144
  %6221 = load i64, i64* %PC.i469
  %6222 = add i64 %6221, 8
  store i64 %6222, i64* %PC.i469
  %6223 = inttoptr i64 %6220 to double*
  %6224 = load double, double* %6223
  %6225 = bitcast i8* %6218 to double*
  store double %6224, double* %6225, align 1
  %6226 = getelementptr inbounds i8, i8* %6218, i64 8
  %6227 = bitcast i8* %6226 to double*
  store double 0.000000e+00, double* %6227, align 1
  store %struct.Memory* %loadMem_401087, %struct.Memory** %MEMORY
  %loadMem_40108f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6229 = getelementptr inbounds %struct.GPR, %struct.GPR* %6228, i32 0, i32 33
  %6230 = getelementptr inbounds %struct.Reg, %struct.Reg* %6229, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %6230 to i64*
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6232 = getelementptr inbounds %struct.GPR, %struct.GPR* %6231, i32 0, i32 15
  %6233 = getelementptr inbounds %struct.Reg, %struct.Reg* %6232, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %6233 to i64*
  %6234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6235 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6234, i64 0, i64 1
  %YMM1.i468 = bitcast %union.VectorReg* %6235 to %"class.std::bitset"*
  %6236 = bitcast %"class.std::bitset"* %YMM1.i468 to i8*
  %6237 = bitcast %"class.std::bitset"* %YMM1.i468 to i8*
  %6238 = load i64, i64* %RBP.i467
  %6239 = sub i64 %6238, 152
  %6240 = load i64, i64* %PC.i466
  %6241 = add i64 %6240, 8
  store i64 %6241, i64* %PC.i466
  %6242 = bitcast i8* %6237 to double*
  %6243 = load double, double* %6242, align 1
  %6244 = getelementptr inbounds i8, i8* %6237, i64 8
  %6245 = bitcast i8* %6244 to i64*
  %6246 = load i64, i64* %6245, align 1
  %6247 = inttoptr i64 %6239 to double*
  %6248 = load double, double* %6247
  %6249 = fsub double %6243, %6248
  %6250 = bitcast i8* %6236 to double*
  store double %6249, double* %6250, align 1
  %6251 = getelementptr inbounds i8, i8* %6236, i64 8
  %6252 = bitcast i8* %6251 to i64*
  store i64 %6246, i64* %6252, align 1
  store %struct.Memory* %loadMem_40108f, %struct.Memory** %MEMORY
  %loadMem_401097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6254 = getelementptr inbounds %struct.GPR, %struct.GPR* %6253, i32 0, i32 33
  %6255 = getelementptr inbounds %struct.Reg, %struct.Reg* %6254, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %6255 to i64*
  %6256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6257 = getelementptr inbounds %struct.GPR, %struct.GPR* %6256, i32 0, i32 15
  %6258 = getelementptr inbounds %struct.Reg, %struct.Reg* %6257, i32 0, i32 0
  %RBP.i464 = bitcast %union.anon* %6258 to i64*
  %6259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6260 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6259, i64 0, i64 0
  %XMM0.i465 = bitcast %union.VectorReg* %6260 to %union.vec128_t*
  %6261 = load i64, i64* %RBP.i464
  %6262 = sub i64 %6261, 264
  %6263 = bitcast %union.vec128_t* %XMM0.i465 to i8*
  %6264 = load i64, i64* %PC.i463
  %6265 = add i64 %6264, 8
  store i64 %6265, i64* %PC.i463
  %6266 = bitcast i8* %6263 to double*
  %6267 = load double, double* %6266, align 1
  %6268 = inttoptr i64 %6262 to double*
  store double %6267, double* %6268
  store %struct.Memory* %loadMem_401097, %struct.Memory** %MEMORY
  %loadMem_40109f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6270 = getelementptr inbounds %struct.GPR, %struct.GPR* %6269, i32 0, i32 33
  %6271 = getelementptr inbounds %struct.Reg, %struct.Reg* %6270, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %6271 to i64*
  %6272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6272, i64 0, i64 0
  %YMM0.i461 = bitcast %union.VectorReg* %6273 to %"class.std::bitset"*
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6274, i64 0, i64 1
  %XMM1.i462 = bitcast %union.VectorReg* %6275 to %union.vec128_t*
  %6276 = bitcast %"class.std::bitset"* %YMM0.i461 to i8*
  %6277 = bitcast %union.vec128_t* %XMM1.i462 to i8*
  %6278 = load i64, i64* %PC.i460
  %6279 = add i64 %6278, 3
  store i64 %6279, i64* %PC.i460
  %6280 = bitcast i8* %6277 to <2 x i32>*
  %6281 = load <2 x i32>, <2 x i32>* %6280, align 1
  %6282 = getelementptr inbounds i8, i8* %6277, i64 8
  %6283 = bitcast i8* %6282 to <2 x i32>*
  %6284 = load <2 x i32>, <2 x i32>* %6283, align 1
  %6285 = extractelement <2 x i32> %6281, i32 0
  %6286 = bitcast i8* %6276 to i32*
  store i32 %6285, i32* %6286, align 1
  %6287 = extractelement <2 x i32> %6281, i32 1
  %6288 = getelementptr inbounds i8, i8* %6276, i64 4
  %6289 = bitcast i8* %6288 to i32*
  store i32 %6287, i32* %6289, align 1
  %6290 = extractelement <2 x i32> %6284, i32 0
  %6291 = getelementptr inbounds i8, i8* %6276, i64 8
  %6292 = bitcast i8* %6291 to i32*
  store i32 %6290, i32* %6292, align 1
  %6293 = extractelement <2 x i32> %6284, i32 1
  %6294 = getelementptr inbounds i8, i8* %6276, i64 12
  %6295 = bitcast i8* %6294 to i32*
  store i32 %6293, i32* %6295, align 1
  store %struct.Memory* %loadMem_40109f, %struct.Memory** %MEMORY
  %loadMem1_4010a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6297 = getelementptr inbounds %struct.GPR, %struct.GPR* %6296, i32 0, i32 33
  %6298 = getelementptr inbounds %struct.Reg, %struct.Reg* %6297, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %6298 to i64*
  %6299 = load i64, i64* %PC.i459
  %6300 = add i64 %6299, -2530
  %6301 = load i64, i64* %PC.i459
  %6302 = add i64 %6301, 5
  %6303 = load i64, i64* %PC.i459
  %6304 = add i64 %6303, 5
  store i64 %6304, i64* %PC.i459
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6306 = load i64, i64* %6305, align 8
  %6307 = add i64 %6306, -8
  %6308 = inttoptr i64 %6307 to i64*
  store i64 %6302, i64* %6308
  store i64 %6307, i64* %6305, align 8
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6300, i64* %6309, align 8
  store %struct.Memory* %loadMem1_4010a2, %struct.Memory** %MEMORY
  %loadMem2_4010a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4010a2 = load i64, i64* %3
  %call2_4010a2 = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_4010a2, %struct.Memory* %loadMem2_4010a2)
  store %struct.Memory* %call2_4010a2, %struct.Memory** %MEMORY
  %loadMem_4010a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6311 = getelementptr inbounds %struct.GPR, %struct.GPR* %6310, i32 0, i32 33
  %6312 = getelementptr inbounds %struct.Reg, %struct.Reg* %6311, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %6312 to i64*
  %6313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6314 = getelementptr inbounds %struct.GPR, %struct.GPR* %6313, i32 0, i32 15
  %6315 = getelementptr inbounds %struct.Reg, %struct.Reg* %6314, i32 0, i32 0
  %RBP.i457 = bitcast %union.anon* %6315 to i64*
  %6316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6316, i64 0, i64 1
  %YMM1.i458 = bitcast %union.VectorReg* %6317 to %"class.std::bitset"*
  %6318 = bitcast %"class.std::bitset"* %YMM1.i458 to i8*
  %6319 = load i64, i64* %RBP.i457
  %6320 = sub i64 %6319, 264
  %6321 = load i64, i64* %PC.i456
  %6322 = add i64 %6321, 8
  store i64 %6322, i64* %PC.i456
  %6323 = inttoptr i64 %6320 to double*
  %6324 = load double, double* %6323
  %6325 = bitcast i8* %6318 to double*
  store double %6324, double* %6325, align 1
  %6326 = getelementptr inbounds i8, i8* %6318, i64 8
  %6327 = bitcast i8* %6326 to double*
  store double 0.000000e+00, double* %6327, align 1
  store %struct.Memory* %loadMem_4010a7, %struct.Memory** %MEMORY
  %loadMem_4010af = load %struct.Memory*, %struct.Memory** %MEMORY
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6329 = getelementptr inbounds %struct.GPR, %struct.GPR* %6328, i32 0, i32 33
  %6330 = getelementptr inbounds %struct.Reg, %struct.Reg* %6329, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %6330 to i64*
  %6331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6332 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6331, i64 0, i64 1
  %YMM1.i454 = bitcast %union.VectorReg* %6332 to %"class.std::bitset"*
  %6333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6334 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6333, i64 0, i64 0
  %XMM0.i455 = bitcast %union.VectorReg* %6334 to %union.vec128_t*
  %6335 = bitcast %"class.std::bitset"* %YMM1.i454 to i8*
  %6336 = bitcast %"class.std::bitset"* %YMM1.i454 to i8*
  %6337 = bitcast %union.vec128_t* %XMM0.i455 to i8*
  %6338 = load i64, i64* %PC.i453
  %6339 = add i64 %6338, 4
  store i64 %6339, i64* %PC.i453
  %6340 = bitcast i8* %6336 to double*
  %6341 = load double, double* %6340, align 1
  %6342 = getelementptr inbounds i8, i8* %6336, i64 8
  %6343 = bitcast i8* %6342 to i64*
  %6344 = load i64, i64* %6343, align 1
  %6345 = bitcast i8* %6337 to double*
  %6346 = load double, double* %6345, align 1
  %6347 = fadd double %6341, %6346
  %6348 = bitcast i8* %6335 to double*
  store double %6347, double* %6348, align 1
  %6349 = getelementptr inbounds i8, i8* %6335, i64 8
  %6350 = bitcast i8* %6349 to i64*
  store i64 %6344, i64* %6350, align 1
  store %struct.Memory* %loadMem_4010af, %struct.Memory** %MEMORY
  %loadMem_4010b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6352 = getelementptr inbounds %struct.GPR, %struct.GPR* %6351, i32 0, i32 33
  %6353 = getelementptr inbounds %struct.Reg, %struct.Reg* %6352, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %6353 to i64*
  %6354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6355 = getelementptr inbounds %struct.GPR, %struct.GPR* %6354, i32 0, i32 15
  %6356 = getelementptr inbounds %struct.Reg, %struct.Reg* %6355, i32 0, i32 0
  %RBP.i451 = bitcast %union.anon* %6356 to i64*
  %6357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6358 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6357, i64 0, i64 0
  %YMM0.i452 = bitcast %union.VectorReg* %6358 to %"class.std::bitset"*
  %6359 = bitcast %"class.std::bitset"* %YMM0.i452 to i8*
  %6360 = load i64, i64* %RBP.i451
  %6361 = sub i64 %6360, 224
  %6362 = load i64, i64* %PC.i450
  %6363 = add i64 %6362, 8
  store i64 %6363, i64* %PC.i450
  %6364 = inttoptr i64 %6361 to double*
  %6365 = load double, double* %6364
  %6366 = bitcast i8* %6359 to double*
  store double %6365, double* %6366, align 1
  %6367 = getelementptr inbounds i8, i8* %6359, i64 8
  %6368 = bitcast i8* %6367 to double*
  store double 0.000000e+00, double* %6368, align 1
  store %struct.Memory* %loadMem_4010b3, %struct.Memory** %MEMORY
  %loadMem_4010bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6370 = getelementptr inbounds %struct.GPR, %struct.GPR* %6369, i32 0, i32 33
  %6371 = getelementptr inbounds %struct.Reg, %struct.Reg* %6370, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %6371 to i64*
  %6372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6373 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6372, i64 0, i64 1
  %YMM1.i448 = bitcast %union.VectorReg* %6373 to %"class.std::bitset"*
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6375 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6374, i64 0, i64 0
  %XMM0.i449 = bitcast %union.VectorReg* %6375 to %union.vec128_t*
  %6376 = bitcast %"class.std::bitset"* %YMM1.i448 to i8*
  %6377 = bitcast %"class.std::bitset"* %YMM1.i448 to i8*
  %6378 = bitcast %union.vec128_t* %XMM0.i449 to i8*
  %6379 = load i64, i64* %PC.i447
  %6380 = add i64 %6379, 4
  store i64 %6380, i64* %PC.i447
  %6381 = bitcast i8* %6377 to double*
  %6382 = load double, double* %6381, align 1
  %6383 = getelementptr inbounds i8, i8* %6377, i64 8
  %6384 = bitcast i8* %6383 to i64*
  %6385 = load i64, i64* %6384, align 1
  %6386 = bitcast i8* %6378 to double*
  %6387 = load double, double* %6386, align 1
  %6388 = fsub double %6382, %6387
  %6389 = bitcast i8* %6376 to double*
  store double %6388, double* %6389, align 1
  %6390 = getelementptr inbounds i8, i8* %6376, i64 8
  %6391 = bitcast i8* %6390 to i64*
  store i64 %6385, i64* %6391, align 1
  store %struct.Memory* %loadMem_4010bb, %struct.Memory** %MEMORY
  %loadMem_4010bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6393 = getelementptr inbounds %struct.GPR, %struct.GPR* %6392, i32 0, i32 33
  %6394 = getelementptr inbounds %struct.Reg, %struct.Reg* %6393, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %6394 to i64*
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6396 = getelementptr inbounds %struct.GPR, %struct.GPR* %6395, i32 0, i32 15
  %6397 = getelementptr inbounds %struct.Reg, %struct.Reg* %6396, i32 0, i32 0
  %RBP.i445 = bitcast %union.anon* %6397 to i64*
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6399 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6398, i64 0, i64 2
  %YMM2.i446 = bitcast %union.VectorReg* %6399 to %"class.std::bitset"*
  %6400 = bitcast %"class.std::bitset"* %YMM2.i446 to i8*
  %6401 = load i64, i64* %RBP.i445
  %6402 = sub i64 %6401, 256
  %6403 = load i64, i64* %PC.i444
  %6404 = add i64 %6403, 8
  store i64 %6404, i64* %PC.i444
  %6405 = inttoptr i64 %6402 to double*
  %6406 = load double, double* %6405
  %6407 = bitcast i8* %6400 to double*
  store double %6406, double* %6407, align 1
  %6408 = getelementptr inbounds i8, i8* %6400, i64 8
  %6409 = bitcast i8* %6408 to double*
  store double 0.000000e+00, double* %6409, align 1
  store %struct.Memory* %loadMem_4010bf, %struct.Memory** %MEMORY
  %loadMem_4010c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6411 = getelementptr inbounds %struct.GPR, %struct.GPR* %6410, i32 0, i32 33
  %6412 = getelementptr inbounds %struct.Reg, %struct.Reg* %6411, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %6412 to i64*
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6414 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6413, i64 0, i64 2
  %YMM2.i442 = bitcast %union.VectorReg* %6414 to %"class.std::bitset"*
  %6415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6416 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6415, i64 0, i64 1
  %XMM1.i443 = bitcast %union.VectorReg* %6416 to %union.vec128_t*
  %6417 = bitcast %"class.std::bitset"* %YMM2.i442 to i8*
  %6418 = bitcast %"class.std::bitset"* %YMM2.i442 to i8*
  %6419 = bitcast %union.vec128_t* %XMM1.i443 to i8*
  %6420 = load i64, i64* %PC.i441
  %6421 = add i64 %6420, 4
  store i64 %6421, i64* %PC.i441
  %6422 = bitcast i8* %6418 to double*
  %6423 = load double, double* %6422, align 1
  %6424 = getelementptr inbounds i8, i8* %6418, i64 8
  %6425 = bitcast i8* %6424 to i64*
  %6426 = load i64, i64* %6425, align 1
  %6427 = bitcast i8* %6419 to double*
  %6428 = load double, double* %6427, align 1
  %6429 = fdiv double %6423, %6428
  %6430 = bitcast i8* %6417 to double*
  store double %6429, double* %6430, align 1
  %6431 = getelementptr inbounds i8, i8* %6417, i64 8
  %6432 = bitcast i8* %6431 to i64*
  store i64 %6426, i64* %6432, align 1
  store %struct.Memory* %loadMem_4010c7, %struct.Memory** %MEMORY
  %loadMem_4010cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6434 = getelementptr inbounds %struct.GPR, %struct.GPR* %6433, i32 0, i32 33
  %6435 = getelementptr inbounds %struct.Reg, %struct.Reg* %6434, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %6435 to i64*
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6437 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6436, i64 0, i64 0
  %YMM0.i439 = bitcast %union.VectorReg* %6437 to %"class.std::bitset"*
  %6438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6439 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6438, i64 0, i64 2
  %XMM2.i440 = bitcast %union.VectorReg* %6439 to %union.vec128_t*
  %6440 = bitcast %"class.std::bitset"* %YMM0.i439 to i8*
  %6441 = bitcast %union.vec128_t* %XMM2.i440 to i8*
  %6442 = load i64, i64* %PC.i438
  %6443 = add i64 %6442, 3
  store i64 %6443, i64* %PC.i438
  %6444 = bitcast i8* %6441 to <2 x i32>*
  %6445 = load <2 x i32>, <2 x i32>* %6444, align 1
  %6446 = getelementptr inbounds i8, i8* %6441, i64 8
  %6447 = bitcast i8* %6446 to <2 x i32>*
  %6448 = load <2 x i32>, <2 x i32>* %6447, align 1
  %6449 = extractelement <2 x i32> %6445, i32 0
  %6450 = bitcast i8* %6440 to i32*
  store i32 %6449, i32* %6450, align 1
  %6451 = extractelement <2 x i32> %6445, i32 1
  %6452 = getelementptr inbounds i8, i8* %6440, i64 4
  %6453 = bitcast i8* %6452 to i32*
  store i32 %6451, i32* %6453, align 1
  %6454 = extractelement <2 x i32> %6448, i32 0
  %6455 = getelementptr inbounds i8, i8* %6440, i64 8
  %6456 = bitcast i8* %6455 to i32*
  store i32 %6454, i32* %6456, align 1
  %6457 = extractelement <2 x i32> %6448, i32 1
  %6458 = getelementptr inbounds i8, i8* %6440, i64 12
  %6459 = bitcast i8* %6458 to i32*
  store i32 %6457, i32* %6459, align 1
  store %struct.Memory* %loadMem_4010cb, %struct.Memory** %MEMORY
  %loadMem1_4010ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %6460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6461 = getelementptr inbounds %struct.GPR, %struct.GPR* %6460, i32 0, i32 33
  %6462 = getelementptr inbounds %struct.Reg, %struct.Reg* %6461, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %6462 to i64*
  %6463 = load i64, i64* %PC.i437
  %6464 = add i64 %6463, -2622
  %6465 = load i64, i64* %PC.i437
  %6466 = add i64 %6465, 5
  %6467 = load i64, i64* %PC.i437
  %6468 = add i64 %6467, 5
  store i64 %6468, i64* %PC.i437
  %6469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6470 = load i64, i64* %6469, align 8
  %6471 = add i64 %6470, -8
  %6472 = inttoptr i64 %6471 to i64*
  store i64 %6466, i64* %6472
  store i64 %6471, i64* %6469, align 8
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6464, i64* %6473, align 8
  store %struct.Memory* %loadMem1_4010ce, %struct.Memory** %MEMORY
  %loadMem2_4010ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4010ce = load i64, i64* %3
  %call2_4010ce = call %struct.Memory* @ext_atan(%struct.State* %0, i64 %loadPC_4010ce, %struct.Memory* %loadMem2_4010ce)
  store %struct.Memory* %call2_4010ce, %struct.Memory** %MEMORY
  %loadMem_4010d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6475 = getelementptr inbounds %struct.GPR, %struct.GPR* %6474, i32 0, i32 33
  %6476 = getelementptr inbounds %struct.Reg, %struct.Reg* %6475, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %6476 to i64*
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6478 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6477, i64 0, i64 1
  %YMM1.i436 = bitcast %union.VectorReg* %6478 to %"class.std::bitset"*
  %6479 = bitcast %"class.std::bitset"* %YMM1.i436 to i8*
  %6480 = load i64, i64* %PC.i435
  %6481 = load i64, i64* %PC.i435
  %6482 = add i64 %6481, 8
  store i64 %6482, i64* %PC.i435
  %6483 = load double, double* bitcast (%G_0x7fd__rip__type* @G_0x7fd__rip_ to double*)
  %6484 = bitcast i8* %6479 to double*
  store double %6483, double* %6484, align 1
  %6485 = getelementptr inbounds i8, i8* %6479, i64 8
  %6486 = bitcast i8* %6485 to double*
  store double 0.000000e+00, double* %6486, align 1
  store %struct.Memory* %loadMem_4010d3, %struct.Memory** %MEMORY
  %loadMem_4010db = load %struct.Memory*, %struct.Memory** %MEMORY
  %6487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6488 = getelementptr inbounds %struct.GPR, %struct.GPR* %6487, i32 0, i32 33
  %6489 = getelementptr inbounds %struct.Reg, %struct.Reg* %6488, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %6489 to i64*
  %6490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6491 = getelementptr inbounds %struct.GPR, %struct.GPR* %6490, i32 0, i32 15
  %6492 = getelementptr inbounds %struct.Reg, %struct.Reg* %6491, i32 0, i32 0
  %RBP.i433 = bitcast %union.anon* %6492 to i64*
  %6493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6494 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6493, i64 0, i64 2
  %YMM2.i434 = bitcast %union.VectorReg* %6494 to %"class.std::bitset"*
  %6495 = bitcast %"class.std::bitset"* %YMM2.i434 to i8*
  %6496 = load i64, i64* %RBP.i433
  %6497 = sub i64 %6496, 240
  %6498 = load i64, i64* %PC.i432
  %6499 = add i64 %6498, 8
  store i64 %6499, i64* %PC.i432
  %6500 = inttoptr i64 %6497 to double*
  %6501 = load double, double* %6500
  %6502 = bitcast i8* %6495 to double*
  store double %6501, double* %6502, align 1
  %6503 = getelementptr inbounds i8, i8* %6495, i64 8
  %6504 = bitcast i8* %6503 to double*
  store double 0.000000e+00, double* %6504, align 1
  store %struct.Memory* %loadMem_4010db, %struct.Memory** %MEMORY
  %loadMem_4010e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6506 = getelementptr inbounds %struct.GPR, %struct.GPR* %6505, i32 0, i32 33
  %6507 = getelementptr inbounds %struct.Reg, %struct.Reg* %6506, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %6507 to i64*
  %6508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6509 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6508, i64 0, i64 2
  %YMM2.i430 = bitcast %union.VectorReg* %6509 to %"class.std::bitset"*
  %6510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6511 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6510, i64 0, i64 0
  %XMM0.i431 = bitcast %union.VectorReg* %6511 to %union.vec128_t*
  %6512 = bitcast %"class.std::bitset"* %YMM2.i430 to i8*
  %6513 = bitcast %"class.std::bitset"* %YMM2.i430 to i8*
  %6514 = bitcast %union.vec128_t* %XMM0.i431 to i8*
  %6515 = load i64, i64* %PC.i429
  %6516 = add i64 %6515, 4
  store i64 %6516, i64* %PC.i429
  %6517 = bitcast i8* %6513 to double*
  %6518 = load double, double* %6517, align 1
  %6519 = getelementptr inbounds i8, i8* %6513, i64 8
  %6520 = bitcast i8* %6519 to i64*
  %6521 = load i64, i64* %6520, align 1
  %6522 = bitcast i8* %6514 to double*
  %6523 = load double, double* %6522, align 1
  %6524 = fmul double %6518, %6523
  %6525 = bitcast i8* %6512 to double*
  store double %6524, double* %6525, align 1
  %6526 = getelementptr inbounds i8, i8* %6512, i64 8
  %6527 = bitcast i8* %6526 to i64*
  store i64 %6521, i64* %6527, align 1
  store %struct.Memory* %loadMem_4010e3, %struct.Memory** %MEMORY
  %loadMem_4010e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6529 = getelementptr inbounds %struct.GPR, %struct.GPR* %6528, i32 0, i32 33
  %6530 = getelementptr inbounds %struct.Reg, %struct.Reg* %6529, i32 0, i32 0
  %PC.i426 = bitcast %union.anon* %6530 to i64*
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6532 = getelementptr inbounds %struct.GPR, %struct.GPR* %6531, i32 0, i32 15
  %6533 = getelementptr inbounds %struct.Reg, %struct.Reg* %6532, i32 0, i32 0
  %RBP.i427 = bitcast %union.anon* %6533 to i64*
  %6534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6535 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6534, i64 0, i64 2
  %XMM2.i428 = bitcast %union.VectorReg* %6535 to %union.vec128_t*
  %6536 = load i64, i64* %RBP.i427
  %6537 = sub i64 %6536, 144
  %6538 = bitcast %union.vec128_t* %XMM2.i428 to i8*
  %6539 = load i64, i64* %PC.i426
  %6540 = add i64 %6539, 8
  store i64 %6540, i64* %PC.i426
  %6541 = bitcast i8* %6538 to double*
  %6542 = load double, double* %6541, align 1
  %6543 = inttoptr i64 %6537 to double*
  store double %6542, double* %6543
  store %struct.Memory* %loadMem_4010e7, %struct.Memory** %MEMORY
  %loadMem_4010ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %6544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6545 = getelementptr inbounds %struct.GPR, %struct.GPR* %6544, i32 0, i32 33
  %6546 = getelementptr inbounds %struct.Reg, %struct.Reg* %6545, i32 0, i32 0
  %PC.i424 = bitcast %union.anon* %6546 to i64*
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6548 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6547, i64 0, i64 0
  %YMM0.i425 = bitcast %union.VectorReg* %6548 to %"class.std::bitset"*
  %6549 = bitcast %"class.std::bitset"* %YMM0.i425 to i8*
  %6550 = load i64, i64* %PC.i424
  %6551 = add i64 %6550, 9
  store i64 %6551, i64* %PC.i424
  %6552 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %6553 = bitcast i8* %6549 to double*
  store double %6552, double* %6553, align 1
  %6554 = getelementptr inbounds i8, i8* %6549, i64 8
  %6555 = bitcast i8* %6554 to double*
  store double 0.000000e+00, double* %6555, align 1
  store %struct.Memory* %loadMem_4010ef, %struct.Memory** %MEMORY
  %loadMem_4010f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6557 = getelementptr inbounds %struct.GPR, %struct.GPR* %6556, i32 0, i32 33
  %6558 = getelementptr inbounds %struct.Reg, %struct.Reg* %6557, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %6558 to i64*
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6560 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6559, i64 0, i64 2
  %YMM2.i423 = bitcast %union.VectorReg* %6560 to %"class.std::bitset"*
  %6561 = bitcast %"class.std::bitset"* %YMM2.i423 to i8*
  %6562 = load i64, i64* %PC.i422
  %6563 = add i64 %6562, 9
  store i64 %6563, i64* %PC.i422
  %6564 = load double, double* bitcast (%G_0x6020b0_type* @G_0x6020b0 to double*)
  %6565 = bitcast i8* %6561 to double*
  store double %6564, double* %6565, align 1
  %6566 = getelementptr inbounds i8, i8* %6561, i64 8
  %6567 = bitcast i8* %6566 to double*
  store double 0.000000e+00, double* %6567, align 1
  store %struct.Memory* %loadMem_4010f8, %struct.Memory** %MEMORY
  %loadMem_401101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6569 = getelementptr inbounds %struct.GPR, %struct.GPR* %6568, i32 0, i32 33
  %6570 = getelementptr inbounds %struct.Reg, %struct.Reg* %6569, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %6570 to i64*
  %6571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6572 = getelementptr inbounds %struct.GPR, %struct.GPR* %6571, i32 0, i32 15
  %6573 = getelementptr inbounds %struct.Reg, %struct.Reg* %6572, i32 0, i32 0
  %RBP.i420 = bitcast %union.anon* %6573 to i64*
  %6574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6575 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6574, i64 0, i64 3
  %YMM3.i421 = bitcast %union.VectorReg* %6575 to %"class.std::bitset"*
  %6576 = bitcast %"class.std::bitset"* %YMM3.i421 to i8*
  %6577 = load i64, i64* %RBP.i420
  %6578 = sub i64 %6577, 152
  %6579 = load i64, i64* %PC.i419
  %6580 = add i64 %6579, 8
  store i64 %6580, i64* %PC.i419
  %6581 = inttoptr i64 %6578 to double*
  %6582 = load double, double* %6581
  %6583 = bitcast i8* %6576 to double*
  store double %6582, double* %6583, align 1
  %6584 = getelementptr inbounds i8, i8* %6576, i64 8
  %6585 = bitcast i8* %6584 to double*
  store double 0.000000e+00, double* %6585, align 1
  store %struct.Memory* %loadMem_401101, %struct.Memory** %MEMORY
  %loadMem_401109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6587 = getelementptr inbounds %struct.GPR, %struct.GPR* %6586, i32 0, i32 33
  %6588 = getelementptr inbounds %struct.Reg, %struct.Reg* %6587, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %6588 to i64*
  %6589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6590 = getelementptr inbounds %struct.GPR, %struct.GPR* %6589, i32 0, i32 15
  %6591 = getelementptr inbounds %struct.Reg, %struct.Reg* %6590, i32 0, i32 0
  %RBP.i417 = bitcast %union.anon* %6591 to i64*
  %6592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6593 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6592, i64 0, i64 0
  %XMM0.i418 = bitcast %union.VectorReg* %6593 to %union.vec128_t*
  %6594 = load i64, i64* %RBP.i417
  %6595 = sub i64 %6594, 272
  %6596 = bitcast %union.vec128_t* %XMM0.i418 to i8*
  %6597 = load i64, i64* %PC.i416
  %6598 = add i64 %6597, 8
  store i64 %6598, i64* %PC.i416
  %6599 = bitcast i8* %6596 to double*
  %6600 = load double, double* %6599, align 1
  %6601 = inttoptr i64 %6595 to double*
  store double %6600, double* %6601
  store %struct.Memory* %loadMem_401109, %struct.Memory** %MEMORY
  %loadMem_401111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6603 = getelementptr inbounds %struct.GPR, %struct.GPR* %6602, i32 0, i32 33
  %6604 = getelementptr inbounds %struct.Reg, %struct.Reg* %6603, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %6604 to i64*
  %6605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6606 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6605, i64 0, i64 0
  %YMM0.i415 = bitcast %union.VectorReg* %6606 to %"class.std::bitset"*
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6608 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6607, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %6608 to %union.vec128_t*
  %6609 = bitcast %"class.std::bitset"* %YMM0.i415 to i8*
  %6610 = bitcast %union.vec128_t* %XMM3.i to i8*
  %6611 = load i64, i64* %PC.i414
  %6612 = add i64 %6611, 3
  store i64 %6612, i64* %PC.i414
  %6613 = bitcast i8* %6610 to <2 x i32>*
  %6614 = load <2 x i32>, <2 x i32>* %6613, align 1
  %6615 = getelementptr inbounds i8, i8* %6610, i64 8
  %6616 = bitcast i8* %6615 to <2 x i32>*
  %6617 = load <2 x i32>, <2 x i32>* %6616, align 1
  %6618 = extractelement <2 x i32> %6614, i32 0
  %6619 = bitcast i8* %6609 to i32*
  store i32 %6618, i32* %6619, align 1
  %6620 = extractelement <2 x i32> %6614, i32 1
  %6621 = getelementptr inbounds i8, i8* %6609, i64 4
  %6622 = bitcast i8* %6621 to i32*
  store i32 %6620, i32* %6622, align 1
  %6623 = extractelement <2 x i32> %6617, i32 0
  %6624 = getelementptr inbounds i8, i8* %6609, i64 8
  %6625 = bitcast i8* %6624 to i32*
  store i32 %6623, i32* %6625, align 1
  %6626 = extractelement <2 x i32> %6617, i32 1
  %6627 = getelementptr inbounds i8, i8* %6609, i64 12
  %6628 = bitcast i8* %6627 to i32*
  store i32 %6626, i32* %6628, align 1
  store %struct.Memory* %loadMem_401111, %struct.Memory** %MEMORY
  %loadMem_401114 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6630 = getelementptr inbounds %struct.GPR, %struct.GPR* %6629, i32 0, i32 33
  %6631 = getelementptr inbounds %struct.Reg, %struct.Reg* %6630, i32 0, i32 0
  %PC.i411 = bitcast %union.anon* %6631 to i64*
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6633 = getelementptr inbounds %struct.GPR, %struct.GPR* %6632, i32 0, i32 15
  %6634 = getelementptr inbounds %struct.Reg, %struct.Reg* %6633, i32 0, i32 0
  %RBP.i412 = bitcast %union.anon* %6634 to i64*
  %6635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6636 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6635, i64 0, i64 1
  %XMM1.i413 = bitcast %union.VectorReg* %6636 to %union.vec128_t*
  %6637 = load i64, i64* %RBP.i412
  %6638 = sub i64 %6637, 280
  %6639 = bitcast %union.vec128_t* %XMM1.i413 to i8*
  %6640 = load i64, i64* %PC.i411
  %6641 = add i64 %6640, 8
  store i64 %6641, i64* %PC.i411
  %6642 = bitcast i8* %6639 to double*
  %6643 = load double, double* %6642, align 1
  %6644 = inttoptr i64 %6638 to double*
  store double %6643, double* %6644
  store %struct.Memory* %loadMem_401114, %struct.Memory** %MEMORY
  %loadMem_40111c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6646 = getelementptr inbounds %struct.GPR, %struct.GPR* %6645, i32 0, i32 33
  %6647 = getelementptr inbounds %struct.Reg, %struct.Reg* %6646, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %6647 to i64*
  %6648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6649 = getelementptr inbounds %struct.GPR, %struct.GPR* %6648, i32 0, i32 15
  %6650 = getelementptr inbounds %struct.Reg, %struct.Reg* %6649, i32 0, i32 0
  %RBP.i409 = bitcast %union.anon* %6650 to i64*
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6652 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6651, i64 0, i64 2
  %XMM2.i410 = bitcast %union.VectorReg* %6652 to %union.vec128_t*
  %6653 = load i64, i64* %RBP.i409
  %6654 = sub i64 %6653, 288
  %6655 = bitcast %union.vec128_t* %XMM2.i410 to i8*
  %6656 = load i64, i64* %PC.i408
  %6657 = add i64 %6656, 8
  store i64 %6657, i64* %PC.i408
  %6658 = bitcast i8* %6655 to double*
  %6659 = load double, double* %6658, align 1
  %6660 = inttoptr i64 %6654 to double*
  store double %6659, double* %6660
  store %struct.Memory* %loadMem_40111c, %struct.Memory** %MEMORY
  %loadMem1_401124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6662 = getelementptr inbounds %struct.GPR, %struct.GPR* %6661, i32 0, i32 33
  %6663 = getelementptr inbounds %struct.Reg, %struct.Reg* %6662, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %6663 to i64*
  %6664 = load i64, i64* %PC.i407
  %6665 = add i64 %6664, -2596
  %6666 = load i64, i64* %PC.i407
  %6667 = add i64 %6666, 5
  %6668 = load i64, i64* %PC.i407
  %6669 = add i64 %6668, 5
  store i64 %6669, i64* %PC.i407
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6671 = load i64, i64* %6670, align 8
  %6672 = add i64 %6671, -8
  %6673 = inttoptr i64 %6672 to i64*
  store i64 %6667, i64* %6673
  store i64 %6672, i64* %6670, align 8
  %6674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6665, i64* %6674, align 8
  store %struct.Memory* %loadMem1_401124, %struct.Memory** %MEMORY
  %loadMem2_401124 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401124 = load i64, i64* %3
  %call2_401124 = call %struct.Memory* @ext_sin(%struct.State* %0, i64 %loadPC_401124, %struct.Memory* %loadMem2_401124)
  store %struct.Memory* %call2_401124, %struct.Memory** %MEMORY
  %loadMem_401129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6676 = getelementptr inbounds %struct.GPR, %struct.GPR* %6675, i32 0, i32 33
  %6677 = getelementptr inbounds %struct.Reg, %struct.Reg* %6676, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %6677 to i64*
  %6678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6679 = getelementptr inbounds %struct.GPR, %struct.GPR* %6678, i32 0, i32 15
  %6680 = getelementptr inbounds %struct.Reg, %struct.Reg* %6679, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %6680 to i64*
  %6681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6682 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6681, i64 0, i64 1
  %YMM1.i406 = bitcast %union.VectorReg* %6682 to %"class.std::bitset"*
  %6683 = bitcast %"class.std::bitset"* %YMM1.i406 to i8*
  %6684 = load i64, i64* %RBP.i405
  %6685 = sub i64 %6684, 288
  %6686 = load i64, i64* %PC.i404
  %6687 = add i64 %6686, 8
  store i64 %6687, i64* %PC.i404
  %6688 = inttoptr i64 %6685 to double*
  %6689 = load double, double* %6688
  %6690 = bitcast i8* %6683 to double*
  store double %6689, double* %6690, align 1
  %6691 = getelementptr inbounds i8, i8* %6683, i64 8
  %6692 = bitcast i8* %6691 to double*
  store double 0.000000e+00, double* %6692, align 1
  store %struct.Memory* %loadMem_401129, %struct.Memory** %MEMORY
  %loadMem_401131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6694 = getelementptr inbounds %struct.GPR, %struct.GPR* %6693, i32 0, i32 33
  %6695 = getelementptr inbounds %struct.Reg, %struct.Reg* %6694, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %6695 to i64*
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6697 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6696, i64 0, i64 1
  %YMM1.i402 = bitcast %union.VectorReg* %6697 to %"class.std::bitset"*
  %6698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6699 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6698, i64 0, i64 0
  %XMM0.i403 = bitcast %union.VectorReg* %6699 to %union.vec128_t*
  %6700 = bitcast %"class.std::bitset"* %YMM1.i402 to i8*
  %6701 = bitcast %"class.std::bitset"* %YMM1.i402 to i8*
  %6702 = bitcast %union.vec128_t* %XMM0.i403 to i8*
  %6703 = load i64, i64* %PC.i401
  %6704 = add i64 %6703, 4
  store i64 %6704, i64* %PC.i401
  %6705 = bitcast i8* %6701 to double*
  %6706 = load double, double* %6705, align 1
  %6707 = getelementptr inbounds i8, i8* %6701, i64 8
  %6708 = bitcast i8* %6707 to i64*
  %6709 = load i64, i64* %6708, align 1
  %6710 = bitcast i8* %6702 to double*
  %6711 = load double, double* %6710, align 1
  %6712 = fmul double %6706, %6711
  %6713 = bitcast i8* %6700 to double*
  store double %6712, double* %6713, align 1
  %6714 = getelementptr inbounds i8, i8* %6700, i64 8
  %6715 = bitcast i8* %6714 to i64*
  store i64 %6709, i64* %6715, align 1
  store %struct.Memory* %loadMem_401131, %struct.Memory** %MEMORY
  %loadMem_401135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6717 = getelementptr inbounds %struct.GPR, %struct.GPR* %6716, i32 0, i32 33
  %6718 = getelementptr inbounds %struct.Reg, %struct.Reg* %6717, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %6718 to i64*
  %6719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6720 = getelementptr inbounds %struct.GPR, %struct.GPR* %6719, i32 0, i32 15
  %6721 = getelementptr inbounds %struct.Reg, %struct.Reg* %6720, i32 0, i32 0
  %RBP.i399 = bitcast %union.anon* %6721 to i64*
  %6722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6723 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6722, i64 0, i64 0
  %YMM0.i400 = bitcast %union.VectorReg* %6723 to %"class.std::bitset"*
  %6724 = bitcast %"class.std::bitset"* %YMM0.i400 to i8*
  %6725 = load i64, i64* %RBP.i399
  %6726 = sub i64 %6725, 152
  %6727 = load i64, i64* %PC.i398
  %6728 = add i64 %6727, 8
  store i64 %6728, i64* %PC.i398
  %6729 = inttoptr i64 %6726 to double*
  %6730 = load double, double* %6729
  %6731 = bitcast i8* %6724 to double*
  store double %6730, double* %6731, align 1
  %6732 = getelementptr inbounds i8, i8* %6724, i64 8
  %6733 = bitcast i8* %6732 to double*
  store double 0.000000e+00, double* %6733, align 1
  store %struct.Memory* %loadMem_401135, %struct.Memory** %MEMORY
  %loadMem_40113d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6735 = getelementptr inbounds %struct.GPR, %struct.GPR* %6734, i32 0, i32 33
  %6736 = getelementptr inbounds %struct.Reg, %struct.Reg* %6735, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %6736 to i64*
  %6737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6738 = getelementptr inbounds %struct.GPR, %struct.GPR* %6737, i32 0, i32 15
  %6739 = getelementptr inbounds %struct.Reg, %struct.Reg* %6738, i32 0, i32 0
  %RBP.i396 = bitcast %union.anon* %6739 to i64*
  %6740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6741 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6740, i64 0, i64 1
  %XMM1.i397 = bitcast %union.VectorReg* %6741 to %union.vec128_t*
  %6742 = load i64, i64* %RBP.i396
  %6743 = sub i64 %6742, 296
  %6744 = bitcast %union.vec128_t* %XMM1.i397 to i8*
  %6745 = load i64, i64* %PC.i395
  %6746 = add i64 %6745, 8
  store i64 %6746, i64* %PC.i395
  %6747 = bitcast i8* %6744 to double*
  %6748 = load double, double* %6747, align 1
  %6749 = inttoptr i64 %6743 to double*
  store double %6748, double* %6749
  store %struct.Memory* %loadMem_40113d, %struct.Memory** %MEMORY
  %loadMem1_401145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6751 = getelementptr inbounds %struct.GPR, %struct.GPR* %6750, i32 0, i32 33
  %6752 = getelementptr inbounds %struct.Reg, %struct.Reg* %6751, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %6752 to i64*
  %6753 = load i64, i64* %PC.i394
  %6754 = add i64 %6753, -2693
  %6755 = load i64, i64* %PC.i394
  %6756 = add i64 %6755, 5
  %6757 = load i64, i64* %PC.i394
  %6758 = add i64 %6757, 5
  store i64 %6758, i64* %PC.i394
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6760 = load i64, i64* %6759, align 8
  %6761 = add i64 %6760, -8
  %6762 = inttoptr i64 %6761 to i64*
  store i64 %6756, i64* %6762
  store i64 %6761, i64* %6759, align 8
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6754, i64* %6763, align 8
  store %struct.Memory* %loadMem1_401145, %struct.Memory** %MEMORY
  %loadMem2_401145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401145 = load i64, i64* %3
  %call2_401145 = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_401145, %struct.Memory* %loadMem2_401145)
  store %struct.Memory* %call2_401145, %struct.Memory** %MEMORY
  %loadMem_40114a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6765 = getelementptr inbounds %struct.GPR, %struct.GPR* %6764, i32 0, i32 33
  %6766 = getelementptr inbounds %struct.Reg, %struct.Reg* %6765, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %6766 to i64*
  %6767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6768 = getelementptr inbounds %struct.GPR, %struct.GPR* %6767, i32 0, i32 15
  %6769 = getelementptr inbounds %struct.Reg, %struct.Reg* %6768, i32 0, i32 0
  %RBP.i392 = bitcast %union.anon* %6769 to i64*
  %6770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6771 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6770, i64 0, i64 1
  %YMM1.i393 = bitcast %union.VectorReg* %6771 to %"class.std::bitset"*
  %6772 = bitcast %"class.std::bitset"* %YMM1.i393 to i8*
  %6773 = load i64, i64* %RBP.i392
  %6774 = sub i64 %6773, 296
  %6775 = load i64, i64* %PC.i391
  %6776 = add i64 %6775, 8
  store i64 %6776, i64* %PC.i391
  %6777 = inttoptr i64 %6774 to double*
  %6778 = load double, double* %6777
  %6779 = bitcast i8* %6772 to double*
  store double %6778, double* %6779, align 1
  %6780 = getelementptr inbounds i8, i8* %6772, i64 8
  %6781 = bitcast i8* %6780 to double*
  store double 0.000000e+00, double* %6781, align 1
  store %struct.Memory* %loadMem_40114a, %struct.Memory** %MEMORY
  %loadMem_401152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6783 = getelementptr inbounds %struct.GPR, %struct.GPR* %6782, i32 0, i32 33
  %6784 = getelementptr inbounds %struct.Reg, %struct.Reg* %6783, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %6784 to i64*
  %6785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6786 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6785, i64 0, i64 1
  %YMM1.i389 = bitcast %union.VectorReg* %6786 to %"class.std::bitset"*
  %6787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6788 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6787, i64 0, i64 0
  %XMM0.i390 = bitcast %union.VectorReg* %6788 to %union.vec128_t*
  %6789 = bitcast %"class.std::bitset"* %YMM1.i389 to i8*
  %6790 = bitcast %"class.std::bitset"* %YMM1.i389 to i8*
  %6791 = bitcast %union.vec128_t* %XMM0.i390 to i8*
  %6792 = load i64, i64* %PC.i388
  %6793 = add i64 %6792, 4
  store i64 %6793, i64* %PC.i388
  %6794 = bitcast i8* %6790 to double*
  %6795 = load double, double* %6794, align 1
  %6796 = getelementptr inbounds i8, i8* %6790, i64 8
  %6797 = bitcast i8* %6796 to i64*
  %6798 = load i64, i64* %6797, align 1
  %6799 = bitcast i8* %6791 to double*
  %6800 = load double, double* %6799, align 1
  %6801 = fmul double %6795, %6800
  %6802 = bitcast i8* %6789 to double*
  store double %6801, double* %6802, align 1
  %6803 = getelementptr inbounds i8, i8* %6789, i64 8
  %6804 = bitcast i8* %6803 to i64*
  store i64 %6798, i64* %6804, align 1
  store %struct.Memory* %loadMem_401152, %struct.Memory** %MEMORY
  %loadMem_401156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 33
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %6807 to i64*
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 15
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %RBP.i386 = bitcast %union.anon* %6810 to i64*
  %6811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6812 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6811, i64 0, i64 0
  %YMM0.i387 = bitcast %union.VectorReg* %6812 to %"class.std::bitset"*
  %6813 = bitcast %"class.std::bitset"* %YMM0.i387 to i8*
  %6814 = load i64, i64* %RBP.i386
  %6815 = sub i64 %6814, 144
  %6816 = load i64, i64* %PC.i385
  %6817 = add i64 %6816, 8
  store i64 %6817, i64* %PC.i385
  %6818 = inttoptr i64 %6815 to double*
  %6819 = load double, double* %6818
  %6820 = bitcast i8* %6813 to double*
  store double %6819, double* %6820, align 1
  %6821 = getelementptr inbounds i8, i8* %6813, i64 8
  %6822 = bitcast i8* %6821 to double*
  store double 0.000000e+00, double* %6822, align 1
  store %struct.Memory* %loadMem_401156, %struct.Memory** %MEMORY
  %loadMem_40115e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6824 = getelementptr inbounds %struct.GPR, %struct.GPR* %6823, i32 0, i32 33
  %6825 = getelementptr inbounds %struct.Reg, %struct.Reg* %6824, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %6825 to i64*
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6827 = getelementptr inbounds %struct.GPR, %struct.GPR* %6826, i32 0, i32 15
  %6828 = getelementptr inbounds %struct.Reg, %struct.Reg* %6827, i32 0, i32 0
  %RBP.i383 = bitcast %union.anon* %6828 to i64*
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6830 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6829, i64 0, i64 0
  %YMM0.i384 = bitcast %union.VectorReg* %6830 to %"class.std::bitset"*
  %6831 = bitcast %"class.std::bitset"* %YMM0.i384 to i8*
  %6832 = bitcast %"class.std::bitset"* %YMM0.i384 to i8*
  %6833 = load i64, i64* %RBP.i383
  %6834 = sub i64 %6833, 152
  %6835 = load i64, i64* %PC.i382
  %6836 = add i64 %6835, 8
  store i64 %6836, i64* %PC.i382
  %6837 = bitcast i8* %6832 to double*
  %6838 = load double, double* %6837, align 1
  %6839 = getelementptr inbounds i8, i8* %6832, i64 8
  %6840 = bitcast i8* %6839 to i64*
  %6841 = load i64, i64* %6840, align 1
  %6842 = inttoptr i64 %6834 to double*
  %6843 = load double, double* %6842
  %6844 = fadd double %6838, %6843
  %6845 = bitcast i8* %6831 to double*
  store double %6844, double* %6845, align 1
  %6846 = getelementptr inbounds i8, i8* %6831, i64 8
  %6847 = bitcast i8* %6846 to i64*
  store i64 %6841, i64* %6847, align 1
  store %struct.Memory* %loadMem_40115e, %struct.Memory** %MEMORY
  %loadMem_401166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6849 = getelementptr inbounds %struct.GPR, %struct.GPR* %6848, i32 0, i32 33
  %6850 = getelementptr inbounds %struct.Reg, %struct.Reg* %6849, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %6850 to i64*
  %6851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6852 = getelementptr inbounds %struct.GPR, %struct.GPR* %6851, i32 0, i32 15
  %6853 = getelementptr inbounds %struct.Reg, %struct.Reg* %6852, i32 0, i32 0
  %RBP.i380 = bitcast %union.anon* %6853 to i64*
  %6854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6855 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6854, i64 0, i64 1
  %XMM1.i381 = bitcast %union.VectorReg* %6855 to %union.vec128_t*
  %6856 = load i64, i64* %RBP.i380
  %6857 = sub i64 %6856, 304
  %6858 = bitcast %union.vec128_t* %XMM1.i381 to i8*
  %6859 = load i64, i64* %PC.i379
  %6860 = add i64 %6859, 8
  store i64 %6860, i64* %PC.i379
  %6861 = bitcast i8* %6858 to double*
  %6862 = load double, double* %6861, align 1
  %6863 = inttoptr i64 %6857 to double*
  store double %6862, double* %6863
  store %struct.Memory* %loadMem_401166, %struct.Memory** %MEMORY
  %loadMem1_40116e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6865 = getelementptr inbounds %struct.GPR, %struct.GPR* %6864, i32 0, i32 33
  %6866 = getelementptr inbounds %struct.Reg, %struct.Reg* %6865, i32 0, i32 0
  %PC.i378 = bitcast %union.anon* %6866 to i64*
  %6867 = load i64, i64* %PC.i378
  %6868 = add i64 %6867, -2734
  %6869 = load i64, i64* %PC.i378
  %6870 = add i64 %6869, 5
  %6871 = load i64, i64* %PC.i378
  %6872 = add i64 %6871, 5
  store i64 %6872, i64* %PC.i378
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6874 = load i64, i64* %6873, align 8
  %6875 = add i64 %6874, -8
  %6876 = inttoptr i64 %6875 to i64*
  store i64 %6870, i64* %6876
  store i64 %6875, i64* %6873, align 8
  %6877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6868, i64* %6877, align 8
  store %struct.Memory* %loadMem1_40116e, %struct.Memory** %MEMORY
  %loadMem2_40116e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40116e = load i64, i64* %3
  %call2_40116e = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_40116e, %struct.Memory* %loadMem2_40116e)
  store %struct.Memory* %call2_40116e, %struct.Memory** %MEMORY
  %loadMem_401173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6879 = getelementptr inbounds %struct.GPR, %struct.GPR* %6878, i32 0, i32 33
  %6880 = getelementptr inbounds %struct.Reg, %struct.Reg* %6879, i32 0, i32 0
  %PC.i375 = bitcast %union.anon* %6880 to i64*
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6882 = getelementptr inbounds %struct.GPR, %struct.GPR* %6881, i32 0, i32 15
  %6883 = getelementptr inbounds %struct.Reg, %struct.Reg* %6882, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %6883 to i64*
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6885 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6884, i64 0, i64 1
  %YMM1.i377 = bitcast %union.VectorReg* %6885 to %"class.std::bitset"*
  %6886 = bitcast %"class.std::bitset"* %YMM1.i377 to i8*
  %6887 = load i64, i64* %RBP.i376
  %6888 = sub i64 %6887, 144
  %6889 = load i64, i64* %PC.i375
  %6890 = add i64 %6889, 8
  store i64 %6890, i64* %PC.i375
  %6891 = inttoptr i64 %6888 to double*
  %6892 = load double, double* %6891
  %6893 = bitcast i8* %6886 to double*
  store double %6892, double* %6893, align 1
  %6894 = getelementptr inbounds i8, i8* %6886, i64 8
  %6895 = bitcast i8* %6894 to double*
  store double 0.000000e+00, double* %6895, align 1
  store %struct.Memory* %loadMem_401173, %struct.Memory** %MEMORY
  %loadMem_40117b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6897 = getelementptr inbounds %struct.GPR, %struct.GPR* %6896, i32 0, i32 33
  %6898 = getelementptr inbounds %struct.Reg, %struct.Reg* %6897, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %6898 to i64*
  %6899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6900 = getelementptr inbounds %struct.GPR, %struct.GPR* %6899, i32 0, i32 15
  %6901 = getelementptr inbounds %struct.Reg, %struct.Reg* %6900, i32 0, i32 0
  %RBP.i373 = bitcast %union.anon* %6901 to i64*
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6903 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6902, i64 0, i64 1
  %YMM1.i374 = bitcast %union.VectorReg* %6903 to %"class.std::bitset"*
  %6904 = bitcast %"class.std::bitset"* %YMM1.i374 to i8*
  %6905 = bitcast %"class.std::bitset"* %YMM1.i374 to i8*
  %6906 = load i64, i64* %RBP.i373
  %6907 = sub i64 %6906, 152
  %6908 = load i64, i64* %PC.i372
  %6909 = add i64 %6908, 8
  store i64 %6909, i64* %PC.i372
  %6910 = bitcast i8* %6905 to double*
  %6911 = load double, double* %6910, align 1
  %6912 = getelementptr inbounds i8, i8* %6905, i64 8
  %6913 = bitcast i8* %6912 to i64*
  %6914 = load i64, i64* %6913, align 1
  %6915 = inttoptr i64 %6907 to double*
  %6916 = load double, double* %6915
  %6917 = fsub double %6911, %6916
  %6918 = bitcast i8* %6904 to double*
  store double %6917, double* %6918, align 1
  %6919 = getelementptr inbounds i8, i8* %6904, i64 8
  %6920 = bitcast i8* %6919 to i64*
  store i64 %6914, i64* %6920, align 1
  store %struct.Memory* %loadMem_40117b, %struct.Memory** %MEMORY
  %loadMem_401183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6922 = getelementptr inbounds %struct.GPR, %struct.GPR* %6921, i32 0, i32 33
  %6923 = getelementptr inbounds %struct.Reg, %struct.Reg* %6922, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %6923 to i64*
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6925 = getelementptr inbounds %struct.GPR, %struct.GPR* %6924, i32 0, i32 15
  %6926 = getelementptr inbounds %struct.Reg, %struct.Reg* %6925, i32 0, i32 0
  %RBP.i370 = bitcast %union.anon* %6926 to i64*
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6928 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6927, i64 0, i64 0
  %XMM0.i371 = bitcast %union.VectorReg* %6928 to %union.vec128_t*
  %6929 = load i64, i64* %RBP.i370
  %6930 = sub i64 %6929, 312
  %6931 = bitcast %union.vec128_t* %XMM0.i371 to i8*
  %6932 = load i64, i64* %PC.i369
  %6933 = add i64 %6932, 8
  store i64 %6933, i64* %PC.i369
  %6934 = bitcast i8* %6931 to double*
  %6935 = load double, double* %6934, align 1
  %6936 = inttoptr i64 %6930 to double*
  store double %6935, double* %6936
  store %struct.Memory* %loadMem_401183, %struct.Memory** %MEMORY
  %loadMem_40118b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6938 = getelementptr inbounds %struct.GPR, %struct.GPR* %6937, i32 0, i32 33
  %6939 = getelementptr inbounds %struct.Reg, %struct.Reg* %6938, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %6939 to i64*
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6941 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6940, i64 0, i64 0
  %YMM0.i367 = bitcast %union.VectorReg* %6941 to %"class.std::bitset"*
  %6942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6943 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6942, i64 0, i64 1
  %XMM1.i368 = bitcast %union.VectorReg* %6943 to %union.vec128_t*
  %6944 = bitcast %"class.std::bitset"* %YMM0.i367 to i8*
  %6945 = bitcast %union.vec128_t* %XMM1.i368 to i8*
  %6946 = load i64, i64* %PC.i366
  %6947 = add i64 %6946, 3
  store i64 %6947, i64* %PC.i366
  %6948 = bitcast i8* %6945 to <2 x i32>*
  %6949 = load <2 x i32>, <2 x i32>* %6948, align 1
  %6950 = getelementptr inbounds i8, i8* %6945, i64 8
  %6951 = bitcast i8* %6950 to <2 x i32>*
  %6952 = load <2 x i32>, <2 x i32>* %6951, align 1
  %6953 = extractelement <2 x i32> %6949, i32 0
  %6954 = bitcast i8* %6944 to i32*
  store i32 %6953, i32* %6954, align 1
  %6955 = extractelement <2 x i32> %6949, i32 1
  %6956 = getelementptr inbounds i8, i8* %6944, i64 4
  %6957 = bitcast i8* %6956 to i32*
  store i32 %6955, i32* %6957, align 1
  %6958 = extractelement <2 x i32> %6952, i32 0
  %6959 = getelementptr inbounds i8, i8* %6944, i64 8
  %6960 = bitcast i8* %6959 to i32*
  store i32 %6958, i32* %6960, align 1
  %6961 = extractelement <2 x i32> %6952, i32 1
  %6962 = getelementptr inbounds i8, i8* %6944, i64 12
  %6963 = bitcast i8* %6962 to i32*
  store i32 %6961, i32* %6963, align 1
  store %struct.Memory* %loadMem_40118b, %struct.Memory** %MEMORY
  %loadMem1_40118e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6965 = getelementptr inbounds %struct.GPR, %struct.GPR* %6964, i32 0, i32 33
  %6966 = getelementptr inbounds %struct.Reg, %struct.Reg* %6965, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %6966 to i64*
  %6967 = load i64, i64* %PC.i365
  %6968 = add i64 %6967, -2766
  %6969 = load i64, i64* %PC.i365
  %6970 = add i64 %6969, 5
  %6971 = load i64, i64* %PC.i365
  %6972 = add i64 %6971, 5
  store i64 %6972, i64* %PC.i365
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6974 = load i64, i64* %6973, align 8
  %6975 = add i64 %6974, -8
  %6976 = inttoptr i64 %6975 to i64*
  store i64 %6970, i64* %6976
  store i64 %6975, i64* %6973, align 8
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6968, i64* %6977, align 8
  store %struct.Memory* %loadMem1_40118e, %struct.Memory** %MEMORY
  %loadMem2_40118e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40118e = load i64, i64* %3
  %call2_40118e = call %struct.Memory* @ext_cos(%struct.State* %0, i64 %loadPC_40118e, %struct.Memory* %loadMem2_40118e)
  store %struct.Memory* %call2_40118e, %struct.Memory** %MEMORY
  %loadMem_401193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6979 = getelementptr inbounds %struct.GPR, %struct.GPR* %6978, i32 0, i32 33
  %6980 = getelementptr inbounds %struct.Reg, %struct.Reg* %6979, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %6980 to i64*
  %6981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6982 = getelementptr inbounds %struct.GPR, %struct.GPR* %6981, i32 0, i32 15
  %6983 = getelementptr inbounds %struct.Reg, %struct.Reg* %6982, i32 0, i32 0
  %RBP.i363 = bitcast %union.anon* %6983 to i64*
  %6984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6985 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6984, i64 0, i64 1
  %YMM1.i364 = bitcast %union.VectorReg* %6985 to %"class.std::bitset"*
  %6986 = bitcast %"class.std::bitset"* %YMM1.i364 to i8*
  %6987 = load i64, i64* %RBP.i363
  %6988 = sub i64 %6987, 312
  %6989 = load i64, i64* %PC.i362
  %6990 = add i64 %6989, 8
  store i64 %6990, i64* %PC.i362
  %6991 = inttoptr i64 %6988 to double*
  %6992 = load double, double* %6991
  %6993 = bitcast i8* %6986 to double*
  store double %6992, double* %6993, align 1
  %6994 = getelementptr inbounds i8, i8* %6986, i64 8
  %6995 = bitcast i8* %6994 to double*
  store double 0.000000e+00, double* %6995, align 1
  store %struct.Memory* %loadMem_401193, %struct.Memory** %MEMORY
  %loadMem_40119b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6997 = getelementptr inbounds %struct.GPR, %struct.GPR* %6996, i32 0, i32 33
  %6998 = getelementptr inbounds %struct.Reg, %struct.Reg* %6997, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %6998 to i64*
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7000 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6999, i64 0, i64 1
  %YMM1.i360 = bitcast %union.VectorReg* %7000 to %"class.std::bitset"*
  %7001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7002 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7001, i64 0, i64 0
  %XMM0.i361 = bitcast %union.VectorReg* %7002 to %union.vec128_t*
  %7003 = bitcast %"class.std::bitset"* %YMM1.i360 to i8*
  %7004 = bitcast %"class.std::bitset"* %YMM1.i360 to i8*
  %7005 = bitcast %union.vec128_t* %XMM0.i361 to i8*
  %7006 = load i64, i64* %PC.i359
  %7007 = add i64 %7006, 4
  store i64 %7007, i64* %PC.i359
  %7008 = bitcast i8* %7004 to double*
  %7009 = load double, double* %7008, align 1
  %7010 = getelementptr inbounds i8, i8* %7004, i64 8
  %7011 = bitcast i8* %7010 to i64*
  %7012 = load i64, i64* %7011, align 1
  %7013 = bitcast i8* %7005 to double*
  %7014 = load double, double* %7013, align 1
  %7015 = fadd double %7009, %7014
  %7016 = bitcast i8* %7003 to double*
  store double %7015, double* %7016, align 1
  %7017 = getelementptr inbounds i8, i8* %7003, i64 8
  %7018 = bitcast i8* %7017 to i64*
  store i64 %7012, i64* %7018, align 1
  store %struct.Memory* %loadMem_40119b, %struct.Memory** %MEMORY
  %loadMem_40119f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7020 = getelementptr inbounds %struct.GPR, %struct.GPR* %7019, i32 0, i32 33
  %7021 = getelementptr inbounds %struct.Reg, %struct.Reg* %7020, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %7021 to i64*
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7023 = getelementptr inbounds %struct.GPR, %struct.GPR* %7022, i32 0, i32 15
  %7024 = getelementptr inbounds %struct.Reg, %struct.Reg* %7023, i32 0, i32 0
  %RBP.i357 = bitcast %union.anon* %7024 to i64*
  %7025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7026 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7025, i64 0, i64 0
  %YMM0.i358 = bitcast %union.VectorReg* %7026 to %"class.std::bitset"*
  %7027 = bitcast %"class.std::bitset"* %YMM0.i358 to i8*
  %7028 = load i64, i64* %RBP.i357
  %7029 = sub i64 %7028, 280
  %7030 = load i64, i64* %PC.i356
  %7031 = add i64 %7030, 8
  store i64 %7031, i64* %PC.i356
  %7032 = inttoptr i64 %7029 to double*
  %7033 = load double, double* %7032
  %7034 = bitcast i8* %7027 to double*
  store double %7033, double* %7034, align 1
  %7035 = getelementptr inbounds i8, i8* %7027, i64 8
  %7036 = bitcast i8* %7035 to double*
  store double 0.000000e+00, double* %7036, align 1
  store %struct.Memory* %loadMem_40119f, %struct.Memory** %MEMORY
  %loadMem_4011a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7038 = getelementptr inbounds %struct.GPR, %struct.GPR* %7037, i32 0, i32 33
  %7039 = getelementptr inbounds %struct.Reg, %struct.Reg* %7038, i32 0, i32 0
  %PC.i353 = bitcast %union.anon* %7039 to i64*
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7041 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7040, i64 0, i64 1
  %YMM1.i354 = bitcast %union.VectorReg* %7041 to %"class.std::bitset"*
  %7042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7043 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7042, i64 0, i64 0
  %XMM0.i355 = bitcast %union.VectorReg* %7043 to %union.vec128_t*
  %7044 = bitcast %"class.std::bitset"* %YMM1.i354 to i8*
  %7045 = bitcast %"class.std::bitset"* %YMM1.i354 to i8*
  %7046 = bitcast %union.vec128_t* %XMM0.i355 to i8*
  %7047 = load i64, i64* %PC.i353
  %7048 = add i64 %7047, 4
  store i64 %7048, i64* %PC.i353
  %7049 = bitcast i8* %7045 to double*
  %7050 = load double, double* %7049, align 1
  %7051 = getelementptr inbounds i8, i8* %7045, i64 8
  %7052 = bitcast i8* %7051 to i64*
  %7053 = load i64, i64* %7052, align 1
  %7054 = bitcast i8* %7046 to double*
  %7055 = load double, double* %7054, align 1
  %7056 = fsub double %7050, %7055
  %7057 = bitcast i8* %7044 to double*
  store double %7056, double* %7057, align 1
  %7058 = getelementptr inbounds i8, i8* %7044, i64 8
  %7059 = bitcast i8* %7058 to i64*
  store i64 %7053, i64* %7059, align 1
  store %struct.Memory* %loadMem_4011a7, %struct.Memory** %MEMORY
  %loadMem_4011ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %7060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7061 = getelementptr inbounds %struct.GPR, %struct.GPR* %7060, i32 0, i32 33
  %7062 = getelementptr inbounds %struct.Reg, %struct.Reg* %7061, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %7062 to i64*
  %7063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7064 = getelementptr inbounds %struct.GPR, %struct.GPR* %7063, i32 0, i32 15
  %7065 = getelementptr inbounds %struct.Reg, %struct.Reg* %7064, i32 0, i32 0
  %RBP.i351 = bitcast %union.anon* %7065 to i64*
  %7066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7067 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7066, i64 0, i64 2
  %YMM2.i352 = bitcast %union.VectorReg* %7067 to %"class.std::bitset"*
  %7068 = bitcast %"class.std::bitset"* %YMM2.i352 to i8*
  %7069 = load i64, i64* %RBP.i351
  %7070 = sub i64 %7069, 304
  %7071 = load i64, i64* %PC.i350
  %7072 = add i64 %7071, 8
  store i64 %7072, i64* %PC.i350
  %7073 = inttoptr i64 %7070 to double*
  %7074 = load double, double* %7073
  %7075 = bitcast i8* %7068 to double*
  store double %7074, double* %7075, align 1
  %7076 = getelementptr inbounds i8, i8* %7068, i64 8
  %7077 = bitcast i8* %7076 to double*
  store double 0.000000e+00, double* %7077, align 1
  store %struct.Memory* %loadMem_4011ab, %struct.Memory** %MEMORY
  %loadMem_4011b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7079 = getelementptr inbounds %struct.GPR, %struct.GPR* %7078, i32 0, i32 33
  %7080 = getelementptr inbounds %struct.Reg, %struct.Reg* %7079, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %7080 to i64*
  %7081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7082 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7081, i64 0, i64 2
  %YMM2.i348 = bitcast %union.VectorReg* %7082 to %"class.std::bitset"*
  %7083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7084 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7083, i64 0, i64 1
  %XMM1.i349 = bitcast %union.VectorReg* %7084 to %union.vec128_t*
  %7085 = bitcast %"class.std::bitset"* %YMM2.i348 to i8*
  %7086 = bitcast %"class.std::bitset"* %YMM2.i348 to i8*
  %7087 = bitcast %union.vec128_t* %XMM1.i349 to i8*
  %7088 = load i64, i64* %PC.i347
  %7089 = add i64 %7088, 4
  store i64 %7089, i64* %PC.i347
  %7090 = bitcast i8* %7086 to double*
  %7091 = load double, double* %7090, align 1
  %7092 = getelementptr inbounds i8, i8* %7086, i64 8
  %7093 = bitcast i8* %7092 to i64*
  %7094 = load i64, i64* %7093, align 1
  %7095 = bitcast i8* %7087 to double*
  %7096 = load double, double* %7095, align 1
  %7097 = fdiv double %7091, %7096
  %7098 = bitcast i8* %7085 to double*
  store double %7097, double* %7098, align 1
  %7099 = getelementptr inbounds i8, i8* %7085, i64 8
  %7100 = bitcast i8* %7099 to i64*
  store i64 %7094, i64* %7100, align 1
  store %struct.Memory* %loadMem_4011b3, %struct.Memory** %MEMORY
  %loadMem_4011b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7102 = getelementptr inbounds %struct.GPR, %struct.GPR* %7101, i32 0, i32 33
  %7103 = getelementptr inbounds %struct.Reg, %struct.Reg* %7102, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %7103 to i64*
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7105 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7104, i64 0, i64 0
  %YMM0.i345 = bitcast %union.VectorReg* %7105 to %"class.std::bitset"*
  %7106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7107 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7106, i64 0, i64 2
  %XMM2.i346 = bitcast %union.VectorReg* %7107 to %union.vec128_t*
  %7108 = bitcast %"class.std::bitset"* %YMM0.i345 to i8*
  %7109 = bitcast %union.vec128_t* %XMM2.i346 to i8*
  %7110 = load i64, i64* %PC.i344
  %7111 = add i64 %7110, 3
  store i64 %7111, i64* %PC.i344
  %7112 = bitcast i8* %7109 to <2 x i32>*
  %7113 = load <2 x i32>, <2 x i32>* %7112, align 1
  %7114 = getelementptr inbounds i8, i8* %7109, i64 8
  %7115 = bitcast i8* %7114 to <2 x i32>*
  %7116 = load <2 x i32>, <2 x i32>* %7115, align 1
  %7117 = extractelement <2 x i32> %7113, i32 0
  %7118 = bitcast i8* %7108 to i32*
  store i32 %7117, i32* %7118, align 1
  %7119 = extractelement <2 x i32> %7113, i32 1
  %7120 = getelementptr inbounds i8, i8* %7108, i64 4
  %7121 = bitcast i8* %7120 to i32*
  store i32 %7119, i32* %7121, align 1
  %7122 = extractelement <2 x i32> %7116, i32 0
  %7123 = getelementptr inbounds i8, i8* %7108, i64 8
  %7124 = bitcast i8* %7123 to i32*
  store i32 %7122, i32* %7124, align 1
  %7125 = extractelement <2 x i32> %7116, i32 1
  %7126 = getelementptr inbounds i8, i8* %7108, i64 12
  %7127 = bitcast i8* %7126 to i32*
  store i32 %7125, i32* %7127, align 1
  store %struct.Memory* %loadMem_4011b7, %struct.Memory** %MEMORY
  %loadMem1_4011ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %7128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7129 = getelementptr inbounds %struct.GPR, %struct.GPR* %7128, i32 0, i32 33
  %7130 = getelementptr inbounds %struct.Reg, %struct.Reg* %7129, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %7130 to i64*
  %7131 = load i64, i64* %PC.i343
  %7132 = add i64 %7131, -2858
  %7133 = load i64, i64* %PC.i343
  %7134 = add i64 %7133, 5
  %7135 = load i64, i64* %PC.i343
  %7136 = add i64 %7135, 5
  store i64 %7136, i64* %PC.i343
  %7137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7138 = load i64, i64* %7137, align 8
  %7139 = add i64 %7138, -8
  %7140 = inttoptr i64 %7139 to i64*
  store i64 %7134, i64* %7140
  store i64 %7139, i64* %7137, align 8
  %7141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7132, i64* %7141, align 8
  store %struct.Memory* %loadMem1_4011ba, %struct.Memory** %MEMORY
  %loadMem2_4011ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011ba = load i64, i64* %3
  %call2_4011ba = call %struct.Memory* @ext_atan(%struct.State* %0, i64 %loadPC_4011ba, %struct.Memory* %loadMem2_4011ba)
  store %struct.Memory* %call2_4011ba, %struct.Memory** %MEMORY
  %loadMem_4011bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7143 = getelementptr inbounds %struct.GPR, %struct.GPR* %7142, i32 0, i32 33
  %7144 = getelementptr inbounds %struct.Reg, %struct.Reg* %7143, i32 0, i32 0
  %PC.i340 = bitcast %union.anon* %7144 to i64*
  %7145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7146 = getelementptr inbounds %struct.GPR, %struct.GPR* %7145, i32 0, i32 15
  %7147 = getelementptr inbounds %struct.Reg, %struct.Reg* %7146, i32 0, i32 0
  %RBP.i341 = bitcast %union.anon* %7147 to i64*
  %7148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7149 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7148, i64 0, i64 1
  %YMM1.i342 = bitcast %union.VectorReg* %7149 to %"class.std::bitset"*
  %7150 = bitcast %"class.std::bitset"* %YMM1.i342 to i8*
  %7151 = load i64, i64* %RBP.i341
  %7152 = sub i64 %7151, 272
  %7153 = load i64, i64* %PC.i340
  %7154 = add i64 %7153, 8
  store i64 %7154, i64* %PC.i340
  %7155 = inttoptr i64 %7152 to double*
  %7156 = load double, double* %7155
  %7157 = bitcast i8* %7150 to double*
  store double %7156, double* %7157, align 1
  %7158 = getelementptr inbounds i8, i8* %7150, i64 8
  %7159 = bitcast i8* %7158 to double*
  store double 0.000000e+00, double* %7159, align 1
  store %struct.Memory* %loadMem_4011bf, %struct.Memory** %MEMORY
  %loadMem_4011c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7161 = getelementptr inbounds %struct.GPR, %struct.GPR* %7160, i32 0, i32 33
  %7162 = getelementptr inbounds %struct.Reg, %struct.Reg* %7161, i32 0, i32 0
  %PC.i337 = bitcast %union.anon* %7162 to i64*
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7164 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7163, i64 0, i64 1
  %YMM1.i338 = bitcast %union.VectorReg* %7164 to %"class.std::bitset"*
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7166 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7165, i64 0, i64 0
  %XMM0.i339 = bitcast %union.VectorReg* %7166 to %union.vec128_t*
  %7167 = bitcast %"class.std::bitset"* %YMM1.i338 to i8*
  %7168 = bitcast %"class.std::bitset"* %YMM1.i338 to i8*
  %7169 = bitcast %union.vec128_t* %XMM0.i339 to i8*
  %7170 = load i64, i64* %PC.i337
  %7171 = add i64 %7170, 4
  store i64 %7171, i64* %PC.i337
  %7172 = bitcast i8* %7168 to double*
  %7173 = load double, double* %7172, align 1
  %7174 = getelementptr inbounds i8, i8* %7168, i64 8
  %7175 = bitcast i8* %7174 to i64*
  %7176 = load i64, i64* %7175, align 1
  %7177 = bitcast i8* %7169 to double*
  %7178 = load double, double* %7177, align 1
  %7179 = fmul double %7173, %7178
  %7180 = bitcast i8* %7167 to double*
  store double %7179, double* %7180, align 1
  %7181 = getelementptr inbounds i8, i8* %7167, i64 8
  %7182 = bitcast i8* %7181 to i64*
  store i64 %7176, i64* %7182, align 1
  store %struct.Memory* %loadMem_4011c7, %struct.Memory** %MEMORY
  %loadMem_4011cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7184 = getelementptr inbounds %struct.GPR, %struct.GPR* %7183, i32 0, i32 33
  %7185 = getelementptr inbounds %struct.Reg, %struct.Reg* %7184, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %7185 to i64*
  %7186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7187 = getelementptr inbounds %struct.GPR, %struct.GPR* %7186, i32 0, i32 15
  %7188 = getelementptr inbounds %struct.Reg, %struct.Reg* %7187, i32 0, i32 0
  %RBP.i335 = bitcast %union.anon* %7188 to i64*
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7190 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7189, i64 0, i64 1
  %XMM1.i336 = bitcast %union.VectorReg* %7190 to %union.vec128_t*
  %7191 = load i64, i64* %RBP.i335
  %7192 = sub i64 %7191, 152
  %7193 = bitcast %union.vec128_t* %XMM1.i336 to i8*
  %7194 = load i64, i64* %PC.i334
  %7195 = add i64 %7194, 8
  store i64 %7195, i64* %PC.i334
  %7196 = bitcast i8* %7193 to double*
  %7197 = load double, double* %7196, align 1
  %7198 = inttoptr i64 %7192 to double*
  store double %7197, double* %7198
  store %struct.Memory* %loadMem_4011cb, %struct.Memory** %MEMORY
  %loadMem_4011d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7200 = getelementptr inbounds %struct.GPR, %struct.GPR* %7199, i32 0, i32 33
  %7201 = getelementptr inbounds %struct.Reg, %struct.Reg* %7200, i32 0, i32 0
  %PC.i331 = bitcast %union.anon* %7201 to i64*
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7203 = getelementptr inbounds %struct.GPR, %struct.GPR* %7202, i32 0, i32 1
  %7204 = getelementptr inbounds %struct.Reg, %struct.Reg* %7203, i32 0, i32 0
  %RAX.i332 = bitcast %union.anon* %7204 to i64*
  %7205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7206 = getelementptr inbounds %struct.GPR, %struct.GPR* %7205, i32 0, i32 15
  %7207 = getelementptr inbounds %struct.Reg, %struct.Reg* %7206, i32 0, i32 0
  %RBP.i333 = bitcast %union.anon* %7207 to i64*
  %7208 = load i64, i64* %RBP.i333
  %7209 = sub i64 %7208, 24
  %7210 = load i64, i64* %PC.i331
  %7211 = add i64 %7210, 4
  store i64 %7211, i64* %PC.i331
  %7212 = inttoptr i64 %7209 to i64*
  %7213 = load i64, i64* %7212
  store i64 %7213, i64* %RAX.i332, align 8
  store %struct.Memory* %loadMem_4011d3, %struct.Memory** %MEMORY
  %loadMem_4011d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7215 = getelementptr inbounds %struct.GPR, %struct.GPR* %7214, i32 0, i32 33
  %7216 = getelementptr inbounds %struct.Reg, %struct.Reg* %7215, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %7216 to i64*
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7218 = getelementptr inbounds %struct.GPR, %struct.GPR* %7217, i32 0, i32 1
  %7219 = getelementptr inbounds %struct.Reg, %struct.Reg* %7218, i32 0, i32 0
  %RAX.i330 = bitcast %union.anon* %7219 to i64*
  %7220 = load i64, i64* %RAX.i330
  %7221 = load i64, i64* %PC.i329
  %7222 = add i64 %7221, 4
  store i64 %7222, i64* %PC.i329
  %7223 = add i64 1, %7220
  store i64 %7223, i64* %RAX.i330, align 8
  %7224 = icmp ult i64 %7223, %7220
  %7225 = icmp ult i64 %7223, 1
  %7226 = or i1 %7224, %7225
  %7227 = zext i1 %7226 to i8
  %7228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7227, i8* %7228, align 1
  %7229 = trunc i64 %7223 to i32
  %7230 = and i32 %7229, 255
  %7231 = call i32 @llvm.ctpop.i32(i32 %7230)
  %7232 = trunc i32 %7231 to i8
  %7233 = and i8 %7232, 1
  %7234 = xor i8 %7233, 1
  %7235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7234, i8* %7235, align 1
  %7236 = xor i64 1, %7220
  %7237 = xor i64 %7236, %7223
  %7238 = lshr i64 %7237, 4
  %7239 = trunc i64 %7238 to i8
  %7240 = and i8 %7239, 1
  %7241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7240, i8* %7241, align 1
  %7242 = icmp eq i64 %7223, 0
  %7243 = zext i1 %7242 to i8
  %7244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7243, i8* %7244, align 1
  %7245 = lshr i64 %7223, 63
  %7246 = trunc i64 %7245 to i8
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7246, i8* %7247, align 1
  %7248 = lshr i64 %7220, 63
  %7249 = xor i64 %7245, %7248
  %7250 = add i64 %7249, %7245
  %7251 = icmp eq i64 %7250, 2
  %7252 = zext i1 %7251 to i8
  %7253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7252, i8* %7253, align 1
  store %struct.Memory* %loadMem_4011d7, %struct.Memory** %MEMORY
  %loadMem_4011db = load %struct.Memory*, %struct.Memory** %MEMORY
  %7254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7255 = getelementptr inbounds %struct.GPR, %struct.GPR* %7254, i32 0, i32 33
  %7256 = getelementptr inbounds %struct.Reg, %struct.Reg* %7255, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %7256 to i64*
  %7257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7258 = getelementptr inbounds %struct.GPR, %struct.GPR* %7257, i32 0, i32 1
  %7259 = getelementptr inbounds %struct.Reg, %struct.Reg* %7258, i32 0, i32 0
  %RAX.i327 = bitcast %union.anon* %7259 to i64*
  %7260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7261 = getelementptr inbounds %struct.GPR, %struct.GPR* %7260, i32 0, i32 15
  %7262 = getelementptr inbounds %struct.Reg, %struct.Reg* %7261, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %7262 to i64*
  %7263 = load i64, i64* %RBP.i328
  %7264 = sub i64 %7263, 24
  %7265 = load i64, i64* %RAX.i327
  %7266 = load i64, i64* %PC.i326
  %7267 = add i64 %7266, 4
  store i64 %7267, i64* %PC.i326
  %7268 = inttoptr i64 %7264 to i64*
  store i64 %7265, i64* %7268
  store %struct.Memory* %loadMem_4011db, %struct.Memory** %MEMORY
  %loadMem_4011df = load %struct.Memory*, %struct.Memory** %MEMORY
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7270 = getelementptr inbounds %struct.GPR, %struct.GPR* %7269, i32 0, i32 33
  %7271 = getelementptr inbounds %struct.Reg, %struct.Reg* %7270, i32 0, i32 0
  %PC.i325 = bitcast %union.anon* %7271 to i64*
  %7272 = load i64, i64* %PC.i325
  %7273 = add i64 %7272, -498
  %7274 = load i64, i64* %PC.i325
  %7275 = add i64 %7274, 5
  store i64 %7275, i64* %PC.i325
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7273, i64* %7276, align 8
  store %struct.Memory* %loadMem_4011df, %struct.Memory** %MEMORY
  br label %block_.L_400fed

block_.L_4011e4:                                  ; preds = %block_.L_400fed
  %loadMem_4011e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7278 = getelementptr inbounds %struct.GPR, %struct.GPR* %7277, i32 0, i32 33
  %7279 = getelementptr inbounds %struct.Reg, %struct.Reg* %7278, i32 0, i32 0
  %PC.i322 = bitcast %union.anon* %7279 to i64*
  %7280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7281 = getelementptr inbounds %struct.GPR, %struct.GPR* %7280, i32 0, i32 1
  %7282 = getelementptr inbounds %struct.Reg, %struct.Reg* %7281, i32 0, i32 0
  %RAX.i323 = bitcast %union.anon* %7282 to i64*
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7284 = getelementptr inbounds %struct.GPR, %struct.GPR* %7283, i32 0, i32 15
  %7285 = getelementptr inbounds %struct.Reg, %struct.Reg* %7284, i32 0, i32 0
  %RBP.i324 = bitcast %union.anon* %7285 to i64*
  %7286 = load i64, i64* %RBP.i324
  %7287 = sub i64 %7286, 176
  %7288 = load i64, i64* %PC.i322
  %7289 = add i64 %7288, 6
  store i64 %7289, i64* %PC.i322
  %7290 = inttoptr i64 %7287 to i32*
  %7291 = load i32, i32* %7290
  %7292 = zext i32 %7291 to i64
  store i64 %7292, i64* %RAX.i323, align 8
  store %struct.Memory* %loadMem_4011e4, %struct.Memory** %MEMORY
  %loadMem_4011ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %7293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7294 = getelementptr inbounds %struct.GPR, %struct.GPR* %7293, i32 0, i32 33
  %7295 = getelementptr inbounds %struct.Reg, %struct.Reg* %7294, i32 0, i32 0
  %PC.i319 = bitcast %union.anon* %7295 to i64*
  %7296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7297 = getelementptr inbounds %struct.GPR, %struct.GPR* %7296, i32 0, i32 1
  %7298 = getelementptr inbounds %struct.Reg, %struct.Reg* %7297, i32 0, i32 0
  %EAX.i320 = bitcast %union.anon* %7298 to i32*
  %7299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7300 = getelementptr inbounds %struct.GPR, %struct.GPR* %7299, i32 0, i32 15
  %7301 = getelementptr inbounds %struct.Reg, %struct.Reg* %7300, i32 0, i32 0
  %RBP.i321 = bitcast %union.anon* %7301 to i64*
  %7302 = load i32, i32* %EAX.i320
  %7303 = zext i32 %7302 to i64
  %7304 = load i64, i64* %RBP.i321
  %7305 = sub i64 %7304, 172
  %7306 = load i64, i64* %PC.i319
  %7307 = add i64 %7306, 6
  store i64 %7307, i64* %PC.i319
  %7308 = inttoptr i64 %7305 to i32*
  %7309 = load i32, i32* %7308
  %7310 = sub i32 %7302, %7309
  %7311 = icmp ult i32 %7302, %7309
  %7312 = zext i1 %7311 to i8
  %7313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7312, i8* %7313, align 1
  %7314 = and i32 %7310, 255
  %7315 = call i32 @llvm.ctpop.i32(i32 %7314)
  %7316 = trunc i32 %7315 to i8
  %7317 = and i8 %7316, 1
  %7318 = xor i8 %7317, 1
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7318, i8* %7319, align 1
  %7320 = xor i32 %7309, %7302
  %7321 = xor i32 %7320, %7310
  %7322 = lshr i32 %7321, 4
  %7323 = trunc i32 %7322 to i8
  %7324 = and i8 %7323, 1
  %7325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7324, i8* %7325, align 1
  %7326 = icmp eq i32 %7310, 0
  %7327 = zext i1 %7326 to i8
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7327, i8* %7328, align 1
  %7329 = lshr i32 %7310, 31
  %7330 = trunc i32 %7329 to i8
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7330, i8* %7331, align 1
  %7332 = lshr i32 %7302, 31
  %7333 = lshr i32 %7309, 31
  %7334 = xor i32 %7333, %7332
  %7335 = xor i32 %7329, %7332
  %7336 = add i32 %7335, %7334
  %7337 = icmp eq i32 %7336, 2
  %7338 = zext i1 %7337 to i8
  %7339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7338, i8* %7339, align 1
  store %struct.Memory* %loadMem_4011ea, %struct.Memory** %MEMORY
  %loadMem_4011f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7341 = getelementptr inbounds %struct.GPR, %struct.GPR* %7340, i32 0, i32 33
  %7342 = getelementptr inbounds %struct.Reg, %struct.Reg* %7341, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %7342 to i64*
  %7343 = load i64, i64* %PC.i318
  %7344 = add i64 %7343, 63
  %7345 = load i64, i64* %PC.i318
  %7346 = add i64 %7345, 6
  %7347 = load i64, i64* %PC.i318
  %7348 = add i64 %7347, 6
  store i64 %7348, i64* %PC.i318
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7350 = load i8, i8* %7349, align 1
  %7351 = icmp eq i8 %7350, 0
  %7352 = zext i1 %7351 to i8
  store i8 %7352, i8* %BRANCH_TAKEN, align 1
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7354 = select i1 %7351, i64 %7344, i64 %7346
  store i64 %7354, i64* %7353, align 8
  store %struct.Memory* %loadMem_4011f0, %struct.Memory** %MEMORY
  %loadBr_4011f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4011f0 = icmp eq i8 %loadBr_4011f0, 1
  br i1 %cmpBr_4011f0, label %block_.L_40122f, label %block_4011f6

block_4011f6:                                     ; preds = %block_.L_4011e4
  %loadMem_4011f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 33
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %7357 to i64*
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7359 = getelementptr inbounds %struct.GPR, %struct.GPR* %7358, i32 0, i32 11
  %7360 = getelementptr inbounds %struct.Reg, %struct.Reg* %7359, i32 0, i32 0
  %RDI.i316 = bitcast %union.anon* %7360 to i64*
  %7361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7362 = getelementptr inbounds %struct.GPR, %struct.GPR* %7361, i32 0, i32 15
  %7363 = getelementptr inbounds %struct.Reg, %struct.Reg* %7362, i32 0, i32 0
  %RBP.i317 = bitcast %union.anon* %7363 to i64*
  %7364 = load i64, i64* %RBP.i317
  %7365 = sub i64 %7364, 72
  %7366 = load i64, i64* %PC.i315
  %7367 = add i64 %7366, 4
  store i64 %7367, i64* %PC.i315
  %7368 = inttoptr i64 %7365 to i64*
  %7369 = load i64, i64* %7368
  store i64 %7369, i64* %RDI.i316, align 8
  store %struct.Memory* %loadMem_4011f6, %struct.Memory** %MEMORY
  %loadMem_4011fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %7370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7371 = getelementptr inbounds %struct.GPR, %struct.GPR* %7370, i32 0, i32 33
  %7372 = getelementptr inbounds %struct.Reg, %struct.Reg* %7371, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %7372 to i64*
  %7373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7374 = getelementptr inbounds %struct.GPR, %struct.GPR* %7373, i32 0, i32 9
  %7375 = getelementptr inbounds %struct.Reg, %struct.Reg* %7374, i32 0, i32 0
  %RSI.i314 = bitcast %union.anon* %7375 to i64*
  %7376 = load i64, i64* %PC.i313
  %7377 = add i64 %7376, 8
  store i64 %7377, i64* %PC.i313
  %7378 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %7379 = sext i32 %7378 to i64
  store i64 %7379, i64* %RSI.i314, align 8
  store %struct.Memory* %loadMem_4011fa, %struct.Memory** %MEMORY
  %loadMem_401202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7381 = getelementptr inbounds %struct.GPR, %struct.GPR* %7380, i32 0, i32 33
  %7382 = getelementptr inbounds %struct.Reg, %struct.Reg* %7381, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %7382 to i64*
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 7
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %RDX.i312 = bitcast %union.anon* %7385 to i64*
  %7386 = load i64, i64* %PC.i311
  %7387 = add i64 %7386, 8
  store i64 %7387, i64* %PC.i311
  %7388 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %7389 = sext i32 %7388 to i64
  store i64 %7389, i64* %RDX.i312, align 8
  store %struct.Memory* %loadMem_401202, %struct.Memory** %MEMORY
  %loadMem_40120a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7391 = getelementptr inbounds %struct.GPR, %struct.GPR* %7390, i32 0, i32 33
  %7392 = getelementptr inbounds %struct.Reg, %struct.Reg* %7391, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %7392 to i64*
  %7393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7394 = getelementptr inbounds %struct.GPR, %struct.GPR* %7393, i32 0, i32 15
  %7395 = getelementptr inbounds %struct.Reg, %struct.Reg* %7394, i32 0, i32 0
  %RBP.i309 = bitcast %union.anon* %7395 to i64*
  %7396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7397 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7396, i64 0, i64 0
  %YMM0.i310 = bitcast %union.VectorReg* %7397 to %"class.std::bitset"*
  %7398 = bitcast %"class.std::bitset"* %YMM0.i310 to i8*
  %7399 = load i64, i64* %RBP.i309
  %7400 = sub i64 %7399, 144
  %7401 = load i64, i64* %PC.i308
  %7402 = add i64 %7401, 8
  store i64 %7402, i64* %PC.i308
  %7403 = inttoptr i64 %7400 to double*
  %7404 = load double, double* %7403
  %7405 = bitcast i8* %7398 to double*
  store double %7404, double* %7405, align 1
  %7406 = getelementptr inbounds i8, i8* %7398, i64 8
  %7407 = bitcast i8* %7406 to double*
  store double 0.000000e+00, double* %7407, align 1
  store %struct.Memory* %loadMem_40120a, %struct.Memory** %MEMORY
  %loadMem_401212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7409 = getelementptr inbounds %struct.GPR, %struct.GPR* %7408, i32 0, i32 33
  %7410 = getelementptr inbounds %struct.Reg, %struct.Reg* %7409, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %7410 to i64*
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7412 = getelementptr inbounds %struct.GPR, %struct.GPR* %7411, i32 0, i32 15
  %7413 = getelementptr inbounds %struct.Reg, %struct.Reg* %7412, i32 0, i32 0
  %RBP.i306 = bitcast %union.anon* %7413 to i64*
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7415 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7414, i64 0, i64 1
  %YMM1.i307 = bitcast %union.VectorReg* %7415 to %"class.std::bitset"*
  %7416 = bitcast %"class.std::bitset"* %YMM1.i307 to i8*
  %7417 = load i64, i64* %RBP.i306
  %7418 = sub i64 %7417, 144
  %7419 = load i64, i64* %PC.i305
  %7420 = add i64 %7419, 8
  store i64 %7420, i64* %PC.i305
  %7421 = inttoptr i64 %7418 to double*
  %7422 = load double, double* %7421
  %7423 = bitcast i8* %7416 to double*
  store double %7422, double* %7423, align 1
  %7424 = getelementptr inbounds i8, i8* %7416, i64 8
  %7425 = bitcast i8* %7424 to double*
  store double 0.000000e+00, double* %7425, align 1
  store %struct.Memory* %loadMem_401212, %struct.Memory** %MEMORY
  %loadMem_40121a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7427 = getelementptr inbounds %struct.GPR, %struct.GPR* %7426, i32 0, i32 33
  %7428 = getelementptr inbounds %struct.Reg, %struct.Reg* %7427, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %7428 to i64*
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7430 = getelementptr inbounds %struct.GPR, %struct.GPR* %7429, i32 0, i32 15
  %7431 = getelementptr inbounds %struct.Reg, %struct.Reg* %7430, i32 0, i32 0
  %RBP.i303 = bitcast %union.anon* %7431 to i64*
  %7432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7433 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7432, i64 0, i64 2
  %YMM2.i304 = bitcast %union.VectorReg* %7433 to %"class.std::bitset"*
  %7434 = bitcast %"class.std::bitset"* %YMM2.i304 to i8*
  %7435 = load i64, i64* %RBP.i303
  %7436 = sub i64 %7435, 152
  %7437 = load i64, i64* %PC.i302
  %7438 = add i64 %7437, 8
  store i64 %7438, i64* %PC.i302
  %7439 = inttoptr i64 %7436 to double*
  %7440 = load double, double* %7439
  %7441 = bitcast i8* %7434 to double*
  store double %7440, double* %7441, align 1
  %7442 = getelementptr inbounds i8, i8* %7434, i64 8
  %7443 = bitcast i8* %7442 to double*
  store double 0.000000e+00, double* %7443, align 1
  store %struct.Memory* %loadMem_40121a, %struct.Memory** %MEMORY
  %loadMem_401222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7445 = getelementptr inbounds %struct.GPR, %struct.GPR* %7444, i32 0, i32 33
  %7446 = getelementptr inbounds %struct.Reg, %struct.Reg* %7445, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %7446 to i64*
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7448 = getelementptr inbounds %struct.GPR, %struct.GPR* %7447, i32 0, i32 15
  %7449 = getelementptr inbounds %struct.Reg, %struct.Reg* %7448, i32 0, i32 0
  %RBP.i300 = bitcast %union.anon* %7449 to i64*
  %7450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7451 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7450, i64 0, i64 3
  %YMM3.i301 = bitcast %union.VectorReg* %7451 to %"class.std::bitset"*
  %7452 = bitcast %"class.std::bitset"* %YMM3.i301 to i8*
  %7453 = load i64, i64* %RBP.i300
  %7454 = sub i64 %7453, 152
  %7455 = load i64, i64* %PC.i299
  %7456 = add i64 %7455, 8
  store i64 %7456, i64* %PC.i299
  %7457 = inttoptr i64 %7454 to double*
  %7458 = load double, double* %7457
  %7459 = bitcast i8* %7452 to double*
  store double %7458, double* %7459, align 1
  %7460 = getelementptr inbounds i8, i8* %7452, i64 8
  %7461 = bitcast i8* %7460 to double*
  store double 0.000000e+00, double* %7461, align 1
  store %struct.Memory* %loadMem_401222, %struct.Memory** %MEMORY
  %loadMem1_40122a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7463 = getelementptr inbounds %struct.GPR, %struct.GPR* %7462, i32 0, i32 33
  %7464 = getelementptr inbounds %struct.Reg, %struct.Reg* %7463, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %7464 to i64*
  %7465 = load i64, i64* %PC.i298
  %7466 = add i64 %7465, 886
  %7467 = load i64, i64* %PC.i298
  %7468 = add i64 %7467, 5
  %7469 = load i64, i64* %PC.i298
  %7470 = add i64 %7469, 5
  store i64 %7470, i64* %PC.i298
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7472 = load i64, i64* %7471, align 8
  %7473 = add i64 %7472, -8
  %7474 = inttoptr i64 %7473 to i64*
  store i64 %7468, i64* %7474
  store i64 %7473, i64* %7471, align 8
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7466, i64* %7475, align 8
  store %struct.Memory* %loadMem1_40122a, %struct.Memory** %MEMORY
  %loadMem2_40122a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40122a = load i64, i64* %3
  %call2_40122a = call %struct.Memory* @sub_4015a0.POUT(%struct.State* %0, i64 %loadPC_40122a, %struct.Memory* %loadMem2_40122a)
  store %struct.Memory* %call2_40122a, %struct.Memory** %MEMORY
  br label %block_.L_40122f

block_.L_40122f:                                  ; preds = %block_4011f6, %block_.L_4011e4
  %loadMem_40122f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7477 = getelementptr inbounds %struct.GPR, %struct.GPR* %7476, i32 0, i32 33
  %7478 = getelementptr inbounds %struct.Reg, %struct.Reg* %7477, i32 0, i32 0
  %PC.i296 = bitcast %union.anon* %7478 to i64*
  %7479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7480 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7479, i64 0, i64 0
  %YMM0.i297 = bitcast %union.VectorReg* %7480 to %"class.std::bitset"*
  %7481 = bitcast %"class.std::bitset"* %YMM0.i297 to i8*
  %7482 = load i64, i64* %PC.i296
  %7483 = load i64, i64* %PC.i296
  %7484 = add i64 %7483, 8
  store i64 %7484, i64* %PC.i296
  %7485 = load double, double* bitcast (%G_0x6a1__rip__type* @G_0x6a1__rip_ to double*)
  %7486 = bitcast i8* %7481 to double*
  store double %7485, double* %7486, align 1
  %7487 = getelementptr inbounds i8, i8* %7481, i64 8
  %7488 = bitcast i8* %7487 to double*
  store double 0.000000e+00, double* %7488, align 1
  store %struct.Memory* %loadMem_40122f, %struct.Memory** %MEMORY
  %loadMem_401237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7490 = getelementptr inbounds %struct.GPR, %struct.GPR* %7489, i32 0, i32 33
  %7491 = getelementptr inbounds %struct.Reg, %struct.Reg* %7490, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %7491 to i64*
  %7492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7493 = getelementptr inbounds %struct.GPR, %struct.GPR* %7492, i32 0, i32 15
  %7494 = getelementptr inbounds %struct.Reg, %struct.Reg* %7493, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %7494 to i64*
  %7495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7496 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7495, i64 0, i64 0
  %XMM0.i295 = bitcast %union.VectorReg* %7496 to %union.vec128_t*
  %7497 = load i64, i64* %RBP.i294
  %7498 = sub i64 %7497, 144
  %7499 = bitcast %union.vec128_t* %XMM0.i295 to i8*
  %7500 = load i64, i64* %PC.i293
  %7501 = add i64 %7500, 8
  store i64 %7501, i64* %PC.i293
  %7502 = bitcast i8* %7499 to double*
  %7503 = load double, double* %7502, align 1
  %7504 = inttoptr i64 %7498 to double*
  store double %7503, double* %7504
  store %struct.Memory* %loadMem_401237, %struct.Memory** %MEMORY
  %loadMem_40123f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7506 = getelementptr inbounds %struct.GPR, %struct.GPR* %7505, i32 0, i32 33
  %7507 = getelementptr inbounds %struct.Reg, %struct.Reg* %7506, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %7507 to i64*
  %7508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7509 = getelementptr inbounds %struct.GPR, %struct.GPR* %7508, i32 0, i32 15
  %7510 = getelementptr inbounds %struct.Reg, %struct.Reg* %7509, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %7510 to i64*
  %7511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7512 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7511, i64 0, i64 0
  %XMM0.i292 = bitcast %union.VectorReg* %7512 to %union.vec128_t*
  %7513 = load i64, i64* %RBP.i291
  %7514 = sub i64 %7513, 152
  %7515 = bitcast %union.vec128_t* %XMM0.i292 to i8*
  %7516 = load i64, i64* %PC.i290
  %7517 = add i64 %7516, 8
  store i64 %7517, i64* %PC.i290
  %7518 = bitcast i8* %7515 to double*
  %7519 = load double, double* %7518, align 1
  %7520 = inttoptr i64 %7514 to double*
  store double %7519, double* %7520
  store %struct.Memory* %loadMem_40123f, %struct.Memory** %MEMORY
  %loadMem_401247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7522 = getelementptr inbounds %struct.GPR, %struct.GPR* %7521, i32 0, i32 33
  %7523 = getelementptr inbounds %struct.Reg, %struct.Reg* %7522, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %7523 to i64*
  %7524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7525 = getelementptr inbounds %struct.GPR, %struct.GPR* %7524, i32 0, i32 15
  %7526 = getelementptr inbounds %struct.Reg, %struct.Reg* %7525, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %7526 to i64*
  %7527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7528 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7527, i64 0, i64 0
  %XMM0.i289 = bitcast %union.VectorReg* %7528 to %union.vec128_t*
  %7529 = load i64, i64* %RBP.i288
  %7530 = sub i64 %7529, 160
  %7531 = bitcast %union.vec128_t* %XMM0.i289 to i8*
  %7532 = load i64, i64* %PC.i287
  %7533 = add i64 %7532, 8
  store i64 %7533, i64* %PC.i287
  %7534 = bitcast i8* %7531 to double*
  %7535 = load double, double* %7534, align 1
  %7536 = inttoptr i64 %7530 to double*
  store double %7535, double* %7536
  store %struct.Memory* %loadMem_401247, %struct.Memory** %MEMORY
  %loadMem_40124f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7538 = getelementptr inbounds %struct.GPR, %struct.GPR* %7537, i32 0, i32 33
  %7539 = getelementptr inbounds %struct.Reg, %struct.Reg* %7538, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %7539 to i64*
  %7540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7541 = getelementptr inbounds %struct.GPR, %struct.GPR* %7540, i32 0, i32 15
  %7542 = getelementptr inbounds %struct.Reg, %struct.Reg* %7541, i32 0, i32 0
  %RBP.i286 = bitcast %union.anon* %7542 to i64*
  %7543 = load i64, i64* %RBP.i286
  %7544 = sub i64 %7543, 24
  %7545 = load i64, i64* %PC.i285
  %7546 = add i64 %7545, 8
  store i64 %7546, i64* %PC.i285
  %7547 = inttoptr i64 %7544 to i64*
  store i64 1, i64* %7547
  store %struct.Memory* %loadMem_40124f, %struct.Memory** %MEMORY
  br label %block_.L_401257

block_.L_401257:                                  ; preds = %block_401265, %block_.L_40122f
  %loadMem_401257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7549 = getelementptr inbounds %struct.GPR, %struct.GPR* %7548, i32 0, i32 33
  %7550 = getelementptr inbounds %struct.Reg, %struct.Reg* %7549, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %7550 to i64*
  %7551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7552 = getelementptr inbounds %struct.GPR, %struct.GPR* %7551, i32 0, i32 1
  %7553 = getelementptr inbounds %struct.Reg, %struct.Reg* %7552, i32 0, i32 0
  %RAX.i283 = bitcast %union.anon* %7553 to i64*
  %7554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7555 = getelementptr inbounds %struct.GPR, %struct.GPR* %7554, i32 0, i32 15
  %7556 = getelementptr inbounds %struct.Reg, %struct.Reg* %7555, i32 0, i32 0
  %RBP.i284 = bitcast %union.anon* %7556 to i64*
  %7557 = load i64, i64* %RBP.i284
  %7558 = sub i64 %7557, 24
  %7559 = load i64, i64* %PC.i282
  %7560 = add i64 %7559, 4
  store i64 %7560, i64* %PC.i282
  %7561 = inttoptr i64 %7558 to i64*
  %7562 = load i64, i64* %7561
  store i64 %7562, i64* %RAX.i283, align 8
  store %struct.Memory* %loadMem_401257, %struct.Memory** %MEMORY
  %loadMem_40125b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7564 = getelementptr inbounds %struct.GPR, %struct.GPR* %7563, i32 0, i32 33
  %7565 = getelementptr inbounds %struct.Reg, %struct.Reg* %7564, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %7565 to i64*
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7567 = getelementptr inbounds %struct.GPR, %struct.GPR* %7566, i32 0, i32 1
  %7568 = getelementptr inbounds %struct.Reg, %struct.Reg* %7567, i32 0, i32 0
  %RAX.i280 = bitcast %union.anon* %7568 to i64*
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7570 = getelementptr inbounds %struct.GPR, %struct.GPR* %7569, i32 0, i32 15
  %7571 = getelementptr inbounds %struct.Reg, %struct.Reg* %7570, i32 0, i32 0
  %RBP.i281 = bitcast %union.anon* %7571 to i64*
  %7572 = load i64, i64* %RAX.i280
  %7573 = load i64, i64* %RBP.i281
  %7574 = sub i64 %7573, 80
  %7575 = load i64, i64* %PC.i279
  %7576 = add i64 %7575, 4
  store i64 %7576, i64* %PC.i279
  %7577 = inttoptr i64 %7574 to i64*
  %7578 = load i64, i64* %7577
  %7579 = sub i64 %7572, %7578
  %7580 = icmp ugt i64 %7578, %7572
  %7581 = zext i1 %7580 to i8
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7581, i8* %7582, align 1
  %7583 = trunc i64 %7579 to i32
  %7584 = and i32 %7583, 255
  %7585 = call i32 @llvm.ctpop.i32(i32 %7584)
  %7586 = trunc i32 %7585 to i8
  %7587 = and i8 %7586, 1
  %7588 = xor i8 %7587, 1
  %7589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7588, i8* %7589, align 1
  %7590 = xor i64 %7578, %7572
  %7591 = xor i64 %7590, %7579
  %7592 = lshr i64 %7591, 4
  %7593 = trunc i64 %7592 to i8
  %7594 = and i8 %7593, 1
  %7595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7594, i8* %7595, align 1
  %7596 = icmp eq i64 %7579, 0
  %7597 = zext i1 %7596 to i8
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7597, i8* %7598, align 1
  %7599 = lshr i64 %7579, 63
  %7600 = trunc i64 %7599 to i8
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7600, i8* %7601, align 1
  %7602 = lshr i64 %7572, 63
  %7603 = lshr i64 %7578, 63
  %7604 = xor i64 %7603, %7602
  %7605 = xor i64 %7599, %7602
  %7606 = add i64 %7605, %7604
  %7607 = icmp eq i64 %7606, 2
  %7608 = zext i1 %7607 to i8
  %7609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7608, i8* %7609, align 1
  store %struct.Memory* %loadMem_40125b, %struct.Memory** %MEMORY
  %loadMem_40125f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7611 = getelementptr inbounds %struct.GPR, %struct.GPR* %7610, i32 0, i32 33
  %7612 = getelementptr inbounds %struct.Reg, %struct.Reg* %7611, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %7612 to i64*
  %7613 = load i64, i64* %PC.i278
  %7614 = add i64 %7613, 51
  %7615 = load i64, i64* %PC.i278
  %7616 = add i64 %7615, 6
  %7617 = load i64, i64* %PC.i278
  %7618 = add i64 %7617, 6
  store i64 %7618, i64* %PC.i278
  %7619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7620 = load i8, i8* %7619, align 1
  %7621 = icmp eq i8 %7620, 0
  %7622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7623 = load i8, i8* %7622, align 1
  %7624 = icmp ne i8 %7623, 0
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7626 = load i8, i8* %7625, align 1
  %7627 = icmp ne i8 %7626, 0
  %7628 = xor i1 %7624, %7627
  %7629 = xor i1 %7628, true
  %7630 = and i1 %7621, %7629
  %7631 = zext i1 %7630 to i8
  store i8 %7631, i8* %BRANCH_TAKEN, align 1
  %7632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7633 = select i1 %7630, i64 %7614, i64 %7616
  store i64 %7633, i64* %7632, align 8
  store %struct.Memory* %loadMem_40125f, %struct.Memory** %MEMORY
  %loadBr_40125f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40125f = icmp eq i8 %loadBr_40125f, 1
  br i1 %cmpBr_40125f, label %block_.L_401292, label %block_401265

block_401265:                                     ; preds = %block_.L_401257
  %loadMem_401265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7635 = getelementptr inbounds %struct.GPR, %struct.GPR* %7634, i32 0, i32 33
  %7636 = getelementptr inbounds %struct.Reg, %struct.Reg* %7635, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %7636 to i64*
  %7637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7638 = getelementptr inbounds %struct.GPR, %struct.GPR* %7637, i32 0, i32 11
  %7639 = getelementptr inbounds %struct.Reg, %struct.Reg* %7638, i32 0, i32 0
  %RDI.i276 = bitcast %union.anon* %7639 to i64*
  %7640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7641 = getelementptr inbounds %struct.GPR, %struct.GPR* %7640, i32 0, i32 15
  %7642 = getelementptr inbounds %struct.Reg, %struct.Reg* %7641, i32 0, i32 0
  %RBP.i277 = bitcast %union.anon* %7642 to i64*
  %7643 = load i64, i64* %RBP.i277
  %7644 = sub i64 %7643, 160
  %7645 = load i64, i64* %PC.i275
  %7646 = add i64 %7645, 7
  store i64 %7646, i64* %PC.i275
  store i64 %7644, i64* %RDI.i276, align 8
  store %struct.Memory* %loadMem_401265, %struct.Memory** %MEMORY
  %loadMem_40126c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7648 = getelementptr inbounds %struct.GPR, %struct.GPR* %7647, i32 0, i32 33
  %7649 = getelementptr inbounds %struct.Reg, %struct.Reg* %7648, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %7649 to i64*
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7651 = getelementptr inbounds %struct.GPR, %struct.GPR* %7650, i32 0, i32 15
  %7652 = getelementptr inbounds %struct.Reg, %struct.Reg* %7651, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %7652 to i64*
  %7653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7654 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7653, i64 0, i64 0
  %YMM0.i274 = bitcast %union.VectorReg* %7654 to %"class.std::bitset"*
  %7655 = bitcast %"class.std::bitset"* %YMM0.i274 to i8*
  %7656 = load i64, i64* %RBP.i273
  %7657 = sub i64 %7656, 144
  %7658 = load i64, i64* %PC.i272
  %7659 = add i64 %7658, 8
  store i64 %7659, i64* %PC.i272
  %7660 = inttoptr i64 %7657 to double*
  %7661 = load double, double* %7660
  %7662 = bitcast i8* %7655 to double*
  store double %7661, double* %7662, align 1
  %7663 = getelementptr inbounds i8, i8* %7655, i64 8
  %7664 = bitcast i8* %7663 to double*
  store double 0.000000e+00, double* %7664, align 1
  store %struct.Memory* %loadMem_40126c, %struct.Memory** %MEMORY
  %loadMem_401274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7666 = getelementptr inbounds %struct.GPR, %struct.GPR* %7665, i32 0, i32 33
  %7667 = getelementptr inbounds %struct.Reg, %struct.Reg* %7666, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %7667 to i64*
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7669 = getelementptr inbounds %struct.GPR, %struct.GPR* %7668, i32 0, i32 15
  %7670 = getelementptr inbounds %struct.Reg, %struct.Reg* %7669, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %7670 to i64*
  %7671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7672 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7671, i64 0, i64 1
  %YMM1.i271 = bitcast %union.VectorReg* %7672 to %"class.std::bitset"*
  %7673 = bitcast %"class.std::bitset"* %YMM1.i271 to i8*
  %7674 = load i64, i64* %RBP.i270
  %7675 = sub i64 %7674, 152
  %7676 = load i64, i64* %PC.i269
  %7677 = add i64 %7676, 8
  store i64 %7677, i64* %PC.i269
  %7678 = inttoptr i64 %7675 to double*
  %7679 = load double, double* %7678
  %7680 = bitcast i8* %7673 to double*
  store double %7679, double* %7680, align 1
  %7681 = getelementptr inbounds i8, i8* %7673, i64 8
  %7682 = bitcast i8* %7681 to double*
  store double 0.000000e+00, double* %7682, align 1
  store %struct.Memory* %loadMem_401274, %struct.Memory** %MEMORY
  %loadMem1_40127c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7684 = getelementptr inbounds %struct.GPR, %struct.GPR* %7683, i32 0, i32 33
  %7685 = getelementptr inbounds %struct.Reg, %struct.Reg* %7684, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %7685 to i64*
  %7686 = load i64, i64* %PC.i268
  %7687 = add i64 %7686, 1220
  %7688 = load i64, i64* %PC.i268
  %7689 = add i64 %7688, 5
  %7690 = load i64, i64* %PC.i268
  %7691 = add i64 %7690, 5
  store i64 %7691, i64* %PC.i268
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7693 = load i64, i64* %7692, align 8
  %7694 = add i64 %7693, -8
  %7695 = inttoptr i64 %7694 to i64*
  store i64 %7689, i64* %7695
  store i64 %7694, i64* %7692, align 8
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7687, i64* %7696, align 8
  store %struct.Memory* %loadMem1_40127c, %struct.Memory** %MEMORY
  %loadMem2_40127c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40127c = load i64, i64* %3
  %call2_40127c = call %struct.Memory* @sub_401740.P3(%struct.State* %0, i64 %loadPC_40127c, %struct.Memory* %loadMem2_40127c)
  store %struct.Memory* %call2_40127c, %struct.Memory** %MEMORY
  %loadMem_401281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7698 = getelementptr inbounds %struct.GPR, %struct.GPR* %7697, i32 0, i32 33
  %7699 = getelementptr inbounds %struct.Reg, %struct.Reg* %7698, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %7699 to i64*
  %7700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7701 = getelementptr inbounds %struct.GPR, %struct.GPR* %7700, i32 0, i32 1
  %7702 = getelementptr inbounds %struct.Reg, %struct.Reg* %7701, i32 0, i32 0
  %RAX.i266 = bitcast %union.anon* %7702 to i64*
  %7703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7704 = getelementptr inbounds %struct.GPR, %struct.GPR* %7703, i32 0, i32 15
  %7705 = getelementptr inbounds %struct.Reg, %struct.Reg* %7704, i32 0, i32 0
  %RBP.i267 = bitcast %union.anon* %7705 to i64*
  %7706 = load i64, i64* %RBP.i267
  %7707 = sub i64 %7706, 24
  %7708 = load i64, i64* %PC.i265
  %7709 = add i64 %7708, 4
  store i64 %7709, i64* %PC.i265
  %7710 = inttoptr i64 %7707 to i64*
  %7711 = load i64, i64* %7710
  store i64 %7711, i64* %RAX.i266, align 8
  store %struct.Memory* %loadMem_401281, %struct.Memory** %MEMORY
  %loadMem_401285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7713 = getelementptr inbounds %struct.GPR, %struct.GPR* %7712, i32 0, i32 33
  %7714 = getelementptr inbounds %struct.Reg, %struct.Reg* %7713, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %7714 to i64*
  %7715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7716 = getelementptr inbounds %struct.GPR, %struct.GPR* %7715, i32 0, i32 1
  %7717 = getelementptr inbounds %struct.Reg, %struct.Reg* %7716, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %7717 to i64*
  %7718 = load i64, i64* %RAX.i264
  %7719 = load i64, i64* %PC.i263
  %7720 = add i64 %7719, 4
  store i64 %7720, i64* %PC.i263
  %7721 = add i64 1, %7718
  store i64 %7721, i64* %RAX.i264, align 8
  %7722 = icmp ult i64 %7721, %7718
  %7723 = icmp ult i64 %7721, 1
  %7724 = or i1 %7722, %7723
  %7725 = zext i1 %7724 to i8
  %7726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7725, i8* %7726, align 1
  %7727 = trunc i64 %7721 to i32
  %7728 = and i32 %7727, 255
  %7729 = call i32 @llvm.ctpop.i32(i32 %7728)
  %7730 = trunc i32 %7729 to i8
  %7731 = and i8 %7730, 1
  %7732 = xor i8 %7731, 1
  %7733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7732, i8* %7733, align 1
  %7734 = xor i64 1, %7718
  %7735 = xor i64 %7734, %7721
  %7736 = lshr i64 %7735, 4
  %7737 = trunc i64 %7736 to i8
  %7738 = and i8 %7737, 1
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7738, i8* %7739, align 1
  %7740 = icmp eq i64 %7721, 0
  %7741 = zext i1 %7740 to i8
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7741, i8* %7742, align 1
  %7743 = lshr i64 %7721, 63
  %7744 = trunc i64 %7743 to i8
  %7745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7744, i8* %7745, align 1
  %7746 = lshr i64 %7718, 63
  %7747 = xor i64 %7743, %7746
  %7748 = add i64 %7747, %7743
  %7749 = icmp eq i64 %7748, 2
  %7750 = zext i1 %7749 to i8
  %7751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7750, i8* %7751, align 1
  store %struct.Memory* %loadMem_401285, %struct.Memory** %MEMORY
  %loadMem_401289 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7753 = getelementptr inbounds %struct.GPR, %struct.GPR* %7752, i32 0, i32 33
  %7754 = getelementptr inbounds %struct.Reg, %struct.Reg* %7753, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %7754 to i64*
  %7755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7756 = getelementptr inbounds %struct.GPR, %struct.GPR* %7755, i32 0, i32 1
  %7757 = getelementptr inbounds %struct.Reg, %struct.Reg* %7756, i32 0, i32 0
  %RAX.i261 = bitcast %union.anon* %7757 to i64*
  %7758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7759 = getelementptr inbounds %struct.GPR, %struct.GPR* %7758, i32 0, i32 15
  %7760 = getelementptr inbounds %struct.Reg, %struct.Reg* %7759, i32 0, i32 0
  %RBP.i262 = bitcast %union.anon* %7760 to i64*
  %7761 = load i64, i64* %RBP.i262
  %7762 = sub i64 %7761, 24
  %7763 = load i64, i64* %RAX.i261
  %7764 = load i64, i64* %PC.i260
  %7765 = add i64 %7764, 4
  store i64 %7765, i64* %PC.i260
  %7766 = inttoptr i64 %7762 to i64*
  store i64 %7763, i64* %7766
  store %struct.Memory* %loadMem_401289, %struct.Memory** %MEMORY
  %loadMem_40128d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7768 = getelementptr inbounds %struct.GPR, %struct.GPR* %7767, i32 0, i32 33
  %7769 = getelementptr inbounds %struct.Reg, %struct.Reg* %7768, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %7769 to i64*
  %7770 = load i64, i64* %PC.i259
  %7771 = add i64 %7770, -54
  %7772 = load i64, i64* %PC.i259
  %7773 = add i64 %7772, 5
  store i64 %7773, i64* %PC.i259
  %7774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7771, i64* %7774, align 8
  store %struct.Memory* %loadMem_40128d, %struct.Memory** %MEMORY
  br label %block_.L_401257

block_.L_401292:                                  ; preds = %block_.L_401257
  %loadMem_401292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7776 = getelementptr inbounds %struct.GPR, %struct.GPR* %7775, i32 0, i32 33
  %7777 = getelementptr inbounds %struct.Reg, %struct.Reg* %7776, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %7777 to i64*
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7779 = getelementptr inbounds %struct.GPR, %struct.GPR* %7778, i32 0, i32 1
  %7780 = getelementptr inbounds %struct.Reg, %struct.Reg* %7779, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %7780 to i64*
  %7781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7782 = getelementptr inbounds %struct.GPR, %struct.GPR* %7781, i32 0, i32 15
  %7783 = getelementptr inbounds %struct.Reg, %struct.Reg* %7782, i32 0, i32 0
  %RBP.i258 = bitcast %union.anon* %7783 to i64*
  %7784 = load i64, i64* %RBP.i258
  %7785 = sub i64 %7784, 176
  %7786 = load i64, i64* %PC.i256
  %7787 = add i64 %7786, 6
  store i64 %7787, i64* %PC.i256
  %7788 = inttoptr i64 %7785 to i32*
  %7789 = load i32, i32* %7788
  %7790 = zext i32 %7789 to i64
  store i64 %7790, i64* %RAX.i257, align 8
  store %struct.Memory* %loadMem_401292, %struct.Memory** %MEMORY
  %loadMem_401298 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7792 = getelementptr inbounds %struct.GPR, %struct.GPR* %7791, i32 0, i32 33
  %7793 = getelementptr inbounds %struct.Reg, %struct.Reg* %7792, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %7793 to i64*
  %7794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7795 = getelementptr inbounds %struct.GPR, %struct.GPR* %7794, i32 0, i32 1
  %7796 = getelementptr inbounds %struct.Reg, %struct.Reg* %7795, i32 0, i32 0
  %EAX.i254 = bitcast %union.anon* %7796 to i32*
  %7797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7798 = getelementptr inbounds %struct.GPR, %struct.GPR* %7797, i32 0, i32 15
  %7799 = getelementptr inbounds %struct.Reg, %struct.Reg* %7798, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %7799 to i64*
  %7800 = load i32, i32* %EAX.i254
  %7801 = zext i32 %7800 to i64
  %7802 = load i64, i64* %RBP.i255
  %7803 = sub i64 %7802, 172
  %7804 = load i64, i64* %PC.i253
  %7805 = add i64 %7804, 6
  store i64 %7805, i64* %PC.i253
  %7806 = inttoptr i64 %7803 to i32*
  %7807 = load i32, i32* %7806
  %7808 = sub i32 %7800, %7807
  %7809 = icmp ult i32 %7800, %7807
  %7810 = zext i1 %7809 to i8
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7810, i8* %7811, align 1
  %7812 = and i32 %7808, 255
  %7813 = call i32 @llvm.ctpop.i32(i32 %7812)
  %7814 = trunc i32 %7813 to i8
  %7815 = and i8 %7814, 1
  %7816 = xor i8 %7815, 1
  %7817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7816, i8* %7817, align 1
  %7818 = xor i32 %7807, %7800
  %7819 = xor i32 %7818, %7808
  %7820 = lshr i32 %7819, 4
  %7821 = trunc i32 %7820 to i8
  %7822 = and i8 %7821, 1
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7822, i8* %7823, align 1
  %7824 = icmp eq i32 %7808, 0
  %7825 = zext i1 %7824 to i8
  %7826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7825, i8* %7826, align 1
  %7827 = lshr i32 %7808, 31
  %7828 = trunc i32 %7827 to i8
  %7829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7828, i8* %7829, align 1
  %7830 = lshr i32 %7800, 31
  %7831 = lshr i32 %7807, 31
  %7832 = xor i32 %7831, %7830
  %7833 = xor i32 %7827, %7830
  %7834 = add i32 %7833, %7832
  %7835 = icmp eq i32 %7834, 2
  %7836 = zext i1 %7835 to i8
  %7837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7836, i8* %7837, align 1
  store %struct.Memory* %loadMem_401298, %struct.Memory** %MEMORY
  %loadMem_40129e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7839 = getelementptr inbounds %struct.GPR, %struct.GPR* %7838, i32 0, i32 33
  %7840 = getelementptr inbounds %struct.Reg, %struct.Reg* %7839, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %7840 to i64*
  %7841 = load i64, i64* %PC.i252
  %7842 = add i64 %7841, 63
  %7843 = load i64, i64* %PC.i252
  %7844 = add i64 %7843, 6
  %7845 = load i64, i64* %PC.i252
  %7846 = add i64 %7845, 6
  store i64 %7846, i64* %PC.i252
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7848 = load i8, i8* %7847, align 1
  %7849 = icmp eq i8 %7848, 0
  %7850 = zext i1 %7849 to i8
  store i8 %7850, i8* %BRANCH_TAKEN, align 1
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7852 = select i1 %7849, i64 %7842, i64 %7844
  store i64 %7852, i64* %7851, align 8
  store %struct.Memory* %loadMem_40129e, %struct.Memory** %MEMORY
  %loadBr_40129e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40129e = icmp eq i8 %loadBr_40129e, 1
  br i1 %cmpBr_40129e, label %block_.L_4012dd, label %block_4012a4

block_4012a4:                                     ; preds = %block_.L_401292
  %loadMem_4012a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7854 = getelementptr inbounds %struct.GPR, %struct.GPR* %7853, i32 0, i32 33
  %7855 = getelementptr inbounds %struct.Reg, %struct.Reg* %7854, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %7855 to i64*
  %7856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7857 = getelementptr inbounds %struct.GPR, %struct.GPR* %7856, i32 0, i32 11
  %7858 = getelementptr inbounds %struct.Reg, %struct.Reg* %7857, i32 0, i32 0
  %RDI.i250 = bitcast %union.anon* %7858 to i64*
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7860 = getelementptr inbounds %struct.GPR, %struct.GPR* %7859, i32 0, i32 15
  %7861 = getelementptr inbounds %struct.Reg, %struct.Reg* %7860, i32 0, i32 0
  %RBP.i251 = bitcast %union.anon* %7861 to i64*
  %7862 = load i64, i64* %RBP.i251
  %7863 = sub i64 %7862, 80
  %7864 = load i64, i64* %PC.i249
  %7865 = add i64 %7864, 4
  store i64 %7865, i64* %PC.i249
  %7866 = inttoptr i64 %7863 to i64*
  %7867 = load i64, i64* %7866
  store i64 %7867, i64* %RDI.i250, align 8
  store %struct.Memory* %loadMem_4012a4, %struct.Memory** %MEMORY
  %loadMem_4012a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7869 = getelementptr inbounds %struct.GPR, %struct.GPR* %7868, i32 0, i32 33
  %7870 = getelementptr inbounds %struct.Reg, %struct.Reg* %7869, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %7870 to i64*
  %7871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7872 = getelementptr inbounds %struct.GPR, %struct.GPR* %7871, i32 0, i32 9
  %7873 = getelementptr inbounds %struct.Reg, %struct.Reg* %7872, i32 0, i32 0
  %RSI.i248 = bitcast %union.anon* %7873 to i64*
  %7874 = load i64, i64* %PC.i247
  %7875 = add i64 %7874, 8
  store i64 %7875, i64* %PC.i247
  %7876 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %7877 = sext i32 %7876 to i64
  store i64 %7877, i64* %RSI.i248, align 8
  store %struct.Memory* %loadMem_4012a8, %struct.Memory** %MEMORY
  %loadMem_4012b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7879 = getelementptr inbounds %struct.GPR, %struct.GPR* %7878, i32 0, i32 33
  %7880 = getelementptr inbounds %struct.Reg, %struct.Reg* %7879, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %7880 to i64*
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 7
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %RDX.i246 = bitcast %union.anon* %7883 to i64*
  %7884 = load i64, i64* %PC.i245
  %7885 = add i64 %7884, 8
  store i64 %7885, i64* %PC.i245
  %7886 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %7887 = sext i32 %7886 to i64
  store i64 %7887, i64* %RDX.i246, align 8
  store %struct.Memory* %loadMem_4012b0, %struct.Memory** %MEMORY
  %loadMem_4012b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7889 = getelementptr inbounds %struct.GPR, %struct.GPR* %7888, i32 0, i32 33
  %7890 = getelementptr inbounds %struct.Reg, %struct.Reg* %7889, i32 0, i32 0
  %PC.i242 = bitcast %union.anon* %7890 to i64*
  %7891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7892 = getelementptr inbounds %struct.GPR, %struct.GPR* %7891, i32 0, i32 15
  %7893 = getelementptr inbounds %struct.Reg, %struct.Reg* %7892, i32 0, i32 0
  %RBP.i243 = bitcast %union.anon* %7893 to i64*
  %7894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7895 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7894, i64 0, i64 0
  %YMM0.i244 = bitcast %union.VectorReg* %7895 to %"class.std::bitset"*
  %7896 = bitcast %"class.std::bitset"* %YMM0.i244 to i8*
  %7897 = load i64, i64* %RBP.i243
  %7898 = sub i64 %7897, 144
  %7899 = load i64, i64* %PC.i242
  %7900 = add i64 %7899, 8
  store i64 %7900, i64* %PC.i242
  %7901 = inttoptr i64 %7898 to double*
  %7902 = load double, double* %7901
  %7903 = bitcast i8* %7896 to double*
  store double %7902, double* %7903, align 1
  %7904 = getelementptr inbounds i8, i8* %7896, i64 8
  %7905 = bitcast i8* %7904 to double*
  store double 0.000000e+00, double* %7905, align 1
  store %struct.Memory* %loadMem_4012b8, %struct.Memory** %MEMORY
  %loadMem_4012c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7907 = getelementptr inbounds %struct.GPR, %struct.GPR* %7906, i32 0, i32 33
  %7908 = getelementptr inbounds %struct.Reg, %struct.Reg* %7907, i32 0, i32 0
  %PC.i239 = bitcast %union.anon* %7908 to i64*
  %7909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7910 = getelementptr inbounds %struct.GPR, %struct.GPR* %7909, i32 0, i32 15
  %7911 = getelementptr inbounds %struct.Reg, %struct.Reg* %7910, i32 0, i32 0
  %RBP.i240 = bitcast %union.anon* %7911 to i64*
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7913 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7912, i64 0, i64 1
  %YMM1.i241 = bitcast %union.VectorReg* %7913 to %"class.std::bitset"*
  %7914 = bitcast %"class.std::bitset"* %YMM1.i241 to i8*
  %7915 = load i64, i64* %RBP.i240
  %7916 = sub i64 %7915, 152
  %7917 = load i64, i64* %PC.i239
  %7918 = add i64 %7917, 8
  store i64 %7918, i64* %PC.i239
  %7919 = inttoptr i64 %7916 to double*
  %7920 = load double, double* %7919
  %7921 = bitcast i8* %7914 to double*
  store double %7920, double* %7921, align 1
  %7922 = getelementptr inbounds i8, i8* %7914, i64 8
  %7923 = bitcast i8* %7922 to double*
  store double 0.000000e+00, double* %7923, align 1
  store %struct.Memory* %loadMem_4012c0, %struct.Memory** %MEMORY
  %loadMem_4012c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7925 = getelementptr inbounds %struct.GPR, %struct.GPR* %7924, i32 0, i32 33
  %7926 = getelementptr inbounds %struct.Reg, %struct.Reg* %7925, i32 0, i32 0
  %PC.i236 = bitcast %union.anon* %7926 to i64*
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7928 = getelementptr inbounds %struct.GPR, %struct.GPR* %7927, i32 0, i32 15
  %7929 = getelementptr inbounds %struct.Reg, %struct.Reg* %7928, i32 0, i32 0
  %RBP.i237 = bitcast %union.anon* %7929 to i64*
  %7930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7931 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7930, i64 0, i64 2
  %YMM2.i238 = bitcast %union.VectorReg* %7931 to %"class.std::bitset"*
  %7932 = bitcast %"class.std::bitset"* %YMM2.i238 to i8*
  %7933 = load i64, i64* %RBP.i237
  %7934 = sub i64 %7933, 160
  %7935 = load i64, i64* %PC.i236
  %7936 = add i64 %7935, 8
  store i64 %7936, i64* %PC.i236
  %7937 = inttoptr i64 %7934 to double*
  %7938 = load double, double* %7937
  %7939 = bitcast i8* %7932 to double*
  store double %7938, double* %7939, align 1
  %7940 = getelementptr inbounds i8, i8* %7932, i64 8
  %7941 = bitcast i8* %7940 to double*
  store double 0.000000e+00, double* %7941, align 1
  store %struct.Memory* %loadMem_4012c8, %struct.Memory** %MEMORY
  %loadMem_4012d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7943 = getelementptr inbounds %struct.GPR, %struct.GPR* %7942, i32 0, i32 33
  %7944 = getelementptr inbounds %struct.Reg, %struct.Reg* %7943, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %7944 to i64*
  %7945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7946 = getelementptr inbounds %struct.GPR, %struct.GPR* %7945, i32 0, i32 15
  %7947 = getelementptr inbounds %struct.Reg, %struct.Reg* %7946, i32 0, i32 0
  %RBP.i234 = bitcast %union.anon* %7947 to i64*
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7949 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7948, i64 0, i64 3
  %YMM3.i235 = bitcast %union.VectorReg* %7949 to %"class.std::bitset"*
  %7950 = bitcast %"class.std::bitset"* %YMM3.i235 to i8*
  %7951 = load i64, i64* %RBP.i234
  %7952 = sub i64 %7951, 160
  %7953 = load i64, i64* %PC.i233
  %7954 = add i64 %7953, 8
  store i64 %7954, i64* %PC.i233
  %7955 = inttoptr i64 %7952 to double*
  %7956 = load double, double* %7955
  %7957 = bitcast i8* %7950 to double*
  store double %7956, double* %7957, align 1
  %7958 = getelementptr inbounds i8, i8* %7950, i64 8
  %7959 = bitcast i8* %7958 to double*
  store double 0.000000e+00, double* %7959, align 1
  store %struct.Memory* %loadMem_4012d0, %struct.Memory** %MEMORY
  %loadMem1_4012d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7961 = getelementptr inbounds %struct.GPR, %struct.GPR* %7960, i32 0, i32 33
  %7962 = getelementptr inbounds %struct.Reg, %struct.Reg* %7961, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %7962 to i64*
  %7963 = load i64, i64* %PC.i232
  %7964 = add i64 %7963, 712
  %7965 = load i64, i64* %PC.i232
  %7966 = add i64 %7965, 5
  %7967 = load i64, i64* %PC.i232
  %7968 = add i64 %7967, 5
  store i64 %7968, i64* %PC.i232
  %7969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7970 = load i64, i64* %7969, align 8
  %7971 = add i64 %7970, -8
  %7972 = inttoptr i64 %7971 to i64*
  store i64 %7966, i64* %7972
  store i64 %7971, i64* %7969, align 8
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7964, i64* %7973, align 8
  store %struct.Memory* %loadMem1_4012d8, %struct.Memory** %MEMORY
  %loadMem2_4012d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4012d8 = load i64, i64* %3
  %call2_4012d8 = call %struct.Memory* @sub_4015a0.POUT(%struct.State* %0, i64 %loadPC_4012d8, %struct.Memory* %loadMem2_4012d8)
  store %struct.Memory* %call2_4012d8, %struct.Memory** %MEMORY
  br label %block_.L_4012dd

block_.L_4012dd:                                  ; preds = %block_4012a4, %block_.L_401292
  %loadMem_4012dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7975 = getelementptr inbounds %struct.GPR, %struct.GPR* %7974, i32 0, i32 33
  %7976 = getelementptr inbounds %struct.Reg, %struct.Reg* %7975, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %7976 to i64*
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7978 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7977, i64 0, i64 0
  %YMM0.i231 = bitcast %union.VectorReg* %7978 to %"class.std::bitset"*
  %7979 = bitcast %"class.std::bitset"* %YMM0.i231 to i8*
  %7980 = load i64, i64* %PC.i230
  %7981 = load i64, i64* %PC.i230
  %7982 = add i64 %7981, 8
  store i64 %7982, i64* %PC.i230
  %7983 = load double, double* bitcast (%G_0x603__rip__type* @G_0x603__rip_ to double*)
  %7984 = bitcast i8* %7979 to double*
  store double %7983, double* %7984, align 1
  %7985 = getelementptr inbounds i8, i8* %7979, i64 8
  %7986 = bitcast i8* %7985 to double*
  store double 0.000000e+00, double* %7986, align 1
  store %struct.Memory* %loadMem_4012dd, %struct.Memory** %MEMORY
  %loadMem_4012e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7988 = getelementptr inbounds %struct.GPR, %struct.GPR* %7987, i32 0, i32 33
  %7989 = getelementptr inbounds %struct.Reg, %struct.Reg* %7988, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %7989 to i64*
  %7990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7991 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7990, i64 0, i64 1
  %YMM1.i229 = bitcast %union.VectorReg* %7991 to %"class.std::bitset"*
  %7992 = bitcast %"class.std::bitset"* %YMM1.i229 to i8*
  %7993 = load i64, i64* %PC.i228
  %7994 = load i64, i64* %PC.i228
  %7995 = add i64 %7994, 8
  store i64 %7995, i64* %PC.i228
  %7996 = load double, double* bitcast (%G_0x5cb__rip__type* @G_0x5cb__rip_ to double*)
  %7997 = bitcast i8* %7992 to double*
  store double %7996, double* %7997, align 1
  %7998 = getelementptr inbounds i8, i8* %7992, i64 8
  %7999 = bitcast i8* %7998 to double*
  store double 0.000000e+00, double* %7999, align 1
  store %struct.Memory* %loadMem_4012e5, %struct.Memory** %MEMORY
  %loadMem_4012ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8001 = getelementptr inbounds %struct.GPR, %struct.GPR* %8000, i32 0, i32 33
  %8002 = getelementptr inbounds %struct.Reg, %struct.Reg* %8001, i32 0, i32 0
  %PC.i226 = bitcast %union.anon* %8002 to i64*
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8004 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8003, i64 0, i64 2
  %YMM2.i227 = bitcast %union.VectorReg* %8004 to %"class.std::bitset"*
  %8005 = bitcast %"class.std::bitset"* %YMM2.i227 to i8*
  %8006 = load i64, i64* %PC.i226
  %8007 = load i64, i64* %PC.i226
  %8008 = add i64 %8007, 8
  store i64 %8008, i64* %PC.i226
  %8009 = load double, double* bitcast (%G_0x5e3__rip__type* @G_0x5e3__rip_ to double*)
  %8010 = bitcast i8* %8005 to double*
  store double %8009, double* %8010, align 1
  %8011 = getelementptr inbounds i8, i8* %8005, i64 8
  %8012 = bitcast i8* %8011 to double*
  store double 0.000000e+00, double* %8012, align 1
  store %struct.Memory* %loadMem_4012ed, %struct.Memory** %MEMORY
  %loadMem_4012f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8014 = getelementptr inbounds %struct.GPR, %struct.GPR* %8013, i32 0, i32 33
  %8015 = getelementptr inbounds %struct.Reg, %struct.Reg* %8014, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %8015 to i64*
  %8016 = load i64, i64* %PC.i225
  %8017 = add i64 %8016, 11
  store i64 %8017, i64* %PC.i225
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_4012f5, %struct.Memory** %MEMORY
  %loadMem_401300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8019 = getelementptr inbounds %struct.GPR, %struct.GPR* %8018, i32 0, i32 33
  %8020 = getelementptr inbounds %struct.Reg, %struct.Reg* %8019, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %8020 to i64*
  %8021 = load i64, i64* %PC.i224
  %8022 = add i64 %8021, 11
  store i64 %8022, i64* %PC.i224
  store i32 2, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_401300, %struct.Memory** %MEMORY
  %loadMem_40130b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8024 = getelementptr inbounds %struct.GPR, %struct.GPR* %8023, i32 0, i32 33
  %8025 = getelementptr inbounds %struct.Reg, %struct.Reg* %8024, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %8025 to i64*
  %8026 = load i64, i64* %PC.i223
  %8027 = add i64 %8026, 11
  store i64 %8027, i64* %PC.i223
  store i32 3, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  store %struct.Memory* %loadMem_40130b, %struct.Memory** %MEMORY
  %loadMem_401316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8029 = getelementptr inbounds %struct.GPR, %struct.GPR* %8028, i32 0, i32 33
  %8030 = getelementptr inbounds %struct.Reg, %struct.Reg* %8029, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %8030 to i64*
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8032 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8031, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %8032 to %union.vec128_t*
  %8033 = bitcast %union.vec128_t* %XMM2.i to i8*
  %8034 = load i64, i64* %PC.i222
  %8035 = add i64 %8034, 9
  store i64 %8035, i64* %PC.i222
  %8036 = bitcast i8* %8033 to double*
  %8037 = load double, double* %8036, align 1
  store double %8037, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  store %struct.Memory* %loadMem_401316, %struct.Memory** %MEMORY
  %loadMem_40131f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8039 = getelementptr inbounds %struct.GPR, %struct.GPR* %8038, i32 0, i32 33
  %8040 = getelementptr inbounds %struct.Reg, %struct.Reg* %8039, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %8040 to i64*
  %8041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8042 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8041, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %8042 to %union.vec128_t*
  %8043 = bitcast %union.vec128_t* %XMM1.i to i8*
  %8044 = load i64, i64* %PC.i221
  %8045 = add i64 %8044, 9
  store i64 %8045, i64* %PC.i221
  %8046 = bitcast i8* %8043 to double*
  %8047 = load double, double* %8046, align 1
  store double %8047, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  store %struct.Memory* %loadMem_40131f, %struct.Memory** %MEMORY
  %loadMem_401328 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8049 = getelementptr inbounds %struct.GPR, %struct.GPR* %8048, i32 0, i32 33
  %8050 = getelementptr inbounds %struct.Reg, %struct.Reg* %8049, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %8050 to i64*
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8052 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8051, i64 0, i64 0
  %XMM0.i220 = bitcast %union.VectorReg* %8052 to %union.vec128_t*
  %8053 = bitcast %union.vec128_t* %XMM0.i220 to i8*
  %8054 = load i64, i64* %PC.i219
  %8055 = add i64 %8054, 9
  store i64 %8055, i64* %PC.i219
  %8056 = bitcast i8* %8053 to double*
  %8057 = load double, double* %8056, align 1
  store double %8057, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  store %struct.Memory* %loadMem_401328, %struct.Memory** %MEMORY
  %loadMem_401331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8059 = getelementptr inbounds %struct.GPR, %struct.GPR* %8058, i32 0, i32 33
  %8060 = getelementptr inbounds %struct.Reg, %struct.Reg* %8059, i32 0, i32 0
  %PC.i217 = bitcast %union.anon* %8060 to i64*
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8062 = getelementptr inbounds %struct.GPR, %struct.GPR* %8061, i32 0, i32 15
  %8063 = getelementptr inbounds %struct.Reg, %struct.Reg* %8062, i32 0, i32 0
  %RBP.i218 = bitcast %union.anon* %8063 to i64*
  %8064 = load i64, i64* %RBP.i218
  %8065 = sub i64 %8064, 24
  %8066 = load i64, i64* %PC.i217
  %8067 = add i64 %8066, 8
  store i64 %8067, i64* %PC.i217
  %8068 = inttoptr i64 %8065 to i64*
  store i64 1, i64* %8068
  store %struct.Memory* %loadMem_401331, %struct.Memory** %MEMORY
  br label %block_.L_401339

block_.L_401339:                                  ; preds = %block_401347, %block_.L_4012dd
  %loadMem_401339 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8070 = getelementptr inbounds %struct.GPR, %struct.GPR* %8069, i32 0, i32 33
  %8071 = getelementptr inbounds %struct.Reg, %struct.Reg* %8070, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %8071 to i64*
  %8072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8073 = getelementptr inbounds %struct.GPR, %struct.GPR* %8072, i32 0, i32 1
  %8074 = getelementptr inbounds %struct.Reg, %struct.Reg* %8073, i32 0, i32 0
  %RAX.i215 = bitcast %union.anon* %8074 to i64*
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8076 = getelementptr inbounds %struct.GPR, %struct.GPR* %8075, i32 0, i32 15
  %8077 = getelementptr inbounds %struct.Reg, %struct.Reg* %8076, i32 0, i32 0
  %RBP.i216 = bitcast %union.anon* %8077 to i64*
  %8078 = load i64, i64* %RBP.i216
  %8079 = sub i64 %8078, 24
  %8080 = load i64, i64* %PC.i214
  %8081 = add i64 %8080, 4
  store i64 %8081, i64* %PC.i214
  %8082 = inttoptr i64 %8079 to i64*
  %8083 = load i64, i64* %8082
  store i64 %8083, i64* %RAX.i215, align 8
  store %struct.Memory* %loadMem_401339, %struct.Memory** %MEMORY
  %loadMem_40133d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8085 = getelementptr inbounds %struct.GPR, %struct.GPR* %8084, i32 0, i32 33
  %8086 = getelementptr inbounds %struct.Reg, %struct.Reg* %8085, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %8086 to i64*
  %8087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8088 = getelementptr inbounds %struct.GPR, %struct.GPR* %8087, i32 0, i32 1
  %8089 = getelementptr inbounds %struct.Reg, %struct.Reg* %8088, i32 0, i32 0
  %RAX.i212 = bitcast %union.anon* %8089 to i64*
  %8090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8091 = getelementptr inbounds %struct.GPR, %struct.GPR* %8090, i32 0, i32 15
  %8092 = getelementptr inbounds %struct.Reg, %struct.Reg* %8091, i32 0, i32 0
  %RBP.i213 = bitcast %union.anon* %8092 to i64*
  %8093 = load i64, i64* %RAX.i212
  %8094 = load i64, i64* %RBP.i213
  %8095 = sub i64 %8094, 88
  %8096 = load i64, i64* %PC.i211
  %8097 = add i64 %8096, 4
  store i64 %8097, i64* %PC.i211
  %8098 = inttoptr i64 %8095 to i64*
  %8099 = load i64, i64* %8098
  %8100 = sub i64 %8093, %8099
  %8101 = icmp ugt i64 %8099, %8093
  %8102 = zext i1 %8101 to i8
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8102, i8* %8103, align 1
  %8104 = trunc i64 %8100 to i32
  %8105 = and i32 %8104, 255
  %8106 = call i32 @llvm.ctpop.i32(i32 %8105)
  %8107 = trunc i32 %8106 to i8
  %8108 = and i8 %8107, 1
  %8109 = xor i8 %8108, 1
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8109, i8* %8110, align 1
  %8111 = xor i64 %8099, %8093
  %8112 = xor i64 %8111, %8100
  %8113 = lshr i64 %8112, 4
  %8114 = trunc i64 %8113 to i8
  %8115 = and i8 %8114, 1
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8115, i8* %8116, align 1
  %8117 = icmp eq i64 %8100, 0
  %8118 = zext i1 %8117 to i8
  %8119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8118, i8* %8119, align 1
  %8120 = lshr i64 %8100, 63
  %8121 = trunc i64 %8120 to i8
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8121, i8* %8122, align 1
  %8123 = lshr i64 %8093, 63
  %8124 = lshr i64 %8099, 63
  %8125 = xor i64 %8124, %8123
  %8126 = xor i64 %8120, %8123
  %8127 = add i64 %8126, %8125
  %8128 = icmp eq i64 %8127, 2
  %8129 = zext i1 %8128 to i8
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8129, i8* %8130, align 1
  store %struct.Memory* %loadMem_40133d, %struct.Memory** %MEMORY
  %loadMem_401341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8132 = getelementptr inbounds %struct.GPR, %struct.GPR* %8131, i32 0, i32 33
  %8133 = getelementptr inbounds %struct.Reg, %struct.Reg* %8132, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %8133 to i64*
  %8134 = load i64, i64* %PC.i210
  %8135 = add i64 %8134, 28
  %8136 = load i64, i64* %PC.i210
  %8137 = add i64 %8136, 6
  %8138 = load i64, i64* %PC.i210
  %8139 = add i64 %8138, 6
  store i64 %8139, i64* %PC.i210
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8141 = load i8, i8* %8140, align 1
  %8142 = icmp eq i8 %8141, 0
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8144 = load i8, i8* %8143, align 1
  %8145 = icmp ne i8 %8144, 0
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8147 = load i8, i8* %8146, align 1
  %8148 = icmp ne i8 %8147, 0
  %8149 = xor i1 %8145, %8148
  %8150 = xor i1 %8149, true
  %8151 = and i1 %8142, %8150
  %8152 = zext i1 %8151 to i8
  store i8 %8152, i8* %BRANCH_TAKEN, align 1
  %8153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8154 = select i1 %8151, i64 %8135, i64 %8137
  store i64 %8154, i64* %8153, align 8
  store %struct.Memory* %loadMem_401341, %struct.Memory** %MEMORY
  %loadBr_401341 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401341 = icmp eq i8 %loadBr_401341, 1
  br i1 %cmpBr_401341, label %block_.L_40135d, label %block_401347

block_401347:                                     ; preds = %block_.L_401339
  %loadMem1_401347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8156 = getelementptr inbounds %struct.GPR, %struct.GPR* %8155, i32 0, i32 33
  %8157 = getelementptr inbounds %struct.Reg, %struct.Reg* %8156, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %8157 to i64*
  %8158 = load i64, i64* %PC.i209
  %8159 = add i64 %8158, 1145
  %8160 = load i64, i64* %PC.i209
  %8161 = add i64 %8160, 5
  %8162 = load i64, i64* %PC.i209
  %8163 = add i64 %8162, 5
  store i64 %8163, i64* %PC.i209
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8165 = load i64, i64* %8164, align 8
  %8166 = add i64 %8165, -8
  %8167 = inttoptr i64 %8166 to i64*
  store i64 %8161, i64* %8167
  store i64 %8166, i64* %8164, align 8
  %8168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8159, i64* %8168, align 8
  store %struct.Memory* %loadMem1_401347, %struct.Memory** %MEMORY
  %loadMem2_401347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401347 = load i64, i64* %3
  %call2_401347 = call %struct.Memory* @sub_4017c0.P0(%struct.State* %0, i64 %loadPC_401347, %struct.Memory* %loadMem2_401347)
  store %struct.Memory* %call2_401347, %struct.Memory** %MEMORY
  %loadMem_40134c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8170 = getelementptr inbounds %struct.GPR, %struct.GPR* %8169, i32 0, i32 33
  %8171 = getelementptr inbounds %struct.Reg, %struct.Reg* %8170, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %8171 to i64*
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8173 = getelementptr inbounds %struct.GPR, %struct.GPR* %8172, i32 0, i32 1
  %8174 = getelementptr inbounds %struct.Reg, %struct.Reg* %8173, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %8174 to i64*
  %8175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8176 = getelementptr inbounds %struct.GPR, %struct.GPR* %8175, i32 0, i32 15
  %8177 = getelementptr inbounds %struct.Reg, %struct.Reg* %8176, i32 0, i32 0
  %RBP.i208 = bitcast %union.anon* %8177 to i64*
  %8178 = load i64, i64* %RBP.i208
  %8179 = sub i64 %8178, 24
  %8180 = load i64, i64* %PC.i206
  %8181 = add i64 %8180, 4
  store i64 %8181, i64* %PC.i206
  %8182 = inttoptr i64 %8179 to i64*
  %8183 = load i64, i64* %8182
  store i64 %8183, i64* %RAX.i207, align 8
  store %struct.Memory* %loadMem_40134c, %struct.Memory** %MEMORY
  %loadMem_401350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8185 = getelementptr inbounds %struct.GPR, %struct.GPR* %8184, i32 0, i32 33
  %8186 = getelementptr inbounds %struct.Reg, %struct.Reg* %8185, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %8186 to i64*
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8188 = getelementptr inbounds %struct.GPR, %struct.GPR* %8187, i32 0, i32 1
  %8189 = getelementptr inbounds %struct.Reg, %struct.Reg* %8188, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %8189 to i64*
  %8190 = load i64, i64* %RAX.i205
  %8191 = load i64, i64* %PC.i204
  %8192 = add i64 %8191, 4
  store i64 %8192, i64* %PC.i204
  %8193 = add i64 1, %8190
  store i64 %8193, i64* %RAX.i205, align 8
  %8194 = icmp ult i64 %8193, %8190
  %8195 = icmp ult i64 %8193, 1
  %8196 = or i1 %8194, %8195
  %8197 = zext i1 %8196 to i8
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8197, i8* %8198, align 1
  %8199 = trunc i64 %8193 to i32
  %8200 = and i32 %8199, 255
  %8201 = call i32 @llvm.ctpop.i32(i32 %8200)
  %8202 = trunc i32 %8201 to i8
  %8203 = and i8 %8202, 1
  %8204 = xor i8 %8203, 1
  %8205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8204, i8* %8205, align 1
  %8206 = xor i64 1, %8190
  %8207 = xor i64 %8206, %8193
  %8208 = lshr i64 %8207, 4
  %8209 = trunc i64 %8208 to i8
  %8210 = and i8 %8209, 1
  %8211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8210, i8* %8211, align 1
  %8212 = icmp eq i64 %8193, 0
  %8213 = zext i1 %8212 to i8
  %8214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8213, i8* %8214, align 1
  %8215 = lshr i64 %8193, 63
  %8216 = trunc i64 %8215 to i8
  %8217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8216, i8* %8217, align 1
  %8218 = lshr i64 %8190, 63
  %8219 = xor i64 %8215, %8218
  %8220 = add i64 %8219, %8215
  %8221 = icmp eq i64 %8220, 2
  %8222 = zext i1 %8221 to i8
  %8223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8222, i8* %8223, align 1
  store %struct.Memory* %loadMem_401350, %struct.Memory** %MEMORY
  %loadMem_401354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8225 = getelementptr inbounds %struct.GPR, %struct.GPR* %8224, i32 0, i32 33
  %8226 = getelementptr inbounds %struct.Reg, %struct.Reg* %8225, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %8226 to i64*
  %8227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8228 = getelementptr inbounds %struct.GPR, %struct.GPR* %8227, i32 0, i32 1
  %8229 = getelementptr inbounds %struct.Reg, %struct.Reg* %8228, i32 0, i32 0
  %RAX.i202 = bitcast %union.anon* %8229 to i64*
  %8230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8231 = getelementptr inbounds %struct.GPR, %struct.GPR* %8230, i32 0, i32 15
  %8232 = getelementptr inbounds %struct.Reg, %struct.Reg* %8231, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %8232 to i64*
  %8233 = load i64, i64* %RBP.i203
  %8234 = sub i64 %8233, 24
  %8235 = load i64, i64* %RAX.i202
  %8236 = load i64, i64* %PC.i201
  %8237 = add i64 %8236, 4
  store i64 %8237, i64* %PC.i201
  %8238 = inttoptr i64 %8234 to i64*
  store i64 %8235, i64* %8238
  store %struct.Memory* %loadMem_401354, %struct.Memory** %MEMORY
  %loadMem_401358 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8240 = getelementptr inbounds %struct.GPR, %struct.GPR* %8239, i32 0, i32 33
  %8241 = getelementptr inbounds %struct.Reg, %struct.Reg* %8240, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %8241 to i64*
  %8242 = load i64, i64* %PC.i200
  %8243 = add i64 %8242, -31
  %8244 = load i64, i64* %PC.i200
  %8245 = add i64 %8244, 5
  store i64 %8245, i64* %PC.i200
  %8246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8243, i64* %8246, align 8
  store %struct.Memory* %loadMem_401358, %struct.Memory** %MEMORY
  br label %block_.L_401339

block_.L_40135d:                                  ; preds = %block_.L_401339
  %loadMem_40135d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8248 = getelementptr inbounds %struct.GPR, %struct.GPR* %8247, i32 0, i32 33
  %8249 = getelementptr inbounds %struct.Reg, %struct.Reg* %8248, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %8249 to i64*
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8251 = getelementptr inbounds %struct.GPR, %struct.GPR* %8250, i32 0, i32 1
  %8252 = getelementptr inbounds %struct.Reg, %struct.Reg* %8251, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %8252 to i64*
  %8253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8254 = getelementptr inbounds %struct.GPR, %struct.GPR* %8253, i32 0, i32 15
  %8255 = getelementptr inbounds %struct.Reg, %struct.Reg* %8254, i32 0, i32 0
  %RBP.i199 = bitcast %union.anon* %8255 to i64*
  %8256 = load i64, i64* %RBP.i199
  %8257 = sub i64 %8256, 176
  %8258 = load i64, i64* %PC.i197
  %8259 = add i64 %8258, 6
  store i64 %8259, i64* %PC.i197
  %8260 = inttoptr i64 %8257 to i32*
  %8261 = load i32, i32* %8260
  %8262 = zext i32 %8261 to i64
  store i64 %8262, i64* %RAX.i198, align 8
  store %struct.Memory* %loadMem_40135d, %struct.Memory** %MEMORY
  %loadMem_401363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8264 = getelementptr inbounds %struct.GPR, %struct.GPR* %8263, i32 0, i32 33
  %8265 = getelementptr inbounds %struct.Reg, %struct.Reg* %8264, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %8265 to i64*
  %8266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8267 = getelementptr inbounds %struct.GPR, %struct.GPR* %8266, i32 0, i32 1
  %8268 = getelementptr inbounds %struct.Reg, %struct.Reg* %8267, i32 0, i32 0
  %EAX.i195 = bitcast %union.anon* %8268 to i32*
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8270 = getelementptr inbounds %struct.GPR, %struct.GPR* %8269, i32 0, i32 15
  %8271 = getelementptr inbounds %struct.Reg, %struct.Reg* %8270, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %8271 to i64*
  %8272 = load i32, i32* %EAX.i195
  %8273 = zext i32 %8272 to i64
  %8274 = load i64, i64* %RBP.i196
  %8275 = sub i64 %8274, 172
  %8276 = load i64, i64* %PC.i194
  %8277 = add i64 %8276, 6
  store i64 %8277, i64* %PC.i194
  %8278 = inttoptr i64 %8275 to i32*
  %8279 = load i32, i32* %8278
  %8280 = sub i32 %8272, %8279
  %8281 = icmp ult i32 %8272, %8279
  %8282 = zext i1 %8281 to i8
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8282, i8* %8283, align 1
  %8284 = and i32 %8280, 255
  %8285 = call i32 @llvm.ctpop.i32(i32 %8284)
  %8286 = trunc i32 %8285 to i8
  %8287 = and i8 %8286, 1
  %8288 = xor i8 %8287, 1
  %8289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8288, i8* %8289, align 1
  %8290 = xor i32 %8279, %8272
  %8291 = xor i32 %8290, %8280
  %8292 = lshr i32 %8291, 4
  %8293 = trunc i32 %8292 to i8
  %8294 = and i8 %8293, 1
  %8295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8294, i8* %8295, align 1
  %8296 = icmp eq i32 %8280, 0
  %8297 = zext i1 %8296 to i8
  %8298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8297, i8* %8298, align 1
  %8299 = lshr i32 %8280, 31
  %8300 = trunc i32 %8299 to i8
  %8301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8300, i8* %8301, align 1
  %8302 = lshr i32 %8272, 31
  %8303 = lshr i32 %8279, 31
  %8304 = xor i32 %8303, %8302
  %8305 = xor i32 %8299, %8302
  %8306 = add i32 %8305, %8304
  %8307 = icmp eq i32 %8306, 2
  %8308 = zext i1 %8307 to i8
  %8309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8308, i8* %8309, align 1
  store %struct.Memory* %loadMem_401363, %struct.Memory** %MEMORY
  %loadMem_401369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8311 = getelementptr inbounds %struct.GPR, %struct.GPR* %8310, i32 0, i32 33
  %8312 = getelementptr inbounds %struct.Reg, %struct.Reg* %8311, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %8312 to i64*
  %8313 = load i64, i64* %PC.i193
  %8314 = add i64 %8313, 67
  %8315 = load i64, i64* %PC.i193
  %8316 = add i64 %8315, 6
  %8317 = load i64, i64* %PC.i193
  %8318 = add i64 %8317, 6
  store i64 %8318, i64* %PC.i193
  %8319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8320 = load i8, i8* %8319, align 1
  %8321 = icmp eq i8 %8320, 0
  %8322 = zext i1 %8321 to i8
  store i8 %8322, i8* %BRANCH_TAKEN, align 1
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8324 = select i1 %8321, i64 %8314, i64 %8316
  store i64 %8324, i64* %8323, align 8
  store %struct.Memory* %loadMem_401369, %struct.Memory** %MEMORY
  %loadBr_401369 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401369 = icmp eq i8 %loadBr_401369, 1
  br i1 %cmpBr_401369, label %block_.L_4013ac, label %block_40136f

block_40136f:                                     ; preds = %block_.L_40135d
  %loadMem_40136f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8326 = getelementptr inbounds %struct.GPR, %struct.GPR* %8325, i32 0, i32 33
  %8327 = getelementptr inbounds %struct.Reg, %struct.Reg* %8326, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %8327 to i64*
  %8328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8329 = getelementptr inbounds %struct.GPR, %struct.GPR* %8328, i32 0, i32 11
  %8330 = getelementptr inbounds %struct.Reg, %struct.Reg* %8329, i32 0, i32 0
  %RDI.i191 = bitcast %union.anon* %8330 to i64*
  %8331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8332 = getelementptr inbounds %struct.GPR, %struct.GPR* %8331, i32 0, i32 15
  %8333 = getelementptr inbounds %struct.Reg, %struct.Reg* %8332, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %8333 to i64*
  %8334 = load i64, i64* %RBP.i192
  %8335 = sub i64 %8334, 88
  %8336 = load i64, i64* %PC.i190
  %8337 = add i64 %8336, 4
  store i64 %8337, i64* %PC.i190
  %8338 = inttoptr i64 %8335 to i64*
  %8339 = load i64, i64* %8338
  store i64 %8339, i64* %RDI.i191, align 8
  store %struct.Memory* %loadMem_40136f, %struct.Memory** %MEMORY
  %loadMem_401373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8341 = getelementptr inbounds %struct.GPR, %struct.GPR* %8340, i32 0, i32 33
  %8342 = getelementptr inbounds %struct.Reg, %struct.Reg* %8341, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %8342 to i64*
  %8343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8344 = getelementptr inbounds %struct.GPR, %struct.GPR* %8343, i32 0, i32 9
  %8345 = getelementptr inbounds %struct.Reg, %struct.Reg* %8344, i32 0, i32 0
  %RSI.i189 = bitcast %union.anon* %8345 to i64*
  %8346 = load i64, i64* %PC.i188
  %8347 = add i64 %8346, 8
  store i64 %8347, i64* %PC.i188
  %8348 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8349 = sext i32 %8348 to i64
  store i64 %8349, i64* %RSI.i189, align 8
  store %struct.Memory* %loadMem_401373, %struct.Memory** %MEMORY
  %loadMem_40137b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8351 = getelementptr inbounds %struct.GPR, %struct.GPR* %8350, i32 0, i32 33
  %8352 = getelementptr inbounds %struct.Reg, %struct.Reg* %8351, i32 0, i32 0
  %PC.i186 = bitcast %union.anon* %8352 to i64*
  %8353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8354 = getelementptr inbounds %struct.GPR, %struct.GPR* %8353, i32 0, i32 7
  %8355 = getelementptr inbounds %struct.Reg, %struct.Reg* %8354, i32 0, i32 0
  %RDX.i187 = bitcast %union.anon* %8355 to i64*
  %8356 = load i64, i64* %PC.i186
  %8357 = add i64 %8356, 8
  store i64 %8357, i64* %PC.i186
  %8358 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %8359 = sext i32 %8358 to i64
  store i64 %8359, i64* %RDX.i187, align 8
  store %struct.Memory* %loadMem_40137b, %struct.Memory** %MEMORY
  %loadMem_401383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8361 = getelementptr inbounds %struct.GPR, %struct.GPR* %8360, i32 0, i32 33
  %8362 = getelementptr inbounds %struct.Reg, %struct.Reg* %8361, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %8362 to i64*
  %8363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8364 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8363, i64 0, i64 0
  %YMM0.i185 = bitcast %union.VectorReg* %8364 to %"class.std::bitset"*
  %8365 = bitcast %"class.std::bitset"* %YMM0.i185 to i8*
  %8366 = load i64, i64* %PC.i184
  %8367 = add i64 %8366, 9
  store i64 %8367, i64* %PC.i184
  %8368 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %8369 = bitcast i8* %8365 to double*
  store double %8368, double* %8369, align 1
  %8370 = getelementptr inbounds i8, i8* %8365, i64 8
  %8371 = bitcast i8* %8370 to double*
  store double 0.000000e+00, double* %8371, align 1
  store %struct.Memory* %loadMem_401383, %struct.Memory** %MEMORY
  %loadMem_40138c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8373 = getelementptr inbounds %struct.GPR, %struct.GPR* %8372, i32 0, i32 33
  %8374 = getelementptr inbounds %struct.Reg, %struct.Reg* %8373, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %8374 to i64*
  %8375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8376 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8375, i64 0, i64 1
  %YMM1.i183 = bitcast %union.VectorReg* %8376 to %"class.std::bitset"*
  %8377 = bitcast %"class.std::bitset"* %YMM1.i183 to i8*
  %8378 = load i64, i64* %PC.i182
  %8379 = add i64 %8378, 9
  store i64 %8379, i64* %PC.i182
  %8380 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %8381 = bitcast i8* %8377 to double*
  store double %8380, double* %8381, align 1
  %8382 = getelementptr inbounds i8, i8* %8377, i64 8
  %8383 = bitcast i8* %8382 to double*
  store double 0.000000e+00, double* %8383, align 1
  store %struct.Memory* %loadMem_40138c, %struct.Memory** %MEMORY
  %loadMem_401395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8385 = getelementptr inbounds %struct.GPR, %struct.GPR* %8384, i32 0, i32 33
  %8386 = getelementptr inbounds %struct.Reg, %struct.Reg* %8385, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %8386 to i64*
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8388 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8387, i64 0, i64 2
  %YMM2.i181 = bitcast %union.VectorReg* %8388 to %"class.std::bitset"*
  %8389 = bitcast %"class.std::bitset"* %YMM2.i181 to i8*
  %8390 = load i64, i64* %PC.i180
  %8391 = add i64 %8390, 9
  store i64 %8391, i64* %PC.i180
  %8392 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %8393 = bitcast i8* %8389 to double*
  store double %8392, double* %8393, align 1
  %8394 = getelementptr inbounds i8, i8* %8389, i64 8
  %8395 = bitcast i8* %8394 to double*
  store double 0.000000e+00, double* %8395, align 1
  store %struct.Memory* %loadMem_401395, %struct.Memory** %MEMORY
  %loadMem_40139e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8397 = getelementptr inbounds %struct.GPR, %struct.GPR* %8396, i32 0, i32 33
  %8398 = getelementptr inbounds %struct.Reg, %struct.Reg* %8397, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %8398 to i64*
  %8399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8400 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8399, i64 0, i64 3
  %YMM3.i179 = bitcast %union.VectorReg* %8400 to %"class.std::bitset"*
  %8401 = bitcast %"class.std::bitset"* %YMM3.i179 to i8*
  %8402 = load i64, i64* %PC.i178
  %8403 = add i64 %8402, 9
  store i64 %8403, i64* %PC.i178
  %8404 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %8405 = bitcast i8* %8401 to double*
  store double %8404, double* %8405, align 1
  %8406 = getelementptr inbounds i8, i8* %8401, i64 8
  %8407 = bitcast i8* %8406 to double*
  store double 0.000000e+00, double* %8407, align 1
  store %struct.Memory* %loadMem_40139e, %struct.Memory** %MEMORY
  %loadMem1_4013a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8409 = getelementptr inbounds %struct.GPR, %struct.GPR* %8408, i32 0, i32 33
  %8410 = getelementptr inbounds %struct.Reg, %struct.Reg* %8409, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %8410 to i64*
  %8411 = load i64, i64* %PC.i177
  %8412 = add i64 %8411, 505
  %8413 = load i64, i64* %PC.i177
  %8414 = add i64 %8413, 5
  %8415 = load i64, i64* %PC.i177
  %8416 = add i64 %8415, 5
  store i64 %8416, i64* %PC.i177
  %8417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8418 = load i64, i64* %8417, align 8
  %8419 = add i64 %8418, -8
  %8420 = inttoptr i64 %8419 to i64*
  store i64 %8414, i64* %8420
  store i64 %8419, i64* %8417, align 8
  %8421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8412, i64* %8421, align 8
  store %struct.Memory* %loadMem1_4013a7, %struct.Memory** %MEMORY
  %loadMem2_4013a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4013a7 = load i64, i64* %3
  %call2_4013a7 = call %struct.Memory* @sub_4015a0.POUT(%struct.State* %0, i64 %loadPC_4013a7, %struct.Memory* %loadMem2_4013a7)
  store %struct.Memory* %call2_4013a7, %struct.Memory** %MEMORY
  br label %block_.L_4013ac

block_.L_4013ac:                                  ; preds = %block_40136f, %block_.L_40135d
  %loadMem_4013ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 33
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %8424 to i64*
  %8425 = load i64, i64* %PC.i176
  %8426 = add i64 %8425, 11
  store i64 %8426, i64* %PC.i176
  store i32 2, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_4013ac, %struct.Memory** %MEMORY
  %loadMem_4013b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8428 = getelementptr inbounds %struct.GPR, %struct.GPR* %8427, i32 0, i32 33
  %8429 = getelementptr inbounds %struct.Reg, %struct.Reg* %8428, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %8429 to i64*
  %8430 = load i64, i64* %PC.i175
  %8431 = add i64 %8430, 11
  store i64 %8431, i64* %PC.i175
  store i32 3, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_4013b7, %struct.Memory** %MEMORY
  %loadMem_4013c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8433 = getelementptr inbounds %struct.GPR, %struct.GPR* %8432, i32 0, i32 33
  %8434 = getelementptr inbounds %struct.Reg, %struct.Reg* %8433, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %8434 to i64*
  %8435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8436 = getelementptr inbounds %struct.GPR, %struct.GPR* %8435, i32 0, i32 15
  %8437 = getelementptr inbounds %struct.Reg, %struct.Reg* %8436, i32 0, i32 0
  %RBP.i174 = bitcast %union.anon* %8437 to i64*
  %8438 = load i64, i64* %RBP.i174
  %8439 = sub i64 %8438, 24
  %8440 = load i64, i64* %PC.i173
  %8441 = add i64 %8440, 8
  store i64 %8441, i64* %PC.i173
  %8442 = inttoptr i64 %8439 to i64*
  store i64 1, i64* %8442
  store %struct.Memory* %loadMem_4013c2, %struct.Memory** %MEMORY
  br label %block_.L_4013ca

block_.L_4013ca:                                  ; preds = %block_4013d8, %block_.L_4013ac
  %loadMem_4013ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %8443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8444 = getelementptr inbounds %struct.GPR, %struct.GPR* %8443, i32 0, i32 33
  %8445 = getelementptr inbounds %struct.Reg, %struct.Reg* %8444, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %8445 to i64*
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8447 = getelementptr inbounds %struct.GPR, %struct.GPR* %8446, i32 0, i32 1
  %8448 = getelementptr inbounds %struct.Reg, %struct.Reg* %8447, i32 0, i32 0
  %RAX.i171 = bitcast %union.anon* %8448 to i64*
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8450 = getelementptr inbounds %struct.GPR, %struct.GPR* %8449, i32 0, i32 15
  %8451 = getelementptr inbounds %struct.Reg, %struct.Reg* %8450, i32 0, i32 0
  %RBP.i172 = bitcast %union.anon* %8451 to i64*
  %8452 = load i64, i64* %RBP.i172
  %8453 = sub i64 %8452, 24
  %8454 = load i64, i64* %PC.i170
  %8455 = add i64 %8454, 4
  store i64 %8455, i64* %PC.i170
  %8456 = inttoptr i64 %8453 to i64*
  %8457 = load i64, i64* %8456
  store i64 %8457, i64* %RAX.i171, align 8
  store %struct.Memory* %loadMem_4013ca, %struct.Memory** %MEMORY
  %loadMem_4013ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8459 = getelementptr inbounds %struct.GPR, %struct.GPR* %8458, i32 0, i32 33
  %8460 = getelementptr inbounds %struct.Reg, %struct.Reg* %8459, i32 0, i32 0
  %PC.i167 = bitcast %union.anon* %8460 to i64*
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8462 = getelementptr inbounds %struct.GPR, %struct.GPR* %8461, i32 0, i32 1
  %8463 = getelementptr inbounds %struct.Reg, %struct.Reg* %8462, i32 0, i32 0
  %RAX.i168 = bitcast %union.anon* %8463 to i64*
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8465 = getelementptr inbounds %struct.GPR, %struct.GPR* %8464, i32 0, i32 15
  %8466 = getelementptr inbounds %struct.Reg, %struct.Reg* %8465, i32 0, i32 0
  %RBP.i169 = bitcast %union.anon* %8466 to i64*
  %8467 = load i64, i64* %RAX.i168
  %8468 = load i64, i64* %RBP.i169
  %8469 = sub i64 %8468, 96
  %8470 = load i64, i64* %PC.i167
  %8471 = add i64 %8470, 4
  store i64 %8471, i64* %PC.i167
  %8472 = inttoptr i64 %8469 to i64*
  %8473 = load i64, i64* %8472
  %8474 = sub i64 %8467, %8473
  %8475 = icmp ugt i64 %8473, %8467
  %8476 = zext i1 %8475 to i8
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8476, i8* %8477, align 1
  %8478 = trunc i64 %8474 to i32
  %8479 = and i32 %8478, 255
  %8480 = call i32 @llvm.ctpop.i32(i32 %8479)
  %8481 = trunc i32 %8480 to i8
  %8482 = and i8 %8481, 1
  %8483 = xor i8 %8482, 1
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8483, i8* %8484, align 1
  %8485 = xor i64 %8473, %8467
  %8486 = xor i64 %8485, %8474
  %8487 = lshr i64 %8486, 4
  %8488 = trunc i64 %8487 to i8
  %8489 = and i8 %8488, 1
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8489, i8* %8490, align 1
  %8491 = icmp eq i64 %8474, 0
  %8492 = zext i1 %8491 to i8
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8492, i8* %8493, align 1
  %8494 = lshr i64 %8474, 63
  %8495 = trunc i64 %8494 to i8
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8495, i8* %8496, align 1
  %8497 = lshr i64 %8467, 63
  %8498 = lshr i64 %8473, 63
  %8499 = xor i64 %8498, %8497
  %8500 = xor i64 %8494, %8497
  %8501 = add i64 %8500, %8499
  %8502 = icmp eq i64 %8501, 2
  %8503 = zext i1 %8502 to i8
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8503, i8* %8504, align 1
  store %struct.Memory* %loadMem_4013ce, %struct.Memory** %MEMORY
  %loadMem_4013d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8506 = getelementptr inbounds %struct.GPR, %struct.GPR* %8505, i32 0, i32 33
  %8507 = getelementptr inbounds %struct.Reg, %struct.Reg* %8506, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %8507 to i64*
  %8508 = load i64, i64* %PC.i166
  %8509 = add i64 %8508, 114
  %8510 = load i64, i64* %PC.i166
  %8511 = add i64 %8510, 6
  %8512 = load i64, i64* %PC.i166
  %8513 = add i64 %8512, 6
  store i64 %8513, i64* %PC.i166
  %8514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8515 = load i8, i8* %8514, align 1
  %8516 = icmp eq i8 %8515, 0
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8518 = load i8, i8* %8517, align 1
  %8519 = icmp ne i8 %8518, 0
  %8520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8521 = load i8, i8* %8520, align 1
  %8522 = icmp ne i8 %8521, 0
  %8523 = xor i1 %8519, %8522
  %8524 = xor i1 %8523, true
  %8525 = and i1 %8516, %8524
  %8526 = zext i1 %8525 to i8
  store i8 %8526, i8* %BRANCH_TAKEN, align 1
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8528 = select i1 %8525, i64 %8509, i64 %8511
  store i64 %8528, i64* %8527, align 8
  store %struct.Memory* %loadMem_4013d2, %struct.Memory** %MEMORY
  %loadBr_4013d2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4013d2 = icmp eq i8 %loadBr_4013d2, 1
  br i1 %cmpBr_4013d2, label %block_.L_401444, label %block_4013d8

block_4013d8:                                     ; preds = %block_.L_4013ca
  %loadMem_4013d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8530 = getelementptr inbounds %struct.GPR, %struct.GPR* %8529, i32 0, i32 33
  %8531 = getelementptr inbounds %struct.Reg, %struct.Reg* %8530, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %8531 to i64*
  %8532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8533 = getelementptr inbounds %struct.GPR, %struct.GPR* %8532, i32 0, i32 1
  %8534 = getelementptr inbounds %struct.Reg, %struct.Reg* %8533, i32 0, i32 0
  %RAX.i165 = bitcast %union.anon* %8534 to i64*
  %8535 = load i64, i64* %PC.i164
  %8536 = add i64 %8535, 7
  store i64 %8536, i64* %PC.i164
  %8537 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8538 = zext i32 %8537 to i64
  store i64 %8538, i64* %RAX.i165, align 8
  store %struct.Memory* %loadMem_4013d8, %struct.Memory** %MEMORY
  %loadMem_4013df = load %struct.Memory*, %struct.Memory** %MEMORY
  %8539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8540 = getelementptr inbounds %struct.GPR, %struct.GPR* %8539, i32 0, i32 33
  %8541 = getelementptr inbounds %struct.Reg, %struct.Reg* %8540, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %8541 to i64*
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8543 = getelementptr inbounds %struct.GPR, %struct.GPR* %8542, i32 0, i32 1
  %8544 = getelementptr inbounds %struct.Reg, %struct.Reg* %8543, i32 0, i32 0
  %RAX.i163 = bitcast %union.anon* %8544 to i64*
  %8545 = load i64, i64* %RAX.i163
  %8546 = load i64, i64* %PC.i162
  %8547 = add i64 %8546, 7
  store i64 %8547, i64* %PC.i162
  %8548 = trunc i64 %8545 to i32
  %8549 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %8550 = add i32 %8549, %8548
  %8551 = zext i32 %8550 to i64
  store i64 %8551, i64* %RAX.i163, align 8
  %8552 = icmp ult i32 %8550, %8548
  %8553 = icmp ult i32 %8550, %8549
  %8554 = or i1 %8552, %8553
  %8555 = zext i1 %8554 to i8
  %8556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8555, i8* %8556, align 1
  %8557 = and i32 %8550, 255
  %8558 = call i32 @llvm.ctpop.i32(i32 %8557)
  %8559 = trunc i32 %8558 to i8
  %8560 = and i8 %8559, 1
  %8561 = xor i8 %8560, 1
  %8562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8561, i8* %8562, align 1
  %8563 = xor i32 %8549, %8548
  %8564 = xor i32 %8563, %8550
  %8565 = lshr i32 %8564, 4
  %8566 = trunc i32 %8565 to i8
  %8567 = and i8 %8566, 1
  %8568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8567, i8* %8568, align 1
  %8569 = icmp eq i32 %8550, 0
  %8570 = zext i1 %8569 to i8
  %8571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8570, i8* %8571, align 1
  %8572 = lshr i32 %8550, 31
  %8573 = trunc i32 %8572 to i8
  %8574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8573, i8* %8574, align 1
  %8575 = lshr i32 %8548, 31
  %8576 = lshr i32 %8549, 31
  %8577 = xor i32 %8572, %8575
  %8578 = xor i32 %8572, %8576
  %8579 = add i32 %8577, %8578
  %8580 = icmp eq i32 %8579, 2
  %8581 = zext i1 %8580 to i8
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8581, i8* %8582, align 1
  store %struct.Memory* %loadMem_4013df, %struct.Memory** %MEMORY
  %loadMem_4013e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8584 = getelementptr inbounds %struct.GPR, %struct.GPR* %8583, i32 0, i32 33
  %8585 = getelementptr inbounds %struct.Reg, %struct.Reg* %8584, i32 0, i32 0
  %PC.i160 = bitcast %union.anon* %8585 to i64*
  %8586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8587 = getelementptr inbounds %struct.GPR, %struct.GPR* %8586, i32 0, i32 1
  %8588 = getelementptr inbounds %struct.Reg, %struct.Reg* %8587, i32 0, i32 0
  %EAX.i161 = bitcast %union.anon* %8588 to i32*
  %8589 = load i32, i32* %EAX.i161
  %8590 = zext i32 %8589 to i64
  %8591 = load i64, i64* %PC.i160
  %8592 = add i64 %8591, 7
  store i64 %8592, i64* %PC.i160
  store i32 %8589, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_4013e6, %struct.Memory** %MEMORY
  %loadMem_4013ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8594 = getelementptr inbounds %struct.GPR, %struct.GPR* %8593, i32 0, i32 33
  %8595 = getelementptr inbounds %struct.Reg, %struct.Reg* %8594, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %8595 to i64*
  %8596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8597 = getelementptr inbounds %struct.GPR, %struct.GPR* %8596, i32 0, i32 1
  %8598 = getelementptr inbounds %struct.Reg, %struct.Reg* %8597, i32 0, i32 0
  %RAX.i159 = bitcast %union.anon* %8598 to i64*
  %8599 = load i64, i64* %PC.i158
  %8600 = add i64 %8599, 7
  store i64 %8600, i64* %PC.i158
  %8601 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8602 = zext i32 %8601 to i64
  store i64 %8602, i64* %RAX.i159, align 8
  store %struct.Memory* %loadMem_4013ed, %struct.Memory** %MEMORY
  %loadMem_4013f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8604 = getelementptr inbounds %struct.GPR, %struct.GPR* %8603, i32 0, i32 33
  %8605 = getelementptr inbounds %struct.Reg, %struct.Reg* %8604, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %8605 to i64*
  %8606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8607 = getelementptr inbounds %struct.GPR, %struct.GPR* %8606, i32 0, i32 1
  %8608 = getelementptr inbounds %struct.Reg, %struct.Reg* %8607, i32 0, i32 0
  %RAX.i157 = bitcast %union.anon* %8608 to i64*
  %8609 = load i64, i64* %RAX.i157
  %8610 = load i64, i64* %PC.i156
  %8611 = add i64 %8610, 7
  store i64 %8611, i64* %PC.i156
  %8612 = trunc i64 %8609 to i32
  %8613 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %8614 = add i32 %8613, %8612
  %8615 = zext i32 %8614 to i64
  store i64 %8615, i64* %RAX.i157, align 8
  %8616 = icmp ult i32 %8614, %8612
  %8617 = icmp ult i32 %8614, %8613
  %8618 = or i1 %8616, %8617
  %8619 = zext i1 %8618 to i8
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8619, i8* %8620, align 1
  %8621 = and i32 %8614, 255
  %8622 = call i32 @llvm.ctpop.i32(i32 %8621)
  %8623 = trunc i32 %8622 to i8
  %8624 = and i8 %8623, 1
  %8625 = xor i8 %8624, 1
  %8626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8625, i8* %8626, align 1
  %8627 = xor i32 %8613, %8612
  %8628 = xor i32 %8627, %8614
  %8629 = lshr i32 %8628, 4
  %8630 = trunc i32 %8629 to i8
  %8631 = and i8 %8630, 1
  %8632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8631, i8* %8632, align 1
  %8633 = icmp eq i32 %8614, 0
  %8634 = zext i1 %8633 to i8
  %8635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8634, i8* %8635, align 1
  %8636 = lshr i32 %8614, 31
  %8637 = trunc i32 %8636 to i8
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8637, i8* %8638, align 1
  %8639 = lshr i32 %8612, 31
  %8640 = lshr i32 %8613, 31
  %8641 = xor i32 %8636, %8639
  %8642 = xor i32 %8636, %8640
  %8643 = add i32 %8641, %8642
  %8644 = icmp eq i32 %8643, 2
  %8645 = zext i1 %8644 to i8
  %8646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8645, i8* %8646, align 1
  store %struct.Memory* %loadMem_4013f4, %struct.Memory** %MEMORY
  %loadMem_4013fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8648 = getelementptr inbounds %struct.GPR, %struct.GPR* %8647, i32 0, i32 33
  %8649 = getelementptr inbounds %struct.Reg, %struct.Reg* %8648, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %8649 to i64*
  %8650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8651 = getelementptr inbounds %struct.GPR, %struct.GPR* %8650, i32 0, i32 1
  %8652 = getelementptr inbounds %struct.Reg, %struct.Reg* %8651, i32 0, i32 0
  %EAX.i155 = bitcast %union.anon* %8652 to i32*
  %8653 = load i32, i32* %EAX.i155
  %8654 = zext i32 %8653 to i64
  %8655 = load i64, i64* %PC.i154
  %8656 = add i64 %8655, 7
  store i64 %8656, i64* %PC.i154
  store i32 %8653, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_4013fb, %struct.Memory** %MEMORY
  %loadMem_401402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8658 = getelementptr inbounds %struct.GPR, %struct.GPR* %8657, i32 0, i32 33
  %8659 = getelementptr inbounds %struct.Reg, %struct.Reg* %8658, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %8659 to i64*
  %8660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8661 = getelementptr inbounds %struct.GPR, %struct.GPR* %8660, i32 0, i32 1
  %8662 = getelementptr inbounds %struct.Reg, %struct.Reg* %8661, i32 0, i32 0
  %RAX.i153 = bitcast %union.anon* %8662 to i64*
  %8663 = load i64, i64* %PC.i152
  %8664 = add i64 %8663, 7
  store i64 %8664, i64* %PC.i152
  %8665 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %8666 = zext i32 %8665 to i64
  store i64 %8666, i64* %RAX.i153, align 8
  store %struct.Memory* %loadMem_401402, %struct.Memory** %MEMORY
  %loadMem_401409 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8668 = getelementptr inbounds %struct.GPR, %struct.GPR* %8667, i32 0, i32 33
  %8669 = getelementptr inbounds %struct.Reg, %struct.Reg* %8668, i32 0, i32 0
  %PC.i150 = bitcast %union.anon* %8669 to i64*
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8671 = getelementptr inbounds %struct.GPR, %struct.GPR* %8670, i32 0, i32 1
  %8672 = getelementptr inbounds %struct.Reg, %struct.Reg* %8671, i32 0, i32 0
  %RAX.i151 = bitcast %union.anon* %8672 to i64*
  %8673 = load i64, i64* %RAX.i151
  %8674 = load i64, i64* %PC.i150
  %8675 = add i64 %8674, 7
  store i64 %8675, i64* %PC.i150
  %8676 = trunc i64 %8673 to i32
  %8677 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8678 = sub i32 %8676, %8677
  %8679 = zext i32 %8678 to i64
  store i64 %8679, i64* %RAX.i151, align 8
  %8680 = icmp ult i32 %8676, %8677
  %8681 = zext i1 %8680 to i8
  %8682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8681, i8* %8682, align 1
  %8683 = and i32 %8678, 255
  %8684 = call i32 @llvm.ctpop.i32(i32 %8683)
  %8685 = trunc i32 %8684 to i8
  %8686 = and i8 %8685, 1
  %8687 = xor i8 %8686, 1
  %8688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8687, i8* %8688, align 1
  %8689 = xor i32 %8677, %8676
  %8690 = xor i32 %8689, %8678
  %8691 = lshr i32 %8690, 4
  %8692 = trunc i32 %8691 to i8
  %8693 = and i8 %8692, 1
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8693, i8* %8694, align 1
  %8695 = icmp eq i32 %8678, 0
  %8696 = zext i1 %8695 to i8
  %8697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8696, i8* %8697, align 1
  %8698 = lshr i32 %8678, 31
  %8699 = trunc i32 %8698 to i8
  %8700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8699, i8* %8700, align 1
  %8701 = lshr i32 %8676, 31
  %8702 = lshr i32 %8677, 31
  %8703 = xor i32 %8702, %8701
  %8704 = xor i32 %8698, %8701
  %8705 = add i32 %8704, %8703
  %8706 = icmp eq i32 %8705, 2
  %8707 = zext i1 %8706 to i8
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8707, i8* %8708, align 1
  store %struct.Memory* %loadMem_401409, %struct.Memory** %MEMORY
  %loadMem_401410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8710 = getelementptr inbounds %struct.GPR, %struct.GPR* %8709, i32 0, i32 33
  %8711 = getelementptr inbounds %struct.Reg, %struct.Reg* %8710, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %8711 to i64*
  %8712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8713 = getelementptr inbounds %struct.GPR, %struct.GPR* %8712, i32 0, i32 1
  %8714 = getelementptr inbounds %struct.Reg, %struct.Reg* %8713, i32 0, i32 0
  %EAX.i149 = bitcast %union.anon* %8714 to i32*
  %8715 = load i32, i32* %EAX.i149
  %8716 = zext i32 %8715 to i64
  %8717 = load i64, i64* %PC.i148
  %8718 = add i64 %8717, 7
  store i64 %8718, i64* %PC.i148
  store i32 %8715, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  store %struct.Memory* %loadMem_401410, %struct.Memory** %MEMORY
  %loadMem_401417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8720 = getelementptr inbounds %struct.GPR, %struct.GPR* %8719, i32 0, i32 33
  %8721 = getelementptr inbounds %struct.Reg, %struct.Reg* %8720, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %8721 to i64*
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8723 = getelementptr inbounds %struct.GPR, %struct.GPR* %8722, i32 0, i32 1
  %8724 = getelementptr inbounds %struct.Reg, %struct.Reg* %8723, i32 0, i32 0
  %RAX.i147 = bitcast %union.anon* %8724 to i64*
  %8725 = load i64, i64* %PC.i146
  %8726 = add i64 %8725, 7
  store i64 %8726, i64* %PC.i146
  %8727 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %8728 = zext i32 %8727 to i64
  store i64 %8728, i64* %RAX.i147, align 8
  store %struct.Memory* %loadMem_401417, %struct.Memory** %MEMORY
  %loadMem_40141e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8730 = getelementptr inbounds %struct.GPR, %struct.GPR* %8729, i32 0, i32 33
  %8731 = getelementptr inbounds %struct.Reg, %struct.Reg* %8730, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %8731 to i64*
  %8732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8733 = getelementptr inbounds %struct.GPR, %struct.GPR* %8732, i32 0, i32 1
  %8734 = getelementptr inbounds %struct.Reg, %struct.Reg* %8733, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %8734 to i64*
  %8735 = load i64, i64* %RAX.i145
  %8736 = load i64, i64* %PC.i144
  %8737 = add i64 %8736, 7
  store i64 %8737, i64* %PC.i144
  %8738 = trunc i64 %8735 to i32
  %8739 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8740 = sub i32 %8738, %8739
  %8741 = zext i32 %8740 to i64
  store i64 %8741, i64* %RAX.i145, align 8
  %8742 = icmp ult i32 %8738, %8739
  %8743 = zext i1 %8742 to i8
  %8744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8743, i8* %8744, align 1
  %8745 = and i32 %8740, 255
  %8746 = call i32 @llvm.ctpop.i32(i32 %8745)
  %8747 = trunc i32 %8746 to i8
  %8748 = and i8 %8747, 1
  %8749 = xor i8 %8748, 1
  %8750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8749, i8* %8750, align 1
  %8751 = xor i32 %8739, %8738
  %8752 = xor i32 %8751, %8740
  %8753 = lshr i32 %8752, 4
  %8754 = trunc i32 %8753 to i8
  %8755 = and i8 %8754, 1
  %8756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8755, i8* %8756, align 1
  %8757 = icmp eq i32 %8740, 0
  %8758 = zext i1 %8757 to i8
  %8759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8758, i8* %8759, align 1
  %8760 = lshr i32 %8740, 31
  %8761 = trunc i32 %8760 to i8
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8761, i8* %8762, align 1
  %8763 = lshr i32 %8738, 31
  %8764 = lshr i32 %8739, 31
  %8765 = xor i32 %8764, %8763
  %8766 = xor i32 %8760, %8763
  %8767 = add i32 %8766, %8765
  %8768 = icmp eq i32 %8767, 2
  %8769 = zext i1 %8768 to i8
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8769, i8* %8770, align 1
  store %struct.Memory* %loadMem_40141e, %struct.Memory** %MEMORY
  %loadMem_401425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8772 = getelementptr inbounds %struct.GPR, %struct.GPR* %8771, i32 0, i32 33
  %8773 = getelementptr inbounds %struct.Reg, %struct.Reg* %8772, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %8773 to i64*
  %8774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8775 = getelementptr inbounds %struct.GPR, %struct.GPR* %8774, i32 0, i32 1
  %8776 = getelementptr inbounds %struct.Reg, %struct.Reg* %8775, i32 0, i32 0
  %RAX.i143 = bitcast %union.anon* %8776 to i64*
  %8777 = load i64, i64* %RAX.i143
  %8778 = load i64, i64* %PC.i142
  %8779 = add i64 %8778, 7
  store i64 %8779, i64* %PC.i142
  %8780 = trunc i64 %8777 to i32
  %8781 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %8782 = sub i32 %8780, %8781
  %8783 = zext i32 %8782 to i64
  store i64 %8783, i64* %RAX.i143, align 8
  %8784 = icmp ult i32 %8780, %8781
  %8785 = zext i1 %8784 to i8
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8785, i8* %8786, align 1
  %8787 = and i32 %8782, 255
  %8788 = call i32 @llvm.ctpop.i32(i32 %8787)
  %8789 = trunc i32 %8788 to i8
  %8790 = and i8 %8789, 1
  %8791 = xor i8 %8790, 1
  %8792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8791, i8* %8792, align 1
  %8793 = xor i32 %8781, %8780
  %8794 = xor i32 %8793, %8782
  %8795 = lshr i32 %8794, 4
  %8796 = trunc i32 %8795 to i8
  %8797 = and i8 %8796, 1
  %8798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8797, i8* %8798, align 1
  %8799 = icmp eq i32 %8782, 0
  %8800 = zext i1 %8799 to i8
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8800, i8* %8801, align 1
  %8802 = lshr i32 %8782, 31
  %8803 = trunc i32 %8802 to i8
  %8804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8803, i8* %8804, align 1
  %8805 = lshr i32 %8780, 31
  %8806 = lshr i32 %8781, 31
  %8807 = xor i32 %8806, %8805
  %8808 = xor i32 %8802, %8805
  %8809 = add i32 %8808, %8807
  %8810 = icmp eq i32 %8809, 2
  %8811 = zext i1 %8810 to i8
  %8812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8811, i8* %8812, align 1
  store %struct.Memory* %loadMem_401425, %struct.Memory** %MEMORY
  %loadMem_40142c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8814 = getelementptr inbounds %struct.GPR, %struct.GPR* %8813, i32 0, i32 33
  %8815 = getelementptr inbounds %struct.Reg, %struct.Reg* %8814, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %8815 to i64*
  %8816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8817 = getelementptr inbounds %struct.GPR, %struct.GPR* %8816, i32 0, i32 1
  %8818 = getelementptr inbounds %struct.Reg, %struct.Reg* %8817, i32 0, i32 0
  %EAX.i141 = bitcast %union.anon* %8818 to i32*
  %8819 = load i32, i32* %EAX.i141
  %8820 = zext i32 %8819 to i64
  %8821 = load i64, i64* %PC.i140
  %8822 = add i64 %8821, 7
  store i64 %8822, i64* %PC.i140
  store i32 %8819, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  store %struct.Memory* %loadMem_40142c, %struct.Memory** %MEMORY
  %loadMem_401433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8824 = getelementptr inbounds %struct.GPR, %struct.GPR* %8823, i32 0, i32 33
  %8825 = getelementptr inbounds %struct.Reg, %struct.Reg* %8824, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %8825 to i64*
  %8826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8827 = getelementptr inbounds %struct.GPR, %struct.GPR* %8826, i32 0, i32 1
  %8828 = getelementptr inbounds %struct.Reg, %struct.Reg* %8827, i32 0, i32 0
  %RAX.i138 = bitcast %union.anon* %8828 to i64*
  %8829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8830 = getelementptr inbounds %struct.GPR, %struct.GPR* %8829, i32 0, i32 15
  %8831 = getelementptr inbounds %struct.Reg, %struct.Reg* %8830, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %8831 to i64*
  %8832 = load i64, i64* %RBP.i139
  %8833 = sub i64 %8832, 24
  %8834 = load i64, i64* %PC.i137
  %8835 = add i64 %8834, 4
  store i64 %8835, i64* %PC.i137
  %8836 = inttoptr i64 %8833 to i64*
  %8837 = load i64, i64* %8836
  store i64 %8837, i64* %RAX.i138, align 8
  store %struct.Memory* %loadMem_401433, %struct.Memory** %MEMORY
  %loadMem_401437 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8839 = getelementptr inbounds %struct.GPR, %struct.GPR* %8838, i32 0, i32 33
  %8840 = getelementptr inbounds %struct.Reg, %struct.Reg* %8839, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %8840 to i64*
  %8841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8842 = getelementptr inbounds %struct.GPR, %struct.GPR* %8841, i32 0, i32 1
  %8843 = getelementptr inbounds %struct.Reg, %struct.Reg* %8842, i32 0, i32 0
  %RAX.i136 = bitcast %union.anon* %8843 to i64*
  %8844 = load i64, i64* %RAX.i136
  %8845 = load i64, i64* %PC.i135
  %8846 = add i64 %8845, 4
  store i64 %8846, i64* %PC.i135
  %8847 = add i64 1, %8844
  store i64 %8847, i64* %RAX.i136, align 8
  %8848 = icmp ult i64 %8847, %8844
  %8849 = icmp ult i64 %8847, 1
  %8850 = or i1 %8848, %8849
  %8851 = zext i1 %8850 to i8
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8851, i8* %8852, align 1
  %8853 = trunc i64 %8847 to i32
  %8854 = and i32 %8853, 255
  %8855 = call i32 @llvm.ctpop.i32(i32 %8854)
  %8856 = trunc i32 %8855 to i8
  %8857 = and i8 %8856, 1
  %8858 = xor i8 %8857, 1
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8858, i8* %8859, align 1
  %8860 = xor i64 1, %8844
  %8861 = xor i64 %8860, %8847
  %8862 = lshr i64 %8861, 4
  %8863 = trunc i64 %8862 to i8
  %8864 = and i8 %8863, 1
  %8865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8864, i8* %8865, align 1
  %8866 = icmp eq i64 %8847, 0
  %8867 = zext i1 %8866 to i8
  %8868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8867, i8* %8868, align 1
  %8869 = lshr i64 %8847, 63
  %8870 = trunc i64 %8869 to i8
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8870, i8* %8871, align 1
  %8872 = lshr i64 %8844, 63
  %8873 = xor i64 %8869, %8872
  %8874 = add i64 %8873, %8869
  %8875 = icmp eq i64 %8874, 2
  %8876 = zext i1 %8875 to i8
  %8877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8876, i8* %8877, align 1
  store %struct.Memory* %loadMem_401437, %struct.Memory** %MEMORY
  %loadMem_40143b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8879 = getelementptr inbounds %struct.GPR, %struct.GPR* %8878, i32 0, i32 33
  %8880 = getelementptr inbounds %struct.Reg, %struct.Reg* %8879, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %8880 to i64*
  %8881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8882 = getelementptr inbounds %struct.GPR, %struct.GPR* %8881, i32 0, i32 1
  %8883 = getelementptr inbounds %struct.Reg, %struct.Reg* %8882, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %8883 to i64*
  %8884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8885 = getelementptr inbounds %struct.GPR, %struct.GPR* %8884, i32 0, i32 15
  %8886 = getelementptr inbounds %struct.Reg, %struct.Reg* %8885, i32 0, i32 0
  %RBP.i134 = bitcast %union.anon* %8886 to i64*
  %8887 = load i64, i64* %RBP.i134
  %8888 = sub i64 %8887, 24
  %8889 = load i64, i64* %RAX.i133
  %8890 = load i64, i64* %PC.i132
  %8891 = add i64 %8890, 4
  store i64 %8891, i64* %PC.i132
  %8892 = inttoptr i64 %8888 to i64*
  store i64 %8889, i64* %8892
  store %struct.Memory* %loadMem_40143b, %struct.Memory** %MEMORY
  %loadMem_40143f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8894 = getelementptr inbounds %struct.GPR, %struct.GPR* %8893, i32 0, i32 33
  %8895 = getelementptr inbounds %struct.Reg, %struct.Reg* %8894, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %8895 to i64*
  %8896 = load i64, i64* %PC.i131
  %8897 = add i64 %8896, -117
  %8898 = load i64, i64* %PC.i131
  %8899 = add i64 %8898, 5
  store i64 %8899, i64* %PC.i131
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8897, i64* %8900, align 8
  store %struct.Memory* %loadMem_40143f, %struct.Memory** %MEMORY
  br label %block_.L_4013ca

block_.L_401444:                                  ; preds = %block_.L_4013ca
  %loadMem_401444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8902 = getelementptr inbounds %struct.GPR, %struct.GPR* %8901, i32 0, i32 33
  %8903 = getelementptr inbounds %struct.Reg, %struct.Reg* %8902, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %8903 to i64*
  %8904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8905 = getelementptr inbounds %struct.GPR, %struct.GPR* %8904, i32 0, i32 1
  %8906 = getelementptr inbounds %struct.Reg, %struct.Reg* %8905, i32 0, i32 0
  %RAX.i129 = bitcast %union.anon* %8906 to i64*
  %8907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8908 = getelementptr inbounds %struct.GPR, %struct.GPR* %8907, i32 0, i32 15
  %8909 = getelementptr inbounds %struct.Reg, %struct.Reg* %8908, i32 0, i32 0
  %RBP.i130 = bitcast %union.anon* %8909 to i64*
  %8910 = load i64, i64* %RBP.i130
  %8911 = sub i64 %8910, 176
  %8912 = load i64, i64* %PC.i128
  %8913 = add i64 %8912, 6
  store i64 %8913, i64* %PC.i128
  %8914 = inttoptr i64 %8911 to i32*
  %8915 = load i32, i32* %8914
  %8916 = zext i32 %8915 to i64
  store i64 %8916, i64* %RAX.i129, align 8
  store %struct.Memory* %loadMem_401444, %struct.Memory** %MEMORY
  %loadMem_40144a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8918 = getelementptr inbounds %struct.GPR, %struct.GPR* %8917, i32 0, i32 33
  %8919 = getelementptr inbounds %struct.Reg, %struct.Reg* %8918, i32 0, i32 0
  %PC.i125 = bitcast %union.anon* %8919 to i64*
  %8920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8921 = getelementptr inbounds %struct.GPR, %struct.GPR* %8920, i32 0, i32 1
  %8922 = getelementptr inbounds %struct.Reg, %struct.Reg* %8921, i32 0, i32 0
  %EAX.i126 = bitcast %union.anon* %8922 to i32*
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8924 = getelementptr inbounds %struct.GPR, %struct.GPR* %8923, i32 0, i32 15
  %8925 = getelementptr inbounds %struct.Reg, %struct.Reg* %8924, i32 0, i32 0
  %RBP.i127 = bitcast %union.anon* %8925 to i64*
  %8926 = load i32, i32* %EAX.i126
  %8927 = zext i32 %8926 to i64
  %8928 = load i64, i64* %RBP.i127
  %8929 = sub i64 %8928, 172
  %8930 = load i64, i64* %PC.i125
  %8931 = add i64 %8930, 6
  store i64 %8931, i64* %PC.i125
  %8932 = inttoptr i64 %8929 to i32*
  %8933 = load i32, i32* %8932
  %8934 = sub i32 %8926, %8933
  %8935 = icmp ult i32 %8926, %8933
  %8936 = zext i1 %8935 to i8
  %8937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8936, i8* %8937, align 1
  %8938 = and i32 %8934, 255
  %8939 = call i32 @llvm.ctpop.i32(i32 %8938)
  %8940 = trunc i32 %8939 to i8
  %8941 = and i8 %8940, 1
  %8942 = xor i8 %8941, 1
  %8943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8942, i8* %8943, align 1
  %8944 = xor i32 %8933, %8926
  %8945 = xor i32 %8944, %8934
  %8946 = lshr i32 %8945, 4
  %8947 = trunc i32 %8946 to i8
  %8948 = and i8 %8947, 1
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8948, i8* %8949, align 1
  %8950 = icmp eq i32 %8934, 0
  %8951 = zext i1 %8950 to i8
  %8952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8951, i8* %8952, align 1
  %8953 = lshr i32 %8934, 31
  %8954 = trunc i32 %8953 to i8
  %8955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8954, i8* %8955, align 1
  %8956 = lshr i32 %8926, 31
  %8957 = lshr i32 %8933, 31
  %8958 = xor i32 %8957, %8956
  %8959 = xor i32 %8953, %8956
  %8960 = add i32 %8959, %8958
  %8961 = icmp eq i32 %8960, 2
  %8962 = zext i1 %8961 to i8
  %8963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8962, i8* %8963, align 1
  store %struct.Memory* %loadMem_40144a, %struct.Memory** %MEMORY
  %loadMem_401450 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8965 = getelementptr inbounds %struct.GPR, %struct.GPR* %8964, i32 0, i32 33
  %8966 = getelementptr inbounds %struct.Reg, %struct.Reg* %8965, i32 0, i32 0
  %PC.i124 = bitcast %union.anon* %8966 to i64*
  %8967 = load i64, i64* %PC.i124
  %8968 = add i64 %8967, 54
  %8969 = load i64, i64* %PC.i124
  %8970 = add i64 %8969, 6
  %8971 = load i64, i64* %PC.i124
  %8972 = add i64 %8971, 6
  store i64 %8972, i64* %PC.i124
  %8973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8974 = load i8, i8* %8973, align 1
  %8975 = icmp eq i8 %8974, 0
  %8976 = zext i1 %8975 to i8
  store i8 %8976, i8* %BRANCH_TAKEN, align 1
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8978 = select i1 %8975, i64 %8968, i64 %8970
  store i64 %8978, i64* %8977, align 8
  store %struct.Memory* %loadMem_401450, %struct.Memory** %MEMORY
  %loadBr_401450 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401450 = icmp eq i8 %loadBr_401450, 1
  br i1 %cmpBr_401450, label %block_.L_401486, label %block_401456

block_401456:                                     ; preds = %block_.L_401444
  %loadMem_401456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8980 = getelementptr inbounds %struct.GPR, %struct.GPR* %8979, i32 0, i32 33
  %8981 = getelementptr inbounds %struct.Reg, %struct.Reg* %8980, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %8981 to i64*
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8983 = getelementptr inbounds %struct.GPR, %struct.GPR* %8982, i32 0, i32 11
  %8984 = getelementptr inbounds %struct.Reg, %struct.Reg* %8983, i32 0, i32 0
  %RDI.i122 = bitcast %union.anon* %8984 to i64*
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8986 = getelementptr inbounds %struct.GPR, %struct.GPR* %8985, i32 0, i32 15
  %8987 = getelementptr inbounds %struct.Reg, %struct.Reg* %8986, i32 0, i32 0
  %RBP.i123 = bitcast %union.anon* %8987 to i64*
  %8988 = load i64, i64* %RBP.i123
  %8989 = sub i64 %8988, 96
  %8990 = load i64, i64* %PC.i121
  %8991 = add i64 %8990, 4
  store i64 %8991, i64* %PC.i121
  %8992 = inttoptr i64 %8989 to i64*
  %8993 = load i64, i64* %8992
  store i64 %8993, i64* %RDI.i122, align 8
  store %struct.Memory* %loadMem_401456, %struct.Memory** %MEMORY
  %loadMem_40145a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8995 = getelementptr inbounds %struct.GPR, %struct.GPR* %8994, i32 0, i32 33
  %8996 = getelementptr inbounds %struct.Reg, %struct.Reg* %8995, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %8996 to i64*
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 9
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %RSI.i120 = bitcast %union.anon* %8999 to i64*
  %9000 = load i64, i64* %PC.i119
  %9001 = add i64 %9000, 8
  store i64 %9001, i64* %PC.i119
  %9002 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %9003 = sext i32 %9002 to i64
  store i64 %9003, i64* %RSI.i120, align 8
  store %struct.Memory* %loadMem_40145a, %struct.Memory** %MEMORY
  %loadMem_401462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9005 = getelementptr inbounds %struct.GPR, %struct.GPR* %9004, i32 0, i32 33
  %9006 = getelementptr inbounds %struct.Reg, %struct.Reg* %9005, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %9006 to i64*
  %9007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9008 = getelementptr inbounds %struct.GPR, %struct.GPR* %9007, i32 0, i32 7
  %9009 = getelementptr inbounds %struct.Reg, %struct.Reg* %9008, i32 0, i32 0
  %RDX.i118 = bitcast %union.anon* %9009 to i64*
  %9010 = load i64, i64* %PC.i117
  %9011 = add i64 %9010, 8
  store i64 %9011, i64* %PC.i117
  %9012 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %9013 = sext i32 %9012 to i64
  store i64 %9013, i64* %RDX.i118, align 8
  store %struct.Memory* %loadMem_401462, %struct.Memory** %MEMORY
  %loadMem_40146a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9015 = getelementptr inbounds %struct.GPR, %struct.GPR* %9014, i32 0, i32 33
  %9016 = getelementptr inbounds %struct.Reg, %struct.Reg* %9015, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %9016 to i64*
  %9017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9018 = getelementptr inbounds %struct.GPR, %struct.GPR* %9017, i32 0, i32 15
  %9019 = getelementptr inbounds %struct.Reg, %struct.Reg* %9018, i32 0, i32 0
  %RBP.i115 = bitcast %union.anon* %9019 to i64*
  %9020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9021 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9020, i64 0, i64 0
  %YMM0.i116 = bitcast %union.VectorReg* %9021 to %"class.std::bitset"*
  %9022 = bitcast %"class.std::bitset"* %YMM0.i116 to i8*
  %9023 = load i64, i64* %RBP.i115
  %9024 = sub i64 %9023, 112
  %9025 = load i64, i64* %PC.i114
  %9026 = add i64 %9025, 5
  store i64 %9026, i64* %PC.i114
  %9027 = inttoptr i64 %9024 to double*
  %9028 = load double, double* %9027
  %9029 = bitcast i8* %9022 to double*
  store double %9028, double* %9029, align 1
  %9030 = getelementptr inbounds i8, i8* %9022, i64 8
  %9031 = bitcast i8* %9030 to double*
  store double 0.000000e+00, double* %9031, align 1
  store %struct.Memory* %loadMem_40146a, %struct.Memory** %MEMORY
  %loadMem_40146f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9033 = getelementptr inbounds %struct.GPR, %struct.GPR* %9032, i32 0, i32 33
  %9034 = getelementptr inbounds %struct.Reg, %struct.Reg* %9033, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %9034 to i64*
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9036 = getelementptr inbounds %struct.GPR, %struct.GPR* %9035, i32 0, i32 15
  %9037 = getelementptr inbounds %struct.Reg, %struct.Reg* %9036, i32 0, i32 0
  %RBP.i112 = bitcast %union.anon* %9037 to i64*
  %9038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9039 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9038, i64 0, i64 1
  %YMM1.i113 = bitcast %union.VectorReg* %9039 to %"class.std::bitset"*
  %9040 = bitcast %"class.std::bitset"* %YMM1.i113 to i8*
  %9041 = load i64, i64* %RBP.i112
  %9042 = sub i64 %9041, 120
  %9043 = load i64, i64* %PC.i111
  %9044 = add i64 %9043, 5
  store i64 %9044, i64* %PC.i111
  %9045 = inttoptr i64 %9042 to double*
  %9046 = load double, double* %9045
  %9047 = bitcast i8* %9040 to double*
  store double %9046, double* %9047, align 1
  %9048 = getelementptr inbounds i8, i8* %9040, i64 8
  %9049 = bitcast i8* %9048 to double*
  store double 0.000000e+00, double* %9049, align 1
  store %struct.Memory* %loadMem_40146f, %struct.Memory** %MEMORY
  %loadMem_401474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9051 = getelementptr inbounds %struct.GPR, %struct.GPR* %9050, i32 0, i32 33
  %9052 = getelementptr inbounds %struct.Reg, %struct.Reg* %9051, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %9052 to i64*
  %9053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9054 = getelementptr inbounds %struct.GPR, %struct.GPR* %9053, i32 0, i32 15
  %9055 = getelementptr inbounds %struct.Reg, %struct.Reg* %9054, i32 0, i32 0
  %RBP.i109 = bitcast %union.anon* %9055 to i64*
  %9056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9057 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9056, i64 0, i64 2
  %YMM2.i110 = bitcast %union.VectorReg* %9057 to %"class.std::bitset"*
  %9058 = bitcast %"class.std::bitset"* %YMM2.i110 to i8*
  %9059 = load i64, i64* %RBP.i109
  %9060 = sub i64 %9059, 128
  %9061 = load i64, i64* %PC.i108
  %9062 = add i64 %9061, 5
  store i64 %9062, i64* %PC.i108
  %9063 = inttoptr i64 %9060 to double*
  %9064 = load double, double* %9063
  %9065 = bitcast i8* %9058 to double*
  store double %9064, double* %9065, align 1
  %9066 = getelementptr inbounds i8, i8* %9058, i64 8
  %9067 = bitcast i8* %9066 to double*
  store double 0.000000e+00, double* %9067, align 1
  store %struct.Memory* %loadMem_401474, %struct.Memory** %MEMORY
  %loadMem_401479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9069 = getelementptr inbounds %struct.GPR, %struct.GPR* %9068, i32 0, i32 33
  %9070 = getelementptr inbounds %struct.Reg, %struct.Reg* %9069, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %9070 to i64*
  %9071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9072 = getelementptr inbounds %struct.GPR, %struct.GPR* %9071, i32 0, i32 15
  %9073 = getelementptr inbounds %struct.Reg, %struct.Reg* %9072, i32 0, i32 0
  %RBP.i106 = bitcast %union.anon* %9073 to i64*
  %9074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9075 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9074, i64 0, i64 3
  %YMM3.i107 = bitcast %union.VectorReg* %9075 to %"class.std::bitset"*
  %9076 = bitcast %"class.std::bitset"* %YMM3.i107 to i8*
  %9077 = load i64, i64* %RBP.i106
  %9078 = sub i64 %9077, 136
  %9079 = load i64, i64* %PC.i105
  %9080 = add i64 %9079, 8
  store i64 %9080, i64* %PC.i105
  %9081 = inttoptr i64 %9078 to double*
  %9082 = load double, double* %9081
  %9083 = bitcast i8* %9076 to double*
  store double %9082, double* %9083, align 1
  %9084 = getelementptr inbounds i8, i8* %9076, i64 8
  %9085 = bitcast i8* %9084 to double*
  store double 0.000000e+00, double* %9085, align 1
  store %struct.Memory* %loadMem_401479, %struct.Memory** %MEMORY
  %loadMem1_401481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9087 = getelementptr inbounds %struct.GPR, %struct.GPR* %9086, i32 0, i32 33
  %9088 = getelementptr inbounds %struct.Reg, %struct.Reg* %9087, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %9088 to i64*
  %9089 = load i64, i64* %PC.i104
  %9090 = add i64 %9089, 287
  %9091 = load i64, i64* %PC.i104
  %9092 = add i64 %9091, 5
  %9093 = load i64, i64* %PC.i104
  %9094 = add i64 %9093, 5
  store i64 %9094, i64* %PC.i104
  %9095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9096 = load i64, i64* %9095, align 8
  %9097 = add i64 %9096, -8
  %9098 = inttoptr i64 %9097 to i64*
  store i64 %9092, i64* %9098
  store i64 %9097, i64* %9095, align 8
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9090, i64* %9099, align 8
  store %struct.Memory* %loadMem1_401481, %struct.Memory** %MEMORY
  %loadMem2_401481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401481 = load i64, i64* %3
  %call2_401481 = call %struct.Memory* @sub_4015a0.POUT(%struct.State* %0, i64 %loadPC_401481, %struct.Memory* %loadMem2_401481)
  store %struct.Memory* %call2_401481, %struct.Memory** %MEMORY
  br label %block_.L_401486

block_.L_401486:                                  ; preds = %block_401456, %block_.L_401444
  %loadMem_401486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9101 = getelementptr inbounds %struct.GPR, %struct.GPR* %9100, i32 0, i32 33
  %9102 = getelementptr inbounds %struct.Reg, %struct.Reg* %9101, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %9102 to i64*
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9104 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9103, i64 0, i64 0
  %YMM0.i103 = bitcast %union.VectorReg* %9104 to %"class.std::bitset"*
  %9105 = bitcast %"class.std::bitset"* %YMM0.i103 to i8*
  %9106 = load i64, i64* %PC.i102
  %9107 = load i64, i64* %PC.i102
  %9108 = add i64 %9107, 8
  store i64 %9108, i64* %PC.i102
  %9109 = load double, double* bitcast (%G_0x462__rip__type* @G_0x462__rip_ to double*)
  %9110 = bitcast i8* %9105 to double*
  store double %9109, double* %9110, align 1
  %9111 = getelementptr inbounds i8, i8* %9105, i64 8
  %9112 = bitcast i8* %9111 to double*
  store double 0.000000e+00, double* %9112, align 1
  store %struct.Memory* %loadMem_401486, %struct.Memory** %MEMORY
  %loadMem_40148e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9114 = getelementptr inbounds %struct.GPR, %struct.GPR* %9113, i32 0, i32 33
  %9115 = getelementptr inbounds %struct.Reg, %struct.Reg* %9114, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %9115 to i64*
  %9116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9117 = getelementptr inbounds %struct.GPR, %struct.GPR* %9116, i32 0, i32 15
  %9118 = getelementptr inbounds %struct.Reg, %struct.Reg* %9117, i32 0, i32 0
  %RBP.i100 = bitcast %union.anon* %9118 to i64*
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9120 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9119, i64 0, i64 0
  %XMM0.i101 = bitcast %union.VectorReg* %9120 to %union.vec128_t*
  %9121 = load i64, i64* %RBP.i100
  %9122 = sub i64 %9121, 144
  %9123 = bitcast %union.vec128_t* %XMM0.i101 to i8*
  %9124 = load i64, i64* %PC.i99
  %9125 = add i64 %9124, 8
  store i64 %9125, i64* %PC.i99
  %9126 = bitcast i8* %9123 to double*
  %9127 = load double, double* %9126, align 1
  %9128 = inttoptr i64 %9122 to double*
  store double %9127, double* %9128
  store %struct.Memory* %loadMem_40148e, %struct.Memory** %MEMORY
  %loadMem_401496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9130 = getelementptr inbounds %struct.GPR, %struct.GPR* %9129, i32 0, i32 33
  %9131 = getelementptr inbounds %struct.Reg, %struct.Reg* %9130, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %9131 to i64*
  %9132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9133 = getelementptr inbounds %struct.GPR, %struct.GPR* %9132, i32 0, i32 15
  %9134 = getelementptr inbounds %struct.Reg, %struct.Reg* %9133, i32 0, i32 0
  %RBP.i98 = bitcast %union.anon* %9134 to i64*
  %9135 = load i64, i64* %RBP.i98
  %9136 = sub i64 %9135, 24
  %9137 = load i64, i64* %PC.i97
  %9138 = add i64 %9137, 8
  store i64 %9138, i64* %PC.i97
  %9139 = inttoptr i64 %9136 to i64*
  store i64 1, i64* %9139
  store %struct.Memory* %loadMem_401496, %struct.Memory** %MEMORY
  br label %block_.L_40149e

block_.L_40149e:                                  ; preds = %block_4014ac, %block_.L_401486
  %loadMem_40149e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9141 = getelementptr inbounds %struct.GPR, %struct.GPR* %9140, i32 0, i32 33
  %9142 = getelementptr inbounds %struct.Reg, %struct.Reg* %9141, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %9142 to i64*
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9144 = getelementptr inbounds %struct.GPR, %struct.GPR* %9143, i32 0, i32 1
  %9145 = getelementptr inbounds %struct.Reg, %struct.Reg* %9144, i32 0, i32 0
  %RAX.i95 = bitcast %union.anon* %9145 to i64*
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9147 = getelementptr inbounds %struct.GPR, %struct.GPR* %9146, i32 0, i32 15
  %9148 = getelementptr inbounds %struct.Reg, %struct.Reg* %9147, i32 0, i32 0
  %RBP.i96 = bitcast %union.anon* %9148 to i64*
  %9149 = load i64, i64* %RBP.i96
  %9150 = sub i64 %9149, 24
  %9151 = load i64, i64* %PC.i94
  %9152 = add i64 %9151, 4
  store i64 %9152, i64* %PC.i94
  %9153 = inttoptr i64 %9150 to i64*
  %9154 = load i64, i64* %9153
  store i64 %9154, i64* %RAX.i95, align 8
  store %struct.Memory* %loadMem_40149e, %struct.Memory** %MEMORY
  %loadMem_4014a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9156 = getelementptr inbounds %struct.GPR, %struct.GPR* %9155, i32 0, i32 33
  %9157 = getelementptr inbounds %struct.Reg, %struct.Reg* %9156, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %9157 to i64*
  %9158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9159 = getelementptr inbounds %struct.GPR, %struct.GPR* %9158, i32 0, i32 1
  %9160 = getelementptr inbounds %struct.Reg, %struct.Reg* %9159, i32 0, i32 0
  %RAX.i92 = bitcast %union.anon* %9160 to i64*
  %9161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9162 = getelementptr inbounds %struct.GPR, %struct.GPR* %9161, i32 0, i32 15
  %9163 = getelementptr inbounds %struct.Reg, %struct.Reg* %9162, i32 0, i32 0
  %RBP.i93 = bitcast %union.anon* %9163 to i64*
  %9164 = load i64, i64* %RAX.i92
  %9165 = load i64, i64* %RBP.i93
  %9166 = sub i64 %9165, 104
  %9167 = load i64, i64* %PC.i91
  %9168 = add i64 %9167, 4
  store i64 %9168, i64* %PC.i91
  %9169 = inttoptr i64 %9166 to i64*
  %9170 = load i64, i64* %9169
  %9171 = sub i64 %9164, %9170
  %9172 = icmp ugt i64 %9170, %9164
  %9173 = zext i1 %9172 to i8
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9173, i8* %9174, align 1
  %9175 = trunc i64 %9171 to i32
  %9176 = and i32 %9175, 255
  %9177 = call i32 @llvm.ctpop.i32(i32 %9176)
  %9178 = trunc i32 %9177 to i8
  %9179 = and i8 %9178, 1
  %9180 = xor i8 %9179, 1
  %9181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9180, i8* %9181, align 1
  %9182 = xor i64 %9170, %9164
  %9183 = xor i64 %9182, %9171
  %9184 = lshr i64 %9183, 4
  %9185 = trunc i64 %9184 to i8
  %9186 = and i8 %9185, 1
  %9187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9186, i8* %9187, align 1
  %9188 = icmp eq i64 %9171, 0
  %9189 = zext i1 %9188 to i8
  %9190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9189, i8* %9190, align 1
  %9191 = lshr i64 %9171, 63
  %9192 = trunc i64 %9191 to i8
  %9193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9192, i8* %9193, align 1
  %9194 = lshr i64 %9164, 63
  %9195 = lshr i64 %9170, 63
  %9196 = xor i64 %9195, %9194
  %9197 = xor i64 %9191, %9194
  %9198 = add i64 %9197, %9196
  %9199 = icmp eq i64 %9198, 2
  %9200 = zext i1 %9199 to i8
  %9201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9200, i8* %9201, align 1
  store %struct.Memory* %loadMem_4014a2, %struct.Memory** %MEMORY
  %loadMem_4014a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9203 = getelementptr inbounds %struct.GPR, %struct.GPR* %9202, i32 0, i32 33
  %9204 = getelementptr inbounds %struct.Reg, %struct.Reg* %9203, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %9204 to i64*
  %9205 = load i64, i64* %PC.i90
  %9206 = add i64 %9205, 63
  %9207 = load i64, i64* %PC.i90
  %9208 = add i64 %9207, 6
  %9209 = load i64, i64* %PC.i90
  %9210 = add i64 %9209, 6
  store i64 %9210, i64* %PC.i90
  %9211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9212 = load i8, i8* %9211, align 1
  %9213 = icmp eq i8 %9212, 0
  %9214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9215 = load i8, i8* %9214, align 1
  %9216 = icmp ne i8 %9215, 0
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9218 = load i8, i8* %9217, align 1
  %9219 = icmp ne i8 %9218, 0
  %9220 = xor i1 %9216, %9219
  %9221 = xor i1 %9220, true
  %9222 = and i1 %9213, %9221
  %9223 = zext i1 %9222 to i8
  store i8 %9223, i8* %BRANCH_TAKEN, align 1
  %9224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9225 = select i1 %9222, i64 %9206, i64 %9208
  store i64 %9225, i64* %9224, align 8
  store %struct.Memory* %loadMem_4014a6, %struct.Memory** %MEMORY
  %loadBr_4014a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4014a6 = icmp eq i8 %loadBr_4014a6, 1
  br i1 %cmpBr_4014a6, label %block_.L_4014e5, label %block_4014ac

block_4014ac:                                     ; preds = %block_.L_40149e
  %loadMem_4014ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %9226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9227 = getelementptr inbounds %struct.GPR, %struct.GPR* %9226, i32 0, i32 33
  %9228 = getelementptr inbounds %struct.Reg, %struct.Reg* %9227, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %9228 to i64*
  %9229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9230 = getelementptr inbounds %struct.GPR, %struct.GPR* %9229, i32 0, i32 15
  %9231 = getelementptr inbounds %struct.Reg, %struct.Reg* %9230, i32 0, i32 0
  %RBP.i88 = bitcast %union.anon* %9231 to i64*
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9233 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9232, i64 0, i64 0
  %YMM0.i89 = bitcast %union.VectorReg* %9233 to %"class.std::bitset"*
  %9234 = bitcast %"class.std::bitset"* %YMM0.i89 to i8*
  %9235 = load i64, i64* %RBP.i88
  %9236 = sub i64 %9235, 144
  %9237 = load i64, i64* %PC.i87
  %9238 = add i64 %9237, 8
  store i64 %9238, i64* %PC.i87
  %9239 = inttoptr i64 %9236 to double*
  %9240 = load double, double* %9239
  %9241 = bitcast i8* %9234 to double*
  store double %9240, double* %9241, align 1
  %9242 = getelementptr inbounds i8, i8* %9234, i64 8
  %9243 = bitcast i8* %9242 to double*
  store double 0.000000e+00, double* %9243, align 1
  store %struct.Memory* %loadMem_4014ac, %struct.Memory** %MEMORY
  %loadMem1_4014b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9245 = getelementptr inbounds %struct.GPR, %struct.GPR* %9244, i32 0, i32 33
  %9246 = getelementptr inbounds %struct.Reg, %struct.Reg* %9245, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %9246 to i64*
  %9247 = load i64, i64* %PC.i86
  %9248 = add i64 %9247, -3588
  %9249 = load i64, i64* %PC.i86
  %9250 = add i64 %9249, 5
  %9251 = load i64, i64* %PC.i86
  %9252 = add i64 %9251, 5
  store i64 %9252, i64* %PC.i86
  %9253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9254 = load i64, i64* %9253, align 8
  %9255 = add i64 %9254, -8
  %9256 = inttoptr i64 %9255 to i64*
  store i64 %9250, i64* %9256
  store i64 %9255, i64* %9253, align 8
  %9257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9248, i64* %9257, align 8
  store %struct.Memory* %loadMem1_4014b4, %struct.Memory** %MEMORY
  %loadMem2_4014b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4014b4 = load i64, i64* %3
  %9258 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %loadMem2_4014b4)
  store %struct.Memory* %9258, %struct.Memory** %MEMORY
  %loadMem_4014b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9260 = getelementptr inbounds %struct.GPR, %struct.GPR* %9259, i32 0, i32 33
  %9261 = getelementptr inbounds %struct.Reg, %struct.Reg* %9260, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %9261 to i64*
  %9262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9262, i64 0, i64 0
  %YMM0.i83 = bitcast %union.VectorReg* %9263 to %"class.std::bitset"*
  %9264 = bitcast %"class.std::bitset"* %YMM0.i83 to i8*
  %9265 = bitcast %"class.std::bitset"* %YMM0.i83 to i8*
  %9266 = load i64, i64* %PC.i82
  %9267 = add i64 %9266, 9
  store i64 %9267, i64* %PC.i82
  %9268 = bitcast i8* %9265 to double*
  %9269 = load double, double* %9268, align 1
  %9270 = getelementptr inbounds i8, i8* %9265, i64 8
  %9271 = bitcast i8* %9270 to i64*
  %9272 = load i64, i64* %9271, align 1
  %9273 = load double, double* bitcast (%G_0x6020a0_type* @G_0x6020a0 to double*)
  %9274 = fdiv double %9269, %9273
  %9275 = bitcast i8* %9264 to double*
  store double %9274, double* %9275, align 1
  %9276 = getelementptr inbounds i8, i8* %9264, i64 8
  %9277 = bitcast i8* %9276 to i64*
  store i64 %9272, i64* %9277, align 1
  store %struct.Memory* %loadMem_4014b9, %struct.Memory** %MEMORY
  %loadMem1_4014c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9279 = getelementptr inbounds %struct.GPR, %struct.GPR* %9278, i32 0, i32 33
  %9280 = getelementptr inbounds %struct.Reg, %struct.Reg* %9279, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %9280 to i64*
  %9281 = load i64, i64* %PC.i81
  %9282 = add i64 %9281, -3650
  %9283 = load i64, i64* %PC.i81
  %9284 = add i64 %9283, 5
  %9285 = load i64, i64* %PC.i81
  %9286 = add i64 %9285, 5
  store i64 %9286, i64* %PC.i81
  %9287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9288 = load i64, i64* %9287, align 8
  %9289 = add i64 %9288, -8
  %9290 = inttoptr i64 %9289 to i64*
  store i64 %9284, i64* %9290
  store i64 %9289, i64* %9287, align 8
  %9291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9282, i64* %9291, align 8
  store %struct.Memory* %loadMem1_4014c2, %struct.Memory** %MEMORY
  %loadMem2_4014c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4014c2 = load i64, i64* %3
  %9292 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %loadMem2_4014c2)
  store %struct.Memory* %9292, %struct.Memory** %MEMORY
  %loadMem1_4014c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9294 = getelementptr inbounds %struct.GPR, %struct.GPR* %9293, i32 0, i32 33
  %9295 = getelementptr inbounds %struct.Reg, %struct.Reg* %9294, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %9295 to i64*
  %9296 = load i64, i64* %PC.i78
  %9297 = add i64 %9296, -3511
  %9298 = load i64, i64* %PC.i78
  %9299 = add i64 %9298, 5
  %9300 = load i64, i64* %PC.i78
  %9301 = add i64 %9300, 5
  store i64 %9301, i64* %PC.i78
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9303 = load i64, i64* %9302, align 8
  %9304 = add i64 %9303, -8
  %9305 = inttoptr i64 %9304 to i64*
  store i64 %9299, i64* %9305
  store i64 %9304, i64* %9302, align 8
  %9306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9297, i64* %9306, align 8
  store %struct.Memory* %loadMem1_4014c7, %struct.Memory** %MEMORY
  %loadMem2_4014c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4014c7 = load i64, i64* %3
  %call2_4014c7 = call %struct.Memory* @ext_sqrt(%struct.State* %0, i64 %loadPC_4014c7, %struct.Memory* %loadMem2_4014c7)
  store %struct.Memory* %call2_4014c7, %struct.Memory** %MEMORY
  %loadMem_4014cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9308 = getelementptr inbounds %struct.GPR, %struct.GPR* %9307, i32 0, i32 33
  %9309 = getelementptr inbounds %struct.Reg, %struct.Reg* %9308, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %9309 to i64*
  %9310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9311 = getelementptr inbounds %struct.GPR, %struct.GPR* %9310, i32 0, i32 15
  %9312 = getelementptr inbounds %struct.Reg, %struct.Reg* %9311, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %9312 to i64*
  %9313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9314 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9313, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %9314 to %union.vec128_t*
  %9315 = load i64, i64* %RBP.i77
  %9316 = sub i64 %9315, 144
  %9317 = bitcast %union.vec128_t* %XMM0.i to i8*
  %9318 = load i64, i64* %PC.i76
  %9319 = add i64 %9318, 8
  store i64 %9319, i64* %PC.i76
  %9320 = bitcast i8* %9317 to double*
  %9321 = load double, double* %9320, align 1
  %9322 = inttoptr i64 %9316 to double*
  store double %9321, double* %9322
  store %struct.Memory* %loadMem_4014cc, %struct.Memory** %MEMORY
  %loadMem_4014d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9324 = getelementptr inbounds %struct.GPR, %struct.GPR* %9323, i32 0, i32 33
  %9325 = getelementptr inbounds %struct.Reg, %struct.Reg* %9324, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %9325 to i64*
  %9326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9327 = getelementptr inbounds %struct.GPR, %struct.GPR* %9326, i32 0, i32 1
  %9328 = getelementptr inbounds %struct.Reg, %struct.Reg* %9327, i32 0, i32 0
  %RAX.i74 = bitcast %union.anon* %9328 to i64*
  %9329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9330 = getelementptr inbounds %struct.GPR, %struct.GPR* %9329, i32 0, i32 15
  %9331 = getelementptr inbounds %struct.Reg, %struct.Reg* %9330, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %9331 to i64*
  %9332 = load i64, i64* %RBP.i75
  %9333 = sub i64 %9332, 24
  %9334 = load i64, i64* %PC.i73
  %9335 = add i64 %9334, 4
  store i64 %9335, i64* %PC.i73
  %9336 = inttoptr i64 %9333 to i64*
  %9337 = load i64, i64* %9336
  store i64 %9337, i64* %RAX.i74, align 8
  store %struct.Memory* %loadMem_4014d4, %struct.Memory** %MEMORY
  %loadMem_4014d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9339 = getelementptr inbounds %struct.GPR, %struct.GPR* %9338, i32 0, i32 33
  %9340 = getelementptr inbounds %struct.Reg, %struct.Reg* %9339, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %9340 to i64*
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9342 = getelementptr inbounds %struct.GPR, %struct.GPR* %9341, i32 0, i32 1
  %9343 = getelementptr inbounds %struct.Reg, %struct.Reg* %9342, i32 0, i32 0
  %RAX.i72 = bitcast %union.anon* %9343 to i64*
  %9344 = load i64, i64* %RAX.i72
  %9345 = load i64, i64* %PC.i71
  %9346 = add i64 %9345, 4
  store i64 %9346, i64* %PC.i71
  %9347 = add i64 1, %9344
  store i64 %9347, i64* %RAX.i72, align 8
  %9348 = icmp ult i64 %9347, %9344
  %9349 = icmp ult i64 %9347, 1
  %9350 = or i1 %9348, %9349
  %9351 = zext i1 %9350 to i8
  %9352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9351, i8* %9352, align 1
  %9353 = trunc i64 %9347 to i32
  %9354 = and i32 %9353, 255
  %9355 = call i32 @llvm.ctpop.i32(i32 %9354)
  %9356 = trunc i32 %9355 to i8
  %9357 = and i8 %9356, 1
  %9358 = xor i8 %9357, 1
  %9359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9358, i8* %9359, align 1
  %9360 = xor i64 1, %9344
  %9361 = xor i64 %9360, %9347
  %9362 = lshr i64 %9361, 4
  %9363 = trunc i64 %9362 to i8
  %9364 = and i8 %9363, 1
  %9365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9364, i8* %9365, align 1
  %9366 = icmp eq i64 %9347, 0
  %9367 = zext i1 %9366 to i8
  %9368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9367, i8* %9368, align 1
  %9369 = lshr i64 %9347, 63
  %9370 = trunc i64 %9369 to i8
  %9371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9370, i8* %9371, align 1
  %9372 = lshr i64 %9344, 63
  %9373 = xor i64 %9369, %9372
  %9374 = add i64 %9373, %9369
  %9375 = icmp eq i64 %9374, 2
  %9376 = zext i1 %9375 to i8
  %9377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9376, i8* %9377, align 1
  store %struct.Memory* %loadMem_4014d8, %struct.Memory** %MEMORY
  %loadMem_4014dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %9378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9379 = getelementptr inbounds %struct.GPR, %struct.GPR* %9378, i32 0, i32 33
  %9380 = getelementptr inbounds %struct.Reg, %struct.Reg* %9379, i32 0, i32 0
  %PC.i68 = bitcast %union.anon* %9380 to i64*
  %9381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9382 = getelementptr inbounds %struct.GPR, %struct.GPR* %9381, i32 0, i32 1
  %9383 = getelementptr inbounds %struct.Reg, %struct.Reg* %9382, i32 0, i32 0
  %RAX.i69 = bitcast %union.anon* %9383 to i64*
  %9384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9385 = getelementptr inbounds %struct.GPR, %struct.GPR* %9384, i32 0, i32 15
  %9386 = getelementptr inbounds %struct.Reg, %struct.Reg* %9385, i32 0, i32 0
  %RBP.i70 = bitcast %union.anon* %9386 to i64*
  %9387 = load i64, i64* %RBP.i70
  %9388 = sub i64 %9387, 24
  %9389 = load i64, i64* %RAX.i69
  %9390 = load i64, i64* %PC.i68
  %9391 = add i64 %9390, 4
  store i64 %9391, i64* %PC.i68
  %9392 = inttoptr i64 %9388 to i64*
  store i64 %9389, i64* %9392
  store %struct.Memory* %loadMem_4014dc, %struct.Memory** %MEMORY
  %loadMem_4014e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9394 = getelementptr inbounds %struct.GPR, %struct.GPR* %9393, i32 0, i32 33
  %9395 = getelementptr inbounds %struct.Reg, %struct.Reg* %9394, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %9395 to i64*
  %9396 = load i64, i64* %PC.i67
  %9397 = add i64 %9396, -66
  %9398 = load i64, i64* %PC.i67
  %9399 = add i64 %9398, 5
  store i64 %9399, i64* %PC.i67
  %9400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9397, i64* %9400, align 8
  store %struct.Memory* %loadMem_4014e0, %struct.Memory** %MEMORY
  br label %block_.L_40149e

block_.L_4014e5:                                  ; preds = %block_.L_40149e
  %loadMem_4014e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 33
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 1
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %RAX.i65 = bitcast %union.anon* %9406 to i64*
  %9407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9408 = getelementptr inbounds %struct.GPR, %struct.GPR* %9407, i32 0, i32 15
  %9409 = getelementptr inbounds %struct.Reg, %struct.Reg* %9408, i32 0, i32 0
  %RBP.i66 = bitcast %union.anon* %9409 to i64*
  %9410 = load i64, i64* %RBP.i66
  %9411 = sub i64 %9410, 176
  %9412 = load i64, i64* %PC.i64
  %9413 = add i64 %9412, 6
  store i64 %9413, i64* %PC.i64
  %9414 = inttoptr i64 %9411 to i32*
  %9415 = load i32, i32* %9414
  %9416 = zext i32 %9415 to i64
  store i64 %9416, i64* %RAX.i65, align 8
  store %struct.Memory* %loadMem_4014e5, %struct.Memory** %MEMORY
  %loadMem_4014eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9418 = getelementptr inbounds %struct.GPR, %struct.GPR* %9417, i32 0, i32 33
  %9419 = getelementptr inbounds %struct.Reg, %struct.Reg* %9418, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %9419 to i64*
  %9420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9421 = getelementptr inbounds %struct.GPR, %struct.GPR* %9420, i32 0, i32 1
  %9422 = getelementptr inbounds %struct.Reg, %struct.Reg* %9421, i32 0, i32 0
  %EAX.i62 = bitcast %union.anon* %9422 to i32*
  %9423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9424 = getelementptr inbounds %struct.GPR, %struct.GPR* %9423, i32 0, i32 15
  %9425 = getelementptr inbounds %struct.Reg, %struct.Reg* %9424, i32 0, i32 0
  %RBP.i63 = bitcast %union.anon* %9425 to i64*
  %9426 = load i32, i32* %EAX.i62
  %9427 = zext i32 %9426 to i64
  %9428 = load i64, i64* %RBP.i63
  %9429 = sub i64 %9428, 172
  %9430 = load i64, i64* %PC.i61
  %9431 = add i64 %9430, 6
  store i64 %9431, i64* %PC.i61
  %9432 = inttoptr i64 %9429 to i32*
  %9433 = load i32, i32* %9432
  %9434 = sub i32 %9426, %9433
  %9435 = icmp ult i32 %9426, %9433
  %9436 = zext i1 %9435 to i8
  %9437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9436, i8* %9437, align 1
  %9438 = and i32 %9434, 255
  %9439 = call i32 @llvm.ctpop.i32(i32 %9438)
  %9440 = trunc i32 %9439 to i8
  %9441 = and i8 %9440, 1
  %9442 = xor i8 %9441, 1
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9442, i8* %9443, align 1
  %9444 = xor i32 %9433, %9426
  %9445 = xor i32 %9444, %9434
  %9446 = lshr i32 %9445, 4
  %9447 = trunc i32 %9446 to i8
  %9448 = and i8 %9447, 1
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9448, i8* %9449, align 1
  %9450 = icmp eq i32 %9434, 0
  %9451 = zext i1 %9450 to i8
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9451, i8* %9452, align 1
  %9453 = lshr i32 %9434, 31
  %9454 = trunc i32 %9453 to i8
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9454, i8* %9455, align 1
  %9456 = lshr i32 %9426, 31
  %9457 = lshr i32 %9433, 31
  %9458 = xor i32 %9457, %9456
  %9459 = xor i32 %9453, %9456
  %9460 = add i32 %9459, %9458
  %9461 = icmp eq i32 %9460, 2
  %9462 = zext i1 %9461 to i8
  %9463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9462, i8* %9463, align 1
  store %struct.Memory* %loadMem_4014eb, %struct.Memory** %MEMORY
  %loadMem_4014f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9465 = getelementptr inbounds %struct.GPR, %struct.GPR* %9464, i32 0, i32 33
  %9466 = getelementptr inbounds %struct.Reg, %struct.Reg* %9465, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %9466 to i64*
  %9467 = load i64, i64* %PC.i60
  %9468 = add i64 %9467, 63
  %9469 = load i64, i64* %PC.i60
  %9470 = add i64 %9469, 6
  %9471 = load i64, i64* %PC.i60
  %9472 = add i64 %9471, 6
  store i64 %9472, i64* %PC.i60
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9474 = load i8, i8* %9473, align 1
  %9475 = icmp eq i8 %9474, 0
  %9476 = zext i1 %9475 to i8
  store i8 %9476, i8* %BRANCH_TAKEN, align 1
  %9477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9478 = select i1 %9475, i64 %9468, i64 %9470
  store i64 %9478, i64* %9477, align 8
  store %struct.Memory* %loadMem_4014f1, %struct.Memory** %MEMORY
  %loadBr_4014f1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4014f1 = icmp eq i8 %loadBr_4014f1, 1
  br i1 %cmpBr_4014f1, label %block_.L_401530, label %block_4014f7

block_4014f7:                                     ; preds = %block_.L_4014e5
  %loadMem_4014f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9480 = getelementptr inbounds %struct.GPR, %struct.GPR* %9479, i32 0, i32 33
  %9481 = getelementptr inbounds %struct.Reg, %struct.Reg* %9480, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %9481 to i64*
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9483 = getelementptr inbounds %struct.GPR, %struct.GPR* %9482, i32 0, i32 11
  %9484 = getelementptr inbounds %struct.Reg, %struct.Reg* %9483, i32 0, i32 0
  %RDI.i58 = bitcast %union.anon* %9484 to i64*
  %9485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9486 = getelementptr inbounds %struct.GPR, %struct.GPR* %9485, i32 0, i32 15
  %9487 = getelementptr inbounds %struct.Reg, %struct.Reg* %9486, i32 0, i32 0
  %RBP.i59 = bitcast %union.anon* %9487 to i64*
  %9488 = load i64, i64* %RBP.i59
  %9489 = sub i64 %9488, 104
  %9490 = load i64, i64* %PC.i57
  %9491 = add i64 %9490, 4
  store i64 %9491, i64* %PC.i57
  %9492 = inttoptr i64 %9489 to i64*
  %9493 = load i64, i64* %9492
  store i64 %9493, i64* %RDI.i58, align 8
  store %struct.Memory* %loadMem_4014f7, %struct.Memory** %MEMORY
  %loadMem_4014fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9495 = getelementptr inbounds %struct.GPR, %struct.GPR* %9494, i32 0, i32 33
  %9496 = getelementptr inbounds %struct.Reg, %struct.Reg* %9495, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %9496 to i64*
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9498 = getelementptr inbounds %struct.GPR, %struct.GPR* %9497, i32 0, i32 9
  %9499 = getelementptr inbounds %struct.Reg, %struct.Reg* %9498, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %9499 to i64*
  %9500 = load i64, i64* %PC.i56
  %9501 = add i64 %9500, 8
  store i64 %9501, i64* %PC.i56
  %9502 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %9503 = sext i32 %9502 to i64
  store i64 %9503, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_4014fb, %struct.Memory** %MEMORY
  %loadMem_401503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9505 = getelementptr inbounds %struct.GPR, %struct.GPR* %9504, i32 0, i32 33
  %9506 = getelementptr inbounds %struct.Reg, %struct.Reg* %9505, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %9506 to i64*
  %9507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9508 = getelementptr inbounds %struct.GPR, %struct.GPR* %9507, i32 0, i32 7
  %9509 = getelementptr inbounds %struct.Reg, %struct.Reg* %9508, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %9509 to i64*
  %9510 = load i64, i64* %PC.i55
  %9511 = add i64 %9510, 8
  store i64 %9511, i64* %PC.i55
  %9512 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %9513 = sext i32 %9512 to i64
  store i64 %9513, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_401503, %struct.Memory** %MEMORY
  %loadMem_40150b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9515 = getelementptr inbounds %struct.GPR, %struct.GPR* %9514, i32 0, i32 33
  %9516 = getelementptr inbounds %struct.Reg, %struct.Reg* %9515, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %9516 to i64*
  %9517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9518 = getelementptr inbounds %struct.GPR, %struct.GPR* %9517, i32 0, i32 15
  %9519 = getelementptr inbounds %struct.Reg, %struct.Reg* %9518, i32 0, i32 0
  %RBP.i54 = bitcast %union.anon* %9519 to i64*
  %9520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9521 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9520, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %9521 to %"class.std::bitset"*
  %9522 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %9523 = load i64, i64* %RBP.i54
  %9524 = sub i64 %9523, 144
  %9525 = load i64, i64* %PC.i53
  %9526 = add i64 %9525, 8
  store i64 %9526, i64* %PC.i53
  %9527 = inttoptr i64 %9524 to double*
  %9528 = load double, double* %9527
  %9529 = bitcast i8* %9522 to double*
  store double %9528, double* %9529, align 1
  %9530 = getelementptr inbounds i8, i8* %9522, i64 8
  %9531 = bitcast i8* %9530 to double*
  store double 0.000000e+00, double* %9531, align 1
  store %struct.Memory* %loadMem_40150b, %struct.Memory** %MEMORY
  %loadMem_401513 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9533 = getelementptr inbounds %struct.GPR, %struct.GPR* %9532, i32 0, i32 33
  %9534 = getelementptr inbounds %struct.Reg, %struct.Reg* %9533, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %9534 to i64*
  %9535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9536 = getelementptr inbounds %struct.GPR, %struct.GPR* %9535, i32 0, i32 15
  %9537 = getelementptr inbounds %struct.Reg, %struct.Reg* %9536, i32 0, i32 0
  %RBP.i52 = bitcast %union.anon* %9537 to i64*
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9539 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9538, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %9539 to %"class.std::bitset"*
  %9540 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %9541 = load i64, i64* %RBP.i52
  %9542 = sub i64 %9541, 144
  %9543 = load i64, i64* %PC.i51
  %9544 = add i64 %9543, 8
  store i64 %9544, i64* %PC.i51
  %9545 = inttoptr i64 %9542 to double*
  %9546 = load double, double* %9545
  %9547 = bitcast i8* %9540 to double*
  store double %9546, double* %9547, align 1
  %9548 = getelementptr inbounds i8, i8* %9540, i64 8
  %9549 = bitcast i8* %9548 to double*
  store double 0.000000e+00, double* %9549, align 1
  store %struct.Memory* %loadMem_401513, %struct.Memory** %MEMORY
  %loadMem_40151b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9551 = getelementptr inbounds %struct.GPR, %struct.GPR* %9550, i32 0, i32 33
  %9552 = getelementptr inbounds %struct.Reg, %struct.Reg* %9551, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %9552 to i64*
  %9553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9554 = getelementptr inbounds %struct.GPR, %struct.GPR* %9553, i32 0, i32 15
  %9555 = getelementptr inbounds %struct.Reg, %struct.Reg* %9554, i32 0, i32 0
  %RBP.i50 = bitcast %union.anon* %9555 to i64*
  %9556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9557 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9556, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %9557 to %"class.std::bitset"*
  %9558 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %9559 = load i64, i64* %RBP.i50
  %9560 = sub i64 %9559, 144
  %9561 = load i64, i64* %PC.i49
  %9562 = add i64 %9561, 8
  store i64 %9562, i64* %PC.i49
  %9563 = inttoptr i64 %9560 to double*
  %9564 = load double, double* %9563
  %9565 = bitcast i8* %9558 to double*
  store double %9564, double* %9565, align 1
  %9566 = getelementptr inbounds i8, i8* %9558, i64 8
  %9567 = bitcast i8* %9566 to double*
  store double 0.000000e+00, double* %9567, align 1
  store %struct.Memory* %loadMem_40151b, %struct.Memory** %MEMORY
  %loadMem_401523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9569 = getelementptr inbounds %struct.GPR, %struct.GPR* %9568, i32 0, i32 33
  %9570 = getelementptr inbounds %struct.Reg, %struct.Reg* %9569, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %9570 to i64*
  %9571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9572 = getelementptr inbounds %struct.GPR, %struct.GPR* %9571, i32 0, i32 15
  %9573 = getelementptr inbounds %struct.Reg, %struct.Reg* %9572, i32 0, i32 0
  %RBP.i48 = bitcast %union.anon* %9573 to i64*
  %9574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9575 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9574, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %9575 to %"class.std::bitset"*
  %9576 = bitcast %"class.std::bitset"* %YMM3.i to i8*
  %9577 = load i64, i64* %RBP.i48
  %9578 = sub i64 %9577, 144
  %9579 = load i64, i64* %PC.i47
  %9580 = add i64 %9579, 8
  store i64 %9580, i64* %PC.i47
  %9581 = inttoptr i64 %9578 to double*
  %9582 = load double, double* %9581
  %9583 = bitcast i8* %9576 to double*
  store double %9582, double* %9583, align 1
  %9584 = getelementptr inbounds i8, i8* %9576, i64 8
  %9585 = bitcast i8* %9584 to double*
  store double 0.000000e+00, double* %9585, align 1
  store %struct.Memory* %loadMem_401523, %struct.Memory** %MEMORY
  %loadMem1_40152b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9587 = getelementptr inbounds %struct.GPR, %struct.GPR* %9586, i32 0, i32 33
  %9588 = getelementptr inbounds %struct.Reg, %struct.Reg* %9587, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %9588 to i64*
  %9589 = load i64, i64* %PC.i46
  %9590 = add i64 %9589, 117
  %9591 = load i64, i64* %PC.i46
  %9592 = add i64 %9591, 5
  %9593 = load i64, i64* %PC.i46
  %9594 = add i64 %9593, 5
  store i64 %9594, i64* %PC.i46
  %9595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9596 = load i64, i64* %9595, align 8
  %9597 = add i64 %9596, -8
  %9598 = inttoptr i64 %9597 to i64*
  store i64 %9592, i64* %9598
  store i64 %9597, i64* %9595, align 8
  %9599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9590, i64* %9599, align 8
  store %struct.Memory* %loadMem1_40152b, %struct.Memory** %MEMORY
  %loadMem2_40152b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40152b = load i64, i64* %3
  %call2_40152b = call %struct.Memory* @sub_4015a0.POUT(%struct.State* %0, i64 %loadPC_40152b, %struct.Memory* %loadMem2_40152b)
  store %struct.Memory* %call2_40152b, %struct.Memory** %MEMORY
  br label %block_.L_401530

block_.L_401530:                                  ; preds = %block_4014f7, %block_.L_4014e5
  %loadMem_401530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9601 = getelementptr inbounds %struct.GPR, %struct.GPR* %9600, i32 0, i32 33
  %9602 = getelementptr inbounds %struct.Reg, %struct.Reg* %9601, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %9602 to i64*
  %9603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9604 = getelementptr inbounds %struct.GPR, %struct.GPR* %9603, i32 0, i32 1
  %9605 = getelementptr inbounds %struct.Reg, %struct.Reg* %9604, i32 0, i32 0
  %RAX.i44 = bitcast %union.anon* %9605 to i64*
  %9606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9607 = getelementptr inbounds %struct.GPR, %struct.GPR* %9606, i32 0, i32 15
  %9608 = getelementptr inbounds %struct.Reg, %struct.Reg* %9607, i32 0, i32 0
  %RBP.i45 = bitcast %union.anon* %9608 to i64*
  %9609 = load i64, i64* %RBP.i45
  %9610 = sub i64 %9609, 176
  %9611 = load i64, i64* %PC.i43
  %9612 = add i64 %9611, 6
  store i64 %9612, i64* %PC.i43
  %9613 = inttoptr i64 %9610 to i32*
  %9614 = load i32, i32* %9613
  %9615 = zext i32 %9614 to i64
  store i64 %9615, i64* %RAX.i44, align 8
  store %struct.Memory* %loadMem_401530, %struct.Memory** %MEMORY
  %loadMem_401536 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9617 = getelementptr inbounds %struct.GPR, %struct.GPR* %9616, i32 0, i32 33
  %9618 = getelementptr inbounds %struct.Reg, %struct.Reg* %9617, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %9618 to i64*
  %9619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9620 = getelementptr inbounds %struct.GPR, %struct.GPR* %9619, i32 0, i32 1
  %9621 = getelementptr inbounds %struct.Reg, %struct.Reg* %9620, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %9621 to i64*
  %9622 = load i64, i64* %RAX.i42
  %9623 = load i64, i64* %PC.i41
  %9624 = add i64 %9623, 3
  store i64 %9624, i64* %PC.i41
  %9625 = trunc i64 %9622 to i32
  %9626 = add i32 1, %9625
  %9627 = zext i32 %9626 to i64
  store i64 %9627, i64* %RAX.i42, align 8
  %9628 = icmp ult i32 %9626, %9625
  %9629 = icmp ult i32 %9626, 1
  %9630 = or i1 %9628, %9629
  %9631 = zext i1 %9630 to i8
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9631, i8* %9632, align 1
  %9633 = and i32 %9626, 255
  %9634 = call i32 @llvm.ctpop.i32(i32 %9633)
  %9635 = trunc i32 %9634 to i8
  %9636 = and i8 %9635, 1
  %9637 = xor i8 %9636, 1
  %9638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9637, i8* %9638, align 1
  %9639 = xor i64 1, %9622
  %9640 = trunc i64 %9639 to i32
  %9641 = xor i32 %9640, %9626
  %9642 = lshr i32 %9641, 4
  %9643 = trunc i32 %9642 to i8
  %9644 = and i8 %9643, 1
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9644, i8* %9645, align 1
  %9646 = icmp eq i32 %9626, 0
  %9647 = zext i1 %9646 to i8
  %9648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9647, i8* %9648, align 1
  %9649 = lshr i32 %9626, 31
  %9650 = trunc i32 %9649 to i8
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9650, i8* %9651, align 1
  %9652 = lshr i32 %9625, 31
  %9653 = xor i32 %9649, %9652
  %9654 = add i32 %9653, %9649
  %9655 = icmp eq i32 %9654, 2
  %9656 = zext i1 %9655 to i8
  %9657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9656, i8* %9657, align 1
  store %struct.Memory* %loadMem_401536, %struct.Memory** %MEMORY
  %loadMem_401539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9659 = getelementptr inbounds %struct.GPR, %struct.GPR* %9658, i32 0, i32 33
  %9660 = getelementptr inbounds %struct.Reg, %struct.Reg* %9659, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %9660 to i64*
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9662 = getelementptr inbounds %struct.GPR, %struct.GPR* %9661, i32 0, i32 1
  %9663 = getelementptr inbounds %struct.Reg, %struct.Reg* %9662, i32 0, i32 0
  %EAX.i39 = bitcast %union.anon* %9663 to i32*
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9665 = getelementptr inbounds %struct.GPR, %struct.GPR* %9664, i32 0, i32 15
  %9666 = getelementptr inbounds %struct.Reg, %struct.Reg* %9665, i32 0, i32 0
  %RBP.i40 = bitcast %union.anon* %9666 to i64*
  %9667 = load i64, i64* %RBP.i40
  %9668 = sub i64 %9667, 176
  %9669 = load i32, i32* %EAX.i39
  %9670 = zext i32 %9669 to i64
  %9671 = load i64, i64* %PC.i38
  %9672 = add i64 %9671, 6
  store i64 %9672, i64* %PC.i38
  %9673 = inttoptr i64 %9668 to i32*
  store i32 %9669, i32* %9673
  store %struct.Memory* %loadMem_401539, %struct.Memory** %MEMORY
  %loadMem_40153f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9675 = getelementptr inbounds %struct.GPR, %struct.GPR* %9674, i32 0, i32 33
  %9676 = getelementptr inbounds %struct.Reg, %struct.Reg* %9675, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %9676 to i64*
  %9677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9678 = getelementptr inbounds %struct.GPR, %struct.GPR* %9677, i32 0, i32 1
  %9679 = getelementptr inbounds %struct.Reg, %struct.Reg* %9678, i32 0, i32 0
  %EAX.i36 = bitcast %union.anon* %9679 to i32*
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9681 = getelementptr inbounds %struct.GPR, %struct.GPR* %9680, i32 0, i32 15
  %9682 = getelementptr inbounds %struct.Reg, %struct.Reg* %9681, i32 0, i32 0
  %RBP.i37 = bitcast %union.anon* %9682 to i64*
  %9683 = load i32, i32* %EAX.i36
  %9684 = zext i32 %9683 to i64
  %9685 = load i64, i64* %RBP.i37
  %9686 = sub i64 %9685, 172
  %9687 = load i64, i64* %PC.i35
  %9688 = add i64 %9687, 6
  store i64 %9688, i64* %PC.i35
  %9689 = inttoptr i64 %9686 to i32*
  %9690 = load i32, i32* %9689
  %9691 = sub i32 %9683, %9690
  %9692 = icmp ult i32 %9683, %9690
  %9693 = zext i1 %9692 to i8
  %9694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9693, i8* %9694, align 1
  %9695 = and i32 %9691, 255
  %9696 = call i32 @llvm.ctpop.i32(i32 %9695)
  %9697 = trunc i32 %9696 to i8
  %9698 = and i8 %9697, 1
  %9699 = xor i8 %9698, 1
  %9700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9699, i8* %9700, align 1
  %9701 = xor i32 %9690, %9683
  %9702 = xor i32 %9701, %9691
  %9703 = lshr i32 %9702, 4
  %9704 = trunc i32 %9703 to i8
  %9705 = and i8 %9704, 1
  %9706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9705, i8* %9706, align 1
  %9707 = icmp eq i32 %9691, 0
  %9708 = zext i1 %9707 to i8
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9708, i8* %9709, align 1
  %9710 = lshr i32 %9691, 31
  %9711 = trunc i32 %9710 to i8
  %9712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9711, i8* %9712, align 1
  %9713 = lshr i32 %9683, 31
  %9714 = lshr i32 %9690, 31
  %9715 = xor i32 %9714, %9713
  %9716 = xor i32 %9710, %9713
  %9717 = add i32 %9716, %9715
  %9718 = icmp eq i32 %9717, 2
  %9719 = zext i1 %9718 to i8
  %9720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9719, i8* %9720, align 1
  store %struct.Memory* %loadMem_40153f, %struct.Memory** %MEMORY
  %loadMem_401545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9722 = getelementptr inbounds %struct.GPR, %struct.GPR* %9721, i32 0, i32 33
  %9723 = getelementptr inbounds %struct.Reg, %struct.Reg* %9722, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %9723 to i64*
  %9724 = load i64, i64* %PC.i34
  %9725 = add i64 %9724, 11
  %9726 = load i64, i64* %PC.i34
  %9727 = add i64 %9726, 6
  %9728 = load i64, i64* %PC.i34
  %9729 = add i64 %9728, 6
  store i64 %9729, i64* %PC.i34
  %9730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9731 = load i8, i8* %9730, align 1
  %9732 = icmp eq i8 %9731, 0
  %9733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9734 = load i8, i8* %9733, align 1
  %9735 = icmp ne i8 %9734, 0
  %9736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9737 = load i8, i8* %9736, align 1
  %9738 = icmp ne i8 %9737, 0
  %9739 = xor i1 %9735, %9738
  %9740 = xor i1 %9739, true
  %9741 = and i1 %9732, %9740
  %9742 = zext i1 %9741 to i8
  store i8 %9742, i8* %BRANCH_TAKEN, align 1
  %9743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9744 = select i1 %9741, i64 %9725, i64 %9727
  store i64 %9744, i64* %9743, align 8
  store %struct.Memory* %loadMem_401545, %struct.Memory** %MEMORY
  %loadBr_401545 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_401545 = icmp eq i8 %loadBr_401545, 1
  br i1 %cmpBr_401545, label %block_.L_401550, label %block_40154b

block_40154b:                                     ; preds = %block_.L_401530
  %loadMem_40154b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9746 = getelementptr inbounds %struct.GPR, %struct.GPR* %9745, i32 0, i32 33
  %9747 = getelementptr inbounds %struct.Reg, %struct.Reg* %9746, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %9747 to i64*
  %9748 = load i64, i64* %PC.i33
  %9749 = add i64 %9748, -2992
  %9750 = load i64, i64* %PC.i33
  %9751 = add i64 %9750, 5
  store i64 %9751, i64* %PC.i33
  %9752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9749, i64* %9752, align 8
  store %struct.Memory* %loadMem_40154b, %struct.Memory** %MEMORY
  br label %block_.L_40099b

block_.L_401550:                                  ; preds = %block_.L_401530
  %loadMem_401550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9754 = getelementptr inbounds %struct.GPR, %struct.GPR* %9753, i32 0, i32 33
  %9755 = getelementptr inbounds %struct.Reg, %struct.Reg* %9754, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %9755 to i64*
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9757 = getelementptr inbounds %struct.GPR, %struct.GPR* %9756, i32 0, i32 1
  %9758 = getelementptr inbounds %struct.Reg, %struct.Reg* %9757, i32 0, i32 0
  %EAX.i31 = bitcast %union.anon* %9758 to i32*
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9760 = getelementptr inbounds %struct.GPR, %struct.GPR* %9759, i32 0, i32 1
  %9761 = getelementptr inbounds %struct.Reg, %struct.Reg* %9760, i32 0, i32 0
  %RAX.i32 = bitcast %union.anon* %9761 to i64*
  %9762 = load i64, i64* %RAX.i32
  %9763 = load i32, i32* %EAX.i31
  %9764 = zext i32 %9763 to i64
  %9765 = load i64, i64* %PC.i30
  %9766 = add i64 %9765, 2
  store i64 %9766, i64* %PC.i30
  %9767 = xor i64 %9764, %9762
  %9768 = trunc i64 %9767 to i32
  %9769 = and i64 %9767, 4294967295
  store i64 %9769, i64* %RAX.i32, align 8
  %9770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9770, align 1
  %9771 = and i32 %9768, 255
  %9772 = call i32 @llvm.ctpop.i32(i32 %9771)
  %9773 = trunc i32 %9772 to i8
  %9774 = and i8 %9773, 1
  %9775 = xor i8 %9774, 1
  %9776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9775, i8* %9776, align 1
  %9777 = icmp eq i32 %9768, 0
  %9778 = zext i1 %9777 to i8
  %9779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9778, i8* %9779, align 1
  %9780 = lshr i32 %9768, 31
  %9781 = trunc i32 %9780 to i8
  %9782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9781, i8* %9782, align 1
  %9783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9783, align 1
  %9784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9784, align 1
  store %struct.Memory* %loadMem_401550, %struct.Memory** %MEMORY
  %loadMem_401552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9786 = getelementptr inbounds %struct.GPR, %struct.GPR* %9785, i32 0, i32 33
  %9787 = getelementptr inbounds %struct.Reg, %struct.Reg* %9786, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %9787 to i64*
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9789 = getelementptr inbounds %struct.GPR, %struct.GPR* %9788, i32 0, i32 1
  %9790 = getelementptr inbounds %struct.Reg, %struct.Reg* %9789, i32 0, i32 0
  %EAX.i28 = bitcast %union.anon* %9790 to i32*
  %9791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9792 = getelementptr inbounds %struct.GPR, %struct.GPR* %9791, i32 0, i32 11
  %9793 = getelementptr inbounds %struct.Reg, %struct.Reg* %9792, i32 0, i32 0
  %RDI.i29 = bitcast %union.anon* %9793 to i64*
  %9794 = load i32, i32* %EAX.i28
  %9795 = zext i32 %9794 to i64
  %9796 = load i64, i64* %PC.i27
  %9797 = add i64 %9796, 2
  store i64 %9797, i64* %PC.i27
  %9798 = and i64 %9795, 4294967295
  store i64 %9798, i64* %RDI.i29, align 8
  store %struct.Memory* %loadMem_401552, %struct.Memory** %MEMORY
  %loadMem1_401554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9800 = getelementptr inbounds %struct.GPR, %struct.GPR* %9799, i32 0, i32 33
  %9801 = getelementptr inbounds %struct.Reg, %struct.Reg* %9800, i32 0, i32 0
  %PC.i26 = bitcast %union.anon* %9801 to i64*
  %9802 = load i64, i64* %PC.i26
  %9803 = add i64 %9802, -3700
  %9804 = load i64, i64* %PC.i26
  %9805 = add i64 %9804, 5
  %9806 = load i64, i64* %PC.i26
  %9807 = add i64 %9806, 5
  store i64 %9807, i64* %PC.i26
  %9808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9809 = load i64, i64* %9808, align 8
  %9810 = add i64 %9809, -8
  %9811 = inttoptr i64 %9810 to i64*
  store i64 %9805, i64* %9811
  store i64 %9810, i64* %9808, align 8
  %9812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9803, i64* %9812, align 8
  store %struct.Memory* %loadMem1_401554, %struct.Memory** %MEMORY
  %loadMem2_401554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401554 = load i64, i64* %3
  %9813 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %loadMem2_401554)
  store %struct.Memory* %9813, %struct.Memory** %MEMORY
  %loadMem_401559 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9815 = getelementptr inbounds %struct.GPR, %struct.GPR* %9814, i32 0, i32 33
  %9816 = getelementptr inbounds %struct.Reg, %struct.Reg* %9815, i32 0, i32 0
  %PC.i23 = bitcast %union.anon* %9816 to i64*
  %9817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9818 = getelementptr inbounds %struct.GPR, %struct.GPR* %9817, i32 0, i32 11
  %9819 = getelementptr inbounds %struct.Reg, %struct.Reg* %9818, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %9819 to i64*
  %9820 = load i64, i64* %PC.i23
  %9821 = add i64 %9820, 10
  store i64 %9821, i64* %PC.i23
  store i64 ptrtoint (%G__0x401915_type* @G__0x401915 to i64), i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_401559, %struct.Memory** %MEMORY
  %loadMem_401563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9823 = getelementptr inbounds %struct.GPR, %struct.GPR* %9822, i32 0, i32 33
  %9824 = getelementptr inbounds %struct.Reg, %struct.Reg* %9823, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %9824 to i64*
  %9825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9826 = getelementptr inbounds %struct.GPR, %struct.GPR* %9825, i32 0, i32 1
  %9827 = getelementptr inbounds %struct.Reg, %struct.Reg* %9826, i32 0, i32 0
  %RAX.i21 = bitcast %union.anon* %9827 to i64*
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9829 = getelementptr inbounds %struct.GPR, %struct.GPR* %9828, i32 0, i32 15
  %9830 = getelementptr inbounds %struct.Reg, %struct.Reg* %9829, i32 0, i32 0
  %RBP.i22 = bitcast %union.anon* %9830 to i64*
  %9831 = load i64, i64* %RBP.i22
  %9832 = sub i64 %9831, 200
  %9833 = load i64, i64* %RAX.i21
  %9834 = load i64, i64* %PC.i20
  %9835 = add i64 %9834, 7
  store i64 %9835, i64* %PC.i20
  %9836 = inttoptr i64 %9832 to i64*
  store i64 %9833, i64* %9836
  store %struct.Memory* %loadMem_401563, %struct.Memory** %MEMORY
  %loadMem_40156a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9838 = getelementptr inbounds %struct.GPR, %struct.GPR* %9837, i32 0, i32 33
  %9839 = getelementptr inbounds %struct.Reg, %struct.Reg* %9838, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %9839 to i64*
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9841 = getelementptr inbounds %struct.GPR, %struct.GPR* %9840, i32 0, i32 1
  %9842 = getelementptr inbounds %struct.Reg, %struct.Reg* %9841, i32 0, i32 0
  %9843 = bitcast %union.anon* %9842 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9843, i32 0, i32 0
  %9844 = load i64, i64* %PC.i19
  %9845 = add i64 %9844, 2
  store i64 %9845, i64* %PC.i19
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_40156a, %struct.Memory** %MEMORY
  %loadMem1_40156c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9847 = getelementptr inbounds %struct.GPR, %struct.GPR* %9846, i32 0, i32 33
  %9848 = getelementptr inbounds %struct.Reg, %struct.Reg* %9847, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %9848 to i64*
  %9849 = load i64, i64* %PC.i18
  %9850 = add i64 %9849, -3788
  %9851 = load i64, i64* %PC.i18
  %9852 = add i64 %9851, 5
  %9853 = load i64, i64* %PC.i18
  %9854 = add i64 %9853, 5
  store i64 %9854, i64* %PC.i18
  %9855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9856 = load i64, i64* %9855, align 8
  %9857 = add i64 %9856, -8
  %9858 = inttoptr i64 %9857 to i64*
  store i64 %9852, i64* %9858
  store i64 %9857, i64* %9855, align 8
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9850, i64* %9859, align 8
  store %struct.Memory* %loadMem1_40156c, %struct.Memory** %MEMORY
  %loadMem2_40156c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40156c = load i64, i64* %3
  %9860 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_40156c)
  store %struct.Memory* %9860, %struct.Memory** %MEMORY
  %loadMem_401571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9862 = getelementptr inbounds %struct.GPR, %struct.GPR* %9861, i32 0, i32 33
  %9863 = getelementptr inbounds %struct.Reg, %struct.Reg* %9862, i32 0, i32 0
  %PC.i13 = bitcast %union.anon* %9863 to i64*
  %9864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9865 = getelementptr inbounds %struct.GPR, %struct.GPR* %9864, i32 0, i32 15
  %9866 = getelementptr inbounds %struct.Reg, %struct.Reg* %9865, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %9866 to i64*
  %9867 = load i64, i64* %RBP.i14
  %9868 = sub i64 %9867, 208
  %9869 = load i64, i64* %PC.i13
  %9870 = add i64 %9869, 7
  store i64 %9870, i64* %PC.i13
  %9871 = inttoptr i64 %9868 to i32*
  %9872 = load i32, i32* %9871
  %9873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9873, align 1
  %9874 = and i32 %9872, 255
  %9875 = call i32 @llvm.ctpop.i32(i32 %9874)
  %9876 = trunc i32 %9875 to i8
  %9877 = and i8 %9876, 1
  %9878 = xor i8 %9877, 1
  %9879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9878, i8* %9879, align 1
  %9880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9880, align 1
  %9881 = icmp eq i32 %9872, 0
  %9882 = zext i1 %9881 to i8
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9882, i8* %9883, align 1
  %9884 = lshr i32 %9872, 31
  %9885 = trunc i32 %9884 to i8
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9885, i8* %9886, align 1
  %9887 = lshr i32 %9872, 31
  %9888 = xor i32 %9884, %9887
  %9889 = add i32 %9888, %9887
  %9890 = icmp eq i32 %9889, 2
  %9891 = zext i1 %9890 to i8
  %9892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9891, i8* %9892, align 1
  store %struct.Memory* %loadMem_401571, %struct.Memory** %MEMORY
  %loadMem_401578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9894 = getelementptr inbounds %struct.GPR, %struct.GPR* %9893, i32 0, i32 33
  %9895 = getelementptr inbounds %struct.Reg, %struct.Reg* %9894, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %9895 to i64*
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9897 = getelementptr inbounds %struct.GPR, %struct.GPR* %9896, i32 0, i32 1
  %9898 = getelementptr inbounds %struct.Reg, %struct.Reg* %9897, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %9898 to i32*
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9900 = getelementptr inbounds %struct.GPR, %struct.GPR* %9899, i32 0, i32 15
  %9901 = getelementptr inbounds %struct.Reg, %struct.Reg* %9900, i32 0, i32 0
  %RBP.i12 = bitcast %union.anon* %9901 to i64*
  %9902 = load i64, i64* %RBP.i12
  %9903 = sub i64 %9902, 316
  %9904 = load i32, i32* %EAX.i
  %9905 = zext i32 %9904 to i64
  %9906 = load i64, i64* %PC.i11
  %9907 = add i64 %9906, 6
  store i64 %9907, i64* %PC.i11
  %9908 = inttoptr i64 %9903 to i32*
  store i32 %9904, i32* %9908
  store %struct.Memory* %loadMem_401578, %struct.Memory** %MEMORY
  %loadMem_40157e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9910 = getelementptr inbounds %struct.GPR, %struct.GPR* %9909, i32 0, i32 33
  %9911 = getelementptr inbounds %struct.Reg, %struct.Reg* %9910, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %9911 to i64*
  %9912 = load i64, i64* %PC.i10
  %9913 = add i64 %9912, 11
  %9914 = load i64, i64* %PC.i10
  %9915 = add i64 %9914, 6
  %9916 = load i64, i64* %PC.i10
  %9917 = add i64 %9916, 6
  store i64 %9917, i64* %PC.i10
  %9918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9919 = load i8, i8* %9918, align 1
  store i8 %9919, i8* %BRANCH_TAKEN, align 1
  %9920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9921 = icmp ne i8 %9919, 0
  %9922 = select i1 %9921, i64 %9913, i64 %9915
  store i64 %9922, i64* %9920, align 8
  store %struct.Memory* %loadMem_40157e, %struct.Memory** %MEMORY
  %loadBr_40157e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_40157e = icmp eq i8 %loadBr_40157e, 1
  br i1 %cmpBr_40157e, label %block_.L_401589, label %block_401584

block_401584:                                     ; preds = %block_.L_401550
  %loadMem_401584 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9924 = getelementptr inbounds %struct.GPR, %struct.GPR* %9923, i32 0, i32 33
  %9925 = getelementptr inbounds %struct.Reg, %struct.Reg* %9924, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %9925 to i64*
  %9926 = load i64, i64* %PC.i9
  %9927 = add i64 %9926, -3150
  %9928 = load i64, i64* %PC.i9
  %9929 = add i64 %9928, 5
  store i64 %9929, i64* %PC.i9
  %9930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9927, i64* %9930, align 8
  store %struct.Memory* %loadMem_401584, %struct.Memory** %MEMORY
  br label %block_.L_400936

block_.L_401589:                                  ; preds = %block_.L_401550
  %loadMem_401589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9932 = getelementptr inbounds %struct.GPR, %struct.GPR* %9931, i32 0, i32 33
  %9933 = getelementptr inbounds %struct.Reg, %struct.Reg* %9932, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %9933 to i64*
  %9934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9935 = getelementptr inbounds %struct.GPR, %struct.GPR* %9934, i32 0, i32 15
  %9936 = getelementptr inbounds %struct.Reg, %struct.Reg* %9935, i32 0, i32 0
  %RBP.i8 = bitcast %union.anon* %9936 to i64*
  %9937 = load i64, i64* %RBP.i8
  %9938 = sub i64 %9937, 4
  %9939 = load i64, i64* %PC.i7
  %9940 = add i64 %9939, 7
  store i64 %9940, i64* %PC.i7
  %9941 = inttoptr i64 %9938 to i32*
  store i32 0, i32* %9941
  store %struct.Memory* %loadMem_401589, %struct.Memory** %MEMORY
  br label %block_.L_401590

block_.L_401590:                                  ; preds = %block_.L_401589, %block_.L_4008ed
  %loadMem_401590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9943 = getelementptr inbounds %struct.GPR, %struct.GPR* %9942, i32 0, i32 33
  %9944 = getelementptr inbounds %struct.Reg, %struct.Reg* %9943, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %9944 to i64*
  %9945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9946 = getelementptr inbounds %struct.GPR, %struct.GPR* %9945, i32 0, i32 1
  %9947 = getelementptr inbounds %struct.Reg, %struct.Reg* %9946, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %9947 to i64*
  %9948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9949 = getelementptr inbounds %struct.GPR, %struct.GPR* %9948, i32 0, i32 15
  %9950 = getelementptr inbounds %struct.Reg, %struct.Reg* %9949, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %9950 to i64*
  %9951 = load i64, i64* %RBP.i6
  %9952 = sub i64 %9951, 4
  %9953 = load i64, i64* %PC.i5
  %9954 = add i64 %9953, 3
  store i64 %9954, i64* %PC.i5
  %9955 = inttoptr i64 %9952 to i32*
  %9956 = load i32, i32* %9955
  %9957 = zext i32 %9956 to i64
  store i64 %9957, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_401590, %struct.Memory** %MEMORY
  %loadMem_401593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9959 = getelementptr inbounds %struct.GPR, %struct.GPR* %9958, i32 0, i32 33
  %9960 = getelementptr inbounds %struct.Reg, %struct.Reg* %9959, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %9960 to i64*
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9962 = getelementptr inbounds %struct.GPR, %struct.GPR* %9961, i32 0, i32 13
  %9963 = getelementptr inbounds %struct.Reg, %struct.Reg* %9962, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %9963 to i64*
  %9964 = load i64, i64* %RSP.i
  %9965 = load i64, i64* %PC.i4
  %9966 = add i64 %9965, 7
  store i64 %9966, i64* %PC.i4
  %9967 = add i64 320, %9964
  store i64 %9967, i64* %RSP.i, align 8
  %9968 = icmp ult i64 %9967, %9964
  %9969 = icmp ult i64 %9967, 320
  %9970 = or i1 %9968, %9969
  %9971 = zext i1 %9970 to i8
  %9972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9971, i8* %9972, align 1
  %9973 = trunc i64 %9967 to i32
  %9974 = and i32 %9973, 255
  %9975 = call i32 @llvm.ctpop.i32(i32 %9974)
  %9976 = trunc i32 %9975 to i8
  %9977 = and i8 %9976, 1
  %9978 = xor i8 %9977, 1
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9978, i8* %9979, align 1
  %9980 = xor i64 320, %9964
  %9981 = xor i64 %9980, %9967
  %9982 = lshr i64 %9981, 4
  %9983 = trunc i64 %9982 to i8
  %9984 = and i8 %9983, 1
  %9985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9984, i8* %9985, align 1
  %9986 = icmp eq i64 %9967, 0
  %9987 = zext i1 %9986 to i8
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9987, i8* %9988, align 1
  %9989 = lshr i64 %9967, 63
  %9990 = trunc i64 %9989 to i8
  %9991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9990, i8* %9991, align 1
  %9992 = lshr i64 %9964, 63
  %9993 = xor i64 %9989, %9992
  %9994 = add i64 %9993, %9989
  %9995 = icmp eq i64 %9994, 2
  %9996 = zext i1 %9995 to i8
  %9997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9996, i8* %9997, align 1
  store %struct.Memory* %loadMem_401593, %struct.Memory** %MEMORY
  %loadMem_40159a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9999 = getelementptr inbounds %struct.GPR, %struct.GPR* %9998, i32 0, i32 33
  %10000 = getelementptr inbounds %struct.Reg, %struct.Reg* %9999, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %10000 to i64*
  %10001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10002 = getelementptr inbounds %struct.GPR, %struct.GPR* %10001, i32 0, i32 15
  %10003 = getelementptr inbounds %struct.Reg, %struct.Reg* %10002, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %10003 to i64*
  %10004 = load i64, i64* %PC.i2
  %10005 = add i64 %10004, 1
  store i64 %10005, i64* %PC.i2
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10007 = load i64, i64* %10006, align 8
  %10008 = add i64 %10007, 8
  %10009 = inttoptr i64 %10007 to i64*
  %10010 = load i64, i64* %10009
  store i64 %10010, i64* %RBP.i3, align 8
  store i64 %10008, i64* %10006, align 8
  store %struct.Memory* %loadMem_40159a, %struct.Memory** %MEMORY
  %loadMem_40159b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10012 = getelementptr inbounds %struct.GPR, %struct.GPR* %10011, i32 0, i32 33
  %10013 = getelementptr inbounds %struct.Reg, %struct.Reg* %10012, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %10013 to i64*
  %10014 = load i64, i64* %PC.i1
  %10015 = add i64 %10014, 1
  store i64 %10015, i64* %PC.i1
  %10016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10018 = load i64, i64* %10017, align 8
  %10019 = inttoptr i64 %10018 to i64*
  %10020 = load i64, i64* %10019
  store i64 %10020, i64* %10016, align 8
  %10021 = add i64 %10018, 8
  store i64 %10021, i64* %10017, align 8
  store %struct.Memory* %loadMem_40159b, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_40159b
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x140___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 320
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 320
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 320, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x186a0__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 184
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 11
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 100000, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 172
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xac__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_400931(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4018f8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4018f8_type* @G__0x4018f8 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xac__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx__rdi_8____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDI
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4008a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0xac__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i64*
  %19 = load i64, i64* %18
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i8*
  %16 = load i8, i8* %15
  %17 = sext i8 %16 to i64
  %18 = and i64 %17, 4294967295
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x63___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 99
  %14 = icmp ult i32 %9, 99
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 99, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4008af(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40091d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax__rcx_8____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 8
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i64*
  %22 = load i64, i64* %21
  store i64 %22, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.atol_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12, align 1
  %13 = trunc i64 %9 to i32
  %14 = and i32 %13, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i64 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %9, 63
  %25 = trunc i64 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %9, 63
  %28 = xor i64 %24, %27
  %29 = add i64 %28, %27
  %30 = icmp eq i64 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4008ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400918(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4018fb___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4018fb_type* @G__0x4018fb to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x602080___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x602080_type* @G_0x602080 to i64*)
  store i64 %11, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.fprintf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0x4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401590(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xac__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400848(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400936(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.time_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf71__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0xf71__rip__type* @G_0xf71__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf71__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0xf71__rip__type* @G_0xf71__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf71__rip____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0xf71__rip__type* @G_0xf71__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__0x602098(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__0x6020a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020a0_type* @G_0x6020a0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020b0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020b0_type* @G_0x6020b0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xb8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 176
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 1, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf2d__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0xf2d__rip__type* @G_0xf2d__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xf2d__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0xf2d__rip__type* @G_0xf2d__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 0, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xc__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 12
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xe__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 14
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x159__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 345
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0xd2__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 210
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_shlq__0x5___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = shl i64 %9, 4
  %13 = icmp slt i64 %12, 0
  %14 = shl i64 %12, 1
  store i64 %14, i64* %RAX, align 8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %18 = trunc i64 %14 to i32
  %19 = and i32 %18, 254
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  store i8 %23, i8* %17, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %26 = icmp eq i64 %14, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %25, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %29 = lshr i64 %14, 63
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x383__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 899
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x268__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 11
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 616
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x0__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 0, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x5d__MINUS0xa8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  %18 = sext i64 %17 to i128
  %19 = and i128 %18, -18446744073709551616
  %20 = zext i64 %17 to i128
  %21 = or i128 %19, %20
  %22 = mul i128 %21, 93
  %23 = trunc i128 %22 to i64
  store i64 %23, i64* %RAX, align 8
  %24 = sext i64 %23 to i128
  %25 = icmp ne i128 %24, %22
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %26, i8* %27, align 1
  %28 = trunc i128 %22 to i32
  %29 = and i32 %28, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i64 %23, 63
  %38 = trunc i64 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %26, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 112
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 120
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 128
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 136
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x1__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  store i64 1, i64* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400b16(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x8000000000000000___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x70__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x78__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x80__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x88__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd_0x602098___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %18 = fmul double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 112
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x80__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 128
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x88__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x78__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 120
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__xmm0___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 5
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to i64*
  %15 = load i64, i64* %14, align 1
  store i64 %15, i64* %RCX, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorq__rax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = xor i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17, align 1
  %18 = trunc i64 %16 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %16, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %16, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 5
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to i64*
  store i64 %12, i64* %15, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x1___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 1, %9
  store i64 %12, i64* %RAX, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 1
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 1, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400a49(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xb0__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0xac__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 172
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400b50(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x78__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x80__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x88__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.POUT(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd78__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0xd78__rip__type* @G_0xd78__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd78__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0xd78__rip__type* @G_0xd78__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__0x6020c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x28__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 40
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400c9a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020c8___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_0x6020d0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %18 = fadd double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_0x6020d8___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %18 = fadd double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6020e0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6020d8___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_0x6020e0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %18 = fadd double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_0x6020d0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %18 = fsub double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400b8c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400ce1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020d0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020d8___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6020d8_type* @G_0x6020d8 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020e0___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6020e0_type* @G_0x6020e0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400d17(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x6020c0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x6020c0_type* @G__0x6020c0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.PA(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400ce9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400d5e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x38__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400e10(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %9 = sub i32 %8, 1
  %10 = icmp ult i32 %8, 1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400d9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400da8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %9 = sub i32 %8, 2
  %10 = icmp ult i32 %8, 2
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 2
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_400dc6(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400dd1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_400def(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400dfa(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400dff(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400d71(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400e52(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x602090___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x602090___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x6020ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x6020a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x40__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_400f7e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x602090___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020ac___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x602090___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = shl i64 %12, 32
  %18 = ashr exact i64 %17, 32
  %19 = shl i64 %14, 32
  %20 = ashr exact i64 %19, 32
  %21 = mul i64 %20, %18
  %22 = trunc i64 %21 to i32
  %23 = and i64 %21, 4294967295
  store i64 %23, i64* %RAX, align 8
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = icmp ne i64 %25, %21
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %27, i8* %28, align 1
  %29 = and i32 %22, 255
  %30 = call i32 @llvm.ctpop.i32(i32 %29)
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = xor i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %36, align 1
  %37 = lshr i32 %22, 31
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020a8___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x6020ac___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x602090(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020a8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %13 = shl i64 %9, 32
  %14 = ashr exact i64 %13, 32
  %15 = sext i32 %12 to i64
  %16 = mul i64 %15, %14
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %RAX, align 8
  %19 = shl i64 %16, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp ne i64 %20, %16
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %17, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %31, align 1
  %32 = lshr i32 %17, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x6020ac___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %13 = shl i64 %9, 32
  %14 = ashr exact i64 %13, 32
  %15 = sext i32 %12 to i64
  %16 = mul i64 %15, %14
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %RCX, align 8
  %19 = shl i64 %16, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp ne i64 %20, %16
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %17, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %31, align 1
  %32 = lshr i32 %17, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x6020ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x602090___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x6020a8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x6020a8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl__eax___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = sitofp i32 %12 to double
  %17 = bitcast i8* %11 to double*
  store double %16, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__0x6020c0___rdx_8_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RDX
  %12 = mul i64 %11, 8
  %13 = add i64 %12, 6299840
  %14 = bitcast %union.vec128_t* %XMM0 to i8*
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 9
  store i64 %16, i64* %PC
  %17 = bitcast i8* %14 to double*
  %18 = load double, double* %17, align 1
  %19 = inttoptr i64 %13 to double*
  store double %18, double* %19
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull_0x6020a8___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = load i32, i32* bitcast (%G_0x6020a8_type* @G_0x6020a8 to i32*)
  %13 = shl i64 %9, 32
  %14 = ashr exact i64 %13, 32
  %15 = sext i32 %12 to i64
  %16 = mul i64 %15, %14
  %17 = trunc i64 %16 to i32
  %18 = and i64 %16, 4294967295
  store i64 %18, i64* %RAX, align 8
  %19 = shl i64 %16, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp ne i64 %20, %16
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %17, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %31, align 1
  %32 = lshr i32 %17, 31
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %22, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x6020ac___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400e7b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_400fcd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x6020ac___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  %12 = sext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x90b__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x90b__rip__type* @G_0x90b__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 144
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 152
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x48__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 72
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4011e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x8d5__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x8d5__rip__type* @G_0x8d5__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x602098___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6020b0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x6020b0_type* @G_0x6020b0 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 224
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm3___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM3 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0xe8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 232
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0xf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 240
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sin_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xe8__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0xf8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 248
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.cos_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xf8__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd_MINUS0x98__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fadd double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x100__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 256
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd_MINUS0x98__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 152
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = bitcast i8* %12 to double*
  %18 = load double, double* %17, align 1
  %19 = getelementptr inbounds i8, i8* %12, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 1
  %22 = inttoptr i64 %14 to double*
  %23 = load double, double* %22
  %24 = fsub double %18, %23
  %25 = bitcast i8* %11 to double*
  store double %24, double* %25, align 1
  %26 = getelementptr inbounds i8, i8* %11, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x108__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 264
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm1___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x108__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xe0__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subsd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fsub double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x100__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movaps__xmm2___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to <2 x i32>*
  %18 = load <2 x i32>, <2 x i32>* %17, align 1
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = bitcast i8* %10 to i32*
  store i32 %19, i32* %20, align 1
  %21 = extractelement <2 x i32> %15, i32 1
  %22 = getelementptr inbounds i8, i8* %10, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %18, i32 0
  %25 = getelementptr inbounds i8, i8* %10, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  %27 = extractelement <2 x i32> %18, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.atan_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x7fd__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x7fd__rip__type* @G_0x7fd__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xf0__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 144
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x602098___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load double, double* bitcast (%G_0x602098_type* @G_0x602098 to double*)
  %12 = bitcast i8* %8 to double*
  store double %11, double* %12, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x110__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 272
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x118__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 280
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__MINUS0x120__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 288
  %13 = bitcast %union.vec128_t* %XMM2 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x120__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x128__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 296
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x128__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x130__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 304
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x138__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 312
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x138__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x118__rbp____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x130__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x110__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 152
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_400fed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_40122f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x6a1__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x6a1__rip__type* @G_0x6a1__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 160
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %13 to double*
  %17 = load double, double* %16, align 1
  %18 = inttoptr i64 %12 to double*
  store double %17, double* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x50__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 80
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401292(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0xa0__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x98__rbp____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.P3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401257(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4012dd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xa0__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0xa0__rbp____xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x603__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x603__rip__type* @G_0x603__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x5cb__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x5cb__rip__type* @G_0x5cb__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x5e3__rip____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x5e3__rip__type* @G_0x5e3__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm2__0x6020c8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020c8_type* @G_0x6020c8 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd__xmm1__0x6020d0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to double*
  %12 = load double, double* %11, align 1
  store double %12, double* bitcast (%G_0x6020d0_type* @G_0x6020d0 to double*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x58__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_40135d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.P0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_401339(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4013ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x6020ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* bitcast (%G_0x6020ac_type* @G_0x6020ac to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x60__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401444(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x602090___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x602090_type* @G_0x602090 to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4013ca(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_401486(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0x462__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x462__rip__type* @G_0x462__rip_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpq_MINUS0x68__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 104
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i64*
  %18 = load i64, i64* %17
  %19 = sub i64 %12, %18
  %20 = icmp ugt i64 %18, %12
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = trunc i64 %19 to i32
  %24 = and i32 %23, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i64 %18, %12
  %31 = xor i64 %30, %19
  %32 = lshr i64 %31, 4
  %33 = trunc i64 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i64 %19, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i64 %19, 63
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i64 %12, 63
  %43 = lshr i64 %18, 63
  %44 = xor i64 %43, %42
  %45 = xor i64 %39, %42
  %46 = add i64 %45, %44
  %47 = icmp eq i64 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_4014e5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.log_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd_0x6020a0___xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 9
  store i64 %11, i64* %PC
  %12 = bitcast i8* %9 to double*
  %13 = load double, double* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = load double, double* bitcast (%G_0x6020a0_type* @G_0x6020a0 to double*)
  %18 = fdiv double %13, %17
  %19 = bitcast i8* %8 to double*
  store double %18, double* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.exp_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sqrt_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40149e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_401530(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x68__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_MINUS0x90__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to double*
  %17 = load double, double* %16
  %18 = bitcast i8* %11 to double*
  store double %17, double* %18, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to double*
  store double 0.000000e+00, double* %20, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_401550(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_40099b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x401915___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x401915_type* @G__0x401915 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.printf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 208
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_401589(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x140___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 320, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 320
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 320, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
