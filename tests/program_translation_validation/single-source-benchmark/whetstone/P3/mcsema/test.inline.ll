; ModuleID = '../binary/test.mcsema.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400688__init_type = type <{ [23 x i8] }>
%seg_4006a0__plt_type = type <{ [192 x i8] }>
%seg_400760__text_type = type <{ [4482 x i8] }>
%seg_4018e4__fini_type = type <{ [9 x i8] }>
%seg_4018f0__rodata_type = type <{ [72 x i8], [3 x i8], [28 x i8], [44 x i8] }>
%seg_401984__eh_frame_hdr_type = type <{ [92 x i8] }>
%seg_4019e0__eh_frame_type = type <{ [368 x i8] }>
%seg_601df0__init_array_type = type <{ i64, i64 }>
%seg_601ff0__got_type = type <{ i64, i64 }>
%seg_602000__got_plt_type = type <{ [24 x i8], i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }>
%seg_602070__data_type = type <{ [16 x i8] }>
%seg_602080__bss_type = type <{ [8 x i8], [8 x i8] }>
%J_type = type <{ [8 x i8] }>
%T_type = type <{ [8 x i8] }>
%T1_type = type <{ [8 x i8] }>
%L_type = type <{ [4 x i8] }>
%K_type = type <{ [4 x i8] }>
%T2_type = type <{ [16 x i8] }>
%E1_type = type <{ [40 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@stderr = external global i64, align 128
@seg_400688__init = internal constant %seg_400688__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\19 \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4006a0__plt = internal constant %seg_4006a0__plt_type <{ [192 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF%b\19 \00\00\00\00\00\00\00\00\00\00\00\FF%Z\19 \00\00\00\00\00\00\00\00\00\00\00\FF%R\19 \00\00\00\00\00\00\00\00\00\00\00\FF%J\19 \00\00\00\00\00\00\00\00\00\00\00\FF%B\19 \00\00\00\00\00\00\00\00\00\00\00\FF%:\19 \00\00\00\00\00\00\00\00\00\00\00\FF%2\19 \00\00\00\00\00\00\00\00\00\00\00\FF%*\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\22\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\1A\19 \00\00\00\00\00\00\00\00\00\00\00\FF%\12\19 \00\00\00\00\00\00\00\00\00\00\00" }>
@seg_400760__text = internal constant %seg_400760__text_type <{ [4482 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\E0\18@\00H\C7\C1p\18@\00H\C7\C7P\08@\00\FF\15f\18 \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8\80 `\00H=\80 `\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF\80 `\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE\80 `\00UH\81\EE\80 `\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF\80 `\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=q\18 \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05_\18 \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89f\0F\1F\84\00\00\00\00\00UH\89\E5H\81\EC@\01\00\00\C7E\FC\00\00\00\00\89}\F8H\89u\F0H\C7\85H\FF\FF\FF\A0\86\01\00\C7\850\FF\FF\FF\00\00\00\00\C7\85T\FF\FF\FF\01\00\00\00\8B\85T\FF\FF\FF;E\F8\0F\8D\DA\00\00\00H\BE8\19@\00\00\00\00\00\B8\02\00\00\00\89\C2H\8BM\F0Hc\BDT\FF\FF\FFH\8B<\F9\E8\F4\FD\FF\FF\83\F8\00\0F\84\1B\00\00\00H\8BE\F0Hc\8DT\FF\FF\FFH\8B\04\C8\0F\BE\10\83\FAc\0F\85\0F\00\00\00\C7\850\FF\FF\FF\01\00\00\00\E9n\00\00\00H\8BE\F0Hc\8DT\FF\FF\FFH\8B<\C8\E8-\FE\FF\FFH\83\F8\00\0F\8E \00\00\00H\8BE\F0Hc\8DT\FF\FF\FFH\8B<\C8\E8\0F\FE\FF\FFH\89\85H\FF\FF\FF\E9+\00\00\00H\BE;\19@\00\00\00\00\00H\8B<%\80 `\00\B0\00\E8\CA\FD\FF\FF\C7E\FC\01\00\00\00\89\85,\FF\FF\FF\E9x\0C\00\00\E9\00\00\00\00\8B\85T\FF\FF\FF\83\C0\01\89\85T\FF\FF\FF\E9\17\FF\FF\FF\E9\00\00\00\001\C0\89\C7\E8\A1\FD\FF\FF\F2\0F\10\05q\0F\00\00\F2\0F\10\0Dq\0F\00\00\F2\0F\10\15q\0F\00\00H\89\85@\FF\FF\FF\F2\0F\11\14%\98 `\00\F2\0F\11\0C%\A0 `\00\F2\0F\11\04%\B0 `\00H\8B\85H\FF\FF\FFH\89\85X\FF\FF\FF\C7\85T\FF\FF\FF\01\00\00\00\C7\85P\FF\FF\FF\01\00\00\00\F2\0F\10\05-\0F\00\00\F2\0F\10\0D-\0F\00\00H\C7E\E0\00\00\00\00Hk\85X\FF\FF\FF\0CH\89E\D8Hk\85X\FF\FF\FF\0EH\89E\D0Hi\85X\FF\FF\FFY\01\00\00H\89E\C8Hi\85X\FF\FF\FF\D2\00\00\00H\89E\C0H\8B\85X\FF\FF\FFH\C1\E0\05H\89E\B8Hi\85X\FF\FF\FF\83\03\00\00H\89E\B0Hi\85X\FF\FF\FFh\02\00\00H\89E\A8H\C7E\A0\00\00\00\00Hk\85X\FF\FF\FF]H\89E\98\F2\0F\11M\90\F2\0F\11E\88\F2\0F\11E\80\F2\0F\11\85x\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\E0\0F\8F\BF\00\00\00H\B8\00\00\00\00\00\00\00\80\F2\0F\10E\90\F2\0FXE\88\F2\0FXE\80\F2\0F\5C\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11E\90\F2\0F\10E\90\F2\0FXE\88\F2\0F\5CE\80\F2\0FX\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11E\88\F2\0F\10E\90\F2\0F\5CE\88\F2\0FXE\80\F2\0FX\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11E\80\F2\0F\10E\90fH\0F~\C1H1\C1fH\0Fn\C1\F2\0FXE\88\F2\0FXE\80\F2\0FX\85x\FF\FF\FF\F2\0FY\04%\98 `\00\F2\0F\11\85x\FF\FF\FFH\8BE\E8H\83\C0\01H\89E\E8\E93\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\85(\00\00\00H\8B}\E0H\8Bu\E0H\8BU\E0\F2\0F\10E\90\F2\0F\10M\88\F2\0F\10U\80\F2\0F\10\9Dx\FF\FF\FF\E8P\0A\00\00\F2\0F\10\05x\0D\00\00\F2\0F\10\0Dx\0D\00\00\F2\0F\11\0C%\C8 `\00\F2\0F\11\04%\D0 `\00\F2\0F\11\04%\D8 `\00\F2\0F\11\04%\E0 `\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\D8\0F\8F\00\01\00\00H\B8\00\00\00\00\00\00\00\80\F2\0F\10\04%\C8 `\00\F2\0FX\04%\D0 `\00\F2\0FX\04%\D8 `\00\F2\0F\5C\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\C8 `\00\F2\0F\10\04%\C8 `\00\F2\0FX\04%\D0 `\00\F2\0F\5C\04%\D8 `\00\F2\0FX\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\D0 `\00\F2\0F\10\04%\C8 `\00\F2\0F\5C\04%\D0 `\00\F2\0FX\04%\D8 `\00\F2\0FX\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\D8 `\00\F2\0F\10\04%\C8 `\00fH\0F~\C1H1\C1fH\0Fn\C1\F2\0FX\04%\D0 `\00\F2\0FX\04%\D8 `\00\F2\0FX\04%\E0 `\00\F2\0FY\04%\98 `\00\F2\0F\11\04%\E0 `\00H\8BE\E8H\83\C0\01H\89E\E8\E9\F2\FE\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\855\00\00\00H\8B}\D8H\8Bu\D0H\8BU\D8\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8\BF\08\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\D0\0F\8F \00\00\00H\BF\C0 `\00\00\00\00\00\E8\0A\09\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9\D2\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\855\00\00\00H\8B}\D0H\8Bu\D8H\8BU\D8\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8B\08\00\00\C7\04%\90 `\00\01\00\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\C8\0F\8F\91\00\00\00\83<%\90 `\00\01\0F\85\10\00\00\00\C7\04%\90 `\00\02\00\00\00\E9\0B\00\00\00\C7\04%\90 `\00\03\00\00\00\83<%\90 `\00\02\0F\8E\10\00\00\00\C7\04%\90 `\00\00\00\00\00\E9\0B\00\00\00\C7\04%\90 `\00\01\00\00\00\83<%\90 `\00\01\0F\8D\10\00\00\00\C7\04%\90 `\00\01\00\00\00\E9\0B\00\00\00\C7\04%\90 `\00\00\00\00\00\E9\00\00\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9a\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\850\00\00\00H\8B}\C8Hc4%\90 `\00Hc\14%\90 `\00\F2\0F\10E\90\F2\0F\10M\88\F2\0F\10U\80\F2\0F\10\9Dx\FF\FF\FF\E8N\07\00\00\C7\04%\90 `\00\01\00\00\00\C7\04%\AC `\00\02\00\00\00\C7\04%\A8 `\00\03\00\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\C0\0F\8F\F5\00\00\00\8B\04%\90 `\00\8B\0C%\AC `\00+\0C%\90 `\00\0F\AF\C1\8B\0C%\A8 `\00+\0C%\AC `\00\0F\AF\C1\89\04%\90 `\00\8B\04%\A8 `\00\0F\AF\04%\AC `\00\8B\0C%\A8 `\00+\0C%\90 `\00\0F\AF\0C%\AC `\00)\C8\89\04%\AC `\00\8B\04%\A8 `\00+\04%\AC `\00\8B\0C%\AC `\00\03\0C%\90 `\00\0F\AF\C1\89\04%\A8 `\00\8B\04%\90 `\00\03\04%\AC `\00\03\04%\A8 `\00\F2\0F*\C0\8B\04%\A8 `\00\83\E8\01Hc\D0\F2\0F\11\04\D5\C0 `\00\8B\04%\90 `\00\0F\AF\04%\AC `\00\0F\AF\04%\A8 `\00\F2\0F*\C0\8B\04%\AC `\00\83\E8\01Hc\D0\F2\0F\11\04\D5\C0 `\00H\8BE\E8H\83\C0\01H\89E\E8\E9\FD\FE\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\85=\00\00\00H\8B}\C0Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8\D3\05\00\00\F2\0F\10\05\0B\09\00\00\F2\0F\11\85p\FF\FF\FF\F2\0F\11\85h\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\B8\0F\8F\E9\01\00\00\F2\0F\10\05\D5\08\00\00\F2\0F\10\0C%\98 `\00\F2\0F\10\14%\B0 `\00\F2\0F\10\9Dp\FF\FF\FF\F2\0F\11\85 \FF\FF\FF\0F(\C3\F2\0F\11\95\18\FF\FF\FF\F2\0F\11\8D\10\FF\FF\FF\E8\C3\F6\FF\FF\F2\0F\10\8D\18\FF\FF\FF\F2\0FY\C8\F2\0F\10\85p\FF\FF\FF\F2\0F\11\8D\08\FF\FF\FF\E8b\F6\FF\FF\F2\0F\10\8D\08\FF\FF\FF\F2\0FY\C8\F2\0F\10\85p\FF\FF\FF\F2\0FX\85h\FF\FF\FF\F2\0F\11\8D\00\FF\FF\FF\E89\F6\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\5C\8Dh\FF\FF\FF\F2\0F\11\85\F8\FE\FF\FF\0F(\C1\E8\19\F6\FF\FF\F2\0F\10\8D\F8\FE\FF\FF\F2\0FX\C8\F2\0F\10\85 \FF\FF\FF\F2\0F\5C\C8\F2\0F\10\95\00\FF\FF\FF\F2\0F^\D1\0F(\C2\E8\BD\F5\FF\FF\F2\0F\10\0D\FD\07\00\00\F2\0F\10\95\10\FF\FF\FF\F2\0FY\D0\F2\0F\11\95p\FF\FF\FF\F2\0F\10\04%\98 `\00\F2\0F\10\14%\B0 `\00\F2\0F\10\9Dh\FF\FF\FF\F2\0F\11\85\F0\FE\FF\FF\0F(\C3\F2\0F\11\8D\E8\FE\FF\FF\F2\0F\11\95\E0\FE\FF\FF\E8\D7\F5\FF\FF\F2\0F\10\8D\E0\FE\FF\FF\F2\0FY\C8\F2\0F\10\85h\FF\FF\FF\F2\0F\11\8D\D8\FE\FF\FF\E8v\F5\FF\FF\F2\0F\10\8D\D8\FE\FF\FF\F2\0FY\C8\F2\0F\10\85p\FF\FF\FF\F2\0FX\85h\FF\FF\FF\F2\0F\11\8D\D0\FE\FF\FF\E8M\F5\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\5C\8Dh\FF\FF\FF\F2\0F\11\85\C8\FE\FF\FF\0F(\C1\E8-\F5\FF\FF\F2\0F\10\8D\C8\FE\FF\FF\F2\0FX\C8\F2\0F\10\85\E8\FE\FF\FF\F2\0F\5C\C8\F2\0F\10\95\D0\FE\FF\FF\F2\0F^\D1\0F(\C2\E8\D1\F4\FF\FF\F2\0F\10\8D\F0\FE\FF\FF\F2\0FY\C8\F2\0F\11\8Dh\FF\FF\FFH\8BE\E8H\83\C0\01H\89E\E8\E9\09\FE\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\859\00\00\00H\8B}\B8Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\10\95h\FF\FF\FF\F2\0F\10\9Dh\FF\FF\FF\E8q\03\00\00\F2\0F\10\05\A1\06\00\00\F2\0F\11\85p\FF\FF\FF\F2\0F\11\85h\FF\FF\FF\F2\0F\11\85`\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\B0\0F\8F-\00\00\00H\8D\BD`\FF\FF\FF\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dh\FF\FF\FF\E8\BF\04\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9\C5\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\859\00\00\00H\8B}\B0Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dh\FF\FF\FF\F2\0F\10\95`\FF\FF\FF\F2\0F\10\9D`\FF\FF\FF\E8\C3\02\00\00\F2\0F\10\05\03\06\00\00\F2\0F\10\0D\CB\05\00\00\F2\0F\10\15\E3\05\00\00\C7\04%\90 `\00\01\00\00\00\C7\04%\AC `\00\02\00\00\00\C7\04%\A8 `\00\03\00\00\00\F2\0F\11\14%\C8 `\00\F2\0F\11\0C%\D0 `\00\F2\0F\11\04%\D8 `\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\A8\0F\8F\16\00\00\00\E8t\04\00\00H\8BE\E8H\83\C0\01H\89E\E8\E9\DC\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\85=\00\00\00H\8B}\A8Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\04%\C8 `\00\F2\0F\10\0C%\D0 `\00\F2\0F\10\14%\D8 `\00\F2\0F\10\1C%\E0 `\00\E8\F4\01\00\00\C7\04%\90 `\00\02\00\00\00\C7\04%\AC `\00\03\00\00\00H\C7E\E8\01\00\00\00H\8BE\E8H;E\A0\0F\8Fl\00\00\00\8B\04%\90 `\00\03\04%\AC `\00\89\04%\90 `\00\8B\04%\90 `\00\03\04%\AC `\00\89\04%\AC `\00\8B\04%\AC `\00+\04%\90 `\00\89\04%\90 `\00\8B\04%\AC `\00+\04%\90 `\00+\04%\90 `\00\89\04%\AC `\00H\8BE\E8H\83\C0\01H\89E\E8\E9\86\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\850\00\00\00H\8B}\A0Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10E\90\F2\0F\10M\88\F2\0F\10U\80\F2\0F\10\9Dx\FF\FF\FF\E8\1A\01\00\00\F2\0F\10\05b\04\00\00\F2\0F\11\85p\FF\FF\FFH\C7E\E8\01\00\00\00H\8BE\E8H;E\98\0F\8F9\00\00\00\F2\0F\10\85p\FF\FF\FF\E8\F7\F1\FF\FF\F2\0F^\04%\A0 `\00\E8\B9\F1\FF\FF\E8D\F2\FF\FF\F2\0F\11\85p\FF\FF\FFH\8BE\E8H\83\C0\01H\89E\E8\E9\B9\FF\FF\FF\8B\85P\FF\FF\FF;\85T\FF\FF\FF\0F\859\00\00\00H\8B}\98Hc4%\90 `\00Hc\14%\AC `\00\F2\0F\10\85p\FF\FF\FF\F2\0F\10\8Dp\FF\FF\FF\F2\0F\10\95p\FF\FF\FF\F2\0F\10\9Dp\FF\FF\FF\E8p\00\00\00\8B\85P\FF\FF\FF\83\C0\01\89\85P\FF\FF\FF;\85T\FF\FF\FF\0F\8F\05\00\00\00\E9K\F4\FF\FF1\C0\89\C7\E8\87\F1\FF\FFH\BFU\19@\00\00\00\00\00H\89\858\FF\FF\FF\B0\00\E8/\F1\FF\FF\83\BD0\FF\FF\FF\00\89\85\C4\FE\FF\FF\0F\84\05\00\00\00\E9\AD\F3\FF\FF\C7E\FC\00\00\00\00\8BE\FCH\81\C4@\01\00\00]\C3\0F\1F@\00UH\89\E5H\83\EC@H\B8W\19@\00\00\00\00\00H\89}\F8H\89u\F0H\89U\E8\F2\0F\11E\E0\F2\0F\11M\D8\F2\0F\11U\D0\F2\0F\11]\C8H\8Bu\F8H\8BU\F0H\8BM\E8\F2\0F\10E\E0\F2\0F\10M\D8\F2\0F\10U\D0\F2\0F\10]\C8H\89\C7\B0\04\E8\A4\F0\FF\FF\89E\C4H\83\C4@]\C3ff.\0F\1F\84\00\00\00\00\00UH\89\E5H\89}\F8\C7\04%\90 `\00\00\00\00\00H\B8\00\00\00\00\00\00\00\80H\8BM\F8\F2\0F\10A\08H\8BM\F8\F2\0FXA\10H\8BM\F8\F2\0FXA\18H\8BM\F8\F2\0F\5CA \F2\0FY\04%\98 `\00H\8BM\F8\F2\0F\11A\08H\8BM\F8\F2\0F\10A\08H\8BM\F8\F2\0FXA\10H\8BM\F8\F2\0F\5CA\18H\8BM\F8\F2\0FXA \F2\0FY\04%\98 `\00H\8BM\F8\F2\0F\11A\10H\8BM\F8\F2\0F\10A\08H\8BM\F8\F2\0F\5CA\10H\8BM\F8\F2\0FXA\18H\8BM\F8\F2\0FXA \F2\0FY\04%\98 `\00H\8BM\F8\F2\0F\11A\18H\8BM\F8\F2\0F\10A\08fH\0F~\C1H1\C1fH\0Fn\C1H\8BE\F8\F2\0FX@\10H\8BE\F8\F2\0FX@\18H\8BE\F8\F2\0FX@ \F2\0F^\04%\B0 `\00H\8BE\F8\F2\0F\11@ \8B\14%\90 `\00\83\C2\01\89\14%\90 `\00\83<%\90 `\00\06\0F\8D\05\00\00\00\E9\ED\FE\FF\FF]\C3\0F\1F\84\00\00\00\00\00UH\89\E5\F2\0F\11E\F8\F2\0F\11M\F0H\89}\E8\F2\0F\10E\F8\F2\0F\11E\E0\F2\0F\10E\F0\F2\0F\11E\D8\F2\0F\10\04%\98 `\00\F2\0F\10M\E0\F2\0FXM\D8\F2\0FY\C1\F2\0F\11E\E0\F2\0F\10\04%\98 `\00\F2\0F\10M\E0\F2\0FXM\D8\F2\0FY\C1\F2\0F\11E\D8\F2\0F\10E\E0\F2\0FXE\D8\F2\0F^\04%\B0 `\00H\8B}\E8\F2\0F\11\07]\C3\0F\1FD\00\00UH\89\E5Hc\04%\AC `\00\F2\0F\10\04\C5\C0 `\00Hc\04%\90 `\00\F2\0F\11\04\C5\C0 `\00Hc\04%\A8 `\00\F2\0F\10\04\C5\C0 `\00Hc\04%\AC `\00\F2\0F\11\04\C5\C0 `\00Hc\04%\90 `\00\F2\0F\10\04\C5\C0 `\00Hc\04%\A8 `\00\F2\0F\11\04\C5\C0 `\00]\C3\0F\1F@\00AWAVI\89\D7AUATL\8D%n\05 \00UH\8D-n\05 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\E7\ED\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_4018e4__fini = internal constant %seg_4018e4__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_4018f0__rodata = internal constant %seg_4018f0__rodata_type <{ [72 x i8] c"\01\00\02\00\00\00\00\00\00\00\00\00\00\00\00@5^\BAI\0C\02\E0?\8FSt$\97\FF\DF?\00\00\00\00\00\00\F0\BF\00\00\00\00\00\00\F0?\00\00\00\00\00\00\E0?\00\00\00\00\00\00\08@\00\00\00\00\00\00\E8?", [3 x i8] c"-c\00", [28 x i8] c"usage: whetdc [-c] [loops]\0A\00", [44 x i8] c"%7ld %7ld %7ld %12.4e %12.4e %12.4e %12.4e\0A\00" }>
@seg_401984__eh_frame_hdr = internal constant %seg_401984__eh_frame_hdr_type <{ [92 x i8] c"\01\1B\03;X\00\00\00\0A\00\00\00\1C\ED\FF\FF\B4\00\00\00\DC\ED\FF\FFt\00\00\00\0C\EE\FF\FF\A0\00\00\00\CC\EE\FF\FF\DC\00\00\00\5C\FC\FF\FF\F8\00\00\00\CC\FC\FF\FF\14\01\00\00\FC\FD\FF\FF0\01\00\00|\FE\FF\FFL\01\00\00\EC\FE\FF\FFl\01\00\00\5C\FF\FF\FF\B4\01\00\00" }>
@seg_4019e0__eh_frame = internal constant %seg_4019e0__eh_frame_type <{ [368 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00`\ED\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00d\ED\FF\FF\02\00\00\00\00\00\00\00$\00\00\000\00\00\00`\EC\FF\FF\C0\00\00\00\00\0E\10F\0E\18J\0F\0Bw\08\80\00?\1A;*3$\22\00\00\00\00\18\00\00\00X\00\00\00\E8\ED\FF\FF\8C\0D\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00t\00\00\00\5C\FB\FF\FFe\00\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00\90\00\00\00\B0\FB\FF\FF(\01\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00\AC\00\00\00\C4\FC\FF\FF{\00\00\00\00A\0E\10\86\02C\0D\06\00\00\00\1C\00\00\00\C8\00\00\00(\FD\FF\FFl\00\00\00\00A\0E\10\86\02C\0D\06\00\00\00\00\00\00\00D\00\00\00\E8\00\00\00x\FD\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\000\01\00\00\A0\FD\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601df0__init_array = internal global %seg_601df0__init_array_type <{ i64 ptrtoint (void ()* @callback_sub_400840_frame_dummy to i64), i64 ptrtoint (void ()* @callback_sub_400810___do_global_dtors_aux to i64) }>
@seg_601ff0__got = internal global %seg_601ff0__got_type <{ i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), i64 ptrtoint (i64 ()* @__gmon_start__ to i64) }>
@seg_602000__got_plt = internal global %seg_602000__got_plt_type <{ [24 x i8] zeroinitializer, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), i64 ptrtoint (i64 (i64)* @exp to i64), i64 ptrtoint (double (double)* @atan to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), i64 ptrtoint (i64 (i64)* @log to i64), i64 ptrtoint (double (double)* @cos to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), i64 ptrtoint (i64 (i64)* @time to i64), i64 ptrtoint (i64 (i64)* @atol to i64), i64 ptrtoint (double (double)* @sin to i64), i64 ptrtoint (double (double)* @sqrt to i64) }>
@seg_602070__data = internal global %seg_602070__data_type zeroinitializer
@seg_602080__bss = internal global %seg_602080__bss_type zeroinitializer
@J = global %J_type zeroinitializer
@T = global %T_type zeroinitializer
@T1 = global %T1_type zeroinitializer
@L = global %L_type zeroinitializer
@K = global %K_type zeroinitializer
@T2 = global %T2_type zeroinitializer
@E1 = global %E1_type zeroinitializer
@0 = internal global i1 false
@1 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400840_frame_dummy_wrapper
@2 = internal constant void ()* @__mcsema_attach_call
@3 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400810___do_global_dtors_aux_wrapper
@4 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4018e0___libc_csu_fini_wrapper
@5 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_401870___libc_csu_init_wrapper
@6 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @main_wrapper
@7 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.init_proc_wrapper
@8 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.term_proc_wrapper
@9 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @PA_wrapper
@10 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @P3_wrapper
@11 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @POUT_wrapper
@12 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @P0_wrapper
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_constructor, i8* null }]
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_destructor, i8* null }]

declare %struct.Memory* @__remill_sync_hyper_call(%struct.State* dereferenceable(3376), %struct.Memory*, i32) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_read_memory_8(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_8(%struct.Memory*, i64, i8 zeroext) #2

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_read_memory_16(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_16(%struct.Memory*, i64, i16 zeroext) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_read_memory_32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_32(%struct.Memory*, i64, i32) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_read_memory_64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_64(%struct.Memory*, i64, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_read_memory_f32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_undefined_8() #2

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #4

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #3

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #3

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f32(%struct.Memory*, i64, float) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f64(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare zeroext i8 @__remill_read_io_port_8(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare zeroext i16 @__remill_read_io_port_16(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32 @__remill_read_io_port_32(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_8(%struct.Memory*, i64, i8 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_16(%struct.Memory*, i64, i16 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_32(%struct.Memory*, i64, i32) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_load(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_store(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_load(%struct.Memory*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_undefined_64() #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_undefined_f64() #2

declare %struct.Memory* @__remill_compare_exchange_memory_8(%struct.Memory*, i64, i8* dereferenceable(1), i8 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_16(%struct.Memory*, i64, i16* dereferenceable(2), i16 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_32(%struct.Memory*, i64, i32* dereferenceable(4), i32) #0

declare %struct.Memory* @__remill_compare_exchange_memory_64(%struct.Memory*, i64, i64* dereferenceable(8), i64) #0

declare %struct.Memory* @__remill_compare_exchange_memory_128(%struct.Memory*, i64, i128* dereferenceable(16), i128* dereferenceable(16)) local_unnamed_addr #0

declare %struct.Memory* @__remill_fetch_and_add_8(%struct.Memory*, i64, i8* dereferenceable(1)) #0

declare %struct.Memory* @__remill_fetch_and_add_16(%struct.Memory*, i64, i16* dereferenceable(2)) #0

declare %struct.Memory* @__remill_fetch_and_add_32(%struct.Memory*, i64, i32* dereferenceable(4)) #0

declare %struct.Memory* @__remill_fetch_and_add_64(%struct.Memory*, i64, i64* dereferenceable(8)) #0

; Function Attrs: nounwind readnone
declare float @sqrtf(float) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sqrt(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @fesetround(i32) local_unnamed_addr #6

; Function Attrs: nounwind readonly
declare i32 @fegetround() local_unnamed_addr #7

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f80(%struct.Memory*, i64) #2

; Function Attrs: nounwind
declare i32 @fetestexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feraiseexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feclearexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32) #5

; Function Attrs: nounwind readnone
declare double @cos(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sin(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @tan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @atan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @exp2(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @remainder(double, double) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f80(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare double @log2(double) local_unnamed_addr #5

; Function Attrs: noinline nounwind optnone
define %struct.Memory* @__remill_basic_block(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #8 !dbg !1261 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1, !dbg !1952
  store i64 0, i64* %SS_BASE, align 8, !dbg !1953
  store i64 0, i64* %ES_BASE, align 8, !dbg !1954
  store i64 0, i64* %DS_BASE, align 8, !dbg !1955
  store i64 0, i64* %CS_BASE, align 8, !dbg !1956
  store %struct.State* %0, %struct.State** %STATE, align 8, !dbg !1957
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8, !dbg !1958
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1959
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33, !dbg !1960
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0, !dbg !1961
  %PC = bitcast %union.anon* %6 to i64*, !dbg !1961
  store i64 %1, i64* %PC, align 8, !dbg !1962
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1963
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1, !dbg !1964
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0, !dbg !1965
  %10 = bitcast %union.anon* %9 to %struct.anon.2*, !dbg !1965
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1, !dbg !1966
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1967
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3, !dbg !1968
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0, !dbg !1969
  %14 = bitcast %union.anon* %13 to %struct.anon.2*, !dbg !1969
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1, !dbg !1970
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1971
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5, !dbg !1972
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0, !dbg !1973
  %18 = bitcast %union.anon* %17 to %struct.anon.2*, !dbg !1973
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1, !dbg !1974
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1975
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7, !dbg !1976
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0, !dbg !1977
  %22 = bitcast %union.anon* %21 to %struct.anon.2*, !dbg !1977
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1, !dbg !1978
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1979
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1, !dbg !1980
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0, !dbg !1981
  %26 = bitcast %union.anon* %25 to %struct.anon.2*, !dbg !1981
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0, !dbg !1982
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1983
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3, !dbg !1984
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0, !dbg !1985
  %30 = bitcast %union.anon* %29 to %struct.anon.2*, !dbg !1985
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0, !dbg !1986
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1987
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5, !dbg !1988
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0, !dbg !1989
  %34 = bitcast %union.anon* %33 to %struct.anon.2*, !dbg !1989
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0, !dbg !1990
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1991
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7, !dbg !1992
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0, !dbg !1993
  %38 = bitcast %union.anon* %37 to %struct.anon.2*, !dbg !1993
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0, !dbg !1994
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1995
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9, !dbg !1996
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0, !dbg !1997
  %42 = bitcast %union.anon* %41 to %struct.anon.2*, !dbg !1997
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0, !dbg !1998
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1999
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11, !dbg !2000
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0, !dbg !2001
  %46 = bitcast %union.anon* %45 to %struct.anon.2*, !dbg !2001
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0, !dbg !2002
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2003
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13, !dbg !2004
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0, !dbg !2005
  %50 = bitcast %union.anon* %49 to %struct.anon.2*, !dbg !2005
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0, !dbg !2006
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2007
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15, !dbg !2008
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0, !dbg !2009
  %54 = bitcast %union.anon* %53 to %struct.anon.2*, !dbg !2009
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0, !dbg !2010
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2011
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17, !dbg !2012
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0, !dbg !2013
  %58 = bitcast %union.anon* %57 to %struct.anon.2*, !dbg !2013
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0, !dbg !2014
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2015
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19, !dbg !2016
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0, !dbg !2017
  %62 = bitcast %union.anon* %61 to %struct.anon.2*, !dbg !2017
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0, !dbg !2018
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2019
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21, !dbg !2020
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0, !dbg !2021
  %66 = bitcast %union.anon* %65 to %struct.anon.2*, !dbg !2021
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0, !dbg !2022
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2023
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23, !dbg !2024
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0, !dbg !2025
  %70 = bitcast %union.anon* %69 to %struct.anon.2*, !dbg !2025
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0, !dbg !2026
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2027
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25, !dbg !2028
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0, !dbg !2029
  %74 = bitcast %union.anon* %73 to %struct.anon.2*, !dbg !2029
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0, !dbg !2030
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2031
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27, !dbg !2032
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0, !dbg !2033
  %78 = bitcast %union.anon* %77 to %struct.anon.2*, !dbg !2033
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0, !dbg !2034
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2035
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29, !dbg !2036
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0, !dbg !2037
  %82 = bitcast %union.anon* %81 to %struct.anon.2*, !dbg !2037
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0, !dbg !2038
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2039
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31, !dbg !2040
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0, !dbg !2041
  %86 = bitcast %union.anon* %85 to %struct.anon.2*, !dbg !2041
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0, !dbg !2042
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2043
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1, !dbg !2044
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0, !dbg !2045
  %AX = bitcast %union.anon* %89 to i16*, !dbg !2045
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2046
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3, !dbg !2047
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0, !dbg !2048
  %BX = bitcast %union.anon* %92 to i16*, !dbg !2048
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2049
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5, !dbg !2050
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0, !dbg !2051
  %CX = bitcast %union.anon* %95 to i16*, !dbg !2051
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2052
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7, !dbg !2053
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0, !dbg !2054
  %DX = bitcast %union.anon* %98 to i16*, !dbg !2054
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2055
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9, !dbg !2056
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0, !dbg !2057
  %SI = bitcast %union.anon* %101 to i16*, !dbg !2057
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2058
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11, !dbg !2059
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0, !dbg !2060
  %DI = bitcast %union.anon* %104 to i16*, !dbg !2060
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2061
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13, !dbg !2062
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0, !dbg !2063
  %SP = bitcast %union.anon* %107 to i16*, !dbg !2063
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2064
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15, !dbg !2065
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0, !dbg !2066
  %BP = bitcast %union.anon* %110 to i16*, !dbg !2066
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2067
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17, !dbg !2068
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0, !dbg !2069
  %R8W = bitcast %union.anon* %113 to i16*, !dbg !2069
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2070
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19, !dbg !2071
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0, !dbg !2072
  %R9W = bitcast %union.anon* %116 to i16*, !dbg !2072
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2073
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21, !dbg !2074
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0, !dbg !2075
  %R10W = bitcast %union.anon* %119 to i16*, !dbg !2075
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2076
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23, !dbg !2077
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0, !dbg !2078
  %R11W = bitcast %union.anon* %122 to i16*, !dbg !2078
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2079
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25, !dbg !2080
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0, !dbg !2081
  %R12W = bitcast %union.anon* %125 to i16*, !dbg !2081
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2082
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27, !dbg !2083
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0, !dbg !2084
  %R13W = bitcast %union.anon* %128 to i16*, !dbg !2084
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2085
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29, !dbg !2086
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0, !dbg !2087
  %R14W = bitcast %union.anon* %131 to i16*, !dbg !2087
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2088
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31, !dbg !2089
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0, !dbg !2090
  %R15W = bitcast %union.anon* %134 to i16*, !dbg !2090
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2091
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33, !dbg !2092
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0, !dbg !2093
  %IP = bitcast %union.anon* %137 to i16*, !dbg !2093
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2094
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1, !dbg !2095
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0, !dbg !2096
  %EAX = bitcast %union.anon* %140 to i32*, !dbg !2096
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2097
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3, !dbg !2098
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0, !dbg !2099
  %EBX = bitcast %union.anon* %143 to i32*, !dbg !2099
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2100
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5, !dbg !2101
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0, !dbg !2102
  %ECX = bitcast %union.anon* %146 to i32*, !dbg !2102
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2103
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7, !dbg !2104
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0, !dbg !2105
  %EDX = bitcast %union.anon* %149 to i32*, !dbg !2105
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2106
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9, !dbg !2107
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0, !dbg !2108
  %ESI = bitcast %union.anon* %152 to i32*, !dbg !2108
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2109
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11, !dbg !2110
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0, !dbg !2111
  %EDI = bitcast %union.anon* %155 to i32*, !dbg !2111
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2112
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13, !dbg !2113
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0, !dbg !2114
  %ESP = bitcast %union.anon* %158 to i32*, !dbg !2114
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2115
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15, !dbg !2116
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0, !dbg !2117
  %EBP = bitcast %union.anon* %161 to i32*, !dbg !2117
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2118
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33, !dbg !2119
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0, !dbg !2120
  %EIP = bitcast %union.anon* %164 to i32*, !dbg !2120
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2121
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17, !dbg !2122
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0, !dbg !2123
  %R8D = bitcast %union.anon* %167 to i32*, !dbg !2123
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2124
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19, !dbg !2125
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0, !dbg !2126
  %R9D = bitcast %union.anon* %170 to i32*, !dbg !2126
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2127
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21, !dbg !2128
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0, !dbg !2129
  %R10D = bitcast %union.anon* %173 to i32*, !dbg !2129
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2130
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23, !dbg !2131
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0, !dbg !2132
  %R11D = bitcast %union.anon* %176 to i32*, !dbg !2132
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2133
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25, !dbg !2134
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0, !dbg !2135
  %R12D = bitcast %union.anon* %179 to i32*, !dbg !2135
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2136
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27, !dbg !2137
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0, !dbg !2138
  %R13D = bitcast %union.anon* %182 to i32*, !dbg !2138
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2139
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29, !dbg !2140
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0, !dbg !2141
  %R14D = bitcast %union.anon* %185 to i32*, !dbg !2141
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2142
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31, !dbg !2143
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0, !dbg !2144
  %R15D = bitcast %union.anon* %188 to i32*, !dbg !2144
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2145
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1, !dbg !2146
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0, !dbg !2147
  %RAX = bitcast %union.anon* %191 to i64*, !dbg !2147
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2148
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3, !dbg !2149
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0, !dbg !2150
  %RBX = bitcast %union.anon* %194 to i64*, !dbg !2150
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2151
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5, !dbg !2152
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0, !dbg !2153
  %RCX = bitcast %union.anon* %197 to i64*, !dbg !2153
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2154
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7, !dbg !2155
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0, !dbg !2156
  %RDX = bitcast %union.anon* %200 to i64*, !dbg !2156
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2157
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9, !dbg !2158
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0, !dbg !2159
  %RSI = bitcast %union.anon* %203 to i64*, !dbg !2159
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2160
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11, !dbg !2161
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0, !dbg !2162
  %RDI = bitcast %union.anon* %206 to i64*, !dbg !2162
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2163
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13, !dbg !2164
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0, !dbg !2165
  %RSP = bitcast %union.anon* %209 to i64*, !dbg !2165
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2166
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15, !dbg !2167
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0, !dbg !2168
  %RBP = bitcast %union.anon* %212 to i64*, !dbg !2168
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2169
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17, !dbg !2170
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0, !dbg !2171
  %R8 = bitcast %union.anon* %215 to i64*, !dbg !2171
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2172
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19, !dbg !2173
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0, !dbg !2174
  %R9 = bitcast %union.anon* %218 to i64*, !dbg !2174
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2175
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21, !dbg !2176
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0, !dbg !2177
  %R10 = bitcast %union.anon* %221 to i64*, !dbg !2177
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2178
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23, !dbg !2179
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0, !dbg !2180
  %R11 = bitcast %union.anon* %224 to i64*, !dbg !2180
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2181
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25, !dbg !2182
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0, !dbg !2183
  %R12 = bitcast %union.anon* %227 to i64*, !dbg !2183
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2184
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27, !dbg !2185
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0, !dbg !2186
  %R13 = bitcast %union.anon* %230 to i64*, !dbg !2186
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2187
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29, !dbg !2188
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0, !dbg !2189
  %R14 = bitcast %union.anon* %233 to i64*, !dbg !2189
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2190
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31, !dbg !2191
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0, !dbg !2192
  %R15 = bitcast %union.anon* %236 to i64*, !dbg !2192
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2193
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33, !dbg !2194
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0, !dbg !2195
  %RIP = bitcast %union.anon* %239 to i64*, !dbg !2195
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2196
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1, !dbg !2197
  %SS = bitcast %union.SegmentSelector* %241 to i16*, !dbg !2198
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2199
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3, !dbg !2200
  %ES = bitcast %union.SegmentSelector* %243 to i16*, !dbg !2201
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2202
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5, !dbg !2203
  %GS = bitcast %union.SegmentSelector* %245 to i16*, !dbg !2204
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2205
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7, !dbg !2206
  %FS = bitcast %union.SegmentSelector* %247 to i16*, !dbg !2207
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2208
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9, !dbg !2209
  %DS = bitcast %union.SegmentSelector* %249 to i16*, !dbg !2210
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2211
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11, !dbg !2212
  %CS = bitcast %union.SegmentSelector* %251 to i16*, !dbg !2213
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2214
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5, !dbg !2215
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0, !dbg !2216
  %GS_BASE = bitcast %union.anon* %254 to i64*, !dbg !2216
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2217
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7, !dbg !2218
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0, !dbg !2219
  %FS_BASE = bitcast %union.anon* %257 to i64*, !dbg !2219
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2220
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0, !dbg !2221
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*, !dbg !2222
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2223
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1, !dbg !2224
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*, !dbg !2225
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2226
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2, !dbg !2227
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*, !dbg !2228
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2229
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3, !dbg !2230
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*, !dbg !2231
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2232
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4, !dbg !2233
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*, !dbg !2234
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2235
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5, !dbg !2236
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*, !dbg !2237
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2238
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6, !dbg !2239
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*, !dbg !2240
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2241
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7, !dbg !2242
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*, !dbg !2243
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2244
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8, !dbg !2245
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*, !dbg !2246
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2247
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9, !dbg !2248
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*, !dbg !2249
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2250
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10, !dbg !2251
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*, !dbg !2252
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2253
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11, !dbg !2254
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*, !dbg !2255
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2256
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12, !dbg !2257
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*, !dbg !2258
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2259
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13, !dbg !2260
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*, !dbg !2261
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2262
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14, !dbg !2263
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*, !dbg !2264
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2265
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15, !dbg !2266
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*, !dbg !2267
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2268
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0, !dbg !2269
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*, !dbg !2270
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2271
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1, !dbg !2272
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*, !dbg !2273
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2274
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2, !dbg !2275
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*, !dbg !2276
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2277
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3, !dbg !2278
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*, !dbg !2279
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2280
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4, !dbg !2281
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*, !dbg !2282
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2283
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5, !dbg !2284
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*, !dbg !2285
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2286
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6, !dbg !2287
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*, !dbg !2288
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2289
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7, !dbg !2290
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*, !dbg !2291
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2292
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8, !dbg !2293
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*, !dbg !2294
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2295
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9, !dbg !2296
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*, !dbg !2297
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2298
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10, !dbg !2299
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*, !dbg !2300
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2301
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11, !dbg !2302
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*, !dbg !2303
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2304
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12, !dbg !2305
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*, !dbg !2306
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2307
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13, !dbg !2308
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*, !dbg !2309
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2310
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14, !dbg !2311
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*, !dbg !2312
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2313
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15, !dbg !2314
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*, !dbg !2315
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2316
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0, !dbg !2317
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0, !dbg !2318
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1, !dbg !2319
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2320
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0, !dbg !2321
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1, !dbg !2322
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1, !dbg !2323
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2324
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0, !dbg !2325
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2, !dbg !2326
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1, !dbg !2327
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2328
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0, !dbg !2329
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3, !dbg !2330
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1, !dbg !2331
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2332
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0, !dbg !2333
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4, !dbg !2334
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1, !dbg !2335
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2336
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0, !dbg !2337
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5, !dbg !2338
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1, !dbg !2339
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2340
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0, !dbg !2341
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6, !dbg !2342
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1, !dbg !2343
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2344
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0, !dbg !2345
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7, !dbg !2346
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1, !dbg !2347
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2348
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0, !dbg !2349
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0, !dbg !2350
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1, !dbg !2351
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*, !dbg !2352
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0, !dbg !2353
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0, !dbg !2350
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2354
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0, !dbg !2355
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1, !dbg !2356
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1, !dbg !2357
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*, !dbg !2358
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0, !dbg !2359
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0, !dbg !2356
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2360
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0, !dbg !2361
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2, !dbg !2362
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1, !dbg !2363
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*, !dbg !2364
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0, !dbg !2365
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0, !dbg !2362
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2366
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0, !dbg !2367
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3, !dbg !2368
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1, !dbg !2369
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*, !dbg !2370
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0, !dbg !2371
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0, !dbg !2368
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2372
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0, !dbg !2373
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4, !dbg !2374
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1, !dbg !2375
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*, !dbg !2376
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0, !dbg !2377
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0, !dbg !2374
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2378
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0, !dbg !2379
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5, !dbg !2380
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1, !dbg !2381
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*, !dbg !2382
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0, !dbg !2383
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0, !dbg !2380
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2384
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0, !dbg !2385
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6, !dbg !2386
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1, !dbg !2387
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*, !dbg !2388
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0, !dbg !2389
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0, !dbg !2386
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2390
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0, !dbg !2391
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7, !dbg !2392
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1, !dbg !2393
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*, !dbg !2394
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0, !dbg !2395
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0, !dbg !2392
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2396
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5, !dbg !2397
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2398
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1, !dbg !2399
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2400
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11, !dbg !2401
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2402
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13, !dbg !2403
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2404
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3, !dbg !2405
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2406
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9, !dbg !2407
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2408
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7, !dbg !2409
  store i64* @DR0, i64** %_DR0, align 8, !dbg !2410
  store i64* @DR1, i64** %_DR1, align 8, !dbg !2411
  store i64* @DR2, i64** %_DR2, align 8, !dbg !2412
  store i64* @DR3, i64** %_DR3, align 8, !dbg !2413
  store i64* @DR4, i64** %_DR4, align 8, !dbg !2414
  store i64* @DR5, i64** %_DR5, align 8, !dbg !2415
  store i64* @DR6, i64** %_DR6, align 8, !dbg !2416
  store i64* @DR7, i64** %_DR7, align 8, !dbg !2417
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8, !dbg !2418
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8, !dbg !2419
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8, !dbg !2420
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8, !dbg !2421
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8, !dbg !2422
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8, !dbg !2423
  ret %struct.Memory* %2, !dbg !2424
}

; Function Attrs: noduplicate noinline nounwind optnone
define void @__remill_intrinsics() #9 !dbg !2425 {
  ret void, !dbg !2427
}

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_store(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_begin(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_end(%struct.Memory*) #10

declare %struct.Memory* @__remill_fetch_and_sub_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_sub_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_sub_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_sub_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_or_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_or_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_or_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_or_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_and_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_and_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_and_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_and_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_xor_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_xor_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_xor_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_xor_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_return(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_jump(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_missing_block(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_async_hyper_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_undefined_16() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_undefined_32() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_undefined_f32() #10

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @log(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @time(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__libc_start_main(i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__gmon_start__() #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @exp(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @atol(i64) #13

; Function Attrs: noinline
define %struct.Memory* @sub_401800_P0(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401800:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %16 to %"class.std::bitset"*
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %18 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %18 to %union.vec128_t*
  %19 = load i64, i64* %RBP
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 1
  store i64 %21, i64* %PC
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %23 = load i64, i64* %22, align 8, !tbaa !2428
  %24 = add i64 %23, -8
  %25 = inttoptr i64 %24 to i64*
  store i64 %19, i64* %25
  store i64 %24, i64* %22, align 8, !tbaa !2428
  %26 = load i64, i64* %RSP
  %27 = load i64, i64* %PC
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC
  store i64 %26, i64* %RBP, align 8, !tbaa !2428
  %29 = load i64, i64* %PC
  %30 = add i64 %29, 8
  store i64 %30, i64* %PC
  %31 = load i32, i32* bitcast (%K_type* @K to i32*)
  %32 = sext i32 %31 to i64
  store i64 %32, i64* %RAX, align 8, !tbaa !2428
  %33 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %34 = load i64, i64* %RAX
  %35 = mul i64 %34, 8
  %36 = add i64 %35, ptrtoint (%E1_type* @E1 to i64)
  %37 = load i64, i64* %PC
  %38 = add i64 %37, 9
  store i64 %38, i64* %PC
  %39 = inttoptr i64 %36 to double*
  %40 = load double, double* %39
  %41 = bitcast i8* %33 to double*
  store double %40, double* %41, align 1, !tbaa !2432
  %42 = getelementptr inbounds i8, i8* %33, i64 8
  %43 = bitcast i8* %42 to double*
  store double 0.000000e+00, double* %43, align 1, !tbaa !2432
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 8
  store i64 %45, i64* %PC
  %46 = load i32, i32* bitcast (%J_type* @J to i32*)
  %47 = sext i32 %46 to i64
  store i64 %47, i64* %RAX, align 8, !tbaa !2428
  %48 = load i64, i64* %RAX
  %49 = mul i64 %48, 8
  %50 = add i64 %49, ptrtoint (%E1_type* @E1 to i64)
  %51 = bitcast %union.vec128_t* %XMM0 to i8*
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 9
  store i64 %53, i64* %PC
  %54 = bitcast i8* %51 to double*
  %55 = load double, double* %54, align 1
  %56 = inttoptr i64 %50 to double*
  store double %55, double* %56
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 8
  store i64 %58, i64* %PC
  %59 = load i32, i32* bitcast (%L_type* @L to i32*)
  %60 = sext i32 %59 to i64
  store i64 %60, i64* %RAX, align 8, !tbaa !2428
  %61 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %62 = load i64, i64* %RAX
  %63 = mul i64 %62, 8
  %64 = add i64 %63, ptrtoint (%E1_type* @E1 to i64)
  %65 = load i64, i64* %PC
  %66 = add i64 %65, 9
  store i64 %66, i64* %PC
  %67 = inttoptr i64 %64 to double*
  %68 = load double, double* %67
  %69 = bitcast i8* %61 to double*
  store double %68, double* %69, align 1, !tbaa !2432
  %70 = getelementptr inbounds i8, i8* %61, i64 8
  %71 = bitcast i8* %70 to double*
  store double 0.000000e+00, double* %71, align 1, !tbaa !2432
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 8
  store i64 %73, i64* %PC
  %74 = load i32, i32* bitcast (%K_type* @K to i32*)
  %75 = sext i32 %74 to i64
  store i64 %75, i64* %RAX, align 8, !tbaa !2428
  %76 = load i64, i64* %RAX
  %77 = mul i64 %76, 8
  %78 = add i64 %77, ptrtoint (%E1_type* @E1 to i64)
  %79 = bitcast %union.vec128_t* %XMM0 to i8*
  %80 = load i64, i64* %PC
  %81 = add i64 %80, 9
  store i64 %81, i64* %PC
  %82 = bitcast i8* %79 to double*
  %83 = load double, double* %82, align 1
  %84 = inttoptr i64 %78 to double*
  store double %83, double* %84
  %85 = load i64, i64* %PC
  %86 = add i64 %85, 8
  store i64 %86, i64* %PC
  %87 = load i32, i32* bitcast (%J_type* @J to i32*)
  %88 = sext i32 %87 to i64
  store i64 %88, i64* %RAX, align 8, !tbaa !2428
  %89 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %90 = load i64, i64* %RAX
  %91 = mul i64 %90, 8
  %92 = add i64 %91, ptrtoint (%E1_type* @E1 to i64)
  %93 = load i64, i64* %PC
  %94 = add i64 %93, 9
  store i64 %94, i64* %PC
  %95 = inttoptr i64 %92 to double*
  %96 = load double, double* %95
  %97 = bitcast i8* %89 to double*
  store double %96, double* %97, align 1, !tbaa !2432
  %98 = getelementptr inbounds i8, i8* %89, i64 8
  %99 = bitcast i8* %98 to double*
  store double 0.000000e+00, double* %99, align 1, !tbaa !2432
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 8
  store i64 %101, i64* %PC
  %102 = load i32, i32* bitcast (%L_type* @L to i32*)
  %103 = sext i32 %102 to i64
  store i64 %103, i64* %RAX, align 8, !tbaa !2428
  %104 = load i64, i64* %RAX
  %105 = mul i64 %104, 8
  %106 = add i64 %105, ptrtoint (%E1_type* @E1 to i64)
  %107 = bitcast %union.vec128_t* %XMM0 to i8*
  %108 = load i64, i64* %PC
  %109 = add i64 %108, 9
  store i64 %109, i64* %PC
  %110 = bitcast i8* %107 to double*
  %111 = load double, double* %110, align 1
  %112 = inttoptr i64 %106 to double*
  store double %111, double* %112
  %113 = load i64, i64* %PC
  %114 = add i64 %113, 1
  store i64 %114, i64* %PC
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %116 = load i64, i64* %115, align 8, !tbaa !2428
  %117 = add i64 %116, 8
  %118 = inttoptr i64 %116 to i64*
  %119 = load i64, i64* %118
  store i64 %119, i64* %RBP, align 8, !tbaa !2428
  store i64 %117, i64* %115, align 8, !tbaa !2428
  %120 = load i64, i64* %PC
  %121 = add i64 %120, 1
  store i64 %121, i64* %PC
  %122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %124 = load i64, i64* %123, align 8, !tbaa !2428
  %125 = inttoptr i64 %124 to i64*
  %126 = load i64, i64* %125
  store i64 %126, i64* %122, align 8, !tbaa !2428
  %127 = add i64 %124, 8
  store i64 %127, i64* %123, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400790__dl_relocate_static_pie(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400790:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400688__init_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400688:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = sub i64 %12, 8
  store i64 %15, i64* %RSP, align 8, !tbaa !2428
  %16 = icmp ult i64 %12, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1, !tbaa !2434
  %19 = trunc i64 %15 to i32
  %20 = and i32 %19, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20) #17
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1, !tbaa !2448
  %26 = xor i64 8, %12
  %27 = xor i64 %26, %15
  %28 = lshr i64 %27, 4
  %29 = trunc i64 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1, !tbaa !2449
  %32 = icmp eq i64 %15, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1, !tbaa !2450
  %35 = lshr i64 %15, 63
  %36 = trunc i64 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1, !tbaa !2451
  %38 = lshr i64 %12, 63
  %39 = xor i64 %35, %38
  %40 = add nuw nsw i64 %39, %38
  %41 = icmp eq i64 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1, !tbaa !2452
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 7
  store i64 %45, i64* %PC
  %46 = load i64, i64* inttoptr (i64 add (i64 ptrtoint (%seg_601ff0__got_type* @seg_601ff0__got to i64), i64 8) to i64*)
  store i64 %46, i64* %RAX, align 8, !tbaa !2428
  %47 = load i64, i64* %RAX
  %48 = load i64, i64* %RAX
  %49 = load i64, i64* %PC
  %50 = add i64 %49, 3
  store i64 %50, i64* %PC
  %51 = and i64 %48, %47
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %52, align 1, !tbaa !2434
  %53 = trunc i64 %51 to i32
  %54 = and i32 %53, 255
  %55 = call i32 @llvm.ctpop.i32(i32 %54) #17
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 1
  %58 = xor i8 %57, 1
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %58, i8* %59, align 1, !tbaa !2448
  %60 = icmp eq i64 %51, 0
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %61, i8* %62, align 1, !tbaa !2450
  %63 = lshr i64 %51, 63
  %64 = trunc i64 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %64, i8* %65, align 1, !tbaa !2451
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %66, align 1, !tbaa !2452
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %67, align 1, !tbaa !2449
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 4
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 2
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 2
  store i64 %73, i64* %PC
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %75 = load i8, i8* %74, align 1, !tbaa !2450
  store i8 %75, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %77 = icmp ne i8 %75, 0
  %78 = select i1 %77, i64 %69, i64 %71
  store i64 %78, i64* %76, align 8, !tbaa !2428
  %79 = load i8, i8* %BRANCH_TAKEN
  %80 = icmp eq i8 %79, 1
  br i1 %80, label %block_40069a, label %block_400698

block_400698:                                     ; preds = %block_400688
  %81 = load i64, i64* %RAX
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 2
  %84 = load i64, i64* %PC
  %85 = add i64 %84, 2
  store i64 %85, i64* %PC
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %87 = load i64, i64* %86, align 8, !tbaa !2428
  %88 = add i64 %87, -8
  %89 = inttoptr i64 %88 to i64*
  store i64 %83, i64* %89
  store i64 %88, i64* %86, align 8, !tbaa !2428
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %81, i64* %90, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %91, %struct.Memory* %2)
  br label %block_40069a

block_40069a:                                     ; preds = %block_400698, %block_400688
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400688 ], [ %92, %block_400698 ]
  %93 = load i64, i64* %RSP
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 4
  store i64 %95, i64* %PC
  %96 = add i64 8, %93
  store i64 %96, i64* %RSP, align 8, !tbaa !2428
  %97 = icmp ult i64 %96, %93
  %98 = icmp ult i64 %96, 8
  %99 = or i1 %97, %98
  %100 = zext i1 %99 to i8
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %100, i8* %101, align 1, !tbaa !2434
  %102 = trunc i64 %96 to i32
  %103 = and i32 %102, 255
  %104 = call i32 @llvm.ctpop.i32(i32 %103) #17
  %105 = trunc i32 %104 to i8
  %106 = and i8 %105, 1
  %107 = xor i8 %106, 1
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %107, i8* %108, align 1, !tbaa !2448
  %109 = xor i64 8, %93
  %110 = xor i64 %109, %96
  %111 = lshr i64 %110, 4
  %112 = trunc i64 %111 to i8
  %113 = and i8 %112, 1
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %113, i8* %114, align 1, !tbaa !2449
  %115 = icmp eq i64 %96, 0
  %116 = zext i1 %115 to i8
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %116, i8* %117, align 1, !tbaa !2450
  %118 = lshr i64 %96, 63
  %119 = trunc i64 %118 to i8
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %119, i8* %120, align 1, !tbaa !2451
  %121 = lshr i64 %93, 63
  %122 = xor i64 %118, %121
  %123 = add nuw nsw i64 %122, %118
  %124 = icmp eq i64 %123, 2
  %125 = zext i1 %124 to i8
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %125, i8* %126, align 1, !tbaa !2452
  %127 = load i64, i64* %PC
  %128 = add i64 %127, 1
  store i64 %128, i64* %PC
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %131 = load i64, i64* %130, align 8, !tbaa !2428
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132
  store i64 %133, i64* %129, align 8, !tbaa !2428
  %134 = add i64 %131, 8
  store i64 %134, i64* %130, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0
}

; Function Attrs: noinline
define %struct.Memory* @sub_4015e0_POUT(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4015e0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %EAX = bitcast %union.anon* %12 to i32*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 1
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RAX = bitcast %union.anon* %15 to i64*
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17 = getelementptr inbounds %struct.GPR, %struct.GPR* %16, i32 0, i32 5
  %18 = getelementptr inbounds %struct.Reg, %struct.Reg* %17, i32 0, i32 0
  %RCX = bitcast %union.anon* %18 to i64*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %RDX = bitcast %union.anon* %21 to i64*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23 = getelementptr inbounds %struct.GPR, %struct.GPR* %22, i32 0, i32 9
  %24 = getelementptr inbounds %struct.Reg, %struct.Reg* %23, i32 0, i32 0
  %RSI = bitcast %union.anon* %24 to i64*
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26 = getelementptr inbounds %struct.GPR, %struct.GPR* %25, i32 0, i32 11
  %27 = getelementptr inbounds %struct.Reg, %struct.Reg* %26, i32 0, i32 0
  %RDI = bitcast %union.anon* %27 to i64*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29 = getelementptr inbounds %struct.GPR, %struct.GPR* %28, i32 0, i32 13
  %30 = getelementptr inbounds %struct.Reg, %struct.Reg* %29, i32 0, i32 0
  %RSP = bitcast %union.anon* %30 to i64*
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 15
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %RBP = bitcast %union.anon* %33 to i64*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %35 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %34, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %35 to %"class.std::bitset"*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %37 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %36, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %37 to %"class.std::bitset"*
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %39 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %38, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %39 to %"class.std::bitset"*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %41 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %40, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %41 to %"class.std::bitset"*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %43 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %42, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %43 to %union.vec128_t*
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %45 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %44, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %45 to %union.vec128_t*
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %47 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %46, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %47 to %union.vec128_t*
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %49 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %48, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %49 to %union.vec128_t*
  %50 = load i64, i64* %RBP
  %51 = load i64, i64* %PC
  %52 = add i64 %51, 1
  store i64 %52, i64* %PC
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %54 = load i64, i64* %53, align 8, !tbaa !2428
  %55 = add i64 %54, -8
  %56 = inttoptr i64 %55 to i64*
  store i64 %50, i64* %56
  store i64 %55, i64* %53, align 8, !tbaa !2428
  %57 = load i64, i64* %RSP
  %58 = load i64, i64* %PC
  %59 = add i64 %58, 3
  store i64 %59, i64* %PC
  store i64 %57, i64* %RBP, align 8, !tbaa !2428
  %60 = load i64, i64* %RSP
  %61 = load i64, i64* %PC
  %62 = add i64 %61, 4
  store i64 %62, i64* %PC
  %63 = sub i64 %60, 64
  store i64 %63, i64* %RSP, align 8, !tbaa !2428
  %64 = icmp ult i64 %60, 64
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %65, i8* %66, align 1, !tbaa !2434
  %67 = trunc i64 %63 to i32
  %68 = and i32 %67, 255
  %69 = call i32 @llvm.ctpop.i32(i32 %68) #17
  %70 = trunc i32 %69 to i8
  %71 = and i8 %70, 1
  %72 = xor i8 %71, 1
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %72, i8* %73, align 1, !tbaa !2448
  %74 = xor i64 64, %60
  %75 = xor i64 %74, %63
  %76 = lshr i64 %75, 4
  %77 = trunc i64 %76 to i8
  %78 = and i8 %77, 1
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %78, i8* %79, align 1, !tbaa !2449
  %80 = icmp eq i64 %63, 0
  %81 = zext i1 %80 to i8
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %81, i8* %82, align 1, !tbaa !2450
  %83 = lshr i64 %63, 63
  %84 = trunc i64 %83 to i8
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %84, i8* %85, align 1, !tbaa !2451
  %86 = lshr i64 %60, 63
  %87 = xor i64 %83, %86
  %88 = add nuw nsw i64 %87, %86
  %89 = icmp eq i64 %88, 2
  %90 = zext i1 %89 to i8
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %90, i8* %91, align 1, !tbaa !2452
  %92 = load i64, i64* %PC
  %93 = add i64 %92, 10
  store i64 %93, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 103), i64* %RAX, align 8, !tbaa !2428
  %94 = load i64, i64* %RBP
  %95 = sub i64 %94, 8
  %96 = load i64, i64* %RDI
  %97 = load i64, i64* %PC
  %98 = add i64 %97, 4
  store i64 %98, i64* %PC
  %99 = inttoptr i64 %95 to i64*
  store i64 %96, i64* %99
  %100 = load i64, i64* %RBP
  %101 = sub i64 %100, 16
  %102 = load i64, i64* %RSI
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 4
  store i64 %104, i64* %PC
  %105 = inttoptr i64 %101 to i64*
  store i64 %102, i64* %105
  %106 = load i64, i64* %RBP
  %107 = sub i64 %106, 24
  %108 = load i64, i64* %RDX
  %109 = load i64, i64* %PC
  %110 = add i64 %109, 4
  store i64 %110, i64* %PC
  %111 = inttoptr i64 %107 to i64*
  store i64 %108, i64* %111
  %112 = load i64, i64* %RBP
  %113 = sub i64 %112, 32
  %114 = bitcast %union.vec128_t* %XMM0 to i8*
  %115 = load i64, i64* %PC
  %116 = add i64 %115, 5
  store i64 %116, i64* %PC
  %117 = bitcast i8* %114 to double*
  %118 = load double, double* %117, align 1
  %119 = inttoptr i64 %113 to double*
  store double %118, double* %119
  %120 = load i64, i64* %RBP
  %121 = sub i64 %120, 40
  %122 = bitcast %union.vec128_t* %XMM1 to i8*
  %123 = load i64, i64* %PC
  %124 = add i64 %123, 5
  store i64 %124, i64* %PC
  %125 = bitcast i8* %122 to double*
  %126 = load double, double* %125, align 1
  %127 = inttoptr i64 %121 to double*
  store double %126, double* %127
  %128 = load i64, i64* %RBP
  %129 = sub i64 %128, 48
  %130 = bitcast %union.vec128_t* %XMM2 to i8*
  %131 = load i64, i64* %PC
  %132 = add i64 %131, 5
  store i64 %132, i64* %PC
  %133 = bitcast i8* %130 to double*
  %134 = load double, double* %133, align 1
  %135 = inttoptr i64 %129 to double*
  store double %134, double* %135
  %136 = load i64, i64* %RBP
  %137 = sub i64 %136, 56
  %138 = bitcast %union.vec128_t* %XMM3 to i8*
  %139 = load i64, i64* %PC
  %140 = add i64 %139, 5
  store i64 %140, i64* %PC
  %141 = bitcast i8* %138 to double*
  %142 = load double, double* %141, align 1
  %143 = inttoptr i64 %137 to double*
  store double %142, double* %143
  %144 = load i64, i64* %RBP
  %145 = sub i64 %144, 8
  %146 = load i64, i64* %PC
  %147 = add i64 %146, 4
  store i64 %147, i64* %PC
  %148 = inttoptr i64 %145 to i64*
  %149 = load i64, i64* %148
  store i64 %149, i64* %RSI, align 8, !tbaa !2428
  %150 = load i64, i64* %RBP
  %151 = sub i64 %150, 16
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 4
  store i64 %153, i64* %PC
  %154 = inttoptr i64 %151 to i64*
  %155 = load i64, i64* %154
  store i64 %155, i64* %RDX, align 8, !tbaa !2428
  %156 = load i64, i64* %RBP
  %157 = sub i64 %156, 24
  %158 = load i64, i64* %PC
  %159 = add i64 %158, 4
  store i64 %159, i64* %PC
  %160 = inttoptr i64 %157 to i64*
  %161 = load i64, i64* %160
  store i64 %161, i64* %RCX, align 8, !tbaa !2428
  %162 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %163 = load i64, i64* %RBP
  %164 = sub i64 %163, 32
  %165 = load i64, i64* %PC
  %166 = add i64 %165, 5
  store i64 %166, i64* %PC
  %167 = inttoptr i64 %164 to double*
  %168 = load double, double* %167
  %169 = bitcast i8* %162 to double*
  store double %168, double* %169, align 1, !tbaa !2432
  %170 = getelementptr inbounds i8, i8* %162, i64 8
  %171 = bitcast i8* %170 to double*
  store double 0.000000e+00, double* %171, align 1, !tbaa !2432
  %172 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %173 = load i64, i64* %RBP
  %174 = sub i64 %173, 40
  %175 = load i64, i64* %PC
  %176 = add i64 %175, 5
  store i64 %176, i64* %PC
  %177 = inttoptr i64 %174 to double*
  %178 = load double, double* %177
  %179 = bitcast i8* %172 to double*
  store double %178, double* %179, align 1, !tbaa !2432
  %180 = getelementptr inbounds i8, i8* %172, i64 8
  %181 = bitcast i8* %180 to double*
  store double 0.000000e+00, double* %181, align 1, !tbaa !2432
  %182 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %183 = load i64, i64* %RBP
  %184 = sub i64 %183, 48
  %185 = load i64, i64* %PC
  %186 = add i64 %185, 5
  store i64 %186, i64* %PC
  %187 = inttoptr i64 %184 to double*
  %188 = load double, double* %187
  %189 = bitcast i8* %182 to double*
  store double %188, double* %189, align 1, !tbaa !2432
  %190 = getelementptr inbounds i8, i8* %182, i64 8
  %191 = bitcast i8* %190 to double*
  store double 0.000000e+00, double* %191, align 1, !tbaa !2432
  %192 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %193 = load i64, i64* %RBP
  %194 = sub i64 %193, 56
  %195 = load i64, i64* %PC
  %196 = add i64 %195, 5
  store i64 %196, i64* %PC
  %197 = inttoptr i64 %194 to double*
  %198 = load double, double* %197
  %199 = bitcast i8* %192 to double*
  store double %198, double* %199, align 1, !tbaa !2432
  %200 = getelementptr inbounds i8, i8* %192, i64 8
  %201 = bitcast i8* %200 to double*
  store double 0.000000e+00, double* %201, align 1, !tbaa !2432
  %202 = load i64, i64* %RAX
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 3
  store i64 %204, i64* %PC
  store i64 %202, i64* %RDI, align 8, !tbaa !2428
  %205 = load i64, i64* %PC
  %206 = add i64 %205, 2
  store i64 %206, i64* %PC
  store i8 4, i8* %AL, align 1, !tbaa !2453
  %207 = load i64, i64* %PC
  %208 = sub i64 %207, 3927
  %209 = load i64, i64* %PC
  %210 = add i64 %209, 5
  %211 = load i64, i64* %PC
  %212 = add i64 %211, 5
  store i64 %212, i64* %PC
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %214 = load i64, i64* %213, align 8, !tbaa !2428
  %215 = add i64 %214, -8
  %216 = inttoptr i64 %215 to i64*
  store i64 %210, i64* %216
  store i64 %215, i64* %213, align 8, !tbaa !2428
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %208, i64* %217, align 8, !tbaa !2428
  %218 = load i64, i64* %PC
  %219 = call %struct.Memory* @ext_4006e0_printf(%struct.State* %0, i64 %218, %struct.Memory* %2)
  %220 = load i64, i64* %RBP
  %221 = sub i64 %220, 60
  %222 = load i32, i32* %EAX
  %223 = zext i32 %222 to i64
  %224 = load i64, i64* %PC
  %225 = add i64 %224, 3
  store i64 %225, i64* %PC
  %226 = inttoptr i64 %221 to i32*
  store i32 %222, i32* %226
  %227 = load i64, i64* %RSP
  %228 = load i64, i64* %PC
  %229 = add i64 %228, 4
  store i64 %229, i64* %PC
  %230 = add i64 64, %227
  store i64 %230, i64* %RSP, align 8, !tbaa !2428
  %231 = icmp ult i64 %230, %227
  %232 = icmp ult i64 %230, 64
  %233 = or i1 %231, %232
  %234 = zext i1 %233 to i8
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %234, i8* %235, align 1, !tbaa !2434
  %236 = trunc i64 %230 to i32
  %237 = and i32 %236, 255
  %238 = call i32 @llvm.ctpop.i32(i32 %237) #17
  %239 = trunc i32 %238 to i8
  %240 = and i8 %239, 1
  %241 = xor i8 %240, 1
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %241, i8* %242, align 1, !tbaa !2448
  %243 = xor i64 64, %227
  %244 = xor i64 %243, %230
  %245 = lshr i64 %244, 4
  %246 = trunc i64 %245 to i8
  %247 = and i8 %246, 1
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %247, i8* %248, align 1, !tbaa !2449
  %249 = icmp eq i64 %230, 0
  %250 = zext i1 %249 to i8
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %250, i8* %251, align 1, !tbaa !2450
  %252 = lshr i64 %230, 63
  %253 = trunc i64 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %253, i8* %254, align 1, !tbaa !2451
  %255 = lshr i64 %227, 63
  %256 = xor i64 %252, %255
  %257 = add nuw nsw i64 %256, %252
  %258 = icmp eq i64 %257, 2
  %259 = zext i1 %258 to i8
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %259, i8* %260, align 1, !tbaa !2452
  %261 = load i64, i64* %PC
  %262 = add i64 %261, 1
  store i64 %262, i64* %PC
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %264 = load i64, i64* %263, align 8, !tbaa !2428
  %265 = add i64 %264, 8
  %266 = inttoptr i64 %264 to i64*
  %267 = load i64, i64* %266
  store i64 %267, i64* %RBP, align 8, !tbaa !2428
  store i64 %265, i64* %263, align 8, !tbaa !2428
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 1
  store i64 %269, i64* %PC
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %272 = load i64, i64* %271, align 8, !tbaa !2428
  %273 = inttoptr i64 %272 to i64*
  %274 = load i64, i64* %273
  store i64 %274, i64* %270, align 8, !tbaa !2428
  %275 = add i64 %272, 8
  store i64 %275, i64* %271, align 8, !tbaa !2428
  ret %struct.Memory* %219
}

; Function Attrs: noinline
define %struct.Memory* @sub_400810___do_global_dtors_aux(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400810:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  %14 = load i8, i8* inttoptr (i64 add (i64 ptrtoint (%seg_602080__bss_type* @seg_602080__bss to i64), i64 8) to i8*)
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1, !tbaa !2434
  %16 = zext i8 %14 to i32
  %17 = call i32 @llvm.ctpop.i32(i32 %16) #17
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1, !tbaa !2448
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1, !tbaa !2449
  %23 = icmp eq i8 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1, !tbaa !2450
  %26 = lshr i8 %14, 7
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1, !tbaa !2451
  %28 = lshr i8 %14, 7
  %29 = xor i8 %26, %28
  %30 = add nuw nsw i8 %29, %28
  %31 = icmp eq i8 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1, !tbaa !2452
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 25
  %36 = load i64, i64* %PC
  %37 = add i64 %36, 2
  %38 = load i64, i64* %PC
  %39 = add i64 %38, 2
  store i64 %39, i64* %PC
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %41 = load i8, i8* %40, align 1, !tbaa !2450
  %42 = icmp eq i8 %41, 0
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %45 = select i1 %42, i64 %35, i64 %37
  store i64 %45, i64* %44, align 8, !tbaa !2428
  %46 = load i8, i8* %BRANCH_TAKEN
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %block_400830, label %block_400819

block_400830:                                     ; preds = %block_400810
  %48 = load i64, i64* %PC
  %49 = add i64 %48, 2
  store i64 %49, i64* %PC
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8, !tbaa !2428
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53
  store i64 %54, i64* %50, align 8, !tbaa !2428
  %55 = add i64 %52, 8
  store i64 %55, i64* %51, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400819:                                     ; preds = %block_400810
  %56 = load i64, i64* %RBP
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 1
  store i64 %58, i64* %PC
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %60 = load i64, i64* %59, align 8, !tbaa !2428
  %61 = add i64 %60, -8
  %62 = inttoptr i64 %61 to i64*
  store i64 %56, i64* %62
  store i64 %61, i64* %59, align 8, !tbaa !2428
  %63 = load i64, i64* %RSP
  %64 = load i64, i64* %PC
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC
  store i64 %63, i64* %RBP, align 8, !tbaa !2428
  %66 = load i64, i64* %PC
  %67 = sub i64 %66, 125
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 5
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 5
  store i64 %71, i64* %PC
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %73 = load i64, i64* %72, align 8, !tbaa !2428
  %74 = add i64 %73, -8
  %75 = inttoptr i64 %74 to i64*
  store i64 %69, i64* %75
  store i64 %74, i64* %72, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %67, i64* %76, align 8, !tbaa !2428
  %77 = load i64, i64* %PC
  %78 = call %struct.Memory* @sub_4007a0_deregister_tm_clones(%struct.State* %0, i64 %77, %struct.Memory* %2)
  %79 = load i64, i64* %PC
  %80 = add i64 %79, 7
  store i64 %80, i64* %PC
  store i8 1, i8* inttoptr (i64 add (i64 ptrtoint (%seg_602080__bss_type* @seg_602080__bss to i64), i64 8) to i8*)
  %81 = load i64, i64* %PC
  %82 = add i64 %81, 1
  store i64 %82, i64* %PC
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %84 = load i64, i64* %83, align 8, !tbaa !2428
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %84 to i64*
  %87 = load i64, i64* %86
  store i64 %87, i64* %RBP, align 8, !tbaa !2428
  store i64 %85, i64* %83, align 8, !tbaa !2428
  %88 = load i64, i64* %PC
  %89 = add i64 %88, 1
  store i64 %89, i64* %PC
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %92 = load i64, i64* %91, align 8, !tbaa !2428
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93
  store i64 %94, i64* %90, align 8, !tbaa !2428
  %95 = add i64 %92, 8
  store i64 %95, i64* %91, align 8, !tbaa !2428
  ret %struct.Memory* %78
}

; Function Attrs: noinline
define %struct.Memory* @sub_401650_PA(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401650:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 7
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 11
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RDI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 13
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RSP = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 15
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RBP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %28 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %27, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %28 to %"class.std::bitset"*
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %30 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %29, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %30 to %union.vec128_t*
  %31 = load i64, i64* %RBP
  %32 = load i64, i64* %PC
  %33 = add i64 %32, 1
  store i64 %33, i64* %PC
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %35 = load i64, i64* %34, align 8, !tbaa !2428
  %36 = add i64 %35, -8
  %37 = inttoptr i64 %36 to i64*
  store i64 %31, i64* %37
  store i64 %36, i64* %34, align 8, !tbaa !2428
  %38 = load i64, i64* %RSP
  %39 = load i64, i64* %PC
  %40 = add i64 %39, 3
  store i64 %40, i64* %PC
  store i64 %38, i64* %RBP, align 8, !tbaa !2428
  %41 = load i64, i64* %RBP
  %42 = sub i64 %41, 8
  %43 = load i64, i64* %RDI
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 4
  store i64 %45, i64* %PC
  %46 = inttoptr i64 %42 to i64*
  store i64 %43, i64* %46
  %47 = load i64, i64* %PC
  %48 = add i64 %47, 11
  store i64 %48, i64* %PC
  store i32 0, i32* bitcast (%J_type* @J to i32*)
  br label %block_401663

block_401776:                                     ; preds = %block_401663
  %49 = add i64 %644, 1
  store i64 %49, i64* %PC
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %51 = load i64, i64* %50, align 8, !tbaa !2428
  %52 = add i64 %51, 8
  %53 = inttoptr i64 %51 to i64*
  %54 = load i64, i64* %53
  store i64 %54, i64* %RBP, align 8, !tbaa !2428
  store i64 %52, i64* %50, align 8, !tbaa !2428
  %55 = load i64, i64* %PC
  %56 = add i64 %55, 1
  store i64 %56, i64* %PC
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %59 = load i64, i64* %58, align 8, !tbaa !2428
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60
  store i64 %61, i64* %57, align 8, !tbaa !2428
  %62 = add i64 %59, 8
  store i64 %62, i64* %58, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_401663:                                     ; preds = %block_401771, %block_401650
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_401650 ], [ %MEMORY.0, %block_401771 ]
  %63 = load i64, i64* %PC
  %64 = add i64 %63, 10
  store i64 %64, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %65 = load i64, i64* %RBP
  %66 = sub i64 %65, 8
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 4
  store i64 %68, i64* %PC
  %69 = inttoptr i64 %66 to i64*
  %70 = load i64, i64* %69
  store i64 %70, i64* %RCX, align 8, !tbaa !2428
  %71 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %72 = load i64, i64* %RCX
  %73 = add i64 %72, 8
  %74 = load i64, i64* %PC
  %75 = add i64 %74, 5
  store i64 %75, i64* %PC
  %76 = inttoptr i64 %73 to double*
  %77 = load double, double* %76
  %78 = bitcast i8* %71 to double*
  store double %77, double* %78, align 1, !tbaa !2432
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to double*
  store double 0.000000e+00, double* %80, align 1, !tbaa !2432
  %81 = load i64, i64* %RBP
  %82 = sub i64 %81, 8
  %83 = load i64, i64* %PC
  %84 = add i64 %83, 4
  store i64 %84, i64* %PC
  %85 = inttoptr i64 %82 to i64*
  %86 = load i64, i64* %85
  store i64 %86, i64* %RCX, align 8, !tbaa !2428
  %87 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %88 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %89 = load i64, i64* %RCX
  %90 = add i64 %89, 16
  %91 = load i64, i64* %PC
  %92 = add i64 %91, 5
  store i64 %92, i64* %PC
  %93 = bitcast i8* %88 to double*
  %94 = load double, double* %93, align 1
  %95 = getelementptr inbounds i8, i8* %88, i64 8
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 1
  %98 = inttoptr i64 %90 to double*
  %99 = load double, double* %98
  %100 = fadd double %94, %99
  %101 = bitcast i8* %87 to double*
  store double %100, double* %101, align 1, !tbaa !2432
  %102 = getelementptr inbounds i8, i8* %87, i64 8
  %103 = bitcast i8* %102 to i64*
  store i64 %97, i64* %103, align 1, !tbaa !2432
  %104 = load i64, i64* %RBP
  %105 = sub i64 %104, 8
  %106 = load i64, i64* %PC
  %107 = add i64 %106, 4
  store i64 %107, i64* %PC
  %108 = inttoptr i64 %105 to i64*
  %109 = load i64, i64* %108
  store i64 %109, i64* %RCX, align 8, !tbaa !2428
  %110 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %111 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %112 = load i64, i64* %RCX
  %113 = add i64 %112, 24
  %114 = load i64, i64* %PC
  %115 = add i64 %114, 5
  store i64 %115, i64* %PC
  %116 = bitcast i8* %111 to double*
  %117 = load double, double* %116, align 1
  %118 = getelementptr inbounds i8, i8* %111, i64 8
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = inttoptr i64 %113 to double*
  %122 = load double, double* %121
  %123 = fadd double %117, %122
  %124 = bitcast i8* %110 to double*
  store double %123, double* %124, align 1, !tbaa !2432
  %125 = getelementptr inbounds i8, i8* %110, i64 8
  %126 = bitcast i8* %125 to i64*
  store i64 %120, i64* %126, align 1, !tbaa !2432
  %127 = load i64, i64* %RBP
  %128 = sub i64 %127, 8
  %129 = load i64, i64* %PC
  %130 = add i64 %129, 4
  store i64 %130, i64* %PC
  %131 = inttoptr i64 %128 to i64*
  %132 = load i64, i64* %131
  store i64 %132, i64* %RCX, align 8, !tbaa !2428
  %133 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %134 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %135 = load i64, i64* %RCX
  %136 = add i64 %135, 32
  %137 = load i64, i64* %PC
  %138 = add i64 %137, 5
  store i64 %138, i64* %PC
  %139 = bitcast i8* %134 to double*
  %140 = load double, double* %139, align 1
  %141 = getelementptr inbounds i8, i8* %134, i64 8
  %142 = bitcast i8* %141 to i64*
  %143 = load i64, i64* %142, align 1
  %144 = inttoptr i64 %136 to double*
  %145 = load double, double* %144
  %146 = fsub double %140, %145
  %147 = bitcast i8* %133 to double*
  store double %146, double* %147, align 1, !tbaa !2432
  %148 = getelementptr inbounds i8, i8* %133, i64 8
  %149 = bitcast i8* %148 to i64*
  store i64 %143, i64* %149, align 1, !tbaa !2432
  %150 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %151 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 9
  store i64 %153, i64* %PC
  %154 = bitcast i8* %151 to double*
  %155 = load double, double* %154, align 1
  %156 = getelementptr inbounds i8, i8* %151, i64 8
  %157 = bitcast i8* %156 to i64*
  %158 = load i64, i64* %157, align 1
  %159 = load double, double* bitcast (%T_type* @T to double*)
  %160 = fmul double %155, %159
  %161 = bitcast i8* %150 to double*
  store double %160, double* %161, align 1, !tbaa !2432
  %162 = getelementptr inbounds i8, i8* %150, i64 8
  %163 = bitcast i8* %162 to i64*
  store i64 %158, i64* %163, align 1, !tbaa !2432
  %164 = load i64, i64* %RBP
  %165 = sub i64 %164, 8
  %166 = load i64, i64* %PC
  %167 = add i64 %166, 4
  store i64 %167, i64* %PC
  %168 = inttoptr i64 %165 to i64*
  %169 = load i64, i64* %168
  store i64 %169, i64* %RCX, align 8, !tbaa !2428
  %170 = load i64, i64* %RCX
  %171 = add i64 %170, 8
  %172 = bitcast %union.vec128_t* %XMM0 to i8*
  %173 = load i64, i64* %PC
  %174 = add i64 %173, 5
  store i64 %174, i64* %PC
  %175 = bitcast i8* %172 to double*
  %176 = load double, double* %175, align 1
  %177 = inttoptr i64 %171 to double*
  store double %176, double* %177
  %178 = load i64, i64* %RBP
  %179 = sub i64 %178, 8
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 4
  store i64 %181, i64* %PC
  %182 = inttoptr i64 %179 to i64*
  %183 = load i64, i64* %182
  store i64 %183, i64* %RCX, align 8, !tbaa !2428
  %184 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %185 = load i64, i64* %RCX
  %186 = add i64 %185, 8
  %187 = load i64, i64* %PC
  %188 = add i64 %187, 5
  store i64 %188, i64* %PC
  %189 = inttoptr i64 %186 to double*
  %190 = load double, double* %189
  %191 = bitcast i8* %184 to double*
  store double %190, double* %191, align 1, !tbaa !2432
  %192 = getelementptr inbounds i8, i8* %184, i64 8
  %193 = bitcast i8* %192 to double*
  store double 0.000000e+00, double* %193, align 1, !tbaa !2432
  %194 = load i64, i64* %RBP
  %195 = sub i64 %194, 8
  %196 = load i64, i64* %PC
  %197 = add i64 %196, 4
  store i64 %197, i64* %PC
  %198 = inttoptr i64 %195 to i64*
  %199 = load i64, i64* %198
  store i64 %199, i64* %RCX, align 8, !tbaa !2428
  %200 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %201 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %202 = load i64, i64* %RCX
  %203 = add i64 %202, 16
  %204 = load i64, i64* %PC
  %205 = add i64 %204, 5
  store i64 %205, i64* %PC
  %206 = bitcast i8* %201 to double*
  %207 = load double, double* %206, align 1
  %208 = getelementptr inbounds i8, i8* %201, i64 8
  %209 = bitcast i8* %208 to i64*
  %210 = load i64, i64* %209, align 1
  %211 = inttoptr i64 %203 to double*
  %212 = load double, double* %211
  %213 = fadd double %207, %212
  %214 = bitcast i8* %200 to double*
  store double %213, double* %214, align 1, !tbaa !2432
  %215 = getelementptr inbounds i8, i8* %200, i64 8
  %216 = bitcast i8* %215 to i64*
  store i64 %210, i64* %216, align 1, !tbaa !2432
  %217 = load i64, i64* %RBP
  %218 = sub i64 %217, 8
  %219 = load i64, i64* %PC
  %220 = add i64 %219, 4
  store i64 %220, i64* %PC
  %221 = inttoptr i64 %218 to i64*
  %222 = load i64, i64* %221
  store i64 %222, i64* %RCX, align 8, !tbaa !2428
  %223 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %224 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %225 = load i64, i64* %RCX
  %226 = add i64 %225, 24
  %227 = load i64, i64* %PC
  %228 = add i64 %227, 5
  store i64 %228, i64* %PC
  %229 = bitcast i8* %224 to double*
  %230 = load double, double* %229, align 1
  %231 = getelementptr inbounds i8, i8* %224, i64 8
  %232 = bitcast i8* %231 to i64*
  %233 = load i64, i64* %232, align 1
  %234 = inttoptr i64 %226 to double*
  %235 = load double, double* %234
  %236 = fsub double %230, %235
  %237 = bitcast i8* %223 to double*
  store double %236, double* %237, align 1, !tbaa !2432
  %238 = getelementptr inbounds i8, i8* %223, i64 8
  %239 = bitcast i8* %238 to i64*
  store i64 %233, i64* %239, align 1, !tbaa !2432
  %240 = load i64, i64* %RBP
  %241 = sub i64 %240, 8
  %242 = load i64, i64* %PC
  %243 = add i64 %242, 4
  store i64 %243, i64* %PC
  %244 = inttoptr i64 %241 to i64*
  %245 = load i64, i64* %244
  store i64 %245, i64* %RCX, align 8, !tbaa !2428
  %246 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %247 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %248 = load i64, i64* %RCX
  %249 = add i64 %248, 32
  %250 = load i64, i64* %PC
  %251 = add i64 %250, 5
  store i64 %251, i64* %PC
  %252 = bitcast i8* %247 to double*
  %253 = load double, double* %252, align 1
  %254 = getelementptr inbounds i8, i8* %247, i64 8
  %255 = bitcast i8* %254 to i64*
  %256 = load i64, i64* %255, align 1
  %257 = inttoptr i64 %249 to double*
  %258 = load double, double* %257
  %259 = fadd double %253, %258
  %260 = bitcast i8* %246 to double*
  store double %259, double* %260, align 1, !tbaa !2432
  %261 = getelementptr inbounds i8, i8* %246, i64 8
  %262 = bitcast i8* %261 to i64*
  store i64 %256, i64* %262, align 1, !tbaa !2432
  %263 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %264 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %265 = load i64, i64* %PC
  %266 = add i64 %265, 9
  store i64 %266, i64* %PC
  %267 = bitcast i8* %264 to double*
  %268 = load double, double* %267, align 1
  %269 = getelementptr inbounds i8, i8* %264, i64 8
  %270 = bitcast i8* %269 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = load double, double* bitcast (%T_type* @T to double*)
  %273 = fmul double %268, %272
  %274 = bitcast i8* %263 to double*
  store double %273, double* %274, align 1, !tbaa !2432
  %275 = getelementptr inbounds i8, i8* %263, i64 8
  %276 = bitcast i8* %275 to i64*
  store i64 %271, i64* %276, align 1, !tbaa !2432
  %277 = load i64, i64* %RBP
  %278 = sub i64 %277, 8
  %279 = load i64, i64* %PC
  %280 = add i64 %279, 4
  store i64 %280, i64* %PC
  %281 = inttoptr i64 %278 to i64*
  %282 = load i64, i64* %281
  store i64 %282, i64* %RCX, align 8, !tbaa !2428
  %283 = load i64, i64* %RCX
  %284 = add i64 %283, 16
  %285 = bitcast %union.vec128_t* %XMM0 to i8*
  %286 = load i64, i64* %PC
  %287 = add i64 %286, 5
  store i64 %287, i64* %PC
  %288 = bitcast i8* %285 to double*
  %289 = load double, double* %288, align 1
  %290 = inttoptr i64 %284 to double*
  store double %289, double* %290
  %291 = load i64, i64* %RBP
  %292 = sub i64 %291, 8
  %293 = load i64, i64* %PC
  %294 = add i64 %293, 4
  store i64 %294, i64* %PC
  %295 = inttoptr i64 %292 to i64*
  %296 = load i64, i64* %295
  store i64 %296, i64* %RCX, align 8, !tbaa !2428
  %297 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %298 = load i64, i64* %RCX
  %299 = add i64 %298, 8
  %300 = load i64, i64* %PC
  %301 = add i64 %300, 5
  store i64 %301, i64* %PC
  %302 = inttoptr i64 %299 to double*
  %303 = load double, double* %302
  %304 = bitcast i8* %297 to double*
  store double %303, double* %304, align 1, !tbaa !2432
  %305 = getelementptr inbounds i8, i8* %297, i64 8
  %306 = bitcast i8* %305 to double*
  store double 0.000000e+00, double* %306, align 1, !tbaa !2432
  %307 = load i64, i64* %RBP
  %308 = sub i64 %307, 8
  %309 = load i64, i64* %PC
  %310 = add i64 %309, 4
  store i64 %310, i64* %PC
  %311 = inttoptr i64 %308 to i64*
  %312 = load i64, i64* %311
  store i64 %312, i64* %RCX, align 8, !tbaa !2428
  %313 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %314 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %315 = load i64, i64* %RCX
  %316 = add i64 %315, 16
  %317 = load i64, i64* %PC
  %318 = add i64 %317, 5
  store i64 %318, i64* %PC
  %319 = bitcast i8* %314 to double*
  %320 = load double, double* %319, align 1
  %321 = getelementptr inbounds i8, i8* %314, i64 8
  %322 = bitcast i8* %321 to i64*
  %323 = load i64, i64* %322, align 1
  %324 = inttoptr i64 %316 to double*
  %325 = load double, double* %324
  %326 = fsub double %320, %325
  %327 = bitcast i8* %313 to double*
  store double %326, double* %327, align 1, !tbaa !2432
  %328 = getelementptr inbounds i8, i8* %313, i64 8
  %329 = bitcast i8* %328 to i64*
  store i64 %323, i64* %329, align 1, !tbaa !2432
  %330 = load i64, i64* %RBP
  %331 = sub i64 %330, 8
  %332 = load i64, i64* %PC
  %333 = add i64 %332, 4
  store i64 %333, i64* %PC
  %334 = inttoptr i64 %331 to i64*
  %335 = load i64, i64* %334
  store i64 %335, i64* %RCX, align 8, !tbaa !2428
  %336 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %337 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %338 = load i64, i64* %RCX
  %339 = add i64 %338, 24
  %340 = load i64, i64* %PC
  %341 = add i64 %340, 5
  store i64 %341, i64* %PC
  %342 = bitcast i8* %337 to double*
  %343 = load double, double* %342, align 1
  %344 = getelementptr inbounds i8, i8* %337, i64 8
  %345 = bitcast i8* %344 to i64*
  %346 = load i64, i64* %345, align 1
  %347 = inttoptr i64 %339 to double*
  %348 = load double, double* %347
  %349 = fadd double %343, %348
  %350 = bitcast i8* %336 to double*
  store double %349, double* %350, align 1, !tbaa !2432
  %351 = getelementptr inbounds i8, i8* %336, i64 8
  %352 = bitcast i8* %351 to i64*
  store i64 %346, i64* %352, align 1, !tbaa !2432
  %353 = load i64, i64* %RBP
  %354 = sub i64 %353, 8
  %355 = load i64, i64* %PC
  %356 = add i64 %355, 4
  store i64 %356, i64* %PC
  %357 = inttoptr i64 %354 to i64*
  %358 = load i64, i64* %357
  store i64 %358, i64* %RCX, align 8, !tbaa !2428
  %359 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %360 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %361 = load i64, i64* %RCX
  %362 = add i64 %361, 32
  %363 = load i64, i64* %PC
  %364 = add i64 %363, 5
  store i64 %364, i64* %PC
  %365 = bitcast i8* %360 to double*
  %366 = load double, double* %365, align 1
  %367 = getelementptr inbounds i8, i8* %360, i64 8
  %368 = bitcast i8* %367 to i64*
  %369 = load i64, i64* %368, align 1
  %370 = inttoptr i64 %362 to double*
  %371 = load double, double* %370
  %372 = fadd double %366, %371
  %373 = bitcast i8* %359 to double*
  store double %372, double* %373, align 1, !tbaa !2432
  %374 = getelementptr inbounds i8, i8* %359, i64 8
  %375 = bitcast i8* %374 to i64*
  store i64 %369, i64* %375, align 1, !tbaa !2432
  %376 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %377 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %378 = load i64, i64* %PC
  %379 = add i64 %378, 9
  store i64 %379, i64* %PC
  %380 = bitcast i8* %377 to double*
  %381 = load double, double* %380, align 1
  %382 = getelementptr inbounds i8, i8* %377, i64 8
  %383 = bitcast i8* %382 to i64*
  %384 = load i64, i64* %383, align 1
  %385 = load double, double* bitcast (%T_type* @T to double*)
  %386 = fmul double %381, %385
  %387 = bitcast i8* %376 to double*
  store double %386, double* %387, align 1, !tbaa !2432
  %388 = getelementptr inbounds i8, i8* %376, i64 8
  %389 = bitcast i8* %388 to i64*
  store i64 %384, i64* %389, align 1, !tbaa !2432
  %390 = load i64, i64* %RBP
  %391 = sub i64 %390, 8
  %392 = load i64, i64* %PC
  %393 = add i64 %392, 4
  store i64 %393, i64* %PC
  %394 = inttoptr i64 %391 to i64*
  %395 = load i64, i64* %394
  store i64 %395, i64* %RCX, align 8, !tbaa !2428
  %396 = load i64, i64* %RCX
  %397 = add i64 %396, 24
  %398 = bitcast %union.vec128_t* %XMM0 to i8*
  %399 = load i64, i64* %PC
  %400 = add i64 %399, 5
  store i64 %400, i64* %PC
  %401 = bitcast i8* %398 to double*
  %402 = load double, double* %401, align 1
  %403 = inttoptr i64 %397 to double*
  store double %402, double* %403
  %404 = load i64, i64* %RBP
  %405 = sub i64 %404, 8
  %406 = load i64, i64* %PC
  %407 = add i64 %406, 4
  store i64 %407, i64* %PC
  %408 = inttoptr i64 %405 to i64*
  %409 = load i64, i64* %408
  store i64 %409, i64* %RCX, align 8, !tbaa !2428
  %410 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %411 = load i64, i64* %RCX
  %412 = add i64 %411, 8
  %413 = load i64, i64* %PC
  %414 = add i64 %413, 5
  store i64 %414, i64* %PC
  %415 = inttoptr i64 %412 to double*
  %416 = load double, double* %415
  %417 = bitcast i8* %410 to double*
  store double %416, double* %417, align 1, !tbaa !2432
  %418 = getelementptr inbounds i8, i8* %410, i64 8
  %419 = bitcast i8* %418 to double*
  store double 0.000000e+00, double* %419, align 1, !tbaa !2432
  %420 = bitcast %union.vec128_t* %XMM0 to i8*
  %421 = load i64, i64* %PC
  %422 = add i64 %421, 5
  store i64 %422, i64* %PC
  %423 = bitcast i8* %420 to i64*
  %424 = load i64, i64* %423, align 1
  store i64 %424, i64* %RCX, align 1, !tbaa !2428
  %425 = load i64, i64* %RCX
  %426 = load i64, i64* %RAX
  %427 = load i64, i64* %PC
  %428 = add i64 %427, 3
  store i64 %428, i64* %PC
  %429 = xor i64 %426, %425
  store i64 %429, i64* %RCX, align 8, !tbaa !2428
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %430, align 1, !tbaa !2434
  %431 = trunc i64 %429 to i32
  %432 = and i32 %431, 255
  %433 = call i32 @llvm.ctpop.i32(i32 %432) #17
  %434 = trunc i32 %433 to i8
  %435 = and i8 %434, 1
  %436 = xor i8 %435, 1
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %436, i8* %437, align 1, !tbaa !2448
  %438 = icmp eq i64 %429, 0
  %439 = zext i1 %438 to i8
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %439, i8* %440, align 1, !tbaa !2450
  %441 = lshr i64 %429, 63
  %442 = trunc i64 %441 to i8
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %442, i8* %443, align 1, !tbaa !2451
  %444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %444, align 1, !tbaa !2452
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %445, align 1, !tbaa !2449
  %446 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %447 = load i64, i64* %RCX
  %448 = load i64, i64* %PC
  %449 = add i64 %448, 5
  store i64 %449, i64* %PC
  %450 = bitcast i8* %446 to i64*
  store i64 %447, i64* %450, align 1, !tbaa !2428
  %451 = getelementptr inbounds i8, i8* %446, i64 8
  %452 = bitcast i8* %451 to i64*
  store i64 0, i64* %452, align 1, !tbaa !2428
  %453 = load i64, i64* %RBP
  %454 = sub i64 %453, 8
  %455 = load i64, i64* %PC
  %456 = add i64 %455, 4
  store i64 %456, i64* %PC
  %457 = inttoptr i64 %454 to i64*
  %458 = load i64, i64* %457
  store i64 %458, i64* %RAX, align 8, !tbaa !2428
  %459 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %460 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %461 = load i64, i64* %RAX
  %462 = add i64 %461, 16
  %463 = load i64, i64* %PC
  %464 = add i64 %463, 5
  store i64 %464, i64* %PC
  %465 = bitcast i8* %460 to double*
  %466 = load double, double* %465, align 1
  %467 = getelementptr inbounds i8, i8* %460, i64 8
  %468 = bitcast i8* %467 to i64*
  %469 = load i64, i64* %468, align 1
  %470 = inttoptr i64 %462 to double*
  %471 = load double, double* %470
  %472 = fadd double %466, %471
  %473 = bitcast i8* %459 to double*
  store double %472, double* %473, align 1, !tbaa !2432
  %474 = getelementptr inbounds i8, i8* %459, i64 8
  %475 = bitcast i8* %474 to i64*
  store i64 %469, i64* %475, align 1, !tbaa !2432
  %476 = load i64, i64* %RBP
  %477 = sub i64 %476, 8
  %478 = load i64, i64* %PC
  %479 = add i64 %478, 4
  store i64 %479, i64* %PC
  %480 = inttoptr i64 %477 to i64*
  %481 = load i64, i64* %480
  store i64 %481, i64* %RAX, align 8, !tbaa !2428
  %482 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %483 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %484 = load i64, i64* %RAX
  %485 = add i64 %484, 24
  %486 = load i64, i64* %PC
  %487 = add i64 %486, 5
  store i64 %487, i64* %PC
  %488 = bitcast i8* %483 to double*
  %489 = load double, double* %488, align 1
  %490 = getelementptr inbounds i8, i8* %483, i64 8
  %491 = bitcast i8* %490 to i64*
  %492 = load i64, i64* %491, align 1
  %493 = inttoptr i64 %485 to double*
  %494 = load double, double* %493
  %495 = fadd double %489, %494
  %496 = bitcast i8* %482 to double*
  store double %495, double* %496, align 1, !tbaa !2432
  %497 = getelementptr inbounds i8, i8* %482, i64 8
  %498 = bitcast i8* %497 to i64*
  store i64 %492, i64* %498, align 1, !tbaa !2432
  %499 = load i64, i64* %RBP
  %500 = sub i64 %499, 8
  %501 = load i64, i64* %PC
  %502 = add i64 %501, 4
  store i64 %502, i64* %PC
  %503 = inttoptr i64 %500 to i64*
  %504 = load i64, i64* %503
  store i64 %504, i64* %RAX, align 8, !tbaa !2428
  %505 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %506 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %507 = load i64, i64* %RAX
  %508 = add i64 %507, 32
  %509 = load i64, i64* %PC
  %510 = add i64 %509, 5
  store i64 %510, i64* %PC
  %511 = bitcast i8* %506 to double*
  %512 = load double, double* %511, align 1
  %513 = getelementptr inbounds i8, i8* %506, i64 8
  %514 = bitcast i8* %513 to i64*
  %515 = load i64, i64* %514, align 1
  %516 = inttoptr i64 %508 to double*
  %517 = load double, double* %516
  %518 = fadd double %512, %517
  %519 = bitcast i8* %505 to double*
  store double %518, double* %519, align 1, !tbaa !2432
  %520 = getelementptr inbounds i8, i8* %505, i64 8
  %521 = bitcast i8* %520 to i64*
  store i64 %515, i64* %521, align 1, !tbaa !2432
  %522 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %523 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %524 = load i64, i64* %PC
  %525 = add i64 %524, 9
  store i64 %525, i64* %PC
  %526 = bitcast i8* %523 to double*
  %527 = load double, double* %526, align 1
  %528 = getelementptr inbounds i8, i8* %523, i64 8
  %529 = bitcast i8* %528 to i64*
  %530 = load i64, i64* %529, align 1
  %531 = load double, double* bitcast (%T2_type* @T2 to double*)
  %532 = fdiv double %527, %531
  %533 = bitcast i8* %522 to double*
  store double %532, double* %533, align 1, !tbaa !2432
  %534 = getelementptr inbounds i8, i8* %522, i64 8
  %535 = bitcast i8* %534 to i64*
  store i64 %530, i64* %535, align 1, !tbaa !2432
  %536 = load i64, i64* %RBP
  %537 = sub i64 %536, 8
  %538 = load i64, i64* %PC
  %539 = add i64 %538, 4
  store i64 %539, i64* %PC
  %540 = inttoptr i64 %537 to i64*
  %541 = load i64, i64* %540
  store i64 %541, i64* %RAX, align 8, !tbaa !2428
  %542 = load i64, i64* %RAX
  %543 = add i64 %542, 32
  %544 = bitcast %union.vec128_t* %XMM0 to i8*
  %545 = load i64, i64* %PC
  %546 = add i64 %545, 5
  store i64 %546, i64* %PC
  %547 = bitcast i8* %544 to double*
  %548 = load double, double* %547, align 1
  %549 = inttoptr i64 %543 to double*
  store double %548, double* %549
  %550 = load i64, i64* %PC
  %551 = add i64 %550, 7
  store i64 %551, i64* %PC
  %552 = load i32, i32* bitcast (%J_type* @J to i32*)
  %553 = zext i32 %552 to i64
  store i64 %553, i64* %RDX, align 8, !tbaa !2428
  %554 = load i64, i64* %RDX
  %555 = load i64, i64* %PC
  %556 = add i64 %555, 3
  store i64 %556, i64* %PC
  %557 = trunc i64 %554 to i32
  %558 = add i32 1, %557
  %559 = zext i32 %558 to i64
  store i64 %559, i64* %RDX, align 8, !tbaa !2428
  %560 = icmp ult i32 %558, %557
  %561 = icmp ult i32 %558, 1
  %562 = or i1 %560, %561
  %563 = zext i1 %562 to i8
  %564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %563, i8* %564, align 1, !tbaa !2434
  %565 = and i32 %558, 255
  %566 = call i32 @llvm.ctpop.i32(i32 %565) #17
  %567 = trunc i32 %566 to i8
  %568 = and i8 %567, 1
  %569 = xor i8 %568, 1
  %570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %569, i8* %570, align 1, !tbaa !2448
  %571 = xor i64 1, %554
  %572 = trunc i64 %571 to i32
  %573 = xor i32 %572, %558
  %574 = lshr i32 %573, 4
  %575 = trunc i32 %574 to i8
  %576 = and i8 %575, 1
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %576, i8* %577, align 1, !tbaa !2449
  %578 = icmp eq i32 %558, 0
  %579 = zext i1 %578 to i8
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %579, i8* %580, align 1, !tbaa !2450
  %581 = lshr i32 %558, 31
  %582 = trunc i32 %581 to i8
  %583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %582, i8* %583, align 1, !tbaa !2451
  %584 = lshr i32 %557, 31
  %585 = xor i32 %581, %584
  %586 = add nuw nsw i32 %585, %581
  %587 = icmp eq i32 %586, 2
  %588 = zext i1 %587 to i8
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %588, i8* %589, align 1, !tbaa !2452
  %590 = load i32, i32* %EDX
  %591 = zext i32 %590 to i64
  %592 = load i64, i64* %PC
  %593 = add i64 %592, 7
  store i64 %593, i64* %PC
  store i32 %590, i32* bitcast (%J_type* @J to i32*)
  %594 = load i64, i64* %PC
  %595 = add i64 %594, 8
  store i64 %595, i64* %PC
  %596 = load i32, i32* bitcast (%J_type* @J to i32*)
  %597 = sub i32 %596, 6
  %598 = icmp ult i32 %596, 6
  %599 = zext i1 %598 to i8
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %599, i8* %600, align 1, !tbaa !2434
  %601 = and i32 %597, 255
  %602 = call i32 @llvm.ctpop.i32(i32 %601) #17
  %603 = trunc i32 %602 to i8
  %604 = and i8 %603, 1
  %605 = xor i8 %604, 1
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %605, i8* %606, align 1, !tbaa !2448
  %607 = xor i32 %596, 6
  %608 = xor i32 %607, %597
  %609 = lshr i32 %608, 4
  %610 = trunc i32 %609 to i8
  %611 = and i8 %610, 1
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %611, i8* %612, align 1, !tbaa !2449
  %613 = icmp eq i32 %597, 0
  %614 = zext i1 %613 to i8
  %615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %614, i8* %615, align 1, !tbaa !2450
  %616 = lshr i32 %597, 31
  %617 = trunc i32 %616 to i8
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %617, i8* %618, align 1, !tbaa !2451
  %619 = lshr i32 %596, 31
  %620 = xor i32 %616, %619
  %621 = add nuw nsw i32 %620, %619
  %622 = icmp eq i32 %621, 2
  %623 = zext i1 %622 to i8
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %623, i8* %624, align 1, !tbaa !2452
  %625 = load i64, i64* %PC
  %626 = add i64 %625, 11
  %627 = load i64, i64* %PC
  %628 = add i64 %627, 6
  %629 = load i64, i64* %PC
  %630 = add i64 %629, 6
  store i64 %630, i64* %PC
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %632 = load i8, i8* %631, align 1, !tbaa !2451
  %633 = icmp ne i8 %632, 0
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %635 = load i8, i8* %634, align 1, !tbaa !2452
  %636 = icmp ne i8 %635, 0
  %637 = xor i1 %633, %636
  %638 = xor i1 %637, true
  %639 = zext i1 %638 to i8
  store i8 %639, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %641 = select i1 %637, i64 %628, i64 %626
  store i64 %641, i64* %640, align 8, !tbaa !2428
  %642 = load i8, i8* %BRANCH_TAKEN
  %643 = icmp eq i8 %642, 1
  %644 = load i64, i64* %PC
  br i1 %643, label %block_401776, label %block_401771

block_401771:                                     ; preds = %block_401663
  %645 = sub i64 %644, 270
  %646 = load i64, i64* %PC
  %647 = add i64 %646, 5
  store i64 %647, i64* %PC
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %645, i64* %648, align 8, !tbaa !2428
  br label %block_401663
}

; Function Attrs: noinline
define %struct.Memory* @sub_4007a0_deregister_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4007a0:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 11
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 13
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSP = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 15
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBP = bitcast %union.anon* %23 to i64*
  %24 = load i64, i64* %RBP
  %25 = load i64, i64* %PC
  %26 = add i64 %25, 1
  store i64 %26, i64* %PC
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !tbaa !2428
  %29 = add i64 %28, -8
  %30 = inttoptr i64 %29 to i64*
  store i64 %24, i64* %30
  store i64 %29, i64* %27, align 8, !tbaa !2428
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 5
  store i64 %32, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RAX, align 8, !tbaa !2428
  %33 = load i64, i64* %RAX
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 6
  store i64 %35, i64* %PC
  %36 = sub i64 %33, ptrtoint (i64* @stderr to i64)
  %37 = icmp ult i64 %33, ptrtoint (i64* @stderr to i64)
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %38, i8* %39, align 1, !tbaa !2434
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 255
  %42 = call i32 @llvm.ctpop.i32(i32 %41) #17
  %43 = trunc i32 %42 to i8
  %44 = and i8 %43, 1
  %45 = xor i8 %44, 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %45, i8* %46, align 1, !tbaa !2448
  %47 = xor i64 ptrtoint (i64* @stderr to i64), %33
  %48 = xor i64 %47, %36
  %49 = lshr i64 %48, 4
  %50 = trunc i64 %49 to i8
  %51 = and i8 %50, 1
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %51, i8* %52, align 1, !tbaa !2449
  %53 = icmp eq i64 %36, 0
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %54, i8* %55, align 1, !tbaa !2450
  %56 = lshr i64 %36, 63
  %57 = trunc i64 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %57, i8* %58, align 1, !tbaa !2451
  %59 = lshr i64 %33, 63
  %60 = xor i64 lshr (i64 ptrtoint (i64* @stderr to i64), i64 63), %59
  %61 = xor i64 %56, %59
  %62 = add nuw nsw i64 %61, %60
  %63 = icmp eq i64 %62, 2
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %64, i8* %65, align 1, !tbaa !2452
  %66 = load i64, i64* %RSP
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 3
  store i64 %68, i64* %PC
  store i64 %66, i64* %RBP, align 8, !tbaa !2428
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 25
  %71 = load i64, i64* %PC
  %72 = add i64 %71, 2
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 2
  store i64 %74, i64* %PC
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %76 = load i8, i8* %75, align 1, !tbaa !2450
  store i8 %76, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = icmp ne i8 %76, 0
  %79 = select i1 %78, i64 %70, i64 %72
  store i64 %79, i64* %77, align 8, !tbaa !2428
  %80 = load i8, i8* %BRANCH_TAKEN
  %81 = icmp eq i8 %80, 1
  br i1 %81, label %block_4007c8, label %block_4007b1

block_4007bb:                                     ; preds = %block_4007b1
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 1
  store i64 %83, i64* %PC
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %85 = load i64, i64* %84, align 8, !tbaa !2428
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %85 to i64*
  %88 = load i64, i64* %87
  store i64 %88, i64* %RBP, align 8, !tbaa !2428
  store i64 %86, i64* %84, align 8, !tbaa !2428
  %89 = load i64, i64* %PC
  %90 = add i64 %89, 5
  store i64 %90, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %91 = load i64, i64* %RAX
  %92 = load i64, i64* %PC
  %93 = add i64 %92, 2
  store i64 %93, i64* %PC
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %91, i64* %94, align 8, !tbaa !2428
  %95 = load i64, i64* %PC
  switch i64 %95, label %163 [
    i64 4196298, label %block_4007ca
    i64 4196291, label %block_4007c3
  ]

block_4007b1:                                     ; preds = %block_4007a0
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 5
  store i64 %97, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %98 = load i64, i64* %RAX
  %99 = load i64, i64* %RAX
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 3
  store i64 %101, i64* %PC
  %102 = and i64 %99, %98
  %103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %103, align 1, !tbaa !2434
  %104 = trunc i64 %102 to i32
  %105 = and i32 %104, 255
  %106 = call i32 @llvm.ctpop.i32(i32 %105) #17
  %107 = trunc i32 %106 to i8
  %108 = and i8 %107, 1
  %109 = xor i8 %108, 1
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %109, i8* %110, align 1, !tbaa !2448
  %111 = icmp eq i64 %102, 0
  %112 = zext i1 %111 to i8
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %112, i8* %113, align 1, !tbaa !2450
  %114 = lshr i64 %102, 63
  %115 = trunc i64 %114 to i8
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %115, i8* %116, align 1, !tbaa !2451
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %117, align 1, !tbaa !2452
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %118, align 1, !tbaa !2449
  %119 = load i64, i64* %PC
  %120 = add i64 %119, 15
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 2
  %123 = load i64, i64* %PC
  %124 = add i64 %123, 2
  store i64 %124, i64* %PC
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %126 = load i8, i8* %125, align 1, !tbaa !2450
  store i8 %126, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %128 = icmp ne i8 %126, 0
  %129 = select i1 %128, i64 %120, i64 %122
  store i64 %129, i64* %127, align 8, !tbaa !2428
  %130 = load i8, i8* %BRANCH_TAKEN
  %131 = icmp eq i8 %130, 1
  br i1 %131, label %block_4007c8, label %block_4007bb

block_4007c8:                                     ; preds = %block_4007c3, %block_4007b1, %block_4007a0
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_4007a0 ], [ %2, %block_4007b1 ], [ %2, %block_4007c3 ]
  %132 = load i64, i64* %PC
  %133 = add i64 %132, 1
  store i64 %133, i64* %PC
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %135 = load i64, i64* %134, align 8, !tbaa !2428
  %136 = add i64 %135, 8
  %137 = inttoptr i64 %135 to i64*
  %138 = load i64, i64* %137
  store i64 %138, i64* %RBP, align 8, !tbaa !2428
  store i64 %136, i64* %134, align 8, !tbaa !2428
  %139 = load i64, i64* %PC
  %140 = add i64 %139, 1
  store i64 %140, i64* %PC
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %143 = load i64, i64* %142, align 8, !tbaa !2428
  %144 = inttoptr i64 %143 to i64*
  %145 = load i64, i64* %144
  store i64 %145, i64* %141, align 8, !tbaa !2428
  %146 = add i64 %143, 8
  store i64 %146, i64* %142, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4007ca:                                     ; preds = %block_4007bb
  %147 = load i64, i64* %RAX
  %148 = load i64, i64* %RAX
  %149 = add i64 %148, %147
  %150 = load i16, i16* %AX
  %151 = zext i16 %150 to i64
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 6
  store i64 %153, i64* %PC
  %154 = load i64, i64* %PC
  %155 = tail call %struct.Memory* @sub_4007d0_register_tm_clones(%struct.State* %0, i64 %154, %struct.Memory* %2)
  ret %struct.Memory* %155

block_4007c3:                                     ; preds = %block_4007bb
  %156 = load i64, i64* %RAX
  %157 = load i64, i64* %RAX
  %158 = add i64 %157, %156
  %159 = load i32, i32* %EAX
  %160 = zext i32 %159 to i64
  %161 = load i64, i64* %PC
  %162 = add i64 %161, 5
  store i64 %162, i64* %PC
  br label %block_4007c8

; <label>:163:                                    ; preds = %block_4007bb
  %164 = load i64, i64* %PC
  %165 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %164, %struct.Memory* %2)
  ret %struct.Memory* %165
}

; Function Attrs: noinline
define %struct.Memory* @sub_4018e4__term_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4018e4:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 8
  store i64 %12, i64* %RSP, align 8, !tbaa !2428
  %13 = icmp ult i64 %9, 8
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1, !tbaa !2434
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17) #17
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1, !tbaa !2448
  %23 = xor i64 8, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1, !tbaa !2449
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1, !tbaa !2450
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1, !tbaa !2451
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add nuw nsw i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1, !tbaa !2452
  %41 = load i64, i64* %RSP
  %42 = load i64, i64* %PC
  %43 = add i64 %42, 4
  store i64 %43, i64* %PC
  %44 = add i64 8, %41
  store i64 %44, i64* %RSP, align 8, !tbaa !2428
  %45 = icmp ult i64 %44, %41
  %46 = icmp ult i64 %44, 8
  %47 = or i1 %45, %46
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %48, i8* %49, align 1, !tbaa !2434
  %50 = trunc i64 %44 to i32
  %51 = and i32 %50, 255
  %52 = call i32 @llvm.ctpop.i32(i32 %51) #17
  %53 = trunc i32 %52 to i8
  %54 = and i8 %53, 1
  %55 = xor i8 %54, 1
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %55, i8* %56, align 1, !tbaa !2448
  %57 = xor i64 8, %41
  %58 = xor i64 %57, %44
  %59 = lshr i64 %58, 4
  %60 = trunc i64 %59 to i8
  %61 = and i8 %60, 1
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %61, i8* %62, align 1, !tbaa !2449
  %63 = icmp eq i64 %44, 0
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %64, i8* %65, align 1, !tbaa !2450
  %66 = lshr i64 %44, 63
  %67 = trunc i64 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %67, i8* %68, align 1, !tbaa !2451
  %69 = lshr i64 %41, 63
  %70 = xor i64 %66, %69
  %71 = add nuw nsw i64 %70, %66
  %72 = icmp eq i64 %71, 2
  %73 = zext i1 %72 to i8
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %73, i8* %74, align 1, !tbaa !2452
  %75 = load i64, i64* %PC
  %76 = add i64 %75, 1
  store i64 %76, i64* %PC
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80
  store i64 %81, i64* %77, align 8, !tbaa !2428
  %82 = add i64 %79, 8
  store i64 %82, i64* %78, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_401870___libc_csu_init(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401870:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 3
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EBX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %EDI = bitcast %union.anon* %14 to i32*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 27
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %R13D = bitcast %union.anon* %17 to i32*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 1
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RAX = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 3
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBX = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 7
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RDX = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 9
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RSI = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 11
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %RDI = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 13
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %RSP = bitcast %union.anon* %35 to i64*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37 = getelementptr inbounds %struct.GPR, %struct.GPR* %36, i32 0, i32 15
  %38 = getelementptr inbounds %struct.Reg, %struct.Reg* %37, i32 0, i32 0
  %RBP = bitcast %union.anon* %38 to i64*
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 25
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %R12 = bitcast %union.anon* %41 to i64*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 27
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %R13 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 29
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %R14 = bitcast %union.anon* %47 to i64*
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %49 = getelementptr inbounds %struct.GPR, %struct.GPR* %48, i32 0, i32 31
  %50 = getelementptr inbounds %struct.Reg, %struct.Reg* %49, i32 0, i32 0
  %R15 = bitcast %union.anon* %50 to i64*
  %51 = load i64, i64* %R15
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 2
  store i64 %53, i64* %PC
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %55 = load i64, i64* %54, align 8, !tbaa !2428
  %56 = add i64 %55, -8
  %57 = inttoptr i64 %56 to i64*
  store i64 %51, i64* %57
  store i64 %56, i64* %54, align 8, !tbaa !2428
  %58 = load i64, i64* %R14
  %59 = load i64, i64* %PC
  %60 = add i64 %59, 2
  store i64 %60, i64* %PC
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %62 = load i64, i64* %61, align 8, !tbaa !2428
  %63 = add i64 %62, -8
  %64 = inttoptr i64 %63 to i64*
  store i64 %58, i64* %64
  store i64 %63, i64* %61, align 8, !tbaa !2428
  %65 = load i64, i64* %RDX
  %66 = load i64, i64* %PC
  %67 = add i64 %66, 3
  store i64 %67, i64* %PC
  store i64 %65, i64* %R15, align 8, !tbaa !2428
  %68 = load i64, i64* %R13
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 2
  store i64 %70, i64* %PC
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %72 = load i64, i64* %71, align 8, !tbaa !2428
  %73 = add i64 %72, -8
  %74 = inttoptr i64 %73 to i64*
  store i64 %68, i64* %74
  store i64 %73, i64* %71, align 8, !tbaa !2428
  %75 = load i64, i64* %R12
  %76 = load i64, i64* %PC
  %77 = add i64 %76, 2
  store i64 %77, i64* %PC
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = add i64 %79, -8
  %81 = inttoptr i64 %80 to i64*
  store i64 %75, i64* %81
  store i64 %80, i64* %78, align 8, !tbaa !2428
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 7
  store i64 %83, i64* %PC
  store i64 ptrtoint (%seg_601df0__init_array_type* @seg_601df0__init_array to i64), i64* %R12, align 8, !tbaa !2428
  %84 = load i64, i64* %RBP
  %85 = load i64, i64* %PC
  %86 = add i64 %85, 1
  store i64 %86, i64* %PC
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %88 = load i64, i64* %87, align 8, !tbaa !2428
  %89 = add i64 %88, -8
  %90 = inttoptr i64 %89 to i64*
  store i64 %84, i64* %90
  store i64 %89, i64* %87, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = add i64 %91, 7
  store i64 %92, i64* %PC
  store i64 add (i64 ptrtoint (%seg_601df0__init_array_type* @seg_601df0__init_array to i64), i64 8), i64* %RBP, align 8, !tbaa !2428
  %93 = load i64, i64* %RBX
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 1
  store i64 %95, i64* %PC
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %97 = load i64, i64* %96, align 8, !tbaa !2428
  %98 = add i64 %97, -8
  %99 = inttoptr i64 %98 to i64*
  store i64 %93, i64* %99
  store i64 %98, i64* %96, align 8, !tbaa !2428
  %100 = bitcast i32* %R13D to i64*
  %101 = load i32, i32* %EDI
  %102 = zext i32 %101 to i64
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 3
  store i64 %104, i64* %PC
  %105 = and i64 %102, 4294967295
  store i64 %105, i64* %100, align 8, !tbaa !2428
  %106 = load i64, i64* %RSI
  %107 = load i64, i64* %PC
  %108 = add i64 %107, 3
  store i64 %108, i64* %PC
  store i64 %106, i64* %R14, align 8, !tbaa !2428
  %109 = load i64, i64* %RBP
  %110 = load i64, i64* %R12
  %111 = load i64, i64* %PC
  %112 = add i64 %111, 3
  store i64 %112, i64* %PC
  %113 = sub i64 %109, %110
  store i64 %113, i64* %RBP, align 8, !tbaa !2428
  %114 = icmp ult i64 %109, %110
  %115 = zext i1 %114 to i8
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %115, i8* %116, align 1, !tbaa !2434
  %117 = trunc i64 %113 to i32
  %118 = and i32 %117, 255
  %119 = call i32 @llvm.ctpop.i32(i32 %118) #17
  %120 = trunc i32 %119 to i8
  %121 = and i8 %120, 1
  %122 = xor i8 %121, 1
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %122, i8* %123, align 1, !tbaa !2448
  %124 = xor i64 %110, %109
  %125 = xor i64 %124, %113
  %126 = lshr i64 %125, 4
  %127 = trunc i64 %126 to i8
  %128 = and i8 %127, 1
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %128, i8* %129, align 1, !tbaa !2449
  %130 = icmp eq i64 %113, 0
  %131 = zext i1 %130 to i8
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %131, i8* %132, align 1, !tbaa !2450
  %133 = lshr i64 %113, 63
  %134 = trunc i64 %133 to i8
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %134, i8* %135, align 1, !tbaa !2451
  %136 = lshr i64 %109, 63
  %137 = lshr i64 %110, 63
  %138 = xor i64 %137, %136
  %139 = xor i64 %133, %136
  %140 = add nuw nsw i64 %139, %138
  %141 = icmp eq i64 %140, 2
  %142 = zext i1 %141 to i8
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %142, i8* %143, align 1, !tbaa !2452
  %144 = load i64, i64* %RSP
  %145 = load i64, i64* %PC
  %146 = add i64 %145, 4
  store i64 %146, i64* %PC
  %147 = sub i64 %144, 8
  store i64 %147, i64* %RSP, align 8, !tbaa !2428
  %148 = icmp ult i64 %144, 8
  %149 = zext i1 %148 to i8
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %149, i8* %150, align 1, !tbaa !2434
  %151 = trunc i64 %147 to i32
  %152 = and i32 %151, 255
  %153 = call i32 @llvm.ctpop.i32(i32 %152) #17
  %154 = trunc i32 %153 to i8
  %155 = and i8 %154, 1
  %156 = xor i8 %155, 1
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %156, i8* %157, align 1, !tbaa !2448
  %158 = xor i64 8, %144
  %159 = xor i64 %158, %147
  %160 = lshr i64 %159, 4
  %161 = trunc i64 %160 to i8
  %162 = and i8 %161, 1
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %162, i8* %163, align 1, !tbaa !2449
  %164 = icmp eq i64 %147, 0
  %165 = zext i1 %164 to i8
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %165, i8* %166, align 1, !tbaa !2450
  %167 = lshr i64 %147, 63
  %168 = trunc i64 %167 to i8
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %168, i8* %169, align 1, !tbaa !2451
  %170 = lshr i64 %144, 63
  %171 = xor i64 %167, %170
  %172 = add nuw nsw i64 %171, %170
  %173 = icmp eq i64 %172, 2
  %174 = zext i1 %173 to i8
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %174, i8* %175, align 1, !tbaa !2452
  %176 = load i64, i64* %RBP
  %177 = load i64, i64* %PC
  %178 = add i64 %177, 4
  store i64 %178, i64* %PC
  %179 = ashr i64 %176, 2
  %180 = trunc i64 %179 to i8
  %181 = and i8 %180, 1
  %182 = ashr i64 %179, 1
  store i64 %182, i64* %RBP, align 8, !tbaa !2428
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %181, i8* %183, align 1, !tbaa !2453
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %185 = trunc i64 %182 to i32
  %186 = and i32 %185, 255
  %187 = call i32 @llvm.ctpop.i32(i32 %186) #17
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = xor i8 %189, 1
  store i8 %190, i8* %184, align 1, !tbaa !2453
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %191, align 1, !tbaa !2453
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %193 = icmp eq i64 %182, 0
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %192, align 1, !tbaa !2453
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %196 = lshr i64 %182, 63
  %197 = trunc i64 %196 to i8
  store i8 %197, i8* %195, align 1, !tbaa !2453
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %198, align 1, !tbaa !2453
  %199 = load i64, i64* %PC
  %200 = sub i64 %199, 4628
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 5
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 5
  store i64 %204, i64* %PC
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %206 = load i64, i64* %205, align 8, !tbaa !2428
  %207 = add i64 %206, -8
  %208 = inttoptr i64 %207 to i64*
  store i64 %202, i64* %208
  store i64 %207, i64* %205, align 8, !tbaa !2428
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %200, i64* %209, align 8, !tbaa !2428
  %210 = load i64, i64* %PC
  %211 = call %struct.Memory* @sub_400688__init_proc(%struct.State* %0, i64 %210, %struct.Memory* %2)
  %212 = load i64, i64* %RBP
  %213 = load i64, i64* %RBP
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 3
  store i64 %215, i64* %PC
  %216 = and i64 %213, %212
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %217, align 1, !tbaa !2434
  %218 = trunc i64 %216 to i32
  %219 = and i32 %218, 255
  %220 = call i32 @llvm.ctpop.i32(i32 %219) #17
  %221 = trunc i32 %220 to i8
  %222 = and i8 %221, 1
  %223 = xor i8 %222, 1
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %223, i8* %224, align 1, !tbaa !2448
  %225 = icmp eq i64 %216, 0
  %226 = zext i1 %225 to i8
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %226, i8* %227, align 1, !tbaa !2450
  %228 = lshr i64 %216, 63
  %229 = trunc i64 %228 to i8
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %229, i8* %230, align 1, !tbaa !2451
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %231, align 1, !tbaa !2452
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %232, align 1, !tbaa !2449
  %233 = load i64, i64* %PC
  %234 = add i64 %233, 34
  %235 = load i64, i64* %PC
  %236 = add i64 %235, 2
  %237 = load i64, i64* %PC
  %238 = add i64 %237, 2
  store i64 %238, i64* %PC
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %240 = load i8, i8* %239, align 1, !tbaa !2450
  store i8 %240, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %242 = icmp ne i8 %240, 0
  %243 = select i1 %242, i64 %234, i64 %236
  store i64 %243, i64* %241, align 8, !tbaa !2428
  %244 = load i8, i8* %BRANCH_TAKEN
  %245 = icmp eq i8 %244, 1
  br i1 %245, label %block_4018c6, label %block_4018a6

block_4018c6:                                     ; preds = %block_4018b0, %block_401870
  %MEMORY.0 = phi %struct.Memory* [ %211, %block_401870 ], [ %387, %block_4018b0 ]
  %246 = load i64, i64* %RSP
  %247 = load i64, i64* %PC
  %248 = add i64 %247, 4
  store i64 %248, i64* %PC
  %249 = add i64 8, %246
  store i64 %249, i64* %RSP, align 8, !tbaa !2428
  %250 = icmp ult i64 %249, %246
  %251 = icmp ult i64 %249, 8
  %252 = or i1 %250, %251
  %253 = zext i1 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %253, i8* %254, align 1, !tbaa !2434
  %255 = trunc i64 %249 to i32
  %256 = and i32 %255, 255
  %257 = call i32 @llvm.ctpop.i32(i32 %256) #17
  %258 = trunc i32 %257 to i8
  %259 = and i8 %258, 1
  %260 = xor i8 %259, 1
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %260, i8* %261, align 1, !tbaa !2448
  %262 = xor i64 8, %246
  %263 = xor i64 %262, %249
  %264 = lshr i64 %263, 4
  %265 = trunc i64 %264 to i8
  %266 = and i8 %265, 1
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %266, i8* %267, align 1, !tbaa !2449
  %268 = icmp eq i64 %249, 0
  %269 = zext i1 %268 to i8
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %269, i8* %270, align 1, !tbaa !2450
  %271 = lshr i64 %249, 63
  %272 = trunc i64 %271 to i8
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %272, i8* %273, align 1, !tbaa !2451
  %274 = lshr i64 %246, 63
  %275 = xor i64 %271, %274
  %276 = add nuw nsw i64 %275, %271
  %277 = icmp eq i64 %276, 2
  %278 = zext i1 %277 to i8
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %278, i8* %279, align 1, !tbaa !2452
  %280 = load i64, i64* %PC
  %281 = add i64 %280, 1
  store i64 %281, i64* %PC
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %283 = load i64, i64* %282, align 8, !tbaa !2428
  %284 = add i64 %283, 8
  %285 = inttoptr i64 %283 to i64*
  %286 = load i64, i64* %285
  store i64 %286, i64* %RBX, align 8, !tbaa !2428
  store i64 %284, i64* %282, align 8, !tbaa !2428
  %287 = load i64, i64* %PC
  %288 = add i64 %287, 1
  store i64 %288, i64* %PC
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %290 = load i64, i64* %289, align 8, !tbaa !2428
  %291 = add i64 %290, 8
  %292 = inttoptr i64 %290 to i64*
  %293 = load i64, i64* %292
  store i64 %293, i64* %RBP, align 8, !tbaa !2428
  store i64 %291, i64* %289, align 8, !tbaa !2428
  %294 = load i64, i64* %PC
  %295 = add i64 %294, 2
  store i64 %295, i64* %PC
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %297 = load i64, i64* %296, align 8, !tbaa !2428
  %298 = add i64 %297, 8
  %299 = inttoptr i64 %297 to i64*
  %300 = load i64, i64* %299
  store i64 %300, i64* %R12, align 8, !tbaa !2428
  store i64 %298, i64* %296, align 8, !tbaa !2428
  %301 = load i64, i64* %PC
  %302 = add i64 %301, 2
  store i64 %302, i64* %PC
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %304 = load i64, i64* %303, align 8, !tbaa !2428
  %305 = add i64 %304, 8
  %306 = inttoptr i64 %304 to i64*
  %307 = load i64, i64* %306
  store i64 %307, i64* %R13, align 8, !tbaa !2428
  store i64 %305, i64* %303, align 8, !tbaa !2428
  %308 = load i64, i64* %PC
  %309 = add i64 %308, 2
  store i64 %309, i64* %PC
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %311 = load i64, i64* %310, align 8, !tbaa !2428
  %312 = add i64 %311, 8
  %313 = inttoptr i64 %311 to i64*
  %314 = load i64, i64* %313
  store i64 %314, i64* %R14, align 8, !tbaa !2428
  store i64 %312, i64* %310, align 8, !tbaa !2428
  %315 = load i64, i64* %PC
  %316 = add i64 %315, 2
  store i64 %316, i64* %PC
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %318 = load i64, i64* %317, align 8, !tbaa !2428
  %319 = add i64 %318, 8
  %320 = inttoptr i64 %318 to i64*
  %321 = load i64, i64* %320
  store i64 %321, i64* %R15, align 8, !tbaa !2428
  store i64 %319, i64* %317, align 8, !tbaa !2428
  %322 = load i64, i64* %PC
  %323 = add i64 %322, 1
  store i64 %323, i64* %PC
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %326 = load i64, i64* %325, align 8, !tbaa !2428
  %327 = inttoptr i64 %326 to i64*
  %328 = load i64, i64* %327
  store i64 %328, i64* %324, align 8, !tbaa !2428
  %329 = add i64 %326, 8
  store i64 %329, i64* %325, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4018a6:                                     ; preds = %block_401870
  %330 = load i64, i64* %RBX
  %331 = load i32, i32* %EBX
  %332 = zext i32 %331 to i64
  %333 = load i64, i64* %PC
  %334 = add i64 %333, 2
  store i64 %334, i64* %PC
  %335 = xor i64 %332, %330
  %336 = trunc i64 %335 to i32
  %337 = and i64 %335, 4294967295
  store i64 %337, i64* %RBX, align 8, !tbaa !2428
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %338, align 1, !tbaa !2434
  %339 = and i32 %336, 255
  %340 = call i32 @llvm.ctpop.i32(i32 %339) #17
  %341 = trunc i32 %340 to i8
  %342 = and i8 %341, 1
  %343 = xor i8 %342, 1
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %343, i8* %344, align 1, !tbaa !2448
  %345 = icmp eq i32 %336, 0
  %346 = zext i1 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %346, i8* %347, align 1, !tbaa !2450
  %348 = lshr i32 %336, 31
  %349 = trunc i32 %348 to i8
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %349, i8* %350, align 1, !tbaa !2451
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %351, align 1, !tbaa !2452
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %352, align 1, !tbaa !2449
  %353 = load i64, i64* %RAX
  %354 = load i64, i64* %RAX
  %355 = add i64 %354, %353
  %356 = load i32, i32* %EAX
  %357 = zext i32 %356 to i64
  %358 = load i64, i64* %PC
  %359 = add i64 %358, 8
  store i64 %359, i64* %PC
  br label %block_4018b0

block_4018b0:                                     ; preds = %block_4018b0, %block_4018a6
  %MEMORY.1 = phi %struct.Memory* [ %211, %block_4018a6 ], [ %387, %block_4018b0 ]
  %360 = load i64, i64* %R15
  %361 = load i64, i64* %PC
  %362 = add i64 %361, 3
  store i64 %362, i64* %PC
  store i64 %360, i64* %RDX, align 8, !tbaa !2428
  %363 = load i64, i64* %R14
  %364 = load i64, i64* %PC
  %365 = add i64 %364, 3
  store i64 %365, i64* %PC
  store i64 %363, i64* %RSI, align 8, !tbaa !2428
  %366 = load i32, i32* %R13D
  %367 = zext i32 %366 to i64
  %368 = load i64, i64* %PC
  %369 = add i64 %368, 3
  store i64 %369, i64* %PC
  %370 = and i64 %367, 4294967295
  store i64 %370, i64* %RDI, align 8, !tbaa !2428
  %371 = load i64, i64* %R12
  %372 = load i64, i64* %RBX
  %373 = mul i64 %372, 8
  %374 = add i64 %373, %371
  %375 = load i64, i64* %PC
  %376 = add i64 %375, 4
  %377 = load i64, i64* %PC
  %378 = add i64 %377, 4
  store i64 %378, i64* %PC
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %380 = load i64, i64* %379, align 8, !tbaa !2428
  %381 = add i64 %380, -8
  %382 = inttoptr i64 %381 to i64*
  store i64 %376, i64* %382
  store i64 %381, i64* %379, align 8, !tbaa !2428
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %384 = inttoptr i64 %374 to i64*
  %385 = load i64, i64* %384
  store i64 %385, i64* %383, align 8, !tbaa !2428
  %386 = load i64, i64* %PC
  %387 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %386, %struct.Memory* %MEMORY.1)
  %388 = load i64, i64* %RBX
  %389 = load i64, i64* %PC
  %390 = add i64 %389, 4
  store i64 %390, i64* %PC
  %391 = add i64 1, %388
  store i64 %391, i64* %RBX, align 8, !tbaa !2428
  %392 = icmp ult i64 %391, %388
  %393 = icmp ult i64 %391, 1
  %394 = or i1 %392, %393
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %395, i8* %396, align 1, !tbaa !2434
  %397 = trunc i64 %391 to i32
  %398 = and i32 %397, 255
  %399 = call i32 @llvm.ctpop.i32(i32 %398) #17
  %400 = trunc i32 %399 to i8
  %401 = and i8 %400, 1
  %402 = xor i8 %401, 1
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %402, i8* %403, align 1, !tbaa !2448
  %404 = xor i64 1, %388
  %405 = xor i64 %404, %391
  %406 = lshr i64 %405, 4
  %407 = trunc i64 %406 to i8
  %408 = and i8 %407, 1
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %408, i8* %409, align 1, !tbaa !2449
  %410 = icmp eq i64 %391, 0
  %411 = zext i1 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %411, i8* %412, align 1, !tbaa !2450
  %413 = lshr i64 %391, 63
  %414 = trunc i64 %413 to i8
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %414, i8* %415, align 1, !tbaa !2451
  %416 = lshr i64 %388, 63
  %417 = xor i64 %413, %416
  %418 = add nuw nsw i64 %417, %413
  %419 = icmp eq i64 %418, 2
  %420 = zext i1 %419 to i8
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %420, i8* %421, align 1, !tbaa !2452
  %422 = load i64, i64* %RBP
  %423 = load i64, i64* %RBX
  %424 = load i64, i64* %PC
  %425 = add i64 %424, 3
  store i64 %425, i64* %PC
  %426 = sub i64 %422, %423
  %427 = icmp ult i64 %422, %423
  %428 = zext i1 %427 to i8
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %428, i8* %429, align 1, !tbaa !2434
  %430 = trunc i64 %426 to i32
  %431 = and i32 %430, 255
  %432 = call i32 @llvm.ctpop.i32(i32 %431) #17
  %433 = trunc i32 %432 to i8
  %434 = and i8 %433, 1
  %435 = xor i8 %434, 1
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %435, i8* %436, align 1, !tbaa !2448
  %437 = xor i64 %423, %422
  %438 = xor i64 %437, %426
  %439 = lshr i64 %438, 4
  %440 = trunc i64 %439 to i8
  %441 = and i8 %440, 1
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %441, i8* %442, align 1, !tbaa !2449
  %443 = icmp eq i64 %426, 0
  %444 = zext i1 %443 to i8
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %444, i8* %445, align 1, !tbaa !2450
  %446 = lshr i64 %426, 63
  %447 = trunc i64 %446 to i8
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %447, i8* %448, align 1, !tbaa !2451
  %449 = lshr i64 %422, 63
  %450 = lshr i64 %423, 63
  %451 = xor i64 %450, %449
  %452 = xor i64 %446, %449
  %453 = add nuw nsw i64 %452, %451
  %454 = icmp eq i64 %453, 2
  %455 = zext i1 %454 to i8
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %455, i8* %456, align 1, !tbaa !2452
  %457 = load i64, i64* %PC
  %458 = sub i64 %457, 20
  %459 = load i64, i64* %PC
  %460 = add i64 %459, 2
  %461 = load i64, i64* %PC
  %462 = add i64 %461, 2
  store i64 %462, i64* %PC
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %464 = load i8, i8* %463, align 1, !tbaa !2450
  %465 = icmp eq i8 %464, 0
  %466 = zext i1 %465 to i8
  store i8 %466, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %468 = select i1 %465, i64 %458, i64 %460
  store i64 %468, i64* %467, align 8, !tbaa !2428
  %469 = load i8, i8* %BRANCH_TAKEN
  %470 = icmp eq i8 %469, 1
  br i1 %470, label %block_4018b0, label %block_4018c6
}

; Function Attrs: noinline
define %struct.Memory* @sub_4007d0_register_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4007d0:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 9
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RSI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 11
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RDI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 13
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RSP = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 15
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RBP = bitcast %union.anon* %26 to i64*
  %27 = load i64, i64* %PC
  %28 = add i64 %27, 5
  store i64 %28, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RSI, align 8, !tbaa !2428
  %29 = load i64, i64* %RBP
  %30 = load i64, i64* %PC
  %31 = add i64 %30, 1
  store i64 %31, i64* %PC
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !tbaa !2428
  %34 = add i64 %33, -8
  %35 = inttoptr i64 %34 to i64*
  store i64 %29, i64* %35
  store i64 %34, i64* %32, align 8, !tbaa !2428
  %36 = load i64, i64* %RSI
  %37 = load i64, i64* %PC
  %38 = add i64 %37, 7
  store i64 %38, i64* %PC
  %39 = sub i64 %36, ptrtoint (i64* @stderr to i64)
  store i64 %39, i64* %RSI, align 8, !tbaa !2428
  %40 = icmp ult i64 %36, ptrtoint (i64* @stderr to i64)
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %41, i8* %42, align 1, !tbaa !2434
  %43 = trunc i64 %39 to i32
  %44 = and i32 %43, 255
  %45 = call i32 @llvm.ctpop.i32(i32 %44) #17
  %46 = trunc i32 %45 to i8
  %47 = and i8 %46, 1
  %48 = xor i8 %47, 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %48, i8* %49, align 1, !tbaa !2448
  %50 = xor i64 ptrtoint (i64* @stderr to i64), %36
  %51 = xor i64 %50, %39
  %52 = lshr i64 %51, 4
  %53 = trunc i64 %52 to i8
  %54 = and i8 %53, 1
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %54, i8* %55, align 1, !tbaa !2449
  %56 = icmp eq i64 %39, 0
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %57, i8* %58, align 1, !tbaa !2450
  %59 = lshr i64 %39, 63
  %60 = trunc i64 %59 to i8
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %60, i8* %61, align 1, !tbaa !2451
  %62 = lshr i64 %36, 63
  %63 = xor i64 lshr (i64 ptrtoint (i64* @stderr to i64), i64 63), %62
  %64 = xor i64 %59, %62
  %65 = add nuw nsw i64 %64, %63
  %66 = icmp eq i64 %65, 2
  %67 = zext i1 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %67, i8* %68, align 1, !tbaa !2452
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RBP, align 8, !tbaa !2428
  %72 = load i64, i64* %RSI
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = ashr i64 %72, 2
  %76 = trunc i64 %75 to i8
  %77 = and i8 %76, 1
  %78 = ashr i64 %75, 1
  store i64 %78, i64* %RSI, align 8, !tbaa !2428
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %77, i8* %79, align 1, !tbaa !2453
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %81 = trunc i64 %78 to i32
  %82 = and i32 %81, 255
  %83 = call i32 @llvm.ctpop.i32(i32 %82) #17
  %84 = trunc i32 %83 to i8
  %85 = and i8 %84, 1
  %86 = xor i8 %85, 1
  store i8 %86, i8* %80, align 1, !tbaa !2453
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %87, align 1, !tbaa !2453
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %89 = icmp eq i64 %78, 0
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %88, align 1, !tbaa !2453
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %92 = lshr i64 %78, 63
  %93 = trunc i64 %92 to i8
  store i8 %93, i8* %91, align 1, !tbaa !2453
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %94, align 1, !tbaa !2453
  %95 = load i64, i64* %RSI
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC
  store i64 %95, i64* %RAX, align 8, !tbaa !2428
  %98 = load i64, i64* %RAX
  %99 = load i64, i64* %PC
  %100 = add i64 %99, 4
  store i64 %100, i64* %PC
  %101 = lshr i64 %98, 62
  %102 = trunc i64 %101 to i8
  %103 = and i8 %102, 1
  %104 = lshr i64 %101, 1
  store i64 %104, i64* %RAX, align 8, !tbaa !2428
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %103, i8* %105, align 1, !tbaa !2453
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %107 = trunc i64 %104 to i32
  %108 = and i32 %107, 255
  %109 = call i32 @llvm.ctpop.i32(i32 %108) #17
  %110 = trunc i32 %109 to i8
  %111 = and i8 %110, 1
  %112 = xor i8 %111, 1
  store i8 %112, i8* %106, align 1, !tbaa !2453
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %113, align 1, !tbaa !2453
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %115 = icmp eq i64 %104, 0
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %114, align 1, !tbaa !2453
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %117, align 1, !tbaa !2453
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %118, align 1, !tbaa !2453
  %119 = load i64, i64* %RSI
  %120 = load i64, i64* %RAX
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 3
  store i64 %122, i64* %PC
  %123 = add i64 %120, %119
  store i64 %123, i64* %RSI, align 8, !tbaa !2428
  %124 = icmp ult i64 %123, %119
  %125 = icmp ult i64 %123, %120
  %126 = or i1 %124, %125
  %127 = zext i1 %126 to i8
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %127, i8* %128, align 1, !tbaa !2434
  %129 = trunc i64 %123 to i32
  %130 = and i32 %129, 255
  %131 = call i32 @llvm.ctpop.i32(i32 %130) #17
  %132 = trunc i32 %131 to i8
  %133 = and i8 %132, 1
  %134 = xor i8 %133, 1
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %134, i8* %135, align 1, !tbaa !2448
  %136 = xor i64 %120, %119
  %137 = xor i64 %136, %123
  %138 = lshr i64 %137, 4
  %139 = trunc i64 %138 to i8
  %140 = and i8 %139, 1
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %140, i8* %141, align 1, !tbaa !2449
  %142 = icmp eq i64 %123, 0
  %143 = zext i1 %142 to i8
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %143, i8* %144, align 1, !tbaa !2450
  %145 = lshr i64 %123, 63
  %146 = trunc i64 %145 to i8
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %146, i8* %147, align 1, !tbaa !2451
  %148 = lshr i64 %119, 63
  %149 = lshr i64 %120, 63
  %150 = xor i64 %145, %148
  %151 = xor i64 %145, %149
  %152 = add nuw nsw i64 %150, %151
  %153 = icmp eq i64 %152, 2
  %154 = zext i1 %153 to i8
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %154, i8* %155, align 1, !tbaa !2452
  %156 = load i64, i64* %RSI
  %157 = load i64, i64* %PC
  %158 = add i64 %157, 3
  store i64 %158, i64* %PC
  %159 = trunc i64 %156 to i8
  %160 = and i8 %159, 1
  %161 = ashr i64 %156, 1
  store i64 %161, i64* %RSI, align 8, !tbaa !2428
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %160, i8* %162, align 1, !tbaa !2453
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %164 = trunc i64 %161 to i32
  %165 = and i32 %164, 255
  %166 = call i32 @llvm.ctpop.i32(i32 %165) #17
  %167 = trunc i32 %166 to i8
  %168 = and i8 %167, 1
  %169 = xor i8 %168, 1
  store i8 %169, i8* %163, align 1, !tbaa !2453
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %170, align 1, !tbaa !2453
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %172 = icmp eq i64 %161, 0
  %173 = zext i1 %172 to i8
  store i8 %173, i8* %171, align 1, !tbaa !2453
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %175 = lshr i64 %161, 63
  %176 = trunc i64 %175 to i8
  store i8 %176, i8* %174, align 1, !tbaa !2453
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %177, align 1, !tbaa !2453
  %178 = load i64, i64* %PC
  %179 = add i64 %178, 23
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 2
  %182 = load i64, i64* %PC
  %183 = add i64 %182, 2
  store i64 %183, i64* %PC
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %185 = load i8, i8* %184, align 1, !tbaa !2450
  store i8 %185, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %187 = icmp ne i8 %185, 0
  %188 = select i1 %187, i64 %179, i64 %181
  store i64 %188, i64* %186, align 8, !tbaa !2428
  %189 = load i8, i8* %BRANCH_TAKEN
  %190 = icmp eq i8 %189, 1
  br i1 %190, label %block_400808, label %block_4007f3

block_4007fd:                                     ; preds = %block_4007f3
  %191 = load i64, i64* %PC
  %192 = add i64 %191, 1
  store i64 %192, i64* %PC
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %194 = load i64, i64* %193, align 8, !tbaa !2428
  %195 = add i64 %194, 8
  %196 = inttoptr i64 %194 to i64*
  %197 = load i64, i64* %196
  store i64 %197, i64* %RBP, align 8, !tbaa !2428
  store i64 %195, i64* %193, align 8, !tbaa !2428
  %198 = load i64, i64* %PC
  %199 = add i64 %198, 5
  store i64 %199, i64* %PC
  store i64 and (i64 ptrtoint (i64* @stderr to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %200 = load i64, i64* %RAX
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 2
  store i64 %202, i64* %PC
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %200, i64* %203, align 8, !tbaa !2428
  %204 = load i64, i64* %PC
  switch i64 %204, label %270 [
    i64 4196362, label %block_40080a
    i64 4196357, label %block_400805
  ]

block_40080a:                                     ; preds = %block_4007fd
  %205 = load i64, i64* %RAX
  %206 = load i64, i64* %RAX
  %207 = add i64 %206, %205
  %208 = load i16, i16* %AX
  %209 = zext i16 %208 to i64
  %210 = load i64, i64* %PC
  %211 = add i64 %210, 6
  store i64 %211, i64* %PC
  %212 = load i64, i64* %PC
  %213 = tail call %struct.Memory* @sub_400810___do_global_dtors_aux(%struct.State* %0, i64 %212, %struct.Memory* %2)
  ret %struct.Memory* %213

block_4007f3:                                     ; preds = %block_4007d0
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 5
  store i64 %215, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %216 = load i64, i64* %RAX
  %217 = load i64, i64* %RAX
  %218 = load i64, i64* %PC
  %219 = add i64 %218, 3
  store i64 %219, i64* %PC
  %220 = and i64 %217, %216
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %221, align 1, !tbaa !2434
  %222 = trunc i64 %220 to i32
  %223 = and i32 %222, 255
  %224 = call i32 @llvm.ctpop.i32(i32 %223) #17
  %225 = trunc i32 %224 to i8
  %226 = and i8 %225, 1
  %227 = xor i8 %226, 1
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %227, i8* %228, align 1, !tbaa !2448
  %229 = icmp eq i64 %220, 0
  %230 = zext i1 %229 to i8
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %230, i8* %231, align 1, !tbaa !2450
  %232 = lshr i64 %220, 63
  %233 = trunc i64 %232 to i8
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %233, i8* %234, align 1, !tbaa !2451
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %235, align 1, !tbaa !2452
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %236, align 1, !tbaa !2449
  %237 = load i64, i64* %PC
  %238 = add i64 %237, 13
  %239 = load i64, i64* %PC
  %240 = add i64 %239, 2
  %241 = load i64, i64* %PC
  %242 = add i64 %241, 2
  store i64 %242, i64* %PC
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %244 = load i8, i8* %243, align 1, !tbaa !2450
  store i8 %244, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %246 = icmp ne i8 %244, 0
  %247 = select i1 %246, i64 %238, i64 %240
  store i64 %247, i64* %245, align 8, !tbaa !2428
  %248 = load i8, i8* %BRANCH_TAKEN
  %249 = icmp eq i8 %248, 1
  br i1 %249, label %block_400808, label %block_4007fd

block_400808:                                     ; preds = %block_400805, %block_4007f3, %block_4007d0
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_4007d0 ], [ %2, %block_4007f3 ], [ %2, %block_400805 ]
  %250 = load i64, i64* %PC
  %251 = add i64 %250, 1
  store i64 %251, i64* %PC
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %253 = load i64, i64* %252, align 8, !tbaa !2428
  %254 = add i64 %253, 8
  %255 = inttoptr i64 %253 to i64*
  %256 = load i64, i64* %255
  store i64 %256, i64* %RBP, align 8, !tbaa !2428
  store i64 %254, i64* %252, align 8, !tbaa !2428
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 1
  store i64 %258, i64* %PC
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %261 = load i64, i64* %260, align 8, !tbaa !2428
  %262 = inttoptr i64 %261 to i64*
  %263 = load i64, i64* %262
  store i64 %263, i64* %259, align 8, !tbaa !2428
  %264 = add i64 %261, 8
  store i64 %264, i64* %260, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_400805:                                     ; preds = %block_4007fd
  %265 = load i64, i64* %RAX
  %266 = load i32, i32* %EAX
  %267 = zext i32 %266 to i64
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 3
  store i64 %269, i64* %PC
  br label %block_400808

; <label>:270:                                    ; preds = %block_4007fd
  %271 = load i64, i64* %PC
  %272 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %271, %struct.Memory* %2)
  ret %struct.Memory* %272
}

; Function Attrs: noinline
define %struct.Memory* @sub_400760__start(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400760:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBP = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 7
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 9
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 11
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RDI = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 13
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RSP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 15
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RBP = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 17
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %R8 = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 19
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %R9 = bitcast %union.anon* %35 to i64*
  %36 = load i64, i64* %RBP
  %37 = load i32, i32* %EBP
  %38 = zext i32 %37 to i64
  %39 = load i64, i64* %PC
  %40 = add i64 %39, 2
  store i64 %40, i64* %PC
  %41 = xor i64 %38, %36
  %42 = trunc i64 %41 to i32
  %43 = and i64 %41, 4294967295
  store i64 %43, i64* %RBP, align 8, !tbaa !2428
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %44, align 1, !tbaa !2434
  %45 = and i32 %42, 255
  %46 = call i32 @llvm.ctpop.i32(i32 %45) #17
  %47 = trunc i32 %46 to i8
  %48 = and i8 %47, 1
  %49 = xor i8 %48, 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %49, i8* %50, align 1, !tbaa !2448
  %51 = icmp eq i32 %42, 0
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %52, i8* %53, align 1, !tbaa !2450
  %54 = lshr i32 %42, 31
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %55, i8* %56, align 1, !tbaa !2451
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %57, align 1, !tbaa !2452
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %58, align 1, !tbaa !2449
  %59 = load i64, i64* %RDX
  %60 = load i64, i64* %PC
  %61 = add i64 %60, 3
  store i64 %61, i64* %PC
  store i64 %59, i64* %R9, align 8, !tbaa !2428
  %62 = load i64, i64* %PC
  %63 = add i64 %62, 1
  store i64 %63, i64* %PC
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %65 = load i64, i64* %64, align 8, !tbaa !2428
  %66 = add i64 %65, 8
  %67 = inttoptr i64 %65 to i64*
  %68 = load i64, i64* %67
  store i64 %68, i64* %RSI, align 8, !tbaa !2428
  store i64 %66, i64* %64, align 8, !tbaa !2428
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RDX, align 8, !tbaa !2428
  %72 = load i64, i64* %RSP
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = and i64 -16, %72
  store i64 %75, i64* %RSP, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %76, align 1, !tbaa !2434
  %77 = trunc i64 %75 to i32
  %78 = and i32 %77, 255
  %79 = call i32 @llvm.ctpop.i32(i32 %78) #17
  %80 = trunc i32 %79 to i8
  %81 = and i8 %80, 1
  %82 = xor i8 %81, 1
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %82, i8* %83, align 1, !tbaa !2448
  %84 = icmp eq i64 %75, 0
  %85 = zext i1 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %85, i8* %86, align 1, !tbaa !2450
  %87 = lshr i64 %75, 63
  %88 = trunc i64 %87 to i8
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %88, i8* %89, align 1, !tbaa !2451
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %90, align 1, !tbaa !2452
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %91, align 1, !tbaa !2449
  %92 = load i64, i64* %RAX
  %93 = load i64, i64* %PC
  %94 = add i64 %93, 1
  store i64 %94, i64* %PC
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %96 = load i64, i64* %95, align 8, !tbaa !2428
  %97 = add i64 %96, -8
  %98 = inttoptr i64 %97 to i64*
  store i64 %92, i64* %98
  store i64 %97, i64* %95, align 8, !tbaa !2428
  %99 = load i64, i64* %RSP
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 1
  store i64 %101, i64* %PC
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %103 = load i64, i64* %102, align 8, !tbaa !2428
  %104 = add i64 %103, -8
  %105 = inttoptr i64 %104 to i64*
  store i64 %99, i64* %105
  store i64 %104, i64* %102, align 8, !tbaa !2428
  %106 = load i64, i64* %PC
  %107 = add i64 %106, 7
  store i64 %107, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_4018e0___libc_csu_fini to i64), i64* %R8, align 8, !tbaa !2428
  %108 = load i64, i64* %PC
  %109 = add i64 %108, 7
  store i64 %109, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_401870___libc_csu_init to i64), i64* %RCX, align 8, !tbaa !2428
  %110 = load i64, i64* %PC
  %111 = add i64 %110, 7
  store i64 %111, i64* %PC
  store i64 ptrtoint (void ()* @main to i64), i64* %RDI, align 8, !tbaa !2428
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 6
  %114 = load i64, i64* %PC
  %115 = add i64 %114, 6
  store i64 %115, i64* %PC
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %117 = load i64, i64* %116, align 8, !tbaa !2428
  %118 = add i64 %117, -8
  %119 = inttoptr i64 %118 to i64*
  store i64 %113, i64* %119
  store i64 %118, i64* %116, align 8, !tbaa !2428
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %121 = load i64, i64* getelementptr inbounds (%seg_601ff0__got_type, %seg_601ff0__got_type* @seg_601ff0__got, i32 0, i32 0)
  store i64 %121, i64* %120, align 8, !tbaa !2428
  %122 = load i64, i64* %PC
  %123 = call %struct.Memory* @ext_602178___libc_start_main(%struct.State* %0, i64 %122, %struct.Memory* %2)
  %124 = load i64, i64* %PC
  %125 = add i64 %124, 1
  store i64 %125, i64* %PC
  %126 = load i64, i64* %PC
  %127 = tail call %struct.Memory* @__remill_error(%struct.State* %0, i64 %126, %struct.Memory* %123)
  ret %struct.Memory* %127
}

; Function Attrs: noinline
define %struct.Memory* @sub_400840_frame_dummy(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400840:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 1
  store i64 %14, i64* %PC
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !tbaa !2428
  %17 = add i64 %16, -8
  %18 = inttoptr i64 %17 to i64*
  store i64 %12, i64* %18
  store i64 %17, i64* %15, align 8, !tbaa !2428
  %19 = load i64, i64* %RSP
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  store i64 %19, i64* %RBP, align 8, !tbaa !2428
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 1
  store i64 %23, i64* %PC
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %25 = load i64, i64* %24, align 8, !tbaa !2428
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %25 to i64*
  %28 = load i64, i64* %27
  store i64 %28, i64* %RBP, align 8, !tbaa !2428
  store i64 %26, i64* %24, align 8, !tbaa !2428
  %29 = load i64, i64* %PC
  %30 = sub i64 %29, 117
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 2
  store i64 %32, i64* %PC
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %30, i64* %33, align 8, !tbaa !2428
  %34 = load i64, i64* %PC
  %35 = tail call %struct.Memory* @sub_4007d0_register_tm_clones(%struct.State* %0, i64 %34, %struct.Memory* %2)
  ret %struct.Memory* %35
}

; Function Attrs: noinline
define %struct.Memory* @sub_401780_P3(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401780:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 15
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RBP = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %16 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %15, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %16 to %"class.std::bitset"*
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %18 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %17, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %18 to %"class.std::bitset"*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %20 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %19, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %20 to %union.vec128_t*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %22 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %21, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %22 to %union.vec128_t*
  %23 = load i64, i64* %RBP
  %24 = load i64, i64* %PC
  %25 = add i64 %24, 1
  store i64 %25, i64* %PC
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %27 = load i64, i64* %26, align 8, !tbaa !2428
  %28 = add i64 %27, -8
  %29 = inttoptr i64 %28 to i64*
  store i64 %23, i64* %29
  store i64 %28, i64* %26, align 8, !tbaa !2428
  %30 = load i64, i64* %RSP
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 3
  store i64 %32, i64* %PC
  store i64 %30, i64* %RBP, align 8, !tbaa !2428
  %33 = load i64, i64* %RBP
  %34 = sub i64 %33, 8
  %35 = bitcast %union.vec128_t* %XMM0 to i8*
  %36 = load i64, i64* %PC
  %37 = add i64 %36, 5
  store i64 %37, i64* %PC
  %38 = bitcast i8* %35 to double*
  %39 = load double, double* %38, align 1
  %40 = inttoptr i64 %34 to double*
  store double %39, double* %40
  %41 = load i64, i64* %RBP
  %42 = sub i64 %41, 16
  %43 = bitcast %union.vec128_t* %XMM1 to i8*
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 5
  store i64 %45, i64* %PC
  %46 = bitcast i8* %43 to double*
  %47 = load double, double* %46, align 1
  %48 = inttoptr i64 %42 to double*
  store double %47, double* %48
  %49 = load i64, i64* %RBP
  %50 = sub i64 %49, 24
  %51 = load i64, i64* %RDI
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 4
  store i64 %53, i64* %PC
  %54 = inttoptr i64 %50 to i64*
  store i64 %51, i64* %54
  %55 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %56 = load i64, i64* %RBP
  %57 = sub i64 %56, 8
  %58 = load i64, i64* %PC
  %59 = add i64 %58, 5
  store i64 %59, i64* %PC
  %60 = inttoptr i64 %57 to double*
  %61 = load double, double* %60
  %62 = bitcast i8* %55 to double*
  store double %61, double* %62, align 1, !tbaa !2432
  %63 = getelementptr inbounds i8, i8* %55, i64 8
  %64 = bitcast i8* %63 to double*
  store double 0.000000e+00, double* %64, align 1, !tbaa !2432
  %65 = load i64, i64* %RBP
  %66 = sub i64 %65, 32
  %67 = bitcast %union.vec128_t* %XMM0 to i8*
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 5
  store i64 %69, i64* %PC
  %70 = bitcast i8* %67 to double*
  %71 = load double, double* %70, align 1
  %72 = inttoptr i64 %66 to double*
  store double %71, double* %72
  %73 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %74 = load i64, i64* %RBP
  %75 = sub i64 %74, 16
  %76 = load i64, i64* %PC
  %77 = add i64 %76, 5
  store i64 %77, i64* %PC
  %78 = inttoptr i64 %75 to double*
  %79 = load double, double* %78
  %80 = bitcast i8* %73 to double*
  store double %79, double* %80, align 1, !tbaa !2432
  %81 = getelementptr inbounds i8, i8* %73, i64 8
  %82 = bitcast i8* %81 to double*
  store double 0.000000e+00, double* %82, align 1, !tbaa !2432
  %83 = load i64, i64* %RBP
  %84 = sub i64 %83, 40
  %85 = bitcast %union.vec128_t* %XMM0 to i8*
  %86 = load i64, i64* %PC
  %87 = add i64 %86, 5
  store i64 %87, i64* %PC
  %88 = bitcast i8* %85 to double*
  %89 = load double, double* %88, align 1
  %90 = inttoptr i64 %84 to double*
  store double %89, double* %90
  %91 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %92 = load i64, i64* %PC
  %93 = add i64 %92, 9
  store i64 %93, i64* %PC
  %94 = load double, double* bitcast (%T_type* @T to double*)
  %95 = bitcast i8* %91 to double*
  store double %94, double* %95, align 1, !tbaa !2432
  %96 = getelementptr inbounds i8, i8* %91, i64 8
  %97 = bitcast i8* %96 to double*
  store double 0.000000e+00, double* %97, align 1, !tbaa !2432
  %98 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %99 = load i64, i64* %RBP
  %100 = sub i64 %99, 32
  %101 = load i64, i64* %PC
  %102 = add i64 %101, 5
  store i64 %102, i64* %PC
  %103 = inttoptr i64 %100 to double*
  %104 = load double, double* %103
  %105 = bitcast i8* %98 to double*
  store double %104, double* %105, align 1, !tbaa !2432
  %106 = getelementptr inbounds i8, i8* %98, i64 8
  %107 = bitcast i8* %106 to double*
  store double 0.000000e+00, double* %107, align 1, !tbaa !2432
  %108 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %109 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %110 = load i64, i64* %RBP
  %111 = sub i64 %110, 40
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 5
  store i64 %113, i64* %PC
  %114 = bitcast i8* %109 to double*
  %115 = load double, double* %114, align 1
  %116 = getelementptr inbounds i8, i8* %109, i64 8
  %117 = bitcast i8* %116 to i64*
  %118 = load i64, i64* %117, align 1
  %119 = inttoptr i64 %111 to double*
  %120 = load double, double* %119
  %121 = fadd double %115, %120
  %122 = bitcast i8* %108 to double*
  store double %121, double* %122, align 1, !tbaa !2432
  %123 = getelementptr inbounds i8, i8* %108, i64 8
  %124 = bitcast i8* %123 to i64*
  store i64 %118, i64* %124, align 1, !tbaa !2432
  %125 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %126 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %127 = bitcast %union.vec128_t* %XMM1 to i8*
  %128 = load i64, i64* %PC
  %129 = add i64 %128, 4
  store i64 %129, i64* %PC
  %130 = bitcast i8* %126 to double*
  %131 = load double, double* %130, align 1
  %132 = getelementptr inbounds i8, i8* %126, i64 8
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 1
  %135 = bitcast i8* %127 to double*
  %136 = load double, double* %135, align 1
  %137 = fmul double %131, %136
  %138 = bitcast i8* %125 to double*
  store double %137, double* %138, align 1, !tbaa !2432
  %139 = getelementptr inbounds i8, i8* %125, i64 8
  %140 = bitcast i8* %139 to i64*
  store i64 %134, i64* %140, align 1, !tbaa !2432
  %141 = load i64, i64* %RBP
  %142 = sub i64 %141, 32
  %143 = bitcast %union.vec128_t* %XMM0 to i8*
  %144 = load i64, i64* %PC
  %145 = add i64 %144, 5
  store i64 %145, i64* %PC
  %146 = bitcast i8* %143 to double*
  %147 = load double, double* %146, align 1
  %148 = inttoptr i64 %142 to double*
  store double %147, double* %148
  %149 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %150 = load i64, i64* %PC
  %151 = add i64 %150, 9
  store i64 %151, i64* %PC
  %152 = load double, double* bitcast (%T_type* @T to double*)
  %153 = bitcast i8* %149 to double*
  store double %152, double* %153, align 1, !tbaa !2432
  %154 = getelementptr inbounds i8, i8* %149, i64 8
  %155 = bitcast i8* %154 to double*
  store double 0.000000e+00, double* %155, align 1, !tbaa !2432
  %156 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %157 = load i64, i64* %RBP
  %158 = sub i64 %157, 32
  %159 = load i64, i64* %PC
  %160 = add i64 %159, 5
  store i64 %160, i64* %PC
  %161 = inttoptr i64 %158 to double*
  %162 = load double, double* %161
  %163 = bitcast i8* %156 to double*
  store double %162, double* %163, align 1, !tbaa !2432
  %164 = getelementptr inbounds i8, i8* %156, i64 8
  %165 = bitcast i8* %164 to double*
  store double 0.000000e+00, double* %165, align 1, !tbaa !2432
  %166 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %167 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %168 = load i64, i64* %RBP
  %169 = sub i64 %168, 40
  %170 = load i64, i64* %PC
  %171 = add i64 %170, 5
  store i64 %171, i64* %PC
  %172 = bitcast i8* %167 to double*
  %173 = load double, double* %172, align 1
  %174 = getelementptr inbounds i8, i8* %167, i64 8
  %175 = bitcast i8* %174 to i64*
  %176 = load i64, i64* %175, align 1
  %177 = inttoptr i64 %169 to double*
  %178 = load double, double* %177
  %179 = fadd double %173, %178
  %180 = bitcast i8* %166 to double*
  store double %179, double* %180, align 1, !tbaa !2432
  %181 = getelementptr inbounds i8, i8* %166, i64 8
  %182 = bitcast i8* %181 to i64*
  store i64 %176, i64* %182, align 1, !tbaa !2432
  %183 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %184 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %185 = bitcast %union.vec128_t* %XMM1 to i8*
  %186 = load i64, i64* %PC
  %187 = add i64 %186, 4
  store i64 %187, i64* %PC
  %188 = bitcast i8* %184 to double*
  %189 = load double, double* %188, align 1
  %190 = getelementptr inbounds i8, i8* %184, i64 8
  %191 = bitcast i8* %190 to i64*
  %192 = load i64, i64* %191, align 1
  %193 = bitcast i8* %185 to double*
  %194 = load double, double* %193, align 1
  %195 = fmul double %189, %194
  %196 = bitcast i8* %183 to double*
  store double %195, double* %196, align 1, !tbaa !2432
  %197 = getelementptr inbounds i8, i8* %183, i64 8
  %198 = bitcast i8* %197 to i64*
  store i64 %192, i64* %198, align 1, !tbaa !2432
  %199 = load i64, i64* %RBP
  %200 = sub i64 %199, 40
  %201 = bitcast %union.vec128_t* %XMM0 to i8*
  %202 = load i64, i64* %PC
  %203 = add i64 %202, 5
  store i64 %203, i64* %PC
  %204 = bitcast i8* %201 to double*
  %205 = load double, double* %204, align 1
  %206 = inttoptr i64 %200 to double*
  store double %205, double* %206
  %207 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %208 = load i64, i64* %RBP
  %209 = sub i64 %208, 32
  %210 = load i64, i64* %PC
  %211 = add i64 %210, 5
  store i64 %211, i64* %PC
  %212 = inttoptr i64 %209 to double*
  %213 = load double, double* %212
  %214 = bitcast i8* %207 to double*
  store double %213, double* %214, align 1, !tbaa !2432
  %215 = getelementptr inbounds i8, i8* %207, i64 8
  %216 = bitcast i8* %215 to double*
  store double 0.000000e+00, double* %216, align 1, !tbaa !2432
  %217 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %218 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %219 = load i64, i64* %RBP
  %220 = sub i64 %219, 40
  %221 = load i64, i64* %PC
  %222 = add i64 %221, 5
  store i64 %222, i64* %PC
  %223 = bitcast i8* %218 to double*
  %224 = load double, double* %223, align 1
  %225 = getelementptr inbounds i8, i8* %218, i64 8
  %226 = bitcast i8* %225 to i64*
  %227 = load i64, i64* %226, align 1
  %228 = inttoptr i64 %220 to double*
  %229 = load double, double* %228
  %230 = fadd double %224, %229
  %231 = bitcast i8* %217 to double*
  store double %230, double* %231, align 1, !tbaa !2432
  %232 = getelementptr inbounds i8, i8* %217, i64 8
  %233 = bitcast i8* %232 to i64*
  store i64 %227, i64* %233, align 1, !tbaa !2432
  %234 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %235 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %236 = load i64, i64* %PC
  %237 = add i64 %236, 9
  store i64 %237, i64* %PC
  %238 = bitcast i8* %235 to double*
  %239 = load double, double* %238, align 1
  %240 = getelementptr inbounds i8, i8* %235, i64 8
  %241 = bitcast i8* %240 to i64*
  %242 = load i64, i64* %241, align 1
  %243 = load double, double* bitcast (%T2_type* @T2 to double*)
  %244 = fdiv double %239, %243
  %245 = bitcast i8* %234 to double*
  store double %244, double* %245, align 1, !tbaa !2432
  %246 = getelementptr inbounds i8, i8* %234, i64 8
  %247 = bitcast i8* %246 to i64*
  store i64 %242, i64* %247, align 1, !tbaa !2432
  %248 = load i64, i64* %RBP
  %249 = sub i64 %248, 24
  %250 = load i64, i64* %PC
  %251 = add i64 %250, 4
  store i64 %251, i64* %PC
  %252 = inttoptr i64 %249 to i64*
  %253 = load i64, i64* %252
  store i64 %253, i64* %RDI, align 8, !tbaa !2428
  %254 = load i64, i64* %RDI
  %255 = bitcast %union.vec128_t* %XMM0 to i8*
  %256 = load i64, i64* %PC
  %257 = add i64 %256, 4
  store i64 %257, i64* %PC
  %258 = bitcast i8* %255 to double*
  %259 = load double, double* %258, align 1
  %260 = inttoptr i64 %254 to double*
  store double %259, double* %260
  %261 = load i64, i64* %PC
  %262 = add i64 %261, 1
  store i64 %262, i64* %PC
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %264 = load i64, i64* %263, align 8, !tbaa !2428
  %265 = add i64 %264, 8
  %266 = inttoptr i64 %264 to i64*
  %267 = load i64, i64* %266
  store i64 %267, i64* %RBP, align 8, !tbaa !2428
  store i64 %265, i64* %263, align 8, !tbaa !2428
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 1
  store i64 %269, i64* %PC
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %272 = load i64, i64* %271, align 8, !tbaa !2428
  %273 = inttoptr i64 %272 to i64*
  %274 = load i64, i64* %273
  store i64 %274, i64* %270, align 8, !tbaa !2428
  %275 = add i64 %272, 8
  store i64 %275, i64* %271, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_4018e0___libc_csu_fini(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4018e0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400850_main(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400850:
  %state.i1432 = alloca %struct.State*, align 8
  %curr_pc.i1433 = alloca i64, align 8
  %memory.i1434 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i1435 = alloca i8, align 1
  %SS_BASE.i1436 = alloca i64, align 8
  %ES_BASE.i1437 = alloca i64, align 8
  %DS_BASE.i1438 = alloca i64, align 8
  %CS_BASE.i1439 = alloca i64, align 8
  %STATE.i1440 = alloca %struct.State*, align 8
  %MEMORY.i1441 = alloca %struct.Memory*, align 8
  %_DR0.i1442 = alloca i64*, align 8
  %_DR1.i1443 = alloca i64*, align 8
  %_DR2.i1444 = alloca i64*, align 8
  %_DR3.i1445 = alloca i64*, align 8
  %_DR4.i1446 = alloca i64*, align 8
  %_DR5.i1447 = alloca i64*, align 8
  %_DR6.i1448 = alloca i64*, align 8
  %_DR7.i1449 = alloca i64*, align 8
  %CR0.i1450 = alloca i64*, align 8
  %CR1.i1451 = alloca i64*, align 8
  %CR2.i1452 = alloca i64*, align 8
  %CR3.i1453 = alloca i64*, align 8
  %CR4.i1454 = alloca i64*, align 8
  %CR8.i1455 = alloca i64*, align 8
  %state.i1273 = alloca %struct.State*, align 8
  %curr_pc.i1274 = alloca i64, align 8
  %memory.i1275 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i1276 = alloca i8, align 1
  %SS_BASE.i1277 = alloca i64, align 8
  %ES_BASE.i1278 = alloca i64, align 8
  %DS_BASE.i1279 = alloca i64, align 8
  %CS_BASE.i1280 = alloca i64, align 8
  %STATE.i1281 = alloca %struct.State*, align 8
  %MEMORY.i1282 = alloca %struct.Memory*, align 8
  %_DR0.i1283 = alloca i64*, align 8
  %_DR1.i1284 = alloca i64*, align 8
  %_DR2.i1285 = alloca i64*, align 8
  %_DR3.i1286 = alloca i64*, align 8
  %_DR4.i1287 = alloca i64*, align 8
  %_DR5.i1288 = alloca i64*, align 8
  %_DR6.i1289 = alloca i64*, align 8
  %_DR7.i1290 = alloca i64*, align 8
  %CR0.i1291 = alloca i64*, align 8
  %CR1.i1292 = alloca i64*, align 8
  %CR2.i1293 = alloca i64*, align 8
  %CR3.i1294 = alloca i64*, align 8
  %CR4.i1295 = alloca i64*, align 8
  %CR8.i1296 = alloca i64*, align 8
  %state.i1114 = alloca %struct.State*, align 8
  %curr_pc.i1115 = alloca i64, align 8
  %memory.i1116 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i1117 = alloca i8, align 1
  %SS_BASE.i1118 = alloca i64, align 8
  %ES_BASE.i1119 = alloca i64, align 8
  %DS_BASE.i1120 = alloca i64, align 8
  %CS_BASE.i1121 = alloca i64, align 8
  %STATE.i1122 = alloca %struct.State*, align 8
  %MEMORY.i1123 = alloca %struct.Memory*, align 8
  %_DR0.i1124 = alloca i64*, align 8
  %_DR1.i1125 = alloca i64*, align 8
  %_DR2.i1126 = alloca i64*, align 8
  %_DR3.i1127 = alloca i64*, align 8
  %_DR4.i1128 = alloca i64*, align 8
  %_DR5.i1129 = alloca i64*, align 8
  %_DR6.i1130 = alloca i64*, align 8
  %_DR7.i1131 = alloca i64*, align 8
  %CR0.i1132 = alloca i64*, align 8
  %CR1.i1133 = alloca i64*, align 8
  %CR2.i1134 = alloca i64*, align 8
  %CR3.i1135 = alloca i64*, align 8
  %CR4.i1136 = alloca i64*, align 8
  %CR8.i1137 = alloca i64*, align 8
  %state.i955 = alloca %struct.State*, align 8
  %curr_pc.i956 = alloca i64, align 8
  %memory.i957 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i958 = alloca i8, align 1
  %SS_BASE.i959 = alloca i64, align 8
  %ES_BASE.i960 = alloca i64, align 8
  %DS_BASE.i961 = alloca i64, align 8
  %CS_BASE.i962 = alloca i64, align 8
  %STATE.i963 = alloca %struct.State*, align 8
  %MEMORY.i964 = alloca %struct.Memory*, align 8
  %_DR0.i965 = alloca i64*, align 8
  %_DR1.i966 = alloca i64*, align 8
  %_DR2.i967 = alloca i64*, align 8
  %_DR3.i968 = alloca i64*, align 8
  %_DR4.i969 = alloca i64*, align 8
  %_DR5.i970 = alloca i64*, align 8
  %_DR6.i971 = alloca i64*, align 8
  %_DR7.i972 = alloca i64*, align 8
  %CR0.i973 = alloca i64*, align 8
  %CR1.i974 = alloca i64*, align 8
  %CR2.i975 = alloca i64*, align 8
  %CR3.i976 = alloca i64*, align 8
  %CR4.i977 = alloca i64*, align 8
  %CR8.i978 = alloca i64*, align 8
  %state.i796 = alloca %struct.State*, align 8
  %curr_pc.i797 = alloca i64, align 8
  %memory.i798 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i799 = alloca i8, align 1
  %SS_BASE.i800 = alloca i64, align 8
  %ES_BASE.i801 = alloca i64, align 8
  %DS_BASE.i802 = alloca i64, align 8
  %CS_BASE.i803 = alloca i64, align 8
  %STATE.i804 = alloca %struct.State*, align 8
  %MEMORY.i805 = alloca %struct.Memory*, align 8
  %_DR0.i806 = alloca i64*, align 8
  %_DR1.i807 = alloca i64*, align 8
  %_DR2.i808 = alloca i64*, align 8
  %_DR3.i809 = alloca i64*, align 8
  %_DR4.i810 = alloca i64*, align 8
  %_DR5.i811 = alloca i64*, align 8
  %_DR6.i812 = alloca i64*, align 8
  %_DR7.i813 = alloca i64*, align 8
  %CR0.i814 = alloca i64*, align 8
  %CR1.i815 = alloca i64*, align 8
  %CR2.i816 = alloca i64*, align 8
  %CR3.i817 = alloca i64*, align 8
  %CR4.i818 = alloca i64*, align 8
  %CR8.i819 = alloca i64*, align 8
  %state.i637 = alloca %struct.State*, align 8
  %curr_pc.i638 = alloca i64, align 8
  %memory.i639 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i640 = alloca i8, align 1
  %SS_BASE.i641 = alloca i64, align 8
  %ES_BASE.i642 = alloca i64, align 8
  %DS_BASE.i643 = alloca i64, align 8
  %CS_BASE.i644 = alloca i64, align 8
  %STATE.i645 = alloca %struct.State*, align 8
  %MEMORY.i646 = alloca %struct.Memory*, align 8
  %_DR0.i647 = alloca i64*, align 8
  %_DR1.i648 = alloca i64*, align 8
  %_DR2.i649 = alloca i64*, align 8
  %_DR3.i650 = alloca i64*, align 8
  %_DR4.i651 = alloca i64*, align 8
  %_DR5.i652 = alloca i64*, align 8
  %_DR6.i653 = alloca i64*, align 8
  %_DR7.i654 = alloca i64*, align 8
  %CR0.i655 = alloca i64*, align 8
  %CR1.i656 = alloca i64*, align 8
  %CR2.i657 = alloca i64*, align 8
  %CR3.i658 = alloca i64*, align 8
  %CR4.i659 = alloca i64*, align 8
  %CR8.i660 = alloca i64*, align 8
  %state.i478 = alloca %struct.State*, align 8
  %curr_pc.i479 = alloca i64, align 8
  %memory.i480 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i481 = alloca i8, align 1
  %SS_BASE.i482 = alloca i64, align 8
  %ES_BASE.i483 = alloca i64, align 8
  %DS_BASE.i484 = alloca i64, align 8
  %CS_BASE.i485 = alloca i64, align 8
  %STATE.i486 = alloca %struct.State*, align 8
  %MEMORY.i487 = alloca %struct.Memory*, align 8
  %_DR0.i488 = alloca i64*, align 8
  %_DR1.i489 = alloca i64*, align 8
  %_DR2.i490 = alloca i64*, align 8
  %_DR3.i491 = alloca i64*, align 8
  %_DR4.i492 = alloca i64*, align 8
  %_DR5.i493 = alloca i64*, align 8
  %_DR6.i494 = alloca i64*, align 8
  %_DR7.i495 = alloca i64*, align 8
  %CR0.i496 = alloca i64*, align 8
  %CR1.i497 = alloca i64*, align 8
  %CR2.i498 = alloca i64*, align 8
  %CR3.i499 = alloca i64*, align 8
  %CR4.i500 = alloca i64*, align 8
  %CR8.i501 = alloca i64*, align 8
  %state.i319 = alloca %struct.State*, align 8
  %curr_pc.i320 = alloca i64, align 8
  %memory.i321 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i322 = alloca i8, align 1
  %SS_BASE.i323 = alloca i64, align 8
  %ES_BASE.i324 = alloca i64, align 8
  %DS_BASE.i325 = alloca i64, align 8
  %CS_BASE.i326 = alloca i64, align 8
  %STATE.i327 = alloca %struct.State*, align 8
  %MEMORY.i328 = alloca %struct.Memory*, align 8
  %_DR0.i329 = alloca i64*, align 8
  %_DR1.i330 = alloca i64*, align 8
  %_DR2.i331 = alloca i64*, align 8
  %_DR3.i332 = alloca i64*, align 8
  %_DR4.i333 = alloca i64*, align 8
  %_DR5.i334 = alloca i64*, align 8
  %_DR6.i335 = alloca i64*, align 8
  %_DR7.i336 = alloca i64*, align 8
  %CR0.i337 = alloca i64*, align 8
  %CR1.i338 = alloca i64*, align 8
  %CR2.i339 = alloca i64*, align 8
  %CR3.i340 = alloca i64*, align 8
  %CR4.i341 = alloca i64*, align 8
  %CR8.i342 = alloca i64*, align 8
  %state.i160 = alloca %struct.State*, align 8
  %curr_pc.i161 = alloca i64, align 8
  %memory.i162 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i163 = alloca i8, align 1
  %SS_BASE.i164 = alloca i64, align 8
  %ES_BASE.i165 = alloca i64, align 8
  %DS_BASE.i166 = alloca i64, align 8
  %CS_BASE.i167 = alloca i64, align 8
  %STATE.i168 = alloca %struct.State*, align 8
  %MEMORY.i169 = alloca %struct.Memory*, align 8
  %_DR0.i170 = alloca i64*, align 8
  %_DR1.i171 = alloca i64*, align 8
  %_DR2.i172 = alloca i64*, align 8
  %_DR3.i173 = alloca i64*, align 8
  %_DR4.i174 = alloca i64*, align 8
  %_DR5.i175 = alloca i64*, align 8
  %_DR6.i176 = alloca i64*, align 8
  %_DR7.i177 = alloca i64*, align 8
  %CR0.i178 = alloca i64*, align 8
  %CR1.i179 = alloca i64*, align 8
  %CR2.i180 = alloca i64*, align 8
  %CR3.i181 = alloca i64*, align 8
  %CR4.i182 = alloca i64*, align 8
  %CR8.i183 = alloca i64*, align 8
  %state.i1 = alloca %struct.State*, align 8
  %curr_pc.i2 = alloca i64, align 8
  %memory.i3 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i4 = alloca i8, align 1
  %SS_BASE.i5 = alloca i64, align 8
  %ES_BASE.i6 = alloca i64, align 8
  %DS_BASE.i7 = alloca i64, align 8
  %CS_BASE.i8 = alloca i64, align 8
  %STATE.i9 = alloca %struct.State*, align 8
  %MEMORY.i10 = alloca %struct.Memory*, align 8
  %_DR0.i11 = alloca i64*, align 8
  %_DR1.i12 = alloca i64*, align 8
  %_DR2.i13 = alloca i64*, align 8
  %_DR3.i14 = alloca i64*, align 8
  %_DR4.i15 = alloca i64*, align 8
  %_DR5.i16 = alloca i64*, align 8
  %_DR6.i17 = alloca i64*, align 8
  %_DR7.i18 = alloca i64*, align 8
  %CR0.i19 = alloca i64*, align 8
  %CR1.i20 = alloca i64*, align 8
  %CR2.i21 = alloca i64*, align 8
  %CR3.i22 = alloca i64*, align 8
  %CR4.i23 = alloca i64*, align 8
  %CR8.i24 = alloca i64*, align 8
  %state.i = alloca %struct.State*, align 8
  %curr_pc.i = alloca i64, align 8
  %memory.i = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i = alloca i8, align 1
  %SS_BASE.i = alloca i64, align 8
  %ES_BASE.i = alloca i64, align 8
  %DS_BASE.i = alloca i64, align 8
  %CS_BASE.i = alloca i64, align 8
  %STATE.i = alloca %struct.State*, align 8
  %MEMORY.i = alloca %struct.Memory*, align 8
  %_DR0.i = alloca i64*, align 8
  %_DR1.i = alloca i64*, align 8
  %_DR2.i = alloca i64*, align 8
  %_DR3.i = alloca i64*, align 8
  %_DR4.i = alloca i64*, align 8
  %_DR5.i = alloca i64*, align 8
  %_DR6.i = alloca i64*, align 8
  %_DR7.i = alloca i64*, align 8
  %CR0.i = alloca i64*, align 8
  %CR1.i = alloca i64*, align 8
  %CR2.i = alloca i64*, align 8
  %CR3.i = alloca i64*, align 8
  %CR4.i = alloca i64*, align 8
  %CR8.i = alloca i64*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %EAX = bitcast %union.anon* %12 to i32*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 5
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %ECX = bitcast %union.anon* %15 to i32*
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17 = getelementptr inbounds %struct.GPR, %struct.GPR* %16, i32 0, i32 7
  %18 = getelementptr inbounds %struct.Reg, %struct.Reg* %17, i32 0, i32 0
  %EDX = bitcast %union.anon* %18 to i32*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 11
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %EDI = bitcast %union.anon* %21 to i32*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23 = getelementptr inbounds %struct.GPR, %struct.GPR* %22, i32 0, i32 1
  %24 = getelementptr inbounds %struct.Reg, %struct.Reg* %23, i32 0, i32 0
  %RAX = bitcast %union.anon* %24 to i64*
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26 = getelementptr inbounds %struct.GPR, %struct.GPR* %25, i32 0, i32 5
  %27 = getelementptr inbounds %struct.Reg, %struct.Reg* %26, i32 0, i32 0
  %RCX = bitcast %union.anon* %27 to i64*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29 = getelementptr inbounds %struct.GPR, %struct.GPR* %28, i32 0, i32 7
  %30 = getelementptr inbounds %struct.Reg, %struct.Reg* %29, i32 0, i32 0
  %RDX = bitcast %union.anon* %30 to i64*
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 9
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %RSI = bitcast %union.anon* %33 to i64*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35 = getelementptr inbounds %struct.GPR, %struct.GPR* %34, i32 0, i32 11
  %36 = getelementptr inbounds %struct.Reg, %struct.Reg* %35, i32 0, i32 0
  %RDI = bitcast %union.anon* %36 to i64*
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %38 = getelementptr inbounds %struct.GPR, %struct.GPR* %37, i32 0, i32 13
  %39 = getelementptr inbounds %struct.Reg, %struct.Reg* %38, i32 0, i32 0
  %RSP = bitcast %union.anon* %39 to i64*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %41 = getelementptr inbounds %struct.GPR, %struct.GPR* %40, i32 0, i32 15
  %42 = getelementptr inbounds %struct.Reg, %struct.Reg* %41, i32 0, i32 0
  %RBP = bitcast %union.anon* %42 to i64*
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %44 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %43, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %44 to %"class.std::bitset"*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %46 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %45, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %46 to %"class.std::bitset"*
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %48 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %47, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %48 to %"class.std::bitset"*
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %50 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %49, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %50 to %"class.std::bitset"*
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %52 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %51, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %52 to %union.vec128_t*
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %54 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %53, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %54 to %union.vec128_t*
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %56 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %55, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %56 to %union.vec128_t*
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %58 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %57, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %58 to %union.vec128_t*
  %59 = load i64, i64* %RBP
  %60 = load i64, i64* %PC
  %61 = add i64 %60, 1
  store i64 %61, i64* %PC
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %63 = load i64, i64* %62, align 8, !tbaa !2428
  %64 = add i64 %63, -8
  %65 = inttoptr i64 %64 to i64*
  store i64 %59, i64* %65
  store i64 %64, i64* %62, align 8, !tbaa !2428
  %66 = load i64, i64* %RSP
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 3
  store i64 %68, i64* %PC
  store i64 %66, i64* %RBP, align 8, !tbaa !2428
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 7
  store i64 %71, i64* %PC
  %72 = sub i64 %69, 320
  store i64 %72, i64* %RSP, align 8, !tbaa !2428
  %73 = icmp ult i64 %69, 320
  %74 = zext i1 %73 to i8
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %74, i8* %75, align 1, !tbaa !2434
  %76 = trunc i64 %72 to i32
  %77 = and i32 %76, 255
  %78 = call i32 @llvm.ctpop.i32(i32 %77) #17
  %79 = trunc i32 %78 to i8
  %80 = and i8 %79, 1
  %81 = xor i8 %80, 1
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %81, i8* %82, align 1, !tbaa !2448
  %83 = xor i64 320, %69
  %84 = xor i64 %83, %72
  %85 = lshr i64 %84, 4
  %86 = trunc i64 %85 to i8
  %87 = and i8 %86, 1
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %87, i8* %88, align 1, !tbaa !2449
  %89 = icmp eq i64 %72, 0
  %90 = zext i1 %89 to i8
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %90, i8* %91, align 1, !tbaa !2450
  %92 = lshr i64 %72, 63
  %93 = trunc i64 %92 to i8
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %93, i8* %94, align 1, !tbaa !2451
  %95 = lshr i64 %69, 63
  %96 = xor i64 %92, %95
  %97 = add nuw nsw i64 %96, %95
  %98 = icmp eq i64 %97, 2
  %99 = zext i1 %98 to i8
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %99, i8* %100, align 1, !tbaa !2452
  %101 = load i64, i64* %RBP
  %102 = sub i64 %101, 4
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 7
  store i64 %104, i64* %PC
  %105 = inttoptr i64 %102 to i32*
  store i32 0, i32* %105
  %106 = load i64, i64* %RBP
  %107 = sub i64 %106, 8
  %108 = load i32, i32* %EDI
  %109 = zext i32 %108 to i64
  %110 = load i64, i64* %PC
  %111 = add i64 %110, 3
  store i64 %111, i64* %PC
  %112 = inttoptr i64 %107 to i32*
  store i32 %108, i32* %112
  %113 = load i64, i64* %RBP
  %114 = sub i64 %113, 16
  %115 = load i64, i64* %RSI
  %116 = load i64, i64* %PC
  %117 = add i64 %116, 4
  store i64 %117, i64* %PC
  %118 = inttoptr i64 %114 to i64*
  store i64 %115, i64* %118
  %119 = load i64, i64* %RBP
  %120 = sub i64 %119, 184
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 11
  store i64 %122, i64* %PC
  %123 = inttoptr i64 %120 to i64*
  store i64 100000, i64* %123
  %124 = load i64, i64* %RBP
  %125 = sub i64 %124, 208
  %126 = load i64, i64* %PC
  %127 = add i64 %126, 10
  store i64 %127, i64* %PC
  %128 = inttoptr i64 %125 to i32*
  store i32 0, i32* %128
  %129 = load i64, i64* %RBP
  %130 = sub i64 %129, 172
  %131 = load i64, i64* %PC
  %132 = add i64 %131, 10
  store i64 %132, i64* %PC
  %133 = inttoptr i64 %130 to i32*
  store i32 1, i32* %133
  br label %block_400888

block_400e62:                                     ; preds = %block_400e50
  %134 = load i64, i64* %RBP
  %135 = sub i64 %134, 56
  %136 = load i64, i64* %PC
  %137 = add i64 %136, 4
  store i64 %137, i64* %PC
  %138 = inttoptr i64 %135 to i64*
  %139 = load i64, i64* %138
  store i64 %139, i64* %RDI, align 8, !tbaa !2428
  %140 = load i64, i64* %PC
  %141 = add i64 %140, 8
  store i64 %141, i64* %PC
  %142 = load i32, i32* bitcast (%J_type* @J to i32*)
  %143 = sext i32 %142 to i64
  store i64 %143, i64* %RSI, align 8, !tbaa !2428
  %144 = load i64, i64* %PC
  %145 = add i64 %144, 8
  store i64 %145, i64* %PC
  %146 = load i32, i32* bitcast (%J_type* @J to i32*)
  %147 = sext i32 %146 to i64
  store i64 %147, i64* %RDX, align 8, !tbaa !2428
  %148 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %149 = load i64, i64* %RBP
  %150 = sub i64 %149, 112
  %151 = load i64, i64* %PC
  %152 = add i64 %151, 5
  store i64 %152, i64* %PC
  %153 = inttoptr i64 %150 to double*
  %154 = load double, double* %153
  %155 = bitcast i8* %148 to double*
  store double %154, double* %155, align 1, !tbaa !2432
  %156 = getelementptr inbounds i8, i8* %148, i64 8
  %157 = bitcast i8* %156 to double*
  store double 0.000000e+00, double* %157, align 1, !tbaa !2432
  %158 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %159 = load i64, i64* %RBP
  %160 = sub i64 %159, 120
  %161 = load i64, i64* %PC
  %162 = add i64 %161, 5
  store i64 %162, i64* %PC
  %163 = inttoptr i64 %160 to double*
  %164 = load double, double* %163
  %165 = bitcast i8* %158 to double*
  store double %164, double* %165, align 1, !tbaa !2432
  %166 = getelementptr inbounds i8, i8* %158, i64 8
  %167 = bitcast i8* %166 to double*
  store double 0.000000e+00, double* %167, align 1, !tbaa !2432
  %168 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %169 = load i64, i64* %RBP
  %170 = sub i64 %169, 128
  %171 = load i64, i64* %PC
  %172 = add i64 %171, 5
  store i64 %172, i64* %PC
  %173 = inttoptr i64 %170 to double*
  %174 = load double, double* %173
  %175 = bitcast i8* %168 to double*
  store double %174, double* %175, align 1, !tbaa !2432
  %176 = getelementptr inbounds i8, i8* %168, i64 8
  %177 = bitcast i8* %176 to double*
  store double 0.000000e+00, double* %177, align 1, !tbaa !2432
  %178 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %179 = load i64, i64* %RBP
  %180 = sub i64 %179, 136
  %181 = load i64, i64* %PC
  %182 = add i64 %181, 8
  store i64 %182, i64* %PC
  %183 = inttoptr i64 %180 to double*
  %184 = load double, double* %183
  %185 = bitcast i8* %178 to double*
  store double %184, double* %185, align 1, !tbaa !2432
  %186 = getelementptr inbounds i8, i8* %178, i64 8
  %187 = bitcast i8* %186 to double*
  store double 0.000000e+00, double* %187, align 1, !tbaa !2432
  %188 = load i64, i64* %PC
  %189 = add i64 %188, 1875
  %190 = load i64, i64* %PC
  %191 = add i64 %190, 5
  %192 = load i64, i64* %PC
  %193 = add i64 %192, 5
  store i64 %193, i64* %PC
  %194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %195 = load i64, i64* %194, align 8, !tbaa !2428
  %196 = add i64 %195, -8
  %197 = inttoptr i64 %196 to i64*
  store i64 %191, i64* %197
  store i64 %196, i64* %194, align 8, !tbaa !2428
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %189, i64* %198, align 8, !tbaa !2428
  %199 = load i64, i64* %PC
  %200 = call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %199, %struct.Memory* %MEMORY.11)
  br label %block_400e92

block_400bda:                                     ; preds = %block_400bcc
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 10
  store i64 %202, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %203 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %204 = load i64, i64* %PC
  %205 = add i64 %204, 9
  store i64 %205, i64* %PC
  %206 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %207 = bitcast i8* %203 to double*
  store double %206, double* %207, align 1, !tbaa !2432
  %208 = getelementptr inbounds i8, i8* %203, i64 8
  %209 = bitcast i8* %208 to double*
  store double 0.000000e+00, double* %209, align 1, !tbaa !2432
  %210 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %211 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %212 = load i64, i64* %PC
  %213 = add i64 %212, 9
  store i64 %213, i64* %PC
  %214 = bitcast i8* %211 to double*
  %215 = load double, double* %214, align 1
  %216 = getelementptr inbounds i8, i8* %211, i64 8
  %217 = bitcast i8* %216 to i64*
  %218 = load i64, i64* %217, align 1
  %219 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %220 = fadd double %215, %219
  %221 = bitcast i8* %210 to double*
  store double %220, double* %221, align 1, !tbaa !2432
  %222 = getelementptr inbounds i8, i8* %210, i64 8
  %223 = bitcast i8* %222 to i64*
  store i64 %218, i64* %223, align 1, !tbaa !2432
  %224 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %225 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %226 = load i64, i64* %PC
  %227 = add i64 %226, 9
  store i64 %227, i64* %PC
  %228 = bitcast i8* %225 to double*
  %229 = load double, double* %228, align 1
  %230 = getelementptr inbounds i8, i8* %225, i64 8
  %231 = bitcast i8* %230 to i64*
  %232 = load i64, i64* %231, align 1
  %233 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %234 = fadd double %229, %233
  %235 = bitcast i8* %224 to double*
  store double %234, double* %235, align 1, !tbaa !2432
  %236 = getelementptr inbounds i8, i8* %224, i64 8
  %237 = bitcast i8* %236 to i64*
  store i64 %232, i64* %237, align 1, !tbaa !2432
  %238 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %239 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %240 = load i64, i64* %PC
  %241 = add i64 %240, 9
  store i64 %241, i64* %PC
  %242 = bitcast i8* %239 to double*
  %243 = load double, double* %242, align 1
  %244 = getelementptr inbounds i8, i8* %239, i64 8
  %245 = bitcast i8* %244 to i64*
  %246 = load i64, i64* %245, align 1
  %247 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %248 = fsub double %243, %247
  %249 = bitcast i8* %238 to double*
  store double %248, double* %249, align 1, !tbaa !2432
  %250 = getelementptr inbounds i8, i8* %238, i64 8
  %251 = bitcast i8* %250 to i64*
  store i64 %246, i64* %251, align 1, !tbaa !2432
  %252 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %253 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %254 = load i64, i64* %PC
  %255 = add i64 %254, 9
  store i64 %255, i64* %PC
  %256 = bitcast i8* %253 to double*
  %257 = load double, double* %256, align 1
  %258 = getelementptr inbounds i8, i8* %253, i64 8
  %259 = bitcast i8* %258 to i64*
  %260 = load i64, i64* %259, align 1
  %261 = load double, double* bitcast (%T_type* @T to double*)
  %262 = fmul double %257, %261
  %263 = bitcast i8* %252 to double*
  store double %262, double* %263, align 1, !tbaa !2432
  %264 = getelementptr inbounds i8, i8* %252, i64 8
  %265 = bitcast i8* %264 to i64*
  store i64 %260, i64* %265, align 1, !tbaa !2432
  %266 = bitcast %union.vec128_t* %XMM0 to i8*
  %267 = load i64, i64* %PC
  %268 = add i64 %267, 9
  store i64 %268, i64* %PC
  %269 = bitcast i8* %266 to double*
  %270 = load double, double* %269, align 1
  store double %270, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %271 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %272 = load i64, i64* %PC
  %273 = add i64 %272, 9
  store i64 %273, i64* %PC
  %274 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %275 = bitcast i8* %271 to double*
  store double %274, double* %275, align 1, !tbaa !2432
  %276 = getelementptr inbounds i8, i8* %271, i64 8
  %277 = bitcast i8* %276 to double*
  store double 0.000000e+00, double* %277, align 1, !tbaa !2432
  %278 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %279 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %280 = load i64, i64* %PC
  %281 = add i64 %280, 9
  store i64 %281, i64* %PC
  %282 = bitcast i8* %279 to double*
  %283 = load double, double* %282, align 1
  %284 = getelementptr inbounds i8, i8* %279, i64 8
  %285 = bitcast i8* %284 to i64*
  %286 = load i64, i64* %285, align 1
  %287 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %288 = fadd double %283, %287
  %289 = bitcast i8* %278 to double*
  store double %288, double* %289, align 1, !tbaa !2432
  %290 = getelementptr inbounds i8, i8* %278, i64 8
  %291 = bitcast i8* %290 to i64*
  store i64 %286, i64* %291, align 1, !tbaa !2432
  %292 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %293 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %294 = load i64, i64* %PC
  %295 = add i64 %294, 9
  store i64 %295, i64* %PC
  %296 = bitcast i8* %293 to double*
  %297 = load double, double* %296, align 1
  %298 = getelementptr inbounds i8, i8* %293, i64 8
  %299 = bitcast i8* %298 to i64*
  %300 = load i64, i64* %299, align 1
  %301 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %302 = fsub double %297, %301
  %303 = bitcast i8* %292 to double*
  store double %302, double* %303, align 1, !tbaa !2432
  %304 = getelementptr inbounds i8, i8* %292, i64 8
  %305 = bitcast i8* %304 to i64*
  store i64 %300, i64* %305, align 1, !tbaa !2432
  %306 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %307 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %308 = load i64, i64* %PC
  %309 = add i64 %308, 9
  store i64 %309, i64* %PC
  %310 = bitcast i8* %307 to double*
  %311 = load double, double* %310, align 1
  %312 = getelementptr inbounds i8, i8* %307, i64 8
  %313 = bitcast i8* %312 to i64*
  %314 = load i64, i64* %313, align 1
  %315 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %316 = fadd double %311, %315
  %317 = bitcast i8* %306 to double*
  store double %316, double* %317, align 1, !tbaa !2432
  %318 = getelementptr inbounds i8, i8* %306, i64 8
  %319 = bitcast i8* %318 to i64*
  store i64 %314, i64* %319, align 1, !tbaa !2432
  %320 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %321 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %322 = load i64, i64* %PC
  %323 = add i64 %322, 9
  store i64 %323, i64* %PC
  %324 = bitcast i8* %321 to double*
  %325 = load double, double* %324, align 1
  %326 = getelementptr inbounds i8, i8* %321, i64 8
  %327 = bitcast i8* %326 to i64*
  %328 = load i64, i64* %327, align 1
  %329 = load double, double* bitcast (%T_type* @T to double*)
  %330 = fmul double %325, %329
  %331 = bitcast i8* %320 to double*
  store double %330, double* %331, align 1, !tbaa !2432
  %332 = getelementptr inbounds i8, i8* %320, i64 8
  %333 = bitcast i8* %332 to i64*
  store i64 %328, i64* %333, align 1, !tbaa !2432
  %334 = bitcast %union.vec128_t* %XMM0 to i8*
  %335 = load i64, i64* %PC
  %336 = add i64 %335, 9
  store i64 %336, i64* %PC
  %337 = bitcast i8* %334 to double*
  %338 = load double, double* %337, align 1
  store double %338, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %339 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %340 = load i64, i64* %PC
  %341 = add i64 %340, 9
  store i64 %341, i64* %PC
  %342 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %343 = bitcast i8* %339 to double*
  store double %342, double* %343, align 1, !tbaa !2432
  %344 = getelementptr inbounds i8, i8* %339, i64 8
  %345 = bitcast i8* %344 to double*
  store double 0.000000e+00, double* %345, align 1, !tbaa !2432
  %346 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %347 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %348 = load i64, i64* %PC
  %349 = add i64 %348, 9
  store i64 %349, i64* %PC
  %350 = bitcast i8* %347 to double*
  %351 = load double, double* %350, align 1
  %352 = getelementptr inbounds i8, i8* %347, i64 8
  %353 = bitcast i8* %352 to i64*
  %354 = load i64, i64* %353, align 1
  %355 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %356 = fsub double %351, %355
  %357 = bitcast i8* %346 to double*
  store double %356, double* %357, align 1, !tbaa !2432
  %358 = getelementptr inbounds i8, i8* %346, i64 8
  %359 = bitcast i8* %358 to i64*
  store i64 %354, i64* %359, align 1, !tbaa !2432
  %360 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %361 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %362 = load i64, i64* %PC
  %363 = add i64 %362, 9
  store i64 %363, i64* %PC
  %364 = bitcast i8* %361 to double*
  %365 = load double, double* %364, align 1
  %366 = getelementptr inbounds i8, i8* %361, i64 8
  %367 = bitcast i8* %366 to i64*
  %368 = load i64, i64* %367, align 1
  %369 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %370 = fadd double %365, %369
  %371 = bitcast i8* %360 to double*
  store double %370, double* %371, align 1, !tbaa !2432
  %372 = getelementptr inbounds i8, i8* %360, i64 8
  %373 = bitcast i8* %372 to i64*
  store i64 %368, i64* %373, align 1, !tbaa !2432
  %374 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %375 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %376 = load i64, i64* %PC
  %377 = add i64 %376, 9
  store i64 %377, i64* %PC
  %378 = bitcast i8* %375 to double*
  %379 = load double, double* %378, align 1
  %380 = getelementptr inbounds i8, i8* %375, i64 8
  %381 = bitcast i8* %380 to i64*
  %382 = load i64, i64* %381, align 1
  %383 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %384 = fadd double %379, %383
  %385 = bitcast i8* %374 to double*
  store double %384, double* %385, align 1, !tbaa !2432
  %386 = getelementptr inbounds i8, i8* %374, i64 8
  %387 = bitcast i8* %386 to i64*
  store i64 %382, i64* %387, align 1, !tbaa !2432
  %388 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %389 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %390 = load i64, i64* %PC
  %391 = add i64 %390, 9
  store i64 %391, i64* %PC
  %392 = bitcast i8* %389 to double*
  %393 = load double, double* %392, align 1
  %394 = getelementptr inbounds i8, i8* %389, i64 8
  %395 = bitcast i8* %394 to i64*
  %396 = load i64, i64* %395, align 1
  %397 = load double, double* bitcast (%T_type* @T to double*)
  %398 = fmul double %393, %397
  %399 = bitcast i8* %388 to double*
  store double %398, double* %399, align 1, !tbaa !2432
  %400 = getelementptr inbounds i8, i8* %388, i64 8
  %401 = bitcast i8* %400 to i64*
  store i64 %396, i64* %401, align 1, !tbaa !2432
  %402 = bitcast %union.vec128_t* %XMM0 to i8*
  %403 = load i64, i64* %PC
  %404 = add i64 %403, 9
  store i64 %404, i64* %PC
  %405 = bitcast i8* %402 to double*
  %406 = load double, double* %405, align 1
  store double %406, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %407 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %408 = load i64, i64* %PC
  %409 = add i64 %408, 9
  store i64 %409, i64* %PC
  %410 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %411 = bitcast i8* %407 to double*
  store double %410, double* %411, align 1, !tbaa !2432
  %412 = getelementptr inbounds i8, i8* %407, i64 8
  %413 = bitcast i8* %412 to double*
  store double 0.000000e+00, double* %413, align 1, !tbaa !2432
  %414 = bitcast %union.vec128_t* %XMM0 to i8*
  %415 = load i64, i64* %PC
  %416 = add i64 %415, 5
  store i64 %416, i64* %PC
  %417 = bitcast i8* %414 to i64*
  %418 = load i64, i64* %417, align 1
  store i64 %418, i64* %RCX, align 1, !tbaa !2428
  %419 = load i64, i64* %RCX
  %420 = load i64, i64* %RAX
  %421 = load i64, i64* %PC
  %422 = add i64 %421, 3
  store i64 %422, i64* %PC
  %423 = xor i64 %420, %419
  store i64 %423, i64* %RCX, align 8, !tbaa !2428
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %424, align 1, !tbaa !2434
  %425 = trunc i64 %423 to i32
  %426 = and i32 %425, 255
  %427 = call i32 @llvm.ctpop.i32(i32 %426) #17
  %428 = trunc i32 %427 to i8
  %429 = and i8 %428, 1
  %430 = xor i8 %429, 1
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %430, i8* %431, align 1, !tbaa !2448
  %432 = icmp eq i64 %423, 0
  %433 = zext i1 %432 to i8
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %433, i8* %434, align 1, !tbaa !2450
  %435 = lshr i64 %423, 63
  %436 = trunc i64 %435 to i8
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %436, i8* %437, align 1, !tbaa !2451
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %438, align 1, !tbaa !2452
  %439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %439, align 1, !tbaa !2449
  %440 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %441 = load i64, i64* %RCX
  %442 = load i64, i64* %PC
  %443 = add i64 %442, 5
  store i64 %443, i64* %PC
  %444 = bitcast i8* %440 to i64*
  store i64 %441, i64* %444, align 1, !tbaa !2428
  %445 = getelementptr inbounds i8, i8* %440, i64 8
  %446 = bitcast i8* %445 to i64*
  store i64 0, i64* %446, align 1, !tbaa !2428
  %447 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %448 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %449 = load i64, i64* %PC
  %450 = add i64 %449, 9
  store i64 %450, i64* %PC
  %451 = bitcast i8* %448 to double*
  %452 = load double, double* %451, align 1
  %453 = getelementptr inbounds i8, i8* %448, i64 8
  %454 = bitcast i8* %453 to i64*
  %455 = load i64, i64* %454, align 1
  %456 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %457 = fadd double %452, %456
  %458 = bitcast i8* %447 to double*
  store double %457, double* %458, align 1, !tbaa !2432
  %459 = getelementptr inbounds i8, i8* %447, i64 8
  %460 = bitcast i8* %459 to i64*
  store i64 %455, i64* %460, align 1, !tbaa !2432
  %461 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %462 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %463 = load i64, i64* %PC
  %464 = add i64 %463, 9
  store i64 %464, i64* %PC
  %465 = bitcast i8* %462 to double*
  %466 = load double, double* %465, align 1
  %467 = getelementptr inbounds i8, i8* %462, i64 8
  %468 = bitcast i8* %467 to i64*
  %469 = load i64, i64* %468, align 1
  %470 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %471 = fadd double %466, %470
  %472 = bitcast i8* %461 to double*
  store double %471, double* %472, align 1, !tbaa !2432
  %473 = getelementptr inbounds i8, i8* %461, i64 8
  %474 = bitcast i8* %473 to i64*
  store i64 %469, i64* %474, align 1, !tbaa !2432
  %475 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %476 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %477 = load i64, i64* %PC
  %478 = add i64 %477, 9
  store i64 %478, i64* %PC
  %479 = bitcast i8* %476 to double*
  %480 = load double, double* %479, align 1
  %481 = getelementptr inbounds i8, i8* %476, i64 8
  %482 = bitcast i8* %481 to i64*
  %483 = load i64, i64* %482, align 1
  %484 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %485 = fadd double %480, %484
  %486 = bitcast i8* %475 to double*
  store double %485, double* %486, align 1, !tbaa !2432
  %487 = getelementptr inbounds i8, i8* %475, i64 8
  %488 = bitcast i8* %487 to i64*
  store i64 %483, i64* %488, align 1, !tbaa !2432
  %489 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %490 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %491 = load i64, i64* %PC
  %492 = add i64 %491, 9
  store i64 %492, i64* %PC
  %493 = bitcast i8* %490 to double*
  %494 = load double, double* %493, align 1
  %495 = getelementptr inbounds i8, i8* %490, i64 8
  %496 = bitcast i8* %495 to i64*
  %497 = load i64, i64* %496, align 1
  %498 = load double, double* bitcast (%T_type* @T to double*)
  %499 = fmul double %494, %498
  %500 = bitcast i8* %489 to double*
  store double %499, double* %500, align 1, !tbaa !2432
  %501 = getelementptr inbounds i8, i8* %489, i64 8
  %502 = bitcast i8* %501 to i64*
  store i64 %497, i64* %502, align 1, !tbaa !2432
  %503 = bitcast %union.vec128_t* %XMM0 to i8*
  %504 = load i64, i64* %PC
  %505 = add i64 %504, 9
  store i64 %505, i64* %PC
  %506 = bitcast i8* %503 to double*
  %507 = load double, double* %506, align 1
  store double %507, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %508 = load i64, i64* %RBP
  %509 = sub i64 %508, 24
  %510 = load i64, i64* %PC
  %511 = add i64 %510, 4
  store i64 %511, i64* %PC
  %512 = inttoptr i64 %509 to i64*
  %513 = load i64, i64* %512
  store i64 %513, i64* %RAX, align 8, !tbaa !2428
  %514 = load i64, i64* %RAX
  %515 = load i64, i64* %PC
  %516 = add i64 %515, 4
  store i64 %516, i64* %PC
  %517 = add i64 1, %514
  store i64 %517, i64* %RAX, align 8, !tbaa !2428
  %518 = icmp ult i64 %517, %514
  %519 = icmp ult i64 %517, 1
  %520 = or i1 %518, %519
  %521 = zext i1 %520 to i8
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %521, i8* %522, align 1, !tbaa !2434
  %523 = trunc i64 %517 to i32
  %524 = and i32 %523, 255
  %525 = call i32 @llvm.ctpop.i32(i32 %524) #17
  %526 = trunc i32 %525 to i8
  %527 = and i8 %526, 1
  %528 = xor i8 %527, 1
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %528, i8* %529, align 1, !tbaa !2448
  %530 = xor i64 1, %514
  %531 = xor i64 %530, %517
  %532 = lshr i64 %531, 4
  %533 = trunc i64 %532 to i8
  %534 = and i8 %533, 1
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %534, i8* %535, align 1, !tbaa !2449
  %536 = icmp eq i64 %517, 0
  %537 = zext i1 %536 to i8
  %538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %537, i8* %538, align 1, !tbaa !2450
  %539 = lshr i64 %517, 63
  %540 = trunc i64 %539 to i8
  %541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %540, i8* %541, align 1, !tbaa !2451
  %542 = lshr i64 %514, 63
  %543 = xor i64 %539, %542
  %544 = add nuw nsw i64 %543, %539
  %545 = icmp eq i64 %544, 2
  %546 = zext i1 %545 to i8
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %546, i8* %547, align 1, !tbaa !2452
  %548 = load i64, i64* %RBP
  %549 = sub i64 %548, 24
  %550 = load i64, i64* %RAX
  %551 = load i64, i64* %PC
  %552 = add i64 %551, 4
  store i64 %552, i64* %PC
  %553 = inttoptr i64 %549 to i64*
  store i64 %550, i64* %553
  %554 = load i64, i64* %PC
  %555 = sub i64 %554, 265
  %556 = load i64, i64* %PC
  %557 = add i64 %556, 5
  store i64 %557, i64* %PC
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %555, i64* %558, align 8, !tbaa !2428
  br label %block_400bcc

block_400d69:                                     ; preds = %block_400d57
  %559 = load i64, i64* %RBP
  %560 = sub i64 %559, 48
  %561 = load i64, i64* %PC
  %562 = add i64 %561, 4
  store i64 %562, i64* %PC
  %563 = inttoptr i64 %560 to i64*
  %564 = load i64, i64* %563
  store i64 %564, i64* %RDI, align 8, !tbaa !2428
  %565 = load i64, i64* %RBP
  %566 = sub i64 %565, 40
  %567 = load i64, i64* %PC
  %568 = add i64 %567, 4
  store i64 %568, i64* %PC
  %569 = inttoptr i64 %566 to i64*
  %570 = load i64, i64* %569
  store i64 %570, i64* %RSI, align 8, !tbaa !2428
  %571 = load i64, i64* %RBP
  %572 = sub i64 %571, 40
  %573 = load i64, i64* %PC
  %574 = add i64 %573, 4
  store i64 %574, i64* %PC
  %575 = inttoptr i64 %572 to i64*
  %576 = load i64, i64* %575
  store i64 %576, i64* %RDX, align 8, !tbaa !2428
  %577 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %578 = load i64, i64* %PC
  %579 = add i64 %578, 9
  store i64 %579, i64* %PC
  %580 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %581 = bitcast i8* %577 to double*
  store double %580, double* %581, align 1, !tbaa !2432
  %582 = getelementptr inbounds i8, i8* %577, i64 8
  %583 = bitcast i8* %582 to double*
  store double 0.000000e+00, double* %583, align 1, !tbaa !2432
  %584 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %585 = load i64, i64* %PC
  %586 = add i64 %585, 9
  store i64 %586, i64* %PC
  %587 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %588 = bitcast i8* %584 to double*
  store double %587, double* %588, align 1, !tbaa !2432
  %589 = getelementptr inbounds i8, i8* %584, i64 8
  %590 = bitcast i8* %589 to double*
  store double 0.000000e+00, double* %590, align 1, !tbaa !2432
  %591 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %592 = load i64, i64* %PC
  %593 = add i64 %592, 9
  store i64 %593, i64* %PC
  %594 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %595 = bitcast i8* %591 to double*
  store double %594, double* %595, align 1, !tbaa !2432
  %596 = getelementptr inbounds i8, i8* %591, i64 8
  %597 = bitcast i8* %596 to double*
  store double 0.000000e+00, double* %597, align 1, !tbaa !2432
  %598 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %599 = load i64, i64* %PC
  %600 = add i64 %599, 9
  store i64 %600, i64* %PC
  %601 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %602 = bitcast i8* %598 to double*
  store double %601, double* %602, align 1, !tbaa !2432
  %603 = getelementptr inbounds i8, i8* %598, i64 8
  %604 = bitcast i8* %603 to double*
  store double 0.000000e+00, double* %604, align 1, !tbaa !2432
  %605 = load i64, i64* %PC
  %606 = add i64 %605, 2119
  %607 = load i64, i64* %PC
  %608 = add i64 %607, 5
  %609 = load i64, i64* %PC
  %610 = add i64 %609, 5
  store i64 %610, i64* %PC
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %612 = load i64, i64* %611, align 8, !tbaa !2428
  %613 = add i64 %612, -8
  %614 = inttoptr i64 %613 to i64*
  store i64 %608, i64* %614
  store i64 %613, i64* %611, align 8, !tbaa !2428
  %615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %606, i64* %615, align 8, !tbaa !2428
  %616 = load i64, i64* %PC
  %617 = call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %616, %struct.Memory* %MEMORY.27)
  br label %block_400d9e

block_400de8:                                     ; preds = %block_400dcd, %block_400ddd
  %MEMORY.0 = phi %struct.Memory* [ %MEMORY.11, %block_400ddd ], [ %MEMORY.11, %block_400dcd ]
  %618 = load i64, i64* %PC
  %619 = add i64 %618, 8
  store i64 %619, i64* %PC
  %620 = load i32, i32* bitcast (%J_type* @J to i32*)
  %621 = sub i32 %620, 2
  %622 = icmp ult i32 %620, 2
  %623 = zext i1 %622 to i8
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %623, i8* %624, align 1, !tbaa !2434
  %625 = and i32 %621, 255
  %626 = call i32 @llvm.ctpop.i32(i32 %625) #17
  %627 = trunc i32 %626 to i8
  %628 = and i8 %627, 1
  %629 = xor i8 %628, 1
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %629, i8* %630, align 1, !tbaa !2448
  %631 = xor i32 %620, 2
  %632 = xor i32 %631, %621
  %633 = lshr i32 %632, 4
  %634 = trunc i32 %633 to i8
  %635 = and i8 %634, 1
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %635, i8* %636, align 1, !tbaa !2449
  %637 = icmp eq i32 %621, 0
  %638 = zext i1 %637 to i8
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %638, i8* %639, align 1, !tbaa !2450
  %640 = lshr i32 %621, 31
  %641 = trunc i32 %640 to i8
  %642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %641, i8* %642, align 1, !tbaa !2451
  %643 = lshr i32 %620, 31
  %644 = xor i32 %640, %643
  %645 = add nuw nsw i32 %644, %643
  %646 = icmp eq i32 %645, 2
  %647 = zext i1 %646 to i8
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %647, i8* %648, align 1, !tbaa !2452
  %649 = load i64, i64* %PC
  %650 = add i64 %649, 22
  %651 = load i64, i64* %PC
  %652 = add i64 %651, 6
  %653 = load i64, i64* %PC
  %654 = add i64 %653, 6
  store i64 %654, i64* %PC
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %656 = load i8, i8* %655, align 1, !tbaa !2450
  %657 = icmp ne i8 %656, 0
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %659 = load i8, i8* %658, align 1, !tbaa !2451
  %660 = icmp ne i8 %659, 0
  %661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %662 = load i8, i8* %661, align 1, !tbaa !2452
  %663 = icmp ne i8 %662, 0
  %664 = xor i1 %660, %663
  %665 = or i1 %657, %664
  %666 = zext i1 %665 to i8
  store i8 %666, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %668 = select i1 %665, i64 %650, i64 %652
  store i64 %668, i64* %667, align 8, !tbaa !2428
  %669 = load i8, i8* %BRANCH_TAKEN
  %670 = icmp eq i8 %669, 1
  %671 = load i64, i64* %PC
  %672 = add i64 %671, 11
  store i64 %672, i64* %PC
  br i1 %670, label %block_400e06, label %block_400df6

block_400976:                                     ; preds = %block_400971, %block_4015c4
  %MEMORY.1 = phi %struct.Memory* [ %MEMORY.28, %block_400971 ], [ %9638, %block_4015c4 ]
  %673 = load i64, i64* %RAX
  %674 = load i32, i32* %EAX
  %675 = zext i32 %674 to i64
  %676 = load i64, i64* %PC
  %677 = add i64 %676, 2
  store i64 %677, i64* %PC
  %678 = xor i64 %675, %673
  %679 = trunc i64 %678 to i32
  %680 = and i64 %678, 4294967295
  store i64 %680, i64* %RAX, align 8, !tbaa !2428
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %681, align 1, !tbaa !2434
  %682 = and i32 %679, 255
  %683 = call i32 @llvm.ctpop.i32(i32 %682) #17
  %684 = trunc i32 %683 to i8
  %685 = and i8 %684, 1
  %686 = xor i8 %685, 1
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %686, i8* %687, align 1, !tbaa !2448
  %688 = icmp eq i32 %679, 0
  %689 = zext i1 %688 to i8
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %689, i8* %690, align 1, !tbaa !2450
  %691 = lshr i32 %679, 31
  %692 = trunc i32 %691 to i8
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %692, i8* %693, align 1, !tbaa !2451
  %694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %694, align 1, !tbaa !2452
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %695, align 1, !tbaa !2449
  %696 = load i32, i32* %EAX
  %697 = zext i32 %696 to i64
  %698 = load i64, i64* %PC
  %699 = add i64 %698, 2
  store i64 %699, i64* %PC
  %700 = and i64 %697, 4294967295
  store i64 %700, i64* %RDI, align 8, !tbaa !2428
  %701 = load i64, i64* %PC
  %702 = sub i64 %701, 602
  %703 = load i64, i64* %PC
  %704 = add i64 %703, 5
  %705 = load i64, i64* %PC
  %706 = add i64 %705, 5
  store i64 %706, i64* %PC
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %708 = load i64, i64* %707, align 8, !tbaa !2428
  %709 = add i64 %708, -8
  %710 = inttoptr i64 %709 to i64*
  store i64 %704, i64* %710
  store i64 %709, i64* %707, align 8, !tbaa !2428
  %711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %702, i64* %711, align 8, !tbaa !2428
  %712 = load i64, i64* %PC
  %713 = call %struct.Memory* @ext_400720_time(%struct.State* %0, i64 %712, %struct.Memory* %MEMORY.1)
  %714 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %715 = load i64, i64* %PC
  %716 = add i64 %715, 8
  store i64 %716, i64* %PC
  %717 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 8) to double*)
  %718 = bitcast i8* %714 to double*
  store double %717, double* %718, align 1, !tbaa !2432
  %719 = getelementptr inbounds i8, i8* %714, i64 8
  %720 = bitcast i8* %719 to double*
  store double 0.000000e+00, double* %720, align 1, !tbaa !2432
  %721 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %722 = load i64, i64* %PC
  %723 = add i64 %722, 8
  store i64 %723, i64* %PC
  %724 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 16) to double*)
  %725 = bitcast i8* %721 to double*
  store double %724, double* %725, align 1, !tbaa !2432
  %726 = getelementptr inbounds i8, i8* %721, i64 8
  %727 = bitcast i8* %726 to double*
  store double 0.000000e+00, double* %727, align 1, !tbaa !2432
  %728 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %729 = load i64, i64* %PC
  %730 = add i64 %729, 8
  store i64 %730, i64* %PC
  %731 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 24) to double*)
  %732 = bitcast i8* %728 to double*
  store double %731, double* %732, align 1, !tbaa !2432
  %733 = getelementptr inbounds i8, i8* %728, i64 8
  %734 = bitcast i8* %733 to double*
  store double 0.000000e+00, double* %734, align 1, !tbaa !2432
  %735 = load i64, i64* %RBP
  %736 = sub i64 %735, 192
  %737 = load i64, i64* %RAX
  %738 = load i64, i64* %PC
  %739 = add i64 %738, 7
  store i64 %739, i64* %PC
  %740 = inttoptr i64 %736 to i64*
  store i64 %737, i64* %740
  %741 = bitcast %union.vec128_t* %XMM2 to i8*
  %742 = load i64, i64* %PC
  %743 = add i64 %742, 9
  store i64 %743, i64* %PC
  %744 = bitcast i8* %741 to double*
  %745 = load double, double* %744, align 1
  store double %745, double* bitcast (%T_type* @T to double*)
  %746 = bitcast %union.vec128_t* %XMM1 to i8*
  %747 = load i64, i64* %PC
  %748 = add i64 %747, 9
  store i64 %748, i64* %PC
  %749 = bitcast i8* %746 to double*
  %750 = load double, double* %749, align 1
  store double %750, double* bitcast (%T1_type* @T1 to double*)
  %751 = bitcast %union.vec128_t* %XMM0 to i8*
  %752 = load i64, i64* %PC
  %753 = add i64 %752, 9
  store i64 %753, i64* %PC
  %754 = bitcast i8* %751 to double*
  %755 = load double, double* %754, align 1
  store double %755, double* bitcast (%T2_type* @T2 to double*)
  %756 = load i64, i64* %RBP
  %757 = sub i64 %756, 184
  %758 = load i64, i64* %PC
  %759 = add i64 %758, 7
  store i64 %759, i64* %PC
  %760 = inttoptr i64 %757 to i64*
  %761 = load i64, i64* %760
  store i64 %761, i64* %RAX, align 8, !tbaa !2428
  %762 = load i64, i64* %RBP
  %763 = sub i64 %762, 168
  %764 = load i64, i64* %RAX
  %765 = load i64, i64* %PC
  %766 = add i64 %765, 7
  store i64 %766, i64* %PC
  %767 = inttoptr i64 %763 to i64*
  store i64 %764, i64* %767
  %768 = load i64, i64* %RBP
  %769 = sub i64 %768, 172
  %770 = load i64, i64* %PC
  %771 = add i64 %770, 10
  store i64 %771, i64* %PC
  %772 = inttoptr i64 %769 to i32*
  store i32 1, i32* %772
  %773 = load i64, i64* %RBP
  %774 = sub i64 %773, 176
  %775 = load i64, i64* %PC
  %776 = add i64 %775, 10
  store i64 %776, i64* %PC
  %777 = inttoptr i64 %774 to i32*
  store i32 1, i32* %777
  br label %block_4009db

block_4013ec:                                     ; preds = %block_4013af, %block_40139d
  %MEMORY.2 = phi %struct.Memory* [ %MEMORY.7, %block_40139d ], [ %9161, %block_4013af ]
  %778 = load i64, i64* %PC
  %779 = add i64 %778, 11
  store i64 %779, i64* %PC
  store i32 2, i32* bitcast (%J_type* @J to i32*)
  %780 = load i64, i64* %PC
  %781 = add i64 %780, 11
  store i64 %781, i64* %PC
  store i32 3, i32* bitcast (%K_type* @K to i32*)
  %782 = load i64, i64* %RBP
  %783 = sub i64 %782, 24
  %784 = load i64, i64* %PC
  %785 = add i64 %784, 8
  store i64 %785, i64* %PC
  %786 = inttoptr i64 %783 to i64*
  store i64 1, i64* %786
  br label %block_40140a

block_40139d:                                     ; preds = %block_401379
  %787 = load i64, i64* %RBP
  %788 = sub i64 %787, 176
  %789 = load i64, i64* %PC
  %790 = add i64 %789, 6
  store i64 %790, i64* %PC
  %791 = inttoptr i64 %788 to i32*
  %792 = load i32, i32* %791
  %793 = zext i32 %792 to i64
  store i64 %793, i64* %RAX, align 8, !tbaa !2428
  %794 = load i32, i32* %EAX
  %795 = zext i32 %794 to i64
  %796 = load i64, i64* %RBP
  %797 = sub i64 %796, 172
  %798 = load i64, i64* %PC
  %799 = add i64 %798, 6
  store i64 %799, i64* %PC
  %800 = inttoptr i64 %797 to i32*
  %801 = load i32, i32* %800
  %802 = sub i32 %794, %801
  %803 = icmp ult i32 %794, %801
  %804 = zext i1 %803 to i8
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %804, i8* %805, align 1, !tbaa !2434
  %806 = and i32 %802, 255
  %807 = call i32 @llvm.ctpop.i32(i32 %806) #17
  %808 = trunc i32 %807 to i8
  %809 = and i8 %808, 1
  %810 = xor i8 %809, 1
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %810, i8* %811, align 1, !tbaa !2448
  %812 = xor i32 %801, %794
  %813 = xor i32 %812, %802
  %814 = lshr i32 %813, 4
  %815 = trunc i32 %814 to i8
  %816 = and i8 %815, 1
  %817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %816, i8* %817, align 1, !tbaa !2449
  %818 = icmp eq i32 %802, 0
  %819 = zext i1 %818 to i8
  %820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %819, i8* %820, align 1, !tbaa !2450
  %821 = lshr i32 %802, 31
  %822 = trunc i32 %821 to i8
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %822, i8* %823, align 1, !tbaa !2451
  %824 = lshr i32 %794, 31
  %825 = lshr i32 %801, 31
  %826 = xor i32 %825, %824
  %827 = xor i32 %821, %824
  %828 = add nuw nsw i32 %827, %826
  %829 = icmp eq i32 %828, 2
  %830 = zext i1 %829 to i8
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %830, i8* %831, align 1, !tbaa !2452
  %832 = load i64, i64* %PC
  %833 = add i64 %832, 67
  %834 = load i64, i64* %PC
  %835 = add i64 %834, 6
  %836 = load i64, i64* %PC
  %837 = add i64 %836, 6
  store i64 %837, i64* %PC
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %839 = load i8, i8* %838, align 1, !tbaa !2450
  %840 = icmp eq i8 %839, 0
  %841 = zext i1 %840 to i8
  store i8 %841, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %843 = select i1 %840, i64 %833, i64 %835
  store i64 %843, i64* %842, align 8, !tbaa !2428
  %844 = load i8, i8* %BRANCH_TAKEN
  %845 = icmp eq i8 %844, 1
  br i1 %845, label %block_4013ec, label %block_4013af

block_4014de:                                     ; preds = %block_4014c6, %block_4014ec
  %MEMORY.3 = phi %struct.Memory* [ %MEMORY.22, %block_4014c6 ], [ %1530, %block_4014ec ]
  %846 = load i64, i64* %RBP
  %847 = sub i64 %846, 24
  %848 = load i64, i64* %PC
  %849 = add i64 %848, 4
  store i64 %849, i64* %PC
  %850 = inttoptr i64 %847 to i64*
  %851 = load i64, i64* %850
  store i64 %851, i64* %RAX, align 8, !tbaa !2428
  %852 = load i64, i64* %RAX
  %853 = load i64, i64* %RBP
  %854 = sub i64 %853, 104
  %855 = load i64, i64* %PC
  %856 = add i64 %855, 4
  store i64 %856, i64* %PC
  %857 = inttoptr i64 %854 to i64*
  %858 = load i64, i64* %857
  %859 = sub i64 %852, %858
  %860 = icmp ugt i64 %858, %852
  %861 = zext i1 %860 to i8
  %862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %861, i8* %862, align 1, !tbaa !2434
  %863 = trunc i64 %859 to i32
  %864 = and i32 %863, 255
  %865 = call i32 @llvm.ctpop.i32(i32 %864) #17
  %866 = trunc i32 %865 to i8
  %867 = and i8 %866, 1
  %868 = xor i8 %867, 1
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %868, i8* %869, align 1, !tbaa !2448
  %870 = xor i64 %858, %852
  %871 = xor i64 %870, %859
  %872 = lshr i64 %871, 4
  %873 = trunc i64 %872 to i8
  %874 = and i8 %873, 1
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %874, i8* %875, align 1, !tbaa !2449
  %876 = icmp eq i64 %859, 0
  %877 = zext i1 %876 to i8
  %878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %877, i8* %878, align 1, !tbaa !2450
  %879 = lshr i64 %859, 63
  %880 = trunc i64 %879 to i8
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %880, i8* %881, align 1, !tbaa !2451
  %882 = lshr i64 %852, 63
  %883 = lshr i64 %858, 63
  %884 = xor i64 %883, %882
  %885 = xor i64 %879, %882
  %886 = add nuw nsw i64 %885, %884
  %887 = icmp eq i64 %886, 2
  %888 = zext i1 %887 to i8
  %889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %888, i8* %889, align 1, !tbaa !2452
  %890 = load i64, i64* %PC
  %891 = add i64 %890, 63
  %892 = load i64, i64* %PC
  %893 = add i64 %892, 6
  %894 = load i64, i64* %PC
  %895 = add i64 %894, 6
  store i64 %895, i64* %PC
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %897 = load i8, i8* %896, align 1, !tbaa !2450
  %898 = icmp eq i8 %897, 0
  %899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %900 = load i8, i8* %899, align 1, !tbaa !2451
  %901 = icmp ne i8 %900, 0
  %902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %903 = load i8, i8* %902, align 1, !tbaa !2452
  %904 = icmp ne i8 %903, 0
  %905 = xor i1 %901, %904
  %906 = xor i1 %905, true
  %907 = and i1 %898, %906
  %908 = zext i1 %907 to i8
  store i8 %908, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %910 = select i1 %907, i64 %891, i64 %893
  store i64 %910, i64* %909, align 8, !tbaa !2428
  %911 = load i8, i8* %BRANCH_TAKEN
  %912 = icmp eq i8 %911, 1
  br i1 %912, label %block_401525, label %block_4014ec

block_400ddd:                                     ; preds = %block_400dbf
  store i32 3, i32* bitcast (%J_type* @J to i32*)
  br label %block_400de8

block_400bcc:                                     ; preds = %block_400b90, %block_400bda
  %MEMORY.4 = phi %struct.Memory* [ %MEMORY.19, %block_400b90 ], [ %MEMORY.4, %block_400bda ]
  %913 = load i64, i64* %RBP
  %914 = sub i64 %913, 24
  %915 = load i64, i64* %PC
  %916 = add i64 %915, 4
  store i64 %916, i64* %PC
  %917 = inttoptr i64 %914 to i64*
  %918 = load i64, i64* %917
  store i64 %918, i64* %RAX, align 8, !tbaa !2428
  %919 = load i64, i64* %RAX
  %920 = load i64, i64* %RBP
  %921 = sub i64 %920, 40
  %922 = load i64, i64* %PC
  %923 = add i64 %922, 4
  store i64 %923, i64* %PC
  %924 = inttoptr i64 %921 to i64*
  %925 = load i64, i64* %924
  %926 = sub i64 %919, %925
  %927 = icmp ugt i64 %925, %919
  %928 = zext i1 %927 to i8
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %928, i8* %929, align 1, !tbaa !2434
  %930 = trunc i64 %926 to i32
  %931 = and i32 %930, 255
  %932 = call i32 @llvm.ctpop.i32(i32 %931) #17
  %933 = trunc i32 %932 to i8
  %934 = and i8 %933, 1
  %935 = xor i8 %934, 1
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %935, i8* %936, align 1, !tbaa !2448
  %937 = xor i64 %925, %919
  %938 = xor i64 %937, %926
  %939 = lshr i64 %938, 4
  %940 = trunc i64 %939 to i8
  %941 = and i8 %940, 1
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %941, i8* %942, align 1, !tbaa !2449
  %943 = icmp eq i64 %926, 0
  %944 = zext i1 %943 to i8
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %944, i8* %945, align 1, !tbaa !2450
  %946 = lshr i64 %926, 63
  %947 = trunc i64 %946 to i8
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %947, i8* %948, align 1, !tbaa !2451
  %949 = lshr i64 %919, 63
  %950 = lshr i64 %925, 63
  %951 = xor i64 %950, %949
  %952 = xor i64 %946, %949
  %953 = add nuw nsw i64 %952, %951
  %954 = icmp eq i64 %953, 2
  %955 = zext i1 %954 to i8
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %955, i8* %956, align 1, !tbaa !2452
  %957 = load i64, i64* %PC
  %958 = add i64 %957, 262
  %959 = load i64, i64* %PC
  %960 = add i64 %959, 6
  %961 = load i64, i64* %PC
  %962 = add i64 %961, 6
  store i64 %962, i64* %PC
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %964 = load i8, i8* %963, align 1, !tbaa !2450
  %965 = icmp eq i8 %964, 0
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %967 = load i8, i8* %966, align 1, !tbaa !2451
  %968 = icmp ne i8 %967, 0
  %969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %970 = load i8, i8* %969, align 1, !tbaa !2452
  %971 = icmp ne i8 %970, 0
  %972 = xor i1 %968, %971
  %973 = xor i1 %972, true
  %974 = and i1 %965, %973
  %975 = zext i1 %974 to i8
  store i8 %975, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %977 = select i1 %974, i64 %958, i64 %960
  store i64 %977, i64* %976, align 8, !tbaa !2428
  %978 = load i8, i8* %BRANCH_TAKEN
  %979 = icmp eq i8 %978, 1
  br i1 %979, label %block_400cda, label %block_400bda

block_400d57:                                     ; preds = %block_400d29
  %980 = load i64, i64* %RBP
  %981 = sub i64 %980, 176
  %982 = load i64, i64* %PC
  %983 = add i64 %982, 6
  store i64 %983, i64* %PC
  %984 = inttoptr i64 %981 to i32*
  %985 = load i32, i32* %984
  %986 = zext i32 %985 to i64
  store i64 %986, i64* %RAX, align 8, !tbaa !2428
  %987 = load i32, i32* %EAX
  %988 = zext i32 %987 to i64
  %989 = load i64, i64* %RBP
  %990 = sub i64 %989, 172
  %991 = load i64, i64* %PC
  %992 = add i64 %991, 6
  store i64 %992, i64* %PC
  %993 = inttoptr i64 %990 to i32*
  %994 = load i32, i32* %993
  %995 = sub i32 %987, %994
  %996 = icmp ult i32 %987, %994
  %997 = zext i1 %996 to i8
  %998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %997, i8* %998, align 1, !tbaa !2434
  %999 = and i32 %995, 255
  %1000 = call i32 @llvm.ctpop.i32(i32 %999) #17
  %1001 = trunc i32 %1000 to i8
  %1002 = and i8 %1001, 1
  %1003 = xor i8 %1002, 1
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1003, i8* %1004, align 1, !tbaa !2448
  %1005 = xor i32 %994, %987
  %1006 = xor i32 %1005, %995
  %1007 = lshr i32 %1006, 4
  %1008 = trunc i32 %1007 to i8
  %1009 = and i8 %1008, 1
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1009, i8* %1010, align 1, !tbaa !2449
  %1011 = icmp eq i32 %995, 0
  %1012 = zext i1 %1011 to i8
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1012, i8* %1013, align 1, !tbaa !2450
  %1014 = lshr i32 %995, 31
  %1015 = trunc i32 %1014 to i8
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1015, i8* %1016, align 1, !tbaa !2451
  %1017 = lshr i32 %987, 31
  %1018 = lshr i32 %994, 31
  %1019 = xor i32 %1018, %1017
  %1020 = xor i32 %1014, %1017
  %1021 = add nuw nsw i32 %1020, %1019
  %1022 = icmp eq i32 %1021, 2
  %1023 = zext i1 %1022 to i8
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1023, i8* %1024, align 1, !tbaa !2452
  %1025 = load i64, i64* %PC
  %1026 = add i64 %1025, 59
  %1027 = load i64, i64* %PC
  %1028 = add i64 %1027, 6
  %1029 = load i64, i64* %PC
  %1030 = add i64 %1029, 6
  store i64 %1030, i64* %PC
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1032 = load i8, i8* %1031, align 1, !tbaa !2450
  %1033 = icmp eq i8 %1032, 0
  %1034 = zext i1 %1033 to i8
  store i8 %1034, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %1035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1036 = select i1 %1033, i64 %1026, i64 %1028
  store i64 %1036, i64* %1035, align 8, !tbaa !2428
  %1037 = load i8, i8* %BRANCH_TAKEN
  %1038 = icmp eq i8 %1037, 1
  br i1 %1038, label %block_400d9e, label %block_400d69

block_4014ec:                                     ; preds = %block_4014de
  %1039 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1040 = load i64, i64* %RBP
  %1041 = sub i64 %1040, 144
  %1042 = load i64, i64* %PC
  %1043 = add i64 %1042, 8
  store i64 %1043, i64* %PC
  %1044 = inttoptr i64 %1041 to double*
  %1045 = load double, double* %1044
  %1046 = bitcast i8* %1039 to double*
  store double %1045, double* %1046, align 1, !tbaa !2432
  %1047 = getelementptr inbounds i8, i8* %1039, i64 8
  %1048 = bitcast i8* %1047 to double*
  store double 0.000000e+00, double* %1048, align 1, !tbaa !2432
  %1049 = load i64, i64* %PC
  %1050 = sub i64 %1049, 3588
  %1051 = load i64, i64* %PC
  %1052 = add i64 %1051, 5
  %1053 = load i64, i64* %PC
  %1054 = add i64 %1053, 5
  store i64 %1054, i64* %PC
  %1055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1056 = load i64, i64* %1055, align 8, !tbaa !2428
  %1057 = add i64 %1056, -8
  %1058 = inttoptr i64 %1057 to i64*
  store i64 %1052, i64* %1058
  store i64 %1057, i64* %1055, align 8, !tbaa !2428
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1050, i64* %1059, align 8, !tbaa !2428
  %1060 = load i64, i64* %PC
  %1061 = call %struct.Memory* @ext_602168_log(%struct.State* %0, i64 %1060, %struct.Memory* %MEMORY.3)
  %1062 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1063 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1064 = load i64, i64* %PC
  %1065 = add i64 %1064, 9
  store i64 %1065, i64* %PC
  %1066 = bitcast i8* %1063 to double*
  %1067 = load double, double* %1066, align 1
  %1068 = getelementptr inbounds i8, i8* %1063, i64 8
  %1069 = bitcast i8* %1068 to i64*
  %1070 = load i64, i64* %1069, align 1
  %1071 = load double, double* bitcast (%T1_type* @T1 to double*)
  %1072 = fdiv double %1067, %1071
  %1073 = bitcast i8* %1062 to double*
  store double %1072, double* %1073, align 1, !tbaa !2432
  %1074 = getelementptr inbounds i8, i8* %1062, i64 8
  %1075 = bitcast i8* %1074 to i64*
  store i64 %1070, i64* %1075, align 1, !tbaa !2432
  %1076 = load i64, i64* %PC
  %1077 = sub i64 %1076, 3650
  %1078 = load i64, i64* %PC
  %1079 = add i64 %1078, 5
  %1080 = load i64, i64* %PC
  %1081 = add i64 %1080, 5
  store i64 %1081, i64* %PC
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1083 = load i64, i64* %1082, align 8, !tbaa !2428
  %1084 = add i64 %1083, -8
  %1085 = inttoptr i64 %1084 to i64*
  store i64 %1079, i64* %1085
  store i64 %1084, i64* %1082, align 8, !tbaa !2428
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1077, i64* %1086, align 8, !tbaa !2428
  %1087 = load i64, i64* %PC
  %1088 = call %struct.Memory* @ext_4006c0_exp(%struct.State* %0, i64 %1087, %struct.Memory* %1061)
  %1089 = load i64, i64* %PC
  %1090 = sub i64 %1089, 3511
  %1091 = load i64, i64* %PC
  %1092 = add i64 %1091, 5
  %1093 = load i64, i64* %PC
  %1094 = add i64 %1093, 5
  store i64 %1094, i64* %PC
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1096 = load i64, i64* %1095, align 8, !tbaa !2428
  %1097 = add i64 %1096, -8
  %1098 = inttoptr i64 %1097 to i64*
  store i64 %1092, i64* %1098
  store i64 %1097, i64* %1095, align 8, !tbaa !2428
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1090, i64* %1099, align 8, !tbaa !2428
  %1100 = load i64, i64* %PC
  %1101 = bitcast %struct.State** %state.i1432 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1101)
  %1102 = bitcast i64* %curr_pc.i1433 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1102)
  %1103 = bitcast %struct.Memory** %memory.i1434 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1103)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i1435)
  %1104 = bitcast i64* %SS_BASE.i1436 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1104)
  %1105 = bitcast i64* %ES_BASE.i1437 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1105)
  %1106 = bitcast i64* %DS_BASE.i1438 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1106)
  %1107 = bitcast i64* %CS_BASE.i1439 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1107)
  %1108 = bitcast %struct.State** %STATE.i1440 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1108)
  %1109 = bitcast %struct.Memory** %MEMORY.i1441 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1109)
  %1110 = bitcast i64** %_DR0.i1442 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1110)
  %1111 = bitcast i64** %_DR1.i1443 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1111)
  %1112 = bitcast i64** %_DR2.i1444 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1112)
  %1113 = bitcast i64** %_DR3.i1445 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1113)
  %1114 = bitcast i64** %_DR4.i1446 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1114)
  %1115 = bitcast i64** %_DR5.i1447 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1115)
  %1116 = bitcast i64** %_DR6.i1448 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1116)
  %1117 = bitcast i64** %_DR7.i1449 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1117)
  %1118 = bitcast i64** %CR0.i1450 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1118)
  %1119 = bitcast i64** %CR1.i1451 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1119)
  %1120 = bitcast i64** %CR2.i1452 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1120)
  %1121 = bitcast i64** %CR3.i1453 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1121)
  %1122 = bitcast i64** %CR4.i1454 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1122)
  %1123 = bitcast i64** %CR8.i1455 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1123)
  store %struct.State* %0, %struct.State** %state.i1432, align 8, !noalias !2454
  store i64 %1100, i64* %curr_pc.i1433, align 8, !noalias !2454
  store %struct.Memory* %1088, %struct.Memory** %memory.i1434, align 8, !noalias !2454
  store i8 0, i8* %BRANCH_TAKEN.i1435, align 1, !noalias !2454
  store i64 0, i64* %SS_BASE.i1436, align 8, !noalias !2454
  store i64 0, i64* %ES_BASE.i1437, align 8, !noalias !2454
  store i64 0, i64* %DS_BASE.i1438, align 8, !noalias !2454
  store i64 0, i64* %CS_BASE.i1439, align 8, !noalias !2454
  store %struct.State* %0, %struct.State** %STATE.i1440, align 8, !noalias !2454
  store %struct.Memory* %1088, %struct.Memory** %MEMORY.i1441, align 8, !noalias !2454
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1125 = getelementptr inbounds %struct.GPR, %struct.GPR* %1124, i32 0, i32 33
  %1126 = getelementptr inbounds %struct.Reg, %struct.Reg* %1125, i32 0, i32 0
  %PC.i1456 = bitcast %union.anon* %1126 to i64*
  store i64 %1100, i64* %PC.i1456, align 8, !alias.scope !2458, !noalias !2459
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1128 = getelementptr inbounds %struct.GPR, %struct.GPR* %1127, i32 0, i32 1
  %1129 = getelementptr inbounds %struct.Reg, %struct.Reg* %1128, i32 0, i32 0
  %1130 = bitcast %union.anon* %1129 to %struct.anon.2*
  %AH.i1457 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1130, i32 0, i32 1
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1132 = getelementptr inbounds %struct.GPR, %struct.GPR* %1131, i32 0, i32 3
  %1133 = getelementptr inbounds %struct.Reg, %struct.Reg* %1132, i32 0, i32 0
  %1134 = bitcast %union.anon* %1133 to %struct.anon.2*
  %BH.i1458 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1134, i32 0, i32 1
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 5
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %1138 = bitcast %union.anon* %1137 to %struct.anon.2*
  %CH.i1459 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1138, i32 0, i32 1
  %1139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1140 = getelementptr inbounds %struct.GPR, %struct.GPR* %1139, i32 0, i32 7
  %1141 = getelementptr inbounds %struct.Reg, %struct.Reg* %1140, i32 0, i32 0
  %1142 = bitcast %union.anon* %1141 to %struct.anon.2*
  %DH.i1460 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1142, i32 0, i32 1
  %1143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1144 = getelementptr inbounds %struct.GPR, %struct.GPR* %1143, i32 0, i32 1
  %1145 = getelementptr inbounds %struct.Reg, %struct.Reg* %1144, i32 0, i32 0
  %1146 = bitcast %union.anon* %1145 to %struct.anon.2*
  %AL.i1461 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1146, i32 0, i32 0
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 3
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %1150 = bitcast %union.anon* %1149 to %struct.anon.2*
  %BL.i1462 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1150, i32 0, i32 0
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1152 = getelementptr inbounds %struct.GPR, %struct.GPR* %1151, i32 0, i32 5
  %1153 = getelementptr inbounds %struct.Reg, %struct.Reg* %1152, i32 0, i32 0
  %1154 = bitcast %union.anon* %1153 to %struct.anon.2*
  %CL.i1463 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1154, i32 0, i32 0
  %1155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1156 = getelementptr inbounds %struct.GPR, %struct.GPR* %1155, i32 0, i32 7
  %1157 = getelementptr inbounds %struct.Reg, %struct.Reg* %1156, i32 0, i32 0
  %1158 = bitcast %union.anon* %1157 to %struct.anon.2*
  %DL.i1464 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1158, i32 0, i32 0
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 9
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %1162 = bitcast %union.anon* %1161 to %struct.anon.2*
  %SIL.i1465 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1162, i32 0, i32 0
  %1163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1164 = getelementptr inbounds %struct.GPR, %struct.GPR* %1163, i32 0, i32 11
  %1165 = getelementptr inbounds %struct.Reg, %struct.Reg* %1164, i32 0, i32 0
  %1166 = bitcast %union.anon* %1165 to %struct.anon.2*
  %DIL.i1466 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1166, i32 0, i32 0
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1168 = getelementptr inbounds %struct.GPR, %struct.GPR* %1167, i32 0, i32 13
  %1169 = getelementptr inbounds %struct.Reg, %struct.Reg* %1168, i32 0, i32 0
  %1170 = bitcast %union.anon* %1169 to %struct.anon.2*
  %SPL.i1467 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1170, i32 0, i32 0
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 15
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %1174 = bitcast %union.anon* %1173 to %struct.anon.2*
  %BPL.i1468 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1174, i32 0, i32 0
  %1175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1176 = getelementptr inbounds %struct.GPR, %struct.GPR* %1175, i32 0, i32 17
  %1177 = getelementptr inbounds %struct.Reg, %struct.Reg* %1176, i32 0, i32 0
  %1178 = bitcast %union.anon* %1177 to %struct.anon.2*
  %R8B.i1469 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1178, i32 0, i32 0
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1180 = getelementptr inbounds %struct.GPR, %struct.GPR* %1179, i32 0, i32 19
  %1181 = getelementptr inbounds %struct.Reg, %struct.Reg* %1180, i32 0, i32 0
  %1182 = bitcast %union.anon* %1181 to %struct.anon.2*
  %R9B.i1470 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1182, i32 0, i32 0
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1184 = getelementptr inbounds %struct.GPR, %struct.GPR* %1183, i32 0, i32 21
  %1185 = getelementptr inbounds %struct.Reg, %struct.Reg* %1184, i32 0, i32 0
  %1186 = bitcast %union.anon* %1185 to %struct.anon.2*
  %R10B.i1471 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1186, i32 0, i32 0
  %1187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1188 = getelementptr inbounds %struct.GPR, %struct.GPR* %1187, i32 0, i32 23
  %1189 = getelementptr inbounds %struct.Reg, %struct.Reg* %1188, i32 0, i32 0
  %1190 = bitcast %union.anon* %1189 to %struct.anon.2*
  %R11B.i1472 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1190, i32 0, i32 0
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1192 = getelementptr inbounds %struct.GPR, %struct.GPR* %1191, i32 0, i32 25
  %1193 = getelementptr inbounds %struct.Reg, %struct.Reg* %1192, i32 0, i32 0
  %1194 = bitcast %union.anon* %1193 to %struct.anon.2*
  %R12B.i1473 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1194, i32 0, i32 0
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1196 = getelementptr inbounds %struct.GPR, %struct.GPR* %1195, i32 0, i32 27
  %1197 = getelementptr inbounds %struct.Reg, %struct.Reg* %1196, i32 0, i32 0
  %1198 = bitcast %union.anon* %1197 to %struct.anon.2*
  %R13B.i1474 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1198, i32 0, i32 0
  %1199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1200 = getelementptr inbounds %struct.GPR, %struct.GPR* %1199, i32 0, i32 29
  %1201 = getelementptr inbounds %struct.Reg, %struct.Reg* %1200, i32 0, i32 0
  %1202 = bitcast %union.anon* %1201 to %struct.anon.2*
  %R14B.i1475 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1202, i32 0, i32 0
  %1203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1204 = getelementptr inbounds %struct.GPR, %struct.GPR* %1203, i32 0, i32 31
  %1205 = getelementptr inbounds %struct.Reg, %struct.Reg* %1204, i32 0, i32 0
  %1206 = bitcast %union.anon* %1205 to %struct.anon.2*
  %R15B.i1476 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1206, i32 0, i32 0
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1208 = getelementptr inbounds %struct.GPR, %struct.GPR* %1207, i32 0, i32 1
  %1209 = getelementptr inbounds %struct.Reg, %struct.Reg* %1208, i32 0, i32 0
  %AX.i1477 = bitcast %union.anon* %1209 to i16*
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1211 = getelementptr inbounds %struct.GPR, %struct.GPR* %1210, i32 0, i32 3
  %1212 = getelementptr inbounds %struct.Reg, %struct.Reg* %1211, i32 0, i32 0
  %BX.i1478 = bitcast %union.anon* %1212 to i16*
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1214 = getelementptr inbounds %struct.GPR, %struct.GPR* %1213, i32 0, i32 5
  %1215 = getelementptr inbounds %struct.Reg, %struct.Reg* %1214, i32 0, i32 0
  %CX.i1479 = bitcast %union.anon* %1215 to i16*
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1217 = getelementptr inbounds %struct.GPR, %struct.GPR* %1216, i32 0, i32 7
  %1218 = getelementptr inbounds %struct.Reg, %struct.Reg* %1217, i32 0, i32 0
  %DX.i1480 = bitcast %union.anon* %1218 to i16*
  %1219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1220 = getelementptr inbounds %struct.GPR, %struct.GPR* %1219, i32 0, i32 9
  %1221 = getelementptr inbounds %struct.Reg, %struct.Reg* %1220, i32 0, i32 0
  %SI.i1481 = bitcast %union.anon* %1221 to i16*
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1223 = getelementptr inbounds %struct.GPR, %struct.GPR* %1222, i32 0, i32 11
  %1224 = getelementptr inbounds %struct.Reg, %struct.Reg* %1223, i32 0, i32 0
  %DI.i1482 = bitcast %union.anon* %1224 to i16*
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1226 = getelementptr inbounds %struct.GPR, %struct.GPR* %1225, i32 0, i32 13
  %1227 = getelementptr inbounds %struct.Reg, %struct.Reg* %1226, i32 0, i32 0
  %SP.i1483 = bitcast %union.anon* %1227 to i16*
  %1228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1229 = getelementptr inbounds %struct.GPR, %struct.GPR* %1228, i32 0, i32 15
  %1230 = getelementptr inbounds %struct.Reg, %struct.Reg* %1229, i32 0, i32 0
  %BP.i1484 = bitcast %union.anon* %1230 to i16*
  %1231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1232 = getelementptr inbounds %struct.GPR, %struct.GPR* %1231, i32 0, i32 17
  %1233 = getelementptr inbounds %struct.Reg, %struct.Reg* %1232, i32 0, i32 0
  %R8W.i1485 = bitcast %union.anon* %1233 to i16*
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1235 = getelementptr inbounds %struct.GPR, %struct.GPR* %1234, i32 0, i32 19
  %1236 = getelementptr inbounds %struct.Reg, %struct.Reg* %1235, i32 0, i32 0
  %R9W.i1486 = bitcast %union.anon* %1236 to i16*
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1238 = getelementptr inbounds %struct.GPR, %struct.GPR* %1237, i32 0, i32 21
  %1239 = getelementptr inbounds %struct.Reg, %struct.Reg* %1238, i32 0, i32 0
  %R10W.i1487 = bitcast %union.anon* %1239 to i16*
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1241 = getelementptr inbounds %struct.GPR, %struct.GPR* %1240, i32 0, i32 23
  %1242 = getelementptr inbounds %struct.Reg, %struct.Reg* %1241, i32 0, i32 0
  %R11W.i1488 = bitcast %union.anon* %1242 to i16*
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1244 = getelementptr inbounds %struct.GPR, %struct.GPR* %1243, i32 0, i32 25
  %1245 = getelementptr inbounds %struct.Reg, %struct.Reg* %1244, i32 0, i32 0
  %R12W.i1489 = bitcast %union.anon* %1245 to i16*
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1247 = getelementptr inbounds %struct.GPR, %struct.GPR* %1246, i32 0, i32 27
  %1248 = getelementptr inbounds %struct.Reg, %struct.Reg* %1247, i32 0, i32 0
  %R13W.i1490 = bitcast %union.anon* %1248 to i16*
  %1249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1250 = getelementptr inbounds %struct.GPR, %struct.GPR* %1249, i32 0, i32 29
  %1251 = getelementptr inbounds %struct.Reg, %struct.Reg* %1250, i32 0, i32 0
  %R14W.i1491 = bitcast %union.anon* %1251 to i16*
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1253 = getelementptr inbounds %struct.GPR, %struct.GPR* %1252, i32 0, i32 31
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %R15W.i1492 = bitcast %union.anon* %1254 to i16*
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1256 = getelementptr inbounds %struct.GPR, %struct.GPR* %1255, i32 0, i32 33
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %IP.i1493 = bitcast %union.anon* %1257 to i16*
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1259 = getelementptr inbounds %struct.GPR, %struct.GPR* %1258, i32 0, i32 1
  %1260 = getelementptr inbounds %struct.Reg, %struct.Reg* %1259, i32 0, i32 0
  %EAX.i1494 = bitcast %union.anon* %1260 to i32*
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 3
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %EBX.i1495 = bitcast %union.anon* %1263 to i32*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 5
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %ECX.i1496 = bitcast %union.anon* %1266 to i32*
  %1267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1268 = getelementptr inbounds %struct.GPR, %struct.GPR* %1267, i32 0, i32 7
  %1269 = getelementptr inbounds %struct.Reg, %struct.Reg* %1268, i32 0, i32 0
  %EDX.i1497 = bitcast %union.anon* %1269 to i32*
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1271 = getelementptr inbounds %struct.GPR, %struct.GPR* %1270, i32 0, i32 9
  %1272 = getelementptr inbounds %struct.Reg, %struct.Reg* %1271, i32 0, i32 0
  %ESI.i1498 = bitcast %union.anon* %1272 to i32*
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1274 = getelementptr inbounds %struct.GPR, %struct.GPR* %1273, i32 0, i32 11
  %1275 = getelementptr inbounds %struct.Reg, %struct.Reg* %1274, i32 0, i32 0
  %EDI.i1499 = bitcast %union.anon* %1275 to i32*
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1277 = getelementptr inbounds %struct.GPR, %struct.GPR* %1276, i32 0, i32 13
  %1278 = getelementptr inbounds %struct.Reg, %struct.Reg* %1277, i32 0, i32 0
  %ESP.i1500 = bitcast %union.anon* %1278 to i32*
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1280 = getelementptr inbounds %struct.GPR, %struct.GPR* %1279, i32 0, i32 15
  %1281 = getelementptr inbounds %struct.Reg, %struct.Reg* %1280, i32 0, i32 0
  %EBP.i1501 = bitcast %union.anon* %1281 to i32*
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1283 = getelementptr inbounds %struct.GPR, %struct.GPR* %1282, i32 0, i32 33
  %1284 = getelementptr inbounds %struct.Reg, %struct.Reg* %1283, i32 0, i32 0
  %EIP.i1502 = bitcast %union.anon* %1284 to i32*
  %1285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1286 = getelementptr inbounds %struct.GPR, %struct.GPR* %1285, i32 0, i32 17
  %1287 = getelementptr inbounds %struct.Reg, %struct.Reg* %1286, i32 0, i32 0
  %R8D.i1503 = bitcast %union.anon* %1287 to i32*
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1289 = getelementptr inbounds %struct.GPR, %struct.GPR* %1288, i32 0, i32 19
  %1290 = getelementptr inbounds %struct.Reg, %struct.Reg* %1289, i32 0, i32 0
  %R9D.i1504 = bitcast %union.anon* %1290 to i32*
  %1291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1292 = getelementptr inbounds %struct.GPR, %struct.GPR* %1291, i32 0, i32 21
  %1293 = getelementptr inbounds %struct.Reg, %struct.Reg* %1292, i32 0, i32 0
  %R10D.i1505 = bitcast %union.anon* %1293 to i32*
  %1294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1295 = getelementptr inbounds %struct.GPR, %struct.GPR* %1294, i32 0, i32 23
  %1296 = getelementptr inbounds %struct.Reg, %struct.Reg* %1295, i32 0, i32 0
  %R11D.i1506 = bitcast %union.anon* %1296 to i32*
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1298 = getelementptr inbounds %struct.GPR, %struct.GPR* %1297, i32 0, i32 25
  %1299 = getelementptr inbounds %struct.Reg, %struct.Reg* %1298, i32 0, i32 0
  %R12D.i1507 = bitcast %union.anon* %1299 to i32*
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1301 = getelementptr inbounds %struct.GPR, %struct.GPR* %1300, i32 0, i32 27
  %1302 = getelementptr inbounds %struct.Reg, %struct.Reg* %1301, i32 0, i32 0
  %R13D.i1508 = bitcast %union.anon* %1302 to i32*
  %1303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1304 = getelementptr inbounds %struct.GPR, %struct.GPR* %1303, i32 0, i32 29
  %1305 = getelementptr inbounds %struct.Reg, %struct.Reg* %1304, i32 0, i32 0
  %R14D.i1509 = bitcast %union.anon* %1305 to i32*
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1307 = getelementptr inbounds %struct.GPR, %struct.GPR* %1306, i32 0, i32 31
  %1308 = getelementptr inbounds %struct.Reg, %struct.Reg* %1307, i32 0, i32 0
  %R15D.i1510 = bitcast %union.anon* %1308 to i32*
  %1309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1310 = getelementptr inbounds %struct.GPR, %struct.GPR* %1309, i32 0, i32 1
  %1311 = getelementptr inbounds %struct.Reg, %struct.Reg* %1310, i32 0, i32 0
  %RAX.i1511 = bitcast %union.anon* %1311 to i64*
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1313 = getelementptr inbounds %struct.GPR, %struct.GPR* %1312, i32 0, i32 3
  %1314 = getelementptr inbounds %struct.Reg, %struct.Reg* %1313, i32 0, i32 0
  %RBX.i1512 = bitcast %union.anon* %1314 to i64*
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1316 = getelementptr inbounds %struct.GPR, %struct.GPR* %1315, i32 0, i32 5
  %1317 = getelementptr inbounds %struct.Reg, %struct.Reg* %1316, i32 0, i32 0
  %RCX.i1513 = bitcast %union.anon* %1317 to i64*
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1319 = getelementptr inbounds %struct.GPR, %struct.GPR* %1318, i32 0, i32 7
  %1320 = getelementptr inbounds %struct.Reg, %struct.Reg* %1319, i32 0, i32 0
  %RDX.i1514 = bitcast %union.anon* %1320 to i64*
  %1321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1322 = getelementptr inbounds %struct.GPR, %struct.GPR* %1321, i32 0, i32 9
  %1323 = getelementptr inbounds %struct.Reg, %struct.Reg* %1322, i32 0, i32 0
  %RSI.i1515 = bitcast %union.anon* %1323 to i64*
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1325 = getelementptr inbounds %struct.GPR, %struct.GPR* %1324, i32 0, i32 11
  %1326 = getelementptr inbounds %struct.Reg, %struct.Reg* %1325, i32 0, i32 0
  %RDI.i1516 = bitcast %union.anon* %1326 to i64*
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 13
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %RSP.i1517 = bitcast %union.anon* %1329 to i64*
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 15
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %RBP.i1518 = bitcast %union.anon* %1332 to i64*
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1334 = getelementptr inbounds %struct.GPR, %struct.GPR* %1333, i32 0, i32 17
  %1335 = getelementptr inbounds %struct.Reg, %struct.Reg* %1334, i32 0, i32 0
  %R8.i1519 = bitcast %union.anon* %1335 to i64*
  %1336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1337 = getelementptr inbounds %struct.GPR, %struct.GPR* %1336, i32 0, i32 19
  %1338 = getelementptr inbounds %struct.Reg, %struct.Reg* %1337, i32 0, i32 0
  %R9.i1520 = bitcast %union.anon* %1338 to i64*
  %1339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1340 = getelementptr inbounds %struct.GPR, %struct.GPR* %1339, i32 0, i32 21
  %1341 = getelementptr inbounds %struct.Reg, %struct.Reg* %1340, i32 0, i32 0
  %R10.i1521 = bitcast %union.anon* %1341 to i64*
  %1342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1343 = getelementptr inbounds %struct.GPR, %struct.GPR* %1342, i32 0, i32 23
  %1344 = getelementptr inbounds %struct.Reg, %struct.Reg* %1343, i32 0, i32 0
  %R11.i1522 = bitcast %union.anon* %1344 to i64*
  %1345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1346 = getelementptr inbounds %struct.GPR, %struct.GPR* %1345, i32 0, i32 25
  %1347 = getelementptr inbounds %struct.Reg, %struct.Reg* %1346, i32 0, i32 0
  %R12.i1523 = bitcast %union.anon* %1347 to i64*
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 27
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %R13.i1524 = bitcast %union.anon* %1350 to i64*
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 29
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %R14.i1525 = bitcast %union.anon* %1353 to i64*
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1355 = getelementptr inbounds %struct.GPR, %struct.GPR* %1354, i32 0, i32 31
  %1356 = getelementptr inbounds %struct.Reg, %struct.Reg* %1355, i32 0, i32 0
  %R15.i1526 = bitcast %union.anon* %1356 to i64*
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1358 = getelementptr inbounds %struct.GPR, %struct.GPR* %1357, i32 0, i32 33
  %1359 = getelementptr inbounds %struct.Reg, %struct.Reg* %1358, i32 0, i32 0
  %RIP.i1527 = bitcast %union.anon* %1359 to i64*
  %1360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1361 = getelementptr inbounds %struct.Segments, %struct.Segments* %1360, i32 0, i32 1
  %SS.i1528 = bitcast %union.SegmentSelector* %1361 to i16*
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1363 = getelementptr inbounds %struct.Segments, %struct.Segments* %1362, i32 0, i32 3
  %ES.i1529 = bitcast %union.SegmentSelector* %1363 to i16*
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1365 = getelementptr inbounds %struct.Segments, %struct.Segments* %1364, i32 0, i32 5
  %GS.i1530 = bitcast %union.SegmentSelector* %1365 to i16*
  %1366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1367 = getelementptr inbounds %struct.Segments, %struct.Segments* %1366, i32 0, i32 7
  %FS.i1531 = bitcast %union.SegmentSelector* %1367 to i16*
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1369 = getelementptr inbounds %struct.Segments, %struct.Segments* %1368, i32 0, i32 9
  %DS.i1532 = bitcast %union.SegmentSelector* %1369 to i16*
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1371 = getelementptr inbounds %struct.Segments, %struct.Segments* %1370, i32 0, i32 11
  %CS.i1533 = bitcast %union.SegmentSelector* %1371 to i16*
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1373 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1372, i32 0, i32 5
  %1374 = getelementptr inbounds %struct.Reg, %struct.Reg* %1373, i32 0, i32 0
  %GS_BASE.i1534 = bitcast %union.anon* %1374 to i64*
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1376 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1375, i32 0, i32 7
  %1377 = getelementptr inbounds %struct.Reg, %struct.Reg* %1376, i32 0, i32 0
  %FS_BASE.i1535 = bitcast %union.anon* %1377 to i64*
  %1378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1379 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1378, i64 0, i64 0
  %YMM0.i1536 = bitcast %union.VectorReg* %1379 to %"class.std::bitset"*
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1381 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1380, i64 0, i64 1
  %YMM1.i1537 = bitcast %union.VectorReg* %1381 to %"class.std::bitset"*
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1383 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1382, i64 0, i64 2
  %YMM2.i1538 = bitcast %union.VectorReg* %1383 to %"class.std::bitset"*
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1385 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1384, i64 0, i64 3
  %YMM3.i1539 = bitcast %union.VectorReg* %1385 to %"class.std::bitset"*
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1387 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1386, i64 0, i64 4
  %YMM4.i1540 = bitcast %union.VectorReg* %1387 to %"class.std::bitset"*
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1389 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1388, i64 0, i64 5
  %YMM5.i1541 = bitcast %union.VectorReg* %1389 to %"class.std::bitset"*
  %1390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1391 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1390, i64 0, i64 6
  %YMM6.i1542 = bitcast %union.VectorReg* %1391 to %"class.std::bitset"*
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1393 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1392, i64 0, i64 7
  %YMM7.i1543 = bitcast %union.VectorReg* %1393 to %"class.std::bitset"*
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1395 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1394, i64 0, i64 8
  %YMM8.i1544 = bitcast %union.VectorReg* %1395 to %"class.std::bitset"*
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1397 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1396, i64 0, i64 9
  %YMM9.i1545 = bitcast %union.VectorReg* %1397 to %"class.std::bitset"*
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1399 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1398, i64 0, i64 10
  %YMM10.i1546 = bitcast %union.VectorReg* %1399 to %"class.std::bitset"*
  %1400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1401 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1400, i64 0, i64 11
  %YMM11.i1547 = bitcast %union.VectorReg* %1401 to %"class.std::bitset"*
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1403 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1402, i64 0, i64 12
  %YMM12.i1548 = bitcast %union.VectorReg* %1403 to %"class.std::bitset"*
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1405 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1404, i64 0, i64 13
  %YMM13.i1549 = bitcast %union.VectorReg* %1405 to %"class.std::bitset"*
  %1406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1407 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1406, i64 0, i64 14
  %YMM14.i1550 = bitcast %union.VectorReg* %1407 to %"class.std::bitset"*
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1409 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1408, i64 0, i64 15
  %YMM15.i1551 = bitcast %union.VectorReg* %1409 to %"class.std::bitset"*
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1411 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1410, i64 0, i64 0
  %XMM0.i1552 = bitcast %union.VectorReg* %1411 to %union.vec128_t*
  %1412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1413 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1412, i64 0, i64 1
  %XMM1.i1553 = bitcast %union.VectorReg* %1413 to %union.vec128_t*
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1415 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1414, i64 0, i64 2
  %XMM2.i1554 = bitcast %union.VectorReg* %1415 to %union.vec128_t*
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1417 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1416, i64 0, i64 3
  %XMM3.i1555 = bitcast %union.VectorReg* %1417 to %union.vec128_t*
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1419 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1418, i64 0, i64 4
  %XMM4.i1556 = bitcast %union.VectorReg* %1419 to %union.vec128_t*
  %1420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1421 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1420, i64 0, i64 5
  %XMM5.i1557 = bitcast %union.VectorReg* %1421 to %union.vec128_t*
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1423 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1422, i64 0, i64 6
  %XMM6.i1558 = bitcast %union.VectorReg* %1423 to %union.vec128_t*
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1425 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1424, i64 0, i64 7
  %XMM7.i1559 = bitcast %union.VectorReg* %1425 to %union.vec128_t*
  %1426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1427 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1426, i64 0, i64 8
  %XMM8.i1560 = bitcast %union.VectorReg* %1427 to %union.vec128_t*
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1429 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1428, i64 0, i64 9
  %XMM9.i1561 = bitcast %union.VectorReg* %1429 to %union.vec128_t*
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1431 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1430, i64 0, i64 10
  %XMM10.i1562 = bitcast %union.VectorReg* %1431 to %union.vec128_t*
  %1432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1433 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1432, i64 0, i64 11
  %XMM11.i1563 = bitcast %union.VectorReg* %1433 to %union.vec128_t*
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1435 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1434, i64 0, i64 12
  %XMM12.i1564 = bitcast %union.VectorReg* %1435 to %union.vec128_t*
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1437 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1436, i64 0, i64 13
  %XMM13.i1565 = bitcast %union.VectorReg* %1437 to %union.vec128_t*
  %1438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1439 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1438, i64 0, i64 14
  %XMM14.i1566 = bitcast %union.VectorReg* %1439 to %union.vec128_t*
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1441 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1440, i64 0, i64 15
  %XMM15.i1567 = bitcast %union.VectorReg* %1441 to %union.vec128_t*
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1443 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1442, i32 0, i32 0
  %1444 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1443, i64 0, i64 0
  %ST0.i1568 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1444, i32 0, i32 1
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1446 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1445, i32 0, i32 0
  %1447 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1446, i64 0, i64 1
  %ST1.i1569 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1447, i32 0, i32 1
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1449 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1448, i32 0, i32 0
  %1450 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1449, i64 0, i64 2
  %ST2.i1570 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1450, i32 0, i32 1
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1452 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1451, i32 0, i32 0
  %1453 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1452, i64 0, i64 3
  %ST3.i1571 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1453, i32 0, i32 1
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1455 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1454, i32 0, i32 0
  %1456 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1455, i64 0, i64 4
  %ST4.i1572 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1456, i32 0, i32 1
  %1457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1458 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1457, i32 0, i32 0
  %1459 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1458, i64 0, i64 5
  %ST5.i1573 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1459, i32 0, i32 1
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1461 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1460, i32 0, i32 0
  %1462 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1461, i64 0, i64 6
  %ST6.i1574 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1462, i32 0, i32 1
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1464 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1463, i32 0, i32 0
  %1465 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1464, i64 0, i64 7
  %ST7.i1575 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1465, i32 0, i32 1
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1467 = getelementptr inbounds %struct.MMX, %struct.MMX* %1466, i32 0, i32 0
  %1468 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1467, i64 0, i64 0
  %1469 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1468, i32 0, i32 1
  %1470 = bitcast %union.vec64_t* %1469 to %struct.uint64v1_t*
  %1471 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1470, i32 0, i32 0
  %MM0.i1576 = getelementptr inbounds [1 x i64], [1 x i64]* %1471, i64 0, i64 0
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1473 = getelementptr inbounds %struct.MMX, %struct.MMX* %1472, i32 0, i32 0
  %1474 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1473, i64 0, i64 1
  %1475 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1474, i32 0, i32 1
  %1476 = bitcast %union.vec64_t* %1475 to %struct.uint64v1_t*
  %1477 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1476, i32 0, i32 0
  %MM1.i1577 = getelementptr inbounds [1 x i64], [1 x i64]* %1477, i64 0, i64 0
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1479 = getelementptr inbounds %struct.MMX, %struct.MMX* %1478, i32 0, i32 0
  %1480 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1479, i64 0, i64 2
  %1481 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1480, i32 0, i32 1
  %1482 = bitcast %union.vec64_t* %1481 to %struct.uint64v1_t*
  %1483 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1482, i32 0, i32 0
  %MM2.i1578 = getelementptr inbounds [1 x i64], [1 x i64]* %1483, i64 0, i64 0
  %1484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1485 = getelementptr inbounds %struct.MMX, %struct.MMX* %1484, i32 0, i32 0
  %1486 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1485, i64 0, i64 3
  %1487 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1486, i32 0, i32 1
  %1488 = bitcast %union.vec64_t* %1487 to %struct.uint64v1_t*
  %1489 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1488, i32 0, i32 0
  %MM3.i1579 = getelementptr inbounds [1 x i64], [1 x i64]* %1489, i64 0, i64 0
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1491 = getelementptr inbounds %struct.MMX, %struct.MMX* %1490, i32 0, i32 0
  %1492 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1491, i64 0, i64 4
  %1493 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1492, i32 0, i32 1
  %1494 = bitcast %union.vec64_t* %1493 to %struct.uint64v1_t*
  %1495 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1494, i32 0, i32 0
  %MM4.i1580 = getelementptr inbounds [1 x i64], [1 x i64]* %1495, i64 0, i64 0
  %1496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1497 = getelementptr inbounds %struct.MMX, %struct.MMX* %1496, i32 0, i32 0
  %1498 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1497, i64 0, i64 5
  %1499 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1498, i32 0, i32 1
  %1500 = bitcast %union.vec64_t* %1499 to %struct.uint64v1_t*
  %1501 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1500, i32 0, i32 0
  %MM5.i1581 = getelementptr inbounds [1 x i64], [1 x i64]* %1501, i64 0, i64 0
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1503 = getelementptr inbounds %struct.MMX, %struct.MMX* %1502, i32 0, i32 0
  %1504 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1503, i64 0, i64 6
  %1505 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1504, i32 0, i32 1
  %1506 = bitcast %union.vec64_t* %1505 to %struct.uint64v1_t*
  %1507 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1506, i32 0, i32 0
  %MM6.i1582 = getelementptr inbounds [1 x i64], [1 x i64]* %1507, i64 0, i64 0
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1509 = getelementptr inbounds %struct.MMX, %struct.MMX* %1508, i32 0, i32 0
  %1510 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1509, i64 0, i64 7
  %1511 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1510, i32 0, i32 1
  %1512 = bitcast %union.vec64_t* %1511 to %struct.uint64v1_t*
  %1513 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1512, i32 0, i32 0
  %MM7.i1583 = getelementptr inbounds [1 x i64], [1 x i64]* %1513, i64 0, i64 0
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1584 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1514, i32 0, i32 5
  %1515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1585 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1515, i32 0, i32 1
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1586 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1516, i32 0, i32 11
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1587 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1517, i32 0, i32 13
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1588 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1518, i32 0, i32 3
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1589 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1519, i32 0, i32 9
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1590 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1520, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i1442, align 8, !noalias !2454
  store i64* @DR1, i64** %_DR1.i1443, align 8, !noalias !2454
  store i64* @DR2, i64** %_DR2.i1444, align 8, !noalias !2454
  store i64* @DR3, i64** %_DR3.i1445, align 8, !noalias !2454
  store i64* @DR4, i64** %_DR4.i1446, align 8, !noalias !2454
  store i64* @DR5, i64** %_DR5.i1447, align 8, !noalias !2454
  store i64* @DR6, i64** %_DR6.i1448, align 8, !noalias !2454
  store i64* @DR7, i64** %_DR7.i1449, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i1450, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i1451, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i1452, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i1453, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i1454, align 8, !noalias !2454
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i1455, align 8, !noalias !2454
  %1521 = bitcast %"class.std::bitset"* %YMM0.i1536 to double*
  %1522 = load double, double* %1521, !alias.scope !2458, !noalias !2459
  %1523 = load i64, i64* %RSP.i1517, !alias.scope !2458, !noalias !2459
  %1524 = load %struct.Memory*, %struct.Memory** %MEMORY.i1441, !noalias !2454
  %1525 = inttoptr i64 %1523 to i64*
  %1526 = load i64, i64* %1525
  store i64 %1526, i64* %PC.i1456, !alias.scope !2458, !noalias !2459
  %1527 = add i64 %1523, 8
  store i64 %1527, i64* %RSP.i1517, !alias.scope !2458, !noalias !2459
  %1528 = call double @sqrt(double %1522)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1536, !alias.scope !2458, !noalias !2459
  %1529 = bitcast %"class.std::bitset"* %YMM0.i1536 to double*
  store double %1528, double* %1529, !alias.scope !2458, !noalias !2459
  %1530 = load %struct.Memory*, %struct.Memory** %MEMORY.i1441, !noalias !2454
  %1531 = bitcast %struct.State** %state.i1432 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1531)
  %1532 = bitcast i64* %curr_pc.i1433 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1532)
  %1533 = bitcast %struct.Memory** %memory.i1434 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1533)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i1435)
  %1534 = bitcast i64* %SS_BASE.i1436 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1534)
  %1535 = bitcast i64* %ES_BASE.i1437 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1535)
  %1536 = bitcast i64* %DS_BASE.i1438 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1536)
  %1537 = bitcast i64* %CS_BASE.i1439 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1537)
  %1538 = bitcast %struct.State** %STATE.i1440 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1538)
  %1539 = bitcast %struct.Memory** %MEMORY.i1441 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1539)
  %1540 = bitcast i64** %_DR0.i1442 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1540)
  %1541 = bitcast i64** %_DR1.i1443 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1541)
  %1542 = bitcast i64** %_DR2.i1444 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1542)
  %1543 = bitcast i64** %_DR3.i1445 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1543)
  %1544 = bitcast i64** %_DR4.i1446 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1544)
  %1545 = bitcast i64** %_DR5.i1447 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1545)
  %1546 = bitcast i64** %_DR6.i1448 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1546)
  %1547 = bitcast i64** %_DR7.i1449 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1547)
  %1548 = bitcast i64** %CR0.i1450 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1548)
  %1549 = bitcast i64** %CR1.i1451 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1549)
  %1550 = bitcast i64** %CR2.i1452 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1550)
  %1551 = bitcast i64** %CR3.i1453 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1551)
  %1552 = bitcast i64** %CR4.i1454 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1552)
  %1553 = bitcast i64** %CR8.i1455 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1553)
  %1554 = load i64, i64* %RBP
  %1555 = sub i64 %1554, 144
  %1556 = bitcast %union.vec128_t* %XMM0 to i8*
  %1557 = load i64, i64* %PC
  %1558 = add i64 %1557, 8
  store i64 %1558, i64* %PC
  %1559 = bitcast i8* %1556 to double*
  %1560 = load double, double* %1559, align 1
  %1561 = inttoptr i64 %1555 to double*
  store double %1560, double* %1561
  %1562 = load i64, i64* %RBP
  %1563 = sub i64 %1562, 24
  %1564 = load i64, i64* %PC
  %1565 = add i64 %1564, 4
  store i64 %1565, i64* %PC
  %1566 = inttoptr i64 %1563 to i64*
  %1567 = load i64, i64* %1566
  store i64 %1567, i64* %RAX, align 8, !tbaa !2428
  %1568 = load i64, i64* %RAX
  %1569 = load i64, i64* %PC
  %1570 = add i64 %1569, 4
  store i64 %1570, i64* %PC
  %1571 = add i64 1, %1568
  store i64 %1571, i64* %RAX, align 8, !tbaa !2428
  %1572 = icmp ult i64 %1571, %1568
  %1573 = icmp ult i64 %1571, 1
  %1574 = or i1 %1572, %1573
  %1575 = zext i1 %1574 to i8
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1575, i8* %1576, align 1, !tbaa !2434
  %1577 = trunc i64 %1571 to i32
  %1578 = and i32 %1577, 255
  %1579 = call i32 @llvm.ctpop.i32(i32 %1578) #17
  %1580 = trunc i32 %1579 to i8
  %1581 = and i8 %1580, 1
  %1582 = xor i8 %1581, 1
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1582, i8* %1583, align 1, !tbaa !2448
  %1584 = xor i64 1, %1568
  %1585 = xor i64 %1584, %1571
  %1586 = lshr i64 %1585, 4
  %1587 = trunc i64 %1586 to i8
  %1588 = and i8 %1587, 1
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1588, i8* %1589, align 1, !tbaa !2449
  %1590 = icmp eq i64 %1571, 0
  %1591 = zext i1 %1590 to i8
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1591, i8* %1592, align 1, !tbaa !2450
  %1593 = lshr i64 %1571, 63
  %1594 = trunc i64 %1593 to i8
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1594, i8* %1595, align 1, !tbaa !2451
  %1596 = lshr i64 %1568, 63
  %1597 = xor i64 %1593, %1596
  %1598 = add nuw nsw i64 %1597, %1593
  %1599 = icmp eq i64 %1598, 2
  %1600 = zext i1 %1599 to i8
  %1601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1600, i8* %1601, align 1, !tbaa !2452
  %1602 = load i64, i64* %RBP
  %1603 = sub i64 %1602, 24
  %1604 = load i64, i64* %RAX
  %1605 = load i64, i64* %PC
  %1606 = add i64 %1605, 4
  store i64 %1606, i64* %PC
  %1607 = inttoptr i64 %1603 to i64*
  store i64 %1604, i64* %1607
  %1608 = load i64, i64* %PC
  %1609 = sub i64 %1608, 66
  %1610 = load i64, i64* %PC
  %1611 = add i64 %1610, 5
  store i64 %1611, i64* %PC
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1609, i64* %1612, align 8, !tbaa !2428
  br label %block_4014de

block_4012d2:                                     ; preds = %block_401297
  %1613 = sub i64 %1859, 176
  %1614 = load i64, i64* %PC
  %1615 = add i64 %1614, 6
  store i64 %1615, i64* %PC
  %1616 = inttoptr i64 %1613 to i32*
  %1617 = load i32, i32* %1616
  %1618 = zext i32 %1617 to i64
  store i64 %1618, i64* %RAX, align 8, !tbaa !2428
  %1619 = load i32, i32* %EAX
  %1620 = zext i32 %1619 to i64
  %1621 = load i64, i64* %RBP
  %1622 = sub i64 %1621, 172
  %1623 = load i64, i64* %PC
  %1624 = add i64 %1623, 6
  store i64 %1624, i64* %PC
  %1625 = inttoptr i64 %1622 to i32*
  %1626 = load i32, i32* %1625
  %1627 = sub i32 %1619, %1626
  %1628 = icmp ult i32 %1619, %1626
  %1629 = zext i1 %1628 to i8
  %1630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1629, i8* %1630, align 1, !tbaa !2434
  %1631 = and i32 %1627, 255
  %1632 = call i32 @llvm.ctpop.i32(i32 %1631) #17
  %1633 = trunc i32 %1632 to i8
  %1634 = and i8 %1633, 1
  %1635 = xor i8 %1634, 1
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1635, i8* %1636, align 1, !tbaa !2448
  %1637 = xor i32 %1626, %1619
  %1638 = xor i32 %1637, %1627
  %1639 = lshr i32 %1638, 4
  %1640 = trunc i32 %1639 to i8
  %1641 = and i8 %1640, 1
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1641, i8* %1642, align 1, !tbaa !2449
  %1643 = icmp eq i32 %1627, 0
  %1644 = zext i1 %1643 to i8
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1644, i8* %1645, align 1, !tbaa !2450
  %1646 = lshr i32 %1627, 31
  %1647 = trunc i32 %1646 to i8
  %1648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1647, i8* %1648, align 1, !tbaa !2451
  %1649 = lshr i32 %1619, 31
  %1650 = lshr i32 %1626, 31
  %1651 = xor i32 %1650, %1649
  %1652 = xor i32 %1646, %1649
  %1653 = add nuw nsw i32 %1652, %1651
  %1654 = icmp eq i32 %1653, 2
  %1655 = zext i1 %1654 to i8
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1655, i8* %1656, align 1, !tbaa !2452
  %1657 = load i64, i64* %PC
  %1658 = add i64 %1657, 63
  %1659 = load i64, i64* %PC
  %1660 = add i64 %1659, 6
  %1661 = load i64, i64* %PC
  %1662 = add i64 %1661, 6
  store i64 %1662, i64* %PC
  %1663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1664 = load i8, i8* %1663, align 1, !tbaa !2450
  %1665 = icmp eq i8 %1664, 0
  %1666 = zext i1 %1665 to i8
  store i8 %1666, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %1667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1668 = select i1 %1665, i64 %1658, i64 %1660
  store i64 %1668, i64* %1667, align 8, !tbaa !2428
  %1669 = load i8, i8* %BRANCH_TAKEN
  %1670 = icmp eq i8 %1669, 1
  br i1 %1670, label %block_40131d, label %block_4012e4

block_4015d0:                                     ; preds = %block_40092d, %block_4015c9
  %MEMORY.5 = phi %struct.Memory* [ %9638, %block_4015c9 ], [ %10205, %block_40092d ]
  %1671 = load i64, i64* %RBP
  %1672 = sub i64 %1671, 4
  %1673 = load i64, i64* %PC
  %1674 = add i64 %1673, 3
  store i64 %1674, i64* %PC
  %1675 = inttoptr i64 %1672 to i32*
  %1676 = load i32, i32* %1675
  %1677 = zext i32 %1676 to i64
  store i64 %1677, i64* %RAX, align 8, !tbaa !2428
  %1678 = load i64, i64* %RSP
  %1679 = load i64, i64* %PC
  %1680 = add i64 %1679, 7
  store i64 %1680, i64* %PC
  %1681 = add i64 320, %1678
  store i64 %1681, i64* %RSP, align 8, !tbaa !2428
  %1682 = icmp ult i64 %1681, %1678
  %1683 = icmp ult i64 %1681, 320
  %1684 = or i1 %1682, %1683
  %1685 = zext i1 %1684 to i8
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1685, i8* %1686, align 1, !tbaa !2434
  %1687 = trunc i64 %1681 to i32
  %1688 = and i32 %1687, 255
  %1689 = call i32 @llvm.ctpop.i32(i32 %1688) #17
  %1690 = trunc i32 %1689 to i8
  %1691 = and i8 %1690, 1
  %1692 = xor i8 %1691, 1
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1692, i8* %1693, align 1, !tbaa !2448
  %1694 = xor i64 320, %1678
  %1695 = xor i64 %1694, %1681
  %1696 = lshr i64 %1695, 4
  %1697 = trunc i64 %1696 to i8
  %1698 = and i8 %1697, 1
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1698, i8* %1699, align 1, !tbaa !2449
  %1700 = icmp eq i64 %1681, 0
  %1701 = zext i1 %1700 to i8
  %1702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1701, i8* %1702, align 1, !tbaa !2450
  %1703 = lshr i64 %1681, 63
  %1704 = trunc i64 %1703 to i8
  %1705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1704, i8* %1705, align 1, !tbaa !2451
  %1706 = lshr i64 %1678, 63
  %1707 = xor i64 %1703, %1706
  %1708 = add nuw nsw i64 %1707, %1703
  %1709 = icmp eq i64 %1708, 2
  %1710 = zext i1 %1709 to i8
  %1711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1710, i8* %1711, align 1, !tbaa !2452
  %1712 = load i64, i64* %PC
  %1713 = add i64 %1712, 1
  store i64 %1713, i64* %PC
  %1714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1715 = load i64, i64* %1714, align 8, !tbaa !2428
  %1716 = add i64 %1715, 8
  %1717 = inttoptr i64 %1715 to i64*
  %1718 = load i64, i64* %1717
  store i64 %1718, i64* %RBP, align 8, !tbaa !2428
  store i64 %1716, i64* %1714, align 8, !tbaa !2428
  %1719 = load i64, i64* %PC
  %1720 = add i64 %1719, 1
  store i64 %1720, i64* %PC
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1723 = load i64, i64* %1722, align 8, !tbaa !2428
  %1724 = inttoptr i64 %1723 to i64*
  %1725 = load i64, i64* %1724
  store i64 %1725, i64* %1721, align 8, !tbaa !2428
  %1726 = add i64 %1723, 8
  store i64 %1726, i64* %1722, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.5

block_400dcd:                                     ; preds = %block_400dbf
  store i32 2, i32* bitcast (%J_type* @J to i32*)
  %1727 = load i64, i64* %PC
  %1728 = add i64 %1727, 16
  %1729 = load i64, i64* %PC
  %1730 = add i64 %1729, 5
  store i64 %1730, i64* %PC
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1728, i64* %1731, align 8, !tbaa !2428
  br label %block_400de8

block_400fd0:                                     ; preds = %block_400fbe
  %1732 = load i64, i64* %RBP
  %1733 = sub i64 %1732, 64
  %1734 = load i64, i64* %PC
  %1735 = add i64 %1734, 4
  store i64 %1735, i64* %PC
  %1736 = inttoptr i64 %1733 to i64*
  %1737 = load i64, i64* %1736
  store i64 %1737, i64* %RDI, align 8, !tbaa !2428
  %1738 = load i64, i64* %PC
  %1739 = add i64 %1738, 8
  store i64 %1739, i64* %PC
  %1740 = load i32, i32* bitcast (%J_type* @J to i32*)
  %1741 = sext i32 %1740 to i64
  store i64 %1741, i64* %RSI, align 8, !tbaa !2428
  %1742 = load i64, i64* %PC
  %1743 = add i64 %1742, 8
  store i64 %1743, i64* %PC
  %1744 = load i32, i32* bitcast (%K_type* @K to i32*)
  %1745 = sext i32 %1744 to i64
  store i64 %1745, i64* %RDX, align 8, !tbaa !2428
  %1746 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1747 = load i64, i64* %PC
  %1748 = add i64 %1747, 9
  store i64 %1748, i64* %PC
  %1749 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %1750 = bitcast i8* %1746 to double*
  store double %1749, double* %1750, align 1, !tbaa !2432
  %1751 = getelementptr inbounds i8, i8* %1746, i64 8
  %1752 = bitcast i8* %1751 to double*
  store double 0.000000e+00, double* %1752, align 1, !tbaa !2432
  %1753 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1754 = load i64, i64* %PC
  %1755 = add i64 %1754, 9
  store i64 %1755, i64* %PC
  %1756 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %1757 = bitcast i8* %1753 to double*
  store double %1756, double* %1757, align 1, !tbaa !2432
  %1758 = getelementptr inbounds i8, i8* %1753, i64 8
  %1759 = bitcast i8* %1758 to double*
  store double 0.000000e+00, double* %1759, align 1, !tbaa !2432
  %1760 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %1761 = load i64, i64* %PC
  %1762 = add i64 %1761, 9
  store i64 %1762, i64* %PC
  %1763 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %1764 = bitcast i8* %1760 to double*
  store double %1763, double* %1764, align 1, !tbaa !2432
  %1765 = getelementptr inbounds i8, i8* %1760, i64 8
  %1766 = bitcast i8* %1765 to double*
  store double 0.000000e+00, double* %1766, align 1, !tbaa !2432
  %1767 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %1768 = load i64, i64* %PC
  %1769 = add i64 %1768, 9
  store i64 %1769, i64* %PC
  %1770 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %1771 = bitcast i8* %1767 to double*
  store double %1770, double* %1771, align 1, !tbaa !2432
  %1772 = getelementptr inbounds i8, i8* %1767, i64 8
  %1773 = bitcast i8* %1772 to double*
  store double 0.000000e+00, double* %1773, align 1, !tbaa !2432
  %1774 = load i64, i64* %PC
  %1775 = add i64 %1774, 1496
  %1776 = load i64, i64* %PC
  %1777 = add i64 %1776, 5
  %1778 = load i64, i64* %PC
  %1779 = add i64 %1778, 5
  store i64 %1779, i64* %PC
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1781 = load i64, i64* %1780, align 8, !tbaa !2428
  %1782 = add i64 %1781, -8
  %1783 = inttoptr i64 %1782 to i64*
  store i64 %1777, i64* %1783
  store i64 %1782, i64* %1780, align 8, !tbaa !2428
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1775, i64* %1784, align 8, !tbaa !2428
  %1785 = load i64, i64* %PC
  %1786 = call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %1785, %struct.Memory* %MEMORY.21)
  br label %block_40100d

block_400df6:                                     ; preds = %block_400de8
  store i32 0, i32* bitcast (%J_type* @J to i32*)
  %1787 = load i64, i64* %PC
  %1788 = add i64 %1787, 16
  %1789 = load i64, i64* %PC
  %1790 = add i64 %1789, 5
  store i64 %1790, i64* %PC
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1788, i64* %1791, align 8, !tbaa !2428
  br label %block_400e11

block_401297:                                     ; preds = %block_40126f, %block_4012a5
  %MEMORY.6 = phi %struct.Memory* [ %MEMORY.20, %block_40126f ], [ %3277, %block_4012a5 ]
  %1792 = load i64, i64* %RBP
  %1793 = sub i64 %1792, 24
  %1794 = load i64, i64* %PC
  %1795 = add i64 %1794, 4
  store i64 %1795, i64* %PC
  %1796 = inttoptr i64 %1793 to i64*
  %1797 = load i64, i64* %1796
  store i64 %1797, i64* %RAX, align 8, !tbaa !2428
  %1798 = load i64, i64* %RAX
  %1799 = load i64, i64* %RBP
  %1800 = sub i64 %1799, 80
  %1801 = load i64, i64* %PC
  %1802 = add i64 %1801, 4
  store i64 %1802, i64* %PC
  %1803 = inttoptr i64 %1800 to i64*
  %1804 = load i64, i64* %1803
  %1805 = sub i64 %1798, %1804
  %1806 = icmp ugt i64 %1804, %1798
  %1807 = zext i1 %1806 to i8
  %1808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1807, i8* %1808, align 1, !tbaa !2434
  %1809 = trunc i64 %1805 to i32
  %1810 = and i32 %1809, 255
  %1811 = call i32 @llvm.ctpop.i32(i32 %1810) #17
  %1812 = trunc i32 %1811 to i8
  %1813 = and i8 %1812, 1
  %1814 = xor i8 %1813, 1
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1814, i8* %1815, align 1, !tbaa !2448
  %1816 = xor i64 %1804, %1798
  %1817 = xor i64 %1816, %1805
  %1818 = lshr i64 %1817, 4
  %1819 = trunc i64 %1818 to i8
  %1820 = and i8 %1819, 1
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1820, i8* %1821, align 1, !tbaa !2449
  %1822 = icmp eq i64 %1805, 0
  %1823 = zext i1 %1822 to i8
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1823, i8* %1824, align 1, !tbaa !2450
  %1825 = lshr i64 %1805, 63
  %1826 = trunc i64 %1825 to i8
  %1827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1826, i8* %1827, align 1, !tbaa !2451
  %1828 = lshr i64 %1798, 63
  %1829 = lshr i64 %1804, 63
  %1830 = xor i64 %1829, %1828
  %1831 = xor i64 %1825, %1828
  %1832 = add nuw nsw i64 %1831, %1830
  %1833 = icmp eq i64 %1832, 2
  %1834 = zext i1 %1833 to i8
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1834, i8* %1835, align 1, !tbaa !2452
  %1836 = load i64, i64* %PC
  %1837 = add i64 %1836, 51
  %1838 = load i64, i64* %PC
  %1839 = add i64 %1838, 6
  %1840 = load i64, i64* %PC
  %1841 = add i64 %1840, 6
  store i64 %1841, i64* %PC
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1843 = load i8, i8* %1842, align 1, !tbaa !2450
  %1844 = icmp eq i8 %1843, 0
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1846 = load i8, i8* %1845, align 1, !tbaa !2451
  %1847 = icmp ne i8 %1846, 0
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1849 = load i8, i8* %1848, align 1, !tbaa !2452
  %1850 = icmp ne i8 %1849, 0
  %1851 = xor i1 %1847, %1850
  %1852 = xor i1 %1851, true
  %1853 = and i1 %1844, %1852
  %1854 = zext i1 %1853 to i8
  store i8 %1854, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1856 = select i1 %1853, i64 %1837, i64 %1839
  store i64 %1856, i64* %1855, align 8, !tbaa !2428
  %1857 = load i8, i8* %BRANCH_TAKEN
  %1858 = icmp eq i8 %1857, 1
  %1859 = load i64, i64* %RBP
  br i1 %1858, label %block_4012d2, label %block_4012a5

block_401537:                                     ; preds = %block_401525
  %1860 = load i64, i64* %RBP
  %1861 = sub i64 %1860, 104
  %1862 = load i64, i64* %PC
  %1863 = add i64 %1862, 4
  store i64 %1863, i64* %PC
  %1864 = inttoptr i64 %1861 to i64*
  %1865 = load i64, i64* %1864
  store i64 %1865, i64* %RDI, align 8, !tbaa !2428
  %1866 = load i64, i64* %PC
  %1867 = add i64 %1866, 8
  store i64 %1867, i64* %PC
  %1868 = load i32, i32* bitcast (%J_type* @J to i32*)
  %1869 = sext i32 %1868 to i64
  store i64 %1869, i64* %RSI, align 8, !tbaa !2428
  %1870 = load i64, i64* %PC
  %1871 = add i64 %1870, 8
  store i64 %1871, i64* %PC
  %1872 = load i32, i32* bitcast (%K_type* @K to i32*)
  %1873 = sext i32 %1872 to i64
  store i64 %1873, i64* %RDX, align 8, !tbaa !2428
  %1874 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1875 = load i64, i64* %RBP
  %1876 = sub i64 %1875, 144
  %1877 = load i64, i64* %PC
  %1878 = add i64 %1877, 8
  store i64 %1878, i64* %PC
  %1879 = inttoptr i64 %1876 to double*
  %1880 = load double, double* %1879
  %1881 = bitcast i8* %1874 to double*
  store double %1880, double* %1881, align 1, !tbaa !2432
  %1882 = getelementptr inbounds i8, i8* %1874, i64 8
  %1883 = bitcast i8* %1882 to double*
  store double 0.000000e+00, double* %1883, align 1, !tbaa !2432
  %1884 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1885 = load i64, i64* %RBP
  %1886 = sub i64 %1885, 144
  %1887 = load i64, i64* %PC
  %1888 = add i64 %1887, 8
  store i64 %1888, i64* %PC
  %1889 = inttoptr i64 %1886 to double*
  %1890 = load double, double* %1889
  %1891 = bitcast i8* %1884 to double*
  store double %1890, double* %1891, align 1, !tbaa !2432
  %1892 = getelementptr inbounds i8, i8* %1884, i64 8
  %1893 = bitcast i8* %1892 to double*
  store double 0.000000e+00, double* %1893, align 1, !tbaa !2432
  %1894 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %1895 = load i64, i64* %RBP
  %1896 = sub i64 %1895, 144
  %1897 = load i64, i64* %PC
  %1898 = add i64 %1897, 8
  store i64 %1898, i64* %PC
  %1899 = inttoptr i64 %1896 to double*
  %1900 = load double, double* %1899
  %1901 = bitcast i8* %1894 to double*
  store double %1900, double* %1901, align 1, !tbaa !2432
  %1902 = getelementptr inbounds i8, i8* %1894, i64 8
  %1903 = bitcast i8* %1902 to double*
  store double 0.000000e+00, double* %1903, align 1, !tbaa !2432
  %1904 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %1905 = load i64, i64* %RBP
  %1906 = sub i64 %1905, 144
  %1907 = load i64, i64* %PC
  %1908 = add i64 %1907, 8
  store i64 %1908, i64* %PC
  %1909 = inttoptr i64 %1906 to double*
  %1910 = load double, double* %1909
  %1911 = bitcast i8* %1904 to double*
  store double %1910, double* %1911, align 1, !tbaa !2432
  %1912 = getelementptr inbounds i8, i8* %1904, i64 8
  %1913 = bitcast i8* %1912 to double*
  store double 0.000000e+00, double* %1913, align 1, !tbaa !2432
  %1914 = load i64, i64* %PC
  %1915 = add i64 %1914, 117
  %1916 = load i64, i64* %PC
  %1917 = add i64 %1916, 5
  %1918 = load i64, i64* %PC
  %1919 = add i64 %1918, 5
  store i64 %1919, i64* %PC
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1921 = load i64, i64* %1920, align 8, !tbaa !2428
  %1922 = add i64 %1921, -8
  %1923 = inttoptr i64 %1922 to i64*
  store i64 %1917, i64* %1923
  store i64 %1922, i64* %1920, align 8, !tbaa !2428
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1915, i64* %1924, align 8, !tbaa !2428
  %1925 = load i64, i64* %PC
  %1926 = call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %1925, %struct.Memory* %MEMORY.3)
  br label %block_401570

block_400ec9:                                     ; preds = %block_400ebb
  %1927 = load i64, i64* %PC
  %1928 = add i64 %1927, 7
  store i64 %1928, i64* %PC
  %1929 = load i32, i32* bitcast (%J_type* @J to i32*)
  %1930 = zext i32 %1929 to i64
  store i64 %1930, i64* %RAX, align 8, !tbaa !2428
  %1931 = load i64, i64* %PC
  %1932 = add i64 %1931, 7
  store i64 %1932, i64* %PC
  %1933 = load i32, i32* bitcast (%K_type* @K to i32*)
  %1934 = zext i32 %1933 to i64
  store i64 %1934, i64* %RCX, align 8, !tbaa !2428
  %1935 = load i64, i64* %RCX
  %1936 = load i64, i64* %PC
  %1937 = add i64 %1936, 7
  store i64 %1937, i64* %PC
  %1938 = trunc i64 %1935 to i32
  %1939 = load i32, i32* bitcast (%J_type* @J to i32*)
  %1940 = sub i32 %1938, %1939
  %1941 = zext i32 %1940 to i64
  store i64 %1941, i64* %RCX, align 8, !tbaa !2428
  %1942 = icmp ult i32 %1938, %1939
  %1943 = zext i1 %1942 to i8
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1943, i8* %1944, align 1, !tbaa !2434
  %1945 = and i32 %1940, 255
  %1946 = call i32 @llvm.ctpop.i32(i32 %1945) #17
  %1947 = trunc i32 %1946 to i8
  %1948 = and i8 %1947, 1
  %1949 = xor i8 %1948, 1
  %1950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1949, i8* %1950, align 1, !tbaa !2448
  %1951 = xor i32 %1939, %1938
  %1952 = xor i32 %1951, %1940
  %1953 = lshr i32 %1952, 4
  %1954 = trunc i32 %1953 to i8
  %1955 = and i8 %1954, 1
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1955, i8* %1956, align 1, !tbaa !2449
  %1957 = icmp eq i32 %1940, 0
  %1958 = zext i1 %1957 to i8
  %1959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1958, i8* %1959, align 1, !tbaa !2450
  %1960 = lshr i32 %1940, 31
  %1961 = trunc i32 %1960 to i8
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1961, i8* %1962, align 1, !tbaa !2451
  %1963 = lshr i32 %1938, 31
  %1964 = lshr i32 %1939, 31
  %1965 = xor i32 %1964, %1963
  %1966 = xor i32 %1960, %1963
  %1967 = add nuw nsw i32 %1966, %1965
  %1968 = icmp eq i32 %1967, 2
  %1969 = zext i1 %1968 to i8
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1969, i8* %1970, align 1, !tbaa !2452
  %1971 = load i64, i64* %RAX
  %1972 = load i32, i32* %ECX
  %1973 = zext i32 %1972 to i64
  %1974 = load i64, i64* %PC
  %1975 = add i64 %1974, 3
  store i64 %1975, i64* %PC
  %1976 = shl i64 %1971, 32
  %1977 = ashr exact i64 %1976, 32
  %1978 = shl i64 %1973, 32
  %1979 = ashr exact i64 %1978, 32
  %1980 = mul nsw i64 %1979, %1977
  %1981 = trunc i64 %1980 to i32
  %1982 = and i64 %1980, 4294967295
  store i64 %1982, i64* %RAX, align 8, !tbaa !2428
  %1983 = shl i64 %1980, 32
  %1984 = ashr exact i64 %1983, 32
  %1985 = icmp ne i64 %1984, %1980
  %1986 = zext i1 %1985 to i8
  %1987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1986, i8* %1987, align 1, !tbaa !2434
  %1988 = and i32 %1981, 255
  %1989 = call i32 @llvm.ctpop.i32(i32 %1988) #17
  %1990 = trunc i32 %1989 to i8
  %1991 = and i8 %1990, 1
  %1992 = xor i8 %1991, 1
  %1993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1992, i8* %1993, align 1, !tbaa !2448
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1994, align 1, !tbaa !2449
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1995, align 1, !tbaa !2450
  %1996 = lshr i32 %1981, 31
  %1997 = trunc i32 %1996 to i8
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1997, i8* %1998, align 1, !tbaa !2451
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1986, i8* %1999, align 1, !tbaa !2452
  %2000 = load i64, i64* %PC
  %2001 = add i64 %2000, 7
  store i64 %2001, i64* %PC
  %2002 = load i32, i32* bitcast (%L_type* @L to i32*)
  %2003 = zext i32 %2002 to i64
  store i64 %2003, i64* %RCX, align 8, !tbaa !2428
  %2004 = load i64, i64* %RCX
  %2005 = load i64, i64* %PC
  %2006 = add i64 %2005, 7
  store i64 %2006, i64* %PC
  %2007 = trunc i64 %2004 to i32
  %2008 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2009 = sub i32 %2007, %2008
  %2010 = zext i32 %2009 to i64
  store i64 %2010, i64* %RCX, align 8, !tbaa !2428
  %2011 = icmp ult i32 %2007, %2008
  %2012 = zext i1 %2011 to i8
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2012, i8* %2013, align 1, !tbaa !2434
  %2014 = and i32 %2009, 255
  %2015 = call i32 @llvm.ctpop.i32(i32 %2014) #17
  %2016 = trunc i32 %2015 to i8
  %2017 = and i8 %2016, 1
  %2018 = xor i8 %2017, 1
  %2019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2018, i8* %2019, align 1, !tbaa !2448
  %2020 = xor i32 %2008, %2007
  %2021 = xor i32 %2020, %2009
  %2022 = lshr i32 %2021, 4
  %2023 = trunc i32 %2022 to i8
  %2024 = and i8 %2023, 1
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2024, i8* %2025, align 1, !tbaa !2449
  %2026 = icmp eq i32 %2009, 0
  %2027 = zext i1 %2026 to i8
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2027, i8* %2028, align 1, !tbaa !2450
  %2029 = lshr i32 %2009, 31
  %2030 = trunc i32 %2029 to i8
  %2031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2030, i8* %2031, align 1, !tbaa !2451
  %2032 = lshr i32 %2007, 31
  %2033 = lshr i32 %2008, 31
  %2034 = xor i32 %2033, %2032
  %2035 = xor i32 %2029, %2032
  %2036 = add nuw nsw i32 %2035, %2034
  %2037 = icmp eq i32 %2036, 2
  %2038 = zext i1 %2037 to i8
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2038, i8* %2039, align 1, !tbaa !2452
  %2040 = load i64, i64* %RAX
  %2041 = load i32, i32* %ECX
  %2042 = zext i32 %2041 to i64
  %2043 = load i64, i64* %PC
  %2044 = add i64 %2043, 3
  store i64 %2044, i64* %PC
  %2045 = shl i64 %2040, 32
  %2046 = ashr exact i64 %2045, 32
  %2047 = shl i64 %2042, 32
  %2048 = ashr exact i64 %2047, 32
  %2049 = mul nsw i64 %2048, %2046
  %2050 = trunc i64 %2049 to i32
  %2051 = and i64 %2049, 4294967295
  store i64 %2051, i64* %RAX, align 8, !tbaa !2428
  %2052 = shl i64 %2049, 32
  %2053 = ashr exact i64 %2052, 32
  %2054 = icmp ne i64 %2053, %2049
  %2055 = zext i1 %2054 to i8
  %2056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2055, i8* %2056, align 1, !tbaa !2434
  %2057 = and i32 %2050, 255
  %2058 = call i32 @llvm.ctpop.i32(i32 %2057) #17
  %2059 = trunc i32 %2058 to i8
  %2060 = and i8 %2059, 1
  %2061 = xor i8 %2060, 1
  %2062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2061, i8* %2062, align 1, !tbaa !2448
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2063, align 1, !tbaa !2449
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2064, align 1, !tbaa !2450
  %2065 = lshr i32 %2050, 31
  %2066 = trunc i32 %2065 to i8
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2066, i8* %2067, align 1, !tbaa !2451
  %2068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2055, i8* %2068, align 1, !tbaa !2452
  %2069 = load i32, i32* %EAX
  %2070 = zext i32 %2069 to i64
  %2071 = load i64, i64* %PC
  %2072 = add i64 %2071, 7
  store i64 %2072, i64* %PC
  store i32 %2069, i32* bitcast (%J_type* @J to i32*)
  %2073 = load i64, i64* %PC
  %2074 = add i64 %2073, 7
  store i64 %2074, i64* %PC
  %2075 = load i32, i32* bitcast (%L_type* @L to i32*)
  %2076 = zext i32 %2075 to i64
  store i64 %2076, i64* %RAX, align 8, !tbaa !2428
  %2077 = load i64, i64* %RAX
  %2078 = load i64, i64* %PC
  %2079 = add i64 %2078, 8
  store i64 %2079, i64* %PC
  %2080 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2081 = shl i64 %2077, 32
  %2082 = ashr exact i64 %2081, 32
  %2083 = sext i32 %2080 to i64
  %2084 = mul nsw i64 %2083, %2082
  %2085 = trunc i64 %2084 to i32
  %2086 = and i64 %2084, 4294967295
  store i64 %2086, i64* %RAX, align 8, !tbaa !2428
  %2087 = shl i64 %2084, 32
  %2088 = ashr exact i64 %2087, 32
  %2089 = icmp ne i64 %2088, %2084
  %2090 = zext i1 %2089 to i8
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2090, i8* %2091, align 1, !tbaa !2434
  %2092 = and i32 %2085, 255
  %2093 = call i32 @llvm.ctpop.i32(i32 %2092) #17
  %2094 = trunc i32 %2093 to i8
  %2095 = and i8 %2094, 1
  %2096 = xor i8 %2095, 1
  %2097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2096, i8* %2097, align 1, !tbaa !2448
  %2098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2098, align 1, !tbaa !2449
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2099, align 1, !tbaa !2450
  %2100 = lshr i32 %2085, 31
  %2101 = trunc i32 %2100 to i8
  %2102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2101, i8* %2102, align 1, !tbaa !2451
  %2103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2090, i8* %2103, align 1, !tbaa !2452
  %2104 = load i64, i64* %PC
  %2105 = add i64 %2104, 7
  store i64 %2105, i64* %PC
  %2106 = load i32, i32* bitcast (%L_type* @L to i32*)
  %2107 = zext i32 %2106 to i64
  store i64 %2107, i64* %RCX, align 8, !tbaa !2428
  %2108 = load i64, i64* %RCX
  %2109 = load i64, i64* %PC
  %2110 = add i64 %2109, 7
  store i64 %2110, i64* %PC
  %2111 = trunc i64 %2108 to i32
  %2112 = load i32, i32* bitcast (%J_type* @J to i32*)
  %2113 = sub i32 %2111, %2112
  %2114 = zext i32 %2113 to i64
  store i64 %2114, i64* %RCX, align 8, !tbaa !2428
  %2115 = icmp ult i32 %2111, %2112
  %2116 = zext i1 %2115 to i8
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2116, i8* %2117, align 1, !tbaa !2434
  %2118 = and i32 %2113, 255
  %2119 = call i32 @llvm.ctpop.i32(i32 %2118) #17
  %2120 = trunc i32 %2119 to i8
  %2121 = and i8 %2120, 1
  %2122 = xor i8 %2121, 1
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2122, i8* %2123, align 1, !tbaa !2448
  %2124 = xor i32 %2112, %2111
  %2125 = xor i32 %2124, %2113
  %2126 = lshr i32 %2125, 4
  %2127 = trunc i32 %2126 to i8
  %2128 = and i8 %2127, 1
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2128, i8* %2129, align 1, !tbaa !2449
  %2130 = icmp eq i32 %2113, 0
  %2131 = zext i1 %2130 to i8
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2131, i8* %2132, align 1, !tbaa !2450
  %2133 = lshr i32 %2113, 31
  %2134 = trunc i32 %2133 to i8
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2134, i8* %2135, align 1, !tbaa !2451
  %2136 = lshr i32 %2111, 31
  %2137 = lshr i32 %2112, 31
  %2138 = xor i32 %2137, %2136
  %2139 = xor i32 %2133, %2136
  %2140 = add nuw nsw i32 %2139, %2138
  %2141 = icmp eq i32 %2140, 2
  %2142 = zext i1 %2141 to i8
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2142, i8* %2143, align 1, !tbaa !2452
  %2144 = load i64, i64* %RCX
  %2145 = load i64, i64* %PC
  %2146 = add i64 %2145, 8
  store i64 %2146, i64* %PC
  %2147 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2148 = shl i64 %2144, 32
  %2149 = ashr exact i64 %2148, 32
  %2150 = sext i32 %2147 to i64
  %2151 = mul nsw i64 %2150, %2149
  %2152 = trunc i64 %2151 to i32
  %2153 = and i64 %2151, 4294967295
  store i64 %2153, i64* %RCX, align 8, !tbaa !2428
  %2154 = shl i64 %2151, 32
  %2155 = ashr exact i64 %2154, 32
  %2156 = icmp ne i64 %2155, %2151
  %2157 = zext i1 %2156 to i8
  %2158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2157, i8* %2158, align 1, !tbaa !2434
  %2159 = and i32 %2152, 255
  %2160 = call i32 @llvm.ctpop.i32(i32 %2159) #17
  %2161 = trunc i32 %2160 to i8
  %2162 = and i8 %2161, 1
  %2163 = xor i8 %2162, 1
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2163, i8* %2164, align 1, !tbaa !2448
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2165, align 1, !tbaa !2449
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2166, align 1, !tbaa !2450
  %2167 = lshr i32 %2152, 31
  %2168 = trunc i32 %2167 to i8
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2168, i8* %2169, align 1, !tbaa !2451
  %2170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2157, i8* %2170, align 1, !tbaa !2452
  %2171 = load i64, i64* %RAX
  %2172 = load i32, i32* %ECX
  %2173 = zext i32 %2172 to i64
  %2174 = load i64, i64* %PC
  %2175 = add i64 %2174, 2
  store i64 %2175, i64* %PC
  %2176 = trunc i64 %2171 to i32
  %2177 = sub i32 %2176, %2172
  %2178 = zext i32 %2177 to i64
  store i64 %2178, i64* %RAX, align 8, !tbaa !2428
  %2179 = icmp ult i32 %2176, %2172
  %2180 = zext i1 %2179 to i8
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2180, i8* %2181, align 1, !tbaa !2434
  %2182 = and i32 %2177, 255
  %2183 = call i32 @llvm.ctpop.i32(i32 %2182) #17
  %2184 = trunc i32 %2183 to i8
  %2185 = and i8 %2184, 1
  %2186 = xor i8 %2185, 1
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2186, i8* %2187, align 1, !tbaa !2448
  %2188 = xor i64 %2173, %2171
  %2189 = trunc i64 %2188 to i32
  %2190 = xor i32 %2189, %2177
  %2191 = lshr i32 %2190, 4
  %2192 = trunc i32 %2191 to i8
  %2193 = and i8 %2192, 1
  %2194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2193, i8* %2194, align 1, !tbaa !2449
  %2195 = icmp eq i32 %2177, 0
  %2196 = zext i1 %2195 to i8
  %2197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2196, i8* %2197, align 1, !tbaa !2450
  %2198 = lshr i32 %2177, 31
  %2199 = trunc i32 %2198 to i8
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2199, i8* %2200, align 1, !tbaa !2451
  %2201 = lshr i32 %2176, 31
  %2202 = lshr i32 %2172, 31
  %2203 = xor i32 %2202, %2201
  %2204 = xor i32 %2198, %2201
  %2205 = add nuw nsw i32 %2204, %2203
  %2206 = icmp eq i32 %2205, 2
  %2207 = zext i1 %2206 to i8
  %2208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2207, i8* %2208, align 1, !tbaa !2452
  %2209 = load i32, i32* %EAX
  %2210 = zext i32 %2209 to i64
  %2211 = load i64, i64* %PC
  %2212 = add i64 %2211, 7
  store i64 %2212, i64* %PC
  store i32 %2209, i32* bitcast (%K_type* @K to i32*)
  %2213 = load i64, i64* %PC
  %2214 = add i64 %2213, 7
  store i64 %2214, i64* %PC
  %2215 = load i32, i32* bitcast (%L_type* @L to i32*)
  %2216 = zext i32 %2215 to i64
  store i64 %2216, i64* %RAX, align 8, !tbaa !2428
  %2217 = load i64, i64* %RAX
  %2218 = load i64, i64* %PC
  %2219 = add i64 %2218, 7
  store i64 %2219, i64* %PC
  %2220 = trunc i64 %2217 to i32
  %2221 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2222 = sub i32 %2220, %2221
  %2223 = zext i32 %2222 to i64
  store i64 %2223, i64* %RAX, align 8, !tbaa !2428
  %2224 = icmp ult i32 %2220, %2221
  %2225 = zext i1 %2224 to i8
  %2226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2225, i8* %2226, align 1, !tbaa !2434
  %2227 = and i32 %2222, 255
  %2228 = call i32 @llvm.ctpop.i32(i32 %2227) #17
  %2229 = trunc i32 %2228 to i8
  %2230 = and i8 %2229, 1
  %2231 = xor i8 %2230, 1
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2231, i8* %2232, align 1, !tbaa !2448
  %2233 = xor i32 %2221, %2220
  %2234 = xor i32 %2233, %2222
  %2235 = lshr i32 %2234, 4
  %2236 = trunc i32 %2235 to i8
  %2237 = and i8 %2236, 1
  %2238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2237, i8* %2238, align 1, !tbaa !2449
  %2239 = icmp eq i32 %2222, 0
  %2240 = zext i1 %2239 to i8
  %2241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2240, i8* %2241, align 1, !tbaa !2450
  %2242 = lshr i32 %2222, 31
  %2243 = trunc i32 %2242 to i8
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2243, i8* %2244, align 1, !tbaa !2451
  %2245 = lshr i32 %2220, 31
  %2246 = lshr i32 %2221, 31
  %2247 = xor i32 %2246, %2245
  %2248 = xor i32 %2242, %2245
  %2249 = add nuw nsw i32 %2248, %2247
  %2250 = icmp eq i32 %2249, 2
  %2251 = zext i1 %2250 to i8
  %2252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2251, i8* %2252, align 1, !tbaa !2452
  %2253 = load i64, i64* %PC
  %2254 = add i64 %2253, 7
  store i64 %2254, i64* %PC
  %2255 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2256 = zext i32 %2255 to i64
  store i64 %2256, i64* %RCX, align 8, !tbaa !2428
  %2257 = load i64, i64* %RCX
  %2258 = load i64, i64* %PC
  %2259 = add i64 %2258, 7
  store i64 %2259, i64* %PC
  %2260 = trunc i64 %2257 to i32
  %2261 = load i32, i32* bitcast (%J_type* @J to i32*)
  %2262 = add i32 %2261, %2260
  %2263 = zext i32 %2262 to i64
  store i64 %2263, i64* %RCX, align 8, !tbaa !2428
  %2264 = icmp ult i32 %2262, %2260
  %2265 = icmp ult i32 %2262, %2261
  %2266 = or i1 %2264, %2265
  %2267 = zext i1 %2266 to i8
  %2268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2267, i8* %2268, align 1, !tbaa !2434
  %2269 = and i32 %2262, 255
  %2270 = call i32 @llvm.ctpop.i32(i32 %2269) #17
  %2271 = trunc i32 %2270 to i8
  %2272 = and i8 %2271, 1
  %2273 = xor i8 %2272, 1
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2273, i8* %2274, align 1, !tbaa !2448
  %2275 = xor i32 %2261, %2260
  %2276 = xor i32 %2275, %2262
  %2277 = lshr i32 %2276, 4
  %2278 = trunc i32 %2277 to i8
  %2279 = and i8 %2278, 1
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2279, i8* %2280, align 1, !tbaa !2449
  %2281 = icmp eq i32 %2262, 0
  %2282 = zext i1 %2281 to i8
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2282, i8* %2283, align 1, !tbaa !2450
  %2284 = lshr i32 %2262, 31
  %2285 = trunc i32 %2284 to i8
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2285, i8* %2286, align 1, !tbaa !2451
  %2287 = lshr i32 %2260, 31
  %2288 = lshr i32 %2261, 31
  %2289 = xor i32 %2284, %2287
  %2290 = xor i32 %2284, %2288
  %2291 = add nuw nsw i32 %2289, %2290
  %2292 = icmp eq i32 %2291, 2
  %2293 = zext i1 %2292 to i8
  %2294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2293, i8* %2294, align 1, !tbaa !2452
  %2295 = load i64, i64* %RAX
  %2296 = load i32, i32* %ECX
  %2297 = zext i32 %2296 to i64
  %2298 = load i64, i64* %PC
  %2299 = add i64 %2298, 3
  store i64 %2299, i64* %PC
  %2300 = shl i64 %2295, 32
  %2301 = ashr exact i64 %2300, 32
  %2302 = shl i64 %2297, 32
  %2303 = ashr exact i64 %2302, 32
  %2304 = mul nsw i64 %2303, %2301
  %2305 = trunc i64 %2304 to i32
  %2306 = and i64 %2304, 4294967295
  store i64 %2306, i64* %RAX, align 8, !tbaa !2428
  %2307 = shl i64 %2304, 32
  %2308 = ashr exact i64 %2307, 32
  %2309 = icmp ne i64 %2308, %2304
  %2310 = zext i1 %2309 to i8
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2310, i8* %2311, align 1, !tbaa !2434
  %2312 = and i32 %2305, 255
  %2313 = call i32 @llvm.ctpop.i32(i32 %2312) #17
  %2314 = trunc i32 %2313 to i8
  %2315 = and i8 %2314, 1
  %2316 = xor i8 %2315, 1
  %2317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2316, i8* %2317, align 1, !tbaa !2448
  %2318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2318, align 1, !tbaa !2449
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2319, align 1, !tbaa !2450
  %2320 = lshr i32 %2305, 31
  %2321 = trunc i32 %2320 to i8
  %2322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2321, i8* %2322, align 1, !tbaa !2451
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2310, i8* %2323, align 1, !tbaa !2452
  %2324 = load i32, i32* %EAX
  %2325 = zext i32 %2324 to i64
  %2326 = load i64, i64* %PC
  %2327 = add i64 %2326, 7
  store i64 %2327, i64* %PC
  store i32 %2324, i32* bitcast (%L_type* @L to i32*)
  %2328 = load i64, i64* %PC
  %2329 = add i64 %2328, 7
  store i64 %2329, i64* %PC
  %2330 = load i32, i32* bitcast (%J_type* @J to i32*)
  %2331 = zext i32 %2330 to i64
  store i64 %2331, i64* %RAX, align 8, !tbaa !2428
  %2332 = load i64, i64* %RAX
  %2333 = load i64, i64* %PC
  %2334 = add i64 %2333, 7
  store i64 %2334, i64* %PC
  %2335 = trunc i64 %2332 to i32
  %2336 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2337 = add i32 %2336, %2335
  %2338 = zext i32 %2337 to i64
  store i64 %2338, i64* %RAX, align 8, !tbaa !2428
  %2339 = icmp ult i32 %2337, %2335
  %2340 = icmp ult i32 %2337, %2336
  %2341 = or i1 %2339, %2340
  %2342 = zext i1 %2341 to i8
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2342, i8* %2343, align 1, !tbaa !2434
  %2344 = and i32 %2337, 255
  %2345 = call i32 @llvm.ctpop.i32(i32 %2344) #17
  %2346 = trunc i32 %2345 to i8
  %2347 = and i8 %2346, 1
  %2348 = xor i8 %2347, 1
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2348, i8* %2349, align 1, !tbaa !2448
  %2350 = xor i32 %2336, %2335
  %2351 = xor i32 %2350, %2337
  %2352 = lshr i32 %2351, 4
  %2353 = trunc i32 %2352 to i8
  %2354 = and i8 %2353, 1
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2354, i8* %2355, align 1, !tbaa !2449
  %2356 = icmp eq i32 %2337, 0
  %2357 = zext i1 %2356 to i8
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2357, i8* %2358, align 1, !tbaa !2450
  %2359 = lshr i32 %2337, 31
  %2360 = trunc i32 %2359 to i8
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2360, i8* %2361, align 1, !tbaa !2451
  %2362 = lshr i32 %2335, 31
  %2363 = lshr i32 %2336, 31
  %2364 = xor i32 %2359, %2362
  %2365 = xor i32 %2359, %2363
  %2366 = add nuw nsw i32 %2364, %2365
  %2367 = icmp eq i32 %2366, 2
  %2368 = zext i1 %2367 to i8
  %2369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2368, i8* %2369, align 1, !tbaa !2452
  %2370 = load i64, i64* %RAX
  %2371 = load i64, i64* %PC
  %2372 = add i64 %2371, 7
  store i64 %2372, i64* %PC
  %2373 = trunc i64 %2370 to i32
  %2374 = load i32, i32* bitcast (%L_type* @L to i32*)
  %2375 = add i32 %2374, %2373
  %2376 = zext i32 %2375 to i64
  store i64 %2376, i64* %RAX, align 8, !tbaa !2428
  %2377 = icmp ult i32 %2375, %2373
  %2378 = icmp ult i32 %2375, %2374
  %2379 = or i1 %2377, %2378
  %2380 = zext i1 %2379 to i8
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2380, i8* %2381, align 1, !tbaa !2434
  %2382 = and i32 %2375, 255
  %2383 = call i32 @llvm.ctpop.i32(i32 %2382) #17
  %2384 = trunc i32 %2383 to i8
  %2385 = and i8 %2384, 1
  %2386 = xor i8 %2385, 1
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2386, i8* %2387, align 1, !tbaa !2448
  %2388 = xor i32 %2374, %2373
  %2389 = xor i32 %2388, %2375
  %2390 = lshr i32 %2389, 4
  %2391 = trunc i32 %2390 to i8
  %2392 = and i8 %2391, 1
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2392, i8* %2393, align 1, !tbaa !2449
  %2394 = icmp eq i32 %2375, 0
  %2395 = zext i1 %2394 to i8
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2395, i8* %2396, align 1, !tbaa !2450
  %2397 = lshr i32 %2375, 31
  %2398 = trunc i32 %2397 to i8
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2398, i8* %2399, align 1, !tbaa !2451
  %2400 = lshr i32 %2373, 31
  %2401 = lshr i32 %2374, 31
  %2402 = xor i32 %2397, %2400
  %2403 = xor i32 %2397, %2401
  %2404 = add nuw nsw i32 %2402, %2403
  %2405 = icmp eq i32 %2404, 2
  %2406 = zext i1 %2405 to i8
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2406, i8* %2407, align 1, !tbaa !2452
  %2408 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2409 = load i32, i32* %EAX
  %2410 = zext i32 %2409 to i64
  %2411 = load i64, i64* %PC
  %2412 = add i64 %2411, 4
  store i64 %2412, i64* %PC
  %2413 = sitofp i32 %2409 to double
  %2414 = bitcast i8* %2408 to double*
  store double %2413, double* %2414, align 1, !tbaa !2432
  %2415 = load i64, i64* %PC
  %2416 = add i64 %2415, 7
  store i64 %2416, i64* %PC
  %2417 = load i32, i32* bitcast (%L_type* @L to i32*)
  %2418 = zext i32 %2417 to i64
  store i64 %2418, i64* %RAX, align 8, !tbaa !2428
  %2419 = load i64, i64* %RAX
  %2420 = load i64, i64* %PC
  %2421 = add i64 %2420, 3
  store i64 %2421, i64* %PC
  %2422 = trunc i64 %2419 to i32
  %2423 = sub i32 %2422, 1
  %2424 = zext i32 %2423 to i64
  store i64 %2424, i64* %RAX, align 8, !tbaa !2428
  %2425 = icmp ult i32 %2422, 1
  %2426 = zext i1 %2425 to i8
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2426, i8* %2427, align 1, !tbaa !2434
  %2428 = and i32 %2423, 255
  %2429 = call i32 @llvm.ctpop.i32(i32 %2428) #17
  %2430 = trunc i32 %2429 to i8
  %2431 = and i8 %2430, 1
  %2432 = xor i8 %2431, 1
  %2433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2432, i8* %2433, align 1, !tbaa !2448
  %2434 = xor i64 1, %2419
  %2435 = trunc i64 %2434 to i32
  %2436 = xor i32 %2435, %2423
  %2437 = lshr i32 %2436, 4
  %2438 = trunc i32 %2437 to i8
  %2439 = and i8 %2438, 1
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2439, i8* %2440, align 1, !tbaa !2449
  %2441 = icmp eq i32 %2423, 0
  %2442 = zext i1 %2441 to i8
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2442, i8* %2443, align 1, !tbaa !2450
  %2444 = lshr i32 %2423, 31
  %2445 = trunc i32 %2444 to i8
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2445, i8* %2446, align 1, !tbaa !2451
  %2447 = lshr i32 %2422, 31
  %2448 = xor i32 %2444, %2447
  %2449 = add nuw nsw i32 %2448, %2447
  %2450 = icmp eq i32 %2449, 2
  %2451 = zext i1 %2450 to i8
  %2452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2451, i8* %2452, align 1, !tbaa !2452
  %2453 = load i32, i32* %EAX
  %2454 = zext i32 %2453 to i64
  %2455 = load i64, i64* %PC
  %2456 = add i64 %2455, 3
  store i64 %2456, i64* %PC
  %2457 = shl i64 %2454, 32
  %2458 = ashr exact i64 %2457, 32
  store i64 %2458, i64* %RDX, align 8, !tbaa !2428
  %2459 = load i64, i64* %RDX
  %2460 = mul i64 %2459, 8
  %2461 = add i64 %2460, ptrtoint (%E1_type* @E1 to i64)
  %2462 = bitcast %union.vec128_t* %XMM0 to i8*
  %2463 = load i64, i64* %PC
  %2464 = add i64 %2463, 9
  store i64 %2464, i64* %PC
  %2465 = bitcast i8* %2462 to double*
  %2466 = load double, double* %2465, align 1
  %2467 = inttoptr i64 %2461 to double*
  store double %2466, double* %2467
  %2468 = load i64, i64* %PC
  %2469 = add i64 %2468, 7
  store i64 %2469, i64* %PC
  %2470 = load i32, i32* bitcast (%J_type* @J to i32*)
  %2471 = zext i32 %2470 to i64
  store i64 %2471, i64* %RAX, align 8, !tbaa !2428
  %2472 = load i64, i64* %RAX
  %2473 = load i64, i64* %PC
  %2474 = add i64 %2473, 8
  store i64 %2474, i64* %PC
  %2475 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2476 = shl i64 %2472, 32
  %2477 = ashr exact i64 %2476, 32
  %2478 = sext i32 %2475 to i64
  %2479 = mul nsw i64 %2478, %2477
  %2480 = trunc i64 %2479 to i32
  %2481 = and i64 %2479, 4294967295
  store i64 %2481, i64* %RAX, align 8, !tbaa !2428
  %2482 = shl i64 %2479, 32
  %2483 = ashr exact i64 %2482, 32
  %2484 = icmp ne i64 %2483, %2479
  %2485 = zext i1 %2484 to i8
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2485, i8* %2486, align 1, !tbaa !2434
  %2487 = and i32 %2480, 255
  %2488 = call i32 @llvm.ctpop.i32(i32 %2487) #17
  %2489 = trunc i32 %2488 to i8
  %2490 = and i8 %2489, 1
  %2491 = xor i8 %2490, 1
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2491, i8* %2492, align 1, !tbaa !2448
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2493, align 1, !tbaa !2449
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2494, align 1, !tbaa !2450
  %2495 = lshr i32 %2480, 31
  %2496 = trunc i32 %2495 to i8
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2496, i8* %2497, align 1, !tbaa !2451
  %2498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2485, i8* %2498, align 1, !tbaa !2452
  %2499 = load i64, i64* %RAX
  %2500 = load i64, i64* %PC
  %2501 = add i64 %2500, 8
  store i64 %2501, i64* %PC
  %2502 = load i32, i32* bitcast (%L_type* @L to i32*)
  %2503 = shl i64 %2499, 32
  %2504 = ashr exact i64 %2503, 32
  %2505 = sext i32 %2502 to i64
  %2506 = mul nsw i64 %2505, %2504
  %2507 = trunc i64 %2506 to i32
  %2508 = and i64 %2506, 4294967295
  store i64 %2508, i64* %RAX, align 8, !tbaa !2428
  %2509 = shl i64 %2506, 32
  %2510 = ashr exact i64 %2509, 32
  %2511 = icmp ne i64 %2510, %2506
  %2512 = zext i1 %2511 to i8
  %2513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2512, i8* %2513, align 1, !tbaa !2434
  %2514 = and i32 %2507, 255
  %2515 = call i32 @llvm.ctpop.i32(i32 %2514) #17
  %2516 = trunc i32 %2515 to i8
  %2517 = and i8 %2516, 1
  %2518 = xor i8 %2517, 1
  %2519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2518, i8* %2519, align 1, !tbaa !2448
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2520, align 1, !tbaa !2449
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2521, align 1, !tbaa !2450
  %2522 = lshr i32 %2507, 31
  %2523 = trunc i32 %2522 to i8
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2523, i8* %2524, align 1, !tbaa !2451
  %2525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2512, i8* %2525, align 1, !tbaa !2452
  %2526 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2527 = load i32, i32* %EAX
  %2528 = zext i32 %2527 to i64
  %2529 = load i64, i64* %PC
  %2530 = add i64 %2529, 4
  store i64 %2530, i64* %PC
  %2531 = sitofp i32 %2527 to double
  %2532 = bitcast i8* %2526 to double*
  store double %2531, double* %2532, align 1, !tbaa !2432
  %2533 = load i64, i64* %PC
  %2534 = add i64 %2533, 7
  store i64 %2534, i64* %PC
  %2535 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2536 = zext i32 %2535 to i64
  store i64 %2536, i64* %RAX, align 8, !tbaa !2428
  %2537 = load i64, i64* %RAX
  %2538 = load i64, i64* %PC
  %2539 = add i64 %2538, 3
  store i64 %2539, i64* %PC
  %2540 = trunc i64 %2537 to i32
  %2541 = sub i32 %2540, 1
  %2542 = zext i32 %2541 to i64
  store i64 %2542, i64* %RAX, align 8, !tbaa !2428
  %2543 = icmp ult i32 %2540, 1
  %2544 = zext i1 %2543 to i8
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2544, i8* %2545, align 1, !tbaa !2434
  %2546 = and i32 %2541, 255
  %2547 = call i32 @llvm.ctpop.i32(i32 %2546) #17
  %2548 = trunc i32 %2547 to i8
  %2549 = and i8 %2548, 1
  %2550 = xor i8 %2549, 1
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2550, i8* %2551, align 1, !tbaa !2448
  %2552 = xor i64 1, %2537
  %2553 = trunc i64 %2552 to i32
  %2554 = xor i32 %2553, %2541
  %2555 = lshr i32 %2554, 4
  %2556 = trunc i32 %2555 to i8
  %2557 = and i8 %2556, 1
  %2558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2557, i8* %2558, align 1, !tbaa !2449
  %2559 = icmp eq i32 %2541, 0
  %2560 = zext i1 %2559 to i8
  %2561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2560, i8* %2561, align 1, !tbaa !2450
  %2562 = lshr i32 %2541, 31
  %2563 = trunc i32 %2562 to i8
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2563, i8* %2564, align 1, !tbaa !2451
  %2565 = lshr i32 %2540, 31
  %2566 = xor i32 %2562, %2565
  %2567 = add nuw nsw i32 %2566, %2565
  %2568 = icmp eq i32 %2567, 2
  %2569 = zext i1 %2568 to i8
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2569, i8* %2570, align 1, !tbaa !2452
  %2571 = load i32, i32* %EAX
  %2572 = zext i32 %2571 to i64
  %2573 = load i64, i64* %PC
  %2574 = add i64 %2573, 3
  store i64 %2574, i64* %PC
  %2575 = shl i64 %2572, 32
  %2576 = ashr exact i64 %2575, 32
  store i64 %2576, i64* %RDX, align 8, !tbaa !2428
  %2577 = load i64, i64* %RDX
  %2578 = mul i64 %2577, 8
  %2579 = add i64 %2578, ptrtoint (%E1_type* @E1 to i64)
  %2580 = bitcast %union.vec128_t* %XMM0 to i8*
  %2581 = load i64, i64* %PC
  %2582 = add i64 %2581, 9
  store i64 %2582, i64* %PC
  %2583 = bitcast i8* %2580 to double*
  %2584 = load double, double* %2583, align 1
  %2585 = inttoptr i64 %2579 to double*
  store double %2584, double* %2585
  %2586 = load i64, i64* %RBP
  %2587 = sub i64 %2586, 24
  %2588 = load i64, i64* %PC
  %2589 = add i64 %2588, 4
  store i64 %2589, i64* %PC
  %2590 = inttoptr i64 %2587 to i64*
  %2591 = load i64, i64* %2590
  store i64 %2591, i64* %RAX, align 8, !tbaa !2428
  %2592 = load i64, i64* %RAX
  %2593 = load i64, i64* %PC
  %2594 = add i64 %2593, 4
  store i64 %2594, i64* %PC
  %2595 = add i64 1, %2592
  store i64 %2595, i64* %RAX, align 8, !tbaa !2428
  %2596 = icmp ult i64 %2595, %2592
  %2597 = icmp ult i64 %2595, 1
  %2598 = or i1 %2596, %2597
  %2599 = zext i1 %2598 to i8
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2599, i8* %2600, align 1, !tbaa !2434
  %2601 = trunc i64 %2595 to i32
  %2602 = and i32 %2601, 255
  %2603 = call i32 @llvm.ctpop.i32(i32 %2602) #17
  %2604 = trunc i32 %2603 to i8
  %2605 = and i8 %2604, 1
  %2606 = xor i8 %2605, 1
  %2607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2606, i8* %2607, align 1, !tbaa !2448
  %2608 = xor i64 1, %2592
  %2609 = xor i64 %2608, %2595
  %2610 = lshr i64 %2609, 4
  %2611 = trunc i64 %2610 to i8
  %2612 = and i8 %2611, 1
  %2613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2612, i8* %2613, align 1, !tbaa !2449
  %2614 = icmp eq i64 %2595, 0
  %2615 = zext i1 %2614 to i8
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2615, i8* %2616, align 1, !tbaa !2450
  %2617 = lshr i64 %2595, 63
  %2618 = trunc i64 %2617 to i8
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2618, i8* %2619, align 1, !tbaa !2451
  %2620 = lshr i64 %2592, 63
  %2621 = xor i64 %2617, %2620
  %2622 = add nuw nsw i64 %2621, %2617
  %2623 = icmp eq i64 %2622, 2
  %2624 = zext i1 %2623 to i8
  %2625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2624, i8* %2625, align 1, !tbaa !2452
  %2626 = load i64, i64* %RBP
  %2627 = sub i64 %2626, 24
  %2628 = load i64, i64* %RAX
  %2629 = load i64, i64* %PC
  %2630 = add i64 %2629, 4
  store i64 %2630, i64* %PC
  %2631 = inttoptr i64 %2627 to i64*
  store i64 %2628, i64* %2631
  %2632 = load i64, i64* %PC
  %2633 = sub i64 %2632, 254
  %2634 = load i64, i64* %PC
  %2635 = add i64 %2634, 5
  store i64 %2635, i64* %PC
  %2636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2633, i64* %2636, align 8, !tbaa !2428
  br label %block_400ebb

block_4015c4:                                     ; preds = %block_401590
  %2637 = load i64, i64* %PC
  %2638 = sub i64 %2637, 3150
  %2639 = load i64, i64* %PC
  %2640 = add i64 %2639, 5
  store i64 %2640, i64* %PC
  %2641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2638, i64* %2641, align 8, !tbaa !2428
  br label %block_400976

block_40158b:                                     ; preds = %block_401570
  %2642 = load i64, i64* %PC
  %2643 = sub i64 %2642, 2992
  %2644 = load i64, i64* %PC
  %2645 = add i64 %2644, 5
  store i64 %2645, i64* %PC
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2643, i64* %2646, align 8, !tbaa !2428
  br label %block_4009db

block_400e50:                                     ; preds = %block_400db1
  %2647 = load i64, i64* %RBP
  %2648 = sub i64 %2647, 176
  %2649 = load i64, i64* %PC
  %2650 = add i64 %2649, 6
  store i64 %2650, i64* %PC
  %2651 = inttoptr i64 %2648 to i32*
  %2652 = load i32, i32* %2651
  %2653 = zext i32 %2652 to i64
  store i64 %2653, i64* %RAX, align 8, !tbaa !2428
  %2654 = load i32, i32* %EAX
  %2655 = zext i32 %2654 to i64
  %2656 = load i64, i64* %RBP
  %2657 = sub i64 %2656, 172
  %2658 = load i64, i64* %PC
  %2659 = add i64 %2658, 6
  store i64 %2659, i64* %PC
  %2660 = inttoptr i64 %2657 to i32*
  %2661 = load i32, i32* %2660
  %2662 = sub i32 %2654, %2661
  %2663 = icmp ult i32 %2654, %2661
  %2664 = zext i1 %2663 to i8
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2664, i8* %2665, align 1, !tbaa !2434
  %2666 = and i32 %2662, 255
  %2667 = call i32 @llvm.ctpop.i32(i32 %2666) #17
  %2668 = trunc i32 %2667 to i8
  %2669 = and i8 %2668, 1
  %2670 = xor i8 %2669, 1
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2670, i8* %2671, align 1, !tbaa !2448
  %2672 = xor i32 %2661, %2654
  %2673 = xor i32 %2672, %2662
  %2674 = lshr i32 %2673, 4
  %2675 = trunc i32 %2674 to i8
  %2676 = and i8 %2675, 1
  %2677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2676, i8* %2677, align 1, !tbaa !2449
  %2678 = icmp eq i32 %2662, 0
  %2679 = zext i1 %2678 to i8
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2679, i8* %2680, align 1, !tbaa !2450
  %2681 = lshr i32 %2662, 31
  %2682 = trunc i32 %2681 to i8
  %2683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2682, i8* %2683, align 1, !tbaa !2451
  %2684 = lshr i32 %2654, 31
  %2685 = lshr i32 %2661, 31
  %2686 = xor i32 %2685, %2684
  %2687 = xor i32 %2681, %2684
  %2688 = add nuw nsw i32 %2687, %2686
  %2689 = icmp eq i32 %2688, 2
  %2690 = zext i1 %2689 to i8
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2690, i8* %2691, align 1, !tbaa !2452
  %2692 = load i64, i64* %PC
  %2693 = add i64 %2692, 54
  %2694 = load i64, i64* %PC
  %2695 = add i64 %2694, 6
  %2696 = load i64, i64* %PC
  %2697 = add i64 %2696, 6
  store i64 %2697, i64* %PC
  %2698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2699 = load i8, i8* %2698, align 1, !tbaa !2450
  %2700 = icmp eq i8 %2699, 0
  %2701 = zext i1 %2700 to i8
  store i8 %2701, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2703 = select i1 %2700, i64 %2693, i64 %2695
  store i64 %2703, i64* %2702, align 8, !tbaa !2428
  %2704 = load i8, i8* %BRANCH_TAKEN
  %2705 = icmp eq i8 %2704, 1
  br i1 %2705, label %block_400e92, label %block_400e62

block_401379:                                     ; preds = %block_401387, %block_40131d
  %MEMORY.7 = phi %struct.Memory* [ %MEMORY.24, %block_40131d ], [ %11516, %block_401387 ]
  %2706 = load i64, i64* %RBP
  %2707 = sub i64 %2706, 24
  %2708 = load i64, i64* %PC
  %2709 = add i64 %2708, 4
  store i64 %2709, i64* %PC
  %2710 = inttoptr i64 %2707 to i64*
  %2711 = load i64, i64* %2710
  store i64 %2711, i64* %RAX, align 8, !tbaa !2428
  %2712 = load i64, i64* %RAX
  %2713 = load i64, i64* %RBP
  %2714 = sub i64 %2713, 88
  %2715 = load i64, i64* %PC
  %2716 = add i64 %2715, 4
  store i64 %2716, i64* %PC
  %2717 = inttoptr i64 %2714 to i64*
  %2718 = load i64, i64* %2717
  %2719 = sub i64 %2712, %2718
  %2720 = icmp ugt i64 %2718, %2712
  %2721 = zext i1 %2720 to i8
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2721, i8* %2722, align 1, !tbaa !2434
  %2723 = trunc i64 %2719 to i32
  %2724 = and i32 %2723, 255
  %2725 = call i32 @llvm.ctpop.i32(i32 %2724) #17
  %2726 = trunc i32 %2725 to i8
  %2727 = and i8 %2726, 1
  %2728 = xor i8 %2727, 1
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2728, i8* %2729, align 1, !tbaa !2448
  %2730 = xor i64 %2718, %2712
  %2731 = xor i64 %2730, %2719
  %2732 = lshr i64 %2731, 4
  %2733 = trunc i64 %2732 to i8
  %2734 = and i8 %2733, 1
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2734, i8* %2735, align 1, !tbaa !2449
  %2736 = icmp eq i64 %2719, 0
  %2737 = zext i1 %2736 to i8
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2737, i8* %2738, align 1, !tbaa !2450
  %2739 = lshr i64 %2719, 63
  %2740 = trunc i64 %2739 to i8
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2740, i8* %2741, align 1, !tbaa !2451
  %2742 = lshr i64 %2712, 63
  %2743 = lshr i64 %2718, 63
  %2744 = xor i64 %2743, %2742
  %2745 = xor i64 %2739, %2742
  %2746 = add nuw nsw i64 %2745, %2744
  %2747 = icmp eq i64 %2746, 2
  %2748 = zext i1 %2747 to i8
  %2749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2748, i8* %2749, align 1, !tbaa !2452
  %2750 = load i64, i64* %PC
  %2751 = add i64 %2750, 28
  %2752 = load i64, i64* %PC
  %2753 = add i64 %2752, 6
  %2754 = load i64, i64* %PC
  %2755 = add i64 %2754, 6
  store i64 %2755, i64* %PC
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2757 = load i8, i8* %2756, align 1, !tbaa !2450
  %2758 = icmp eq i8 %2757, 0
  %2759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2760 = load i8, i8* %2759, align 1, !tbaa !2451
  %2761 = icmp ne i8 %2760, 0
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2763 = load i8, i8* %2762, align 1, !tbaa !2452
  %2764 = icmp ne i8 %2763, 0
  %2765 = xor i1 %2761, %2764
  %2766 = xor i1 %2765, true
  %2767 = and i1 %2758, %2766
  %2768 = zext i1 %2767 to i8
  store i8 %2768, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2770 = select i1 %2767, i64 %2751, i64 %2753
  store i64 %2770, i64* %2769, align 8, !tbaa !2428
  %2771 = load i8, i8* %BRANCH_TAKEN
  %2772 = icmp eq i8 %2771, 1
  br i1 %2772, label %block_40139d, label %block_401387

block_400e3a:                                     ; preds = %block_400e1f, %block_400e2f
  %MEMORY.8 = phi %struct.Memory* [ %MEMORY.17, %block_400e2f ], [ %MEMORY.17, %block_400e1f ]
  %2773 = load i64, i64* %PC
  %2774 = add i64 %2773, 5
  %2775 = load i64, i64* %PC
  %2776 = add i64 %2775, 5
  store i64 %2776, i64* %PC
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2774, i64* %2777, align 8, !tbaa !2428
  %2778 = load i64, i64* %RBP
  %2779 = sub i64 %2778, 24
  %2780 = load i64, i64* %PC
  %2781 = add i64 %2780, 4
  store i64 %2781, i64* %PC
  %2782 = inttoptr i64 %2779 to i64*
  %2783 = load i64, i64* %2782
  store i64 %2783, i64* %RAX, align 8, !tbaa !2428
  %2784 = load i64, i64* %RAX
  %2785 = load i64, i64* %PC
  %2786 = add i64 %2785, 4
  store i64 %2786, i64* %PC
  %2787 = add i64 1, %2784
  store i64 %2787, i64* %RAX, align 8, !tbaa !2428
  %2788 = icmp ult i64 %2787, %2784
  %2789 = icmp ult i64 %2787, 1
  %2790 = or i1 %2788, %2789
  %2791 = zext i1 %2790 to i8
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2791, i8* %2792, align 1, !tbaa !2434
  %2793 = trunc i64 %2787 to i32
  %2794 = and i32 %2793, 255
  %2795 = call i32 @llvm.ctpop.i32(i32 %2794) #17
  %2796 = trunc i32 %2795 to i8
  %2797 = and i8 %2796, 1
  %2798 = xor i8 %2797, 1
  %2799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2798, i8* %2799, align 1, !tbaa !2448
  %2800 = xor i64 1, %2784
  %2801 = xor i64 %2800, %2787
  %2802 = lshr i64 %2801, 4
  %2803 = trunc i64 %2802 to i8
  %2804 = and i8 %2803, 1
  %2805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2804, i8* %2805, align 1, !tbaa !2449
  %2806 = icmp eq i64 %2787, 0
  %2807 = zext i1 %2806 to i8
  %2808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2807, i8* %2808, align 1, !tbaa !2450
  %2809 = lshr i64 %2787, 63
  %2810 = trunc i64 %2809 to i8
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2810, i8* %2811, align 1, !tbaa !2451
  %2812 = lshr i64 %2784, 63
  %2813 = xor i64 %2809, %2812
  %2814 = add nuw nsw i64 %2813, %2809
  %2815 = icmp eq i64 %2814, 2
  %2816 = zext i1 %2815 to i8
  %2817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2816, i8* %2817, align 1, !tbaa !2452
  %2818 = load i64, i64* %RBP
  %2819 = sub i64 %2818, 24
  %2820 = load i64, i64* %RAX
  %2821 = load i64, i64* %PC
  %2822 = add i64 %2821, 4
  store i64 %2822, i64* %PC
  %2823 = inttoptr i64 %2819 to i64*
  store i64 %2820, i64* %2823
  %2824 = load i64, i64* %PC
  %2825 = sub i64 %2824, 154
  %2826 = load i64, i64* %PC
  %2827 = add i64 %2826, 5
  store i64 %2827, i64* %PC
  %2828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2825, i64* %2828, align 8, !tbaa !2428
  br label %block_400db1

block_400d37:                                     ; preds = %block_400d29
  %2829 = load i64, i64* %PC
  %2830 = add i64 %2829, 10
  store i64 %2830, i64* %PC
  store i64 ptrtoint (%E1_type* @E1 to i64), i64* %RDI, align 8, !tbaa !2428
  %2831 = load i64, i64* %PC
  %2832 = add i64 %2831, 2319
  %2833 = load i64, i64* %PC
  %2834 = add i64 %2833, 5
  %2835 = load i64, i64* %PC
  %2836 = add i64 %2835, 5
  store i64 %2836, i64* %PC
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2838 = load i64, i64* %2837, align 8, !tbaa !2428
  %2839 = add i64 %2838, -8
  %2840 = inttoptr i64 %2839 to i64*
  store i64 %2834, i64* %2840
  store i64 %2839, i64* %2837, align 8, !tbaa !2428
  %2841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2832, i64* %2841, align 8, !tbaa !2428
  %2842 = load i64, i64* %PC
  %2843 = call %struct.Memory* @sub_401650_PA(%struct.State* %0, i64 %2842, %struct.Memory* %MEMORY.27)
  %2844 = load i64, i64* %RBP
  %2845 = sub i64 %2844, 24
  %2846 = load i64, i64* %PC
  %2847 = add i64 %2846, 4
  store i64 %2847, i64* %PC
  %2848 = inttoptr i64 %2845 to i64*
  %2849 = load i64, i64* %2848
  store i64 %2849, i64* %RAX, align 8, !tbaa !2428
  %2850 = load i64, i64* %RAX
  %2851 = load i64, i64* %PC
  %2852 = add i64 %2851, 4
  store i64 %2852, i64* %PC
  %2853 = add i64 1, %2850
  store i64 %2853, i64* %RAX, align 8, !tbaa !2428
  %2854 = icmp ult i64 %2853, %2850
  %2855 = icmp ult i64 %2853, 1
  %2856 = or i1 %2854, %2855
  %2857 = zext i1 %2856 to i8
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2857, i8* %2858, align 1, !tbaa !2434
  %2859 = trunc i64 %2853 to i32
  %2860 = and i32 %2859, 255
  %2861 = call i32 @llvm.ctpop.i32(i32 %2860) #17
  %2862 = trunc i32 %2861 to i8
  %2863 = and i8 %2862, 1
  %2864 = xor i8 %2863, 1
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2864, i8* %2865, align 1, !tbaa !2448
  %2866 = xor i64 1, %2850
  %2867 = xor i64 %2866, %2853
  %2868 = lshr i64 %2867, 4
  %2869 = trunc i64 %2868 to i8
  %2870 = and i8 %2869, 1
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2870, i8* %2871, align 1, !tbaa !2449
  %2872 = icmp eq i64 %2853, 0
  %2873 = zext i1 %2872 to i8
  %2874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2873, i8* %2874, align 1, !tbaa !2450
  %2875 = lshr i64 %2853, 63
  %2876 = trunc i64 %2875 to i8
  %2877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2876, i8* %2877, align 1, !tbaa !2451
  %2878 = lshr i64 %2850, 63
  %2879 = xor i64 %2875, %2878
  %2880 = add nuw nsw i64 %2879, %2875
  %2881 = icmp eq i64 %2880, 2
  %2882 = zext i1 %2881 to i8
  %2883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2882, i8* %2883, align 1, !tbaa !2452
  %2884 = load i64, i64* %RBP
  %2885 = sub i64 %2884, 24
  %2886 = load i64, i64* %RAX
  %2887 = load i64, i64* %PC
  %2888 = add i64 %2887, 4
  store i64 %2888, i64* %PC
  %2889 = inttoptr i64 %2885 to i64*
  store i64 %2886, i64* %2889
  %2890 = load i64, i64* %PC
  %2891 = sub i64 %2890, 41
  %2892 = load i64, i64* %PC
  %2893 = add i64 %2892, 5
  store i64 %2893, i64* %PC
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2891, i64* %2894, align 8, !tbaa !2428
  br label %block_400d29

block_40100d:                                     ; preds = %block_400fbe, %block_400fd0
  %MEMORY.9 = phi %struct.Memory* [ %MEMORY.21, %block_400fbe ], [ %1786, %block_400fd0 ]
  %2895 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2896 = load i64, i64* %PC
  %2897 = add i64 %2896, 8
  store i64 %2897, i64* %PC
  %2898 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 48) to double*)
  %2899 = bitcast i8* %2895 to double*
  store double %2898, double* %2899, align 1, !tbaa !2432
  %2900 = getelementptr inbounds i8, i8* %2895, i64 8
  %2901 = bitcast i8* %2900 to double*
  store double 0.000000e+00, double* %2901, align 1, !tbaa !2432
  %2902 = load i64, i64* %RBP
  %2903 = sub i64 %2902, 144
  %2904 = bitcast %union.vec128_t* %XMM0 to i8*
  %2905 = load i64, i64* %PC
  %2906 = add i64 %2905, 8
  store i64 %2906, i64* %PC
  %2907 = bitcast i8* %2904 to double*
  %2908 = load double, double* %2907, align 1
  %2909 = inttoptr i64 %2903 to double*
  store double %2908, double* %2909
  %2910 = load i64, i64* %RBP
  %2911 = sub i64 %2910, 152
  %2912 = bitcast %union.vec128_t* %XMM0 to i8*
  %2913 = load i64, i64* %PC
  %2914 = add i64 %2913, 8
  store i64 %2914, i64* %PC
  %2915 = bitcast i8* %2912 to double*
  %2916 = load double, double* %2915, align 1
  %2917 = inttoptr i64 %2911 to double*
  store double %2916, double* %2917
  %2918 = load i64, i64* %RBP
  %2919 = sub i64 %2918, 24
  %2920 = load i64, i64* %PC
  %2921 = add i64 %2920, 8
  store i64 %2921, i64* %PC
  %2922 = inttoptr i64 %2919 to i64*
  store i64 1, i64* %2922
  br label %block_40102d

block_400fbe:                                     ; preds = %block_400ebb
  %2923 = load i64, i64* %RBP
  %2924 = sub i64 %2923, 176
  %2925 = load i64, i64* %PC
  %2926 = add i64 %2925, 6
  store i64 %2926, i64* %PC
  %2927 = inttoptr i64 %2924 to i32*
  %2928 = load i32, i32* %2927
  %2929 = zext i32 %2928 to i64
  store i64 %2929, i64* %RAX, align 8, !tbaa !2428
  %2930 = load i32, i32* %EAX
  %2931 = zext i32 %2930 to i64
  %2932 = load i64, i64* %RBP
  %2933 = sub i64 %2932, 172
  %2934 = load i64, i64* %PC
  %2935 = add i64 %2934, 6
  store i64 %2935, i64* %PC
  %2936 = inttoptr i64 %2933 to i32*
  %2937 = load i32, i32* %2936
  %2938 = sub i32 %2930, %2937
  %2939 = icmp ult i32 %2930, %2937
  %2940 = zext i1 %2939 to i8
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2940, i8* %2941, align 1, !tbaa !2434
  %2942 = and i32 %2938, 255
  %2943 = call i32 @llvm.ctpop.i32(i32 %2942) #17
  %2944 = trunc i32 %2943 to i8
  %2945 = and i8 %2944, 1
  %2946 = xor i8 %2945, 1
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2946, i8* %2947, align 1, !tbaa !2448
  %2948 = xor i32 %2937, %2930
  %2949 = xor i32 %2948, %2938
  %2950 = lshr i32 %2949, 4
  %2951 = trunc i32 %2950 to i8
  %2952 = and i8 %2951, 1
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2952, i8* %2953, align 1, !tbaa !2449
  %2954 = icmp eq i32 %2938, 0
  %2955 = zext i1 %2954 to i8
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2955, i8* %2956, align 1, !tbaa !2450
  %2957 = lshr i32 %2938, 31
  %2958 = trunc i32 %2957 to i8
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2958, i8* %2959, align 1, !tbaa !2451
  %2960 = lshr i32 %2930, 31
  %2961 = lshr i32 %2937, 31
  %2962 = xor i32 %2961, %2960
  %2963 = xor i32 %2957, %2960
  %2964 = add nuw nsw i32 %2963, %2962
  %2965 = icmp eq i32 %2964, 2
  %2966 = zext i1 %2965 to i8
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2966, i8* %2967, align 1, !tbaa !2452
  %2968 = load i64, i64* %PC
  %2969 = add i64 %2968, 67
  %2970 = load i64, i64* %PC
  %2971 = add i64 %2970, 6
  %2972 = load i64, i64* %PC
  %2973 = add i64 %2972, 6
  store i64 %2973, i64* %PC
  %2974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2975 = load i8, i8* %2974, align 1, !tbaa !2450
  %2976 = icmp eq i8 %2975, 0
  %2977 = zext i1 %2976 to i8
  store i8 %2977, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2979 = select i1 %2976, i64 %2969, i64 %2971
  store i64 %2979, i64* %2978, align 8, !tbaa !2428
  %2980 = load i8, i8* %BRANCH_TAKEN
  %2981 = icmp eq i8 %2980, 1
  br i1 %2981, label %block_40100d, label %block_400fd0

block_401236:                                     ; preds = %block_401224
  %2982 = load i64, i64* %RBP
  %2983 = sub i64 %2982, 72
  %2984 = load i64, i64* %PC
  %2985 = add i64 %2984, 4
  store i64 %2985, i64* %PC
  %2986 = inttoptr i64 %2983 to i64*
  %2987 = load i64, i64* %2986
  store i64 %2987, i64* %RDI, align 8, !tbaa !2428
  %2988 = load i64, i64* %PC
  %2989 = add i64 %2988, 8
  store i64 %2989, i64* %PC
  %2990 = load i32, i32* bitcast (%J_type* @J to i32*)
  %2991 = sext i32 %2990 to i64
  store i64 %2991, i64* %RSI, align 8, !tbaa !2428
  %2992 = load i64, i64* %PC
  %2993 = add i64 %2992, 8
  store i64 %2993, i64* %PC
  %2994 = load i32, i32* bitcast (%K_type* @K to i32*)
  %2995 = sext i32 %2994 to i64
  store i64 %2995, i64* %RDX, align 8, !tbaa !2428
  %2996 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2997 = load i64, i64* %RBP
  %2998 = sub i64 %2997, 144
  %2999 = load i64, i64* %PC
  %3000 = add i64 %2999, 8
  store i64 %3000, i64* %PC
  %3001 = inttoptr i64 %2998 to double*
  %3002 = load double, double* %3001
  %3003 = bitcast i8* %2996 to double*
  store double %3002, double* %3003, align 1, !tbaa !2432
  %3004 = getelementptr inbounds i8, i8* %2996, i64 8
  %3005 = bitcast i8* %3004 to double*
  store double 0.000000e+00, double* %3005, align 1, !tbaa !2432
  %3006 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3007 = load i64, i64* %RBP
  %3008 = sub i64 %3007, 144
  %3009 = load i64, i64* %PC
  %3010 = add i64 %3009, 8
  store i64 %3010, i64* %PC
  %3011 = inttoptr i64 %3008 to double*
  %3012 = load double, double* %3011
  %3013 = bitcast i8* %3006 to double*
  store double %3012, double* %3013, align 1, !tbaa !2432
  %3014 = getelementptr inbounds i8, i8* %3006, i64 8
  %3015 = bitcast i8* %3014 to double*
  store double 0.000000e+00, double* %3015, align 1, !tbaa !2432
  %3016 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %3017 = load i64, i64* %RBP
  %3018 = sub i64 %3017, 152
  %3019 = load i64, i64* %PC
  %3020 = add i64 %3019, 8
  store i64 %3020, i64* %PC
  %3021 = inttoptr i64 %3018 to double*
  %3022 = load double, double* %3021
  %3023 = bitcast i8* %3016 to double*
  store double %3022, double* %3023, align 1, !tbaa !2432
  %3024 = getelementptr inbounds i8, i8* %3016, i64 8
  %3025 = bitcast i8* %3024 to double*
  store double 0.000000e+00, double* %3025, align 1, !tbaa !2432
  %3026 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %3027 = load i64, i64* %RBP
  %3028 = sub i64 %3027, 152
  %3029 = load i64, i64* %PC
  %3030 = add i64 %3029, 8
  store i64 %3030, i64* %PC
  %3031 = inttoptr i64 %3028 to double*
  %3032 = load double, double* %3031
  %3033 = bitcast i8* %3026 to double*
  store double %3032, double* %3033, align 1, !tbaa !2432
  %3034 = getelementptr inbounds i8, i8* %3026, i64 8
  %3035 = bitcast i8* %3034 to double*
  store double 0.000000e+00, double* %3035, align 1, !tbaa !2432
  %3036 = load i64, i64* %PC
  %3037 = add i64 %3036, 886
  %3038 = load i64, i64* %PC
  %3039 = add i64 %3038, 5
  %3040 = load i64, i64* %PC
  %3041 = add i64 %3040, 5
  store i64 %3041, i64* %PC
  %3042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3043 = load i64, i64* %3042, align 8, !tbaa !2428
  %3044 = add i64 %3043, -8
  %3045 = inttoptr i64 %3044 to i64*
  store i64 %3039, i64* %3045
  store i64 %3044, i64* %3042, align 8, !tbaa !2428
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3037, i64* %3046, align 8, !tbaa !2428
  %3047 = load i64, i64* %PC
  %3048 = call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %3047, %struct.Memory* %MEMORY.12)
  br label %block_40126f

block_40095d:                                     ; preds = %block_40090d, %block_4008e0
  %MEMORY.10 = phi %struct.Memory* [ %MEMORY.14, %block_4008e0 ], [ %10336, %block_40090d ]
  %3049 = load i64, i64* %RBP
  %3050 = sub i64 %3049, 172
  %3051 = load i64, i64* %PC
  %3052 = add i64 %3051, 6
  store i64 %3052, i64* %PC
  %3053 = inttoptr i64 %3050 to i32*
  %3054 = load i32, i32* %3053
  %3055 = zext i32 %3054 to i64
  store i64 %3055, i64* %RAX, align 8, !tbaa !2428
  %3056 = load i64, i64* %RAX
  %3057 = load i64, i64* %PC
  %3058 = add i64 %3057, 3
  store i64 %3058, i64* %PC
  %3059 = trunc i64 %3056 to i32
  %3060 = add i32 1, %3059
  %3061 = zext i32 %3060 to i64
  store i64 %3061, i64* %RAX, align 8, !tbaa !2428
  %3062 = icmp ult i32 %3060, %3059
  %3063 = icmp ult i32 %3060, 1
  %3064 = or i1 %3062, %3063
  %3065 = zext i1 %3064 to i8
  %3066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3065, i8* %3066, align 1, !tbaa !2434
  %3067 = and i32 %3060, 255
  %3068 = call i32 @llvm.ctpop.i32(i32 %3067) #17
  %3069 = trunc i32 %3068 to i8
  %3070 = and i8 %3069, 1
  %3071 = xor i8 %3070, 1
  %3072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3071, i8* %3072, align 1, !tbaa !2448
  %3073 = xor i64 1, %3056
  %3074 = trunc i64 %3073 to i32
  %3075 = xor i32 %3074, %3060
  %3076 = lshr i32 %3075, 4
  %3077 = trunc i32 %3076 to i8
  %3078 = and i8 %3077, 1
  %3079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3078, i8* %3079, align 1, !tbaa !2449
  %3080 = icmp eq i32 %3060, 0
  %3081 = zext i1 %3080 to i8
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3081, i8* %3082, align 1, !tbaa !2450
  %3083 = lshr i32 %3060, 31
  %3084 = trunc i32 %3083 to i8
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3084, i8* %3085, align 1, !tbaa !2451
  %3086 = lshr i32 %3059, 31
  %3087 = xor i32 %3083, %3086
  %3088 = add nuw nsw i32 %3087, %3083
  %3089 = icmp eq i32 %3088, 2
  %3090 = zext i1 %3089 to i8
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3090, i8* %3091, align 1, !tbaa !2452
  %3092 = load i64, i64* %RBP
  %3093 = sub i64 %3092, 172
  %3094 = load i32, i32* %EAX
  %3095 = zext i32 %3094 to i64
  %3096 = load i64, i64* %PC
  %3097 = add i64 %3096, 6
  store i64 %3097, i64* %PC
  %3098 = inttoptr i64 %3093 to i32*
  store i32 %3094, i32* %3098
  %3099 = load i64, i64* %PC
  %3100 = sub i64 %3099, 228
  %3101 = load i64, i64* %PC
  %3102 = add i64 %3101, 5
  store i64 %3102, i64* %PC
  %3103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3100, i64* %3103, align 8, !tbaa !2428
  br label %block_400888

block_400db1:                                     ; preds = %block_400d9e, %block_400e3a
  %MEMORY.11 = phi %struct.Memory* [ %MEMORY.15, %block_400d9e ], [ %MEMORY.8, %block_400e3a ]
  %3104 = load i64, i64* %RBP
  %3105 = sub i64 %3104, 24
  %3106 = load i64, i64* %PC
  %3107 = add i64 %3106, 4
  store i64 %3107, i64* %PC
  %3108 = inttoptr i64 %3105 to i64*
  %3109 = load i64, i64* %3108
  store i64 %3109, i64* %RAX, align 8, !tbaa !2428
  %3110 = load i64, i64* %RAX
  %3111 = load i64, i64* %RBP
  %3112 = sub i64 %3111, 56
  %3113 = load i64, i64* %PC
  %3114 = add i64 %3113, 4
  store i64 %3114, i64* %PC
  %3115 = inttoptr i64 %3112 to i64*
  %3116 = load i64, i64* %3115
  %3117 = sub i64 %3110, %3116
  %3118 = icmp ugt i64 %3116, %3110
  %3119 = zext i1 %3118 to i8
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3119, i8* %3120, align 1, !tbaa !2434
  %3121 = trunc i64 %3117 to i32
  %3122 = and i32 %3121, 255
  %3123 = call i32 @llvm.ctpop.i32(i32 %3122) #17
  %3124 = trunc i32 %3123 to i8
  %3125 = and i8 %3124, 1
  %3126 = xor i8 %3125, 1
  %3127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3126, i8* %3127, align 1, !tbaa !2448
  %3128 = xor i64 %3116, %3110
  %3129 = xor i64 %3128, %3117
  %3130 = lshr i64 %3129, 4
  %3131 = trunc i64 %3130 to i8
  %3132 = and i8 %3131, 1
  %3133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3132, i8* %3133, align 1, !tbaa !2449
  %3134 = icmp eq i64 %3117, 0
  %3135 = zext i1 %3134 to i8
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3135, i8* %3136, align 1, !tbaa !2450
  %3137 = lshr i64 %3117, 63
  %3138 = trunc i64 %3137 to i8
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3138, i8* %3139, align 1, !tbaa !2451
  %3140 = lshr i64 %3110, 63
  %3141 = lshr i64 %3116, 63
  %3142 = xor i64 %3141, %3140
  %3143 = xor i64 %3137, %3140
  %3144 = add nuw nsw i64 %3143, %3142
  %3145 = icmp eq i64 %3144, 2
  %3146 = zext i1 %3145 to i8
  %3147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3146, i8* %3147, align 1, !tbaa !2452
  %3148 = load i64, i64* %PC
  %3149 = add i64 %3148, 151
  %3150 = load i64, i64* %PC
  %3151 = add i64 %3150, 6
  %3152 = load i64, i64* %PC
  %3153 = add i64 %3152, 6
  store i64 %3153, i64* %PC
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3155 = load i8, i8* %3154, align 1, !tbaa !2450
  %3156 = icmp eq i8 %3155, 0
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3158 = load i8, i8* %3157, align 1, !tbaa !2451
  %3159 = icmp ne i8 %3158, 0
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3161 = load i8, i8* %3160, align 1, !tbaa !2452
  %3162 = icmp ne i8 %3161, 0
  %3163 = xor i1 %3159, %3162
  %3164 = xor i1 %3163, true
  %3165 = and i1 %3156, %3164
  %3166 = zext i1 %3165 to i8
  store i8 %3166, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3168 = select i1 %3165, i64 %3149, i64 %3151
  store i64 %3168, i64* %3167, align 8, !tbaa !2428
  %3169 = load i8, i8* %BRANCH_TAKEN
  %3170 = icmp eq i8 %3169, 1
  br i1 %3170, label %block_400e50, label %block_400dbf

block_400b68:                                     ; preds = %block_400b56
  %3171 = load i64, i64* %RBP
  %3172 = sub i64 %3171, 32
  %3173 = load i64, i64* %PC
  %3174 = add i64 %3173, 4
  store i64 %3174, i64* %PC
  %3175 = inttoptr i64 %3172 to i64*
  %3176 = load i64, i64* %3175
  store i64 %3176, i64* %RDI, align 8, !tbaa !2428
  %3177 = load i64, i64* %RBP
  %3178 = sub i64 %3177, 32
  %3179 = load i64, i64* %PC
  %3180 = add i64 %3179, 4
  store i64 %3180, i64* %PC
  %3181 = inttoptr i64 %3178 to i64*
  %3182 = load i64, i64* %3181
  store i64 %3182, i64* %RSI, align 8, !tbaa !2428
  %3183 = load i64, i64* %RBP
  %3184 = sub i64 %3183, 32
  %3185 = load i64, i64* %PC
  %3186 = add i64 %3185, 4
  store i64 %3186, i64* %PC
  %3187 = inttoptr i64 %3184 to i64*
  %3188 = load i64, i64* %3187
  store i64 %3188, i64* %RDX, align 8, !tbaa !2428
  %3189 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3190 = load i64, i64* %RBP
  %3191 = sub i64 %3190, 112
  %3192 = load i64, i64* %PC
  %3193 = add i64 %3192, 5
  store i64 %3193, i64* %PC
  %3194 = inttoptr i64 %3191 to double*
  %3195 = load double, double* %3194
  %3196 = bitcast i8* %3189 to double*
  store double %3195, double* %3196, align 1, !tbaa !2432
  %3197 = getelementptr inbounds i8, i8* %3189, i64 8
  %3198 = bitcast i8* %3197 to double*
  store double 0.000000e+00, double* %3198, align 1, !tbaa !2432
  %3199 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3200 = load i64, i64* %RBP
  %3201 = sub i64 %3200, 120
  %3202 = load i64, i64* %PC
  %3203 = add i64 %3202, 5
  store i64 %3203, i64* %PC
  %3204 = inttoptr i64 %3201 to double*
  %3205 = load double, double* %3204
  %3206 = bitcast i8* %3199 to double*
  store double %3205, double* %3206, align 1, !tbaa !2432
  %3207 = getelementptr inbounds i8, i8* %3199, i64 8
  %3208 = bitcast i8* %3207 to double*
  store double 0.000000e+00, double* %3208, align 1, !tbaa !2432
  %3209 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %3210 = load i64, i64* %RBP
  %3211 = sub i64 %3210, 128
  %3212 = load i64, i64* %PC
  %3213 = add i64 %3212, 5
  store i64 %3213, i64* %PC
  %3214 = inttoptr i64 %3211 to double*
  %3215 = load double, double* %3214
  %3216 = bitcast i8* %3209 to double*
  store double %3215, double* %3216, align 1, !tbaa !2432
  %3217 = getelementptr inbounds i8, i8* %3209, i64 8
  %3218 = bitcast i8* %3217 to double*
  store double 0.000000e+00, double* %3218, align 1, !tbaa !2432
  %3219 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %3220 = load i64, i64* %RBP
  %3221 = sub i64 %3220, 136
  %3222 = load i64, i64* %PC
  %3223 = add i64 %3222, 8
  store i64 %3223, i64* %PC
  %3224 = inttoptr i64 %3221 to double*
  %3225 = load double, double* %3224
  %3226 = bitcast i8* %3219 to double*
  store double %3225, double* %3226, align 1, !tbaa !2432
  %3227 = getelementptr inbounds i8, i8* %3219, i64 8
  %3228 = bitcast i8* %3227 to double*
  store double 0.000000e+00, double* %3228, align 1, !tbaa !2432
  %3229 = load i64, i64* %PC
  %3230 = add i64 %3229, 2645
  %3231 = load i64, i64* %PC
  %3232 = add i64 %3231, 5
  %3233 = load i64, i64* %PC
  %3234 = add i64 %3233, 5
  store i64 %3234, i64* %PC
  %3235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3236 = load i64, i64* %3235, align 8, !tbaa !2428
  %3237 = add i64 %3236, -8
  %3238 = inttoptr i64 %3237 to i64*
  store i64 %3232, i64* %3238
  store i64 %3237, i64* %3235, align 8, !tbaa !2428
  %3239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3230, i64* %3239, align 8, !tbaa !2428
  %3240 = load i64, i64* %PC
  %3241 = call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %3240, %struct.Memory* %MEMORY.26)
  br label %block_400b90

block_400e2f:                                     ; preds = %block_400e11
  store i32 0, i32* bitcast (%J_type* @J to i32*)
  br label %block_400e3a

block_4012a5:                                     ; preds = %block_401297
  %3242 = sub i64 %1859, 160
  %3243 = load i64, i64* %PC
  %3244 = add i64 %3243, 7
  store i64 %3244, i64* %PC
  store i64 %3242, i64* %RDI, align 8, !tbaa !2428
  %3245 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3246 = load i64, i64* %RBP
  %3247 = sub i64 %3246, 144
  %3248 = load i64, i64* %PC
  %3249 = add i64 %3248, 8
  store i64 %3249, i64* %PC
  %3250 = inttoptr i64 %3247 to double*
  %3251 = load double, double* %3250
  %3252 = bitcast i8* %3245 to double*
  store double %3251, double* %3252, align 1, !tbaa !2432
  %3253 = getelementptr inbounds i8, i8* %3245, i64 8
  %3254 = bitcast i8* %3253 to double*
  store double 0.000000e+00, double* %3254, align 1, !tbaa !2432
  %3255 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3256 = load i64, i64* %RBP
  %3257 = sub i64 %3256, 152
  %3258 = load i64, i64* %PC
  %3259 = add i64 %3258, 8
  store i64 %3259, i64* %PC
  %3260 = inttoptr i64 %3257 to double*
  %3261 = load double, double* %3260
  %3262 = bitcast i8* %3255 to double*
  store double %3261, double* %3262, align 1, !tbaa !2432
  %3263 = getelementptr inbounds i8, i8* %3255, i64 8
  %3264 = bitcast i8* %3263 to double*
  store double 0.000000e+00, double* %3264, align 1, !tbaa !2432
  %3265 = load i64, i64* %PC
  %3266 = add i64 %3265, 1220
  %3267 = load i64, i64* %PC
  %3268 = add i64 %3267, 5
  %3269 = load i64, i64* %PC
  %3270 = add i64 %3269, 5
  store i64 %3270, i64* %PC
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3272 = load i64, i64* %3271, align 8, !tbaa !2428
  %3273 = add i64 %3272, -8
  %3274 = inttoptr i64 %3273 to i64*
  store i64 %3268, i64* %3274
  store i64 %3273, i64* %3271, align 8, !tbaa !2428
  %3275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3266, i64* %3275, align 8, !tbaa !2428
  %3276 = load i64, i64* %PC
  %3277 = call %struct.Memory* @sub_401780_P3(%struct.State* %0, i64 %3276, %struct.Memory* %MEMORY.6)
  %3278 = load i64, i64* %RBP
  %3279 = sub i64 %3278, 24
  %3280 = load i64, i64* %PC
  %3281 = add i64 %3280, 4
  store i64 %3281, i64* %PC
  %3282 = inttoptr i64 %3279 to i64*
  %3283 = load i64, i64* %3282
  store i64 %3283, i64* %RAX, align 8, !tbaa !2428
  %3284 = load i64, i64* %RAX
  %3285 = load i64, i64* %PC
  %3286 = add i64 %3285, 4
  store i64 %3286, i64* %PC
  %3287 = add i64 1, %3284
  store i64 %3287, i64* %RAX, align 8, !tbaa !2428
  %3288 = icmp ult i64 %3287, %3284
  %3289 = icmp ult i64 %3287, 1
  %3290 = or i1 %3288, %3289
  %3291 = zext i1 %3290 to i8
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3291, i8* %3292, align 1, !tbaa !2434
  %3293 = trunc i64 %3287 to i32
  %3294 = and i32 %3293, 255
  %3295 = call i32 @llvm.ctpop.i32(i32 %3294) #17
  %3296 = trunc i32 %3295 to i8
  %3297 = and i8 %3296, 1
  %3298 = xor i8 %3297, 1
  %3299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3298, i8* %3299, align 1, !tbaa !2448
  %3300 = xor i64 1, %3284
  %3301 = xor i64 %3300, %3287
  %3302 = lshr i64 %3301, 4
  %3303 = trunc i64 %3302 to i8
  %3304 = and i8 %3303, 1
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3304, i8* %3305, align 1, !tbaa !2449
  %3306 = icmp eq i64 %3287, 0
  %3307 = zext i1 %3306 to i8
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3307, i8* %3308, align 1, !tbaa !2450
  %3309 = lshr i64 %3287, 63
  %3310 = trunc i64 %3309 to i8
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3310, i8* %3311, align 1, !tbaa !2451
  %3312 = lshr i64 %3284, 63
  %3313 = xor i64 %3309, %3312
  %3314 = add nuw nsw i64 %3313, %3309
  %3315 = icmp eq i64 %3314, 2
  %3316 = zext i1 %3315 to i8
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3316, i8* %3317, align 1, !tbaa !2452
  %3318 = load i64, i64* %RBP
  %3319 = sub i64 %3318, 24
  %3320 = load i64, i64* %RAX
  %3321 = load i64, i64* %PC
  %3322 = add i64 %3321, 4
  store i64 %3322, i64* %PC
  %3323 = inttoptr i64 %3319 to i64*
  store i64 %3320, i64* %3323
  %3324 = load i64, i64* %PC
  %3325 = sub i64 %3324, 54
  %3326 = load i64, i64* %PC
  %3327 = add i64 %3326, 5
  store i64 %3327, i64* %PC
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3325, i64* %3328, align 8, !tbaa !2428
  br label %block_401297

block_4008c5:                                     ; preds = %block_400897
  %3329 = load i64, i64* %RBP
  %3330 = sub i64 %3329, 16
  %3331 = load i64, i64* %PC
  %3332 = add i64 %3331, 4
  store i64 %3332, i64* %PC
  %3333 = inttoptr i64 %3330 to i64*
  %3334 = load i64, i64* %3333
  store i64 %3334, i64* %RAX, align 8, !tbaa !2428
  %3335 = load i64, i64* %RBP
  %3336 = sub i64 %3335, 172
  %3337 = load i64, i64* %PC
  %3338 = add i64 %3337, 7
  store i64 %3338, i64* %PC
  %3339 = inttoptr i64 %3336 to i32*
  %3340 = load i32, i32* %3339
  %3341 = sext i32 %3340 to i64
  store i64 %3341, i64* %RCX, align 8, !tbaa !2428
  %3342 = load i64, i64* %RAX
  %3343 = load i64, i64* %RCX
  %3344 = mul i64 %3343, 8
  %3345 = add i64 %3344, %3342
  %3346 = load i64, i64* %PC
  %3347 = add i64 %3346, 4
  store i64 %3347, i64* %PC
  %3348 = inttoptr i64 %3345 to i64*
  %3349 = load i64, i64* %3348
  store i64 %3349, i64* %RAX, align 8, !tbaa !2428
  %3350 = load i64, i64* %RAX
  %3351 = load i64, i64* %PC
  %3352 = add i64 %3351, 3
  store i64 %3352, i64* %PC
  %3353 = inttoptr i64 %3350 to i8*
  %3354 = load i8, i8* %3353
  %3355 = sext i8 %3354 to i64
  %3356 = and i64 %3355, 4294967295
  store i64 %3356, i64* %RDX, align 8, !tbaa !2428
  %3357 = load i32, i32* %EDX
  %3358 = zext i32 %3357 to i64
  %3359 = load i64, i64* %PC
  %3360 = add i64 %3359, 3
  store i64 %3360, i64* %PC
  %3361 = sub i32 %3357, 99
  %3362 = icmp ult i32 %3357, 99
  %3363 = zext i1 %3362 to i8
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3363, i8* %3364, align 1, !tbaa !2434
  %3365 = and i32 %3361, 255
  %3366 = call i32 @llvm.ctpop.i32(i32 %3365) #17
  %3367 = trunc i32 %3366 to i8
  %3368 = and i8 %3367, 1
  %3369 = xor i8 %3368, 1
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3369, i8* %3370, align 1, !tbaa !2448
  %3371 = xor i64 99, %3358
  %3372 = trunc i64 %3371 to i32
  %3373 = xor i32 %3372, %3361
  %3374 = lshr i32 %3373, 4
  %3375 = trunc i32 %3374 to i8
  %3376 = and i8 %3375, 1
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3376, i8* %3377, align 1, !tbaa !2449
  %3378 = icmp eq i32 %3361, 0
  %3379 = zext i1 %3378 to i8
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3379, i8* %3380, align 1, !tbaa !2450
  %3381 = lshr i32 %3361, 31
  %3382 = trunc i32 %3381 to i8
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3382, i8* %3383, align 1, !tbaa !2451
  %3384 = lshr i32 %3357, 31
  %3385 = xor i32 %3381, %3384
  %3386 = add nuw nsw i32 %3385, %3384
  %3387 = icmp eq i32 %3386, 2
  %3388 = zext i1 %3387 to i8
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3388, i8* %3389, align 1, !tbaa !2452
  %3390 = load i64, i64* %PC
  %3391 = add i64 %3390, 21
  %3392 = load i64, i64* %PC
  %3393 = add i64 %3392, 6
  %3394 = load i64, i64* %PC
  %3395 = add i64 %3394, 6
  store i64 %3395, i64* %PC
  %3396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3397 = load i8, i8* %3396, align 1, !tbaa !2450
  %3398 = icmp eq i8 %3397, 0
  %3399 = zext i1 %3398 to i8
  store i8 %3399, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3401 = select i1 %3398, i64 %3391, i64 %3393
  store i64 %3401, i64* %3400, align 8, !tbaa !2428
  %3402 = load i8, i8* %BRANCH_TAKEN
  %3403 = icmp eq i8 %3402, 1
  br i1 %3403, label %block_4008ef, label %block_4008e0

block_40102d:                                     ; preds = %block_40103b, %block_40100d
  %MEMORY.12 = phi %struct.Memory* [ %MEMORY.9, %block_40100d ], [ %8797, %block_40103b ]
  %3404 = load i64, i64* %RBP
  %3405 = sub i64 %3404, 24
  %3406 = load i64, i64* %PC
  %3407 = add i64 %3406, 4
  store i64 %3407, i64* %PC
  %3408 = inttoptr i64 %3405 to i64*
  %3409 = load i64, i64* %3408
  store i64 %3409, i64* %RAX, align 8, !tbaa !2428
  %3410 = load i64, i64* %RAX
  %3411 = load i64, i64* %RBP
  %3412 = sub i64 %3411, 72
  %3413 = load i64, i64* %PC
  %3414 = add i64 %3413, 4
  store i64 %3414, i64* %PC
  %3415 = inttoptr i64 %3412 to i64*
  %3416 = load i64, i64* %3415
  %3417 = sub i64 %3410, %3416
  %3418 = icmp ugt i64 %3416, %3410
  %3419 = zext i1 %3418 to i8
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3419, i8* %3420, align 1, !tbaa !2434
  %3421 = trunc i64 %3417 to i32
  %3422 = and i32 %3421, 255
  %3423 = call i32 @llvm.ctpop.i32(i32 %3422) #17
  %3424 = trunc i32 %3423 to i8
  %3425 = and i8 %3424, 1
  %3426 = xor i8 %3425, 1
  %3427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3426, i8* %3427, align 1, !tbaa !2448
  %3428 = xor i64 %3416, %3410
  %3429 = xor i64 %3428, %3417
  %3430 = lshr i64 %3429, 4
  %3431 = trunc i64 %3430 to i8
  %3432 = and i8 %3431, 1
  %3433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3432, i8* %3433, align 1, !tbaa !2449
  %3434 = icmp eq i64 %3417, 0
  %3435 = zext i1 %3434 to i8
  %3436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3435, i8* %3436, align 1, !tbaa !2450
  %3437 = lshr i64 %3417, 63
  %3438 = trunc i64 %3437 to i8
  %3439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3438, i8* %3439, align 1, !tbaa !2451
  %3440 = lshr i64 %3410, 63
  %3441 = lshr i64 %3416, 63
  %3442 = xor i64 %3441, %3440
  %3443 = xor i64 %3437, %3440
  %3444 = add nuw nsw i64 %3443, %3442
  %3445 = icmp eq i64 %3444, 2
  %3446 = zext i1 %3445 to i8
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3446, i8* %3447, align 1, !tbaa !2452
  %3448 = load i64, i64* %PC
  %3449 = add i64 %3448, 495
  %3450 = load i64, i64* %PC
  %3451 = add i64 %3450, 6
  %3452 = load i64, i64* %PC
  %3453 = add i64 %3452, 6
  store i64 %3453, i64* %PC
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3455 = load i8, i8* %3454, align 1, !tbaa !2450
  %3456 = icmp eq i8 %3455, 0
  %3457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3458 = load i8, i8* %3457, align 1, !tbaa !2451
  %3459 = icmp ne i8 %3458, 0
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3461 = load i8, i8* %3460, align 1, !tbaa !2452
  %3462 = icmp ne i8 %3461, 0
  %3463 = xor i1 %3459, %3462
  %3464 = xor i1 %3463, true
  %3465 = and i1 %3456, %3464
  %3466 = zext i1 %3465 to i8
  store i8 %3466, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3468 = select i1 %3465, i64 %3449, i64 %3451
  store i64 %3468, i64* %3467, align 8, !tbaa !2428
  %3469 = load i8, i8* %BRANCH_TAKEN
  %3470 = icmp eq i8 %3469, 1
  br i1 %3470, label %block_401224, label %block_40103b

block_40103b:                                     ; preds = %block_40102d
  %3471 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3472 = load i64, i64* %PC
  %3473 = add i64 %3472, 8
  store i64 %3473, i64* %PC
  %3474 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 40) to double*)
  %3475 = bitcast i8* %3471 to double*
  store double %3474, double* %3475, align 1, !tbaa !2432
  %3476 = getelementptr inbounds i8, i8* %3471, i64 8
  %3477 = bitcast i8* %3476 to double*
  store double 0.000000e+00, double* %3477, align 1, !tbaa !2432
  %3478 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3479 = load i64, i64* %PC
  %3480 = add i64 %3479, 9
  store i64 %3480, i64* %PC
  %3481 = load double, double* bitcast (%T_type* @T to double*)
  %3482 = bitcast i8* %3478 to double*
  store double %3481, double* %3482, align 1, !tbaa !2432
  %3483 = getelementptr inbounds i8, i8* %3478, i64 8
  %3484 = bitcast i8* %3483 to double*
  store double 0.000000e+00, double* %3484, align 1, !tbaa !2432
  %3485 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %3486 = load i64, i64* %PC
  %3487 = add i64 %3486, 9
  store i64 %3487, i64* %PC
  %3488 = load double, double* bitcast (%T2_type* @T2 to double*)
  %3489 = bitcast i8* %3485 to double*
  store double %3488, double* %3489, align 1, !tbaa !2432
  %3490 = getelementptr inbounds i8, i8* %3485, i64 8
  %3491 = bitcast i8* %3490 to double*
  store double 0.000000e+00, double* %3491, align 1, !tbaa !2432
  %3492 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %3493 = load i64, i64* %RBP
  %3494 = sub i64 %3493, 144
  %3495 = load i64, i64* %PC
  %3496 = add i64 %3495, 8
  store i64 %3496, i64* %PC
  %3497 = inttoptr i64 %3494 to double*
  %3498 = load double, double* %3497
  %3499 = bitcast i8* %3492 to double*
  store double %3498, double* %3499, align 1, !tbaa !2432
  %3500 = getelementptr inbounds i8, i8* %3492, i64 8
  %3501 = bitcast i8* %3500 to double*
  store double 0.000000e+00, double* %3501, align 1, !tbaa !2432
  %3502 = load i64, i64* %RBP
  %3503 = sub i64 %3502, 224
  %3504 = bitcast %union.vec128_t* %XMM0 to i8*
  %3505 = load i64, i64* %PC
  %3506 = add i64 %3505, 8
  store i64 %3506, i64* %PC
  %3507 = bitcast i8* %3504 to double*
  %3508 = load double, double* %3507, align 1
  %3509 = inttoptr i64 %3503 to double*
  store double %3508, double* %3509
  %3510 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3511 = bitcast %union.vec128_t* %XMM3 to i8*
  %3512 = load i64, i64* %PC
  %3513 = add i64 %3512, 3
  store i64 %3513, i64* %PC
  %3514 = bitcast i8* %3511 to <2 x i32>*
  %3515 = load <2 x i32>, <2 x i32>* %3514, align 1
  %3516 = getelementptr inbounds i8, i8* %3511, i64 8
  %3517 = bitcast i8* %3516 to <2 x i32>*
  %3518 = load <2 x i32>, <2 x i32>* %3517, align 1
  %3519 = extractelement <2 x i32> %3515, i32 0
  %3520 = bitcast i8* %3510 to i32*
  store i32 %3519, i32* %3520, align 1, !tbaa !2460
  %3521 = extractelement <2 x i32> %3515, i32 1
  %3522 = getelementptr inbounds i8, i8* %3510, i64 4
  %3523 = bitcast i8* %3522 to i32*
  store i32 %3521, i32* %3523, align 1, !tbaa !2460
  %3524 = extractelement <2 x i32> %3518, i32 0
  %3525 = getelementptr inbounds i8, i8* %3510, i64 8
  %3526 = bitcast i8* %3525 to i32*
  store i32 %3524, i32* %3526, align 1, !tbaa !2460
  %3527 = extractelement <2 x i32> %3518, i32 1
  %3528 = getelementptr inbounds i8, i8* %3510, i64 12
  %3529 = bitcast i8* %3528 to i32*
  store i32 %3527, i32* %3529, align 1, !tbaa !2460
  %3530 = load i64, i64* %RBP
  %3531 = sub i64 %3530, 232
  %3532 = bitcast %union.vec128_t* %XMM2 to i8*
  %3533 = load i64, i64* %PC
  %3534 = add i64 %3533, 8
  store i64 %3534, i64* %PC
  %3535 = bitcast i8* %3532 to double*
  %3536 = load double, double* %3535, align 1
  %3537 = inttoptr i64 %3531 to double*
  store double %3536, double* %3537
  %3538 = load i64, i64* %RBP
  %3539 = sub i64 %3538, 240
  %3540 = bitcast %union.vec128_t* %XMM1 to i8*
  %3541 = load i64, i64* %PC
  %3542 = add i64 %3541, 8
  store i64 %3542, i64* %PC
  %3543 = bitcast i8* %3540 to double*
  %3544 = load double, double* %3543, align 1
  %3545 = inttoptr i64 %3539 to double*
  store double %3544, double* %3545
  %3546 = load i64, i64* %PC
  %3547 = sub i64 %3546, 2360
  %3548 = load i64, i64* %PC
  %3549 = add i64 %3548, 5
  %3550 = load i64, i64* %PC
  %3551 = add i64 %3550, 5
  store i64 %3551, i64* %PC
  %3552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3553 = load i64, i64* %3552, align 8, !tbaa !2428
  %3554 = add i64 %3553, -8
  %3555 = inttoptr i64 %3554 to i64*
  store i64 %3549, i64* %3555
  store i64 %3554, i64* %3552, align 8, !tbaa !2428
  %3556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3547, i64* %3556, align 8, !tbaa !2428
  %3557 = load i64, i64* %PC
  %3558 = bitcast %struct.State** %state.i1273 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3558)
  %3559 = bitcast i64* %curr_pc.i1274 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3559)
  %3560 = bitcast %struct.Memory** %memory.i1275 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3560)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i1276)
  %3561 = bitcast i64* %SS_BASE.i1277 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3561)
  %3562 = bitcast i64* %ES_BASE.i1278 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3562)
  %3563 = bitcast i64* %DS_BASE.i1279 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3563)
  %3564 = bitcast i64* %CS_BASE.i1280 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3564)
  %3565 = bitcast %struct.State** %STATE.i1281 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3565)
  %3566 = bitcast %struct.Memory** %MEMORY.i1282 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3566)
  %3567 = bitcast i64** %_DR0.i1283 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3567)
  %3568 = bitcast i64** %_DR1.i1284 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3568)
  %3569 = bitcast i64** %_DR2.i1285 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3569)
  %3570 = bitcast i64** %_DR3.i1286 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3570)
  %3571 = bitcast i64** %_DR4.i1287 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3571)
  %3572 = bitcast i64** %_DR5.i1288 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3572)
  %3573 = bitcast i64** %_DR6.i1289 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3573)
  %3574 = bitcast i64** %_DR7.i1290 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3574)
  %3575 = bitcast i64** %CR0.i1291 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3575)
  %3576 = bitcast i64** %CR1.i1292 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3576)
  %3577 = bitcast i64** %CR2.i1293 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3577)
  %3578 = bitcast i64** %CR3.i1294 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3578)
  %3579 = bitcast i64** %CR4.i1295 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3579)
  %3580 = bitcast i64** %CR8.i1296 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3580)
  store %struct.State* %0, %struct.State** %state.i1273, align 8, !noalias !2462
  store i64 %3557, i64* %curr_pc.i1274, align 8, !noalias !2462
  store %struct.Memory* %MEMORY.12, %struct.Memory** %memory.i1275, align 8, !noalias !2462
  store i8 0, i8* %BRANCH_TAKEN.i1276, align 1, !noalias !2462
  store i64 0, i64* %SS_BASE.i1277, align 8, !noalias !2462
  store i64 0, i64* %ES_BASE.i1278, align 8, !noalias !2462
  store i64 0, i64* %DS_BASE.i1279, align 8, !noalias !2462
  store i64 0, i64* %CS_BASE.i1280, align 8, !noalias !2462
  store %struct.State* %0, %struct.State** %STATE.i1281, align 8, !noalias !2462
  store %struct.Memory* %MEMORY.12, %struct.Memory** %MEMORY.i1282, align 8, !noalias !2462
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 33
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %3583 to i64*
  store i64 %3557, i64* %PC.i1297, align 8, !alias.scope !2466, !noalias !2467
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3585 = getelementptr inbounds %struct.GPR, %struct.GPR* %3584, i32 0, i32 1
  %3586 = getelementptr inbounds %struct.Reg, %struct.Reg* %3585, i32 0, i32 0
  %3587 = bitcast %union.anon* %3586 to %struct.anon.2*
  %AH.i1298 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3587, i32 0, i32 1
  %3588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3589 = getelementptr inbounds %struct.GPR, %struct.GPR* %3588, i32 0, i32 3
  %3590 = getelementptr inbounds %struct.Reg, %struct.Reg* %3589, i32 0, i32 0
  %3591 = bitcast %union.anon* %3590 to %struct.anon.2*
  %BH.i1299 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3591, i32 0, i32 1
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3593 = getelementptr inbounds %struct.GPR, %struct.GPR* %3592, i32 0, i32 5
  %3594 = getelementptr inbounds %struct.Reg, %struct.Reg* %3593, i32 0, i32 0
  %3595 = bitcast %union.anon* %3594 to %struct.anon.2*
  %CH.i1300 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3595, i32 0, i32 1
  %3596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3597 = getelementptr inbounds %struct.GPR, %struct.GPR* %3596, i32 0, i32 7
  %3598 = getelementptr inbounds %struct.Reg, %struct.Reg* %3597, i32 0, i32 0
  %3599 = bitcast %union.anon* %3598 to %struct.anon.2*
  %DH.i1301 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3599, i32 0, i32 1
  %3600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3601 = getelementptr inbounds %struct.GPR, %struct.GPR* %3600, i32 0, i32 1
  %3602 = getelementptr inbounds %struct.Reg, %struct.Reg* %3601, i32 0, i32 0
  %3603 = bitcast %union.anon* %3602 to %struct.anon.2*
  %AL.i1302 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3603, i32 0, i32 0
  %3604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3605 = getelementptr inbounds %struct.GPR, %struct.GPR* %3604, i32 0, i32 3
  %3606 = getelementptr inbounds %struct.Reg, %struct.Reg* %3605, i32 0, i32 0
  %3607 = bitcast %union.anon* %3606 to %struct.anon.2*
  %BL.i1303 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3607, i32 0, i32 0
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3609 = getelementptr inbounds %struct.GPR, %struct.GPR* %3608, i32 0, i32 5
  %3610 = getelementptr inbounds %struct.Reg, %struct.Reg* %3609, i32 0, i32 0
  %3611 = bitcast %union.anon* %3610 to %struct.anon.2*
  %CL.i1304 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3611, i32 0, i32 0
  %3612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3613 = getelementptr inbounds %struct.GPR, %struct.GPR* %3612, i32 0, i32 7
  %3614 = getelementptr inbounds %struct.Reg, %struct.Reg* %3613, i32 0, i32 0
  %3615 = bitcast %union.anon* %3614 to %struct.anon.2*
  %DL.i1305 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3615, i32 0, i32 0
  %3616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3617 = getelementptr inbounds %struct.GPR, %struct.GPR* %3616, i32 0, i32 9
  %3618 = getelementptr inbounds %struct.Reg, %struct.Reg* %3617, i32 0, i32 0
  %3619 = bitcast %union.anon* %3618 to %struct.anon.2*
  %SIL.i1306 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3619, i32 0, i32 0
  %3620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3621 = getelementptr inbounds %struct.GPR, %struct.GPR* %3620, i32 0, i32 11
  %3622 = getelementptr inbounds %struct.Reg, %struct.Reg* %3621, i32 0, i32 0
  %3623 = bitcast %union.anon* %3622 to %struct.anon.2*
  %DIL.i1307 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3623, i32 0, i32 0
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3625 = getelementptr inbounds %struct.GPR, %struct.GPR* %3624, i32 0, i32 13
  %3626 = getelementptr inbounds %struct.Reg, %struct.Reg* %3625, i32 0, i32 0
  %3627 = bitcast %union.anon* %3626 to %struct.anon.2*
  %SPL.i1308 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3627, i32 0, i32 0
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3629 = getelementptr inbounds %struct.GPR, %struct.GPR* %3628, i32 0, i32 15
  %3630 = getelementptr inbounds %struct.Reg, %struct.Reg* %3629, i32 0, i32 0
  %3631 = bitcast %union.anon* %3630 to %struct.anon.2*
  %BPL.i1309 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3631, i32 0, i32 0
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 17
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %3635 = bitcast %union.anon* %3634 to %struct.anon.2*
  %R8B.i1310 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3635, i32 0, i32 0
  %3636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3637 = getelementptr inbounds %struct.GPR, %struct.GPR* %3636, i32 0, i32 19
  %3638 = getelementptr inbounds %struct.Reg, %struct.Reg* %3637, i32 0, i32 0
  %3639 = bitcast %union.anon* %3638 to %struct.anon.2*
  %R9B.i1311 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3639, i32 0, i32 0
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3641 = getelementptr inbounds %struct.GPR, %struct.GPR* %3640, i32 0, i32 21
  %3642 = getelementptr inbounds %struct.Reg, %struct.Reg* %3641, i32 0, i32 0
  %3643 = bitcast %union.anon* %3642 to %struct.anon.2*
  %R10B.i1312 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3643, i32 0, i32 0
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3645 = getelementptr inbounds %struct.GPR, %struct.GPR* %3644, i32 0, i32 23
  %3646 = getelementptr inbounds %struct.Reg, %struct.Reg* %3645, i32 0, i32 0
  %3647 = bitcast %union.anon* %3646 to %struct.anon.2*
  %R11B.i1313 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3647, i32 0, i32 0
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3649 = getelementptr inbounds %struct.GPR, %struct.GPR* %3648, i32 0, i32 25
  %3650 = getelementptr inbounds %struct.Reg, %struct.Reg* %3649, i32 0, i32 0
  %3651 = bitcast %union.anon* %3650 to %struct.anon.2*
  %R12B.i1314 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3651, i32 0, i32 0
  %3652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3653 = getelementptr inbounds %struct.GPR, %struct.GPR* %3652, i32 0, i32 27
  %3654 = getelementptr inbounds %struct.Reg, %struct.Reg* %3653, i32 0, i32 0
  %3655 = bitcast %union.anon* %3654 to %struct.anon.2*
  %R13B.i1315 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3655, i32 0, i32 0
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3657 = getelementptr inbounds %struct.GPR, %struct.GPR* %3656, i32 0, i32 29
  %3658 = getelementptr inbounds %struct.Reg, %struct.Reg* %3657, i32 0, i32 0
  %3659 = bitcast %union.anon* %3658 to %struct.anon.2*
  %R14B.i1316 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3659, i32 0, i32 0
  %3660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3661 = getelementptr inbounds %struct.GPR, %struct.GPR* %3660, i32 0, i32 31
  %3662 = getelementptr inbounds %struct.Reg, %struct.Reg* %3661, i32 0, i32 0
  %3663 = bitcast %union.anon* %3662 to %struct.anon.2*
  %R15B.i1317 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3663, i32 0, i32 0
  %3664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3665 = getelementptr inbounds %struct.GPR, %struct.GPR* %3664, i32 0, i32 1
  %3666 = getelementptr inbounds %struct.Reg, %struct.Reg* %3665, i32 0, i32 0
  %AX.i1318 = bitcast %union.anon* %3666 to i16*
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3668 = getelementptr inbounds %struct.GPR, %struct.GPR* %3667, i32 0, i32 3
  %3669 = getelementptr inbounds %struct.Reg, %struct.Reg* %3668, i32 0, i32 0
  %BX.i1319 = bitcast %union.anon* %3669 to i16*
  %3670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3671 = getelementptr inbounds %struct.GPR, %struct.GPR* %3670, i32 0, i32 5
  %3672 = getelementptr inbounds %struct.Reg, %struct.Reg* %3671, i32 0, i32 0
  %CX.i1320 = bitcast %union.anon* %3672 to i16*
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3674 = getelementptr inbounds %struct.GPR, %struct.GPR* %3673, i32 0, i32 7
  %3675 = getelementptr inbounds %struct.Reg, %struct.Reg* %3674, i32 0, i32 0
  %DX.i1321 = bitcast %union.anon* %3675 to i16*
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3677 = getelementptr inbounds %struct.GPR, %struct.GPR* %3676, i32 0, i32 9
  %3678 = getelementptr inbounds %struct.Reg, %struct.Reg* %3677, i32 0, i32 0
  %SI.i1322 = bitcast %union.anon* %3678 to i16*
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3680 = getelementptr inbounds %struct.GPR, %struct.GPR* %3679, i32 0, i32 11
  %3681 = getelementptr inbounds %struct.Reg, %struct.Reg* %3680, i32 0, i32 0
  %DI.i1323 = bitcast %union.anon* %3681 to i16*
  %3682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3683 = getelementptr inbounds %struct.GPR, %struct.GPR* %3682, i32 0, i32 13
  %3684 = getelementptr inbounds %struct.Reg, %struct.Reg* %3683, i32 0, i32 0
  %SP.i1324 = bitcast %union.anon* %3684 to i16*
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3686 = getelementptr inbounds %struct.GPR, %struct.GPR* %3685, i32 0, i32 15
  %3687 = getelementptr inbounds %struct.Reg, %struct.Reg* %3686, i32 0, i32 0
  %BP.i1325 = bitcast %union.anon* %3687 to i16*
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3689 = getelementptr inbounds %struct.GPR, %struct.GPR* %3688, i32 0, i32 17
  %3690 = getelementptr inbounds %struct.Reg, %struct.Reg* %3689, i32 0, i32 0
  %R8W.i1326 = bitcast %union.anon* %3690 to i16*
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3692 = getelementptr inbounds %struct.GPR, %struct.GPR* %3691, i32 0, i32 19
  %3693 = getelementptr inbounds %struct.Reg, %struct.Reg* %3692, i32 0, i32 0
  %R9W.i1327 = bitcast %union.anon* %3693 to i16*
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3695 = getelementptr inbounds %struct.GPR, %struct.GPR* %3694, i32 0, i32 21
  %3696 = getelementptr inbounds %struct.Reg, %struct.Reg* %3695, i32 0, i32 0
  %R10W.i1328 = bitcast %union.anon* %3696 to i16*
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3698 = getelementptr inbounds %struct.GPR, %struct.GPR* %3697, i32 0, i32 23
  %3699 = getelementptr inbounds %struct.Reg, %struct.Reg* %3698, i32 0, i32 0
  %R11W.i1329 = bitcast %union.anon* %3699 to i16*
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3701 = getelementptr inbounds %struct.GPR, %struct.GPR* %3700, i32 0, i32 25
  %3702 = getelementptr inbounds %struct.Reg, %struct.Reg* %3701, i32 0, i32 0
  %R12W.i1330 = bitcast %union.anon* %3702 to i16*
  %3703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3704 = getelementptr inbounds %struct.GPR, %struct.GPR* %3703, i32 0, i32 27
  %3705 = getelementptr inbounds %struct.Reg, %struct.Reg* %3704, i32 0, i32 0
  %R13W.i1331 = bitcast %union.anon* %3705 to i16*
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3707 = getelementptr inbounds %struct.GPR, %struct.GPR* %3706, i32 0, i32 29
  %3708 = getelementptr inbounds %struct.Reg, %struct.Reg* %3707, i32 0, i32 0
  %R14W.i1332 = bitcast %union.anon* %3708 to i16*
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3710 = getelementptr inbounds %struct.GPR, %struct.GPR* %3709, i32 0, i32 31
  %3711 = getelementptr inbounds %struct.Reg, %struct.Reg* %3710, i32 0, i32 0
  %R15W.i1333 = bitcast %union.anon* %3711 to i16*
  %3712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3713 = getelementptr inbounds %struct.GPR, %struct.GPR* %3712, i32 0, i32 33
  %3714 = getelementptr inbounds %struct.Reg, %struct.Reg* %3713, i32 0, i32 0
  %IP.i1334 = bitcast %union.anon* %3714 to i16*
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3716 = getelementptr inbounds %struct.GPR, %struct.GPR* %3715, i32 0, i32 1
  %3717 = getelementptr inbounds %struct.Reg, %struct.Reg* %3716, i32 0, i32 0
  %EAX.i1335 = bitcast %union.anon* %3717 to i32*
  %3718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3719 = getelementptr inbounds %struct.GPR, %struct.GPR* %3718, i32 0, i32 3
  %3720 = getelementptr inbounds %struct.Reg, %struct.Reg* %3719, i32 0, i32 0
  %EBX.i1336 = bitcast %union.anon* %3720 to i32*
  %3721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3722 = getelementptr inbounds %struct.GPR, %struct.GPR* %3721, i32 0, i32 5
  %3723 = getelementptr inbounds %struct.Reg, %struct.Reg* %3722, i32 0, i32 0
  %ECX.i1337 = bitcast %union.anon* %3723 to i32*
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3725 = getelementptr inbounds %struct.GPR, %struct.GPR* %3724, i32 0, i32 7
  %3726 = getelementptr inbounds %struct.Reg, %struct.Reg* %3725, i32 0, i32 0
  %EDX.i1338 = bitcast %union.anon* %3726 to i32*
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3728 = getelementptr inbounds %struct.GPR, %struct.GPR* %3727, i32 0, i32 9
  %3729 = getelementptr inbounds %struct.Reg, %struct.Reg* %3728, i32 0, i32 0
  %ESI.i1339 = bitcast %union.anon* %3729 to i32*
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3731 = getelementptr inbounds %struct.GPR, %struct.GPR* %3730, i32 0, i32 11
  %3732 = getelementptr inbounds %struct.Reg, %struct.Reg* %3731, i32 0, i32 0
  %EDI.i1340 = bitcast %union.anon* %3732 to i32*
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3734 = getelementptr inbounds %struct.GPR, %struct.GPR* %3733, i32 0, i32 13
  %3735 = getelementptr inbounds %struct.Reg, %struct.Reg* %3734, i32 0, i32 0
  %ESP.i1341 = bitcast %union.anon* %3735 to i32*
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3737 = getelementptr inbounds %struct.GPR, %struct.GPR* %3736, i32 0, i32 15
  %3738 = getelementptr inbounds %struct.Reg, %struct.Reg* %3737, i32 0, i32 0
  %EBP.i1342 = bitcast %union.anon* %3738 to i32*
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3740 = getelementptr inbounds %struct.GPR, %struct.GPR* %3739, i32 0, i32 33
  %3741 = getelementptr inbounds %struct.Reg, %struct.Reg* %3740, i32 0, i32 0
  %EIP.i1343 = bitcast %union.anon* %3741 to i32*
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3743 = getelementptr inbounds %struct.GPR, %struct.GPR* %3742, i32 0, i32 17
  %3744 = getelementptr inbounds %struct.Reg, %struct.Reg* %3743, i32 0, i32 0
  %R8D.i1344 = bitcast %union.anon* %3744 to i32*
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3746 = getelementptr inbounds %struct.GPR, %struct.GPR* %3745, i32 0, i32 19
  %3747 = getelementptr inbounds %struct.Reg, %struct.Reg* %3746, i32 0, i32 0
  %R9D.i1345 = bitcast %union.anon* %3747 to i32*
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3749 = getelementptr inbounds %struct.GPR, %struct.GPR* %3748, i32 0, i32 21
  %3750 = getelementptr inbounds %struct.Reg, %struct.Reg* %3749, i32 0, i32 0
  %R10D.i1346 = bitcast %union.anon* %3750 to i32*
  %3751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3752 = getelementptr inbounds %struct.GPR, %struct.GPR* %3751, i32 0, i32 23
  %3753 = getelementptr inbounds %struct.Reg, %struct.Reg* %3752, i32 0, i32 0
  %R11D.i1347 = bitcast %union.anon* %3753 to i32*
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3755 = getelementptr inbounds %struct.GPR, %struct.GPR* %3754, i32 0, i32 25
  %3756 = getelementptr inbounds %struct.Reg, %struct.Reg* %3755, i32 0, i32 0
  %R12D.i1348 = bitcast %union.anon* %3756 to i32*
  %3757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3758 = getelementptr inbounds %struct.GPR, %struct.GPR* %3757, i32 0, i32 27
  %3759 = getelementptr inbounds %struct.Reg, %struct.Reg* %3758, i32 0, i32 0
  %R13D.i1349 = bitcast %union.anon* %3759 to i32*
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3761 = getelementptr inbounds %struct.GPR, %struct.GPR* %3760, i32 0, i32 29
  %3762 = getelementptr inbounds %struct.Reg, %struct.Reg* %3761, i32 0, i32 0
  %R14D.i1350 = bitcast %union.anon* %3762 to i32*
  %3763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3764 = getelementptr inbounds %struct.GPR, %struct.GPR* %3763, i32 0, i32 31
  %3765 = getelementptr inbounds %struct.Reg, %struct.Reg* %3764, i32 0, i32 0
  %R15D.i1351 = bitcast %union.anon* %3765 to i32*
  %3766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3767 = getelementptr inbounds %struct.GPR, %struct.GPR* %3766, i32 0, i32 1
  %3768 = getelementptr inbounds %struct.Reg, %struct.Reg* %3767, i32 0, i32 0
  %RAX.i1352 = bitcast %union.anon* %3768 to i64*
  %3769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3770 = getelementptr inbounds %struct.GPR, %struct.GPR* %3769, i32 0, i32 3
  %3771 = getelementptr inbounds %struct.Reg, %struct.Reg* %3770, i32 0, i32 0
  %RBX.i1353 = bitcast %union.anon* %3771 to i64*
  %3772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3773 = getelementptr inbounds %struct.GPR, %struct.GPR* %3772, i32 0, i32 5
  %3774 = getelementptr inbounds %struct.Reg, %struct.Reg* %3773, i32 0, i32 0
  %RCX.i1354 = bitcast %union.anon* %3774 to i64*
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3776 = getelementptr inbounds %struct.GPR, %struct.GPR* %3775, i32 0, i32 7
  %3777 = getelementptr inbounds %struct.Reg, %struct.Reg* %3776, i32 0, i32 0
  %RDX.i1355 = bitcast %union.anon* %3777 to i64*
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3779 = getelementptr inbounds %struct.GPR, %struct.GPR* %3778, i32 0, i32 9
  %3780 = getelementptr inbounds %struct.Reg, %struct.Reg* %3779, i32 0, i32 0
  %RSI.i1356 = bitcast %union.anon* %3780 to i64*
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 11
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %RDI.i1357 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 13
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RSP.i1358 = bitcast %union.anon* %3786 to i64*
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3788 = getelementptr inbounds %struct.GPR, %struct.GPR* %3787, i32 0, i32 15
  %3789 = getelementptr inbounds %struct.Reg, %struct.Reg* %3788, i32 0, i32 0
  %RBP.i1359 = bitcast %union.anon* %3789 to i64*
  %3790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3791 = getelementptr inbounds %struct.GPR, %struct.GPR* %3790, i32 0, i32 17
  %3792 = getelementptr inbounds %struct.Reg, %struct.Reg* %3791, i32 0, i32 0
  %R8.i1360 = bitcast %union.anon* %3792 to i64*
  %3793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3794 = getelementptr inbounds %struct.GPR, %struct.GPR* %3793, i32 0, i32 19
  %3795 = getelementptr inbounds %struct.Reg, %struct.Reg* %3794, i32 0, i32 0
  %R9.i1361 = bitcast %union.anon* %3795 to i64*
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3797 = getelementptr inbounds %struct.GPR, %struct.GPR* %3796, i32 0, i32 21
  %3798 = getelementptr inbounds %struct.Reg, %struct.Reg* %3797, i32 0, i32 0
  %R10.i1362 = bitcast %union.anon* %3798 to i64*
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3800 = getelementptr inbounds %struct.GPR, %struct.GPR* %3799, i32 0, i32 23
  %3801 = getelementptr inbounds %struct.Reg, %struct.Reg* %3800, i32 0, i32 0
  %R11.i1363 = bitcast %union.anon* %3801 to i64*
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3803 = getelementptr inbounds %struct.GPR, %struct.GPR* %3802, i32 0, i32 25
  %3804 = getelementptr inbounds %struct.Reg, %struct.Reg* %3803, i32 0, i32 0
  %R12.i1364 = bitcast %union.anon* %3804 to i64*
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3806 = getelementptr inbounds %struct.GPR, %struct.GPR* %3805, i32 0, i32 27
  %3807 = getelementptr inbounds %struct.Reg, %struct.Reg* %3806, i32 0, i32 0
  %R13.i1365 = bitcast %union.anon* %3807 to i64*
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3809 = getelementptr inbounds %struct.GPR, %struct.GPR* %3808, i32 0, i32 29
  %3810 = getelementptr inbounds %struct.Reg, %struct.Reg* %3809, i32 0, i32 0
  %R14.i1366 = bitcast %union.anon* %3810 to i64*
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3812 = getelementptr inbounds %struct.GPR, %struct.GPR* %3811, i32 0, i32 31
  %3813 = getelementptr inbounds %struct.Reg, %struct.Reg* %3812, i32 0, i32 0
  %R15.i1367 = bitcast %union.anon* %3813 to i64*
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3815 = getelementptr inbounds %struct.GPR, %struct.GPR* %3814, i32 0, i32 33
  %3816 = getelementptr inbounds %struct.Reg, %struct.Reg* %3815, i32 0, i32 0
  %RIP.i1368 = bitcast %union.anon* %3816 to i64*
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3818 = getelementptr inbounds %struct.Segments, %struct.Segments* %3817, i32 0, i32 1
  %SS.i1369 = bitcast %union.SegmentSelector* %3818 to i16*
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3820 = getelementptr inbounds %struct.Segments, %struct.Segments* %3819, i32 0, i32 3
  %ES.i1370 = bitcast %union.SegmentSelector* %3820 to i16*
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3822 = getelementptr inbounds %struct.Segments, %struct.Segments* %3821, i32 0, i32 5
  %GS.i1371 = bitcast %union.SegmentSelector* %3822 to i16*
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3824 = getelementptr inbounds %struct.Segments, %struct.Segments* %3823, i32 0, i32 7
  %FS.i1372 = bitcast %union.SegmentSelector* %3824 to i16*
  %3825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3826 = getelementptr inbounds %struct.Segments, %struct.Segments* %3825, i32 0, i32 9
  %DS.i1373 = bitcast %union.SegmentSelector* %3826 to i16*
  %3827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3828 = getelementptr inbounds %struct.Segments, %struct.Segments* %3827, i32 0, i32 11
  %CS.i1374 = bitcast %union.SegmentSelector* %3828 to i16*
  %3829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3830 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3829, i32 0, i32 5
  %3831 = getelementptr inbounds %struct.Reg, %struct.Reg* %3830, i32 0, i32 0
  %GS_BASE.i1375 = bitcast %union.anon* %3831 to i64*
  %3832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3833 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3832, i32 0, i32 7
  %3834 = getelementptr inbounds %struct.Reg, %struct.Reg* %3833, i32 0, i32 0
  %FS_BASE.i1376 = bitcast %union.anon* %3834 to i64*
  %3835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3836 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3835, i64 0, i64 0
  %YMM0.i1377 = bitcast %union.VectorReg* %3836 to %"class.std::bitset"*
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3838 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3837, i64 0, i64 1
  %YMM1.i1378 = bitcast %union.VectorReg* %3838 to %"class.std::bitset"*
  %3839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3840 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3839, i64 0, i64 2
  %YMM2.i1379 = bitcast %union.VectorReg* %3840 to %"class.std::bitset"*
  %3841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3842 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3841, i64 0, i64 3
  %YMM3.i1380 = bitcast %union.VectorReg* %3842 to %"class.std::bitset"*
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3844 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3843, i64 0, i64 4
  %YMM4.i1381 = bitcast %union.VectorReg* %3844 to %"class.std::bitset"*
  %3845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3846 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3845, i64 0, i64 5
  %YMM5.i1382 = bitcast %union.VectorReg* %3846 to %"class.std::bitset"*
  %3847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3848 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3847, i64 0, i64 6
  %YMM6.i1383 = bitcast %union.VectorReg* %3848 to %"class.std::bitset"*
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3850 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3849, i64 0, i64 7
  %YMM7.i1384 = bitcast %union.VectorReg* %3850 to %"class.std::bitset"*
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3852 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3851, i64 0, i64 8
  %YMM8.i1385 = bitcast %union.VectorReg* %3852 to %"class.std::bitset"*
  %3853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3854 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3853, i64 0, i64 9
  %YMM9.i1386 = bitcast %union.VectorReg* %3854 to %"class.std::bitset"*
  %3855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3856 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3855, i64 0, i64 10
  %YMM10.i1387 = bitcast %union.VectorReg* %3856 to %"class.std::bitset"*
  %3857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3858 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3857, i64 0, i64 11
  %YMM11.i1388 = bitcast %union.VectorReg* %3858 to %"class.std::bitset"*
  %3859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3860 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3859, i64 0, i64 12
  %YMM12.i1389 = bitcast %union.VectorReg* %3860 to %"class.std::bitset"*
  %3861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3862 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3861, i64 0, i64 13
  %YMM13.i1390 = bitcast %union.VectorReg* %3862 to %"class.std::bitset"*
  %3863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3864 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3863, i64 0, i64 14
  %YMM14.i1391 = bitcast %union.VectorReg* %3864 to %"class.std::bitset"*
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3866 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3865, i64 0, i64 15
  %YMM15.i1392 = bitcast %union.VectorReg* %3866 to %"class.std::bitset"*
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3868 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3867, i64 0, i64 0
  %XMM0.i1393 = bitcast %union.VectorReg* %3868 to %union.vec128_t*
  %3869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3870 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3869, i64 0, i64 1
  %XMM1.i1394 = bitcast %union.VectorReg* %3870 to %union.vec128_t*
  %3871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3872 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3871, i64 0, i64 2
  %XMM2.i1395 = bitcast %union.VectorReg* %3872 to %union.vec128_t*
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3874 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3873, i64 0, i64 3
  %XMM3.i1396 = bitcast %union.VectorReg* %3874 to %union.vec128_t*
  %3875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3876 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3875, i64 0, i64 4
  %XMM4.i1397 = bitcast %union.VectorReg* %3876 to %union.vec128_t*
  %3877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3878 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3877, i64 0, i64 5
  %XMM5.i1398 = bitcast %union.VectorReg* %3878 to %union.vec128_t*
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3880 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3879, i64 0, i64 6
  %XMM6.i1399 = bitcast %union.VectorReg* %3880 to %union.vec128_t*
  %3881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3882 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3881, i64 0, i64 7
  %XMM7.i1400 = bitcast %union.VectorReg* %3882 to %union.vec128_t*
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3884 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3883, i64 0, i64 8
  %XMM8.i1401 = bitcast %union.VectorReg* %3884 to %union.vec128_t*
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3886 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3885, i64 0, i64 9
  %XMM9.i1402 = bitcast %union.VectorReg* %3886 to %union.vec128_t*
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3888 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3887, i64 0, i64 10
  %XMM10.i1403 = bitcast %union.VectorReg* %3888 to %union.vec128_t*
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3890 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3889, i64 0, i64 11
  %XMM11.i1404 = bitcast %union.VectorReg* %3890 to %union.vec128_t*
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3892 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3891, i64 0, i64 12
  %XMM12.i1405 = bitcast %union.VectorReg* %3892 to %union.vec128_t*
  %3893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3894 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3893, i64 0, i64 13
  %XMM13.i1406 = bitcast %union.VectorReg* %3894 to %union.vec128_t*
  %3895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3896 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3895, i64 0, i64 14
  %XMM14.i1407 = bitcast %union.VectorReg* %3896 to %union.vec128_t*
  %3897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3898 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3897, i64 0, i64 15
  %XMM15.i1408 = bitcast %union.VectorReg* %3898 to %union.vec128_t*
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3900 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3899, i32 0, i32 0
  %3901 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3900, i64 0, i64 0
  %ST0.i1409 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3901, i32 0, i32 1
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3903 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3902, i32 0, i32 0
  %3904 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3903, i64 0, i64 1
  %ST1.i1410 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3904, i32 0, i32 1
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3906 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3905, i32 0, i32 0
  %3907 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3906, i64 0, i64 2
  %ST2.i1411 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3907, i32 0, i32 1
  %3908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3909 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3908, i32 0, i32 0
  %3910 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3909, i64 0, i64 3
  %ST3.i1412 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3910, i32 0, i32 1
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3912 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3911, i32 0, i32 0
  %3913 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3912, i64 0, i64 4
  %ST4.i1413 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3913, i32 0, i32 1
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3915 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3914, i32 0, i32 0
  %3916 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3915, i64 0, i64 5
  %ST5.i1414 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3916, i32 0, i32 1
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3918 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3917, i32 0, i32 0
  %3919 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3918, i64 0, i64 6
  %ST6.i1415 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3919, i32 0, i32 1
  %3920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3921 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3920, i32 0, i32 0
  %3922 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3921, i64 0, i64 7
  %ST7.i1416 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3922, i32 0, i32 1
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3924 = getelementptr inbounds %struct.MMX, %struct.MMX* %3923, i32 0, i32 0
  %3925 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3924, i64 0, i64 0
  %3926 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3925, i32 0, i32 1
  %3927 = bitcast %union.vec64_t* %3926 to %struct.uint64v1_t*
  %3928 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3927, i32 0, i32 0
  %MM0.i1417 = getelementptr inbounds [1 x i64], [1 x i64]* %3928, i64 0, i64 0
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3930 = getelementptr inbounds %struct.MMX, %struct.MMX* %3929, i32 0, i32 0
  %3931 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3930, i64 0, i64 1
  %3932 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3931, i32 0, i32 1
  %3933 = bitcast %union.vec64_t* %3932 to %struct.uint64v1_t*
  %3934 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3933, i32 0, i32 0
  %MM1.i1418 = getelementptr inbounds [1 x i64], [1 x i64]* %3934, i64 0, i64 0
  %3935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3936 = getelementptr inbounds %struct.MMX, %struct.MMX* %3935, i32 0, i32 0
  %3937 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3936, i64 0, i64 2
  %3938 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3937, i32 0, i32 1
  %3939 = bitcast %union.vec64_t* %3938 to %struct.uint64v1_t*
  %3940 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3939, i32 0, i32 0
  %MM2.i1419 = getelementptr inbounds [1 x i64], [1 x i64]* %3940, i64 0, i64 0
  %3941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3942 = getelementptr inbounds %struct.MMX, %struct.MMX* %3941, i32 0, i32 0
  %3943 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3942, i64 0, i64 3
  %3944 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3943, i32 0, i32 1
  %3945 = bitcast %union.vec64_t* %3944 to %struct.uint64v1_t*
  %3946 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3945, i32 0, i32 0
  %MM3.i1420 = getelementptr inbounds [1 x i64], [1 x i64]* %3946, i64 0, i64 0
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3948 = getelementptr inbounds %struct.MMX, %struct.MMX* %3947, i32 0, i32 0
  %3949 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3948, i64 0, i64 4
  %3950 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3949, i32 0, i32 1
  %3951 = bitcast %union.vec64_t* %3950 to %struct.uint64v1_t*
  %3952 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3951, i32 0, i32 0
  %MM4.i1421 = getelementptr inbounds [1 x i64], [1 x i64]* %3952, i64 0, i64 0
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3954 = getelementptr inbounds %struct.MMX, %struct.MMX* %3953, i32 0, i32 0
  %3955 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3954, i64 0, i64 5
  %3956 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3955, i32 0, i32 1
  %3957 = bitcast %union.vec64_t* %3956 to %struct.uint64v1_t*
  %3958 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3957, i32 0, i32 0
  %MM5.i1422 = getelementptr inbounds [1 x i64], [1 x i64]* %3958, i64 0, i64 0
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3960 = getelementptr inbounds %struct.MMX, %struct.MMX* %3959, i32 0, i32 0
  %3961 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3960, i64 0, i64 6
  %3962 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3961, i32 0, i32 1
  %3963 = bitcast %union.vec64_t* %3962 to %struct.uint64v1_t*
  %3964 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3963, i32 0, i32 0
  %MM6.i1423 = getelementptr inbounds [1 x i64], [1 x i64]* %3964, i64 0, i64 0
  %3965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3966 = getelementptr inbounds %struct.MMX, %struct.MMX* %3965, i32 0, i32 0
  %3967 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3966, i64 0, i64 7
  %3968 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3967, i32 0, i32 1
  %3969 = bitcast %union.vec64_t* %3968 to %struct.uint64v1_t*
  %3970 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3969, i32 0, i32 0
  %MM7.i1424 = getelementptr inbounds [1 x i64], [1 x i64]* %3970, i64 0, i64 0
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1425 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3971, i32 0, i32 5
  %3972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1426 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3972, i32 0, i32 1
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1427 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3973, i32 0, i32 11
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1428 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3974, i32 0, i32 13
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1429 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3975, i32 0, i32 3
  %3976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1430 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3976, i32 0, i32 9
  %3977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1431 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3977, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i1283, align 8, !noalias !2462
  store i64* @DR1, i64** %_DR1.i1284, align 8, !noalias !2462
  store i64* @DR2, i64** %_DR2.i1285, align 8, !noalias !2462
  store i64* @DR3, i64** %_DR3.i1286, align 8, !noalias !2462
  store i64* @DR4, i64** %_DR4.i1287, align 8, !noalias !2462
  store i64* @DR5, i64** %_DR5.i1288, align 8, !noalias !2462
  store i64* @DR6, i64** %_DR6.i1289, align 8, !noalias !2462
  store i64* @DR7, i64** %_DR7.i1290, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i1291, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i1292, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i1293, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i1294, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i1295, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i1296, align 8, !noalias !2462
  %3978 = bitcast %"class.std::bitset"* %YMM0.i1377 to double*
  %3979 = load double, double* %3978, !alias.scope !2466, !noalias !2467
  %3980 = load i64, i64* %RSP.i1358, !alias.scope !2466, !noalias !2467
  %3981 = load %struct.Memory*, %struct.Memory** %MEMORY.i1282, !noalias !2462
  %3982 = inttoptr i64 %3980 to i64*
  %3983 = load i64, i64* %3982
  store i64 %3983, i64* %PC.i1297, !alias.scope !2466, !noalias !2467
  %3984 = add i64 %3980, 8
  store i64 %3984, i64* %RSP.i1358, !alias.scope !2466, !noalias !2467
  %3985 = call double @sin(double %3979)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1377, !alias.scope !2466, !noalias !2467
  %3986 = bitcast %"class.std::bitset"* %YMM0.i1377 to double*
  store double %3985, double* %3986, !alias.scope !2466, !noalias !2467
  %3987 = load %struct.Memory*, %struct.Memory** %MEMORY.i1282, !noalias !2462
  %3988 = bitcast %struct.State** %state.i1273 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3988)
  %3989 = bitcast i64* %curr_pc.i1274 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3989)
  %3990 = bitcast %struct.Memory** %memory.i1275 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3990)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i1276)
  %3991 = bitcast i64* %SS_BASE.i1277 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3991)
  %3992 = bitcast i64* %ES_BASE.i1278 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3992)
  %3993 = bitcast i64* %DS_BASE.i1279 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3993)
  %3994 = bitcast i64* %CS_BASE.i1280 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3994)
  %3995 = bitcast %struct.State** %STATE.i1281 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3995)
  %3996 = bitcast %struct.Memory** %MEMORY.i1282 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3996)
  %3997 = bitcast i64** %_DR0.i1283 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3997)
  %3998 = bitcast i64** %_DR1.i1284 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3998)
  %3999 = bitcast i64** %_DR2.i1285 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3999)
  %4000 = bitcast i64** %_DR3.i1286 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4000)
  %4001 = bitcast i64** %_DR4.i1287 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4001)
  %4002 = bitcast i64** %_DR5.i1288 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4002)
  %4003 = bitcast i64** %_DR6.i1289 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4003)
  %4004 = bitcast i64** %_DR7.i1290 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4004)
  %4005 = bitcast i64** %CR0.i1291 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4005)
  %4006 = bitcast i64** %CR1.i1292 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4006)
  %4007 = bitcast i64** %CR2.i1293 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4007)
  %4008 = bitcast i64** %CR3.i1294 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4008)
  %4009 = bitcast i64** %CR4.i1295 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4009)
  %4010 = bitcast i64** %CR8.i1296 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4010)
  %4011 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4012 = load i64, i64* %RBP
  %4013 = sub i64 %4012, 232
  %4014 = load i64, i64* %PC
  %4015 = add i64 %4014, 8
  store i64 %4015, i64* %PC
  %4016 = inttoptr i64 %4013 to double*
  %4017 = load double, double* %4016
  %4018 = bitcast i8* %4011 to double*
  store double %4017, double* %4018, align 1, !tbaa !2432
  %4019 = getelementptr inbounds i8, i8* %4011, i64 8
  %4020 = bitcast i8* %4019 to double*
  store double 0.000000e+00, double* %4020, align 1, !tbaa !2432
  %4021 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4022 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4023 = bitcast %union.vec128_t* %XMM0 to i8*
  %4024 = load i64, i64* %PC
  %4025 = add i64 %4024, 4
  store i64 %4025, i64* %PC
  %4026 = bitcast i8* %4022 to double*
  %4027 = load double, double* %4026, align 1
  %4028 = getelementptr inbounds i8, i8* %4022, i64 8
  %4029 = bitcast i8* %4028 to i64*
  %4030 = load i64, i64* %4029, align 1
  %4031 = bitcast i8* %4023 to double*
  %4032 = load double, double* %4031, align 1
  %4033 = fmul double %4027, %4032
  %4034 = bitcast i8* %4021 to double*
  store double %4033, double* %4034, align 1, !tbaa !2432
  %4035 = getelementptr inbounds i8, i8* %4021, i64 8
  %4036 = bitcast i8* %4035 to i64*
  store i64 %4030, i64* %4036, align 1, !tbaa !2432
  %4037 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4038 = load i64, i64* %RBP
  %4039 = sub i64 %4038, 144
  %4040 = load i64, i64* %PC
  %4041 = add i64 %4040, 8
  store i64 %4041, i64* %PC
  %4042 = inttoptr i64 %4039 to double*
  %4043 = load double, double* %4042
  %4044 = bitcast i8* %4037 to double*
  store double %4043, double* %4044, align 1, !tbaa !2432
  %4045 = getelementptr inbounds i8, i8* %4037, i64 8
  %4046 = bitcast i8* %4045 to double*
  store double 0.000000e+00, double* %4046, align 1, !tbaa !2432
  %4047 = load i64, i64* %RBP
  %4048 = sub i64 %4047, 248
  %4049 = bitcast %union.vec128_t* %XMM1 to i8*
  %4050 = load i64, i64* %PC
  %4051 = add i64 %4050, 8
  store i64 %4051, i64* %PC
  %4052 = bitcast i8* %4049 to double*
  %4053 = load double, double* %4052, align 1
  %4054 = inttoptr i64 %4048 to double*
  store double %4053, double* %4054
  %4055 = load i64, i64* %PC
  %4056 = sub i64 %4055, 2457
  %4057 = load i64, i64* %PC
  %4058 = add i64 %4057, 5
  %4059 = load i64, i64* %PC
  %4060 = add i64 %4059, 5
  store i64 %4060, i64* %PC
  %4061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4062 = load i64, i64* %4061, align 8, !tbaa !2428
  %4063 = add i64 %4062, -8
  %4064 = inttoptr i64 %4063 to i64*
  store i64 %4058, i64* %4064
  store i64 %4063, i64* %4061, align 8, !tbaa !2428
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4056, i64* %4065, align 8, !tbaa !2428
  %4066 = load i64, i64* %PC
  %4067 = bitcast %struct.State** %state.i1114 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4067)
  %4068 = bitcast i64* %curr_pc.i1115 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4068)
  %4069 = bitcast %struct.Memory** %memory.i1116 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4069)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i1117)
  %4070 = bitcast i64* %SS_BASE.i1118 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4070)
  %4071 = bitcast i64* %ES_BASE.i1119 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4071)
  %4072 = bitcast i64* %DS_BASE.i1120 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4072)
  %4073 = bitcast i64* %CS_BASE.i1121 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4073)
  %4074 = bitcast %struct.State** %STATE.i1122 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4074)
  %4075 = bitcast %struct.Memory** %MEMORY.i1123 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4075)
  %4076 = bitcast i64** %_DR0.i1124 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4076)
  %4077 = bitcast i64** %_DR1.i1125 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4077)
  %4078 = bitcast i64** %_DR2.i1126 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4078)
  %4079 = bitcast i64** %_DR3.i1127 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4079)
  %4080 = bitcast i64** %_DR4.i1128 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4080)
  %4081 = bitcast i64** %_DR5.i1129 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4081)
  %4082 = bitcast i64** %_DR6.i1130 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4082)
  %4083 = bitcast i64** %_DR7.i1131 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4083)
  %4084 = bitcast i64** %CR0.i1132 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4084)
  %4085 = bitcast i64** %CR1.i1133 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4085)
  %4086 = bitcast i64** %CR2.i1134 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4086)
  %4087 = bitcast i64** %CR3.i1135 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4087)
  %4088 = bitcast i64** %CR4.i1136 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4088)
  %4089 = bitcast i64** %CR8.i1137 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4089)
  store %struct.State* %0, %struct.State** %state.i1114, align 8, !noalias !2468
  store i64 %4066, i64* %curr_pc.i1115, align 8, !noalias !2468
  store %struct.Memory* %3987, %struct.Memory** %memory.i1116, align 8, !noalias !2468
  store i8 0, i8* %BRANCH_TAKEN.i1117, align 1, !noalias !2468
  store i64 0, i64* %SS_BASE.i1118, align 8, !noalias !2468
  store i64 0, i64* %ES_BASE.i1119, align 8, !noalias !2468
  store i64 0, i64* %DS_BASE.i1120, align 8, !noalias !2468
  store i64 0, i64* %CS_BASE.i1121, align 8, !noalias !2468
  store %struct.State* %0, %struct.State** %STATE.i1122, align 8, !noalias !2468
  store %struct.Memory* %3987, %struct.Memory** %MEMORY.i1123, align 8, !noalias !2468
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4091 = getelementptr inbounds %struct.GPR, %struct.GPR* %4090, i32 0, i32 33
  %4092 = getelementptr inbounds %struct.Reg, %struct.Reg* %4091, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %4092 to i64*
  store i64 %4066, i64* %PC.i1138, align 8, !alias.scope !2472, !noalias !2473
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4094 = getelementptr inbounds %struct.GPR, %struct.GPR* %4093, i32 0, i32 1
  %4095 = getelementptr inbounds %struct.Reg, %struct.Reg* %4094, i32 0, i32 0
  %4096 = bitcast %union.anon* %4095 to %struct.anon.2*
  %AH.i1139 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4096, i32 0, i32 1
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4098 = getelementptr inbounds %struct.GPR, %struct.GPR* %4097, i32 0, i32 3
  %4099 = getelementptr inbounds %struct.Reg, %struct.Reg* %4098, i32 0, i32 0
  %4100 = bitcast %union.anon* %4099 to %struct.anon.2*
  %BH.i1140 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4100, i32 0, i32 1
  %4101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4102 = getelementptr inbounds %struct.GPR, %struct.GPR* %4101, i32 0, i32 5
  %4103 = getelementptr inbounds %struct.Reg, %struct.Reg* %4102, i32 0, i32 0
  %4104 = bitcast %union.anon* %4103 to %struct.anon.2*
  %CH.i1141 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4104, i32 0, i32 1
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4106 = getelementptr inbounds %struct.GPR, %struct.GPR* %4105, i32 0, i32 7
  %4107 = getelementptr inbounds %struct.Reg, %struct.Reg* %4106, i32 0, i32 0
  %4108 = bitcast %union.anon* %4107 to %struct.anon.2*
  %DH.i1142 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4108, i32 0, i32 1
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4110 = getelementptr inbounds %struct.GPR, %struct.GPR* %4109, i32 0, i32 1
  %4111 = getelementptr inbounds %struct.Reg, %struct.Reg* %4110, i32 0, i32 0
  %4112 = bitcast %union.anon* %4111 to %struct.anon.2*
  %AL.i1143 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4112, i32 0, i32 0
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4114 = getelementptr inbounds %struct.GPR, %struct.GPR* %4113, i32 0, i32 3
  %4115 = getelementptr inbounds %struct.Reg, %struct.Reg* %4114, i32 0, i32 0
  %4116 = bitcast %union.anon* %4115 to %struct.anon.2*
  %BL.i1144 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4116, i32 0, i32 0
  %4117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4118 = getelementptr inbounds %struct.GPR, %struct.GPR* %4117, i32 0, i32 5
  %4119 = getelementptr inbounds %struct.Reg, %struct.Reg* %4118, i32 0, i32 0
  %4120 = bitcast %union.anon* %4119 to %struct.anon.2*
  %CL.i1145 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4120, i32 0, i32 0
  %4121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4122 = getelementptr inbounds %struct.GPR, %struct.GPR* %4121, i32 0, i32 7
  %4123 = getelementptr inbounds %struct.Reg, %struct.Reg* %4122, i32 0, i32 0
  %4124 = bitcast %union.anon* %4123 to %struct.anon.2*
  %DL.i1146 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4124, i32 0, i32 0
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4126 = getelementptr inbounds %struct.GPR, %struct.GPR* %4125, i32 0, i32 9
  %4127 = getelementptr inbounds %struct.Reg, %struct.Reg* %4126, i32 0, i32 0
  %4128 = bitcast %union.anon* %4127 to %struct.anon.2*
  %SIL.i1147 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4128, i32 0, i32 0
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4130 = getelementptr inbounds %struct.GPR, %struct.GPR* %4129, i32 0, i32 11
  %4131 = getelementptr inbounds %struct.Reg, %struct.Reg* %4130, i32 0, i32 0
  %4132 = bitcast %union.anon* %4131 to %struct.anon.2*
  %DIL.i1148 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4132, i32 0, i32 0
  %4133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4134 = getelementptr inbounds %struct.GPR, %struct.GPR* %4133, i32 0, i32 13
  %4135 = getelementptr inbounds %struct.Reg, %struct.Reg* %4134, i32 0, i32 0
  %4136 = bitcast %union.anon* %4135 to %struct.anon.2*
  %SPL.i1149 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4136, i32 0, i32 0
  %4137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4138 = getelementptr inbounds %struct.GPR, %struct.GPR* %4137, i32 0, i32 15
  %4139 = getelementptr inbounds %struct.Reg, %struct.Reg* %4138, i32 0, i32 0
  %4140 = bitcast %union.anon* %4139 to %struct.anon.2*
  %BPL.i1150 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4140, i32 0, i32 0
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4142 = getelementptr inbounds %struct.GPR, %struct.GPR* %4141, i32 0, i32 17
  %4143 = getelementptr inbounds %struct.Reg, %struct.Reg* %4142, i32 0, i32 0
  %4144 = bitcast %union.anon* %4143 to %struct.anon.2*
  %R8B.i1151 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4144, i32 0, i32 0
  %4145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4146 = getelementptr inbounds %struct.GPR, %struct.GPR* %4145, i32 0, i32 19
  %4147 = getelementptr inbounds %struct.Reg, %struct.Reg* %4146, i32 0, i32 0
  %4148 = bitcast %union.anon* %4147 to %struct.anon.2*
  %R9B.i1152 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4148, i32 0, i32 0
  %4149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4150 = getelementptr inbounds %struct.GPR, %struct.GPR* %4149, i32 0, i32 21
  %4151 = getelementptr inbounds %struct.Reg, %struct.Reg* %4150, i32 0, i32 0
  %4152 = bitcast %union.anon* %4151 to %struct.anon.2*
  %R10B.i1153 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4152, i32 0, i32 0
  %4153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4154 = getelementptr inbounds %struct.GPR, %struct.GPR* %4153, i32 0, i32 23
  %4155 = getelementptr inbounds %struct.Reg, %struct.Reg* %4154, i32 0, i32 0
  %4156 = bitcast %union.anon* %4155 to %struct.anon.2*
  %R11B.i1154 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4156, i32 0, i32 0
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4158 = getelementptr inbounds %struct.GPR, %struct.GPR* %4157, i32 0, i32 25
  %4159 = getelementptr inbounds %struct.Reg, %struct.Reg* %4158, i32 0, i32 0
  %4160 = bitcast %union.anon* %4159 to %struct.anon.2*
  %R12B.i1155 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4160, i32 0, i32 0
  %4161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4162 = getelementptr inbounds %struct.GPR, %struct.GPR* %4161, i32 0, i32 27
  %4163 = getelementptr inbounds %struct.Reg, %struct.Reg* %4162, i32 0, i32 0
  %4164 = bitcast %union.anon* %4163 to %struct.anon.2*
  %R13B.i1156 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4164, i32 0, i32 0
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4166 = getelementptr inbounds %struct.GPR, %struct.GPR* %4165, i32 0, i32 29
  %4167 = getelementptr inbounds %struct.Reg, %struct.Reg* %4166, i32 0, i32 0
  %4168 = bitcast %union.anon* %4167 to %struct.anon.2*
  %R14B.i1157 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4168, i32 0, i32 0
  %4169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4170 = getelementptr inbounds %struct.GPR, %struct.GPR* %4169, i32 0, i32 31
  %4171 = getelementptr inbounds %struct.Reg, %struct.Reg* %4170, i32 0, i32 0
  %4172 = bitcast %union.anon* %4171 to %struct.anon.2*
  %R15B.i1158 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4172, i32 0, i32 0
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4174 = getelementptr inbounds %struct.GPR, %struct.GPR* %4173, i32 0, i32 1
  %4175 = getelementptr inbounds %struct.Reg, %struct.Reg* %4174, i32 0, i32 0
  %AX.i1159 = bitcast %union.anon* %4175 to i16*
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4177 = getelementptr inbounds %struct.GPR, %struct.GPR* %4176, i32 0, i32 3
  %4178 = getelementptr inbounds %struct.Reg, %struct.Reg* %4177, i32 0, i32 0
  %BX.i1160 = bitcast %union.anon* %4178 to i16*
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4180 = getelementptr inbounds %struct.GPR, %struct.GPR* %4179, i32 0, i32 5
  %4181 = getelementptr inbounds %struct.Reg, %struct.Reg* %4180, i32 0, i32 0
  %CX.i1161 = bitcast %union.anon* %4181 to i16*
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4183 = getelementptr inbounds %struct.GPR, %struct.GPR* %4182, i32 0, i32 7
  %4184 = getelementptr inbounds %struct.Reg, %struct.Reg* %4183, i32 0, i32 0
  %DX.i1162 = bitcast %union.anon* %4184 to i16*
  %4185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4186 = getelementptr inbounds %struct.GPR, %struct.GPR* %4185, i32 0, i32 9
  %4187 = getelementptr inbounds %struct.Reg, %struct.Reg* %4186, i32 0, i32 0
  %SI.i1163 = bitcast %union.anon* %4187 to i16*
  %4188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4189 = getelementptr inbounds %struct.GPR, %struct.GPR* %4188, i32 0, i32 11
  %4190 = getelementptr inbounds %struct.Reg, %struct.Reg* %4189, i32 0, i32 0
  %DI.i1164 = bitcast %union.anon* %4190 to i16*
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4192 = getelementptr inbounds %struct.GPR, %struct.GPR* %4191, i32 0, i32 13
  %4193 = getelementptr inbounds %struct.Reg, %struct.Reg* %4192, i32 0, i32 0
  %SP.i1165 = bitcast %union.anon* %4193 to i16*
  %4194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4195 = getelementptr inbounds %struct.GPR, %struct.GPR* %4194, i32 0, i32 15
  %4196 = getelementptr inbounds %struct.Reg, %struct.Reg* %4195, i32 0, i32 0
  %BP.i1166 = bitcast %union.anon* %4196 to i16*
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4198 = getelementptr inbounds %struct.GPR, %struct.GPR* %4197, i32 0, i32 17
  %4199 = getelementptr inbounds %struct.Reg, %struct.Reg* %4198, i32 0, i32 0
  %R8W.i1167 = bitcast %union.anon* %4199 to i16*
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4201 = getelementptr inbounds %struct.GPR, %struct.GPR* %4200, i32 0, i32 19
  %4202 = getelementptr inbounds %struct.Reg, %struct.Reg* %4201, i32 0, i32 0
  %R9W.i1168 = bitcast %union.anon* %4202 to i16*
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4204 = getelementptr inbounds %struct.GPR, %struct.GPR* %4203, i32 0, i32 21
  %4205 = getelementptr inbounds %struct.Reg, %struct.Reg* %4204, i32 0, i32 0
  %R10W.i1169 = bitcast %union.anon* %4205 to i16*
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 23
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %R11W.i1170 = bitcast %union.anon* %4208 to i16*
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 25
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %R12W.i1171 = bitcast %union.anon* %4211 to i16*
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 27
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %R13W.i1172 = bitcast %union.anon* %4214 to i16*
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4216 = getelementptr inbounds %struct.GPR, %struct.GPR* %4215, i32 0, i32 29
  %4217 = getelementptr inbounds %struct.Reg, %struct.Reg* %4216, i32 0, i32 0
  %R14W.i1173 = bitcast %union.anon* %4217 to i16*
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4219 = getelementptr inbounds %struct.GPR, %struct.GPR* %4218, i32 0, i32 31
  %4220 = getelementptr inbounds %struct.Reg, %struct.Reg* %4219, i32 0, i32 0
  %R15W.i1174 = bitcast %union.anon* %4220 to i16*
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 33
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %IP.i1175 = bitcast %union.anon* %4223 to i16*
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4225 = getelementptr inbounds %struct.GPR, %struct.GPR* %4224, i32 0, i32 1
  %4226 = getelementptr inbounds %struct.Reg, %struct.Reg* %4225, i32 0, i32 0
  %EAX.i1176 = bitcast %union.anon* %4226 to i32*
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4228 = getelementptr inbounds %struct.GPR, %struct.GPR* %4227, i32 0, i32 3
  %4229 = getelementptr inbounds %struct.Reg, %struct.Reg* %4228, i32 0, i32 0
  %EBX.i1177 = bitcast %union.anon* %4229 to i32*
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4231 = getelementptr inbounds %struct.GPR, %struct.GPR* %4230, i32 0, i32 5
  %4232 = getelementptr inbounds %struct.Reg, %struct.Reg* %4231, i32 0, i32 0
  %ECX.i1178 = bitcast %union.anon* %4232 to i32*
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4234 = getelementptr inbounds %struct.GPR, %struct.GPR* %4233, i32 0, i32 7
  %4235 = getelementptr inbounds %struct.Reg, %struct.Reg* %4234, i32 0, i32 0
  %EDX.i1179 = bitcast %union.anon* %4235 to i32*
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4237 = getelementptr inbounds %struct.GPR, %struct.GPR* %4236, i32 0, i32 9
  %4238 = getelementptr inbounds %struct.Reg, %struct.Reg* %4237, i32 0, i32 0
  %ESI.i1180 = bitcast %union.anon* %4238 to i32*
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4240 = getelementptr inbounds %struct.GPR, %struct.GPR* %4239, i32 0, i32 11
  %4241 = getelementptr inbounds %struct.Reg, %struct.Reg* %4240, i32 0, i32 0
  %EDI.i1181 = bitcast %union.anon* %4241 to i32*
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4243 = getelementptr inbounds %struct.GPR, %struct.GPR* %4242, i32 0, i32 13
  %4244 = getelementptr inbounds %struct.Reg, %struct.Reg* %4243, i32 0, i32 0
  %ESP.i1182 = bitcast %union.anon* %4244 to i32*
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4246 = getelementptr inbounds %struct.GPR, %struct.GPR* %4245, i32 0, i32 15
  %4247 = getelementptr inbounds %struct.Reg, %struct.Reg* %4246, i32 0, i32 0
  %EBP.i1183 = bitcast %union.anon* %4247 to i32*
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4249 = getelementptr inbounds %struct.GPR, %struct.GPR* %4248, i32 0, i32 33
  %4250 = getelementptr inbounds %struct.Reg, %struct.Reg* %4249, i32 0, i32 0
  %EIP.i1184 = bitcast %union.anon* %4250 to i32*
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4252 = getelementptr inbounds %struct.GPR, %struct.GPR* %4251, i32 0, i32 17
  %4253 = getelementptr inbounds %struct.Reg, %struct.Reg* %4252, i32 0, i32 0
  %R8D.i1185 = bitcast %union.anon* %4253 to i32*
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4255 = getelementptr inbounds %struct.GPR, %struct.GPR* %4254, i32 0, i32 19
  %4256 = getelementptr inbounds %struct.Reg, %struct.Reg* %4255, i32 0, i32 0
  %R9D.i1186 = bitcast %union.anon* %4256 to i32*
  %4257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4258 = getelementptr inbounds %struct.GPR, %struct.GPR* %4257, i32 0, i32 21
  %4259 = getelementptr inbounds %struct.Reg, %struct.Reg* %4258, i32 0, i32 0
  %R10D.i1187 = bitcast %union.anon* %4259 to i32*
  %4260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4261 = getelementptr inbounds %struct.GPR, %struct.GPR* %4260, i32 0, i32 23
  %4262 = getelementptr inbounds %struct.Reg, %struct.Reg* %4261, i32 0, i32 0
  %R11D.i1188 = bitcast %union.anon* %4262 to i32*
  %4263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4264 = getelementptr inbounds %struct.GPR, %struct.GPR* %4263, i32 0, i32 25
  %4265 = getelementptr inbounds %struct.Reg, %struct.Reg* %4264, i32 0, i32 0
  %R12D.i1189 = bitcast %union.anon* %4265 to i32*
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4267 = getelementptr inbounds %struct.GPR, %struct.GPR* %4266, i32 0, i32 27
  %4268 = getelementptr inbounds %struct.Reg, %struct.Reg* %4267, i32 0, i32 0
  %R13D.i1190 = bitcast %union.anon* %4268 to i32*
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4270 = getelementptr inbounds %struct.GPR, %struct.GPR* %4269, i32 0, i32 29
  %4271 = getelementptr inbounds %struct.Reg, %struct.Reg* %4270, i32 0, i32 0
  %R14D.i1191 = bitcast %union.anon* %4271 to i32*
  %4272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4273 = getelementptr inbounds %struct.GPR, %struct.GPR* %4272, i32 0, i32 31
  %4274 = getelementptr inbounds %struct.Reg, %struct.Reg* %4273, i32 0, i32 0
  %R15D.i1192 = bitcast %union.anon* %4274 to i32*
  %4275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4276 = getelementptr inbounds %struct.GPR, %struct.GPR* %4275, i32 0, i32 1
  %4277 = getelementptr inbounds %struct.Reg, %struct.Reg* %4276, i32 0, i32 0
  %RAX.i1193 = bitcast %union.anon* %4277 to i64*
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4279 = getelementptr inbounds %struct.GPR, %struct.GPR* %4278, i32 0, i32 3
  %4280 = getelementptr inbounds %struct.Reg, %struct.Reg* %4279, i32 0, i32 0
  %RBX.i1194 = bitcast %union.anon* %4280 to i64*
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4282 = getelementptr inbounds %struct.GPR, %struct.GPR* %4281, i32 0, i32 5
  %4283 = getelementptr inbounds %struct.Reg, %struct.Reg* %4282, i32 0, i32 0
  %RCX.i1195 = bitcast %union.anon* %4283 to i64*
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4285 = getelementptr inbounds %struct.GPR, %struct.GPR* %4284, i32 0, i32 7
  %4286 = getelementptr inbounds %struct.Reg, %struct.Reg* %4285, i32 0, i32 0
  %RDX.i1196 = bitcast %union.anon* %4286 to i64*
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4288 = getelementptr inbounds %struct.GPR, %struct.GPR* %4287, i32 0, i32 9
  %4289 = getelementptr inbounds %struct.Reg, %struct.Reg* %4288, i32 0, i32 0
  %RSI.i1197 = bitcast %union.anon* %4289 to i64*
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4291 = getelementptr inbounds %struct.GPR, %struct.GPR* %4290, i32 0, i32 11
  %4292 = getelementptr inbounds %struct.Reg, %struct.Reg* %4291, i32 0, i32 0
  %RDI.i1198 = bitcast %union.anon* %4292 to i64*
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4294 = getelementptr inbounds %struct.GPR, %struct.GPR* %4293, i32 0, i32 13
  %4295 = getelementptr inbounds %struct.Reg, %struct.Reg* %4294, i32 0, i32 0
  %RSP.i1199 = bitcast %union.anon* %4295 to i64*
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4297 = getelementptr inbounds %struct.GPR, %struct.GPR* %4296, i32 0, i32 15
  %4298 = getelementptr inbounds %struct.Reg, %struct.Reg* %4297, i32 0, i32 0
  %RBP.i1200 = bitcast %union.anon* %4298 to i64*
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4300 = getelementptr inbounds %struct.GPR, %struct.GPR* %4299, i32 0, i32 17
  %4301 = getelementptr inbounds %struct.Reg, %struct.Reg* %4300, i32 0, i32 0
  %R8.i1201 = bitcast %union.anon* %4301 to i64*
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4303 = getelementptr inbounds %struct.GPR, %struct.GPR* %4302, i32 0, i32 19
  %4304 = getelementptr inbounds %struct.Reg, %struct.Reg* %4303, i32 0, i32 0
  %R9.i1202 = bitcast %union.anon* %4304 to i64*
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4306 = getelementptr inbounds %struct.GPR, %struct.GPR* %4305, i32 0, i32 21
  %4307 = getelementptr inbounds %struct.Reg, %struct.Reg* %4306, i32 0, i32 0
  %R10.i1203 = bitcast %union.anon* %4307 to i64*
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4309 = getelementptr inbounds %struct.GPR, %struct.GPR* %4308, i32 0, i32 23
  %4310 = getelementptr inbounds %struct.Reg, %struct.Reg* %4309, i32 0, i32 0
  %R11.i1204 = bitcast %union.anon* %4310 to i64*
  %4311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4312 = getelementptr inbounds %struct.GPR, %struct.GPR* %4311, i32 0, i32 25
  %4313 = getelementptr inbounds %struct.Reg, %struct.Reg* %4312, i32 0, i32 0
  %R12.i1205 = bitcast %union.anon* %4313 to i64*
  %4314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4315 = getelementptr inbounds %struct.GPR, %struct.GPR* %4314, i32 0, i32 27
  %4316 = getelementptr inbounds %struct.Reg, %struct.Reg* %4315, i32 0, i32 0
  %R13.i1206 = bitcast %union.anon* %4316 to i64*
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4318 = getelementptr inbounds %struct.GPR, %struct.GPR* %4317, i32 0, i32 29
  %4319 = getelementptr inbounds %struct.Reg, %struct.Reg* %4318, i32 0, i32 0
  %R14.i1207 = bitcast %union.anon* %4319 to i64*
  %4320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4321 = getelementptr inbounds %struct.GPR, %struct.GPR* %4320, i32 0, i32 31
  %4322 = getelementptr inbounds %struct.Reg, %struct.Reg* %4321, i32 0, i32 0
  %R15.i1208 = bitcast %union.anon* %4322 to i64*
  %4323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4324 = getelementptr inbounds %struct.GPR, %struct.GPR* %4323, i32 0, i32 33
  %4325 = getelementptr inbounds %struct.Reg, %struct.Reg* %4324, i32 0, i32 0
  %RIP.i1209 = bitcast %union.anon* %4325 to i64*
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4327 = getelementptr inbounds %struct.Segments, %struct.Segments* %4326, i32 0, i32 1
  %SS.i1210 = bitcast %union.SegmentSelector* %4327 to i16*
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4329 = getelementptr inbounds %struct.Segments, %struct.Segments* %4328, i32 0, i32 3
  %ES.i1211 = bitcast %union.SegmentSelector* %4329 to i16*
  %4330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4331 = getelementptr inbounds %struct.Segments, %struct.Segments* %4330, i32 0, i32 5
  %GS.i1212 = bitcast %union.SegmentSelector* %4331 to i16*
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4333 = getelementptr inbounds %struct.Segments, %struct.Segments* %4332, i32 0, i32 7
  %FS.i1213 = bitcast %union.SegmentSelector* %4333 to i16*
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4335 = getelementptr inbounds %struct.Segments, %struct.Segments* %4334, i32 0, i32 9
  %DS.i1214 = bitcast %union.SegmentSelector* %4335 to i16*
  %4336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4337 = getelementptr inbounds %struct.Segments, %struct.Segments* %4336, i32 0, i32 11
  %CS.i1215 = bitcast %union.SegmentSelector* %4337 to i16*
  %4338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4339 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4338, i32 0, i32 5
  %4340 = getelementptr inbounds %struct.Reg, %struct.Reg* %4339, i32 0, i32 0
  %GS_BASE.i1216 = bitcast %union.anon* %4340 to i64*
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4342 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4341, i32 0, i32 7
  %4343 = getelementptr inbounds %struct.Reg, %struct.Reg* %4342, i32 0, i32 0
  %FS_BASE.i1217 = bitcast %union.anon* %4343 to i64*
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4345 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4344, i64 0, i64 0
  %YMM0.i1218 = bitcast %union.VectorReg* %4345 to %"class.std::bitset"*
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4347 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4346, i64 0, i64 1
  %YMM1.i1219 = bitcast %union.VectorReg* %4347 to %"class.std::bitset"*
  %4348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4349 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4348, i64 0, i64 2
  %YMM2.i1220 = bitcast %union.VectorReg* %4349 to %"class.std::bitset"*
  %4350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4351 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4350, i64 0, i64 3
  %YMM3.i1221 = bitcast %union.VectorReg* %4351 to %"class.std::bitset"*
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4353 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4352, i64 0, i64 4
  %YMM4.i1222 = bitcast %union.VectorReg* %4353 to %"class.std::bitset"*
  %4354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4355 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4354, i64 0, i64 5
  %YMM5.i1223 = bitcast %union.VectorReg* %4355 to %"class.std::bitset"*
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4357 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4356, i64 0, i64 6
  %YMM6.i1224 = bitcast %union.VectorReg* %4357 to %"class.std::bitset"*
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4359 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4358, i64 0, i64 7
  %YMM7.i1225 = bitcast %union.VectorReg* %4359 to %"class.std::bitset"*
  %4360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4361 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4360, i64 0, i64 8
  %YMM8.i1226 = bitcast %union.VectorReg* %4361 to %"class.std::bitset"*
  %4362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4363 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4362, i64 0, i64 9
  %YMM9.i1227 = bitcast %union.VectorReg* %4363 to %"class.std::bitset"*
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4365 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4364, i64 0, i64 10
  %YMM10.i1228 = bitcast %union.VectorReg* %4365 to %"class.std::bitset"*
  %4366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4367 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4366, i64 0, i64 11
  %YMM11.i1229 = bitcast %union.VectorReg* %4367 to %"class.std::bitset"*
  %4368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4369 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4368, i64 0, i64 12
  %YMM12.i1230 = bitcast %union.VectorReg* %4369 to %"class.std::bitset"*
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4371 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4370, i64 0, i64 13
  %YMM13.i1231 = bitcast %union.VectorReg* %4371 to %"class.std::bitset"*
  %4372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4373 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4372, i64 0, i64 14
  %YMM14.i1232 = bitcast %union.VectorReg* %4373 to %"class.std::bitset"*
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4375 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4374, i64 0, i64 15
  %YMM15.i1233 = bitcast %union.VectorReg* %4375 to %"class.std::bitset"*
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4377 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4376, i64 0, i64 0
  %XMM0.i1234 = bitcast %union.VectorReg* %4377 to %union.vec128_t*
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4379 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4378, i64 0, i64 1
  %XMM1.i1235 = bitcast %union.VectorReg* %4379 to %union.vec128_t*
  %4380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4381 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4380, i64 0, i64 2
  %XMM2.i1236 = bitcast %union.VectorReg* %4381 to %union.vec128_t*
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4383 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4382, i64 0, i64 3
  %XMM3.i1237 = bitcast %union.VectorReg* %4383 to %union.vec128_t*
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4385 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4384, i64 0, i64 4
  %XMM4.i1238 = bitcast %union.VectorReg* %4385 to %union.vec128_t*
  %4386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4387 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4386, i64 0, i64 5
  %XMM5.i1239 = bitcast %union.VectorReg* %4387 to %union.vec128_t*
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4389 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4388, i64 0, i64 6
  %XMM6.i1240 = bitcast %union.VectorReg* %4389 to %union.vec128_t*
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4391 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4390, i64 0, i64 7
  %XMM7.i1241 = bitcast %union.VectorReg* %4391 to %union.vec128_t*
  %4392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4393 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4392, i64 0, i64 8
  %XMM8.i1242 = bitcast %union.VectorReg* %4393 to %union.vec128_t*
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4395 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4394, i64 0, i64 9
  %XMM9.i1243 = bitcast %union.VectorReg* %4395 to %union.vec128_t*
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4397 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4396, i64 0, i64 10
  %XMM10.i1244 = bitcast %union.VectorReg* %4397 to %union.vec128_t*
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4399 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4398, i64 0, i64 11
  %XMM11.i1245 = bitcast %union.VectorReg* %4399 to %union.vec128_t*
  %4400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4401 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4400, i64 0, i64 12
  %XMM12.i1246 = bitcast %union.VectorReg* %4401 to %union.vec128_t*
  %4402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4403 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4402, i64 0, i64 13
  %XMM13.i1247 = bitcast %union.VectorReg* %4403 to %union.vec128_t*
  %4404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4405 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4404, i64 0, i64 14
  %XMM14.i1248 = bitcast %union.VectorReg* %4405 to %union.vec128_t*
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4407 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4406, i64 0, i64 15
  %XMM15.i1249 = bitcast %union.VectorReg* %4407 to %union.vec128_t*
  %4408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4409 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4408, i32 0, i32 0
  %4410 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4409, i64 0, i64 0
  %ST0.i1250 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4410, i32 0, i32 1
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4412 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4411, i32 0, i32 0
  %4413 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4412, i64 0, i64 1
  %ST1.i1251 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4413, i32 0, i32 1
  %4414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4415 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4414, i32 0, i32 0
  %4416 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4415, i64 0, i64 2
  %ST2.i1252 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4416, i32 0, i32 1
  %4417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4418 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4417, i32 0, i32 0
  %4419 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4418, i64 0, i64 3
  %ST3.i1253 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4419, i32 0, i32 1
  %4420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4421 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4420, i32 0, i32 0
  %4422 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4421, i64 0, i64 4
  %ST4.i1254 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4422, i32 0, i32 1
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4424 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4423, i32 0, i32 0
  %4425 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4424, i64 0, i64 5
  %ST5.i1255 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4425, i32 0, i32 1
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4427 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4426, i32 0, i32 0
  %4428 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4427, i64 0, i64 6
  %ST6.i1256 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4428, i32 0, i32 1
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4430 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4429, i32 0, i32 0
  %4431 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4430, i64 0, i64 7
  %ST7.i1257 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4431, i32 0, i32 1
  %4432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4433 = getelementptr inbounds %struct.MMX, %struct.MMX* %4432, i32 0, i32 0
  %4434 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4433, i64 0, i64 0
  %4435 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4434, i32 0, i32 1
  %4436 = bitcast %union.vec64_t* %4435 to %struct.uint64v1_t*
  %4437 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4436, i32 0, i32 0
  %MM0.i1258 = getelementptr inbounds [1 x i64], [1 x i64]* %4437, i64 0, i64 0
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4439 = getelementptr inbounds %struct.MMX, %struct.MMX* %4438, i32 0, i32 0
  %4440 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4439, i64 0, i64 1
  %4441 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4440, i32 0, i32 1
  %4442 = bitcast %union.vec64_t* %4441 to %struct.uint64v1_t*
  %4443 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4442, i32 0, i32 0
  %MM1.i1259 = getelementptr inbounds [1 x i64], [1 x i64]* %4443, i64 0, i64 0
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4445 = getelementptr inbounds %struct.MMX, %struct.MMX* %4444, i32 0, i32 0
  %4446 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4445, i64 0, i64 2
  %4447 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4446, i32 0, i32 1
  %4448 = bitcast %union.vec64_t* %4447 to %struct.uint64v1_t*
  %4449 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4448, i32 0, i32 0
  %MM2.i1260 = getelementptr inbounds [1 x i64], [1 x i64]* %4449, i64 0, i64 0
  %4450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4451 = getelementptr inbounds %struct.MMX, %struct.MMX* %4450, i32 0, i32 0
  %4452 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4451, i64 0, i64 3
  %4453 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4452, i32 0, i32 1
  %4454 = bitcast %union.vec64_t* %4453 to %struct.uint64v1_t*
  %4455 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4454, i32 0, i32 0
  %MM3.i1261 = getelementptr inbounds [1 x i64], [1 x i64]* %4455, i64 0, i64 0
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4457 = getelementptr inbounds %struct.MMX, %struct.MMX* %4456, i32 0, i32 0
  %4458 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4457, i64 0, i64 4
  %4459 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4458, i32 0, i32 1
  %4460 = bitcast %union.vec64_t* %4459 to %struct.uint64v1_t*
  %4461 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4460, i32 0, i32 0
  %MM4.i1262 = getelementptr inbounds [1 x i64], [1 x i64]* %4461, i64 0, i64 0
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4463 = getelementptr inbounds %struct.MMX, %struct.MMX* %4462, i32 0, i32 0
  %4464 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4463, i64 0, i64 5
  %4465 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4464, i32 0, i32 1
  %4466 = bitcast %union.vec64_t* %4465 to %struct.uint64v1_t*
  %4467 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4466, i32 0, i32 0
  %MM5.i1263 = getelementptr inbounds [1 x i64], [1 x i64]* %4467, i64 0, i64 0
  %4468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4469 = getelementptr inbounds %struct.MMX, %struct.MMX* %4468, i32 0, i32 0
  %4470 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4469, i64 0, i64 6
  %4471 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4470, i32 0, i32 1
  %4472 = bitcast %union.vec64_t* %4471 to %struct.uint64v1_t*
  %4473 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4472, i32 0, i32 0
  %MM6.i1264 = getelementptr inbounds [1 x i64], [1 x i64]* %4473, i64 0, i64 0
  %4474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4475 = getelementptr inbounds %struct.MMX, %struct.MMX* %4474, i32 0, i32 0
  %4476 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4475, i64 0, i64 7
  %4477 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4476, i32 0, i32 1
  %4478 = bitcast %union.vec64_t* %4477 to %struct.uint64v1_t*
  %4479 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4478, i32 0, i32 0
  %MM7.i1265 = getelementptr inbounds [1 x i64], [1 x i64]* %4479, i64 0, i64 0
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1266 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4480, i32 0, i32 5
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1267 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4481, i32 0, i32 1
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1268 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4482, i32 0, i32 11
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1269 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4483, i32 0, i32 13
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1270 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4484, i32 0, i32 3
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1271 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4485, i32 0, i32 9
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1272 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4486, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i1124, align 8, !noalias !2468
  store i64* @DR1, i64** %_DR1.i1125, align 8, !noalias !2468
  store i64* @DR2, i64** %_DR2.i1126, align 8, !noalias !2468
  store i64* @DR3, i64** %_DR3.i1127, align 8, !noalias !2468
  store i64* @DR4, i64** %_DR4.i1128, align 8, !noalias !2468
  store i64* @DR5, i64** %_DR5.i1129, align 8, !noalias !2468
  store i64* @DR6, i64** %_DR6.i1130, align 8, !noalias !2468
  store i64* @DR7, i64** %_DR7.i1131, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i1132, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i1133, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i1134, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i1135, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i1136, align 8, !noalias !2468
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i1137, align 8, !noalias !2468
  %4487 = bitcast %"class.std::bitset"* %YMM0.i1218 to double*
  %4488 = load double, double* %4487, !alias.scope !2472, !noalias !2473
  %4489 = load i64, i64* %RSP.i1199, !alias.scope !2472, !noalias !2473
  %4490 = load %struct.Memory*, %struct.Memory** %MEMORY.i1123, !noalias !2468
  %4491 = inttoptr i64 %4489 to i64*
  %4492 = load i64, i64* %4491
  store i64 %4492, i64* %PC.i1138, !alias.scope !2472, !noalias !2473
  %4493 = add i64 %4489, 8
  store i64 %4493, i64* %RSP.i1199, !alias.scope !2472, !noalias !2473
  %4494 = call double @cos(double %4488)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1218, !alias.scope !2472, !noalias !2473
  %4495 = bitcast %"class.std::bitset"* %YMM0.i1218 to double*
  store double %4494, double* %4495, !alias.scope !2472, !noalias !2473
  %4496 = load %struct.Memory*, %struct.Memory** %MEMORY.i1123, !noalias !2468
  %4497 = bitcast %struct.State** %state.i1114 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4497)
  %4498 = bitcast i64* %curr_pc.i1115 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4498)
  %4499 = bitcast %struct.Memory** %memory.i1116 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4499)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i1117)
  %4500 = bitcast i64* %SS_BASE.i1118 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4500)
  %4501 = bitcast i64* %ES_BASE.i1119 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4501)
  %4502 = bitcast i64* %DS_BASE.i1120 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4502)
  %4503 = bitcast i64* %CS_BASE.i1121 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4503)
  %4504 = bitcast %struct.State** %STATE.i1122 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4504)
  %4505 = bitcast %struct.Memory** %MEMORY.i1123 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4505)
  %4506 = bitcast i64** %_DR0.i1124 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4506)
  %4507 = bitcast i64** %_DR1.i1125 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4507)
  %4508 = bitcast i64** %_DR2.i1126 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4508)
  %4509 = bitcast i64** %_DR3.i1127 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4509)
  %4510 = bitcast i64** %_DR4.i1128 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4510)
  %4511 = bitcast i64** %_DR5.i1129 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4511)
  %4512 = bitcast i64** %_DR6.i1130 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4512)
  %4513 = bitcast i64** %_DR7.i1131 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4513)
  %4514 = bitcast i64** %CR0.i1132 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4514)
  %4515 = bitcast i64** %CR1.i1133 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4515)
  %4516 = bitcast i64** %CR2.i1134 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4516)
  %4517 = bitcast i64** %CR3.i1135 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4517)
  %4518 = bitcast i64** %CR4.i1136 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4518)
  %4519 = bitcast i64** %CR8.i1137 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4519)
  %4520 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4521 = load i64, i64* %RBP
  %4522 = sub i64 %4521, 248
  %4523 = load i64, i64* %PC
  %4524 = add i64 %4523, 8
  store i64 %4524, i64* %PC
  %4525 = inttoptr i64 %4522 to double*
  %4526 = load double, double* %4525
  %4527 = bitcast i8* %4520 to double*
  store double %4526, double* %4527, align 1, !tbaa !2432
  %4528 = getelementptr inbounds i8, i8* %4520, i64 8
  %4529 = bitcast i8* %4528 to double*
  store double 0.000000e+00, double* %4529, align 1, !tbaa !2432
  %4530 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4531 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4532 = bitcast %union.vec128_t* %XMM0 to i8*
  %4533 = load i64, i64* %PC
  %4534 = add i64 %4533, 4
  store i64 %4534, i64* %PC
  %4535 = bitcast i8* %4531 to double*
  %4536 = load double, double* %4535, align 1
  %4537 = getelementptr inbounds i8, i8* %4531, i64 8
  %4538 = bitcast i8* %4537 to i64*
  %4539 = load i64, i64* %4538, align 1
  %4540 = bitcast i8* %4532 to double*
  %4541 = load double, double* %4540, align 1
  %4542 = fmul double %4536, %4541
  %4543 = bitcast i8* %4530 to double*
  store double %4542, double* %4543, align 1, !tbaa !2432
  %4544 = getelementptr inbounds i8, i8* %4530, i64 8
  %4545 = bitcast i8* %4544 to i64*
  store i64 %4539, i64* %4545, align 1, !tbaa !2432
  %4546 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4547 = load i64, i64* %RBP
  %4548 = sub i64 %4547, 144
  %4549 = load i64, i64* %PC
  %4550 = add i64 %4549, 8
  store i64 %4550, i64* %PC
  %4551 = inttoptr i64 %4548 to double*
  %4552 = load double, double* %4551
  %4553 = bitcast i8* %4546 to double*
  store double %4552, double* %4553, align 1, !tbaa !2432
  %4554 = getelementptr inbounds i8, i8* %4546, i64 8
  %4555 = bitcast i8* %4554 to double*
  store double 0.000000e+00, double* %4555, align 1, !tbaa !2432
  %4556 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4557 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4558 = load i64, i64* %RBP
  %4559 = sub i64 %4558, 152
  %4560 = load i64, i64* %PC
  %4561 = add i64 %4560, 8
  store i64 %4561, i64* %PC
  %4562 = bitcast i8* %4557 to double*
  %4563 = load double, double* %4562, align 1
  %4564 = getelementptr inbounds i8, i8* %4557, i64 8
  %4565 = bitcast i8* %4564 to i64*
  %4566 = load i64, i64* %4565, align 1
  %4567 = inttoptr i64 %4559 to double*
  %4568 = load double, double* %4567
  %4569 = fadd double %4563, %4568
  %4570 = bitcast i8* %4556 to double*
  store double %4569, double* %4570, align 1, !tbaa !2432
  %4571 = getelementptr inbounds i8, i8* %4556, i64 8
  %4572 = bitcast i8* %4571 to i64*
  store i64 %4566, i64* %4572, align 1, !tbaa !2432
  %4573 = load i64, i64* %RBP
  %4574 = sub i64 %4573, 256
  %4575 = bitcast %union.vec128_t* %XMM1 to i8*
  %4576 = load i64, i64* %PC
  %4577 = add i64 %4576, 8
  store i64 %4577, i64* %PC
  %4578 = bitcast i8* %4575 to double*
  %4579 = load double, double* %4578, align 1
  %4580 = inttoptr i64 %4574 to double*
  store double %4579, double* %4580
  %4581 = load i64, i64* %PC
  %4582 = sub i64 %4581, 2498
  %4583 = load i64, i64* %PC
  %4584 = add i64 %4583, 5
  %4585 = load i64, i64* %PC
  %4586 = add i64 %4585, 5
  store i64 %4586, i64* %PC
  %4587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4588 = load i64, i64* %4587, align 8, !tbaa !2428
  %4589 = add i64 %4588, -8
  %4590 = inttoptr i64 %4589 to i64*
  store i64 %4584, i64* %4590
  store i64 %4589, i64* %4587, align 8, !tbaa !2428
  %4591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4582, i64* %4591, align 8, !tbaa !2428
  %4592 = load i64, i64* %PC
  %4593 = bitcast %struct.State** %state.i955 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4593)
  %4594 = bitcast i64* %curr_pc.i956 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4594)
  %4595 = bitcast %struct.Memory** %memory.i957 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4595)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i958)
  %4596 = bitcast i64* %SS_BASE.i959 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4596)
  %4597 = bitcast i64* %ES_BASE.i960 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4597)
  %4598 = bitcast i64* %DS_BASE.i961 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4598)
  %4599 = bitcast i64* %CS_BASE.i962 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4599)
  %4600 = bitcast %struct.State** %STATE.i963 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4600)
  %4601 = bitcast %struct.Memory** %MEMORY.i964 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4601)
  %4602 = bitcast i64** %_DR0.i965 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4602)
  %4603 = bitcast i64** %_DR1.i966 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4603)
  %4604 = bitcast i64** %_DR2.i967 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4604)
  %4605 = bitcast i64** %_DR3.i968 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4605)
  %4606 = bitcast i64** %_DR4.i969 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4606)
  %4607 = bitcast i64** %_DR5.i970 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4607)
  %4608 = bitcast i64** %_DR6.i971 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4608)
  %4609 = bitcast i64** %_DR7.i972 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4609)
  %4610 = bitcast i64** %CR0.i973 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4610)
  %4611 = bitcast i64** %CR1.i974 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4611)
  %4612 = bitcast i64** %CR2.i975 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4612)
  %4613 = bitcast i64** %CR3.i976 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4613)
  %4614 = bitcast i64** %CR4.i977 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4614)
  %4615 = bitcast i64** %CR8.i978 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4615)
  store %struct.State* %0, %struct.State** %state.i955, align 8, !noalias !2474
  store i64 %4592, i64* %curr_pc.i956, align 8, !noalias !2474
  store %struct.Memory* %4496, %struct.Memory** %memory.i957, align 8, !noalias !2474
  store i8 0, i8* %BRANCH_TAKEN.i958, align 1, !noalias !2474
  store i64 0, i64* %SS_BASE.i959, align 8, !noalias !2474
  store i64 0, i64* %ES_BASE.i960, align 8, !noalias !2474
  store i64 0, i64* %DS_BASE.i961, align 8, !noalias !2474
  store i64 0, i64* %CS_BASE.i962, align 8, !noalias !2474
  store %struct.State* %0, %struct.State** %STATE.i963, align 8, !noalias !2474
  store %struct.Memory* %4496, %struct.Memory** %MEMORY.i964, align 8, !noalias !2474
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4617 = getelementptr inbounds %struct.GPR, %struct.GPR* %4616, i32 0, i32 33
  %4618 = getelementptr inbounds %struct.Reg, %struct.Reg* %4617, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %4618 to i64*
  store i64 %4592, i64* %PC.i979, align 8, !alias.scope !2478, !noalias !2479
  %4619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4620 = getelementptr inbounds %struct.GPR, %struct.GPR* %4619, i32 0, i32 1
  %4621 = getelementptr inbounds %struct.Reg, %struct.Reg* %4620, i32 0, i32 0
  %4622 = bitcast %union.anon* %4621 to %struct.anon.2*
  %AH.i980 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4622, i32 0, i32 1
  %4623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4624 = getelementptr inbounds %struct.GPR, %struct.GPR* %4623, i32 0, i32 3
  %4625 = getelementptr inbounds %struct.Reg, %struct.Reg* %4624, i32 0, i32 0
  %4626 = bitcast %union.anon* %4625 to %struct.anon.2*
  %BH.i981 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4626, i32 0, i32 1
  %4627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4628 = getelementptr inbounds %struct.GPR, %struct.GPR* %4627, i32 0, i32 5
  %4629 = getelementptr inbounds %struct.Reg, %struct.Reg* %4628, i32 0, i32 0
  %4630 = bitcast %union.anon* %4629 to %struct.anon.2*
  %CH.i982 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4630, i32 0, i32 1
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4632 = getelementptr inbounds %struct.GPR, %struct.GPR* %4631, i32 0, i32 7
  %4633 = getelementptr inbounds %struct.Reg, %struct.Reg* %4632, i32 0, i32 0
  %4634 = bitcast %union.anon* %4633 to %struct.anon.2*
  %DH.i983 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4634, i32 0, i32 1
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4636 = getelementptr inbounds %struct.GPR, %struct.GPR* %4635, i32 0, i32 1
  %4637 = getelementptr inbounds %struct.Reg, %struct.Reg* %4636, i32 0, i32 0
  %4638 = bitcast %union.anon* %4637 to %struct.anon.2*
  %AL.i984 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4638, i32 0, i32 0
  %4639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4640 = getelementptr inbounds %struct.GPR, %struct.GPR* %4639, i32 0, i32 3
  %4641 = getelementptr inbounds %struct.Reg, %struct.Reg* %4640, i32 0, i32 0
  %4642 = bitcast %union.anon* %4641 to %struct.anon.2*
  %BL.i985 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4642, i32 0, i32 0
  %4643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4644 = getelementptr inbounds %struct.GPR, %struct.GPR* %4643, i32 0, i32 5
  %4645 = getelementptr inbounds %struct.Reg, %struct.Reg* %4644, i32 0, i32 0
  %4646 = bitcast %union.anon* %4645 to %struct.anon.2*
  %CL.i986 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4646, i32 0, i32 0
  %4647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4648 = getelementptr inbounds %struct.GPR, %struct.GPR* %4647, i32 0, i32 7
  %4649 = getelementptr inbounds %struct.Reg, %struct.Reg* %4648, i32 0, i32 0
  %4650 = bitcast %union.anon* %4649 to %struct.anon.2*
  %DL.i987 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4650, i32 0, i32 0
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4652 = getelementptr inbounds %struct.GPR, %struct.GPR* %4651, i32 0, i32 9
  %4653 = getelementptr inbounds %struct.Reg, %struct.Reg* %4652, i32 0, i32 0
  %4654 = bitcast %union.anon* %4653 to %struct.anon.2*
  %SIL.i988 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4654, i32 0, i32 0
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4656 = getelementptr inbounds %struct.GPR, %struct.GPR* %4655, i32 0, i32 11
  %4657 = getelementptr inbounds %struct.Reg, %struct.Reg* %4656, i32 0, i32 0
  %4658 = bitcast %union.anon* %4657 to %struct.anon.2*
  %DIL.i989 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4658, i32 0, i32 0
  %4659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4660 = getelementptr inbounds %struct.GPR, %struct.GPR* %4659, i32 0, i32 13
  %4661 = getelementptr inbounds %struct.Reg, %struct.Reg* %4660, i32 0, i32 0
  %4662 = bitcast %union.anon* %4661 to %struct.anon.2*
  %SPL.i990 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4662, i32 0, i32 0
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4664 = getelementptr inbounds %struct.GPR, %struct.GPR* %4663, i32 0, i32 15
  %4665 = getelementptr inbounds %struct.Reg, %struct.Reg* %4664, i32 0, i32 0
  %4666 = bitcast %union.anon* %4665 to %struct.anon.2*
  %BPL.i991 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4666, i32 0, i32 0
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4668 = getelementptr inbounds %struct.GPR, %struct.GPR* %4667, i32 0, i32 17
  %4669 = getelementptr inbounds %struct.Reg, %struct.Reg* %4668, i32 0, i32 0
  %4670 = bitcast %union.anon* %4669 to %struct.anon.2*
  %R8B.i992 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4670, i32 0, i32 0
  %4671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4672 = getelementptr inbounds %struct.GPR, %struct.GPR* %4671, i32 0, i32 19
  %4673 = getelementptr inbounds %struct.Reg, %struct.Reg* %4672, i32 0, i32 0
  %4674 = bitcast %union.anon* %4673 to %struct.anon.2*
  %R9B.i993 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4674, i32 0, i32 0
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4676 = getelementptr inbounds %struct.GPR, %struct.GPR* %4675, i32 0, i32 21
  %4677 = getelementptr inbounds %struct.Reg, %struct.Reg* %4676, i32 0, i32 0
  %4678 = bitcast %union.anon* %4677 to %struct.anon.2*
  %R10B.i994 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4678, i32 0, i32 0
  %4679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4680 = getelementptr inbounds %struct.GPR, %struct.GPR* %4679, i32 0, i32 23
  %4681 = getelementptr inbounds %struct.Reg, %struct.Reg* %4680, i32 0, i32 0
  %4682 = bitcast %union.anon* %4681 to %struct.anon.2*
  %R11B.i995 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4682, i32 0, i32 0
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4684 = getelementptr inbounds %struct.GPR, %struct.GPR* %4683, i32 0, i32 25
  %4685 = getelementptr inbounds %struct.Reg, %struct.Reg* %4684, i32 0, i32 0
  %4686 = bitcast %union.anon* %4685 to %struct.anon.2*
  %R12B.i996 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4686, i32 0, i32 0
  %4687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4688 = getelementptr inbounds %struct.GPR, %struct.GPR* %4687, i32 0, i32 27
  %4689 = getelementptr inbounds %struct.Reg, %struct.Reg* %4688, i32 0, i32 0
  %4690 = bitcast %union.anon* %4689 to %struct.anon.2*
  %R13B.i997 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4690, i32 0, i32 0
  %4691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4692 = getelementptr inbounds %struct.GPR, %struct.GPR* %4691, i32 0, i32 29
  %4693 = getelementptr inbounds %struct.Reg, %struct.Reg* %4692, i32 0, i32 0
  %4694 = bitcast %union.anon* %4693 to %struct.anon.2*
  %R14B.i998 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4694, i32 0, i32 0
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4696 = getelementptr inbounds %struct.GPR, %struct.GPR* %4695, i32 0, i32 31
  %4697 = getelementptr inbounds %struct.Reg, %struct.Reg* %4696, i32 0, i32 0
  %4698 = bitcast %union.anon* %4697 to %struct.anon.2*
  %R15B.i999 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4698, i32 0, i32 0
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4700 = getelementptr inbounds %struct.GPR, %struct.GPR* %4699, i32 0, i32 1
  %4701 = getelementptr inbounds %struct.Reg, %struct.Reg* %4700, i32 0, i32 0
  %AX.i1000 = bitcast %union.anon* %4701 to i16*
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4703 = getelementptr inbounds %struct.GPR, %struct.GPR* %4702, i32 0, i32 3
  %4704 = getelementptr inbounds %struct.Reg, %struct.Reg* %4703, i32 0, i32 0
  %BX.i1001 = bitcast %union.anon* %4704 to i16*
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4706 = getelementptr inbounds %struct.GPR, %struct.GPR* %4705, i32 0, i32 5
  %4707 = getelementptr inbounds %struct.Reg, %struct.Reg* %4706, i32 0, i32 0
  %CX.i1002 = bitcast %union.anon* %4707 to i16*
  %4708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4709 = getelementptr inbounds %struct.GPR, %struct.GPR* %4708, i32 0, i32 7
  %4710 = getelementptr inbounds %struct.Reg, %struct.Reg* %4709, i32 0, i32 0
  %DX.i1003 = bitcast %union.anon* %4710 to i16*
  %4711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4712 = getelementptr inbounds %struct.GPR, %struct.GPR* %4711, i32 0, i32 9
  %4713 = getelementptr inbounds %struct.Reg, %struct.Reg* %4712, i32 0, i32 0
  %SI.i1004 = bitcast %union.anon* %4713 to i16*
  %4714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4715 = getelementptr inbounds %struct.GPR, %struct.GPR* %4714, i32 0, i32 11
  %4716 = getelementptr inbounds %struct.Reg, %struct.Reg* %4715, i32 0, i32 0
  %DI.i1005 = bitcast %union.anon* %4716 to i16*
  %4717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4718 = getelementptr inbounds %struct.GPR, %struct.GPR* %4717, i32 0, i32 13
  %4719 = getelementptr inbounds %struct.Reg, %struct.Reg* %4718, i32 0, i32 0
  %SP.i1006 = bitcast %union.anon* %4719 to i16*
  %4720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4721 = getelementptr inbounds %struct.GPR, %struct.GPR* %4720, i32 0, i32 15
  %4722 = getelementptr inbounds %struct.Reg, %struct.Reg* %4721, i32 0, i32 0
  %BP.i1007 = bitcast %union.anon* %4722 to i16*
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4724 = getelementptr inbounds %struct.GPR, %struct.GPR* %4723, i32 0, i32 17
  %4725 = getelementptr inbounds %struct.Reg, %struct.Reg* %4724, i32 0, i32 0
  %R8W.i1008 = bitcast %union.anon* %4725 to i16*
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4727 = getelementptr inbounds %struct.GPR, %struct.GPR* %4726, i32 0, i32 19
  %4728 = getelementptr inbounds %struct.Reg, %struct.Reg* %4727, i32 0, i32 0
  %R9W.i1009 = bitcast %union.anon* %4728 to i16*
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4730 = getelementptr inbounds %struct.GPR, %struct.GPR* %4729, i32 0, i32 21
  %4731 = getelementptr inbounds %struct.Reg, %struct.Reg* %4730, i32 0, i32 0
  %R10W.i1010 = bitcast %union.anon* %4731 to i16*
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4733 = getelementptr inbounds %struct.GPR, %struct.GPR* %4732, i32 0, i32 23
  %4734 = getelementptr inbounds %struct.Reg, %struct.Reg* %4733, i32 0, i32 0
  %R11W.i1011 = bitcast %union.anon* %4734 to i16*
  %4735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4736 = getelementptr inbounds %struct.GPR, %struct.GPR* %4735, i32 0, i32 25
  %4737 = getelementptr inbounds %struct.Reg, %struct.Reg* %4736, i32 0, i32 0
  %R12W.i1012 = bitcast %union.anon* %4737 to i16*
  %4738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4739 = getelementptr inbounds %struct.GPR, %struct.GPR* %4738, i32 0, i32 27
  %4740 = getelementptr inbounds %struct.Reg, %struct.Reg* %4739, i32 0, i32 0
  %R13W.i1013 = bitcast %union.anon* %4740 to i16*
  %4741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4742 = getelementptr inbounds %struct.GPR, %struct.GPR* %4741, i32 0, i32 29
  %4743 = getelementptr inbounds %struct.Reg, %struct.Reg* %4742, i32 0, i32 0
  %R14W.i1014 = bitcast %union.anon* %4743 to i16*
  %4744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4745 = getelementptr inbounds %struct.GPR, %struct.GPR* %4744, i32 0, i32 31
  %4746 = getelementptr inbounds %struct.Reg, %struct.Reg* %4745, i32 0, i32 0
  %R15W.i1015 = bitcast %union.anon* %4746 to i16*
  %4747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4748 = getelementptr inbounds %struct.GPR, %struct.GPR* %4747, i32 0, i32 33
  %4749 = getelementptr inbounds %struct.Reg, %struct.Reg* %4748, i32 0, i32 0
  %IP.i1016 = bitcast %union.anon* %4749 to i16*
  %4750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4751 = getelementptr inbounds %struct.GPR, %struct.GPR* %4750, i32 0, i32 1
  %4752 = getelementptr inbounds %struct.Reg, %struct.Reg* %4751, i32 0, i32 0
  %EAX.i1017 = bitcast %union.anon* %4752 to i32*
  %4753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4754 = getelementptr inbounds %struct.GPR, %struct.GPR* %4753, i32 0, i32 3
  %4755 = getelementptr inbounds %struct.Reg, %struct.Reg* %4754, i32 0, i32 0
  %EBX.i1018 = bitcast %union.anon* %4755 to i32*
  %4756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4757 = getelementptr inbounds %struct.GPR, %struct.GPR* %4756, i32 0, i32 5
  %4758 = getelementptr inbounds %struct.Reg, %struct.Reg* %4757, i32 0, i32 0
  %ECX.i1019 = bitcast %union.anon* %4758 to i32*
  %4759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4760 = getelementptr inbounds %struct.GPR, %struct.GPR* %4759, i32 0, i32 7
  %4761 = getelementptr inbounds %struct.Reg, %struct.Reg* %4760, i32 0, i32 0
  %EDX.i1020 = bitcast %union.anon* %4761 to i32*
  %4762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4763 = getelementptr inbounds %struct.GPR, %struct.GPR* %4762, i32 0, i32 9
  %4764 = getelementptr inbounds %struct.Reg, %struct.Reg* %4763, i32 0, i32 0
  %ESI.i1021 = bitcast %union.anon* %4764 to i32*
  %4765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4766 = getelementptr inbounds %struct.GPR, %struct.GPR* %4765, i32 0, i32 11
  %4767 = getelementptr inbounds %struct.Reg, %struct.Reg* %4766, i32 0, i32 0
  %EDI.i1022 = bitcast %union.anon* %4767 to i32*
  %4768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4769 = getelementptr inbounds %struct.GPR, %struct.GPR* %4768, i32 0, i32 13
  %4770 = getelementptr inbounds %struct.Reg, %struct.Reg* %4769, i32 0, i32 0
  %ESP.i1023 = bitcast %union.anon* %4770 to i32*
  %4771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4772 = getelementptr inbounds %struct.GPR, %struct.GPR* %4771, i32 0, i32 15
  %4773 = getelementptr inbounds %struct.Reg, %struct.Reg* %4772, i32 0, i32 0
  %EBP.i1024 = bitcast %union.anon* %4773 to i32*
  %4774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4775 = getelementptr inbounds %struct.GPR, %struct.GPR* %4774, i32 0, i32 33
  %4776 = getelementptr inbounds %struct.Reg, %struct.Reg* %4775, i32 0, i32 0
  %EIP.i1025 = bitcast %union.anon* %4776 to i32*
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4778 = getelementptr inbounds %struct.GPR, %struct.GPR* %4777, i32 0, i32 17
  %4779 = getelementptr inbounds %struct.Reg, %struct.Reg* %4778, i32 0, i32 0
  %R8D.i1026 = bitcast %union.anon* %4779 to i32*
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4781 = getelementptr inbounds %struct.GPR, %struct.GPR* %4780, i32 0, i32 19
  %4782 = getelementptr inbounds %struct.Reg, %struct.Reg* %4781, i32 0, i32 0
  %R9D.i1027 = bitcast %union.anon* %4782 to i32*
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4784 = getelementptr inbounds %struct.GPR, %struct.GPR* %4783, i32 0, i32 21
  %4785 = getelementptr inbounds %struct.Reg, %struct.Reg* %4784, i32 0, i32 0
  %R10D.i1028 = bitcast %union.anon* %4785 to i32*
  %4786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4787 = getelementptr inbounds %struct.GPR, %struct.GPR* %4786, i32 0, i32 23
  %4788 = getelementptr inbounds %struct.Reg, %struct.Reg* %4787, i32 0, i32 0
  %R11D.i1029 = bitcast %union.anon* %4788 to i32*
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4790 = getelementptr inbounds %struct.GPR, %struct.GPR* %4789, i32 0, i32 25
  %4791 = getelementptr inbounds %struct.Reg, %struct.Reg* %4790, i32 0, i32 0
  %R12D.i1030 = bitcast %union.anon* %4791 to i32*
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4793 = getelementptr inbounds %struct.GPR, %struct.GPR* %4792, i32 0, i32 27
  %4794 = getelementptr inbounds %struct.Reg, %struct.Reg* %4793, i32 0, i32 0
  %R13D.i1031 = bitcast %union.anon* %4794 to i32*
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4796 = getelementptr inbounds %struct.GPR, %struct.GPR* %4795, i32 0, i32 29
  %4797 = getelementptr inbounds %struct.Reg, %struct.Reg* %4796, i32 0, i32 0
  %R14D.i1032 = bitcast %union.anon* %4797 to i32*
  %4798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4799 = getelementptr inbounds %struct.GPR, %struct.GPR* %4798, i32 0, i32 31
  %4800 = getelementptr inbounds %struct.Reg, %struct.Reg* %4799, i32 0, i32 0
  %R15D.i1033 = bitcast %union.anon* %4800 to i32*
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4802 = getelementptr inbounds %struct.GPR, %struct.GPR* %4801, i32 0, i32 1
  %4803 = getelementptr inbounds %struct.Reg, %struct.Reg* %4802, i32 0, i32 0
  %RAX.i1034 = bitcast %union.anon* %4803 to i64*
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4805 = getelementptr inbounds %struct.GPR, %struct.GPR* %4804, i32 0, i32 3
  %4806 = getelementptr inbounds %struct.Reg, %struct.Reg* %4805, i32 0, i32 0
  %RBX.i1035 = bitcast %union.anon* %4806 to i64*
  %4807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4808 = getelementptr inbounds %struct.GPR, %struct.GPR* %4807, i32 0, i32 5
  %4809 = getelementptr inbounds %struct.Reg, %struct.Reg* %4808, i32 0, i32 0
  %RCX.i1036 = bitcast %union.anon* %4809 to i64*
  %4810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4811 = getelementptr inbounds %struct.GPR, %struct.GPR* %4810, i32 0, i32 7
  %4812 = getelementptr inbounds %struct.Reg, %struct.Reg* %4811, i32 0, i32 0
  %RDX.i1037 = bitcast %union.anon* %4812 to i64*
  %4813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4814 = getelementptr inbounds %struct.GPR, %struct.GPR* %4813, i32 0, i32 9
  %4815 = getelementptr inbounds %struct.Reg, %struct.Reg* %4814, i32 0, i32 0
  %RSI.i1038 = bitcast %union.anon* %4815 to i64*
  %4816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4817 = getelementptr inbounds %struct.GPR, %struct.GPR* %4816, i32 0, i32 11
  %4818 = getelementptr inbounds %struct.Reg, %struct.Reg* %4817, i32 0, i32 0
  %RDI.i1039 = bitcast %union.anon* %4818 to i64*
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4820 = getelementptr inbounds %struct.GPR, %struct.GPR* %4819, i32 0, i32 13
  %4821 = getelementptr inbounds %struct.Reg, %struct.Reg* %4820, i32 0, i32 0
  %RSP.i1040 = bitcast %union.anon* %4821 to i64*
  %4822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4823 = getelementptr inbounds %struct.GPR, %struct.GPR* %4822, i32 0, i32 15
  %4824 = getelementptr inbounds %struct.Reg, %struct.Reg* %4823, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %4824 to i64*
  %4825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4826 = getelementptr inbounds %struct.GPR, %struct.GPR* %4825, i32 0, i32 17
  %4827 = getelementptr inbounds %struct.Reg, %struct.Reg* %4826, i32 0, i32 0
  %R8.i1042 = bitcast %union.anon* %4827 to i64*
  %4828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4829 = getelementptr inbounds %struct.GPR, %struct.GPR* %4828, i32 0, i32 19
  %4830 = getelementptr inbounds %struct.Reg, %struct.Reg* %4829, i32 0, i32 0
  %R9.i1043 = bitcast %union.anon* %4830 to i64*
  %4831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4832 = getelementptr inbounds %struct.GPR, %struct.GPR* %4831, i32 0, i32 21
  %4833 = getelementptr inbounds %struct.Reg, %struct.Reg* %4832, i32 0, i32 0
  %R10.i1044 = bitcast %union.anon* %4833 to i64*
  %4834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4835 = getelementptr inbounds %struct.GPR, %struct.GPR* %4834, i32 0, i32 23
  %4836 = getelementptr inbounds %struct.Reg, %struct.Reg* %4835, i32 0, i32 0
  %R11.i1045 = bitcast %union.anon* %4836 to i64*
  %4837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4838 = getelementptr inbounds %struct.GPR, %struct.GPR* %4837, i32 0, i32 25
  %4839 = getelementptr inbounds %struct.Reg, %struct.Reg* %4838, i32 0, i32 0
  %R12.i1046 = bitcast %union.anon* %4839 to i64*
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4841 = getelementptr inbounds %struct.GPR, %struct.GPR* %4840, i32 0, i32 27
  %4842 = getelementptr inbounds %struct.Reg, %struct.Reg* %4841, i32 0, i32 0
  %R13.i1047 = bitcast %union.anon* %4842 to i64*
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4844 = getelementptr inbounds %struct.GPR, %struct.GPR* %4843, i32 0, i32 29
  %4845 = getelementptr inbounds %struct.Reg, %struct.Reg* %4844, i32 0, i32 0
  %R14.i1048 = bitcast %union.anon* %4845 to i64*
  %4846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4847 = getelementptr inbounds %struct.GPR, %struct.GPR* %4846, i32 0, i32 31
  %4848 = getelementptr inbounds %struct.Reg, %struct.Reg* %4847, i32 0, i32 0
  %R15.i1049 = bitcast %union.anon* %4848 to i64*
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4850 = getelementptr inbounds %struct.GPR, %struct.GPR* %4849, i32 0, i32 33
  %4851 = getelementptr inbounds %struct.Reg, %struct.Reg* %4850, i32 0, i32 0
  %RIP.i1050 = bitcast %union.anon* %4851 to i64*
  %4852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4853 = getelementptr inbounds %struct.Segments, %struct.Segments* %4852, i32 0, i32 1
  %SS.i1051 = bitcast %union.SegmentSelector* %4853 to i16*
  %4854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4855 = getelementptr inbounds %struct.Segments, %struct.Segments* %4854, i32 0, i32 3
  %ES.i1052 = bitcast %union.SegmentSelector* %4855 to i16*
  %4856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4857 = getelementptr inbounds %struct.Segments, %struct.Segments* %4856, i32 0, i32 5
  %GS.i1053 = bitcast %union.SegmentSelector* %4857 to i16*
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4859 = getelementptr inbounds %struct.Segments, %struct.Segments* %4858, i32 0, i32 7
  %FS.i1054 = bitcast %union.SegmentSelector* %4859 to i16*
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4861 = getelementptr inbounds %struct.Segments, %struct.Segments* %4860, i32 0, i32 9
  %DS.i1055 = bitcast %union.SegmentSelector* %4861 to i16*
  %4862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4863 = getelementptr inbounds %struct.Segments, %struct.Segments* %4862, i32 0, i32 11
  %CS.i1056 = bitcast %union.SegmentSelector* %4863 to i16*
  %4864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4865 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4864, i32 0, i32 5
  %4866 = getelementptr inbounds %struct.Reg, %struct.Reg* %4865, i32 0, i32 0
  %GS_BASE.i1057 = bitcast %union.anon* %4866 to i64*
  %4867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4868 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4867, i32 0, i32 7
  %4869 = getelementptr inbounds %struct.Reg, %struct.Reg* %4868, i32 0, i32 0
  %FS_BASE.i1058 = bitcast %union.anon* %4869 to i64*
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4871 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4870, i64 0, i64 0
  %YMM0.i1059 = bitcast %union.VectorReg* %4871 to %"class.std::bitset"*
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4873 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4872, i64 0, i64 1
  %YMM1.i1060 = bitcast %union.VectorReg* %4873 to %"class.std::bitset"*
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4875 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4874, i64 0, i64 2
  %YMM2.i1061 = bitcast %union.VectorReg* %4875 to %"class.std::bitset"*
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4877 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4876, i64 0, i64 3
  %YMM3.i1062 = bitcast %union.VectorReg* %4877 to %"class.std::bitset"*
  %4878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4879 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4878, i64 0, i64 4
  %YMM4.i1063 = bitcast %union.VectorReg* %4879 to %"class.std::bitset"*
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4881 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4880, i64 0, i64 5
  %YMM5.i1064 = bitcast %union.VectorReg* %4881 to %"class.std::bitset"*
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4883 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4882, i64 0, i64 6
  %YMM6.i1065 = bitcast %union.VectorReg* %4883 to %"class.std::bitset"*
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4885 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4884, i64 0, i64 7
  %YMM7.i1066 = bitcast %union.VectorReg* %4885 to %"class.std::bitset"*
  %4886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4887 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4886, i64 0, i64 8
  %YMM8.i1067 = bitcast %union.VectorReg* %4887 to %"class.std::bitset"*
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4889 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4888, i64 0, i64 9
  %YMM9.i1068 = bitcast %union.VectorReg* %4889 to %"class.std::bitset"*
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4891 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4890, i64 0, i64 10
  %YMM10.i1069 = bitcast %union.VectorReg* %4891 to %"class.std::bitset"*
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4893 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4892, i64 0, i64 11
  %YMM11.i1070 = bitcast %union.VectorReg* %4893 to %"class.std::bitset"*
  %4894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4895 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4894, i64 0, i64 12
  %YMM12.i1071 = bitcast %union.VectorReg* %4895 to %"class.std::bitset"*
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4897 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4896, i64 0, i64 13
  %YMM13.i1072 = bitcast %union.VectorReg* %4897 to %"class.std::bitset"*
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4899 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4898, i64 0, i64 14
  %YMM14.i1073 = bitcast %union.VectorReg* %4899 to %"class.std::bitset"*
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4901 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4900, i64 0, i64 15
  %YMM15.i1074 = bitcast %union.VectorReg* %4901 to %"class.std::bitset"*
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4903 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4902, i64 0, i64 0
  %XMM0.i1075 = bitcast %union.VectorReg* %4903 to %union.vec128_t*
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4905 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4904, i64 0, i64 1
  %XMM1.i1076 = bitcast %union.VectorReg* %4905 to %union.vec128_t*
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4907 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4906, i64 0, i64 2
  %XMM2.i1077 = bitcast %union.VectorReg* %4907 to %union.vec128_t*
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4909 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4908, i64 0, i64 3
  %XMM3.i1078 = bitcast %union.VectorReg* %4909 to %union.vec128_t*
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4911 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4910, i64 0, i64 4
  %XMM4.i1079 = bitcast %union.VectorReg* %4911 to %union.vec128_t*
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4913 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4912, i64 0, i64 5
  %XMM5.i1080 = bitcast %union.VectorReg* %4913 to %union.vec128_t*
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4915 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4914, i64 0, i64 6
  %XMM6.i1081 = bitcast %union.VectorReg* %4915 to %union.vec128_t*
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4917 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4916, i64 0, i64 7
  %XMM7.i1082 = bitcast %union.VectorReg* %4917 to %union.vec128_t*
  %4918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4919 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4918, i64 0, i64 8
  %XMM8.i1083 = bitcast %union.VectorReg* %4919 to %union.vec128_t*
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4921 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4920, i64 0, i64 9
  %XMM9.i1084 = bitcast %union.VectorReg* %4921 to %union.vec128_t*
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4923 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4922, i64 0, i64 10
  %XMM10.i1085 = bitcast %union.VectorReg* %4923 to %union.vec128_t*
  %4924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4925 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4924, i64 0, i64 11
  %XMM11.i1086 = bitcast %union.VectorReg* %4925 to %union.vec128_t*
  %4926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4927 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4926, i64 0, i64 12
  %XMM12.i1087 = bitcast %union.VectorReg* %4927 to %union.vec128_t*
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4929 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4928, i64 0, i64 13
  %XMM13.i1088 = bitcast %union.VectorReg* %4929 to %union.vec128_t*
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4931 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4930, i64 0, i64 14
  %XMM14.i1089 = bitcast %union.VectorReg* %4931 to %union.vec128_t*
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4933 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4932, i64 0, i64 15
  %XMM15.i1090 = bitcast %union.VectorReg* %4933 to %union.vec128_t*
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4935 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4934, i32 0, i32 0
  %4936 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4935, i64 0, i64 0
  %ST0.i1091 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4936, i32 0, i32 1
  %4937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4938 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4937, i32 0, i32 0
  %4939 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4938, i64 0, i64 1
  %ST1.i1092 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4939, i32 0, i32 1
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4941 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4940, i32 0, i32 0
  %4942 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4941, i64 0, i64 2
  %ST2.i1093 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4942, i32 0, i32 1
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4944 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4943, i32 0, i32 0
  %4945 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4944, i64 0, i64 3
  %ST3.i1094 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4945, i32 0, i32 1
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4947 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4946, i32 0, i32 0
  %4948 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4947, i64 0, i64 4
  %ST4.i1095 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4948, i32 0, i32 1
  %4949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4950 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4949, i32 0, i32 0
  %4951 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4950, i64 0, i64 5
  %ST5.i1096 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4951, i32 0, i32 1
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4953 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4952, i32 0, i32 0
  %4954 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4953, i64 0, i64 6
  %ST6.i1097 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4954, i32 0, i32 1
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4956 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4955, i32 0, i32 0
  %4957 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4956, i64 0, i64 7
  %ST7.i1098 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4957, i32 0, i32 1
  %4958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4959 = getelementptr inbounds %struct.MMX, %struct.MMX* %4958, i32 0, i32 0
  %4960 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4959, i64 0, i64 0
  %4961 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4960, i32 0, i32 1
  %4962 = bitcast %union.vec64_t* %4961 to %struct.uint64v1_t*
  %4963 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4962, i32 0, i32 0
  %MM0.i1099 = getelementptr inbounds [1 x i64], [1 x i64]* %4963, i64 0, i64 0
  %4964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4965 = getelementptr inbounds %struct.MMX, %struct.MMX* %4964, i32 0, i32 0
  %4966 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4965, i64 0, i64 1
  %4967 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4966, i32 0, i32 1
  %4968 = bitcast %union.vec64_t* %4967 to %struct.uint64v1_t*
  %4969 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4968, i32 0, i32 0
  %MM1.i1100 = getelementptr inbounds [1 x i64], [1 x i64]* %4969, i64 0, i64 0
  %4970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4971 = getelementptr inbounds %struct.MMX, %struct.MMX* %4970, i32 0, i32 0
  %4972 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4971, i64 0, i64 2
  %4973 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4972, i32 0, i32 1
  %4974 = bitcast %union.vec64_t* %4973 to %struct.uint64v1_t*
  %4975 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4974, i32 0, i32 0
  %MM2.i1101 = getelementptr inbounds [1 x i64], [1 x i64]* %4975, i64 0, i64 0
  %4976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4977 = getelementptr inbounds %struct.MMX, %struct.MMX* %4976, i32 0, i32 0
  %4978 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4977, i64 0, i64 3
  %4979 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4978, i32 0, i32 1
  %4980 = bitcast %union.vec64_t* %4979 to %struct.uint64v1_t*
  %4981 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4980, i32 0, i32 0
  %MM3.i1102 = getelementptr inbounds [1 x i64], [1 x i64]* %4981, i64 0, i64 0
  %4982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4983 = getelementptr inbounds %struct.MMX, %struct.MMX* %4982, i32 0, i32 0
  %4984 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4983, i64 0, i64 4
  %4985 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4984, i32 0, i32 1
  %4986 = bitcast %union.vec64_t* %4985 to %struct.uint64v1_t*
  %4987 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4986, i32 0, i32 0
  %MM4.i1103 = getelementptr inbounds [1 x i64], [1 x i64]* %4987, i64 0, i64 0
  %4988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4989 = getelementptr inbounds %struct.MMX, %struct.MMX* %4988, i32 0, i32 0
  %4990 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4989, i64 0, i64 5
  %4991 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4990, i32 0, i32 1
  %4992 = bitcast %union.vec64_t* %4991 to %struct.uint64v1_t*
  %4993 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4992, i32 0, i32 0
  %MM5.i1104 = getelementptr inbounds [1 x i64], [1 x i64]* %4993, i64 0, i64 0
  %4994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4995 = getelementptr inbounds %struct.MMX, %struct.MMX* %4994, i32 0, i32 0
  %4996 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4995, i64 0, i64 6
  %4997 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4996, i32 0, i32 1
  %4998 = bitcast %union.vec64_t* %4997 to %struct.uint64v1_t*
  %4999 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4998, i32 0, i32 0
  %MM6.i1105 = getelementptr inbounds [1 x i64], [1 x i64]* %4999, i64 0, i64 0
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5001 = getelementptr inbounds %struct.MMX, %struct.MMX* %5000, i32 0, i32 0
  %5002 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5001, i64 0, i64 7
  %5003 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5002, i32 0, i32 1
  %5004 = bitcast %union.vec64_t* %5003 to %struct.uint64v1_t*
  %5005 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5004, i32 0, i32 0
  %MM7.i1106 = getelementptr inbounds [1 x i64], [1 x i64]* %5005, i64 0, i64 0
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i1107 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5006, i32 0, i32 5
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i1108 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5007, i32 0, i32 1
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i1109 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5008, i32 0, i32 11
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i1110 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5009, i32 0, i32 13
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i1111 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5010, i32 0, i32 3
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i1112 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5011, i32 0, i32 9
  %5012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i1113 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5012, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i965, align 8, !noalias !2474
  store i64* @DR1, i64** %_DR1.i966, align 8, !noalias !2474
  store i64* @DR2, i64** %_DR2.i967, align 8, !noalias !2474
  store i64* @DR3, i64** %_DR3.i968, align 8, !noalias !2474
  store i64* @DR4, i64** %_DR4.i969, align 8, !noalias !2474
  store i64* @DR5, i64** %_DR5.i970, align 8, !noalias !2474
  store i64* @DR6, i64** %_DR6.i971, align 8, !noalias !2474
  store i64* @DR7, i64** %_DR7.i972, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i973, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i974, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i975, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i976, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i977, align 8, !noalias !2474
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i978, align 8, !noalias !2474
  %5013 = bitcast %"class.std::bitset"* %YMM0.i1059 to double*
  %5014 = load double, double* %5013, !alias.scope !2478, !noalias !2479
  %5015 = load i64, i64* %RSP.i1040, !alias.scope !2478, !noalias !2479
  %5016 = load %struct.Memory*, %struct.Memory** %MEMORY.i964, !noalias !2474
  %5017 = inttoptr i64 %5015 to i64*
  %5018 = load i64, i64* %5017
  store i64 %5018, i64* %PC.i979, !alias.scope !2478, !noalias !2479
  %5019 = add i64 %5015, 8
  store i64 %5019, i64* %RSP.i1040, !alias.scope !2478, !noalias !2479
  %5020 = call double @cos(double %5014)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i1059, !alias.scope !2478, !noalias !2479
  %5021 = bitcast %"class.std::bitset"* %YMM0.i1059 to double*
  store double %5020, double* %5021, !alias.scope !2478, !noalias !2479
  %5022 = load %struct.Memory*, %struct.Memory** %MEMORY.i964, !noalias !2474
  %5023 = bitcast %struct.State** %state.i955 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5023)
  %5024 = bitcast i64* %curr_pc.i956 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5024)
  %5025 = bitcast %struct.Memory** %memory.i957 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5025)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i958)
  %5026 = bitcast i64* %SS_BASE.i959 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5026)
  %5027 = bitcast i64* %ES_BASE.i960 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5027)
  %5028 = bitcast i64* %DS_BASE.i961 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5028)
  %5029 = bitcast i64* %CS_BASE.i962 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5029)
  %5030 = bitcast %struct.State** %STATE.i963 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5030)
  %5031 = bitcast %struct.Memory** %MEMORY.i964 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5031)
  %5032 = bitcast i64** %_DR0.i965 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5032)
  %5033 = bitcast i64** %_DR1.i966 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5033)
  %5034 = bitcast i64** %_DR2.i967 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5034)
  %5035 = bitcast i64** %_DR3.i968 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5035)
  %5036 = bitcast i64** %_DR4.i969 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5036)
  %5037 = bitcast i64** %_DR5.i970 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5037)
  %5038 = bitcast i64** %_DR6.i971 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5038)
  %5039 = bitcast i64** %_DR7.i972 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5039)
  %5040 = bitcast i64** %CR0.i973 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5040)
  %5041 = bitcast i64** %CR1.i974 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5041)
  %5042 = bitcast i64** %CR2.i975 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5042)
  %5043 = bitcast i64** %CR3.i976 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5043)
  %5044 = bitcast i64** %CR4.i977 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5044)
  %5045 = bitcast i64** %CR8.i978 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5045)
  %5046 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5047 = load i64, i64* %RBP
  %5048 = sub i64 %5047, 144
  %5049 = load i64, i64* %PC
  %5050 = add i64 %5049, 8
  store i64 %5050, i64* %PC
  %5051 = inttoptr i64 %5048 to double*
  %5052 = load double, double* %5051
  %5053 = bitcast i8* %5046 to double*
  store double %5052, double* %5053, align 1, !tbaa !2432
  %5054 = getelementptr inbounds i8, i8* %5046, i64 8
  %5055 = bitcast i8* %5054 to double*
  store double 0.000000e+00, double* %5055, align 1, !tbaa !2432
  %5056 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5057 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5058 = load i64, i64* %RBP
  %5059 = sub i64 %5058, 152
  %5060 = load i64, i64* %PC
  %5061 = add i64 %5060, 8
  store i64 %5061, i64* %PC
  %5062 = bitcast i8* %5057 to double*
  %5063 = load double, double* %5062, align 1
  %5064 = getelementptr inbounds i8, i8* %5057, i64 8
  %5065 = bitcast i8* %5064 to i64*
  %5066 = load i64, i64* %5065, align 1
  %5067 = inttoptr i64 %5059 to double*
  %5068 = load double, double* %5067
  %5069 = fsub double %5063, %5068
  %5070 = bitcast i8* %5056 to double*
  store double %5069, double* %5070, align 1, !tbaa !2432
  %5071 = getelementptr inbounds i8, i8* %5056, i64 8
  %5072 = bitcast i8* %5071 to i64*
  store i64 %5066, i64* %5072, align 1, !tbaa !2432
  %5073 = load i64, i64* %RBP
  %5074 = sub i64 %5073, 264
  %5075 = bitcast %union.vec128_t* %XMM0 to i8*
  %5076 = load i64, i64* %PC
  %5077 = add i64 %5076, 8
  store i64 %5077, i64* %PC
  %5078 = bitcast i8* %5075 to double*
  %5079 = load double, double* %5078, align 1
  %5080 = inttoptr i64 %5074 to double*
  store double %5079, double* %5080
  %5081 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5082 = bitcast %union.vec128_t* %XMM1 to i8*
  %5083 = load i64, i64* %PC
  %5084 = add i64 %5083, 3
  store i64 %5084, i64* %PC
  %5085 = bitcast i8* %5082 to <2 x i32>*
  %5086 = load <2 x i32>, <2 x i32>* %5085, align 1
  %5087 = getelementptr inbounds i8, i8* %5082, i64 8
  %5088 = bitcast i8* %5087 to <2 x i32>*
  %5089 = load <2 x i32>, <2 x i32>* %5088, align 1
  %5090 = extractelement <2 x i32> %5086, i32 0
  %5091 = bitcast i8* %5081 to i32*
  store i32 %5090, i32* %5091, align 1, !tbaa !2460
  %5092 = extractelement <2 x i32> %5086, i32 1
  %5093 = getelementptr inbounds i8, i8* %5081, i64 4
  %5094 = bitcast i8* %5093 to i32*
  store i32 %5092, i32* %5094, align 1, !tbaa !2460
  %5095 = extractelement <2 x i32> %5089, i32 0
  %5096 = getelementptr inbounds i8, i8* %5081, i64 8
  %5097 = bitcast i8* %5096 to i32*
  store i32 %5095, i32* %5097, align 1, !tbaa !2460
  %5098 = extractelement <2 x i32> %5089, i32 1
  %5099 = getelementptr inbounds i8, i8* %5081, i64 12
  %5100 = bitcast i8* %5099 to i32*
  store i32 %5098, i32* %5100, align 1, !tbaa !2460
  %5101 = load i64, i64* %PC
  %5102 = sub i64 %5101, 2530
  %5103 = load i64, i64* %PC
  %5104 = add i64 %5103, 5
  %5105 = load i64, i64* %PC
  %5106 = add i64 %5105, 5
  store i64 %5106, i64* %PC
  %5107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5108 = load i64, i64* %5107, align 8, !tbaa !2428
  %5109 = add i64 %5108, -8
  %5110 = inttoptr i64 %5109 to i64*
  store i64 %5104, i64* %5110
  store i64 %5109, i64* %5107, align 8, !tbaa !2428
  %5111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5102, i64* %5111, align 8, !tbaa !2428
  %5112 = load i64, i64* %PC
  %5113 = bitcast %struct.State** %state.i796 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5113)
  %5114 = bitcast i64* %curr_pc.i797 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5114)
  %5115 = bitcast %struct.Memory** %memory.i798 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5115)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i799)
  %5116 = bitcast i64* %SS_BASE.i800 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5116)
  %5117 = bitcast i64* %ES_BASE.i801 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5117)
  %5118 = bitcast i64* %DS_BASE.i802 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5118)
  %5119 = bitcast i64* %CS_BASE.i803 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5119)
  %5120 = bitcast %struct.State** %STATE.i804 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5120)
  %5121 = bitcast %struct.Memory** %MEMORY.i805 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5121)
  %5122 = bitcast i64** %_DR0.i806 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5122)
  %5123 = bitcast i64** %_DR1.i807 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5123)
  %5124 = bitcast i64** %_DR2.i808 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5124)
  %5125 = bitcast i64** %_DR3.i809 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5125)
  %5126 = bitcast i64** %_DR4.i810 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5126)
  %5127 = bitcast i64** %_DR5.i811 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5127)
  %5128 = bitcast i64** %_DR6.i812 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5128)
  %5129 = bitcast i64** %_DR7.i813 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5129)
  %5130 = bitcast i64** %CR0.i814 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5130)
  %5131 = bitcast i64** %CR1.i815 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5131)
  %5132 = bitcast i64** %CR2.i816 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5132)
  %5133 = bitcast i64** %CR3.i817 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5133)
  %5134 = bitcast i64** %CR4.i818 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5134)
  %5135 = bitcast i64** %CR8.i819 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5135)
  store %struct.State* %0, %struct.State** %state.i796, align 8, !noalias !2480
  store i64 %5112, i64* %curr_pc.i797, align 8, !noalias !2480
  store %struct.Memory* %5022, %struct.Memory** %memory.i798, align 8, !noalias !2480
  store i8 0, i8* %BRANCH_TAKEN.i799, align 1, !noalias !2480
  store i64 0, i64* %SS_BASE.i800, align 8, !noalias !2480
  store i64 0, i64* %ES_BASE.i801, align 8, !noalias !2480
  store i64 0, i64* %DS_BASE.i802, align 8, !noalias !2480
  store i64 0, i64* %CS_BASE.i803, align 8, !noalias !2480
  store %struct.State* %0, %struct.State** %STATE.i804, align 8, !noalias !2480
  store %struct.Memory* %5022, %struct.Memory** %MEMORY.i805, align 8, !noalias !2480
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5137 = getelementptr inbounds %struct.GPR, %struct.GPR* %5136, i32 0, i32 33
  %5138 = getelementptr inbounds %struct.Reg, %struct.Reg* %5137, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %5138 to i64*
  store i64 %5112, i64* %PC.i820, align 8, !alias.scope !2484, !noalias !2485
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5140 = getelementptr inbounds %struct.GPR, %struct.GPR* %5139, i32 0, i32 1
  %5141 = getelementptr inbounds %struct.Reg, %struct.Reg* %5140, i32 0, i32 0
  %5142 = bitcast %union.anon* %5141 to %struct.anon.2*
  %AH.i821 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5142, i32 0, i32 1
  %5143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5144 = getelementptr inbounds %struct.GPR, %struct.GPR* %5143, i32 0, i32 3
  %5145 = getelementptr inbounds %struct.Reg, %struct.Reg* %5144, i32 0, i32 0
  %5146 = bitcast %union.anon* %5145 to %struct.anon.2*
  %BH.i822 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5146, i32 0, i32 1
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5148 = getelementptr inbounds %struct.GPR, %struct.GPR* %5147, i32 0, i32 5
  %5149 = getelementptr inbounds %struct.Reg, %struct.Reg* %5148, i32 0, i32 0
  %5150 = bitcast %union.anon* %5149 to %struct.anon.2*
  %CH.i823 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5150, i32 0, i32 1
  %5151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5152 = getelementptr inbounds %struct.GPR, %struct.GPR* %5151, i32 0, i32 7
  %5153 = getelementptr inbounds %struct.Reg, %struct.Reg* %5152, i32 0, i32 0
  %5154 = bitcast %union.anon* %5153 to %struct.anon.2*
  %DH.i824 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5154, i32 0, i32 1
  %5155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5156 = getelementptr inbounds %struct.GPR, %struct.GPR* %5155, i32 0, i32 1
  %5157 = getelementptr inbounds %struct.Reg, %struct.Reg* %5156, i32 0, i32 0
  %5158 = bitcast %union.anon* %5157 to %struct.anon.2*
  %AL.i825 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5158, i32 0, i32 0
  %5159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5160 = getelementptr inbounds %struct.GPR, %struct.GPR* %5159, i32 0, i32 3
  %5161 = getelementptr inbounds %struct.Reg, %struct.Reg* %5160, i32 0, i32 0
  %5162 = bitcast %union.anon* %5161 to %struct.anon.2*
  %BL.i826 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5162, i32 0, i32 0
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5164 = getelementptr inbounds %struct.GPR, %struct.GPR* %5163, i32 0, i32 5
  %5165 = getelementptr inbounds %struct.Reg, %struct.Reg* %5164, i32 0, i32 0
  %5166 = bitcast %union.anon* %5165 to %struct.anon.2*
  %CL.i827 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5166, i32 0, i32 0
  %5167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5168 = getelementptr inbounds %struct.GPR, %struct.GPR* %5167, i32 0, i32 7
  %5169 = getelementptr inbounds %struct.Reg, %struct.Reg* %5168, i32 0, i32 0
  %5170 = bitcast %union.anon* %5169 to %struct.anon.2*
  %DL.i828 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5170, i32 0, i32 0
  %5171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5172 = getelementptr inbounds %struct.GPR, %struct.GPR* %5171, i32 0, i32 9
  %5173 = getelementptr inbounds %struct.Reg, %struct.Reg* %5172, i32 0, i32 0
  %5174 = bitcast %union.anon* %5173 to %struct.anon.2*
  %SIL.i829 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5174, i32 0, i32 0
  %5175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5176 = getelementptr inbounds %struct.GPR, %struct.GPR* %5175, i32 0, i32 11
  %5177 = getelementptr inbounds %struct.Reg, %struct.Reg* %5176, i32 0, i32 0
  %5178 = bitcast %union.anon* %5177 to %struct.anon.2*
  %DIL.i830 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5178, i32 0, i32 0
  %5179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5180 = getelementptr inbounds %struct.GPR, %struct.GPR* %5179, i32 0, i32 13
  %5181 = getelementptr inbounds %struct.Reg, %struct.Reg* %5180, i32 0, i32 0
  %5182 = bitcast %union.anon* %5181 to %struct.anon.2*
  %SPL.i831 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5182, i32 0, i32 0
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5184 = getelementptr inbounds %struct.GPR, %struct.GPR* %5183, i32 0, i32 15
  %5185 = getelementptr inbounds %struct.Reg, %struct.Reg* %5184, i32 0, i32 0
  %5186 = bitcast %union.anon* %5185 to %struct.anon.2*
  %BPL.i832 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5186, i32 0, i32 0
  %5187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5188 = getelementptr inbounds %struct.GPR, %struct.GPR* %5187, i32 0, i32 17
  %5189 = getelementptr inbounds %struct.Reg, %struct.Reg* %5188, i32 0, i32 0
  %5190 = bitcast %union.anon* %5189 to %struct.anon.2*
  %R8B.i833 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5190, i32 0, i32 0
  %5191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5192 = getelementptr inbounds %struct.GPR, %struct.GPR* %5191, i32 0, i32 19
  %5193 = getelementptr inbounds %struct.Reg, %struct.Reg* %5192, i32 0, i32 0
  %5194 = bitcast %union.anon* %5193 to %struct.anon.2*
  %R9B.i834 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5194, i32 0, i32 0
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5196 = getelementptr inbounds %struct.GPR, %struct.GPR* %5195, i32 0, i32 21
  %5197 = getelementptr inbounds %struct.Reg, %struct.Reg* %5196, i32 0, i32 0
  %5198 = bitcast %union.anon* %5197 to %struct.anon.2*
  %R10B.i835 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5198, i32 0, i32 0
  %5199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5200 = getelementptr inbounds %struct.GPR, %struct.GPR* %5199, i32 0, i32 23
  %5201 = getelementptr inbounds %struct.Reg, %struct.Reg* %5200, i32 0, i32 0
  %5202 = bitcast %union.anon* %5201 to %struct.anon.2*
  %R11B.i836 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5202, i32 0, i32 0
  %5203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5204 = getelementptr inbounds %struct.GPR, %struct.GPR* %5203, i32 0, i32 25
  %5205 = getelementptr inbounds %struct.Reg, %struct.Reg* %5204, i32 0, i32 0
  %5206 = bitcast %union.anon* %5205 to %struct.anon.2*
  %R12B.i837 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5206, i32 0, i32 0
  %5207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5208 = getelementptr inbounds %struct.GPR, %struct.GPR* %5207, i32 0, i32 27
  %5209 = getelementptr inbounds %struct.Reg, %struct.Reg* %5208, i32 0, i32 0
  %5210 = bitcast %union.anon* %5209 to %struct.anon.2*
  %R13B.i838 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5210, i32 0, i32 0
  %5211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5212 = getelementptr inbounds %struct.GPR, %struct.GPR* %5211, i32 0, i32 29
  %5213 = getelementptr inbounds %struct.Reg, %struct.Reg* %5212, i32 0, i32 0
  %5214 = bitcast %union.anon* %5213 to %struct.anon.2*
  %R14B.i839 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5214, i32 0, i32 0
  %5215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5216 = getelementptr inbounds %struct.GPR, %struct.GPR* %5215, i32 0, i32 31
  %5217 = getelementptr inbounds %struct.Reg, %struct.Reg* %5216, i32 0, i32 0
  %5218 = bitcast %union.anon* %5217 to %struct.anon.2*
  %R15B.i840 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5218, i32 0, i32 0
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5220 = getelementptr inbounds %struct.GPR, %struct.GPR* %5219, i32 0, i32 1
  %5221 = getelementptr inbounds %struct.Reg, %struct.Reg* %5220, i32 0, i32 0
  %AX.i841 = bitcast %union.anon* %5221 to i16*
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5223 = getelementptr inbounds %struct.GPR, %struct.GPR* %5222, i32 0, i32 3
  %5224 = getelementptr inbounds %struct.Reg, %struct.Reg* %5223, i32 0, i32 0
  %BX.i842 = bitcast %union.anon* %5224 to i16*
  %5225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5226 = getelementptr inbounds %struct.GPR, %struct.GPR* %5225, i32 0, i32 5
  %5227 = getelementptr inbounds %struct.Reg, %struct.Reg* %5226, i32 0, i32 0
  %CX.i843 = bitcast %union.anon* %5227 to i16*
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5229 = getelementptr inbounds %struct.GPR, %struct.GPR* %5228, i32 0, i32 7
  %5230 = getelementptr inbounds %struct.Reg, %struct.Reg* %5229, i32 0, i32 0
  %DX.i844 = bitcast %union.anon* %5230 to i16*
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5232 = getelementptr inbounds %struct.GPR, %struct.GPR* %5231, i32 0, i32 9
  %5233 = getelementptr inbounds %struct.Reg, %struct.Reg* %5232, i32 0, i32 0
  %SI.i845 = bitcast %union.anon* %5233 to i16*
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5235 = getelementptr inbounds %struct.GPR, %struct.GPR* %5234, i32 0, i32 11
  %5236 = getelementptr inbounds %struct.Reg, %struct.Reg* %5235, i32 0, i32 0
  %DI.i846 = bitcast %union.anon* %5236 to i16*
  %5237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5238 = getelementptr inbounds %struct.GPR, %struct.GPR* %5237, i32 0, i32 13
  %5239 = getelementptr inbounds %struct.Reg, %struct.Reg* %5238, i32 0, i32 0
  %SP.i847 = bitcast %union.anon* %5239 to i16*
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5241 = getelementptr inbounds %struct.GPR, %struct.GPR* %5240, i32 0, i32 15
  %5242 = getelementptr inbounds %struct.Reg, %struct.Reg* %5241, i32 0, i32 0
  %BP.i848 = bitcast %union.anon* %5242 to i16*
  %5243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5244 = getelementptr inbounds %struct.GPR, %struct.GPR* %5243, i32 0, i32 17
  %5245 = getelementptr inbounds %struct.Reg, %struct.Reg* %5244, i32 0, i32 0
  %R8W.i849 = bitcast %union.anon* %5245 to i16*
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5247 = getelementptr inbounds %struct.GPR, %struct.GPR* %5246, i32 0, i32 19
  %5248 = getelementptr inbounds %struct.Reg, %struct.Reg* %5247, i32 0, i32 0
  %R9W.i850 = bitcast %union.anon* %5248 to i16*
  %5249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5250 = getelementptr inbounds %struct.GPR, %struct.GPR* %5249, i32 0, i32 21
  %5251 = getelementptr inbounds %struct.Reg, %struct.Reg* %5250, i32 0, i32 0
  %R10W.i851 = bitcast %union.anon* %5251 to i16*
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5253 = getelementptr inbounds %struct.GPR, %struct.GPR* %5252, i32 0, i32 23
  %5254 = getelementptr inbounds %struct.Reg, %struct.Reg* %5253, i32 0, i32 0
  %R11W.i852 = bitcast %union.anon* %5254 to i16*
  %5255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5256 = getelementptr inbounds %struct.GPR, %struct.GPR* %5255, i32 0, i32 25
  %5257 = getelementptr inbounds %struct.Reg, %struct.Reg* %5256, i32 0, i32 0
  %R12W.i853 = bitcast %union.anon* %5257 to i16*
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5259 = getelementptr inbounds %struct.GPR, %struct.GPR* %5258, i32 0, i32 27
  %5260 = getelementptr inbounds %struct.Reg, %struct.Reg* %5259, i32 0, i32 0
  %R13W.i854 = bitcast %union.anon* %5260 to i16*
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5262 = getelementptr inbounds %struct.GPR, %struct.GPR* %5261, i32 0, i32 29
  %5263 = getelementptr inbounds %struct.Reg, %struct.Reg* %5262, i32 0, i32 0
  %R14W.i855 = bitcast %union.anon* %5263 to i16*
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5265 = getelementptr inbounds %struct.GPR, %struct.GPR* %5264, i32 0, i32 31
  %5266 = getelementptr inbounds %struct.Reg, %struct.Reg* %5265, i32 0, i32 0
  %R15W.i856 = bitcast %union.anon* %5266 to i16*
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5268 = getelementptr inbounds %struct.GPR, %struct.GPR* %5267, i32 0, i32 33
  %5269 = getelementptr inbounds %struct.Reg, %struct.Reg* %5268, i32 0, i32 0
  %IP.i857 = bitcast %union.anon* %5269 to i16*
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5271 = getelementptr inbounds %struct.GPR, %struct.GPR* %5270, i32 0, i32 1
  %5272 = getelementptr inbounds %struct.Reg, %struct.Reg* %5271, i32 0, i32 0
  %EAX.i858 = bitcast %union.anon* %5272 to i32*
  %5273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5274 = getelementptr inbounds %struct.GPR, %struct.GPR* %5273, i32 0, i32 3
  %5275 = getelementptr inbounds %struct.Reg, %struct.Reg* %5274, i32 0, i32 0
  %EBX.i859 = bitcast %union.anon* %5275 to i32*
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5277 = getelementptr inbounds %struct.GPR, %struct.GPR* %5276, i32 0, i32 5
  %5278 = getelementptr inbounds %struct.Reg, %struct.Reg* %5277, i32 0, i32 0
  %ECX.i860 = bitcast %union.anon* %5278 to i32*
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5280 = getelementptr inbounds %struct.GPR, %struct.GPR* %5279, i32 0, i32 7
  %5281 = getelementptr inbounds %struct.Reg, %struct.Reg* %5280, i32 0, i32 0
  %EDX.i861 = bitcast %union.anon* %5281 to i32*
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5283 = getelementptr inbounds %struct.GPR, %struct.GPR* %5282, i32 0, i32 9
  %5284 = getelementptr inbounds %struct.Reg, %struct.Reg* %5283, i32 0, i32 0
  %ESI.i862 = bitcast %union.anon* %5284 to i32*
  %5285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5286 = getelementptr inbounds %struct.GPR, %struct.GPR* %5285, i32 0, i32 11
  %5287 = getelementptr inbounds %struct.Reg, %struct.Reg* %5286, i32 0, i32 0
  %EDI.i863 = bitcast %union.anon* %5287 to i32*
  %5288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5289 = getelementptr inbounds %struct.GPR, %struct.GPR* %5288, i32 0, i32 13
  %5290 = getelementptr inbounds %struct.Reg, %struct.Reg* %5289, i32 0, i32 0
  %ESP.i864 = bitcast %union.anon* %5290 to i32*
  %5291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5292 = getelementptr inbounds %struct.GPR, %struct.GPR* %5291, i32 0, i32 15
  %5293 = getelementptr inbounds %struct.Reg, %struct.Reg* %5292, i32 0, i32 0
  %EBP.i865 = bitcast %union.anon* %5293 to i32*
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5295 = getelementptr inbounds %struct.GPR, %struct.GPR* %5294, i32 0, i32 33
  %5296 = getelementptr inbounds %struct.Reg, %struct.Reg* %5295, i32 0, i32 0
  %EIP.i866 = bitcast %union.anon* %5296 to i32*
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5298 = getelementptr inbounds %struct.GPR, %struct.GPR* %5297, i32 0, i32 17
  %5299 = getelementptr inbounds %struct.Reg, %struct.Reg* %5298, i32 0, i32 0
  %R8D.i867 = bitcast %union.anon* %5299 to i32*
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5301 = getelementptr inbounds %struct.GPR, %struct.GPR* %5300, i32 0, i32 19
  %5302 = getelementptr inbounds %struct.Reg, %struct.Reg* %5301, i32 0, i32 0
  %R9D.i868 = bitcast %union.anon* %5302 to i32*
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5304 = getelementptr inbounds %struct.GPR, %struct.GPR* %5303, i32 0, i32 21
  %5305 = getelementptr inbounds %struct.Reg, %struct.Reg* %5304, i32 0, i32 0
  %R10D.i869 = bitcast %union.anon* %5305 to i32*
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5307 = getelementptr inbounds %struct.GPR, %struct.GPR* %5306, i32 0, i32 23
  %5308 = getelementptr inbounds %struct.Reg, %struct.Reg* %5307, i32 0, i32 0
  %R11D.i870 = bitcast %union.anon* %5308 to i32*
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5310 = getelementptr inbounds %struct.GPR, %struct.GPR* %5309, i32 0, i32 25
  %5311 = getelementptr inbounds %struct.Reg, %struct.Reg* %5310, i32 0, i32 0
  %R12D.i871 = bitcast %union.anon* %5311 to i32*
  %5312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5313 = getelementptr inbounds %struct.GPR, %struct.GPR* %5312, i32 0, i32 27
  %5314 = getelementptr inbounds %struct.Reg, %struct.Reg* %5313, i32 0, i32 0
  %R13D.i872 = bitcast %union.anon* %5314 to i32*
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5316 = getelementptr inbounds %struct.GPR, %struct.GPR* %5315, i32 0, i32 29
  %5317 = getelementptr inbounds %struct.Reg, %struct.Reg* %5316, i32 0, i32 0
  %R14D.i873 = bitcast %union.anon* %5317 to i32*
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5319 = getelementptr inbounds %struct.GPR, %struct.GPR* %5318, i32 0, i32 31
  %5320 = getelementptr inbounds %struct.Reg, %struct.Reg* %5319, i32 0, i32 0
  %R15D.i874 = bitcast %union.anon* %5320 to i32*
  %5321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5322 = getelementptr inbounds %struct.GPR, %struct.GPR* %5321, i32 0, i32 1
  %5323 = getelementptr inbounds %struct.Reg, %struct.Reg* %5322, i32 0, i32 0
  %RAX.i875 = bitcast %union.anon* %5323 to i64*
  %5324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5325 = getelementptr inbounds %struct.GPR, %struct.GPR* %5324, i32 0, i32 3
  %5326 = getelementptr inbounds %struct.Reg, %struct.Reg* %5325, i32 0, i32 0
  %RBX.i876 = bitcast %union.anon* %5326 to i64*
  %5327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5328 = getelementptr inbounds %struct.GPR, %struct.GPR* %5327, i32 0, i32 5
  %5329 = getelementptr inbounds %struct.Reg, %struct.Reg* %5328, i32 0, i32 0
  %RCX.i877 = bitcast %union.anon* %5329 to i64*
  %5330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5331 = getelementptr inbounds %struct.GPR, %struct.GPR* %5330, i32 0, i32 7
  %5332 = getelementptr inbounds %struct.Reg, %struct.Reg* %5331, i32 0, i32 0
  %RDX.i878 = bitcast %union.anon* %5332 to i64*
  %5333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5334 = getelementptr inbounds %struct.GPR, %struct.GPR* %5333, i32 0, i32 9
  %5335 = getelementptr inbounds %struct.Reg, %struct.Reg* %5334, i32 0, i32 0
  %RSI.i879 = bitcast %union.anon* %5335 to i64*
  %5336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5337 = getelementptr inbounds %struct.GPR, %struct.GPR* %5336, i32 0, i32 11
  %5338 = getelementptr inbounds %struct.Reg, %struct.Reg* %5337, i32 0, i32 0
  %RDI.i880 = bitcast %union.anon* %5338 to i64*
  %5339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5340 = getelementptr inbounds %struct.GPR, %struct.GPR* %5339, i32 0, i32 13
  %5341 = getelementptr inbounds %struct.Reg, %struct.Reg* %5340, i32 0, i32 0
  %RSP.i881 = bitcast %union.anon* %5341 to i64*
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5343 = getelementptr inbounds %struct.GPR, %struct.GPR* %5342, i32 0, i32 15
  %5344 = getelementptr inbounds %struct.Reg, %struct.Reg* %5343, i32 0, i32 0
  %RBP.i882 = bitcast %union.anon* %5344 to i64*
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5346 = getelementptr inbounds %struct.GPR, %struct.GPR* %5345, i32 0, i32 17
  %5347 = getelementptr inbounds %struct.Reg, %struct.Reg* %5346, i32 0, i32 0
  %R8.i883 = bitcast %union.anon* %5347 to i64*
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5349 = getelementptr inbounds %struct.GPR, %struct.GPR* %5348, i32 0, i32 19
  %5350 = getelementptr inbounds %struct.Reg, %struct.Reg* %5349, i32 0, i32 0
  %R9.i884 = bitcast %union.anon* %5350 to i64*
  %5351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5352 = getelementptr inbounds %struct.GPR, %struct.GPR* %5351, i32 0, i32 21
  %5353 = getelementptr inbounds %struct.Reg, %struct.Reg* %5352, i32 0, i32 0
  %R10.i885 = bitcast %union.anon* %5353 to i64*
  %5354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5355 = getelementptr inbounds %struct.GPR, %struct.GPR* %5354, i32 0, i32 23
  %5356 = getelementptr inbounds %struct.Reg, %struct.Reg* %5355, i32 0, i32 0
  %R11.i886 = bitcast %union.anon* %5356 to i64*
  %5357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5358 = getelementptr inbounds %struct.GPR, %struct.GPR* %5357, i32 0, i32 25
  %5359 = getelementptr inbounds %struct.Reg, %struct.Reg* %5358, i32 0, i32 0
  %R12.i887 = bitcast %union.anon* %5359 to i64*
  %5360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5361 = getelementptr inbounds %struct.GPR, %struct.GPR* %5360, i32 0, i32 27
  %5362 = getelementptr inbounds %struct.Reg, %struct.Reg* %5361, i32 0, i32 0
  %R13.i888 = bitcast %union.anon* %5362 to i64*
  %5363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5364 = getelementptr inbounds %struct.GPR, %struct.GPR* %5363, i32 0, i32 29
  %5365 = getelementptr inbounds %struct.Reg, %struct.Reg* %5364, i32 0, i32 0
  %R14.i889 = bitcast %union.anon* %5365 to i64*
  %5366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5367 = getelementptr inbounds %struct.GPR, %struct.GPR* %5366, i32 0, i32 31
  %5368 = getelementptr inbounds %struct.Reg, %struct.Reg* %5367, i32 0, i32 0
  %R15.i890 = bitcast %union.anon* %5368 to i64*
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5370 = getelementptr inbounds %struct.GPR, %struct.GPR* %5369, i32 0, i32 33
  %5371 = getelementptr inbounds %struct.Reg, %struct.Reg* %5370, i32 0, i32 0
  %RIP.i891 = bitcast %union.anon* %5371 to i64*
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5373 = getelementptr inbounds %struct.Segments, %struct.Segments* %5372, i32 0, i32 1
  %SS.i892 = bitcast %union.SegmentSelector* %5373 to i16*
  %5374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5375 = getelementptr inbounds %struct.Segments, %struct.Segments* %5374, i32 0, i32 3
  %ES.i893 = bitcast %union.SegmentSelector* %5375 to i16*
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5377 = getelementptr inbounds %struct.Segments, %struct.Segments* %5376, i32 0, i32 5
  %GS.i894 = bitcast %union.SegmentSelector* %5377 to i16*
  %5378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5379 = getelementptr inbounds %struct.Segments, %struct.Segments* %5378, i32 0, i32 7
  %FS.i895 = bitcast %union.SegmentSelector* %5379 to i16*
  %5380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5381 = getelementptr inbounds %struct.Segments, %struct.Segments* %5380, i32 0, i32 9
  %DS.i896 = bitcast %union.SegmentSelector* %5381 to i16*
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5383 = getelementptr inbounds %struct.Segments, %struct.Segments* %5382, i32 0, i32 11
  %CS.i897 = bitcast %union.SegmentSelector* %5383 to i16*
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5385 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5384, i32 0, i32 5
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %GS_BASE.i898 = bitcast %union.anon* %5386 to i64*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5388 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5387, i32 0, i32 7
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %FS_BASE.i899 = bitcast %union.anon* %5389 to i64*
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5391 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5390, i64 0, i64 0
  %YMM0.i900 = bitcast %union.VectorReg* %5391 to %"class.std::bitset"*
  %5392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5393 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5392, i64 0, i64 1
  %YMM1.i901 = bitcast %union.VectorReg* %5393 to %"class.std::bitset"*
  %5394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5395 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5394, i64 0, i64 2
  %YMM2.i902 = bitcast %union.VectorReg* %5395 to %"class.std::bitset"*
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5397 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5396, i64 0, i64 3
  %YMM3.i903 = bitcast %union.VectorReg* %5397 to %"class.std::bitset"*
  %5398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5399 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5398, i64 0, i64 4
  %YMM4.i904 = bitcast %union.VectorReg* %5399 to %"class.std::bitset"*
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5401 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5400, i64 0, i64 5
  %YMM5.i905 = bitcast %union.VectorReg* %5401 to %"class.std::bitset"*
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5403 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5402, i64 0, i64 6
  %YMM6.i906 = bitcast %union.VectorReg* %5403 to %"class.std::bitset"*
  %5404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5405 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5404, i64 0, i64 7
  %YMM7.i907 = bitcast %union.VectorReg* %5405 to %"class.std::bitset"*
  %5406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5407 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5406, i64 0, i64 8
  %YMM8.i908 = bitcast %union.VectorReg* %5407 to %"class.std::bitset"*
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5409 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5408, i64 0, i64 9
  %YMM9.i909 = bitcast %union.VectorReg* %5409 to %"class.std::bitset"*
  %5410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5411 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5410, i64 0, i64 10
  %YMM10.i910 = bitcast %union.VectorReg* %5411 to %"class.std::bitset"*
  %5412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5413 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5412, i64 0, i64 11
  %YMM11.i911 = bitcast %union.VectorReg* %5413 to %"class.std::bitset"*
  %5414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5415 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5414, i64 0, i64 12
  %YMM12.i912 = bitcast %union.VectorReg* %5415 to %"class.std::bitset"*
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5417 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5416, i64 0, i64 13
  %YMM13.i913 = bitcast %union.VectorReg* %5417 to %"class.std::bitset"*
  %5418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5419 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5418, i64 0, i64 14
  %YMM14.i914 = bitcast %union.VectorReg* %5419 to %"class.std::bitset"*
  %5420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5421 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5420, i64 0, i64 15
  %YMM15.i915 = bitcast %union.VectorReg* %5421 to %"class.std::bitset"*
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5423 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5422, i64 0, i64 0
  %XMM0.i916 = bitcast %union.VectorReg* %5423 to %union.vec128_t*
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5425 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5424, i64 0, i64 1
  %XMM1.i917 = bitcast %union.VectorReg* %5425 to %union.vec128_t*
  %5426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5427 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5426, i64 0, i64 2
  %XMM2.i918 = bitcast %union.VectorReg* %5427 to %union.vec128_t*
  %5428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5429 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5428, i64 0, i64 3
  %XMM3.i919 = bitcast %union.VectorReg* %5429 to %union.vec128_t*
  %5430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5431 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5430, i64 0, i64 4
  %XMM4.i920 = bitcast %union.VectorReg* %5431 to %union.vec128_t*
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5433 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5432, i64 0, i64 5
  %XMM5.i921 = bitcast %union.VectorReg* %5433 to %union.vec128_t*
  %5434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5435 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5434, i64 0, i64 6
  %XMM6.i922 = bitcast %union.VectorReg* %5435 to %union.vec128_t*
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5437 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5436, i64 0, i64 7
  %XMM7.i923 = bitcast %union.VectorReg* %5437 to %union.vec128_t*
  %5438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5439 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5438, i64 0, i64 8
  %XMM8.i924 = bitcast %union.VectorReg* %5439 to %union.vec128_t*
  %5440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5441 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5440, i64 0, i64 9
  %XMM9.i925 = bitcast %union.VectorReg* %5441 to %union.vec128_t*
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5443 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5442, i64 0, i64 10
  %XMM10.i926 = bitcast %union.VectorReg* %5443 to %union.vec128_t*
  %5444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5445 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5444, i64 0, i64 11
  %XMM11.i927 = bitcast %union.VectorReg* %5445 to %union.vec128_t*
  %5446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5447 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5446, i64 0, i64 12
  %XMM12.i928 = bitcast %union.VectorReg* %5447 to %union.vec128_t*
  %5448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5449 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5448, i64 0, i64 13
  %XMM13.i929 = bitcast %union.VectorReg* %5449 to %union.vec128_t*
  %5450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5451 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5450, i64 0, i64 14
  %XMM14.i930 = bitcast %union.VectorReg* %5451 to %union.vec128_t*
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5453 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5452, i64 0, i64 15
  %XMM15.i931 = bitcast %union.VectorReg* %5453 to %union.vec128_t*
  %5454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5455 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5454, i32 0, i32 0
  %5456 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5455, i64 0, i64 0
  %ST0.i932 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5456, i32 0, i32 1
  %5457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5458 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5457, i32 0, i32 0
  %5459 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5458, i64 0, i64 1
  %ST1.i933 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5459, i32 0, i32 1
  %5460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5461 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5460, i32 0, i32 0
  %5462 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5461, i64 0, i64 2
  %ST2.i934 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5462, i32 0, i32 1
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5464 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5463, i32 0, i32 0
  %5465 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5464, i64 0, i64 3
  %ST3.i935 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5465, i32 0, i32 1
  %5466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5467 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5466, i32 0, i32 0
  %5468 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5467, i64 0, i64 4
  %ST4.i936 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5468, i32 0, i32 1
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5470 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5469, i32 0, i32 0
  %5471 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5470, i64 0, i64 5
  %ST5.i937 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5471, i32 0, i32 1
  %5472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5473 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5472, i32 0, i32 0
  %5474 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5473, i64 0, i64 6
  %ST6.i938 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5474, i32 0, i32 1
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5476 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5475, i32 0, i32 0
  %5477 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5476, i64 0, i64 7
  %ST7.i939 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5477, i32 0, i32 1
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5479 = getelementptr inbounds %struct.MMX, %struct.MMX* %5478, i32 0, i32 0
  %5480 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5479, i64 0, i64 0
  %5481 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5480, i32 0, i32 1
  %5482 = bitcast %union.vec64_t* %5481 to %struct.uint64v1_t*
  %5483 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5482, i32 0, i32 0
  %MM0.i940 = getelementptr inbounds [1 x i64], [1 x i64]* %5483, i64 0, i64 0
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5485 = getelementptr inbounds %struct.MMX, %struct.MMX* %5484, i32 0, i32 0
  %5486 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5485, i64 0, i64 1
  %5487 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5486, i32 0, i32 1
  %5488 = bitcast %union.vec64_t* %5487 to %struct.uint64v1_t*
  %5489 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5488, i32 0, i32 0
  %MM1.i941 = getelementptr inbounds [1 x i64], [1 x i64]* %5489, i64 0, i64 0
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5491 = getelementptr inbounds %struct.MMX, %struct.MMX* %5490, i32 0, i32 0
  %5492 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5491, i64 0, i64 2
  %5493 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5492, i32 0, i32 1
  %5494 = bitcast %union.vec64_t* %5493 to %struct.uint64v1_t*
  %5495 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5494, i32 0, i32 0
  %MM2.i942 = getelementptr inbounds [1 x i64], [1 x i64]* %5495, i64 0, i64 0
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5497 = getelementptr inbounds %struct.MMX, %struct.MMX* %5496, i32 0, i32 0
  %5498 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5497, i64 0, i64 3
  %5499 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5498, i32 0, i32 1
  %5500 = bitcast %union.vec64_t* %5499 to %struct.uint64v1_t*
  %5501 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5500, i32 0, i32 0
  %MM3.i943 = getelementptr inbounds [1 x i64], [1 x i64]* %5501, i64 0, i64 0
  %5502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5503 = getelementptr inbounds %struct.MMX, %struct.MMX* %5502, i32 0, i32 0
  %5504 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5503, i64 0, i64 4
  %5505 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5504, i32 0, i32 1
  %5506 = bitcast %union.vec64_t* %5505 to %struct.uint64v1_t*
  %5507 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5506, i32 0, i32 0
  %MM4.i944 = getelementptr inbounds [1 x i64], [1 x i64]* %5507, i64 0, i64 0
  %5508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5509 = getelementptr inbounds %struct.MMX, %struct.MMX* %5508, i32 0, i32 0
  %5510 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5509, i64 0, i64 5
  %5511 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5510, i32 0, i32 1
  %5512 = bitcast %union.vec64_t* %5511 to %struct.uint64v1_t*
  %5513 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5512, i32 0, i32 0
  %MM5.i945 = getelementptr inbounds [1 x i64], [1 x i64]* %5513, i64 0, i64 0
  %5514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5515 = getelementptr inbounds %struct.MMX, %struct.MMX* %5514, i32 0, i32 0
  %5516 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5515, i64 0, i64 6
  %5517 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5516, i32 0, i32 1
  %5518 = bitcast %union.vec64_t* %5517 to %struct.uint64v1_t*
  %5519 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5518, i32 0, i32 0
  %MM6.i946 = getelementptr inbounds [1 x i64], [1 x i64]* %5519, i64 0, i64 0
  %5520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5521 = getelementptr inbounds %struct.MMX, %struct.MMX* %5520, i32 0, i32 0
  %5522 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5521, i64 0, i64 7
  %5523 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5522, i32 0, i32 1
  %5524 = bitcast %union.vec64_t* %5523 to %struct.uint64v1_t*
  %5525 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5524, i32 0, i32 0
  %MM7.i947 = getelementptr inbounds [1 x i64], [1 x i64]* %5525, i64 0, i64 0
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i948 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5526, i32 0, i32 5
  %5527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i949 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5527, i32 0, i32 1
  %5528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i950 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5528, i32 0, i32 11
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i951 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5529, i32 0, i32 13
  %5530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i952 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5530, i32 0, i32 3
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i953 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5531, i32 0, i32 9
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i954 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5532, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i806, align 8, !noalias !2480
  store i64* @DR1, i64** %_DR1.i807, align 8, !noalias !2480
  store i64* @DR2, i64** %_DR2.i808, align 8, !noalias !2480
  store i64* @DR3, i64** %_DR3.i809, align 8, !noalias !2480
  store i64* @DR4, i64** %_DR4.i810, align 8, !noalias !2480
  store i64* @DR5, i64** %_DR5.i811, align 8, !noalias !2480
  store i64* @DR6, i64** %_DR6.i812, align 8, !noalias !2480
  store i64* @DR7, i64** %_DR7.i813, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i814, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i815, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i816, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i817, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i818, align 8, !noalias !2480
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i819, align 8, !noalias !2480
  %5533 = bitcast %"class.std::bitset"* %YMM0.i900 to double*
  %5534 = load double, double* %5533, !alias.scope !2484, !noalias !2485
  %5535 = load i64, i64* %RSP.i881, !alias.scope !2484, !noalias !2485
  %5536 = load %struct.Memory*, %struct.Memory** %MEMORY.i805, !noalias !2480
  %5537 = inttoptr i64 %5535 to i64*
  %5538 = load i64, i64* %5537
  store i64 %5538, i64* %PC.i820, !alias.scope !2484, !noalias !2485
  %5539 = add i64 %5535, 8
  store i64 %5539, i64* %RSP.i881, !alias.scope !2484, !noalias !2485
  %5540 = call double @cos(double %5534)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i900, !alias.scope !2484, !noalias !2485
  %5541 = bitcast %"class.std::bitset"* %YMM0.i900 to double*
  store double %5540, double* %5541, !alias.scope !2484, !noalias !2485
  %5542 = load %struct.Memory*, %struct.Memory** %MEMORY.i805, !noalias !2480
  %5543 = bitcast %struct.State** %state.i796 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5543)
  %5544 = bitcast i64* %curr_pc.i797 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5544)
  %5545 = bitcast %struct.Memory** %memory.i798 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5545)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i799)
  %5546 = bitcast i64* %SS_BASE.i800 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5546)
  %5547 = bitcast i64* %ES_BASE.i801 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5547)
  %5548 = bitcast i64* %DS_BASE.i802 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5548)
  %5549 = bitcast i64* %CS_BASE.i803 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5549)
  %5550 = bitcast %struct.State** %STATE.i804 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5550)
  %5551 = bitcast %struct.Memory** %MEMORY.i805 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5551)
  %5552 = bitcast i64** %_DR0.i806 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5552)
  %5553 = bitcast i64** %_DR1.i807 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5553)
  %5554 = bitcast i64** %_DR2.i808 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5554)
  %5555 = bitcast i64** %_DR3.i809 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5555)
  %5556 = bitcast i64** %_DR4.i810 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5556)
  %5557 = bitcast i64** %_DR5.i811 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5557)
  %5558 = bitcast i64** %_DR6.i812 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5558)
  %5559 = bitcast i64** %_DR7.i813 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5559)
  %5560 = bitcast i64** %CR0.i814 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5560)
  %5561 = bitcast i64** %CR1.i815 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5561)
  %5562 = bitcast i64** %CR2.i816 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5562)
  %5563 = bitcast i64** %CR3.i817 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5563)
  %5564 = bitcast i64** %CR4.i818 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5564)
  %5565 = bitcast i64** %CR8.i819 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5565)
  %5566 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5567 = load i64, i64* %RBP
  %5568 = sub i64 %5567, 264
  %5569 = load i64, i64* %PC
  %5570 = add i64 %5569, 8
  store i64 %5570, i64* %PC
  %5571 = inttoptr i64 %5568 to double*
  %5572 = load double, double* %5571
  %5573 = bitcast i8* %5566 to double*
  store double %5572, double* %5573, align 1, !tbaa !2432
  %5574 = getelementptr inbounds i8, i8* %5566, i64 8
  %5575 = bitcast i8* %5574 to double*
  store double 0.000000e+00, double* %5575, align 1, !tbaa !2432
  %5576 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5577 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5578 = bitcast %union.vec128_t* %XMM0 to i8*
  %5579 = load i64, i64* %PC
  %5580 = add i64 %5579, 4
  store i64 %5580, i64* %PC
  %5581 = bitcast i8* %5577 to double*
  %5582 = load double, double* %5581, align 1
  %5583 = getelementptr inbounds i8, i8* %5577, i64 8
  %5584 = bitcast i8* %5583 to i64*
  %5585 = load i64, i64* %5584, align 1
  %5586 = bitcast i8* %5578 to double*
  %5587 = load double, double* %5586, align 1
  %5588 = fadd double %5582, %5587
  %5589 = bitcast i8* %5576 to double*
  store double %5588, double* %5589, align 1, !tbaa !2432
  %5590 = getelementptr inbounds i8, i8* %5576, i64 8
  %5591 = bitcast i8* %5590 to i64*
  store i64 %5585, i64* %5591, align 1, !tbaa !2432
  %5592 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5593 = load i64, i64* %RBP
  %5594 = sub i64 %5593, 224
  %5595 = load i64, i64* %PC
  %5596 = add i64 %5595, 8
  store i64 %5596, i64* %PC
  %5597 = inttoptr i64 %5594 to double*
  %5598 = load double, double* %5597
  %5599 = bitcast i8* %5592 to double*
  store double %5598, double* %5599, align 1, !tbaa !2432
  %5600 = getelementptr inbounds i8, i8* %5592, i64 8
  %5601 = bitcast i8* %5600 to double*
  store double 0.000000e+00, double* %5601, align 1, !tbaa !2432
  %5602 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5603 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5604 = bitcast %union.vec128_t* %XMM0 to i8*
  %5605 = load i64, i64* %PC
  %5606 = add i64 %5605, 4
  store i64 %5606, i64* %PC
  %5607 = bitcast i8* %5603 to double*
  %5608 = load double, double* %5607, align 1
  %5609 = getelementptr inbounds i8, i8* %5603, i64 8
  %5610 = bitcast i8* %5609 to i64*
  %5611 = load i64, i64* %5610, align 1
  %5612 = bitcast i8* %5604 to double*
  %5613 = load double, double* %5612, align 1
  %5614 = fsub double %5608, %5613
  %5615 = bitcast i8* %5602 to double*
  store double %5614, double* %5615, align 1, !tbaa !2432
  %5616 = getelementptr inbounds i8, i8* %5602, i64 8
  %5617 = bitcast i8* %5616 to i64*
  store i64 %5611, i64* %5617, align 1, !tbaa !2432
  %5618 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %5619 = load i64, i64* %RBP
  %5620 = sub i64 %5619, 256
  %5621 = load i64, i64* %PC
  %5622 = add i64 %5621, 8
  store i64 %5622, i64* %PC
  %5623 = inttoptr i64 %5620 to double*
  %5624 = load double, double* %5623
  %5625 = bitcast i8* %5618 to double*
  store double %5624, double* %5625, align 1, !tbaa !2432
  %5626 = getelementptr inbounds i8, i8* %5618, i64 8
  %5627 = bitcast i8* %5626 to double*
  store double 0.000000e+00, double* %5627, align 1, !tbaa !2432
  %5628 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %5629 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %5630 = bitcast %union.vec128_t* %XMM1 to i8*
  %5631 = load i64, i64* %PC
  %5632 = add i64 %5631, 4
  store i64 %5632, i64* %PC
  %5633 = bitcast i8* %5629 to double*
  %5634 = load double, double* %5633, align 1
  %5635 = getelementptr inbounds i8, i8* %5629, i64 8
  %5636 = bitcast i8* %5635 to i64*
  %5637 = load i64, i64* %5636, align 1
  %5638 = bitcast i8* %5630 to double*
  %5639 = load double, double* %5638, align 1
  %5640 = fdiv double %5634, %5639
  %5641 = bitcast i8* %5628 to double*
  store double %5640, double* %5641, align 1, !tbaa !2432
  %5642 = getelementptr inbounds i8, i8* %5628, i64 8
  %5643 = bitcast i8* %5642 to i64*
  store i64 %5637, i64* %5643, align 1, !tbaa !2432
  %5644 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5645 = bitcast %union.vec128_t* %XMM2 to i8*
  %5646 = load i64, i64* %PC
  %5647 = add i64 %5646, 3
  store i64 %5647, i64* %PC
  %5648 = bitcast i8* %5645 to <2 x i32>*
  %5649 = load <2 x i32>, <2 x i32>* %5648, align 1
  %5650 = getelementptr inbounds i8, i8* %5645, i64 8
  %5651 = bitcast i8* %5650 to <2 x i32>*
  %5652 = load <2 x i32>, <2 x i32>* %5651, align 1
  %5653 = extractelement <2 x i32> %5649, i32 0
  %5654 = bitcast i8* %5644 to i32*
  store i32 %5653, i32* %5654, align 1, !tbaa !2460
  %5655 = extractelement <2 x i32> %5649, i32 1
  %5656 = getelementptr inbounds i8, i8* %5644, i64 4
  %5657 = bitcast i8* %5656 to i32*
  store i32 %5655, i32* %5657, align 1, !tbaa !2460
  %5658 = extractelement <2 x i32> %5652, i32 0
  %5659 = getelementptr inbounds i8, i8* %5644, i64 8
  %5660 = bitcast i8* %5659 to i32*
  store i32 %5658, i32* %5660, align 1, !tbaa !2460
  %5661 = extractelement <2 x i32> %5652, i32 1
  %5662 = getelementptr inbounds i8, i8* %5644, i64 12
  %5663 = bitcast i8* %5662 to i32*
  store i32 %5661, i32* %5663, align 1, !tbaa !2460
  %5664 = load i64, i64* %PC
  %5665 = sub i64 %5664, 2622
  %5666 = load i64, i64* %PC
  %5667 = add i64 %5666, 5
  %5668 = load i64, i64* %PC
  %5669 = add i64 %5668, 5
  store i64 %5669, i64* %PC
  %5670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5671 = load i64, i64* %5670, align 8, !tbaa !2428
  %5672 = add i64 %5671, -8
  %5673 = inttoptr i64 %5672 to i64*
  store i64 %5667, i64* %5673
  store i64 %5672, i64* %5670, align 8, !tbaa !2428
  %5674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5665, i64* %5674, align 8, !tbaa !2428
  %5675 = load i64, i64* %PC
  %5676 = bitcast %struct.State** %state.i637 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5676)
  %5677 = bitcast i64* %curr_pc.i638 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5677)
  %5678 = bitcast %struct.Memory** %memory.i639 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5678)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i640)
  %5679 = bitcast i64* %SS_BASE.i641 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5679)
  %5680 = bitcast i64* %ES_BASE.i642 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5680)
  %5681 = bitcast i64* %DS_BASE.i643 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5681)
  %5682 = bitcast i64* %CS_BASE.i644 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5682)
  %5683 = bitcast %struct.State** %STATE.i645 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5683)
  %5684 = bitcast %struct.Memory** %MEMORY.i646 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5684)
  %5685 = bitcast i64** %_DR0.i647 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5685)
  %5686 = bitcast i64** %_DR1.i648 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5686)
  %5687 = bitcast i64** %_DR2.i649 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5687)
  %5688 = bitcast i64** %_DR3.i650 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5688)
  %5689 = bitcast i64** %_DR4.i651 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5689)
  %5690 = bitcast i64** %_DR5.i652 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5690)
  %5691 = bitcast i64** %_DR6.i653 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5691)
  %5692 = bitcast i64** %_DR7.i654 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5692)
  %5693 = bitcast i64** %CR0.i655 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5693)
  %5694 = bitcast i64** %CR1.i656 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5694)
  %5695 = bitcast i64** %CR2.i657 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5695)
  %5696 = bitcast i64** %CR3.i658 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5696)
  %5697 = bitcast i64** %CR4.i659 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5697)
  %5698 = bitcast i64** %CR8.i660 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5698)
  store %struct.State* %0, %struct.State** %state.i637, align 8, !noalias !2486
  store i64 %5675, i64* %curr_pc.i638, align 8, !noalias !2486
  store %struct.Memory* %5542, %struct.Memory** %memory.i639, align 8, !noalias !2486
  store i8 0, i8* %BRANCH_TAKEN.i640, align 1, !noalias !2486
  store i64 0, i64* %SS_BASE.i641, align 8, !noalias !2486
  store i64 0, i64* %ES_BASE.i642, align 8, !noalias !2486
  store i64 0, i64* %DS_BASE.i643, align 8, !noalias !2486
  store i64 0, i64* %CS_BASE.i644, align 8, !noalias !2486
  store %struct.State* %0, %struct.State** %STATE.i645, align 8, !noalias !2486
  store %struct.Memory* %5542, %struct.Memory** %MEMORY.i646, align 8, !noalias !2486
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5700 = getelementptr inbounds %struct.GPR, %struct.GPR* %5699, i32 0, i32 33
  %5701 = getelementptr inbounds %struct.Reg, %struct.Reg* %5700, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %5701 to i64*
  store i64 %5675, i64* %PC.i661, align 8, !alias.scope !2490, !noalias !2491
  %5702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5703 = getelementptr inbounds %struct.GPR, %struct.GPR* %5702, i32 0, i32 1
  %5704 = getelementptr inbounds %struct.Reg, %struct.Reg* %5703, i32 0, i32 0
  %5705 = bitcast %union.anon* %5704 to %struct.anon.2*
  %AH.i662 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5705, i32 0, i32 1
  %5706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5707 = getelementptr inbounds %struct.GPR, %struct.GPR* %5706, i32 0, i32 3
  %5708 = getelementptr inbounds %struct.Reg, %struct.Reg* %5707, i32 0, i32 0
  %5709 = bitcast %union.anon* %5708 to %struct.anon.2*
  %BH.i663 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5709, i32 0, i32 1
  %5710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5711 = getelementptr inbounds %struct.GPR, %struct.GPR* %5710, i32 0, i32 5
  %5712 = getelementptr inbounds %struct.Reg, %struct.Reg* %5711, i32 0, i32 0
  %5713 = bitcast %union.anon* %5712 to %struct.anon.2*
  %CH.i664 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5713, i32 0, i32 1
  %5714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5715 = getelementptr inbounds %struct.GPR, %struct.GPR* %5714, i32 0, i32 7
  %5716 = getelementptr inbounds %struct.Reg, %struct.Reg* %5715, i32 0, i32 0
  %5717 = bitcast %union.anon* %5716 to %struct.anon.2*
  %DH.i665 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5717, i32 0, i32 1
  %5718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5719 = getelementptr inbounds %struct.GPR, %struct.GPR* %5718, i32 0, i32 1
  %5720 = getelementptr inbounds %struct.Reg, %struct.Reg* %5719, i32 0, i32 0
  %5721 = bitcast %union.anon* %5720 to %struct.anon.2*
  %AL.i666 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5721, i32 0, i32 0
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5723 = getelementptr inbounds %struct.GPR, %struct.GPR* %5722, i32 0, i32 3
  %5724 = getelementptr inbounds %struct.Reg, %struct.Reg* %5723, i32 0, i32 0
  %5725 = bitcast %union.anon* %5724 to %struct.anon.2*
  %BL.i667 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5725, i32 0, i32 0
  %5726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5727 = getelementptr inbounds %struct.GPR, %struct.GPR* %5726, i32 0, i32 5
  %5728 = getelementptr inbounds %struct.Reg, %struct.Reg* %5727, i32 0, i32 0
  %5729 = bitcast %union.anon* %5728 to %struct.anon.2*
  %CL.i668 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5729, i32 0, i32 0
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5731 = getelementptr inbounds %struct.GPR, %struct.GPR* %5730, i32 0, i32 7
  %5732 = getelementptr inbounds %struct.Reg, %struct.Reg* %5731, i32 0, i32 0
  %5733 = bitcast %union.anon* %5732 to %struct.anon.2*
  %DL.i669 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5733, i32 0, i32 0
  %5734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5735 = getelementptr inbounds %struct.GPR, %struct.GPR* %5734, i32 0, i32 9
  %5736 = getelementptr inbounds %struct.Reg, %struct.Reg* %5735, i32 0, i32 0
  %5737 = bitcast %union.anon* %5736 to %struct.anon.2*
  %SIL.i670 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5737, i32 0, i32 0
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5739 = getelementptr inbounds %struct.GPR, %struct.GPR* %5738, i32 0, i32 11
  %5740 = getelementptr inbounds %struct.Reg, %struct.Reg* %5739, i32 0, i32 0
  %5741 = bitcast %union.anon* %5740 to %struct.anon.2*
  %DIL.i671 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5741, i32 0, i32 0
  %5742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5743 = getelementptr inbounds %struct.GPR, %struct.GPR* %5742, i32 0, i32 13
  %5744 = getelementptr inbounds %struct.Reg, %struct.Reg* %5743, i32 0, i32 0
  %5745 = bitcast %union.anon* %5744 to %struct.anon.2*
  %SPL.i672 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5745, i32 0, i32 0
  %5746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5747 = getelementptr inbounds %struct.GPR, %struct.GPR* %5746, i32 0, i32 15
  %5748 = getelementptr inbounds %struct.Reg, %struct.Reg* %5747, i32 0, i32 0
  %5749 = bitcast %union.anon* %5748 to %struct.anon.2*
  %BPL.i673 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5749, i32 0, i32 0
  %5750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5751 = getelementptr inbounds %struct.GPR, %struct.GPR* %5750, i32 0, i32 17
  %5752 = getelementptr inbounds %struct.Reg, %struct.Reg* %5751, i32 0, i32 0
  %5753 = bitcast %union.anon* %5752 to %struct.anon.2*
  %R8B.i674 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5753, i32 0, i32 0
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5755 = getelementptr inbounds %struct.GPR, %struct.GPR* %5754, i32 0, i32 19
  %5756 = getelementptr inbounds %struct.Reg, %struct.Reg* %5755, i32 0, i32 0
  %5757 = bitcast %union.anon* %5756 to %struct.anon.2*
  %R9B.i675 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5757, i32 0, i32 0
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5759 = getelementptr inbounds %struct.GPR, %struct.GPR* %5758, i32 0, i32 21
  %5760 = getelementptr inbounds %struct.Reg, %struct.Reg* %5759, i32 0, i32 0
  %5761 = bitcast %union.anon* %5760 to %struct.anon.2*
  %R10B.i676 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5761, i32 0, i32 0
  %5762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5763 = getelementptr inbounds %struct.GPR, %struct.GPR* %5762, i32 0, i32 23
  %5764 = getelementptr inbounds %struct.Reg, %struct.Reg* %5763, i32 0, i32 0
  %5765 = bitcast %union.anon* %5764 to %struct.anon.2*
  %R11B.i677 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5765, i32 0, i32 0
  %5766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5767 = getelementptr inbounds %struct.GPR, %struct.GPR* %5766, i32 0, i32 25
  %5768 = getelementptr inbounds %struct.Reg, %struct.Reg* %5767, i32 0, i32 0
  %5769 = bitcast %union.anon* %5768 to %struct.anon.2*
  %R12B.i678 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5769, i32 0, i32 0
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5771 = getelementptr inbounds %struct.GPR, %struct.GPR* %5770, i32 0, i32 27
  %5772 = getelementptr inbounds %struct.Reg, %struct.Reg* %5771, i32 0, i32 0
  %5773 = bitcast %union.anon* %5772 to %struct.anon.2*
  %R13B.i679 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5773, i32 0, i32 0
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5775 = getelementptr inbounds %struct.GPR, %struct.GPR* %5774, i32 0, i32 29
  %5776 = getelementptr inbounds %struct.Reg, %struct.Reg* %5775, i32 0, i32 0
  %5777 = bitcast %union.anon* %5776 to %struct.anon.2*
  %R14B.i680 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5777, i32 0, i32 0
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5779 = getelementptr inbounds %struct.GPR, %struct.GPR* %5778, i32 0, i32 31
  %5780 = getelementptr inbounds %struct.Reg, %struct.Reg* %5779, i32 0, i32 0
  %5781 = bitcast %union.anon* %5780 to %struct.anon.2*
  %R15B.i681 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5781, i32 0, i32 0
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5783 = getelementptr inbounds %struct.GPR, %struct.GPR* %5782, i32 0, i32 1
  %5784 = getelementptr inbounds %struct.Reg, %struct.Reg* %5783, i32 0, i32 0
  %AX.i682 = bitcast %union.anon* %5784 to i16*
  %5785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5786 = getelementptr inbounds %struct.GPR, %struct.GPR* %5785, i32 0, i32 3
  %5787 = getelementptr inbounds %struct.Reg, %struct.Reg* %5786, i32 0, i32 0
  %BX.i683 = bitcast %union.anon* %5787 to i16*
  %5788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5789 = getelementptr inbounds %struct.GPR, %struct.GPR* %5788, i32 0, i32 5
  %5790 = getelementptr inbounds %struct.Reg, %struct.Reg* %5789, i32 0, i32 0
  %CX.i684 = bitcast %union.anon* %5790 to i16*
  %5791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5792 = getelementptr inbounds %struct.GPR, %struct.GPR* %5791, i32 0, i32 7
  %5793 = getelementptr inbounds %struct.Reg, %struct.Reg* %5792, i32 0, i32 0
  %DX.i685 = bitcast %union.anon* %5793 to i16*
  %5794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5795 = getelementptr inbounds %struct.GPR, %struct.GPR* %5794, i32 0, i32 9
  %5796 = getelementptr inbounds %struct.Reg, %struct.Reg* %5795, i32 0, i32 0
  %SI.i686 = bitcast %union.anon* %5796 to i16*
  %5797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5798 = getelementptr inbounds %struct.GPR, %struct.GPR* %5797, i32 0, i32 11
  %5799 = getelementptr inbounds %struct.Reg, %struct.Reg* %5798, i32 0, i32 0
  %DI.i687 = bitcast %union.anon* %5799 to i16*
  %5800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5801 = getelementptr inbounds %struct.GPR, %struct.GPR* %5800, i32 0, i32 13
  %5802 = getelementptr inbounds %struct.Reg, %struct.Reg* %5801, i32 0, i32 0
  %SP.i688 = bitcast %union.anon* %5802 to i16*
  %5803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5804 = getelementptr inbounds %struct.GPR, %struct.GPR* %5803, i32 0, i32 15
  %5805 = getelementptr inbounds %struct.Reg, %struct.Reg* %5804, i32 0, i32 0
  %BP.i689 = bitcast %union.anon* %5805 to i16*
  %5806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5807 = getelementptr inbounds %struct.GPR, %struct.GPR* %5806, i32 0, i32 17
  %5808 = getelementptr inbounds %struct.Reg, %struct.Reg* %5807, i32 0, i32 0
  %R8W.i690 = bitcast %union.anon* %5808 to i16*
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5810 = getelementptr inbounds %struct.GPR, %struct.GPR* %5809, i32 0, i32 19
  %5811 = getelementptr inbounds %struct.Reg, %struct.Reg* %5810, i32 0, i32 0
  %R9W.i691 = bitcast %union.anon* %5811 to i16*
  %5812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5813 = getelementptr inbounds %struct.GPR, %struct.GPR* %5812, i32 0, i32 21
  %5814 = getelementptr inbounds %struct.Reg, %struct.Reg* %5813, i32 0, i32 0
  %R10W.i692 = bitcast %union.anon* %5814 to i16*
  %5815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5816 = getelementptr inbounds %struct.GPR, %struct.GPR* %5815, i32 0, i32 23
  %5817 = getelementptr inbounds %struct.Reg, %struct.Reg* %5816, i32 0, i32 0
  %R11W.i693 = bitcast %union.anon* %5817 to i16*
  %5818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5819 = getelementptr inbounds %struct.GPR, %struct.GPR* %5818, i32 0, i32 25
  %5820 = getelementptr inbounds %struct.Reg, %struct.Reg* %5819, i32 0, i32 0
  %R12W.i694 = bitcast %union.anon* %5820 to i16*
  %5821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5822 = getelementptr inbounds %struct.GPR, %struct.GPR* %5821, i32 0, i32 27
  %5823 = getelementptr inbounds %struct.Reg, %struct.Reg* %5822, i32 0, i32 0
  %R13W.i695 = bitcast %union.anon* %5823 to i16*
  %5824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5825 = getelementptr inbounds %struct.GPR, %struct.GPR* %5824, i32 0, i32 29
  %5826 = getelementptr inbounds %struct.Reg, %struct.Reg* %5825, i32 0, i32 0
  %R14W.i696 = bitcast %union.anon* %5826 to i16*
  %5827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5828 = getelementptr inbounds %struct.GPR, %struct.GPR* %5827, i32 0, i32 31
  %5829 = getelementptr inbounds %struct.Reg, %struct.Reg* %5828, i32 0, i32 0
  %R15W.i697 = bitcast %union.anon* %5829 to i16*
  %5830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5831 = getelementptr inbounds %struct.GPR, %struct.GPR* %5830, i32 0, i32 33
  %5832 = getelementptr inbounds %struct.Reg, %struct.Reg* %5831, i32 0, i32 0
  %IP.i698 = bitcast %union.anon* %5832 to i16*
  %5833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5834 = getelementptr inbounds %struct.GPR, %struct.GPR* %5833, i32 0, i32 1
  %5835 = getelementptr inbounds %struct.Reg, %struct.Reg* %5834, i32 0, i32 0
  %EAX.i699 = bitcast %union.anon* %5835 to i32*
  %5836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5837 = getelementptr inbounds %struct.GPR, %struct.GPR* %5836, i32 0, i32 3
  %5838 = getelementptr inbounds %struct.Reg, %struct.Reg* %5837, i32 0, i32 0
  %EBX.i700 = bitcast %union.anon* %5838 to i32*
  %5839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5840 = getelementptr inbounds %struct.GPR, %struct.GPR* %5839, i32 0, i32 5
  %5841 = getelementptr inbounds %struct.Reg, %struct.Reg* %5840, i32 0, i32 0
  %ECX.i701 = bitcast %union.anon* %5841 to i32*
  %5842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5843 = getelementptr inbounds %struct.GPR, %struct.GPR* %5842, i32 0, i32 7
  %5844 = getelementptr inbounds %struct.Reg, %struct.Reg* %5843, i32 0, i32 0
  %EDX.i702 = bitcast %union.anon* %5844 to i32*
  %5845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5846 = getelementptr inbounds %struct.GPR, %struct.GPR* %5845, i32 0, i32 9
  %5847 = getelementptr inbounds %struct.Reg, %struct.Reg* %5846, i32 0, i32 0
  %ESI.i703 = bitcast %union.anon* %5847 to i32*
  %5848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5849 = getelementptr inbounds %struct.GPR, %struct.GPR* %5848, i32 0, i32 11
  %5850 = getelementptr inbounds %struct.Reg, %struct.Reg* %5849, i32 0, i32 0
  %EDI.i704 = bitcast %union.anon* %5850 to i32*
  %5851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5852 = getelementptr inbounds %struct.GPR, %struct.GPR* %5851, i32 0, i32 13
  %5853 = getelementptr inbounds %struct.Reg, %struct.Reg* %5852, i32 0, i32 0
  %ESP.i705 = bitcast %union.anon* %5853 to i32*
  %5854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5855 = getelementptr inbounds %struct.GPR, %struct.GPR* %5854, i32 0, i32 15
  %5856 = getelementptr inbounds %struct.Reg, %struct.Reg* %5855, i32 0, i32 0
  %EBP.i706 = bitcast %union.anon* %5856 to i32*
  %5857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5858 = getelementptr inbounds %struct.GPR, %struct.GPR* %5857, i32 0, i32 33
  %5859 = getelementptr inbounds %struct.Reg, %struct.Reg* %5858, i32 0, i32 0
  %EIP.i707 = bitcast %union.anon* %5859 to i32*
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5861 = getelementptr inbounds %struct.GPR, %struct.GPR* %5860, i32 0, i32 17
  %5862 = getelementptr inbounds %struct.Reg, %struct.Reg* %5861, i32 0, i32 0
  %R8D.i708 = bitcast %union.anon* %5862 to i32*
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5864 = getelementptr inbounds %struct.GPR, %struct.GPR* %5863, i32 0, i32 19
  %5865 = getelementptr inbounds %struct.Reg, %struct.Reg* %5864, i32 0, i32 0
  %R9D.i709 = bitcast %union.anon* %5865 to i32*
  %5866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5867 = getelementptr inbounds %struct.GPR, %struct.GPR* %5866, i32 0, i32 21
  %5868 = getelementptr inbounds %struct.Reg, %struct.Reg* %5867, i32 0, i32 0
  %R10D.i710 = bitcast %union.anon* %5868 to i32*
  %5869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5870 = getelementptr inbounds %struct.GPR, %struct.GPR* %5869, i32 0, i32 23
  %5871 = getelementptr inbounds %struct.Reg, %struct.Reg* %5870, i32 0, i32 0
  %R11D.i711 = bitcast %union.anon* %5871 to i32*
  %5872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5873 = getelementptr inbounds %struct.GPR, %struct.GPR* %5872, i32 0, i32 25
  %5874 = getelementptr inbounds %struct.Reg, %struct.Reg* %5873, i32 0, i32 0
  %R12D.i712 = bitcast %union.anon* %5874 to i32*
  %5875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5876 = getelementptr inbounds %struct.GPR, %struct.GPR* %5875, i32 0, i32 27
  %5877 = getelementptr inbounds %struct.Reg, %struct.Reg* %5876, i32 0, i32 0
  %R13D.i713 = bitcast %union.anon* %5877 to i32*
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5879 = getelementptr inbounds %struct.GPR, %struct.GPR* %5878, i32 0, i32 29
  %5880 = getelementptr inbounds %struct.Reg, %struct.Reg* %5879, i32 0, i32 0
  %R14D.i714 = bitcast %union.anon* %5880 to i32*
  %5881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5882 = getelementptr inbounds %struct.GPR, %struct.GPR* %5881, i32 0, i32 31
  %5883 = getelementptr inbounds %struct.Reg, %struct.Reg* %5882, i32 0, i32 0
  %R15D.i715 = bitcast %union.anon* %5883 to i32*
  %5884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5885 = getelementptr inbounds %struct.GPR, %struct.GPR* %5884, i32 0, i32 1
  %5886 = getelementptr inbounds %struct.Reg, %struct.Reg* %5885, i32 0, i32 0
  %RAX.i716 = bitcast %union.anon* %5886 to i64*
  %5887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5888 = getelementptr inbounds %struct.GPR, %struct.GPR* %5887, i32 0, i32 3
  %5889 = getelementptr inbounds %struct.Reg, %struct.Reg* %5888, i32 0, i32 0
  %RBX.i717 = bitcast %union.anon* %5889 to i64*
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5891 = getelementptr inbounds %struct.GPR, %struct.GPR* %5890, i32 0, i32 5
  %5892 = getelementptr inbounds %struct.Reg, %struct.Reg* %5891, i32 0, i32 0
  %RCX.i718 = bitcast %union.anon* %5892 to i64*
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5894 = getelementptr inbounds %struct.GPR, %struct.GPR* %5893, i32 0, i32 7
  %5895 = getelementptr inbounds %struct.Reg, %struct.Reg* %5894, i32 0, i32 0
  %RDX.i719 = bitcast %union.anon* %5895 to i64*
  %5896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5897 = getelementptr inbounds %struct.GPR, %struct.GPR* %5896, i32 0, i32 9
  %5898 = getelementptr inbounds %struct.Reg, %struct.Reg* %5897, i32 0, i32 0
  %RSI.i720 = bitcast %union.anon* %5898 to i64*
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5900 = getelementptr inbounds %struct.GPR, %struct.GPR* %5899, i32 0, i32 11
  %5901 = getelementptr inbounds %struct.Reg, %struct.Reg* %5900, i32 0, i32 0
  %RDI.i721 = bitcast %union.anon* %5901 to i64*
  %5902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5903 = getelementptr inbounds %struct.GPR, %struct.GPR* %5902, i32 0, i32 13
  %5904 = getelementptr inbounds %struct.Reg, %struct.Reg* %5903, i32 0, i32 0
  %RSP.i722 = bitcast %union.anon* %5904 to i64*
  %5905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5906 = getelementptr inbounds %struct.GPR, %struct.GPR* %5905, i32 0, i32 15
  %5907 = getelementptr inbounds %struct.Reg, %struct.Reg* %5906, i32 0, i32 0
  %RBP.i723 = bitcast %union.anon* %5907 to i64*
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5909 = getelementptr inbounds %struct.GPR, %struct.GPR* %5908, i32 0, i32 17
  %5910 = getelementptr inbounds %struct.Reg, %struct.Reg* %5909, i32 0, i32 0
  %R8.i724 = bitcast %union.anon* %5910 to i64*
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5912 = getelementptr inbounds %struct.GPR, %struct.GPR* %5911, i32 0, i32 19
  %5913 = getelementptr inbounds %struct.Reg, %struct.Reg* %5912, i32 0, i32 0
  %R9.i725 = bitcast %union.anon* %5913 to i64*
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5915 = getelementptr inbounds %struct.GPR, %struct.GPR* %5914, i32 0, i32 21
  %5916 = getelementptr inbounds %struct.Reg, %struct.Reg* %5915, i32 0, i32 0
  %R10.i726 = bitcast %union.anon* %5916 to i64*
  %5917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5918 = getelementptr inbounds %struct.GPR, %struct.GPR* %5917, i32 0, i32 23
  %5919 = getelementptr inbounds %struct.Reg, %struct.Reg* %5918, i32 0, i32 0
  %R11.i727 = bitcast %union.anon* %5919 to i64*
  %5920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5921 = getelementptr inbounds %struct.GPR, %struct.GPR* %5920, i32 0, i32 25
  %5922 = getelementptr inbounds %struct.Reg, %struct.Reg* %5921, i32 0, i32 0
  %R12.i728 = bitcast %union.anon* %5922 to i64*
  %5923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5924 = getelementptr inbounds %struct.GPR, %struct.GPR* %5923, i32 0, i32 27
  %5925 = getelementptr inbounds %struct.Reg, %struct.Reg* %5924, i32 0, i32 0
  %R13.i729 = bitcast %union.anon* %5925 to i64*
  %5926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5927 = getelementptr inbounds %struct.GPR, %struct.GPR* %5926, i32 0, i32 29
  %5928 = getelementptr inbounds %struct.Reg, %struct.Reg* %5927, i32 0, i32 0
  %R14.i730 = bitcast %union.anon* %5928 to i64*
  %5929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5930 = getelementptr inbounds %struct.GPR, %struct.GPR* %5929, i32 0, i32 31
  %5931 = getelementptr inbounds %struct.Reg, %struct.Reg* %5930, i32 0, i32 0
  %R15.i731 = bitcast %union.anon* %5931 to i64*
  %5932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5933 = getelementptr inbounds %struct.GPR, %struct.GPR* %5932, i32 0, i32 33
  %5934 = getelementptr inbounds %struct.Reg, %struct.Reg* %5933, i32 0, i32 0
  %RIP.i732 = bitcast %union.anon* %5934 to i64*
  %5935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5936 = getelementptr inbounds %struct.Segments, %struct.Segments* %5935, i32 0, i32 1
  %SS.i733 = bitcast %union.SegmentSelector* %5936 to i16*
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5938 = getelementptr inbounds %struct.Segments, %struct.Segments* %5937, i32 0, i32 3
  %ES.i734 = bitcast %union.SegmentSelector* %5938 to i16*
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5940 = getelementptr inbounds %struct.Segments, %struct.Segments* %5939, i32 0, i32 5
  %GS.i735 = bitcast %union.SegmentSelector* %5940 to i16*
  %5941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5942 = getelementptr inbounds %struct.Segments, %struct.Segments* %5941, i32 0, i32 7
  %FS.i736 = bitcast %union.SegmentSelector* %5942 to i16*
  %5943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5944 = getelementptr inbounds %struct.Segments, %struct.Segments* %5943, i32 0, i32 9
  %DS.i737 = bitcast %union.SegmentSelector* %5944 to i16*
  %5945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5946 = getelementptr inbounds %struct.Segments, %struct.Segments* %5945, i32 0, i32 11
  %CS.i738 = bitcast %union.SegmentSelector* %5946 to i16*
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5948 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5947, i32 0, i32 5
  %5949 = getelementptr inbounds %struct.Reg, %struct.Reg* %5948, i32 0, i32 0
  %GS_BASE.i739 = bitcast %union.anon* %5949 to i64*
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5951 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5950, i32 0, i32 7
  %5952 = getelementptr inbounds %struct.Reg, %struct.Reg* %5951, i32 0, i32 0
  %FS_BASE.i740 = bitcast %union.anon* %5952 to i64*
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5954 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5953, i64 0, i64 0
  %YMM0.i741 = bitcast %union.VectorReg* %5954 to %"class.std::bitset"*
  %5955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5956 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5955, i64 0, i64 1
  %YMM1.i742 = bitcast %union.VectorReg* %5956 to %"class.std::bitset"*
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5958 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5957, i64 0, i64 2
  %YMM2.i743 = bitcast %union.VectorReg* %5958 to %"class.std::bitset"*
  %5959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5960 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5959, i64 0, i64 3
  %YMM3.i744 = bitcast %union.VectorReg* %5960 to %"class.std::bitset"*
  %5961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5962 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5961, i64 0, i64 4
  %YMM4.i745 = bitcast %union.VectorReg* %5962 to %"class.std::bitset"*
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5964 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5963, i64 0, i64 5
  %YMM5.i746 = bitcast %union.VectorReg* %5964 to %"class.std::bitset"*
  %5965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5966 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5965, i64 0, i64 6
  %YMM6.i747 = bitcast %union.VectorReg* %5966 to %"class.std::bitset"*
  %5967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5968 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5967, i64 0, i64 7
  %YMM7.i748 = bitcast %union.VectorReg* %5968 to %"class.std::bitset"*
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5970 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5969, i64 0, i64 8
  %YMM8.i749 = bitcast %union.VectorReg* %5970 to %"class.std::bitset"*
  %5971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5972 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5971, i64 0, i64 9
  %YMM9.i750 = bitcast %union.VectorReg* %5972 to %"class.std::bitset"*
  %5973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5974 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5973, i64 0, i64 10
  %YMM10.i751 = bitcast %union.VectorReg* %5974 to %"class.std::bitset"*
  %5975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5976 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5975, i64 0, i64 11
  %YMM11.i752 = bitcast %union.VectorReg* %5976 to %"class.std::bitset"*
  %5977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5978 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5977, i64 0, i64 12
  %YMM12.i753 = bitcast %union.VectorReg* %5978 to %"class.std::bitset"*
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5980 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5979, i64 0, i64 13
  %YMM13.i754 = bitcast %union.VectorReg* %5980 to %"class.std::bitset"*
  %5981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5982 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5981, i64 0, i64 14
  %YMM14.i755 = bitcast %union.VectorReg* %5982 to %"class.std::bitset"*
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5984 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5983, i64 0, i64 15
  %YMM15.i756 = bitcast %union.VectorReg* %5984 to %"class.std::bitset"*
  %5985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5986 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5985, i64 0, i64 0
  %XMM0.i757 = bitcast %union.VectorReg* %5986 to %union.vec128_t*
  %5987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5988 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5987, i64 0, i64 1
  %XMM1.i758 = bitcast %union.VectorReg* %5988 to %union.vec128_t*
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5990 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5989, i64 0, i64 2
  %XMM2.i759 = bitcast %union.VectorReg* %5990 to %union.vec128_t*
  %5991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5992 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5991, i64 0, i64 3
  %XMM3.i760 = bitcast %union.VectorReg* %5992 to %union.vec128_t*
  %5993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5994 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5993, i64 0, i64 4
  %XMM4.i761 = bitcast %union.VectorReg* %5994 to %union.vec128_t*
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5996 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5995, i64 0, i64 5
  %XMM5.i762 = bitcast %union.VectorReg* %5996 to %union.vec128_t*
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5998 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5997, i64 0, i64 6
  %XMM6.i763 = bitcast %union.VectorReg* %5998 to %union.vec128_t*
  %5999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6000 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5999, i64 0, i64 7
  %XMM7.i764 = bitcast %union.VectorReg* %6000 to %union.vec128_t*
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6002 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6001, i64 0, i64 8
  %XMM8.i765 = bitcast %union.VectorReg* %6002 to %union.vec128_t*
  %6003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6004 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6003, i64 0, i64 9
  %XMM9.i766 = bitcast %union.VectorReg* %6004 to %union.vec128_t*
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6006 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6005, i64 0, i64 10
  %XMM10.i767 = bitcast %union.VectorReg* %6006 to %union.vec128_t*
  %6007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6008 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6007, i64 0, i64 11
  %XMM11.i768 = bitcast %union.VectorReg* %6008 to %union.vec128_t*
  %6009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6010 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6009, i64 0, i64 12
  %XMM12.i769 = bitcast %union.VectorReg* %6010 to %union.vec128_t*
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6012 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6011, i64 0, i64 13
  %XMM13.i770 = bitcast %union.VectorReg* %6012 to %union.vec128_t*
  %6013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6014 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6013, i64 0, i64 14
  %XMM14.i771 = bitcast %union.VectorReg* %6014 to %union.vec128_t*
  %6015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6016 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6015, i64 0, i64 15
  %XMM15.i772 = bitcast %union.VectorReg* %6016 to %union.vec128_t*
  %6017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6018 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6017, i32 0, i32 0
  %6019 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6018, i64 0, i64 0
  %ST0.i773 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6019, i32 0, i32 1
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6021 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6020, i32 0, i32 0
  %6022 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6021, i64 0, i64 1
  %ST1.i774 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6022, i32 0, i32 1
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6024 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6023, i32 0, i32 0
  %6025 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6024, i64 0, i64 2
  %ST2.i775 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6025, i32 0, i32 1
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6027 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6026, i32 0, i32 0
  %6028 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6027, i64 0, i64 3
  %ST3.i776 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6028, i32 0, i32 1
  %6029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6030 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6029, i32 0, i32 0
  %6031 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6030, i64 0, i64 4
  %ST4.i777 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6031, i32 0, i32 1
  %6032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6033 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6032, i32 0, i32 0
  %6034 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6033, i64 0, i64 5
  %ST5.i778 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6034, i32 0, i32 1
  %6035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6036 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6035, i32 0, i32 0
  %6037 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6036, i64 0, i64 6
  %ST6.i779 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6037, i32 0, i32 1
  %6038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6039 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6038, i32 0, i32 0
  %6040 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6039, i64 0, i64 7
  %ST7.i780 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6040, i32 0, i32 1
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6042 = getelementptr inbounds %struct.MMX, %struct.MMX* %6041, i32 0, i32 0
  %6043 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6042, i64 0, i64 0
  %6044 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6043, i32 0, i32 1
  %6045 = bitcast %union.vec64_t* %6044 to %struct.uint64v1_t*
  %6046 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6045, i32 0, i32 0
  %MM0.i781 = getelementptr inbounds [1 x i64], [1 x i64]* %6046, i64 0, i64 0
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6048 = getelementptr inbounds %struct.MMX, %struct.MMX* %6047, i32 0, i32 0
  %6049 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6048, i64 0, i64 1
  %6050 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6049, i32 0, i32 1
  %6051 = bitcast %union.vec64_t* %6050 to %struct.uint64v1_t*
  %6052 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6051, i32 0, i32 0
  %MM1.i782 = getelementptr inbounds [1 x i64], [1 x i64]* %6052, i64 0, i64 0
  %6053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6054 = getelementptr inbounds %struct.MMX, %struct.MMX* %6053, i32 0, i32 0
  %6055 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6054, i64 0, i64 2
  %6056 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6055, i32 0, i32 1
  %6057 = bitcast %union.vec64_t* %6056 to %struct.uint64v1_t*
  %6058 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6057, i32 0, i32 0
  %MM2.i783 = getelementptr inbounds [1 x i64], [1 x i64]* %6058, i64 0, i64 0
  %6059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6060 = getelementptr inbounds %struct.MMX, %struct.MMX* %6059, i32 0, i32 0
  %6061 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6060, i64 0, i64 3
  %6062 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6061, i32 0, i32 1
  %6063 = bitcast %union.vec64_t* %6062 to %struct.uint64v1_t*
  %6064 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6063, i32 0, i32 0
  %MM3.i784 = getelementptr inbounds [1 x i64], [1 x i64]* %6064, i64 0, i64 0
  %6065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6066 = getelementptr inbounds %struct.MMX, %struct.MMX* %6065, i32 0, i32 0
  %6067 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6066, i64 0, i64 4
  %6068 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6067, i32 0, i32 1
  %6069 = bitcast %union.vec64_t* %6068 to %struct.uint64v1_t*
  %6070 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6069, i32 0, i32 0
  %MM4.i785 = getelementptr inbounds [1 x i64], [1 x i64]* %6070, i64 0, i64 0
  %6071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6072 = getelementptr inbounds %struct.MMX, %struct.MMX* %6071, i32 0, i32 0
  %6073 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6072, i64 0, i64 5
  %6074 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6073, i32 0, i32 1
  %6075 = bitcast %union.vec64_t* %6074 to %struct.uint64v1_t*
  %6076 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6075, i32 0, i32 0
  %MM5.i786 = getelementptr inbounds [1 x i64], [1 x i64]* %6076, i64 0, i64 0
  %6077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6078 = getelementptr inbounds %struct.MMX, %struct.MMX* %6077, i32 0, i32 0
  %6079 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6078, i64 0, i64 6
  %6080 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6079, i32 0, i32 1
  %6081 = bitcast %union.vec64_t* %6080 to %struct.uint64v1_t*
  %6082 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6081, i32 0, i32 0
  %MM6.i787 = getelementptr inbounds [1 x i64], [1 x i64]* %6082, i64 0, i64 0
  %6083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6084 = getelementptr inbounds %struct.MMX, %struct.MMX* %6083, i32 0, i32 0
  %6085 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6084, i64 0, i64 7
  %6086 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6085, i32 0, i32 1
  %6087 = bitcast %union.vec64_t* %6086 to %struct.uint64v1_t*
  %6088 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6087, i32 0, i32 0
  %MM7.i788 = getelementptr inbounds [1 x i64], [1 x i64]* %6088, i64 0, i64 0
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i789 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6089, i32 0, i32 5
  %6090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i790 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6090, i32 0, i32 1
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i791 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6091, i32 0, i32 11
  %6092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i792 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6092, i32 0, i32 13
  %6093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i793 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6093, i32 0, i32 3
  %6094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i794 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6094, i32 0, i32 9
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i795 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6095, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i647, align 8, !noalias !2486
  store i64* @DR1, i64** %_DR1.i648, align 8, !noalias !2486
  store i64* @DR2, i64** %_DR2.i649, align 8, !noalias !2486
  store i64* @DR3, i64** %_DR3.i650, align 8, !noalias !2486
  store i64* @DR4, i64** %_DR4.i651, align 8, !noalias !2486
  store i64* @DR5, i64** %_DR5.i652, align 8, !noalias !2486
  store i64* @DR6, i64** %_DR6.i653, align 8, !noalias !2486
  store i64* @DR7, i64** %_DR7.i654, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i655, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i656, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i657, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i658, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i659, align 8, !noalias !2486
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i660, align 8, !noalias !2486
  %6096 = bitcast %"class.std::bitset"* %YMM0.i741 to double*
  %6097 = load double, double* %6096, !alias.scope !2490, !noalias !2491
  %6098 = load i64, i64* %RSP.i722, !alias.scope !2490, !noalias !2491
  %6099 = load %struct.Memory*, %struct.Memory** %MEMORY.i646, !noalias !2486
  %6100 = inttoptr i64 %6098 to i64*
  %6101 = load i64, i64* %6100
  store i64 %6101, i64* %PC.i661, !alias.scope !2490, !noalias !2491
  %6102 = add i64 %6098, 8
  store i64 %6102, i64* %RSP.i722, !alias.scope !2490, !noalias !2491
  %6103 = call double @atan(double %6097)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i741, !alias.scope !2490, !noalias !2491
  %6104 = bitcast %"class.std::bitset"* %YMM0.i741 to double*
  store double %6103, double* %6104, !alias.scope !2490, !noalias !2491
  %6105 = load %struct.Memory*, %struct.Memory** %MEMORY.i646, !noalias !2486
  %6106 = bitcast %struct.State** %state.i637 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6106)
  %6107 = bitcast i64* %curr_pc.i638 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6107)
  %6108 = bitcast %struct.Memory** %memory.i639 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6108)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i640)
  %6109 = bitcast i64* %SS_BASE.i641 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6109)
  %6110 = bitcast i64* %ES_BASE.i642 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6110)
  %6111 = bitcast i64* %DS_BASE.i643 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6111)
  %6112 = bitcast i64* %CS_BASE.i644 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6112)
  %6113 = bitcast %struct.State** %STATE.i645 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6113)
  %6114 = bitcast %struct.Memory** %MEMORY.i646 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6114)
  %6115 = bitcast i64** %_DR0.i647 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6115)
  %6116 = bitcast i64** %_DR1.i648 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6116)
  %6117 = bitcast i64** %_DR2.i649 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6117)
  %6118 = bitcast i64** %_DR3.i650 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6118)
  %6119 = bitcast i64** %_DR4.i651 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6119)
  %6120 = bitcast i64** %_DR5.i652 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6120)
  %6121 = bitcast i64** %_DR6.i653 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6121)
  %6122 = bitcast i64** %_DR7.i654 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6122)
  %6123 = bitcast i64** %CR0.i655 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6123)
  %6124 = bitcast i64** %CR1.i656 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6124)
  %6125 = bitcast i64** %CR2.i657 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6125)
  %6126 = bitcast i64** %CR3.i658 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6126)
  %6127 = bitcast i64** %CR4.i659 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6127)
  %6128 = bitcast i64** %CR8.i660 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6128)
  %6129 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6130 = load i64, i64* %PC
  %6131 = add i64 %6130, 8
  store i64 %6131, i64* %PC
  %6132 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 40) to double*)
  %6133 = bitcast i8* %6129 to double*
  store double %6132, double* %6133, align 1, !tbaa !2432
  %6134 = getelementptr inbounds i8, i8* %6129, i64 8
  %6135 = bitcast i8* %6134 to double*
  store double 0.000000e+00, double* %6135, align 1, !tbaa !2432
  %6136 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %6137 = load i64, i64* %RBP
  %6138 = sub i64 %6137, 240
  %6139 = load i64, i64* %PC
  %6140 = add i64 %6139, 8
  store i64 %6140, i64* %PC
  %6141 = inttoptr i64 %6138 to double*
  %6142 = load double, double* %6141
  %6143 = bitcast i8* %6136 to double*
  store double %6142, double* %6143, align 1, !tbaa !2432
  %6144 = getelementptr inbounds i8, i8* %6136, i64 8
  %6145 = bitcast i8* %6144 to double*
  store double 0.000000e+00, double* %6145, align 1, !tbaa !2432
  %6146 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %6147 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %6148 = bitcast %union.vec128_t* %XMM0 to i8*
  %6149 = load i64, i64* %PC
  %6150 = add i64 %6149, 4
  store i64 %6150, i64* %PC
  %6151 = bitcast i8* %6147 to double*
  %6152 = load double, double* %6151, align 1
  %6153 = getelementptr inbounds i8, i8* %6147, i64 8
  %6154 = bitcast i8* %6153 to i64*
  %6155 = load i64, i64* %6154, align 1
  %6156 = bitcast i8* %6148 to double*
  %6157 = load double, double* %6156, align 1
  %6158 = fmul double %6152, %6157
  %6159 = bitcast i8* %6146 to double*
  store double %6158, double* %6159, align 1, !tbaa !2432
  %6160 = getelementptr inbounds i8, i8* %6146, i64 8
  %6161 = bitcast i8* %6160 to i64*
  store i64 %6155, i64* %6161, align 1, !tbaa !2432
  %6162 = load i64, i64* %RBP
  %6163 = sub i64 %6162, 144
  %6164 = bitcast %union.vec128_t* %XMM2 to i8*
  %6165 = load i64, i64* %PC
  %6166 = add i64 %6165, 8
  store i64 %6166, i64* %PC
  %6167 = bitcast i8* %6164 to double*
  %6168 = load double, double* %6167, align 1
  %6169 = inttoptr i64 %6163 to double*
  store double %6168, double* %6169
  %6170 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %6171 = load i64, i64* %PC
  %6172 = add i64 %6171, 9
  store i64 %6172, i64* %PC
  %6173 = load double, double* bitcast (%T_type* @T to double*)
  %6174 = bitcast i8* %6170 to double*
  store double %6173, double* %6174, align 1, !tbaa !2432
  %6175 = getelementptr inbounds i8, i8* %6170, i64 8
  %6176 = bitcast i8* %6175 to double*
  store double 0.000000e+00, double* %6176, align 1, !tbaa !2432
  %6177 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %6178 = load i64, i64* %PC
  %6179 = add i64 %6178, 9
  store i64 %6179, i64* %PC
  %6180 = load double, double* bitcast (%T2_type* @T2 to double*)
  %6181 = bitcast i8* %6177 to double*
  store double %6180, double* %6181, align 1, !tbaa !2432
  %6182 = getelementptr inbounds i8, i8* %6177, i64 8
  %6183 = bitcast i8* %6182 to double*
  store double 0.000000e+00, double* %6183, align 1, !tbaa !2432
  %6184 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %6185 = load i64, i64* %RBP
  %6186 = sub i64 %6185, 152
  %6187 = load i64, i64* %PC
  %6188 = add i64 %6187, 8
  store i64 %6188, i64* %PC
  %6189 = inttoptr i64 %6186 to double*
  %6190 = load double, double* %6189
  %6191 = bitcast i8* %6184 to double*
  store double %6190, double* %6191, align 1, !tbaa !2432
  %6192 = getelementptr inbounds i8, i8* %6184, i64 8
  %6193 = bitcast i8* %6192 to double*
  store double 0.000000e+00, double* %6193, align 1, !tbaa !2432
  %6194 = load i64, i64* %RBP
  %6195 = sub i64 %6194, 272
  %6196 = bitcast %union.vec128_t* %XMM0 to i8*
  %6197 = load i64, i64* %PC
  %6198 = add i64 %6197, 8
  store i64 %6198, i64* %PC
  %6199 = bitcast i8* %6196 to double*
  %6200 = load double, double* %6199, align 1
  %6201 = inttoptr i64 %6195 to double*
  store double %6200, double* %6201
  %6202 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %6203 = bitcast %union.vec128_t* %XMM3 to i8*
  %6204 = load i64, i64* %PC
  %6205 = add i64 %6204, 3
  store i64 %6205, i64* %PC
  %6206 = bitcast i8* %6203 to <2 x i32>*
  %6207 = load <2 x i32>, <2 x i32>* %6206, align 1
  %6208 = getelementptr inbounds i8, i8* %6203, i64 8
  %6209 = bitcast i8* %6208 to <2 x i32>*
  %6210 = load <2 x i32>, <2 x i32>* %6209, align 1
  %6211 = extractelement <2 x i32> %6207, i32 0
  %6212 = bitcast i8* %6202 to i32*
  store i32 %6211, i32* %6212, align 1, !tbaa !2460
  %6213 = extractelement <2 x i32> %6207, i32 1
  %6214 = getelementptr inbounds i8, i8* %6202, i64 4
  %6215 = bitcast i8* %6214 to i32*
  store i32 %6213, i32* %6215, align 1, !tbaa !2460
  %6216 = extractelement <2 x i32> %6210, i32 0
  %6217 = getelementptr inbounds i8, i8* %6202, i64 8
  %6218 = bitcast i8* %6217 to i32*
  store i32 %6216, i32* %6218, align 1, !tbaa !2460
  %6219 = extractelement <2 x i32> %6210, i32 1
  %6220 = getelementptr inbounds i8, i8* %6202, i64 12
  %6221 = bitcast i8* %6220 to i32*
  store i32 %6219, i32* %6221, align 1, !tbaa !2460
  %6222 = load i64, i64* %RBP
  %6223 = sub i64 %6222, 280
  %6224 = bitcast %union.vec128_t* %XMM1 to i8*
  %6225 = load i64, i64* %PC
  %6226 = add i64 %6225, 8
  store i64 %6226, i64* %PC
  %6227 = bitcast i8* %6224 to double*
  %6228 = load double, double* %6227, align 1
  %6229 = inttoptr i64 %6223 to double*
  store double %6228, double* %6229
  %6230 = load i64, i64* %RBP
  %6231 = sub i64 %6230, 288
  %6232 = bitcast %union.vec128_t* %XMM2 to i8*
  %6233 = load i64, i64* %PC
  %6234 = add i64 %6233, 8
  store i64 %6234, i64* %PC
  %6235 = bitcast i8* %6232 to double*
  %6236 = load double, double* %6235, align 1
  %6237 = inttoptr i64 %6231 to double*
  store double %6236, double* %6237
  %6238 = load i64, i64* %PC
  %6239 = sub i64 %6238, 2596
  %6240 = load i64, i64* %PC
  %6241 = add i64 %6240, 5
  %6242 = load i64, i64* %PC
  %6243 = add i64 %6242, 5
  store i64 %6243, i64* %PC
  %6244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6245 = load i64, i64* %6244, align 8, !tbaa !2428
  %6246 = add i64 %6245, -8
  %6247 = inttoptr i64 %6246 to i64*
  store i64 %6241, i64* %6247
  store i64 %6246, i64* %6244, align 8, !tbaa !2428
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6239, i64* %6248, align 8, !tbaa !2428
  %6249 = load i64, i64* %PC
  %6250 = bitcast %struct.State** %state.i478 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6250)
  %6251 = bitcast i64* %curr_pc.i479 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6251)
  %6252 = bitcast %struct.Memory** %memory.i480 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6252)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i481)
  %6253 = bitcast i64* %SS_BASE.i482 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6253)
  %6254 = bitcast i64* %ES_BASE.i483 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6254)
  %6255 = bitcast i64* %DS_BASE.i484 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6255)
  %6256 = bitcast i64* %CS_BASE.i485 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6256)
  %6257 = bitcast %struct.State** %STATE.i486 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6257)
  %6258 = bitcast %struct.Memory** %MEMORY.i487 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6258)
  %6259 = bitcast i64** %_DR0.i488 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6259)
  %6260 = bitcast i64** %_DR1.i489 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6260)
  %6261 = bitcast i64** %_DR2.i490 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6261)
  %6262 = bitcast i64** %_DR3.i491 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6262)
  %6263 = bitcast i64** %_DR4.i492 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6263)
  %6264 = bitcast i64** %_DR5.i493 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6264)
  %6265 = bitcast i64** %_DR6.i494 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6265)
  %6266 = bitcast i64** %_DR7.i495 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6266)
  %6267 = bitcast i64** %CR0.i496 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6267)
  %6268 = bitcast i64** %CR1.i497 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6268)
  %6269 = bitcast i64** %CR2.i498 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6269)
  %6270 = bitcast i64** %CR3.i499 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6270)
  %6271 = bitcast i64** %CR4.i500 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6271)
  %6272 = bitcast i64** %CR8.i501 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6272)
  store %struct.State* %0, %struct.State** %state.i478, align 8, !noalias !2492
  store i64 %6249, i64* %curr_pc.i479, align 8, !noalias !2492
  store %struct.Memory* %6105, %struct.Memory** %memory.i480, align 8, !noalias !2492
  store i8 0, i8* %BRANCH_TAKEN.i481, align 1, !noalias !2492
  store i64 0, i64* %SS_BASE.i482, align 8, !noalias !2492
  store i64 0, i64* %ES_BASE.i483, align 8, !noalias !2492
  store i64 0, i64* %DS_BASE.i484, align 8, !noalias !2492
  store i64 0, i64* %CS_BASE.i485, align 8, !noalias !2492
  store %struct.State* %0, %struct.State** %STATE.i486, align 8, !noalias !2492
  store %struct.Memory* %6105, %struct.Memory** %MEMORY.i487, align 8, !noalias !2492
  %6273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6274 = getelementptr inbounds %struct.GPR, %struct.GPR* %6273, i32 0, i32 33
  %6275 = getelementptr inbounds %struct.Reg, %struct.Reg* %6274, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %6275 to i64*
  store i64 %6249, i64* %PC.i502, align 8, !alias.scope !2496, !noalias !2497
  %6276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6277 = getelementptr inbounds %struct.GPR, %struct.GPR* %6276, i32 0, i32 1
  %6278 = getelementptr inbounds %struct.Reg, %struct.Reg* %6277, i32 0, i32 0
  %6279 = bitcast %union.anon* %6278 to %struct.anon.2*
  %AH.i503 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6279, i32 0, i32 1
  %6280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6281 = getelementptr inbounds %struct.GPR, %struct.GPR* %6280, i32 0, i32 3
  %6282 = getelementptr inbounds %struct.Reg, %struct.Reg* %6281, i32 0, i32 0
  %6283 = bitcast %union.anon* %6282 to %struct.anon.2*
  %BH.i504 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6283, i32 0, i32 1
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6285 = getelementptr inbounds %struct.GPR, %struct.GPR* %6284, i32 0, i32 5
  %6286 = getelementptr inbounds %struct.Reg, %struct.Reg* %6285, i32 0, i32 0
  %6287 = bitcast %union.anon* %6286 to %struct.anon.2*
  %CH.i505 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6287, i32 0, i32 1
  %6288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6289 = getelementptr inbounds %struct.GPR, %struct.GPR* %6288, i32 0, i32 7
  %6290 = getelementptr inbounds %struct.Reg, %struct.Reg* %6289, i32 0, i32 0
  %6291 = bitcast %union.anon* %6290 to %struct.anon.2*
  %DH.i506 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6291, i32 0, i32 1
  %6292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6293 = getelementptr inbounds %struct.GPR, %struct.GPR* %6292, i32 0, i32 1
  %6294 = getelementptr inbounds %struct.Reg, %struct.Reg* %6293, i32 0, i32 0
  %6295 = bitcast %union.anon* %6294 to %struct.anon.2*
  %AL.i507 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6295, i32 0, i32 0
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6297 = getelementptr inbounds %struct.GPR, %struct.GPR* %6296, i32 0, i32 3
  %6298 = getelementptr inbounds %struct.Reg, %struct.Reg* %6297, i32 0, i32 0
  %6299 = bitcast %union.anon* %6298 to %struct.anon.2*
  %BL.i508 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6299, i32 0, i32 0
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6301 = getelementptr inbounds %struct.GPR, %struct.GPR* %6300, i32 0, i32 5
  %6302 = getelementptr inbounds %struct.Reg, %struct.Reg* %6301, i32 0, i32 0
  %6303 = bitcast %union.anon* %6302 to %struct.anon.2*
  %CL.i509 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6303, i32 0, i32 0
  %6304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6305 = getelementptr inbounds %struct.GPR, %struct.GPR* %6304, i32 0, i32 7
  %6306 = getelementptr inbounds %struct.Reg, %struct.Reg* %6305, i32 0, i32 0
  %6307 = bitcast %union.anon* %6306 to %struct.anon.2*
  %DL.i510 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6307, i32 0, i32 0
  %6308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6309 = getelementptr inbounds %struct.GPR, %struct.GPR* %6308, i32 0, i32 9
  %6310 = getelementptr inbounds %struct.Reg, %struct.Reg* %6309, i32 0, i32 0
  %6311 = bitcast %union.anon* %6310 to %struct.anon.2*
  %SIL.i511 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6311, i32 0, i32 0
  %6312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6313 = getelementptr inbounds %struct.GPR, %struct.GPR* %6312, i32 0, i32 11
  %6314 = getelementptr inbounds %struct.Reg, %struct.Reg* %6313, i32 0, i32 0
  %6315 = bitcast %union.anon* %6314 to %struct.anon.2*
  %DIL.i512 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6315, i32 0, i32 0
  %6316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6317 = getelementptr inbounds %struct.GPR, %struct.GPR* %6316, i32 0, i32 13
  %6318 = getelementptr inbounds %struct.Reg, %struct.Reg* %6317, i32 0, i32 0
  %6319 = bitcast %union.anon* %6318 to %struct.anon.2*
  %SPL.i513 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6319, i32 0, i32 0
  %6320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6321 = getelementptr inbounds %struct.GPR, %struct.GPR* %6320, i32 0, i32 15
  %6322 = getelementptr inbounds %struct.Reg, %struct.Reg* %6321, i32 0, i32 0
  %6323 = bitcast %union.anon* %6322 to %struct.anon.2*
  %BPL.i514 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6323, i32 0, i32 0
  %6324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6325 = getelementptr inbounds %struct.GPR, %struct.GPR* %6324, i32 0, i32 17
  %6326 = getelementptr inbounds %struct.Reg, %struct.Reg* %6325, i32 0, i32 0
  %6327 = bitcast %union.anon* %6326 to %struct.anon.2*
  %R8B.i515 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6327, i32 0, i32 0
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6329 = getelementptr inbounds %struct.GPR, %struct.GPR* %6328, i32 0, i32 19
  %6330 = getelementptr inbounds %struct.Reg, %struct.Reg* %6329, i32 0, i32 0
  %6331 = bitcast %union.anon* %6330 to %struct.anon.2*
  %R9B.i516 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6331, i32 0, i32 0
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6333 = getelementptr inbounds %struct.GPR, %struct.GPR* %6332, i32 0, i32 21
  %6334 = getelementptr inbounds %struct.Reg, %struct.Reg* %6333, i32 0, i32 0
  %6335 = bitcast %union.anon* %6334 to %struct.anon.2*
  %R10B.i517 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6335, i32 0, i32 0
  %6336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6337 = getelementptr inbounds %struct.GPR, %struct.GPR* %6336, i32 0, i32 23
  %6338 = getelementptr inbounds %struct.Reg, %struct.Reg* %6337, i32 0, i32 0
  %6339 = bitcast %union.anon* %6338 to %struct.anon.2*
  %R11B.i518 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6339, i32 0, i32 0
  %6340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6341 = getelementptr inbounds %struct.GPR, %struct.GPR* %6340, i32 0, i32 25
  %6342 = getelementptr inbounds %struct.Reg, %struct.Reg* %6341, i32 0, i32 0
  %6343 = bitcast %union.anon* %6342 to %struct.anon.2*
  %R12B.i519 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6343, i32 0, i32 0
  %6344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6345 = getelementptr inbounds %struct.GPR, %struct.GPR* %6344, i32 0, i32 27
  %6346 = getelementptr inbounds %struct.Reg, %struct.Reg* %6345, i32 0, i32 0
  %6347 = bitcast %union.anon* %6346 to %struct.anon.2*
  %R13B.i520 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6347, i32 0, i32 0
  %6348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6349 = getelementptr inbounds %struct.GPR, %struct.GPR* %6348, i32 0, i32 29
  %6350 = getelementptr inbounds %struct.Reg, %struct.Reg* %6349, i32 0, i32 0
  %6351 = bitcast %union.anon* %6350 to %struct.anon.2*
  %R14B.i521 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6351, i32 0, i32 0
  %6352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6353 = getelementptr inbounds %struct.GPR, %struct.GPR* %6352, i32 0, i32 31
  %6354 = getelementptr inbounds %struct.Reg, %struct.Reg* %6353, i32 0, i32 0
  %6355 = bitcast %union.anon* %6354 to %struct.anon.2*
  %R15B.i522 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6355, i32 0, i32 0
  %6356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6357 = getelementptr inbounds %struct.GPR, %struct.GPR* %6356, i32 0, i32 1
  %6358 = getelementptr inbounds %struct.Reg, %struct.Reg* %6357, i32 0, i32 0
  %AX.i523 = bitcast %union.anon* %6358 to i16*
  %6359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6360 = getelementptr inbounds %struct.GPR, %struct.GPR* %6359, i32 0, i32 3
  %6361 = getelementptr inbounds %struct.Reg, %struct.Reg* %6360, i32 0, i32 0
  %BX.i524 = bitcast %union.anon* %6361 to i16*
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6363 = getelementptr inbounds %struct.GPR, %struct.GPR* %6362, i32 0, i32 5
  %6364 = getelementptr inbounds %struct.Reg, %struct.Reg* %6363, i32 0, i32 0
  %CX.i525 = bitcast %union.anon* %6364 to i16*
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6366 = getelementptr inbounds %struct.GPR, %struct.GPR* %6365, i32 0, i32 7
  %6367 = getelementptr inbounds %struct.Reg, %struct.Reg* %6366, i32 0, i32 0
  %DX.i526 = bitcast %union.anon* %6367 to i16*
  %6368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6369 = getelementptr inbounds %struct.GPR, %struct.GPR* %6368, i32 0, i32 9
  %6370 = getelementptr inbounds %struct.Reg, %struct.Reg* %6369, i32 0, i32 0
  %SI.i527 = bitcast %union.anon* %6370 to i16*
  %6371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6372 = getelementptr inbounds %struct.GPR, %struct.GPR* %6371, i32 0, i32 11
  %6373 = getelementptr inbounds %struct.Reg, %struct.Reg* %6372, i32 0, i32 0
  %DI.i528 = bitcast %union.anon* %6373 to i16*
  %6374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6375 = getelementptr inbounds %struct.GPR, %struct.GPR* %6374, i32 0, i32 13
  %6376 = getelementptr inbounds %struct.Reg, %struct.Reg* %6375, i32 0, i32 0
  %SP.i529 = bitcast %union.anon* %6376 to i16*
  %6377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6378 = getelementptr inbounds %struct.GPR, %struct.GPR* %6377, i32 0, i32 15
  %6379 = getelementptr inbounds %struct.Reg, %struct.Reg* %6378, i32 0, i32 0
  %BP.i530 = bitcast %union.anon* %6379 to i16*
  %6380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6381 = getelementptr inbounds %struct.GPR, %struct.GPR* %6380, i32 0, i32 17
  %6382 = getelementptr inbounds %struct.Reg, %struct.Reg* %6381, i32 0, i32 0
  %R8W.i531 = bitcast %union.anon* %6382 to i16*
  %6383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6384 = getelementptr inbounds %struct.GPR, %struct.GPR* %6383, i32 0, i32 19
  %6385 = getelementptr inbounds %struct.Reg, %struct.Reg* %6384, i32 0, i32 0
  %R9W.i532 = bitcast %union.anon* %6385 to i16*
  %6386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6387 = getelementptr inbounds %struct.GPR, %struct.GPR* %6386, i32 0, i32 21
  %6388 = getelementptr inbounds %struct.Reg, %struct.Reg* %6387, i32 0, i32 0
  %R10W.i533 = bitcast %union.anon* %6388 to i16*
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6390 = getelementptr inbounds %struct.GPR, %struct.GPR* %6389, i32 0, i32 23
  %6391 = getelementptr inbounds %struct.Reg, %struct.Reg* %6390, i32 0, i32 0
  %R11W.i534 = bitcast %union.anon* %6391 to i16*
  %6392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6393 = getelementptr inbounds %struct.GPR, %struct.GPR* %6392, i32 0, i32 25
  %6394 = getelementptr inbounds %struct.Reg, %struct.Reg* %6393, i32 0, i32 0
  %R12W.i535 = bitcast %union.anon* %6394 to i16*
  %6395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6396 = getelementptr inbounds %struct.GPR, %struct.GPR* %6395, i32 0, i32 27
  %6397 = getelementptr inbounds %struct.Reg, %struct.Reg* %6396, i32 0, i32 0
  %R13W.i536 = bitcast %union.anon* %6397 to i16*
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6399 = getelementptr inbounds %struct.GPR, %struct.GPR* %6398, i32 0, i32 29
  %6400 = getelementptr inbounds %struct.Reg, %struct.Reg* %6399, i32 0, i32 0
  %R14W.i537 = bitcast %union.anon* %6400 to i16*
  %6401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6402 = getelementptr inbounds %struct.GPR, %struct.GPR* %6401, i32 0, i32 31
  %6403 = getelementptr inbounds %struct.Reg, %struct.Reg* %6402, i32 0, i32 0
  %R15W.i538 = bitcast %union.anon* %6403 to i16*
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6405 = getelementptr inbounds %struct.GPR, %struct.GPR* %6404, i32 0, i32 33
  %6406 = getelementptr inbounds %struct.Reg, %struct.Reg* %6405, i32 0, i32 0
  %IP.i539 = bitcast %union.anon* %6406 to i16*
  %6407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6408 = getelementptr inbounds %struct.GPR, %struct.GPR* %6407, i32 0, i32 1
  %6409 = getelementptr inbounds %struct.Reg, %struct.Reg* %6408, i32 0, i32 0
  %EAX.i540 = bitcast %union.anon* %6409 to i32*
  %6410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6411 = getelementptr inbounds %struct.GPR, %struct.GPR* %6410, i32 0, i32 3
  %6412 = getelementptr inbounds %struct.Reg, %struct.Reg* %6411, i32 0, i32 0
  %EBX.i541 = bitcast %union.anon* %6412 to i32*
  %6413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6414 = getelementptr inbounds %struct.GPR, %struct.GPR* %6413, i32 0, i32 5
  %6415 = getelementptr inbounds %struct.Reg, %struct.Reg* %6414, i32 0, i32 0
  %ECX.i542 = bitcast %union.anon* %6415 to i32*
  %6416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6417 = getelementptr inbounds %struct.GPR, %struct.GPR* %6416, i32 0, i32 7
  %6418 = getelementptr inbounds %struct.Reg, %struct.Reg* %6417, i32 0, i32 0
  %EDX.i543 = bitcast %union.anon* %6418 to i32*
  %6419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6420 = getelementptr inbounds %struct.GPR, %struct.GPR* %6419, i32 0, i32 9
  %6421 = getelementptr inbounds %struct.Reg, %struct.Reg* %6420, i32 0, i32 0
  %ESI.i544 = bitcast %union.anon* %6421 to i32*
  %6422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6423 = getelementptr inbounds %struct.GPR, %struct.GPR* %6422, i32 0, i32 11
  %6424 = getelementptr inbounds %struct.Reg, %struct.Reg* %6423, i32 0, i32 0
  %EDI.i545 = bitcast %union.anon* %6424 to i32*
  %6425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6426 = getelementptr inbounds %struct.GPR, %struct.GPR* %6425, i32 0, i32 13
  %6427 = getelementptr inbounds %struct.Reg, %struct.Reg* %6426, i32 0, i32 0
  %ESP.i546 = bitcast %union.anon* %6427 to i32*
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6429 = getelementptr inbounds %struct.GPR, %struct.GPR* %6428, i32 0, i32 15
  %6430 = getelementptr inbounds %struct.Reg, %struct.Reg* %6429, i32 0, i32 0
  %EBP.i547 = bitcast %union.anon* %6430 to i32*
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6432 = getelementptr inbounds %struct.GPR, %struct.GPR* %6431, i32 0, i32 33
  %6433 = getelementptr inbounds %struct.Reg, %struct.Reg* %6432, i32 0, i32 0
  %EIP.i548 = bitcast %union.anon* %6433 to i32*
  %6434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6435 = getelementptr inbounds %struct.GPR, %struct.GPR* %6434, i32 0, i32 17
  %6436 = getelementptr inbounds %struct.Reg, %struct.Reg* %6435, i32 0, i32 0
  %R8D.i549 = bitcast %union.anon* %6436 to i32*
  %6437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6438 = getelementptr inbounds %struct.GPR, %struct.GPR* %6437, i32 0, i32 19
  %6439 = getelementptr inbounds %struct.Reg, %struct.Reg* %6438, i32 0, i32 0
  %R9D.i550 = bitcast %union.anon* %6439 to i32*
  %6440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6441 = getelementptr inbounds %struct.GPR, %struct.GPR* %6440, i32 0, i32 21
  %6442 = getelementptr inbounds %struct.Reg, %struct.Reg* %6441, i32 0, i32 0
  %R10D.i551 = bitcast %union.anon* %6442 to i32*
  %6443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6444 = getelementptr inbounds %struct.GPR, %struct.GPR* %6443, i32 0, i32 23
  %6445 = getelementptr inbounds %struct.Reg, %struct.Reg* %6444, i32 0, i32 0
  %R11D.i552 = bitcast %union.anon* %6445 to i32*
  %6446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6447 = getelementptr inbounds %struct.GPR, %struct.GPR* %6446, i32 0, i32 25
  %6448 = getelementptr inbounds %struct.Reg, %struct.Reg* %6447, i32 0, i32 0
  %R12D.i553 = bitcast %union.anon* %6448 to i32*
  %6449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6450 = getelementptr inbounds %struct.GPR, %struct.GPR* %6449, i32 0, i32 27
  %6451 = getelementptr inbounds %struct.Reg, %struct.Reg* %6450, i32 0, i32 0
  %R13D.i554 = bitcast %union.anon* %6451 to i32*
  %6452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6453 = getelementptr inbounds %struct.GPR, %struct.GPR* %6452, i32 0, i32 29
  %6454 = getelementptr inbounds %struct.Reg, %struct.Reg* %6453, i32 0, i32 0
  %R14D.i555 = bitcast %union.anon* %6454 to i32*
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6456 = getelementptr inbounds %struct.GPR, %struct.GPR* %6455, i32 0, i32 31
  %6457 = getelementptr inbounds %struct.Reg, %struct.Reg* %6456, i32 0, i32 0
  %R15D.i556 = bitcast %union.anon* %6457 to i32*
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6459 = getelementptr inbounds %struct.GPR, %struct.GPR* %6458, i32 0, i32 1
  %6460 = getelementptr inbounds %struct.Reg, %struct.Reg* %6459, i32 0, i32 0
  %RAX.i557 = bitcast %union.anon* %6460 to i64*
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6462 = getelementptr inbounds %struct.GPR, %struct.GPR* %6461, i32 0, i32 3
  %6463 = getelementptr inbounds %struct.Reg, %struct.Reg* %6462, i32 0, i32 0
  %RBX.i558 = bitcast %union.anon* %6463 to i64*
  %6464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6465 = getelementptr inbounds %struct.GPR, %struct.GPR* %6464, i32 0, i32 5
  %6466 = getelementptr inbounds %struct.Reg, %struct.Reg* %6465, i32 0, i32 0
  %RCX.i559 = bitcast %union.anon* %6466 to i64*
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6468 = getelementptr inbounds %struct.GPR, %struct.GPR* %6467, i32 0, i32 7
  %6469 = getelementptr inbounds %struct.Reg, %struct.Reg* %6468, i32 0, i32 0
  %RDX.i560 = bitcast %union.anon* %6469 to i64*
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6471 = getelementptr inbounds %struct.GPR, %struct.GPR* %6470, i32 0, i32 9
  %6472 = getelementptr inbounds %struct.Reg, %struct.Reg* %6471, i32 0, i32 0
  %RSI.i561 = bitcast %union.anon* %6472 to i64*
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6474 = getelementptr inbounds %struct.GPR, %struct.GPR* %6473, i32 0, i32 11
  %6475 = getelementptr inbounds %struct.Reg, %struct.Reg* %6474, i32 0, i32 0
  %RDI.i562 = bitcast %union.anon* %6475 to i64*
  %6476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6477 = getelementptr inbounds %struct.GPR, %struct.GPR* %6476, i32 0, i32 13
  %6478 = getelementptr inbounds %struct.Reg, %struct.Reg* %6477, i32 0, i32 0
  %RSP.i563 = bitcast %union.anon* %6478 to i64*
  %6479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6480 = getelementptr inbounds %struct.GPR, %struct.GPR* %6479, i32 0, i32 15
  %6481 = getelementptr inbounds %struct.Reg, %struct.Reg* %6480, i32 0, i32 0
  %RBP.i564 = bitcast %union.anon* %6481 to i64*
  %6482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6483 = getelementptr inbounds %struct.GPR, %struct.GPR* %6482, i32 0, i32 17
  %6484 = getelementptr inbounds %struct.Reg, %struct.Reg* %6483, i32 0, i32 0
  %R8.i565 = bitcast %union.anon* %6484 to i64*
  %6485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6486 = getelementptr inbounds %struct.GPR, %struct.GPR* %6485, i32 0, i32 19
  %6487 = getelementptr inbounds %struct.Reg, %struct.Reg* %6486, i32 0, i32 0
  %R9.i566 = bitcast %union.anon* %6487 to i64*
  %6488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6489 = getelementptr inbounds %struct.GPR, %struct.GPR* %6488, i32 0, i32 21
  %6490 = getelementptr inbounds %struct.Reg, %struct.Reg* %6489, i32 0, i32 0
  %R10.i567 = bitcast %union.anon* %6490 to i64*
  %6491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6492 = getelementptr inbounds %struct.GPR, %struct.GPR* %6491, i32 0, i32 23
  %6493 = getelementptr inbounds %struct.Reg, %struct.Reg* %6492, i32 0, i32 0
  %R11.i568 = bitcast %union.anon* %6493 to i64*
  %6494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6495 = getelementptr inbounds %struct.GPR, %struct.GPR* %6494, i32 0, i32 25
  %6496 = getelementptr inbounds %struct.Reg, %struct.Reg* %6495, i32 0, i32 0
  %R12.i569 = bitcast %union.anon* %6496 to i64*
  %6497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6498 = getelementptr inbounds %struct.GPR, %struct.GPR* %6497, i32 0, i32 27
  %6499 = getelementptr inbounds %struct.Reg, %struct.Reg* %6498, i32 0, i32 0
  %R13.i570 = bitcast %union.anon* %6499 to i64*
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6501 = getelementptr inbounds %struct.GPR, %struct.GPR* %6500, i32 0, i32 29
  %6502 = getelementptr inbounds %struct.Reg, %struct.Reg* %6501, i32 0, i32 0
  %R14.i571 = bitcast %union.anon* %6502 to i64*
  %6503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6504 = getelementptr inbounds %struct.GPR, %struct.GPR* %6503, i32 0, i32 31
  %6505 = getelementptr inbounds %struct.Reg, %struct.Reg* %6504, i32 0, i32 0
  %R15.i572 = bitcast %union.anon* %6505 to i64*
  %6506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6507 = getelementptr inbounds %struct.GPR, %struct.GPR* %6506, i32 0, i32 33
  %6508 = getelementptr inbounds %struct.Reg, %struct.Reg* %6507, i32 0, i32 0
  %RIP.i573 = bitcast %union.anon* %6508 to i64*
  %6509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6510 = getelementptr inbounds %struct.Segments, %struct.Segments* %6509, i32 0, i32 1
  %SS.i574 = bitcast %union.SegmentSelector* %6510 to i16*
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6512 = getelementptr inbounds %struct.Segments, %struct.Segments* %6511, i32 0, i32 3
  %ES.i575 = bitcast %union.SegmentSelector* %6512 to i16*
  %6513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6514 = getelementptr inbounds %struct.Segments, %struct.Segments* %6513, i32 0, i32 5
  %GS.i576 = bitcast %union.SegmentSelector* %6514 to i16*
  %6515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6516 = getelementptr inbounds %struct.Segments, %struct.Segments* %6515, i32 0, i32 7
  %FS.i577 = bitcast %union.SegmentSelector* %6516 to i16*
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6518 = getelementptr inbounds %struct.Segments, %struct.Segments* %6517, i32 0, i32 9
  %DS.i578 = bitcast %union.SegmentSelector* %6518 to i16*
  %6519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %6520 = getelementptr inbounds %struct.Segments, %struct.Segments* %6519, i32 0, i32 11
  %CS.i579 = bitcast %union.SegmentSelector* %6520 to i16*
  %6521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %6522 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %6521, i32 0, i32 5
  %6523 = getelementptr inbounds %struct.Reg, %struct.Reg* %6522, i32 0, i32 0
  %GS_BASE.i580 = bitcast %union.anon* %6523 to i64*
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %6525 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %6524, i32 0, i32 7
  %6526 = getelementptr inbounds %struct.Reg, %struct.Reg* %6525, i32 0, i32 0
  %FS_BASE.i581 = bitcast %union.anon* %6526 to i64*
  %6527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6528 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6527, i64 0, i64 0
  %YMM0.i582 = bitcast %union.VectorReg* %6528 to %"class.std::bitset"*
  %6529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6530 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6529, i64 0, i64 1
  %YMM1.i583 = bitcast %union.VectorReg* %6530 to %"class.std::bitset"*
  %6531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6532 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6531, i64 0, i64 2
  %YMM2.i584 = bitcast %union.VectorReg* %6532 to %"class.std::bitset"*
  %6533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6534 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6533, i64 0, i64 3
  %YMM3.i585 = bitcast %union.VectorReg* %6534 to %"class.std::bitset"*
  %6535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6536 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6535, i64 0, i64 4
  %YMM4.i586 = bitcast %union.VectorReg* %6536 to %"class.std::bitset"*
  %6537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6538 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6537, i64 0, i64 5
  %YMM5.i587 = bitcast %union.VectorReg* %6538 to %"class.std::bitset"*
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6540 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6539, i64 0, i64 6
  %YMM6.i588 = bitcast %union.VectorReg* %6540 to %"class.std::bitset"*
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6542 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6541, i64 0, i64 7
  %YMM7.i589 = bitcast %union.VectorReg* %6542 to %"class.std::bitset"*
  %6543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6544 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6543, i64 0, i64 8
  %YMM8.i590 = bitcast %union.VectorReg* %6544 to %"class.std::bitset"*
  %6545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6546 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6545, i64 0, i64 9
  %YMM9.i591 = bitcast %union.VectorReg* %6546 to %"class.std::bitset"*
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6548 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6547, i64 0, i64 10
  %YMM10.i592 = bitcast %union.VectorReg* %6548 to %"class.std::bitset"*
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6550 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6549, i64 0, i64 11
  %YMM11.i593 = bitcast %union.VectorReg* %6550 to %"class.std::bitset"*
  %6551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6552 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6551, i64 0, i64 12
  %YMM12.i594 = bitcast %union.VectorReg* %6552 to %"class.std::bitset"*
  %6553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6554 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6553, i64 0, i64 13
  %YMM13.i595 = bitcast %union.VectorReg* %6554 to %"class.std::bitset"*
  %6555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6556 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6555, i64 0, i64 14
  %YMM14.i596 = bitcast %union.VectorReg* %6556 to %"class.std::bitset"*
  %6557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6558 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6557, i64 0, i64 15
  %YMM15.i597 = bitcast %union.VectorReg* %6558 to %"class.std::bitset"*
  %6559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6560 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6559, i64 0, i64 0
  %XMM0.i598 = bitcast %union.VectorReg* %6560 to %union.vec128_t*
  %6561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6562 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6561, i64 0, i64 1
  %XMM1.i599 = bitcast %union.VectorReg* %6562 to %union.vec128_t*
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6564 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6563, i64 0, i64 2
  %XMM2.i600 = bitcast %union.VectorReg* %6564 to %union.vec128_t*
  %6565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6566 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6565, i64 0, i64 3
  %XMM3.i601 = bitcast %union.VectorReg* %6566 to %union.vec128_t*
  %6567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6568 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6567, i64 0, i64 4
  %XMM4.i602 = bitcast %union.VectorReg* %6568 to %union.vec128_t*
  %6569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6570 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6569, i64 0, i64 5
  %XMM5.i603 = bitcast %union.VectorReg* %6570 to %union.vec128_t*
  %6571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6572 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6571, i64 0, i64 6
  %XMM6.i604 = bitcast %union.VectorReg* %6572 to %union.vec128_t*
  %6573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6574 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6573, i64 0, i64 7
  %XMM7.i605 = bitcast %union.VectorReg* %6574 to %union.vec128_t*
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6576 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6575, i64 0, i64 8
  %XMM8.i606 = bitcast %union.VectorReg* %6576 to %union.vec128_t*
  %6577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6578 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6577, i64 0, i64 9
  %XMM9.i607 = bitcast %union.VectorReg* %6578 to %union.vec128_t*
  %6579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6580 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6579, i64 0, i64 10
  %XMM10.i608 = bitcast %union.VectorReg* %6580 to %union.vec128_t*
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6582 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6581, i64 0, i64 11
  %XMM11.i609 = bitcast %union.VectorReg* %6582 to %union.vec128_t*
  %6583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6584 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6583, i64 0, i64 12
  %XMM12.i610 = bitcast %union.VectorReg* %6584 to %union.vec128_t*
  %6585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6586 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6585, i64 0, i64 13
  %XMM13.i611 = bitcast %union.VectorReg* %6586 to %union.vec128_t*
  %6587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6588 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6587, i64 0, i64 14
  %XMM14.i612 = bitcast %union.VectorReg* %6588 to %union.vec128_t*
  %6589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6590 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6589, i64 0, i64 15
  %XMM15.i613 = bitcast %union.VectorReg* %6590 to %union.vec128_t*
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6592 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6591, i32 0, i32 0
  %6593 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6592, i64 0, i64 0
  %ST0.i614 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6593, i32 0, i32 1
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6595 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6594, i32 0, i32 0
  %6596 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6595, i64 0, i64 1
  %ST1.i615 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6596, i32 0, i32 1
  %6597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6598 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6597, i32 0, i32 0
  %6599 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6598, i64 0, i64 2
  %ST2.i616 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6599, i32 0, i32 1
  %6600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6601 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6600, i32 0, i32 0
  %6602 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6601, i64 0, i64 3
  %ST3.i617 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6602, i32 0, i32 1
  %6603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6604 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6603, i32 0, i32 0
  %6605 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6604, i64 0, i64 4
  %ST4.i618 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6605, i32 0, i32 1
  %6606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6607 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6606, i32 0, i32 0
  %6608 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6607, i64 0, i64 5
  %ST5.i619 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6608, i32 0, i32 1
  %6609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6610 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6609, i32 0, i32 0
  %6611 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6610, i64 0, i64 6
  %ST6.i620 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6611, i32 0, i32 1
  %6612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %6613 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %6612, i32 0, i32 0
  %6614 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %6613, i64 0, i64 7
  %ST7.i621 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %6614, i32 0, i32 1
  %6615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6616 = getelementptr inbounds %struct.MMX, %struct.MMX* %6615, i32 0, i32 0
  %6617 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6616, i64 0, i64 0
  %6618 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6617, i32 0, i32 1
  %6619 = bitcast %union.vec64_t* %6618 to %struct.uint64v1_t*
  %6620 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6619, i32 0, i32 0
  %MM0.i622 = getelementptr inbounds [1 x i64], [1 x i64]* %6620, i64 0, i64 0
  %6621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6622 = getelementptr inbounds %struct.MMX, %struct.MMX* %6621, i32 0, i32 0
  %6623 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6622, i64 0, i64 1
  %6624 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6623, i32 0, i32 1
  %6625 = bitcast %union.vec64_t* %6624 to %struct.uint64v1_t*
  %6626 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6625, i32 0, i32 0
  %MM1.i623 = getelementptr inbounds [1 x i64], [1 x i64]* %6626, i64 0, i64 0
  %6627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6628 = getelementptr inbounds %struct.MMX, %struct.MMX* %6627, i32 0, i32 0
  %6629 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6628, i64 0, i64 2
  %6630 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6629, i32 0, i32 1
  %6631 = bitcast %union.vec64_t* %6630 to %struct.uint64v1_t*
  %6632 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6631, i32 0, i32 0
  %MM2.i624 = getelementptr inbounds [1 x i64], [1 x i64]* %6632, i64 0, i64 0
  %6633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6634 = getelementptr inbounds %struct.MMX, %struct.MMX* %6633, i32 0, i32 0
  %6635 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6634, i64 0, i64 3
  %6636 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6635, i32 0, i32 1
  %6637 = bitcast %union.vec64_t* %6636 to %struct.uint64v1_t*
  %6638 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6637, i32 0, i32 0
  %MM3.i625 = getelementptr inbounds [1 x i64], [1 x i64]* %6638, i64 0, i64 0
  %6639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6640 = getelementptr inbounds %struct.MMX, %struct.MMX* %6639, i32 0, i32 0
  %6641 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6640, i64 0, i64 4
  %6642 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6641, i32 0, i32 1
  %6643 = bitcast %union.vec64_t* %6642 to %struct.uint64v1_t*
  %6644 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6643, i32 0, i32 0
  %MM4.i626 = getelementptr inbounds [1 x i64], [1 x i64]* %6644, i64 0, i64 0
  %6645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6646 = getelementptr inbounds %struct.MMX, %struct.MMX* %6645, i32 0, i32 0
  %6647 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6646, i64 0, i64 5
  %6648 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6647, i32 0, i32 1
  %6649 = bitcast %union.vec64_t* %6648 to %struct.uint64v1_t*
  %6650 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6649, i32 0, i32 0
  %MM5.i627 = getelementptr inbounds [1 x i64], [1 x i64]* %6650, i64 0, i64 0
  %6651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6652 = getelementptr inbounds %struct.MMX, %struct.MMX* %6651, i32 0, i32 0
  %6653 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6652, i64 0, i64 6
  %6654 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6653, i32 0, i32 1
  %6655 = bitcast %union.vec64_t* %6654 to %struct.uint64v1_t*
  %6656 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6655, i32 0, i32 0
  %MM6.i628 = getelementptr inbounds [1 x i64], [1 x i64]* %6656, i64 0, i64 0
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %6658 = getelementptr inbounds %struct.MMX, %struct.MMX* %6657, i32 0, i32 0
  %6659 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %6658, i64 0, i64 7
  %6660 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %6659, i32 0, i32 1
  %6661 = bitcast %union.vec64_t* %6660 to %struct.uint64v1_t*
  %6662 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %6661, i32 0, i32 0
  %MM7.i629 = getelementptr inbounds [1 x i64], [1 x i64]* %6662, i64 0, i64 0
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i630 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6663, i32 0, i32 5
  %6664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i631 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6664, i32 0, i32 1
  %6665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i632 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6665, i32 0, i32 11
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i633 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6666, i32 0, i32 13
  %6667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i634 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6667, i32 0, i32 3
  %6668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i635 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6668, i32 0, i32 9
  %6669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i636 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %6669, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i488, align 8, !noalias !2492
  store i64* @DR1, i64** %_DR1.i489, align 8, !noalias !2492
  store i64* @DR2, i64** %_DR2.i490, align 8, !noalias !2492
  store i64* @DR3, i64** %_DR3.i491, align 8, !noalias !2492
  store i64* @DR4, i64** %_DR4.i492, align 8, !noalias !2492
  store i64* @DR5, i64** %_DR5.i493, align 8, !noalias !2492
  store i64* @DR6, i64** %_DR6.i494, align 8, !noalias !2492
  store i64* @DR7, i64** %_DR7.i495, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i496, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i497, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i498, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i499, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i500, align 8, !noalias !2492
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i501, align 8, !noalias !2492
  %6670 = bitcast %"class.std::bitset"* %YMM0.i582 to double*
  %6671 = load double, double* %6670, !alias.scope !2496, !noalias !2497
  %6672 = load i64, i64* %RSP.i563, !alias.scope !2496, !noalias !2497
  %6673 = load %struct.Memory*, %struct.Memory** %MEMORY.i487, !noalias !2492
  %6674 = inttoptr i64 %6672 to i64*
  %6675 = load i64, i64* %6674
  store i64 %6675, i64* %PC.i502, !alias.scope !2496, !noalias !2497
  %6676 = add i64 %6672, 8
  store i64 %6676, i64* %RSP.i563, !alias.scope !2496, !noalias !2497
  %6677 = call double @sin(double %6671)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i582, !alias.scope !2496, !noalias !2497
  %6678 = bitcast %"class.std::bitset"* %YMM0.i582 to double*
  store double %6677, double* %6678, !alias.scope !2496, !noalias !2497
  %6679 = load %struct.Memory*, %struct.Memory** %MEMORY.i487, !noalias !2492
  %6680 = bitcast %struct.State** %state.i478 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6680)
  %6681 = bitcast i64* %curr_pc.i479 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6681)
  %6682 = bitcast %struct.Memory** %memory.i480 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6682)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i481)
  %6683 = bitcast i64* %SS_BASE.i482 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6683)
  %6684 = bitcast i64* %ES_BASE.i483 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6684)
  %6685 = bitcast i64* %DS_BASE.i484 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6685)
  %6686 = bitcast i64* %CS_BASE.i485 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6686)
  %6687 = bitcast %struct.State** %STATE.i486 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6687)
  %6688 = bitcast %struct.Memory** %MEMORY.i487 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6688)
  %6689 = bitcast i64** %_DR0.i488 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6689)
  %6690 = bitcast i64** %_DR1.i489 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6690)
  %6691 = bitcast i64** %_DR2.i490 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6691)
  %6692 = bitcast i64** %_DR3.i491 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6692)
  %6693 = bitcast i64** %_DR4.i492 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6693)
  %6694 = bitcast i64** %_DR5.i493 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6694)
  %6695 = bitcast i64** %_DR6.i494 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6695)
  %6696 = bitcast i64** %_DR7.i495 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6696)
  %6697 = bitcast i64** %CR0.i496 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6697)
  %6698 = bitcast i64** %CR1.i497 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6698)
  %6699 = bitcast i64** %CR2.i498 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6699)
  %6700 = bitcast i64** %CR3.i499 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6700)
  %6701 = bitcast i64** %CR4.i500 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6701)
  %6702 = bitcast i64** %CR8.i501 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %6702)
  %6703 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6704 = load i64, i64* %RBP
  %6705 = sub i64 %6704, 288
  %6706 = load i64, i64* %PC
  %6707 = add i64 %6706, 8
  store i64 %6707, i64* %PC
  %6708 = inttoptr i64 %6705 to double*
  %6709 = load double, double* %6708
  %6710 = bitcast i8* %6703 to double*
  store double %6709, double* %6710, align 1, !tbaa !2432
  %6711 = getelementptr inbounds i8, i8* %6703, i64 8
  %6712 = bitcast i8* %6711 to double*
  store double 0.000000e+00, double* %6712, align 1, !tbaa !2432
  %6713 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6714 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %6715 = bitcast %union.vec128_t* %XMM0 to i8*
  %6716 = load i64, i64* %PC
  %6717 = add i64 %6716, 4
  store i64 %6717, i64* %PC
  %6718 = bitcast i8* %6714 to double*
  %6719 = load double, double* %6718, align 1
  %6720 = getelementptr inbounds i8, i8* %6714, i64 8
  %6721 = bitcast i8* %6720 to i64*
  %6722 = load i64, i64* %6721, align 1
  %6723 = bitcast i8* %6715 to double*
  %6724 = load double, double* %6723, align 1
  %6725 = fmul double %6719, %6724
  %6726 = bitcast i8* %6713 to double*
  store double %6725, double* %6726, align 1, !tbaa !2432
  %6727 = getelementptr inbounds i8, i8* %6713, i64 8
  %6728 = bitcast i8* %6727 to i64*
  store i64 %6722, i64* %6728, align 1, !tbaa !2432
  %6729 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %6730 = load i64, i64* %RBP
  %6731 = sub i64 %6730, 152
  %6732 = load i64, i64* %PC
  %6733 = add i64 %6732, 8
  store i64 %6733, i64* %PC
  %6734 = inttoptr i64 %6731 to double*
  %6735 = load double, double* %6734
  %6736 = bitcast i8* %6729 to double*
  store double %6735, double* %6736, align 1, !tbaa !2432
  %6737 = getelementptr inbounds i8, i8* %6729, i64 8
  %6738 = bitcast i8* %6737 to double*
  store double 0.000000e+00, double* %6738, align 1, !tbaa !2432
  %6739 = load i64, i64* %RBP
  %6740 = sub i64 %6739, 296
  %6741 = bitcast %union.vec128_t* %XMM1 to i8*
  %6742 = load i64, i64* %PC
  %6743 = add i64 %6742, 8
  store i64 %6743, i64* %PC
  %6744 = bitcast i8* %6741 to double*
  %6745 = load double, double* %6744, align 1
  %6746 = inttoptr i64 %6740 to double*
  store double %6745, double* %6746
  %6747 = load i64, i64* %PC
  %6748 = sub i64 %6747, 2693
  %6749 = load i64, i64* %PC
  %6750 = add i64 %6749, 5
  %6751 = load i64, i64* %PC
  %6752 = add i64 %6751, 5
  store i64 %6752, i64* %PC
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6754 = load i64, i64* %6753, align 8, !tbaa !2428
  %6755 = add i64 %6754, -8
  %6756 = inttoptr i64 %6755 to i64*
  store i64 %6750, i64* %6756
  store i64 %6755, i64* %6753, align 8, !tbaa !2428
  %6757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6748, i64* %6757, align 8, !tbaa !2428
  %6758 = load i64, i64* %PC
  %6759 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6759)
  %6760 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6760)
  %6761 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6761)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i322)
  %6762 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6762)
  %6763 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6763)
  %6764 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6764)
  %6765 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6765)
  %6766 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6766)
  %6767 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6767)
  %6768 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6768)
  %6769 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6769)
  %6770 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6770)
  %6771 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6771)
  %6772 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6772)
  %6773 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6773)
  %6774 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6774)
  %6775 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6775)
  %6776 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6776)
  %6777 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6777)
  %6778 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6778)
  %6779 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6779)
  %6780 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6780)
  %6781 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6781)
  store %struct.State* %0, %struct.State** %state.i319, align 8, !noalias !2498
  store i64 %6758, i64* %curr_pc.i320, align 8, !noalias !2498
  store %struct.Memory* %6679, %struct.Memory** %memory.i321, align 8, !noalias !2498
  store i8 0, i8* %BRANCH_TAKEN.i322, align 1, !noalias !2498
  store i64 0, i64* %SS_BASE.i323, align 8, !noalias !2498
  store i64 0, i64* %ES_BASE.i324, align 8, !noalias !2498
  store i64 0, i64* %DS_BASE.i325, align 8, !noalias !2498
  store i64 0, i64* %CS_BASE.i326, align 8, !noalias !2498
  store %struct.State* %0, %struct.State** %STATE.i327, align 8, !noalias !2498
  store %struct.Memory* %6679, %struct.Memory** %MEMORY.i328, align 8, !noalias !2498
  %6782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6783 = getelementptr inbounds %struct.GPR, %struct.GPR* %6782, i32 0, i32 33
  %6784 = getelementptr inbounds %struct.Reg, %struct.Reg* %6783, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %6784 to i64*
  store i64 %6758, i64* %PC.i343, align 8, !alias.scope !2502, !noalias !2503
  %6785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6786 = getelementptr inbounds %struct.GPR, %struct.GPR* %6785, i32 0, i32 1
  %6787 = getelementptr inbounds %struct.Reg, %struct.Reg* %6786, i32 0, i32 0
  %6788 = bitcast %union.anon* %6787 to %struct.anon.2*
  %AH.i344 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6788, i32 0, i32 1
  %6789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6790 = getelementptr inbounds %struct.GPR, %struct.GPR* %6789, i32 0, i32 3
  %6791 = getelementptr inbounds %struct.Reg, %struct.Reg* %6790, i32 0, i32 0
  %6792 = bitcast %union.anon* %6791 to %struct.anon.2*
  %BH.i345 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6792, i32 0, i32 1
  %6793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6794 = getelementptr inbounds %struct.GPR, %struct.GPR* %6793, i32 0, i32 5
  %6795 = getelementptr inbounds %struct.Reg, %struct.Reg* %6794, i32 0, i32 0
  %6796 = bitcast %union.anon* %6795 to %struct.anon.2*
  %CH.i346 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6796, i32 0, i32 1
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6798 = getelementptr inbounds %struct.GPR, %struct.GPR* %6797, i32 0, i32 7
  %6799 = getelementptr inbounds %struct.Reg, %struct.Reg* %6798, i32 0, i32 0
  %6800 = bitcast %union.anon* %6799 to %struct.anon.2*
  %DH.i347 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6800, i32 0, i32 1
  %6801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6802 = getelementptr inbounds %struct.GPR, %struct.GPR* %6801, i32 0, i32 1
  %6803 = getelementptr inbounds %struct.Reg, %struct.Reg* %6802, i32 0, i32 0
  %6804 = bitcast %union.anon* %6803 to %struct.anon.2*
  %AL.i348 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6804, i32 0, i32 0
  %6805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6806 = getelementptr inbounds %struct.GPR, %struct.GPR* %6805, i32 0, i32 3
  %6807 = getelementptr inbounds %struct.Reg, %struct.Reg* %6806, i32 0, i32 0
  %6808 = bitcast %union.anon* %6807 to %struct.anon.2*
  %BL.i349 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6808, i32 0, i32 0
  %6809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6810 = getelementptr inbounds %struct.GPR, %struct.GPR* %6809, i32 0, i32 5
  %6811 = getelementptr inbounds %struct.Reg, %struct.Reg* %6810, i32 0, i32 0
  %6812 = bitcast %union.anon* %6811 to %struct.anon.2*
  %CL.i350 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6812, i32 0, i32 0
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6814 = getelementptr inbounds %struct.GPR, %struct.GPR* %6813, i32 0, i32 7
  %6815 = getelementptr inbounds %struct.Reg, %struct.Reg* %6814, i32 0, i32 0
  %6816 = bitcast %union.anon* %6815 to %struct.anon.2*
  %DL.i351 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6816, i32 0, i32 0
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6818 = getelementptr inbounds %struct.GPR, %struct.GPR* %6817, i32 0, i32 9
  %6819 = getelementptr inbounds %struct.Reg, %struct.Reg* %6818, i32 0, i32 0
  %6820 = bitcast %union.anon* %6819 to %struct.anon.2*
  %SIL.i352 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6820, i32 0, i32 0
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6822 = getelementptr inbounds %struct.GPR, %struct.GPR* %6821, i32 0, i32 11
  %6823 = getelementptr inbounds %struct.Reg, %struct.Reg* %6822, i32 0, i32 0
  %6824 = bitcast %union.anon* %6823 to %struct.anon.2*
  %DIL.i353 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6824, i32 0, i32 0
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6826 = getelementptr inbounds %struct.GPR, %struct.GPR* %6825, i32 0, i32 13
  %6827 = getelementptr inbounds %struct.Reg, %struct.Reg* %6826, i32 0, i32 0
  %6828 = bitcast %union.anon* %6827 to %struct.anon.2*
  %SPL.i354 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6828, i32 0, i32 0
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6830 = getelementptr inbounds %struct.GPR, %struct.GPR* %6829, i32 0, i32 15
  %6831 = getelementptr inbounds %struct.Reg, %struct.Reg* %6830, i32 0, i32 0
  %6832 = bitcast %union.anon* %6831 to %struct.anon.2*
  %BPL.i355 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6832, i32 0, i32 0
  %6833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6834 = getelementptr inbounds %struct.GPR, %struct.GPR* %6833, i32 0, i32 17
  %6835 = getelementptr inbounds %struct.Reg, %struct.Reg* %6834, i32 0, i32 0
  %6836 = bitcast %union.anon* %6835 to %struct.anon.2*
  %R8B.i356 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6836, i32 0, i32 0
  %6837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6838 = getelementptr inbounds %struct.GPR, %struct.GPR* %6837, i32 0, i32 19
  %6839 = getelementptr inbounds %struct.Reg, %struct.Reg* %6838, i32 0, i32 0
  %6840 = bitcast %union.anon* %6839 to %struct.anon.2*
  %R9B.i357 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6840, i32 0, i32 0
  %6841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6842 = getelementptr inbounds %struct.GPR, %struct.GPR* %6841, i32 0, i32 21
  %6843 = getelementptr inbounds %struct.Reg, %struct.Reg* %6842, i32 0, i32 0
  %6844 = bitcast %union.anon* %6843 to %struct.anon.2*
  %R10B.i358 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6844, i32 0, i32 0
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 23
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %6848 = bitcast %union.anon* %6847 to %struct.anon.2*
  %R11B.i359 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6848, i32 0, i32 0
  %6849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6850 = getelementptr inbounds %struct.GPR, %struct.GPR* %6849, i32 0, i32 25
  %6851 = getelementptr inbounds %struct.Reg, %struct.Reg* %6850, i32 0, i32 0
  %6852 = bitcast %union.anon* %6851 to %struct.anon.2*
  %R12B.i360 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6852, i32 0, i32 0
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6854 = getelementptr inbounds %struct.GPR, %struct.GPR* %6853, i32 0, i32 27
  %6855 = getelementptr inbounds %struct.Reg, %struct.Reg* %6854, i32 0, i32 0
  %6856 = bitcast %union.anon* %6855 to %struct.anon.2*
  %R13B.i361 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6856, i32 0, i32 0
  %6857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6858 = getelementptr inbounds %struct.GPR, %struct.GPR* %6857, i32 0, i32 29
  %6859 = getelementptr inbounds %struct.Reg, %struct.Reg* %6858, i32 0, i32 0
  %6860 = bitcast %union.anon* %6859 to %struct.anon.2*
  %R14B.i362 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6860, i32 0, i32 0
  %6861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6862 = getelementptr inbounds %struct.GPR, %struct.GPR* %6861, i32 0, i32 31
  %6863 = getelementptr inbounds %struct.Reg, %struct.Reg* %6862, i32 0, i32 0
  %6864 = bitcast %union.anon* %6863 to %struct.anon.2*
  %R15B.i363 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6864, i32 0, i32 0
  %6865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6866 = getelementptr inbounds %struct.GPR, %struct.GPR* %6865, i32 0, i32 1
  %6867 = getelementptr inbounds %struct.Reg, %struct.Reg* %6866, i32 0, i32 0
  %AX.i364 = bitcast %union.anon* %6867 to i16*
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6869 = getelementptr inbounds %struct.GPR, %struct.GPR* %6868, i32 0, i32 3
  %6870 = getelementptr inbounds %struct.Reg, %struct.Reg* %6869, i32 0, i32 0
  %BX.i365 = bitcast %union.anon* %6870 to i16*
  %6871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6872 = getelementptr inbounds %struct.GPR, %struct.GPR* %6871, i32 0, i32 5
  %6873 = getelementptr inbounds %struct.Reg, %struct.Reg* %6872, i32 0, i32 0
  %CX.i366 = bitcast %union.anon* %6873 to i16*
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6875 = getelementptr inbounds %struct.GPR, %struct.GPR* %6874, i32 0, i32 7
  %6876 = getelementptr inbounds %struct.Reg, %struct.Reg* %6875, i32 0, i32 0
  %DX.i367 = bitcast %union.anon* %6876 to i16*
  %6877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6878 = getelementptr inbounds %struct.GPR, %struct.GPR* %6877, i32 0, i32 9
  %6879 = getelementptr inbounds %struct.Reg, %struct.Reg* %6878, i32 0, i32 0
  %SI.i368 = bitcast %union.anon* %6879 to i16*
  %6880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6881 = getelementptr inbounds %struct.GPR, %struct.GPR* %6880, i32 0, i32 11
  %6882 = getelementptr inbounds %struct.Reg, %struct.Reg* %6881, i32 0, i32 0
  %DI.i369 = bitcast %union.anon* %6882 to i16*
  %6883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6884 = getelementptr inbounds %struct.GPR, %struct.GPR* %6883, i32 0, i32 13
  %6885 = getelementptr inbounds %struct.Reg, %struct.Reg* %6884, i32 0, i32 0
  %SP.i370 = bitcast %union.anon* %6885 to i16*
  %6886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6887 = getelementptr inbounds %struct.GPR, %struct.GPR* %6886, i32 0, i32 15
  %6888 = getelementptr inbounds %struct.Reg, %struct.Reg* %6887, i32 0, i32 0
  %BP.i371 = bitcast %union.anon* %6888 to i16*
  %6889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6890 = getelementptr inbounds %struct.GPR, %struct.GPR* %6889, i32 0, i32 17
  %6891 = getelementptr inbounds %struct.Reg, %struct.Reg* %6890, i32 0, i32 0
  %R8W.i372 = bitcast %union.anon* %6891 to i16*
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6893 = getelementptr inbounds %struct.GPR, %struct.GPR* %6892, i32 0, i32 19
  %6894 = getelementptr inbounds %struct.Reg, %struct.Reg* %6893, i32 0, i32 0
  %R9W.i373 = bitcast %union.anon* %6894 to i16*
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6896 = getelementptr inbounds %struct.GPR, %struct.GPR* %6895, i32 0, i32 21
  %6897 = getelementptr inbounds %struct.Reg, %struct.Reg* %6896, i32 0, i32 0
  %R10W.i374 = bitcast %union.anon* %6897 to i16*
  %6898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6899 = getelementptr inbounds %struct.GPR, %struct.GPR* %6898, i32 0, i32 23
  %6900 = getelementptr inbounds %struct.Reg, %struct.Reg* %6899, i32 0, i32 0
  %R11W.i375 = bitcast %union.anon* %6900 to i16*
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6902 = getelementptr inbounds %struct.GPR, %struct.GPR* %6901, i32 0, i32 25
  %6903 = getelementptr inbounds %struct.Reg, %struct.Reg* %6902, i32 0, i32 0
  %R12W.i376 = bitcast %union.anon* %6903 to i16*
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6905 = getelementptr inbounds %struct.GPR, %struct.GPR* %6904, i32 0, i32 27
  %6906 = getelementptr inbounds %struct.Reg, %struct.Reg* %6905, i32 0, i32 0
  %R13W.i377 = bitcast %union.anon* %6906 to i16*
  %6907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6908 = getelementptr inbounds %struct.GPR, %struct.GPR* %6907, i32 0, i32 29
  %6909 = getelementptr inbounds %struct.Reg, %struct.Reg* %6908, i32 0, i32 0
  %R14W.i378 = bitcast %union.anon* %6909 to i16*
  %6910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6911 = getelementptr inbounds %struct.GPR, %struct.GPR* %6910, i32 0, i32 31
  %6912 = getelementptr inbounds %struct.Reg, %struct.Reg* %6911, i32 0, i32 0
  %R15W.i379 = bitcast %union.anon* %6912 to i16*
  %6913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6914 = getelementptr inbounds %struct.GPR, %struct.GPR* %6913, i32 0, i32 33
  %6915 = getelementptr inbounds %struct.Reg, %struct.Reg* %6914, i32 0, i32 0
  %IP.i380 = bitcast %union.anon* %6915 to i16*
  %6916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6917 = getelementptr inbounds %struct.GPR, %struct.GPR* %6916, i32 0, i32 1
  %6918 = getelementptr inbounds %struct.Reg, %struct.Reg* %6917, i32 0, i32 0
  %EAX.i381 = bitcast %union.anon* %6918 to i32*
  %6919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6920 = getelementptr inbounds %struct.GPR, %struct.GPR* %6919, i32 0, i32 3
  %6921 = getelementptr inbounds %struct.Reg, %struct.Reg* %6920, i32 0, i32 0
  %EBX.i382 = bitcast %union.anon* %6921 to i32*
  %6922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6923 = getelementptr inbounds %struct.GPR, %struct.GPR* %6922, i32 0, i32 5
  %6924 = getelementptr inbounds %struct.Reg, %struct.Reg* %6923, i32 0, i32 0
  %ECX.i383 = bitcast %union.anon* %6924 to i32*
  %6925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6926 = getelementptr inbounds %struct.GPR, %struct.GPR* %6925, i32 0, i32 7
  %6927 = getelementptr inbounds %struct.Reg, %struct.Reg* %6926, i32 0, i32 0
  %EDX.i384 = bitcast %union.anon* %6927 to i32*
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6929 = getelementptr inbounds %struct.GPR, %struct.GPR* %6928, i32 0, i32 9
  %6930 = getelementptr inbounds %struct.Reg, %struct.Reg* %6929, i32 0, i32 0
  %ESI.i385 = bitcast %union.anon* %6930 to i32*
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6932 = getelementptr inbounds %struct.GPR, %struct.GPR* %6931, i32 0, i32 11
  %6933 = getelementptr inbounds %struct.Reg, %struct.Reg* %6932, i32 0, i32 0
  %EDI.i386 = bitcast %union.anon* %6933 to i32*
  %6934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6935 = getelementptr inbounds %struct.GPR, %struct.GPR* %6934, i32 0, i32 13
  %6936 = getelementptr inbounds %struct.Reg, %struct.Reg* %6935, i32 0, i32 0
  %ESP.i387 = bitcast %union.anon* %6936 to i32*
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6938 = getelementptr inbounds %struct.GPR, %struct.GPR* %6937, i32 0, i32 15
  %6939 = getelementptr inbounds %struct.Reg, %struct.Reg* %6938, i32 0, i32 0
  %EBP.i388 = bitcast %union.anon* %6939 to i32*
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6941 = getelementptr inbounds %struct.GPR, %struct.GPR* %6940, i32 0, i32 33
  %6942 = getelementptr inbounds %struct.Reg, %struct.Reg* %6941, i32 0, i32 0
  %EIP.i389 = bitcast %union.anon* %6942 to i32*
  %6943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6944 = getelementptr inbounds %struct.GPR, %struct.GPR* %6943, i32 0, i32 17
  %6945 = getelementptr inbounds %struct.Reg, %struct.Reg* %6944, i32 0, i32 0
  %R8D.i390 = bitcast %union.anon* %6945 to i32*
  %6946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6947 = getelementptr inbounds %struct.GPR, %struct.GPR* %6946, i32 0, i32 19
  %6948 = getelementptr inbounds %struct.Reg, %struct.Reg* %6947, i32 0, i32 0
  %R9D.i391 = bitcast %union.anon* %6948 to i32*
  %6949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6950 = getelementptr inbounds %struct.GPR, %struct.GPR* %6949, i32 0, i32 21
  %6951 = getelementptr inbounds %struct.Reg, %struct.Reg* %6950, i32 0, i32 0
  %R10D.i392 = bitcast %union.anon* %6951 to i32*
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6953 = getelementptr inbounds %struct.GPR, %struct.GPR* %6952, i32 0, i32 23
  %6954 = getelementptr inbounds %struct.Reg, %struct.Reg* %6953, i32 0, i32 0
  %R11D.i393 = bitcast %union.anon* %6954 to i32*
  %6955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6956 = getelementptr inbounds %struct.GPR, %struct.GPR* %6955, i32 0, i32 25
  %6957 = getelementptr inbounds %struct.Reg, %struct.Reg* %6956, i32 0, i32 0
  %R12D.i394 = bitcast %union.anon* %6957 to i32*
  %6958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6959 = getelementptr inbounds %struct.GPR, %struct.GPR* %6958, i32 0, i32 27
  %6960 = getelementptr inbounds %struct.Reg, %struct.Reg* %6959, i32 0, i32 0
  %R13D.i395 = bitcast %union.anon* %6960 to i32*
  %6961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6962 = getelementptr inbounds %struct.GPR, %struct.GPR* %6961, i32 0, i32 29
  %6963 = getelementptr inbounds %struct.Reg, %struct.Reg* %6962, i32 0, i32 0
  %R14D.i396 = bitcast %union.anon* %6963 to i32*
  %6964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6965 = getelementptr inbounds %struct.GPR, %struct.GPR* %6964, i32 0, i32 31
  %6966 = getelementptr inbounds %struct.Reg, %struct.Reg* %6965, i32 0, i32 0
  %R15D.i397 = bitcast %union.anon* %6966 to i32*
  %6967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6968 = getelementptr inbounds %struct.GPR, %struct.GPR* %6967, i32 0, i32 1
  %6969 = getelementptr inbounds %struct.Reg, %struct.Reg* %6968, i32 0, i32 0
  %RAX.i398 = bitcast %union.anon* %6969 to i64*
  %6970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6971 = getelementptr inbounds %struct.GPR, %struct.GPR* %6970, i32 0, i32 3
  %6972 = getelementptr inbounds %struct.Reg, %struct.Reg* %6971, i32 0, i32 0
  %RBX.i399 = bitcast %union.anon* %6972 to i64*
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6974 = getelementptr inbounds %struct.GPR, %struct.GPR* %6973, i32 0, i32 5
  %6975 = getelementptr inbounds %struct.Reg, %struct.Reg* %6974, i32 0, i32 0
  %RCX.i400 = bitcast %union.anon* %6975 to i64*
  %6976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6977 = getelementptr inbounds %struct.GPR, %struct.GPR* %6976, i32 0, i32 7
  %6978 = getelementptr inbounds %struct.Reg, %struct.Reg* %6977, i32 0, i32 0
  %RDX.i401 = bitcast %union.anon* %6978 to i64*
  %6979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6980 = getelementptr inbounds %struct.GPR, %struct.GPR* %6979, i32 0, i32 9
  %6981 = getelementptr inbounds %struct.Reg, %struct.Reg* %6980, i32 0, i32 0
  %RSI.i402 = bitcast %union.anon* %6981 to i64*
  %6982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6983 = getelementptr inbounds %struct.GPR, %struct.GPR* %6982, i32 0, i32 11
  %6984 = getelementptr inbounds %struct.Reg, %struct.Reg* %6983, i32 0, i32 0
  %RDI.i403 = bitcast %union.anon* %6984 to i64*
  %6985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6986 = getelementptr inbounds %struct.GPR, %struct.GPR* %6985, i32 0, i32 13
  %6987 = getelementptr inbounds %struct.Reg, %struct.Reg* %6986, i32 0, i32 0
  %RSP.i404 = bitcast %union.anon* %6987 to i64*
  %6988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6989 = getelementptr inbounds %struct.GPR, %struct.GPR* %6988, i32 0, i32 15
  %6990 = getelementptr inbounds %struct.Reg, %struct.Reg* %6989, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %6990 to i64*
  %6991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6992 = getelementptr inbounds %struct.GPR, %struct.GPR* %6991, i32 0, i32 17
  %6993 = getelementptr inbounds %struct.Reg, %struct.Reg* %6992, i32 0, i32 0
  %R8.i406 = bitcast %union.anon* %6993 to i64*
  %6994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6995 = getelementptr inbounds %struct.GPR, %struct.GPR* %6994, i32 0, i32 19
  %6996 = getelementptr inbounds %struct.Reg, %struct.Reg* %6995, i32 0, i32 0
  %R9.i407 = bitcast %union.anon* %6996 to i64*
  %6997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6998 = getelementptr inbounds %struct.GPR, %struct.GPR* %6997, i32 0, i32 21
  %6999 = getelementptr inbounds %struct.Reg, %struct.Reg* %6998, i32 0, i32 0
  %R10.i408 = bitcast %union.anon* %6999 to i64*
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7001 = getelementptr inbounds %struct.GPR, %struct.GPR* %7000, i32 0, i32 23
  %7002 = getelementptr inbounds %struct.Reg, %struct.Reg* %7001, i32 0, i32 0
  %R11.i409 = bitcast %union.anon* %7002 to i64*
  %7003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7004 = getelementptr inbounds %struct.GPR, %struct.GPR* %7003, i32 0, i32 25
  %7005 = getelementptr inbounds %struct.Reg, %struct.Reg* %7004, i32 0, i32 0
  %R12.i410 = bitcast %union.anon* %7005 to i64*
  %7006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7007 = getelementptr inbounds %struct.GPR, %struct.GPR* %7006, i32 0, i32 27
  %7008 = getelementptr inbounds %struct.Reg, %struct.Reg* %7007, i32 0, i32 0
  %R13.i411 = bitcast %union.anon* %7008 to i64*
  %7009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7010 = getelementptr inbounds %struct.GPR, %struct.GPR* %7009, i32 0, i32 29
  %7011 = getelementptr inbounds %struct.Reg, %struct.Reg* %7010, i32 0, i32 0
  %R14.i412 = bitcast %union.anon* %7011 to i64*
  %7012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7013 = getelementptr inbounds %struct.GPR, %struct.GPR* %7012, i32 0, i32 31
  %7014 = getelementptr inbounds %struct.Reg, %struct.Reg* %7013, i32 0, i32 0
  %R15.i413 = bitcast %union.anon* %7014 to i64*
  %7015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7016 = getelementptr inbounds %struct.GPR, %struct.GPR* %7015, i32 0, i32 33
  %7017 = getelementptr inbounds %struct.Reg, %struct.Reg* %7016, i32 0, i32 0
  %RIP.i414 = bitcast %union.anon* %7017 to i64*
  %7018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7019 = getelementptr inbounds %struct.Segments, %struct.Segments* %7018, i32 0, i32 1
  %SS.i415 = bitcast %union.SegmentSelector* %7019 to i16*
  %7020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7021 = getelementptr inbounds %struct.Segments, %struct.Segments* %7020, i32 0, i32 3
  %ES.i416 = bitcast %union.SegmentSelector* %7021 to i16*
  %7022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7023 = getelementptr inbounds %struct.Segments, %struct.Segments* %7022, i32 0, i32 5
  %GS.i417 = bitcast %union.SegmentSelector* %7023 to i16*
  %7024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7025 = getelementptr inbounds %struct.Segments, %struct.Segments* %7024, i32 0, i32 7
  %FS.i418 = bitcast %union.SegmentSelector* %7025 to i16*
  %7026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7027 = getelementptr inbounds %struct.Segments, %struct.Segments* %7026, i32 0, i32 9
  %DS.i419 = bitcast %union.SegmentSelector* %7027 to i16*
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7029 = getelementptr inbounds %struct.Segments, %struct.Segments* %7028, i32 0, i32 11
  %CS.i420 = bitcast %union.SegmentSelector* %7029 to i16*
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %7031 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %7030, i32 0, i32 5
  %7032 = getelementptr inbounds %struct.Reg, %struct.Reg* %7031, i32 0, i32 0
  %GS_BASE.i421 = bitcast %union.anon* %7032 to i64*
  %7033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %7034 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %7033, i32 0, i32 7
  %7035 = getelementptr inbounds %struct.Reg, %struct.Reg* %7034, i32 0, i32 0
  %FS_BASE.i422 = bitcast %union.anon* %7035 to i64*
  %7036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7037 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7036, i64 0, i64 0
  %YMM0.i423 = bitcast %union.VectorReg* %7037 to %"class.std::bitset"*
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7039 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7038, i64 0, i64 1
  %YMM1.i424 = bitcast %union.VectorReg* %7039 to %"class.std::bitset"*
  %7040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7041 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7040, i64 0, i64 2
  %YMM2.i425 = bitcast %union.VectorReg* %7041 to %"class.std::bitset"*
  %7042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7043 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7042, i64 0, i64 3
  %YMM3.i426 = bitcast %union.VectorReg* %7043 to %"class.std::bitset"*
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7045 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7044, i64 0, i64 4
  %YMM4.i427 = bitcast %union.VectorReg* %7045 to %"class.std::bitset"*
  %7046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7047 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7046, i64 0, i64 5
  %YMM5.i428 = bitcast %union.VectorReg* %7047 to %"class.std::bitset"*
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7049 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7048, i64 0, i64 6
  %YMM6.i429 = bitcast %union.VectorReg* %7049 to %"class.std::bitset"*
  %7050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7051 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7050, i64 0, i64 7
  %YMM7.i430 = bitcast %union.VectorReg* %7051 to %"class.std::bitset"*
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7053 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7052, i64 0, i64 8
  %YMM8.i431 = bitcast %union.VectorReg* %7053 to %"class.std::bitset"*
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7055 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7054, i64 0, i64 9
  %YMM9.i432 = bitcast %union.VectorReg* %7055 to %"class.std::bitset"*
  %7056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7057 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7056, i64 0, i64 10
  %YMM10.i433 = bitcast %union.VectorReg* %7057 to %"class.std::bitset"*
  %7058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7059 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7058, i64 0, i64 11
  %YMM11.i434 = bitcast %union.VectorReg* %7059 to %"class.std::bitset"*
  %7060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7061 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7060, i64 0, i64 12
  %YMM12.i435 = bitcast %union.VectorReg* %7061 to %"class.std::bitset"*
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7063 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7062, i64 0, i64 13
  %YMM13.i436 = bitcast %union.VectorReg* %7063 to %"class.std::bitset"*
  %7064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7065 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7064, i64 0, i64 14
  %YMM14.i437 = bitcast %union.VectorReg* %7065 to %"class.std::bitset"*
  %7066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7067 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7066, i64 0, i64 15
  %YMM15.i438 = bitcast %union.VectorReg* %7067 to %"class.std::bitset"*
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7069 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7068, i64 0, i64 0
  %XMM0.i439 = bitcast %union.VectorReg* %7069 to %union.vec128_t*
  %7070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7071 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7070, i64 0, i64 1
  %XMM1.i440 = bitcast %union.VectorReg* %7071 to %union.vec128_t*
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7073 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7072, i64 0, i64 2
  %XMM2.i441 = bitcast %union.VectorReg* %7073 to %union.vec128_t*
  %7074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7075 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7074, i64 0, i64 3
  %XMM3.i442 = bitcast %union.VectorReg* %7075 to %union.vec128_t*
  %7076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7077 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7076, i64 0, i64 4
  %XMM4.i443 = bitcast %union.VectorReg* %7077 to %union.vec128_t*
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7079 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7078, i64 0, i64 5
  %XMM5.i444 = bitcast %union.VectorReg* %7079 to %union.vec128_t*
  %7080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7081 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7080, i64 0, i64 6
  %XMM6.i445 = bitcast %union.VectorReg* %7081 to %union.vec128_t*
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7083 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7082, i64 0, i64 7
  %XMM7.i446 = bitcast %union.VectorReg* %7083 to %union.vec128_t*
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7085 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7084, i64 0, i64 8
  %XMM8.i447 = bitcast %union.VectorReg* %7085 to %union.vec128_t*
  %7086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7087 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7086, i64 0, i64 9
  %XMM9.i448 = bitcast %union.VectorReg* %7087 to %union.vec128_t*
  %7088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7089 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7088, i64 0, i64 10
  %XMM10.i449 = bitcast %union.VectorReg* %7089 to %union.vec128_t*
  %7090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7091 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7090, i64 0, i64 11
  %XMM11.i450 = bitcast %union.VectorReg* %7091 to %union.vec128_t*
  %7092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7093 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7092, i64 0, i64 12
  %XMM12.i451 = bitcast %union.VectorReg* %7093 to %union.vec128_t*
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7095 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7094, i64 0, i64 13
  %XMM13.i452 = bitcast %union.VectorReg* %7095 to %union.vec128_t*
  %7096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7097 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7096, i64 0, i64 14
  %XMM14.i453 = bitcast %union.VectorReg* %7097 to %union.vec128_t*
  %7098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7099 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7098, i64 0, i64 15
  %XMM15.i454 = bitcast %union.VectorReg* %7099 to %union.vec128_t*
  %7100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7101 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7100, i32 0, i32 0
  %7102 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7101, i64 0, i64 0
  %ST0.i455 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7102, i32 0, i32 1
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7104 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7103, i32 0, i32 0
  %7105 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7104, i64 0, i64 1
  %ST1.i456 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7105, i32 0, i32 1
  %7106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7107 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7106, i32 0, i32 0
  %7108 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7107, i64 0, i64 2
  %ST2.i457 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7108, i32 0, i32 1
  %7109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7110 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7109, i32 0, i32 0
  %7111 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7110, i64 0, i64 3
  %ST3.i458 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7111, i32 0, i32 1
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7113 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7112, i32 0, i32 0
  %7114 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7113, i64 0, i64 4
  %ST4.i459 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7114, i32 0, i32 1
  %7115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7116 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7115, i32 0, i32 0
  %7117 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7116, i64 0, i64 5
  %ST5.i460 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7117, i32 0, i32 1
  %7118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7119 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7118, i32 0, i32 0
  %7120 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7119, i64 0, i64 6
  %ST6.i461 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7120, i32 0, i32 1
  %7121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7122 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7121, i32 0, i32 0
  %7123 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7122, i64 0, i64 7
  %ST7.i462 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7123, i32 0, i32 1
  %7124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7125 = getelementptr inbounds %struct.MMX, %struct.MMX* %7124, i32 0, i32 0
  %7126 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7125, i64 0, i64 0
  %7127 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7126, i32 0, i32 1
  %7128 = bitcast %union.vec64_t* %7127 to %struct.uint64v1_t*
  %7129 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7128, i32 0, i32 0
  %MM0.i463 = getelementptr inbounds [1 x i64], [1 x i64]* %7129, i64 0, i64 0
  %7130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7131 = getelementptr inbounds %struct.MMX, %struct.MMX* %7130, i32 0, i32 0
  %7132 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7131, i64 0, i64 1
  %7133 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7132, i32 0, i32 1
  %7134 = bitcast %union.vec64_t* %7133 to %struct.uint64v1_t*
  %7135 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7134, i32 0, i32 0
  %MM1.i464 = getelementptr inbounds [1 x i64], [1 x i64]* %7135, i64 0, i64 0
  %7136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7137 = getelementptr inbounds %struct.MMX, %struct.MMX* %7136, i32 0, i32 0
  %7138 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7137, i64 0, i64 2
  %7139 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7138, i32 0, i32 1
  %7140 = bitcast %union.vec64_t* %7139 to %struct.uint64v1_t*
  %7141 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7140, i32 0, i32 0
  %MM2.i465 = getelementptr inbounds [1 x i64], [1 x i64]* %7141, i64 0, i64 0
  %7142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7143 = getelementptr inbounds %struct.MMX, %struct.MMX* %7142, i32 0, i32 0
  %7144 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7143, i64 0, i64 3
  %7145 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7144, i32 0, i32 1
  %7146 = bitcast %union.vec64_t* %7145 to %struct.uint64v1_t*
  %7147 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7146, i32 0, i32 0
  %MM3.i466 = getelementptr inbounds [1 x i64], [1 x i64]* %7147, i64 0, i64 0
  %7148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7149 = getelementptr inbounds %struct.MMX, %struct.MMX* %7148, i32 0, i32 0
  %7150 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7149, i64 0, i64 4
  %7151 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7150, i32 0, i32 1
  %7152 = bitcast %union.vec64_t* %7151 to %struct.uint64v1_t*
  %7153 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7152, i32 0, i32 0
  %MM4.i467 = getelementptr inbounds [1 x i64], [1 x i64]* %7153, i64 0, i64 0
  %7154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7155 = getelementptr inbounds %struct.MMX, %struct.MMX* %7154, i32 0, i32 0
  %7156 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7155, i64 0, i64 5
  %7157 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7156, i32 0, i32 1
  %7158 = bitcast %union.vec64_t* %7157 to %struct.uint64v1_t*
  %7159 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7158, i32 0, i32 0
  %MM5.i468 = getelementptr inbounds [1 x i64], [1 x i64]* %7159, i64 0, i64 0
  %7160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7161 = getelementptr inbounds %struct.MMX, %struct.MMX* %7160, i32 0, i32 0
  %7162 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7161, i64 0, i64 6
  %7163 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7162, i32 0, i32 1
  %7164 = bitcast %union.vec64_t* %7163 to %struct.uint64v1_t*
  %7165 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7164, i32 0, i32 0
  %MM6.i469 = getelementptr inbounds [1 x i64], [1 x i64]* %7165, i64 0, i64 0
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7167 = getelementptr inbounds %struct.MMX, %struct.MMX* %7166, i32 0, i32 0
  %7168 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7167, i64 0, i64 7
  %7169 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7168, i32 0, i32 1
  %7170 = bitcast %union.vec64_t* %7169 to %struct.uint64v1_t*
  %7171 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7170, i32 0, i32 0
  %MM7.i470 = getelementptr inbounds [1 x i64], [1 x i64]* %7171, i64 0, i64 0
  %7172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i471 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7172, i32 0, i32 5
  %7173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i472 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7173, i32 0, i32 1
  %7174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i473 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7174, i32 0, i32 11
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i474 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7175, i32 0, i32 13
  %7176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i475 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7176, i32 0, i32 3
  %7177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i476 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7177, i32 0, i32 9
  %7178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i477 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7178, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i329, align 8, !noalias !2498
  store i64* @DR1, i64** %_DR1.i330, align 8, !noalias !2498
  store i64* @DR2, i64** %_DR2.i331, align 8, !noalias !2498
  store i64* @DR3, i64** %_DR3.i332, align 8, !noalias !2498
  store i64* @DR4, i64** %_DR4.i333, align 8, !noalias !2498
  store i64* @DR5, i64** %_DR5.i334, align 8, !noalias !2498
  store i64* @DR6, i64** %_DR6.i335, align 8, !noalias !2498
  store i64* @DR7, i64** %_DR7.i336, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i337, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i338, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i339, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i340, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i341, align 8, !noalias !2498
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i342, align 8, !noalias !2498
  %7179 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  %7180 = load double, double* %7179, !alias.scope !2502, !noalias !2503
  %7181 = load i64, i64* %RSP.i404, !alias.scope !2502, !noalias !2503
  %7182 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2498
  %7183 = inttoptr i64 %7181 to i64*
  %7184 = load i64, i64* %7183
  store i64 %7184, i64* %PC.i343, !alias.scope !2502, !noalias !2503
  %7185 = add i64 %7181, 8
  store i64 %7185, i64* %RSP.i404, !alias.scope !2502, !noalias !2503
  %7186 = call double @cos(double %7180)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i423, !alias.scope !2502, !noalias !2503
  %7187 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  store double %7186, double* %7187, !alias.scope !2502, !noalias !2503
  %7188 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2498
  %7189 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7189)
  %7190 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7190)
  %7191 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7191)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i322)
  %7192 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7192)
  %7193 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7193)
  %7194 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7194)
  %7195 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7195)
  %7196 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7196)
  %7197 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7197)
  %7198 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7198)
  %7199 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7199)
  %7200 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7200)
  %7201 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7201)
  %7202 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7202)
  %7203 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7203)
  %7204 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7204)
  %7205 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7205)
  %7206 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7206)
  %7207 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7207)
  %7208 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7208)
  %7209 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7209)
  %7210 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7210)
  %7211 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7211)
  %7212 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7213 = load i64, i64* %RBP
  %7214 = sub i64 %7213, 296
  %7215 = load i64, i64* %PC
  %7216 = add i64 %7215, 8
  store i64 %7216, i64* %PC
  %7217 = inttoptr i64 %7214 to double*
  %7218 = load double, double* %7217
  %7219 = bitcast i8* %7212 to double*
  store double %7218, double* %7219, align 1, !tbaa !2432
  %7220 = getelementptr inbounds i8, i8* %7212, i64 8
  %7221 = bitcast i8* %7220 to double*
  store double 0.000000e+00, double* %7221, align 1, !tbaa !2432
  %7222 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7223 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7224 = bitcast %union.vec128_t* %XMM0 to i8*
  %7225 = load i64, i64* %PC
  %7226 = add i64 %7225, 4
  store i64 %7226, i64* %PC
  %7227 = bitcast i8* %7223 to double*
  %7228 = load double, double* %7227, align 1
  %7229 = getelementptr inbounds i8, i8* %7223, i64 8
  %7230 = bitcast i8* %7229 to i64*
  %7231 = load i64, i64* %7230, align 1
  %7232 = bitcast i8* %7224 to double*
  %7233 = load double, double* %7232, align 1
  %7234 = fmul double %7228, %7233
  %7235 = bitcast i8* %7222 to double*
  store double %7234, double* %7235, align 1, !tbaa !2432
  %7236 = getelementptr inbounds i8, i8* %7222, i64 8
  %7237 = bitcast i8* %7236 to i64*
  store i64 %7231, i64* %7237, align 1, !tbaa !2432
  %7238 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7239 = load i64, i64* %RBP
  %7240 = sub i64 %7239, 144
  %7241 = load i64, i64* %PC
  %7242 = add i64 %7241, 8
  store i64 %7242, i64* %PC
  %7243 = inttoptr i64 %7240 to double*
  %7244 = load double, double* %7243
  %7245 = bitcast i8* %7238 to double*
  store double %7244, double* %7245, align 1, !tbaa !2432
  %7246 = getelementptr inbounds i8, i8* %7238, i64 8
  %7247 = bitcast i8* %7246 to double*
  store double 0.000000e+00, double* %7247, align 1, !tbaa !2432
  %7248 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7249 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7250 = load i64, i64* %RBP
  %7251 = sub i64 %7250, 152
  %7252 = load i64, i64* %PC
  %7253 = add i64 %7252, 8
  store i64 %7253, i64* %PC
  %7254 = bitcast i8* %7249 to double*
  %7255 = load double, double* %7254, align 1
  %7256 = getelementptr inbounds i8, i8* %7249, i64 8
  %7257 = bitcast i8* %7256 to i64*
  %7258 = load i64, i64* %7257, align 1
  %7259 = inttoptr i64 %7251 to double*
  %7260 = load double, double* %7259
  %7261 = fadd double %7255, %7260
  %7262 = bitcast i8* %7248 to double*
  store double %7261, double* %7262, align 1, !tbaa !2432
  %7263 = getelementptr inbounds i8, i8* %7248, i64 8
  %7264 = bitcast i8* %7263 to i64*
  store i64 %7258, i64* %7264, align 1, !tbaa !2432
  %7265 = load i64, i64* %RBP
  %7266 = sub i64 %7265, 304
  %7267 = bitcast %union.vec128_t* %XMM1 to i8*
  %7268 = load i64, i64* %PC
  %7269 = add i64 %7268, 8
  store i64 %7269, i64* %PC
  %7270 = bitcast i8* %7267 to double*
  %7271 = load double, double* %7270, align 1
  %7272 = inttoptr i64 %7266 to double*
  store double %7271, double* %7272
  %7273 = load i64, i64* %PC
  %7274 = sub i64 %7273, 2734
  %7275 = load i64, i64* %PC
  %7276 = add i64 %7275, 5
  %7277 = load i64, i64* %PC
  %7278 = add i64 %7277, 5
  store i64 %7278, i64* %PC
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7280 = load i64, i64* %7279, align 8, !tbaa !2428
  %7281 = add i64 %7280, -8
  %7282 = inttoptr i64 %7281 to i64*
  store i64 %7276, i64* %7282
  store i64 %7281, i64* %7279, align 8, !tbaa !2428
  %7283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7274, i64* %7283, align 8, !tbaa !2428
  %7284 = load i64, i64* %PC
  %7285 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7285)
  %7286 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7286)
  %7287 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7287)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i163)
  %7288 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7288)
  %7289 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7289)
  %7290 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7290)
  %7291 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7291)
  %7292 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7292)
  %7293 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7293)
  %7294 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7294)
  %7295 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7295)
  %7296 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7296)
  %7297 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7297)
  %7298 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7298)
  %7299 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7299)
  %7300 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7300)
  %7301 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7301)
  %7302 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7302)
  %7303 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7303)
  %7304 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7304)
  %7305 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7305)
  %7306 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7306)
  %7307 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7307)
  store %struct.State* %0, %struct.State** %state.i160, align 8, !noalias !2504
  store i64 %7284, i64* %curr_pc.i161, align 8, !noalias !2504
  store %struct.Memory* %7188, %struct.Memory** %memory.i162, align 8, !noalias !2504
  store i8 0, i8* %BRANCH_TAKEN.i163, align 1, !noalias !2504
  store i64 0, i64* %SS_BASE.i164, align 8, !noalias !2504
  store i64 0, i64* %ES_BASE.i165, align 8, !noalias !2504
  store i64 0, i64* %DS_BASE.i166, align 8, !noalias !2504
  store i64 0, i64* %CS_BASE.i167, align 8, !noalias !2504
  store %struct.State* %0, %struct.State** %STATE.i168, align 8, !noalias !2504
  store %struct.Memory* %7188, %struct.Memory** %MEMORY.i169, align 8, !noalias !2504
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7309 = getelementptr inbounds %struct.GPR, %struct.GPR* %7308, i32 0, i32 33
  %7310 = getelementptr inbounds %struct.Reg, %struct.Reg* %7309, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %7310 to i64*
  store i64 %7284, i64* %PC.i184, align 8, !alias.scope !2508, !noalias !2509
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7312 = getelementptr inbounds %struct.GPR, %struct.GPR* %7311, i32 0, i32 1
  %7313 = getelementptr inbounds %struct.Reg, %struct.Reg* %7312, i32 0, i32 0
  %7314 = bitcast %union.anon* %7313 to %struct.anon.2*
  %AH.i185 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7314, i32 0, i32 1
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7316 = getelementptr inbounds %struct.GPR, %struct.GPR* %7315, i32 0, i32 3
  %7317 = getelementptr inbounds %struct.Reg, %struct.Reg* %7316, i32 0, i32 0
  %7318 = bitcast %union.anon* %7317 to %struct.anon.2*
  %BH.i186 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7318, i32 0, i32 1
  %7319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7320 = getelementptr inbounds %struct.GPR, %struct.GPR* %7319, i32 0, i32 5
  %7321 = getelementptr inbounds %struct.Reg, %struct.Reg* %7320, i32 0, i32 0
  %7322 = bitcast %union.anon* %7321 to %struct.anon.2*
  %CH.i187 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7322, i32 0, i32 1
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7324 = getelementptr inbounds %struct.GPR, %struct.GPR* %7323, i32 0, i32 7
  %7325 = getelementptr inbounds %struct.Reg, %struct.Reg* %7324, i32 0, i32 0
  %7326 = bitcast %union.anon* %7325 to %struct.anon.2*
  %DH.i188 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7326, i32 0, i32 1
  %7327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7328 = getelementptr inbounds %struct.GPR, %struct.GPR* %7327, i32 0, i32 1
  %7329 = getelementptr inbounds %struct.Reg, %struct.Reg* %7328, i32 0, i32 0
  %7330 = bitcast %union.anon* %7329 to %struct.anon.2*
  %AL.i189 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7330, i32 0, i32 0
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7332 = getelementptr inbounds %struct.GPR, %struct.GPR* %7331, i32 0, i32 3
  %7333 = getelementptr inbounds %struct.Reg, %struct.Reg* %7332, i32 0, i32 0
  %7334 = bitcast %union.anon* %7333 to %struct.anon.2*
  %BL.i190 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7334, i32 0, i32 0
  %7335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7336 = getelementptr inbounds %struct.GPR, %struct.GPR* %7335, i32 0, i32 5
  %7337 = getelementptr inbounds %struct.Reg, %struct.Reg* %7336, i32 0, i32 0
  %7338 = bitcast %union.anon* %7337 to %struct.anon.2*
  %CL.i191 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7338, i32 0, i32 0
  %7339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7340 = getelementptr inbounds %struct.GPR, %struct.GPR* %7339, i32 0, i32 7
  %7341 = getelementptr inbounds %struct.Reg, %struct.Reg* %7340, i32 0, i32 0
  %7342 = bitcast %union.anon* %7341 to %struct.anon.2*
  %DL.i192 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7342, i32 0, i32 0
  %7343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7344 = getelementptr inbounds %struct.GPR, %struct.GPR* %7343, i32 0, i32 9
  %7345 = getelementptr inbounds %struct.Reg, %struct.Reg* %7344, i32 0, i32 0
  %7346 = bitcast %union.anon* %7345 to %struct.anon.2*
  %SIL.i193 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7346, i32 0, i32 0
  %7347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7348 = getelementptr inbounds %struct.GPR, %struct.GPR* %7347, i32 0, i32 11
  %7349 = getelementptr inbounds %struct.Reg, %struct.Reg* %7348, i32 0, i32 0
  %7350 = bitcast %union.anon* %7349 to %struct.anon.2*
  %DIL.i194 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7350, i32 0, i32 0
  %7351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7352 = getelementptr inbounds %struct.GPR, %struct.GPR* %7351, i32 0, i32 13
  %7353 = getelementptr inbounds %struct.Reg, %struct.Reg* %7352, i32 0, i32 0
  %7354 = bitcast %union.anon* %7353 to %struct.anon.2*
  %SPL.i195 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7354, i32 0, i32 0
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 15
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %7358 = bitcast %union.anon* %7357 to %struct.anon.2*
  %BPL.i196 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7358, i32 0, i32 0
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7360 = getelementptr inbounds %struct.GPR, %struct.GPR* %7359, i32 0, i32 17
  %7361 = getelementptr inbounds %struct.Reg, %struct.Reg* %7360, i32 0, i32 0
  %7362 = bitcast %union.anon* %7361 to %struct.anon.2*
  %R8B.i197 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7362, i32 0, i32 0
  %7363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7364 = getelementptr inbounds %struct.GPR, %struct.GPR* %7363, i32 0, i32 19
  %7365 = getelementptr inbounds %struct.Reg, %struct.Reg* %7364, i32 0, i32 0
  %7366 = bitcast %union.anon* %7365 to %struct.anon.2*
  %R9B.i198 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7366, i32 0, i32 0
  %7367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7368 = getelementptr inbounds %struct.GPR, %struct.GPR* %7367, i32 0, i32 21
  %7369 = getelementptr inbounds %struct.Reg, %struct.Reg* %7368, i32 0, i32 0
  %7370 = bitcast %union.anon* %7369 to %struct.anon.2*
  %R10B.i199 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7370, i32 0, i32 0
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 23
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %7374 = bitcast %union.anon* %7373 to %struct.anon.2*
  %R11B.i200 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7374, i32 0, i32 0
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7376 = getelementptr inbounds %struct.GPR, %struct.GPR* %7375, i32 0, i32 25
  %7377 = getelementptr inbounds %struct.Reg, %struct.Reg* %7376, i32 0, i32 0
  %7378 = bitcast %union.anon* %7377 to %struct.anon.2*
  %R12B.i201 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7378, i32 0, i32 0
  %7379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7380 = getelementptr inbounds %struct.GPR, %struct.GPR* %7379, i32 0, i32 27
  %7381 = getelementptr inbounds %struct.Reg, %struct.Reg* %7380, i32 0, i32 0
  %7382 = bitcast %union.anon* %7381 to %struct.anon.2*
  %R13B.i202 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7382, i32 0, i32 0
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 29
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %7386 = bitcast %union.anon* %7385 to %struct.anon.2*
  %R14B.i203 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7386, i32 0, i32 0
  %7387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7388 = getelementptr inbounds %struct.GPR, %struct.GPR* %7387, i32 0, i32 31
  %7389 = getelementptr inbounds %struct.Reg, %struct.Reg* %7388, i32 0, i32 0
  %7390 = bitcast %union.anon* %7389 to %struct.anon.2*
  %R15B.i204 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7390, i32 0, i32 0
  %7391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7392 = getelementptr inbounds %struct.GPR, %struct.GPR* %7391, i32 0, i32 1
  %7393 = getelementptr inbounds %struct.Reg, %struct.Reg* %7392, i32 0, i32 0
  %AX.i205 = bitcast %union.anon* %7393 to i16*
  %7394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7395 = getelementptr inbounds %struct.GPR, %struct.GPR* %7394, i32 0, i32 3
  %7396 = getelementptr inbounds %struct.Reg, %struct.Reg* %7395, i32 0, i32 0
  %BX.i206 = bitcast %union.anon* %7396 to i16*
  %7397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7398 = getelementptr inbounds %struct.GPR, %struct.GPR* %7397, i32 0, i32 5
  %7399 = getelementptr inbounds %struct.Reg, %struct.Reg* %7398, i32 0, i32 0
  %CX.i207 = bitcast %union.anon* %7399 to i16*
  %7400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7401 = getelementptr inbounds %struct.GPR, %struct.GPR* %7400, i32 0, i32 7
  %7402 = getelementptr inbounds %struct.Reg, %struct.Reg* %7401, i32 0, i32 0
  %DX.i208 = bitcast %union.anon* %7402 to i16*
  %7403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7404 = getelementptr inbounds %struct.GPR, %struct.GPR* %7403, i32 0, i32 9
  %7405 = getelementptr inbounds %struct.Reg, %struct.Reg* %7404, i32 0, i32 0
  %SI.i209 = bitcast %union.anon* %7405 to i16*
  %7406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7407 = getelementptr inbounds %struct.GPR, %struct.GPR* %7406, i32 0, i32 11
  %7408 = getelementptr inbounds %struct.Reg, %struct.Reg* %7407, i32 0, i32 0
  %DI.i210 = bitcast %union.anon* %7408 to i16*
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7410 = getelementptr inbounds %struct.GPR, %struct.GPR* %7409, i32 0, i32 13
  %7411 = getelementptr inbounds %struct.Reg, %struct.Reg* %7410, i32 0, i32 0
  %SP.i211 = bitcast %union.anon* %7411 to i16*
  %7412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7413 = getelementptr inbounds %struct.GPR, %struct.GPR* %7412, i32 0, i32 15
  %7414 = getelementptr inbounds %struct.Reg, %struct.Reg* %7413, i32 0, i32 0
  %BP.i212 = bitcast %union.anon* %7414 to i16*
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7416 = getelementptr inbounds %struct.GPR, %struct.GPR* %7415, i32 0, i32 17
  %7417 = getelementptr inbounds %struct.Reg, %struct.Reg* %7416, i32 0, i32 0
  %R8W.i213 = bitcast %union.anon* %7417 to i16*
  %7418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7419 = getelementptr inbounds %struct.GPR, %struct.GPR* %7418, i32 0, i32 19
  %7420 = getelementptr inbounds %struct.Reg, %struct.Reg* %7419, i32 0, i32 0
  %R9W.i214 = bitcast %union.anon* %7420 to i16*
  %7421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7422 = getelementptr inbounds %struct.GPR, %struct.GPR* %7421, i32 0, i32 21
  %7423 = getelementptr inbounds %struct.Reg, %struct.Reg* %7422, i32 0, i32 0
  %R10W.i215 = bitcast %union.anon* %7423 to i16*
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7425 = getelementptr inbounds %struct.GPR, %struct.GPR* %7424, i32 0, i32 23
  %7426 = getelementptr inbounds %struct.Reg, %struct.Reg* %7425, i32 0, i32 0
  %R11W.i216 = bitcast %union.anon* %7426 to i16*
  %7427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7428 = getelementptr inbounds %struct.GPR, %struct.GPR* %7427, i32 0, i32 25
  %7429 = getelementptr inbounds %struct.Reg, %struct.Reg* %7428, i32 0, i32 0
  %R12W.i217 = bitcast %union.anon* %7429 to i16*
  %7430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7431 = getelementptr inbounds %struct.GPR, %struct.GPR* %7430, i32 0, i32 27
  %7432 = getelementptr inbounds %struct.Reg, %struct.Reg* %7431, i32 0, i32 0
  %R13W.i218 = bitcast %union.anon* %7432 to i16*
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7434 = getelementptr inbounds %struct.GPR, %struct.GPR* %7433, i32 0, i32 29
  %7435 = getelementptr inbounds %struct.Reg, %struct.Reg* %7434, i32 0, i32 0
  %R14W.i219 = bitcast %union.anon* %7435 to i16*
  %7436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7437 = getelementptr inbounds %struct.GPR, %struct.GPR* %7436, i32 0, i32 31
  %7438 = getelementptr inbounds %struct.Reg, %struct.Reg* %7437, i32 0, i32 0
  %R15W.i220 = bitcast %union.anon* %7438 to i16*
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 33
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %IP.i221 = bitcast %union.anon* %7441 to i16*
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7443 = getelementptr inbounds %struct.GPR, %struct.GPR* %7442, i32 0, i32 1
  %7444 = getelementptr inbounds %struct.Reg, %struct.Reg* %7443, i32 0, i32 0
  %EAX.i222 = bitcast %union.anon* %7444 to i32*
  %7445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7446 = getelementptr inbounds %struct.GPR, %struct.GPR* %7445, i32 0, i32 3
  %7447 = getelementptr inbounds %struct.Reg, %struct.Reg* %7446, i32 0, i32 0
  %EBX.i223 = bitcast %union.anon* %7447 to i32*
  %7448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7449 = getelementptr inbounds %struct.GPR, %struct.GPR* %7448, i32 0, i32 5
  %7450 = getelementptr inbounds %struct.Reg, %struct.Reg* %7449, i32 0, i32 0
  %ECX.i224 = bitcast %union.anon* %7450 to i32*
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7452 = getelementptr inbounds %struct.GPR, %struct.GPR* %7451, i32 0, i32 7
  %7453 = getelementptr inbounds %struct.Reg, %struct.Reg* %7452, i32 0, i32 0
  %EDX.i225 = bitcast %union.anon* %7453 to i32*
  %7454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7455 = getelementptr inbounds %struct.GPR, %struct.GPR* %7454, i32 0, i32 9
  %7456 = getelementptr inbounds %struct.Reg, %struct.Reg* %7455, i32 0, i32 0
  %ESI.i226 = bitcast %union.anon* %7456 to i32*
  %7457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7458 = getelementptr inbounds %struct.GPR, %struct.GPR* %7457, i32 0, i32 11
  %7459 = getelementptr inbounds %struct.Reg, %struct.Reg* %7458, i32 0, i32 0
  %EDI.i227 = bitcast %union.anon* %7459 to i32*
  %7460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7461 = getelementptr inbounds %struct.GPR, %struct.GPR* %7460, i32 0, i32 13
  %7462 = getelementptr inbounds %struct.Reg, %struct.Reg* %7461, i32 0, i32 0
  %ESP.i228 = bitcast %union.anon* %7462 to i32*
  %7463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7464 = getelementptr inbounds %struct.GPR, %struct.GPR* %7463, i32 0, i32 15
  %7465 = getelementptr inbounds %struct.Reg, %struct.Reg* %7464, i32 0, i32 0
  %EBP.i229 = bitcast %union.anon* %7465 to i32*
  %7466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7467 = getelementptr inbounds %struct.GPR, %struct.GPR* %7466, i32 0, i32 33
  %7468 = getelementptr inbounds %struct.Reg, %struct.Reg* %7467, i32 0, i32 0
  %EIP.i230 = bitcast %union.anon* %7468 to i32*
  %7469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7470 = getelementptr inbounds %struct.GPR, %struct.GPR* %7469, i32 0, i32 17
  %7471 = getelementptr inbounds %struct.Reg, %struct.Reg* %7470, i32 0, i32 0
  %R8D.i231 = bitcast %union.anon* %7471 to i32*
  %7472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7473 = getelementptr inbounds %struct.GPR, %struct.GPR* %7472, i32 0, i32 19
  %7474 = getelementptr inbounds %struct.Reg, %struct.Reg* %7473, i32 0, i32 0
  %R9D.i232 = bitcast %union.anon* %7474 to i32*
  %7475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7476 = getelementptr inbounds %struct.GPR, %struct.GPR* %7475, i32 0, i32 21
  %7477 = getelementptr inbounds %struct.Reg, %struct.Reg* %7476, i32 0, i32 0
  %R10D.i233 = bitcast %union.anon* %7477 to i32*
  %7478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7479 = getelementptr inbounds %struct.GPR, %struct.GPR* %7478, i32 0, i32 23
  %7480 = getelementptr inbounds %struct.Reg, %struct.Reg* %7479, i32 0, i32 0
  %R11D.i234 = bitcast %union.anon* %7480 to i32*
  %7481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7482 = getelementptr inbounds %struct.GPR, %struct.GPR* %7481, i32 0, i32 25
  %7483 = getelementptr inbounds %struct.Reg, %struct.Reg* %7482, i32 0, i32 0
  %R12D.i235 = bitcast %union.anon* %7483 to i32*
  %7484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7485 = getelementptr inbounds %struct.GPR, %struct.GPR* %7484, i32 0, i32 27
  %7486 = getelementptr inbounds %struct.Reg, %struct.Reg* %7485, i32 0, i32 0
  %R13D.i236 = bitcast %union.anon* %7486 to i32*
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7488 = getelementptr inbounds %struct.GPR, %struct.GPR* %7487, i32 0, i32 29
  %7489 = getelementptr inbounds %struct.Reg, %struct.Reg* %7488, i32 0, i32 0
  %R14D.i237 = bitcast %union.anon* %7489 to i32*
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7491 = getelementptr inbounds %struct.GPR, %struct.GPR* %7490, i32 0, i32 31
  %7492 = getelementptr inbounds %struct.Reg, %struct.Reg* %7491, i32 0, i32 0
  %R15D.i238 = bitcast %union.anon* %7492 to i32*
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7494 = getelementptr inbounds %struct.GPR, %struct.GPR* %7493, i32 0, i32 1
  %7495 = getelementptr inbounds %struct.Reg, %struct.Reg* %7494, i32 0, i32 0
  %RAX.i239 = bitcast %union.anon* %7495 to i64*
  %7496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7497 = getelementptr inbounds %struct.GPR, %struct.GPR* %7496, i32 0, i32 3
  %7498 = getelementptr inbounds %struct.Reg, %struct.Reg* %7497, i32 0, i32 0
  %RBX.i240 = bitcast %union.anon* %7498 to i64*
  %7499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7500 = getelementptr inbounds %struct.GPR, %struct.GPR* %7499, i32 0, i32 5
  %7501 = getelementptr inbounds %struct.Reg, %struct.Reg* %7500, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %7501 to i64*
  %7502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7503 = getelementptr inbounds %struct.GPR, %struct.GPR* %7502, i32 0, i32 7
  %7504 = getelementptr inbounds %struct.Reg, %struct.Reg* %7503, i32 0, i32 0
  %RDX.i242 = bitcast %union.anon* %7504 to i64*
  %7505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7506 = getelementptr inbounds %struct.GPR, %struct.GPR* %7505, i32 0, i32 9
  %7507 = getelementptr inbounds %struct.Reg, %struct.Reg* %7506, i32 0, i32 0
  %RSI.i243 = bitcast %union.anon* %7507 to i64*
  %7508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7509 = getelementptr inbounds %struct.GPR, %struct.GPR* %7508, i32 0, i32 11
  %7510 = getelementptr inbounds %struct.Reg, %struct.Reg* %7509, i32 0, i32 0
  %RDI.i244 = bitcast %union.anon* %7510 to i64*
  %7511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7512 = getelementptr inbounds %struct.GPR, %struct.GPR* %7511, i32 0, i32 13
  %7513 = getelementptr inbounds %struct.Reg, %struct.Reg* %7512, i32 0, i32 0
  %RSP.i245 = bitcast %union.anon* %7513 to i64*
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7515 = getelementptr inbounds %struct.GPR, %struct.GPR* %7514, i32 0, i32 15
  %7516 = getelementptr inbounds %struct.Reg, %struct.Reg* %7515, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %7516 to i64*
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7518 = getelementptr inbounds %struct.GPR, %struct.GPR* %7517, i32 0, i32 17
  %7519 = getelementptr inbounds %struct.Reg, %struct.Reg* %7518, i32 0, i32 0
  %R8.i247 = bitcast %union.anon* %7519 to i64*
  %7520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7521 = getelementptr inbounds %struct.GPR, %struct.GPR* %7520, i32 0, i32 19
  %7522 = getelementptr inbounds %struct.Reg, %struct.Reg* %7521, i32 0, i32 0
  %R9.i248 = bitcast %union.anon* %7522 to i64*
  %7523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7524 = getelementptr inbounds %struct.GPR, %struct.GPR* %7523, i32 0, i32 21
  %7525 = getelementptr inbounds %struct.Reg, %struct.Reg* %7524, i32 0, i32 0
  %R10.i249 = bitcast %union.anon* %7525 to i64*
  %7526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7527 = getelementptr inbounds %struct.GPR, %struct.GPR* %7526, i32 0, i32 23
  %7528 = getelementptr inbounds %struct.Reg, %struct.Reg* %7527, i32 0, i32 0
  %R11.i250 = bitcast %union.anon* %7528 to i64*
  %7529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7530 = getelementptr inbounds %struct.GPR, %struct.GPR* %7529, i32 0, i32 25
  %7531 = getelementptr inbounds %struct.Reg, %struct.Reg* %7530, i32 0, i32 0
  %R12.i251 = bitcast %union.anon* %7531 to i64*
  %7532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7533 = getelementptr inbounds %struct.GPR, %struct.GPR* %7532, i32 0, i32 27
  %7534 = getelementptr inbounds %struct.Reg, %struct.Reg* %7533, i32 0, i32 0
  %R13.i252 = bitcast %union.anon* %7534 to i64*
  %7535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7536 = getelementptr inbounds %struct.GPR, %struct.GPR* %7535, i32 0, i32 29
  %7537 = getelementptr inbounds %struct.Reg, %struct.Reg* %7536, i32 0, i32 0
  %R14.i253 = bitcast %union.anon* %7537 to i64*
  %7538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7539 = getelementptr inbounds %struct.GPR, %struct.GPR* %7538, i32 0, i32 31
  %7540 = getelementptr inbounds %struct.Reg, %struct.Reg* %7539, i32 0, i32 0
  %R15.i254 = bitcast %union.anon* %7540 to i64*
  %7541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7542 = getelementptr inbounds %struct.GPR, %struct.GPR* %7541, i32 0, i32 33
  %7543 = getelementptr inbounds %struct.Reg, %struct.Reg* %7542, i32 0, i32 0
  %RIP.i255 = bitcast %union.anon* %7543 to i64*
  %7544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7545 = getelementptr inbounds %struct.Segments, %struct.Segments* %7544, i32 0, i32 1
  %SS.i256 = bitcast %union.SegmentSelector* %7545 to i16*
  %7546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7547 = getelementptr inbounds %struct.Segments, %struct.Segments* %7546, i32 0, i32 3
  %ES.i257 = bitcast %union.SegmentSelector* %7547 to i16*
  %7548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7549 = getelementptr inbounds %struct.Segments, %struct.Segments* %7548, i32 0, i32 5
  %GS.i258 = bitcast %union.SegmentSelector* %7549 to i16*
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7551 = getelementptr inbounds %struct.Segments, %struct.Segments* %7550, i32 0, i32 7
  %FS.i259 = bitcast %union.SegmentSelector* %7551 to i16*
  %7552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7553 = getelementptr inbounds %struct.Segments, %struct.Segments* %7552, i32 0, i32 9
  %DS.i260 = bitcast %union.SegmentSelector* %7553 to i16*
  %7554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %7555 = getelementptr inbounds %struct.Segments, %struct.Segments* %7554, i32 0, i32 11
  %CS.i261 = bitcast %union.SegmentSelector* %7555 to i16*
  %7556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %7557 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %7556, i32 0, i32 5
  %7558 = getelementptr inbounds %struct.Reg, %struct.Reg* %7557, i32 0, i32 0
  %GS_BASE.i262 = bitcast %union.anon* %7558 to i64*
  %7559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %7560 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %7559, i32 0, i32 7
  %7561 = getelementptr inbounds %struct.Reg, %struct.Reg* %7560, i32 0, i32 0
  %FS_BASE.i263 = bitcast %union.anon* %7561 to i64*
  %7562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7563 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7562, i64 0, i64 0
  %YMM0.i264 = bitcast %union.VectorReg* %7563 to %"class.std::bitset"*
  %7564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7565 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7564, i64 0, i64 1
  %YMM1.i265 = bitcast %union.VectorReg* %7565 to %"class.std::bitset"*
  %7566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7567 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7566, i64 0, i64 2
  %YMM2.i266 = bitcast %union.VectorReg* %7567 to %"class.std::bitset"*
  %7568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7569 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7568, i64 0, i64 3
  %YMM3.i267 = bitcast %union.VectorReg* %7569 to %"class.std::bitset"*
  %7570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7571 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7570, i64 0, i64 4
  %YMM4.i268 = bitcast %union.VectorReg* %7571 to %"class.std::bitset"*
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7573 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7572, i64 0, i64 5
  %YMM5.i269 = bitcast %union.VectorReg* %7573 to %"class.std::bitset"*
  %7574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7575 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7574, i64 0, i64 6
  %YMM6.i270 = bitcast %union.VectorReg* %7575 to %"class.std::bitset"*
  %7576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7577 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7576, i64 0, i64 7
  %YMM7.i271 = bitcast %union.VectorReg* %7577 to %"class.std::bitset"*
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7579 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7578, i64 0, i64 8
  %YMM8.i272 = bitcast %union.VectorReg* %7579 to %"class.std::bitset"*
  %7580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7581 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7580, i64 0, i64 9
  %YMM9.i273 = bitcast %union.VectorReg* %7581 to %"class.std::bitset"*
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7583 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7582, i64 0, i64 10
  %YMM10.i274 = bitcast %union.VectorReg* %7583 to %"class.std::bitset"*
  %7584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7585 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7584, i64 0, i64 11
  %YMM11.i275 = bitcast %union.VectorReg* %7585 to %"class.std::bitset"*
  %7586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7587 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7586, i64 0, i64 12
  %YMM12.i276 = bitcast %union.VectorReg* %7587 to %"class.std::bitset"*
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7589 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7588, i64 0, i64 13
  %YMM13.i277 = bitcast %union.VectorReg* %7589 to %"class.std::bitset"*
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7591 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7590, i64 0, i64 14
  %YMM14.i278 = bitcast %union.VectorReg* %7591 to %"class.std::bitset"*
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7593 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7592, i64 0, i64 15
  %YMM15.i279 = bitcast %union.VectorReg* %7593 to %"class.std::bitset"*
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7595 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7594, i64 0, i64 0
  %XMM0.i280 = bitcast %union.VectorReg* %7595 to %union.vec128_t*
  %7596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7597 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7596, i64 0, i64 1
  %XMM1.i281 = bitcast %union.VectorReg* %7597 to %union.vec128_t*
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7599 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7598, i64 0, i64 2
  %XMM2.i282 = bitcast %union.VectorReg* %7599 to %union.vec128_t*
  %7600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7601 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7600, i64 0, i64 3
  %XMM3.i283 = bitcast %union.VectorReg* %7601 to %union.vec128_t*
  %7602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7603 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7602, i64 0, i64 4
  %XMM4.i284 = bitcast %union.VectorReg* %7603 to %union.vec128_t*
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7605 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7604, i64 0, i64 5
  %XMM5.i285 = bitcast %union.VectorReg* %7605 to %union.vec128_t*
  %7606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7607 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7606, i64 0, i64 6
  %XMM6.i286 = bitcast %union.VectorReg* %7607 to %union.vec128_t*
  %7608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7609 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7608, i64 0, i64 7
  %XMM7.i287 = bitcast %union.VectorReg* %7609 to %union.vec128_t*
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7611 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7610, i64 0, i64 8
  %XMM8.i288 = bitcast %union.VectorReg* %7611 to %union.vec128_t*
  %7612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7613 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7612, i64 0, i64 9
  %XMM9.i289 = bitcast %union.VectorReg* %7613 to %union.vec128_t*
  %7614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7615 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7614, i64 0, i64 10
  %XMM10.i290 = bitcast %union.VectorReg* %7615 to %union.vec128_t*
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7617 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7616, i64 0, i64 11
  %XMM11.i291 = bitcast %union.VectorReg* %7617 to %union.vec128_t*
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7619 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7618, i64 0, i64 12
  %XMM12.i292 = bitcast %union.VectorReg* %7619 to %union.vec128_t*
  %7620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7621 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7620, i64 0, i64 13
  %XMM13.i293 = bitcast %union.VectorReg* %7621 to %union.vec128_t*
  %7622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7623 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7622, i64 0, i64 14
  %XMM14.i294 = bitcast %union.VectorReg* %7623 to %union.vec128_t*
  %7624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7625 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7624, i64 0, i64 15
  %XMM15.i295 = bitcast %union.VectorReg* %7625 to %union.vec128_t*
  %7626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7627 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7626, i32 0, i32 0
  %7628 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7627, i64 0, i64 0
  %ST0.i296 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7628, i32 0, i32 1
  %7629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7630 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7629, i32 0, i32 0
  %7631 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7630, i64 0, i64 1
  %ST1.i297 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7631, i32 0, i32 1
  %7632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7633 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7632, i32 0, i32 0
  %7634 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7633, i64 0, i64 2
  %ST2.i298 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7634, i32 0, i32 1
  %7635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7636 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7635, i32 0, i32 0
  %7637 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7636, i64 0, i64 3
  %ST3.i299 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7637, i32 0, i32 1
  %7638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7639 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7638, i32 0, i32 0
  %7640 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7639, i64 0, i64 4
  %ST4.i300 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7640, i32 0, i32 1
  %7641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7642 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7641, i32 0, i32 0
  %7643 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7642, i64 0, i64 5
  %ST5.i301 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7643, i32 0, i32 1
  %7644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7645 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7644, i32 0, i32 0
  %7646 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7645, i64 0, i64 6
  %ST6.i302 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7646, i32 0, i32 1
  %7647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %7648 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %7647, i32 0, i32 0
  %7649 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %7648, i64 0, i64 7
  %ST7.i303 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %7649, i32 0, i32 1
  %7650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7651 = getelementptr inbounds %struct.MMX, %struct.MMX* %7650, i32 0, i32 0
  %7652 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7651, i64 0, i64 0
  %7653 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7652, i32 0, i32 1
  %7654 = bitcast %union.vec64_t* %7653 to %struct.uint64v1_t*
  %7655 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7654, i32 0, i32 0
  %MM0.i304 = getelementptr inbounds [1 x i64], [1 x i64]* %7655, i64 0, i64 0
  %7656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7657 = getelementptr inbounds %struct.MMX, %struct.MMX* %7656, i32 0, i32 0
  %7658 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7657, i64 0, i64 1
  %7659 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7658, i32 0, i32 1
  %7660 = bitcast %union.vec64_t* %7659 to %struct.uint64v1_t*
  %7661 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7660, i32 0, i32 0
  %MM1.i305 = getelementptr inbounds [1 x i64], [1 x i64]* %7661, i64 0, i64 0
  %7662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7663 = getelementptr inbounds %struct.MMX, %struct.MMX* %7662, i32 0, i32 0
  %7664 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7663, i64 0, i64 2
  %7665 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7664, i32 0, i32 1
  %7666 = bitcast %union.vec64_t* %7665 to %struct.uint64v1_t*
  %7667 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7666, i32 0, i32 0
  %MM2.i306 = getelementptr inbounds [1 x i64], [1 x i64]* %7667, i64 0, i64 0
  %7668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7669 = getelementptr inbounds %struct.MMX, %struct.MMX* %7668, i32 0, i32 0
  %7670 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7669, i64 0, i64 3
  %7671 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7670, i32 0, i32 1
  %7672 = bitcast %union.vec64_t* %7671 to %struct.uint64v1_t*
  %7673 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7672, i32 0, i32 0
  %MM3.i307 = getelementptr inbounds [1 x i64], [1 x i64]* %7673, i64 0, i64 0
  %7674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7675 = getelementptr inbounds %struct.MMX, %struct.MMX* %7674, i32 0, i32 0
  %7676 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7675, i64 0, i64 4
  %7677 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7676, i32 0, i32 1
  %7678 = bitcast %union.vec64_t* %7677 to %struct.uint64v1_t*
  %7679 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7678, i32 0, i32 0
  %MM4.i308 = getelementptr inbounds [1 x i64], [1 x i64]* %7679, i64 0, i64 0
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7681 = getelementptr inbounds %struct.MMX, %struct.MMX* %7680, i32 0, i32 0
  %7682 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7681, i64 0, i64 5
  %7683 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7682, i32 0, i32 1
  %7684 = bitcast %union.vec64_t* %7683 to %struct.uint64v1_t*
  %7685 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7684, i32 0, i32 0
  %MM5.i309 = getelementptr inbounds [1 x i64], [1 x i64]* %7685, i64 0, i64 0
  %7686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7687 = getelementptr inbounds %struct.MMX, %struct.MMX* %7686, i32 0, i32 0
  %7688 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7687, i64 0, i64 6
  %7689 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7688, i32 0, i32 1
  %7690 = bitcast %union.vec64_t* %7689 to %struct.uint64v1_t*
  %7691 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7690, i32 0, i32 0
  %MM6.i310 = getelementptr inbounds [1 x i64], [1 x i64]* %7691, i64 0, i64 0
  %7692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %7693 = getelementptr inbounds %struct.MMX, %struct.MMX* %7692, i32 0, i32 0
  %7694 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %7693, i64 0, i64 7
  %7695 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %7694, i32 0, i32 1
  %7696 = bitcast %union.vec64_t* %7695 to %struct.uint64v1_t*
  %7697 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %7696, i32 0, i32 0
  %MM7.i311 = getelementptr inbounds [1 x i64], [1 x i64]* %7697, i64 0, i64 0
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i312 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7698, i32 0, i32 5
  %7699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i313 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7699, i32 0, i32 1
  %7700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i314 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7700, i32 0, i32 11
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i315 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7701, i32 0, i32 13
  %7702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i316 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7702, i32 0, i32 3
  %7703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i317 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7703, i32 0, i32 9
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i318 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %7704, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i170, align 8, !noalias !2504
  store i64* @DR1, i64** %_DR1.i171, align 8, !noalias !2504
  store i64* @DR2, i64** %_DR2.i172, align 8, !noalias !2504
  store i64* @DR3, i64** %_DR3.i173, align 8, !noalias !2504
  store i64* @DR4, i64** %_DR4.i174, align 8, !noalias !2504
  store i64* @DR5, i64** %_DR5.i175, align 8, !noalias !2504
  store i64* @DR6, i64** %_DR6.i176, align 8, !noalias !2504
  store i64* @DR7, i64** %_DR7.i177, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i178, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i179, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i180, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i181, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i182, align 8, !noalias !2504
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i183, align 8, !noalias !2504
  %7705 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  %7706 = load double, double* %7705, !alias.scope !2508, !noalias !2509
  %7707 = load i64, i64* %RSP.i245, !alias.scope !2508, !noalias !2509
  %7708 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2504
  %7709 = inttoptr i64 %7707 to i64*
  %7710 = load i64, i64* %7709
  store i64 %7710, i64* %PC.i184, !alias.scope !2508, !noalias !2509
  %7711 = add i64 %7707, 8
  store i64 %7711, i64* %RSP.i245, !alias.scope !2508, !noalias !2509
  %7712 = call double @cos(double %7706)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i264, !alias.scope !2508, !noalias !2509
  %7713 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  store double %7712, double* %7713, !alias.scope !2508, !noalias !2509
  %7714 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2504
  %7715 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7715)
  %7716 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7716)
  %7717 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7717)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i163)
  %7718 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7718)
  %7719 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7719)
  %7720 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7720)
  %7721 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7721)
  %7722 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7722)
  %7723 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7723)
  %7724 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7724)
  %7725 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7725)
  %7726 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7726)
  %7727 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7727)
  %7728 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7728)
  %7729 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7729)
  %7730 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7730)
  %7731 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7731)
  %7732 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7732)
  %7733 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7733)
  %7734 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7734)
  %7735 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7735)
  %7736 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7736)
  %7737 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7737)
  %7738 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7739 = load i64, i64* %RBP
  %7740 = sub i64 %7739, 144
  %7741 = load i64, i64* %PC
  %7742 = add i64 %7741, 8
  store i64 %7742, i64* %PC
  %7743 = inttoptr i64 %7740 to double*
  %7744 = load double, double* %7743
  %7745 = bitcast i8* %7738 to double*
  store double %7744, double* %7745, align 1, !tbaa !2432
  %7746 = getelementptr inbounds i8, i8* %7738, i64 8
  %7747 = bitcast i8* %7746 to double*
  store double 0.000000e+00, double* %7747, align 1, !tbaa !2432
  %7748 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7749 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %7750 = load i64, i64* %RBP
  %7751 = sub i64 %7750, 152
  %7752 = load i64, i64* %PC
  %7753 = add i64 %7752, 8
  store i64 %7753, i64* %PC
  %7754 = bitcast i8* %7749 to double*
  %7755 = load double, double* %7754, align 1
  %7756 = getelementptr inbounds i8, i8* %7749, i64 8
  %7757 = bitcast i8* %7756 to i64*
  %7758 = load i64, i64* %7757, align 1
  %7759 = inttoptr i64 %7751 to double*
  %7760 = load double, double* %7759
  %7761 = fsub double %7755, %7760
  %7762 = bitcast i8* %7748 to double*
  store double %7761, double* %7762, align 1, !tbaa !2432
  %7763 = getelementptr inbounds i8, i8* %7748, i64 8
  %7764 = bitcast i8* %7763 to i64*
  store i64 %7758, i64* %7764, align 1, !tbaa !2432
  %7765 = load i64, i64* %RBP
  %7766 = sub i64 %7765, 312
  %7767 = bitcast %union.vec128_t* %XMM0 to i8*
  %7768 = load i64, i64* %PC
  %7769 = add i64 %7768, 8
  store i64 %7769, i64* %PC
  %7770 = bitcast i8* %7767 to double*
  %7771 = load double, double* %7770, align 1
  %7772 = inttoptr i64 %7766 to double*
  store double %7771, double* %7772
  %7773 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %7774 = bitcast %union.vec128_t* %XMM1 to i8*
  %7775 = load i64, i64* %PC
  %7776 = add i64 %7775, 3
  store i64 %7776, i64* %PC
  %7777 = bitcast i8* %7774 to <2 x i32>*
  %7778 = load <2 x i32>, <2 x i32>* %7777, align 1
  %7779 = getelementptr inbounds i8, i8* %7774, i64 8
  %7780 = bitcast i8* %7779 to <2 x i32>*
  %7781 = load <2 x i32>, <2 x i32>* %7780, align 1
  %7782 = extractelement <2 x i32> %7778, i32 0
  %7783 = bitcast i8* %7773 to i32*
  store i32 %7782, i32* %7783, align 1, !tbaa !2460
  %7784 = extractelement <2 x i32> %7778, i32 1
  %7785 = getelementptr inbounds i8, i8* %7773, i64 4
  %7786 = bitcast i8* %7785 to i32*
  store i32 %7784, i32* %7786, align 1, !tbaa !2460
  %7787 = extractelement <2 x i32> %7781, i32 0
  %7788 = getelementptr inbounds i8, i8* %7773, i64 8
  %7789 = bitcast i8* %7788 to i32*
  store i32 %7787, i32* %7789, align 1, !tbaa !2460
  %7790 = extractelement <2 x i32> %7781, i32 1
  %7791 = getelementptr inbounds i8, i8* %7773, i64 12
  %7792 = bitcast i8* %7791 to i32*
  store i32 %7790, i32* %7792, align 1, !tbaa !2460
  %7793 = load i64, i64* %PC
  %7794 = sub i64 %7793, 2766
  %7795 = load i64, i64* %PC
  %7796 = add i64 %7795, 5
  %7797 = load i64, i64* %PC
  %7798 = add i64 %7797, 5
  store i64 %7798, i64* %PC
  %7799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7800 = load i64, i64* %7799, align 8, !tbaa !2428
  %7801 = add i64 %7800, -8
  %7802 = inttoptr i64 %7801 to i64*
  store i64 %7796, i64* %7802
  store i64 %7801, i64* %7799, align 8, !tbaa !2428
  %7803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7794, i64* %7803, align 8, !tbaa !2428
  %7804 = load i64, i64* %PC
  %7805 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7805)
  %7806 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7806)
  %7807 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7807)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i4)
  %7808 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7808)
  %7809 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7809)
  %7810 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7810)
  %7811 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7811)
  %7812 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7812)
  %7813 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7813)
  %7814 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7814)
  %7815 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7815)
  %7816 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7816)
  %7817 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7817)
  %7818 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7818)
  %7819 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7819)
  %7820 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7820)
  %7821 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7821)
  %7822 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7822)
  %7823 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7823)
  %7824 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7824)
  %7825 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7825)
  %7826 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7826)
  %7827 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7827)
  store %struct.State* %0, %struct.State** %state.i1, align 8, !noalias !2510
  store i64 %7804, i64* %curr_pc.i2, align 8, !noalias !2510
  store %struct.Memory* %7714, %struct.Memory** %memory.i3, align 8, !noalias !2510
  store i8 0, i8* %BRANCH_TAKEN.i4, align 1, !noalias !2510
  store i64 0, i64* %SS_BASE.i5, align 8, !noalias !2510
  store i64 0, i64* %ES_BASE.i6, align 8, !noalias !2510
  store i64 0, i64* %DS_BASE.i7, align 8, !noalias !2510
  store i64 0, i64* %CS_BASE.i8, align 8, !noalias !2510
  store %struct.State* %0, %struct.State** %STATE.i9, align 8, !noalias !2510
  store %struct.Memory* %7714, %struct.Memory** %MEMORY.i10, align 8, !noalias !2510
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7829 = getelementptr inbounds %struct.GPR, %struct.GPR* %7828, i32 0, i32 33
  %7830 = getelementptr inbounds %struct.Reg, %struct.Reg* %7829, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %7830 to i64*
  store i64 %7804, i64* %PC.i25, align 8, !alias.scope !2514, !noalias !2515
  %7831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7832 = getelementptr inbounds %struct.GPR, %struct.GPR* %7831, i32 0, i32 1
  %7833 = getelementptr inbounds %struct.Reg, %struct.Reg* %7832, i32 0, i32 0
  %7834 = bitcast %union.anon* %7833 to %struct.anon.2*
  %AH.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7834, i32 0, i32 1
  %7835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7836 = getelementptr inbounds %struct.GPR, %struct.GPR* %7835, i32 0, i32 3
  %7837 = getelementptr inbounds %struct.Reg, %struct.Reg* %7836, i32 0, i32 0
  %7838 = bitcast %union.anon* %7837 to %struct.anon.2*
  %BH.i27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7838, i32 0, i32 1
  %7839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7840 = getelementptr inbounds %struct.GPR, %struct.GPR* %7839, i32 0, i32 5
  %7841 = getelementptr inbounds %struct.Reg, %struct.Reg* %7840, i32 0, i32 0
  %7842 = bitcast %union.anon* %7841 to %struct.anon.2*
  %CH.i28 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7842, i32 0, i32 1
  %7843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7844 = getelementptr inbounds %struct.GPR, %struct.GPR* %7843, i32 0, i32 7
  %7845 = getelementptr inbounds %struct.Reg, %struct.Reg* %7844, i32 0, i32 0
  %7846 = bitcast %union.anon* %7845 to %struct.anon.2*
  %DH.i29 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7846, i32 0, i32 1
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7848 = getelementptr inbounds %struct.GPR, %struct.GPR* %7847, i32 0, i32 1
  %7849 = getelementptr inbounds %struct.Reg, %struct.Reg* %7848, i32 0, i32 0
  %7850 = bitcast %union.anon* %7849 to %struct.anon.2*
  %AL.i30 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7850, i32 0, i32 0
  %7851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7852 = getelementptr inbounds %struct.GPR, %struct.GPR* %7851, i32 0, i32 3
  %7853 = getelementptr inbounds %struct.Reg, %struct.Reg* %7852, i32 0, i32 0
  %7854 = bitcast %union.anon* %7853 to %struct.anon.2*
  %BL.i31 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7854, i32 0, i32 0
  %7855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7856 = getelementptr inbounds %struct.GPR, %struct.GPR* %7855, i32 0, i32 5
  %7857 = getelementptr inbounds %struct.Reg, %struct.Reg* %7856, i32 0, i32 0
  %7858 = bitcast %union.anon* %7857 to %struct.anon.2*
  %CL.i32 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7858, i32 0, i32 0
  %7859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7860 = getelementptr inbounds %struct.GPR, %struct.GPR* %7859, i32 0, i32 7
  %7861 = getelementptr inbounds %struct.Reg, %struct.Reg* %7860, i32 0, i32 0
  %7862 = bitcast %union.anon* %7861 to %struct.anon.2*
  %DL.i33 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7862, i32 0, i32 0
  %7863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7864 = getelementptr inbounds %struct.GPR, %struct.GPR* %7863, i32 0, i32 9
  %7865 = getelementptr inbounds %struct.Reg, %struct.Reg* %7864, i32 0, i32 0
  %7866 = bitcast %union.anon* %7865 to %struct.anon.2*
  %SIL.i34 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7866, i32 0, i32 0
  %7867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7868 = getelementptr inbounds %struct.GPR, %struct.GPR* %7867, i32 0, i32 11
  %7869 = getelementptr inbounds %struct.Reg, %struct.Reg* %7868, i32 0, i32 0
  %7870 = bitcast %union.anon* %7869 to %struct.anon.2*
  %DIL.i35 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7870, i32 0, i32 0
  %7871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7872 = getelementptr inbounds %struct.GPR, %struct.GPR* %7871, i32 0, i32 13
  %7873 = getelementptr inbounds %struct.Reg, %struct.Reg* %7872, i32 0, i32 0
  %7874 = bitcast %union.anon* %7873 to %struct.anon.2*
  %SPL.i36 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7874, i32 0, i32 0
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7876 = getelementptr inbounds %struct.GPR, %struct.GPR* %7875, i32 0, i32 15
  %7877 = getelementptr inbounds %struct.Reg, %struct.Reg* %7876, i32 0, i32 0
  %7878 = bitcast %union.anon* %7877 to %struct.anon.2*
  %BPL.i37 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7878, i32 0, i32 0
  %7879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7880 = getelementptr inbounds %struct.GPR, %struct.GPR* %7879, i32 0, i32 17
  %7881 = getelementptr inbounds %struct.Reg, %struct.Reg* %7880, i32 0, i32 0
  %7882 = bitcast %union.anon* %7881 to %struct.anon.2*
  %R8B.i38 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7882, i32 0, i32 0
  %7883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7884 = getelementptr inbounds %struct.GPR, %struct.GPR* %7883, i32 0, i32 19
  %7885 = getelementptr inbounds %struct.Reg, %struct.Reg* %7884, i32 0, i32 0
  %7886 = bitcast %union.anon* %7885 to %struct.anon.2*
  %R9B.i39 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7886, i32 0, i32 0
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7888 = getelementptr inbounds %struct.GPR, %struct.GPR* %7887, i32 0, i32 21
  %7889 = getelementptr inbounds %struct.Reg, %struct.Reg* %7888, i32 0, i32 0
  %7890 = bitcast %union.anon* %7889 to %struct.anon.2*
  %R10B.i40 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7890, i32 0, i32 0
  %7891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7892 = getelementptr inbounds %struct.GPR, %struct.GPR* %7891, i32 0, i32 23
  %7893 = getelementptr inbounds %struct.Reg, %struct.Reg* %7892, i32 0, i32 0
  %7894 = bitcast %union.anon* %7893 to %struct.anon.2*
  %R11B.i41 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7894, i32 0, i32 0
  %7895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7896 = getelementptr inbounds %struct.GPR, %struct.GPR* %7895, i32 0, i32 25
  %7897 = getelementptr inbounds %struct.Reg, %struct.Reg* %7896, i32 0, i32 0
  %7898 = bitcast %union.anon* %7897 to %struct.anon.2*
  %R12B.i42 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7898, i32 0, i32 0
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7900 = getelementptr inbounds %struct.GPR, %struct.GPR* %7899, i32 0, i32 27
  %7901 = getelementptr inbounds %struct.Reg, %struct.Reg* %7900, i32 0, i32 0
  %7902 = bitcast %union.anon* %7901 to %struct.anon.2*
  %R13B.i43 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7902, i32 0, i32 0
  %7903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7904 = getelementptr inbounds %struct.GPR, %struct.GPR* %7903, i32 0, i32 29
  %7905 = getelementptr inbounds %struct.Reg, %struct.Reg* %7904, i32 0, i32 0
  %7906 = bitcast %union.anon* %7905 to %struct.anon.2*
  %R14B.i44 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7906, i32 0, i32 0
  %7907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7908 = getelementptr inbounds %struct.GPR, %struct.GPR* %7907, i32 0, i32 31
  %7909 = getelementptr inbounds %struct.Reg, %struct.Reg* %7908, i32 0, i32 0
  %7910 = bitcast %union.anon* %7909 to %struct.anon.2*
  %R15B.i45 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %7910, i32 0, i32 0
  %7911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7912 = getelementptr inbounds %struct.GPR, %struct.GPR* %7911, i32 0, i32 1
  %7913 = getelementptr inbounds %struct.Reg, %struct.Reg* %7912, i32 0, i32 0
  %AX.i46 = bitcast %union.anon* %7913 to i16*
  %7914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7915 = getelementptr inbounds %struct.GPR, %struct.GPR* %7914, i32 0, i32 3
  %7916 = getelementptr inbounds %struct.Reg, %struct.Reg* %7915, i32 0, i32 0
  %BX.i47 = bitcast %union.anon* %7916 to i16*
  %7917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7918 = getelementptr inbounds %struct.GPR, %struct.GPR* %7917, i32 0, i32 5
  %7919 = getelementptr inbounds %struct.Reg, %struct.Reg* %7918, i32 0, i32 0
  %CX.i48 = bitcast %union.anon* %7919 to i16*
  %7920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7921 = getelementptr inbounds %struct.GPR, %struct.GPR* %7920, i32 0, i32 7
  %7922 = getelementptr inbounds %struct.Reg, %struct.Reg* %7921, i32 0, i32 0
  %DX.i49 = bitcast %union.anon* %7922 to i16*
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7924 = getelementptr inbounds %struct.GPR, %struct.GPR* %7923, i32 0, i32 9
  %7925 = getelementptr inbounds %struct.Reg, %struct.Reg* %7924, i32 0, i32 0
  %SI.i50 = bitcast %union.anon* %7925 to i16*
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 11
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %DI.i51 = bitcast %union.anon* %7928 to i16*
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7930 = getelementptr inbounds %struct.GPR, %struct.GPR* %7929, i32 0, i32 13
  %7931 = getelementptr inbounds %struct.Reg, %struct.Reg* %7930, i32 0, i32 0
  %SP.i52 = bitcast %union.anon* %7931 to i16*
  %7932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7933 = getelementptr inbounds %struct.GPR, %struct.GPR* %7932, i32 0, i32 15
  %7934 = getelementptr inbounds %struct.Reg, %struct.Reg* %7933, i32 0, i32 0
  %BP.i53 = bitcast %union.anon* %7934 to i16*
  %7935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7936 = getelementptr inbounds %struct.GPR, %struct.GPR* %7935, i32 0, i32 17
  %7937 = getelementptr inbounds %struct.Reg, %struct.Reg* %7936, i32 0, i32 0
  %R8W.i54 = bitcast %union.anon* %7937 to i16*
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7939 = getelementptr inbounds %struct.GPR, %struct.GPR* %7938, i32 0, i32 19
  %7940 = getelementptr inbounds %struct.Reg, %struct.Reg* %7939, i32 0, i32 0
  %R9W.i55 = bitcast %union.anon* %7940 to i16*
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7942 = getelementptr inbounds %struct.GPR, %struct.GPR* %7941, i32 0, i32 21
  %7943 = getelementptr inbounds %struct.Reg, %struct.Reg* %7942, i32 0, i32 0
  %R10W.i56 = bitcast %union.anon* %7943 to i16*
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7945 = getelementptr inbounds %struct.GPR, %struct.GPR* %7944, i32 0, i32 23
  %7946 = getelementptr inbounds %struct.Reg, %struct.Reg* %7945, i32 0, i32 0
  %R11W.i57 = bitcast %union.anon* %7946 to i16*
  %7947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7948 = getelementptr inbounds %struct.GPR, %struct.GPR* %7947, i32 0, i32 25
  %7949 = getelementptr inbounds %struct.Reg, %struct.Reg* %7948, i32 0, i32 0
  %R12W.i58 = bitcast %union.anon* %7949 to i16*
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7951 = getelementptr inbounds %struct.GPR, %struct.GPR* %7950, i32 0, i32 27
  %7952 = getelementptr inbounds %struct.Reg, %struct.Reg* %7951, i32 0, i32 0
  %R13W.i59 = bitcast %union.anon* %7952 to i16*
  %7953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7954 = getelementptr inbounds %struct.GPR, %struct.GPR* %7953, i32 0, i32 29
  %7955 = getelementptr inbounds %struct.Reg, %struct.Reg* %7954, i32 0, i32 0
  %R14W.i60 = bitcast %union.anon* %7955 to i16*
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7957 = getelementptr inbounds %struct.GPR, %struct.GPR* %7956, i32 0, i32 31
  %7958 = getelementptr inbounds %struct.Reg, %struct.Reg* %7957, i32 0, i32 0
  %R15W.i61 = bitcast %union.anon* %7958 to i16*
  %7959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7960 = getelementptr inbounds %struct.GPR, %struct.GPR* %7959, i32 0, i32 33
  %7961 = getelementptr inbounds %struct.Reg, %struct.Reg* %7960, i32 0, i32 0
  %IP.i62 = bitcast %union.anon* %7961 to i16*
  %7962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7963 = getelementptr inbounds %struct.GPR, %struct.GPR* %7962, i32 0, i32 1
  %7964 = getelementptr inbounds %struct.Reg, %struct.Reg* %7963, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %7964 to i32*
  %7965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7966 = getelementptr inbounds %struct.GPR, %struct.GPR* %7965, i32 0, i32 3
  %7967 = getelementptr inbounds %struct.Reg, %struct.Reg* %7966, i32 0, i32 0
  %EBX.i64 = bitcast %union.anon* %7967 to i32*
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7969 = getelementptr inbounds %struct.GPR, %struct.GPR* %7968, i32 0, i32 5
  %7970 = getelementptr inbounds %struct.Reg, %struct.Reg* %7969, i32 0, i32 0
  %ECX.i65 = bitcast %union.anon* %7970 to i32*
  %7971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7972 = getelementptr inbounds %struct.GPR, %struct.GPR* %7971, i32 0, i32 7
  %7973 = getelementptr inbounds %struct.Reg, %struct.Reg* %7972, i32 0, i32 0
  %EDX.i66 = bitcast %union.anon* %7973 to i32*
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7975 = getelementptr inbounds %struct.GPR, %struct.GPR* %7974, i32 0, i32 9
  %7976 = getelementptr inbounds %struct.Reg, %struct.Reg* %7975, i32 0, i32 0
  %ESI.i67 = bitcast %union.anon* %7976 to i32*
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7978 = getelementptr inbounds %struct.GPR, %struct.GPR* %7977, i32 0, i32 11
  %7979 = getelementptr inbounds %struct.Reg, %struct.Reg* %7978, i32 0, i32 0
  %EDI.i68 = bitcast %union.anon* %7979 to i32*
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7981 = getelementptr inbounds %struct.GPR, %struct.GPR* %7980, i32 0, i32 13
  %7982 = getelementptr inbounds %struct.Reg, %struct.Reg* %7981, i32 0, i32 0
  %ESP.i69 = bitcast %union.anon* %7982 to i32*
  %7983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7984 = getelementptr inbounds %struct.GPR, %struct.GPR* %7983, i32 0, i32 15
  %7985 = getelementptr inbounds %struct.Reg, %struct.Reg* %7984, i32 0, i32 0
  %EBP.i70 = bitcast %union.anon* %7985 to i32*
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7987 = getelementptr inbounds %struct.GPR, %struct.GPR* %7986, i32 0, i32 33
  %7988 = getelementptr inbounds %struct.Reg, %struct.Reg* %7987, i32 0, i32 0
  %EIP.i71 = bitcast %union.anon* %7988 to i32*
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 17
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %R8D.i72 = bitcast %union.anon* %7991 to i32*
  %7992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7993 = getelementptr inbounds %struct.GPR, %struct.GPR* %7992, i32 0, i32 19
  %7994 = getelementptr inbounds %struct.Reg, %struct.Reg* %7993, i32 0, i32 0
  %R9D.i73 = bitcast %union.anon* %7994 to i32*
  %7995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7996 = getelementptr inbounds %struct.GPR, %struct.GPR* %7995, i32 0, i32 21
  %7997 = getelementptr inbounds %struct.Reg, %struct.Reg* %7996, i32 0, i32 0
  %R10D.i74 = bitcast %union.anon* %7997 to i32*
  %7998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7999 = getelementptr inbounds %struct.GPR, %struct.GPR* %7998, i32 0, i32 23
  %8000 = getelementptr inbounds %struct.Reg, %struct.Reg* %7999, i32 0, i32 0
  %R11D.i75 = bitcast %union.anon* %8000 to i32*
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8002 = getelementptr inbounds %struct.GPR, %struct.GPR* %8001, i32 0, i32 25
  %8003 = getelementptr inbounds %struct.Reg, %struct.Reg* %8002, i32 0, i32 0
  %R12D.i76 = bitcast %union.anon* %8003 to i32*
  %8004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8005 = getelementptr inbounds %struct.GPR, %struct.GPR* %8004, i32 0, i32 27
  %8006 = getelementptr inbounds %struct.Reg, %struct.Reg* %8005, i32 0, i32 0
  %R13D.i77 = bitcast %union.anon* %8006 to i32*
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8008 = getelementptr inbounds %struct.GPR, %struct.GPR* %8007, i32 0, i32 29
  %8009 = getelementptr inbounds %struct.Reg, %struct.Reg* %8008, i32 0, i32 0
  %R14D.i78 = bitcast %union.anon* %8009 to i32*
  %8010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8011 = getelementptr inbounds %struct.GPR, %struct.GPR* %8010, i32 0, i32 31
  %8012 = getelementptr inbounds %struct.Reg, %struct.Reg* %8011, i32 0, i32 0
  %R15D.i79 = bitcast %union.anon* %8012 to i32*
  %8013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8014 = getelementptr inbounds %struct.GPR, %struct.GPR* %8013, i32 0, i32 1
  %8015 = getelementptr inbounds %struct.Reg, %struct.Reg* %8014, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %8015 to i64*
  %8016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8017 = getelementptr inbounds %struct.GPR, %struct.GPR* %8016, i32 0, i32 3
  %8018 = getelementptr inbounds %struct.Reg, %struct.Reg* %8017, i32 0, i32 0
  %RBX.i81 = bitcast %union.anon* %8018 to i64*
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8020 = getelementptr inbounds %struct.GPR, %struct.GPR* %8019, i32 0, i32 5
  %8021 = getelementptr inbounds %struct.Reg, %struct.Reg* %8020, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %8021 to i64*
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8023 = getelementptr inbounds %struct.GPR, %struct.GPR* %8022, i32 0, i32 7
  %8024 = getelementptr inbounds %struct.Reg, %struct.Reg* %8023, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %8024 to i64*
  %8025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8026 = getelementptr inbounds %struct.GPR, %struct.GPR* %8025, i32 0, i32 9
  %8027 = getelementptr inbounds %struct.Reg, %struct.Reg* %8026, i32 0, i32 0
  %RSI.i84 = bitcast %union.anon* %8027 to i64*
  %8028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8029 = getelementptr inbounds %struct.GPR, %struct.GPR* %8028, i32 0, i32 11
  %8030 = getelementptr inbounds %struct.Reg, %struct.Reg* %8029, i32 0, i32 0
  %RDI.i85 = bitcast %union.anon* %8030 to i64*
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8032 = getelementptr inbounds %struct.GPR, %struct.GPR* %8031, i32 0, i32 13
  %8033 = getelementptr inbounds %struct.Reg, %struct.Reg* %8032, i32 0, i32 0
  %RSP.i86 = bitcast %union.anon* %8033 to i64*
  %8034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8035 = getelementptr inbounds %struct.GPR, %struct.GPR* %8034, i32 0, i32 15
  %8036 = getelementptr inbounds %struct.Reg, %struct.Reg* %8035, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %8036 to i64*
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8038 = getelementptr inbounds %struct.GPR, %struct.GPR* %8037, i32 0, i32 17
  %8039 = getelementptr inbounds %struct.Reg, %struct.Reg* %8038, i32 0, i32 0
  %R8.i88 = bitcast %union.anon* %8039 to i64*
  %8040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8041 = getelementptr inbounds %struct.GPR, %struct.GPR* %8040, i32 0, i32 19
  %8042 = getelementptr inbounds %struct.Reg, %struct.Reg* %8041, i32 0, i32 0
  %R9.i89 = bitcast %union.anon* %8042 to i64*
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8044 = getelementptr inbounds %struct.GPR, %struct.GPR* %8043, i32 0, i32 21
  %8045 = getelementptr inbounds %struct.Reg, %struct.Reg* %8044, i32 0, i32 0
  %R10.i90 = bitcast %union.anon* %8045 to i64*
  %8046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8047 = getelementptr inbounds %struct.GPR, %struct.GPR* %8046, i32 0, i32 23
  %8048 = getelementptr inbounds %struct.Reg, %struct.Reg* %8047, i32 0, i32 0
  %R11.i91 = bitcast %union.anon* %8048 to i64*
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8050 = getelementptr inbounds %struct.GPR, %struct.GPR* %8049, i32 0, i32 25
  %8051 = getelementptr inbounds %struct.Reg, %struct.Reg* %8050, i32 0, i32 0
  %R12.i92 = bitcast %union.anon* %8051 to i64*
  %8052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8053 = getelementptr inbounds %struct.GPR, %struct.GPR* %8052, i32 0, i32 27
  %8054 = getelementptr inbounds %struct.Reg, %struct.Reg* %8053, i32 0, i32 0
  %R13.i93 = bitcast %union.anon* %8054 to i64*
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8056 = getelementptr inbounds %struct.GPR, %struct.GPR* %8055, i32 0, i32 29
  %8057 = getelementptr inbounds %struct.Reg, %struct.Reg* %8056, i32 0, i32 0
  %R14.i94 = bitcast %union.anon* %8057 to i64*
  %8058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8059 = getelementptr inbounds %struct.GPR, %struct.GPR* %8058, i32 0, i32 31
  %8060 = getelementptr inbounds %struct.Reg, %struct.Reg* %8059, i32 0, i32 0
  %R15.i95 = bitcast %union.anon* %8060 to i64*
  %8061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8062 = getelementptr inbounds %struct.GPR, %struct.GPR* %8061, i32 0, i32 33
  %8063 = getelementptr inbounds %struct.Reg, %struct.Reg* %8062, i32 0, i32 0
  %RIP.i96 = bitcast %union.anon* %8063 to i64*
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8065 = getelementptr inbounds %struct.Segments, %struct.Segments* %8064, i32 0, i32 1
  %SS.i97 = bitcast %union.SegmentSelector* %8065 to i16*
  %8066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8067 = getelementptr inbounds %struct.Segments, %struct.Segments* %8066, i32 0, i32 3
  %ES.i98 = bitcast %union.SegmentSelector* %8067 to i16*
  %8068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8069 = getelementptr inbounds %struct.Segments, %struct.Segments* %8068, i32 0, i32 5
  %GS.i99 = bitcast %union.SegmentSelector* %8069 to i16*
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8071 = getelementptr inbounds %struct.Segments, %struct.Segments* %8070, i32 0, i32 7
  %FS.i100 = bitcast %union.SegmentSelector* %8071 to i16*
  %8072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8073 = getelementptr inbounds %struct.Segments, %struct.Segments* %8072, i32 0, i32 9
  %DS.i101 = bitcast %union.SegmentSelector* %8073 to i16*
  %8074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8075 = getelementptr inbounds %struct.Segments, %struct.Segments* %8074, i32 0, i32 11
  %CS.i102 = bitcast %union.SegmentSelector* %8075 to i16*
  %8076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %8077 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %8076, i32 0, i32 5
  %8078 = getelementptr inbounds %struct.Reg, %struct.Reg* %8077, i32 0, i32 0
  %GS_BASE.i103 = bitcast %union.anon* %8078 to i64*
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %8080 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %8079, i32 0, i32 7
  %8081 = getelementptr inbounds %struct.Reg, %struct.Reg* %8080, i32 0, i32 0
  %FS_BASE.i104 = bitcast %union.anon* %8081 to i64*
  %8082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8083 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8082, i64 0, i64 0
  %YMM0.i105 = bitcast %union.VectorReg* %8083 to %"class.std::bitset"*
  %8084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8085 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8084, i64 0, i64 1
  %YMM1.i106 = bitcast %union.VectorReg* %8085 to %"class.std::bitset"*
  %8086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8087 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8086, i64 0, i64 2
  %YMM2.i107 = bitcast %union.VectorReg* %8087 to %"class.std::bitset"*
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8089 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8088, i64 0, i64 3
  %YMM3.i108 = bitcast %union.VectorReg* %8089 to %"class.std::bitset"*
  %8090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8091 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8090, i64 0, i64 4
  %YMM4.i109 = bitcast %union.VectorReg* %8091 to %"class.std::bitset"*
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8093 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8092, i64 0, i64 5
  %YMM5.i110 = bitcast %union.VectorReg* %8093 to %"class.std::bitset"*
  %8094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8095 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8094, i64 0, i64 6
  %YMM6.i111 = bitcast %union.VectorReg* %8095 to %"class.std::bitset"*
  %8096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8097 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8096, i64 0, i64 7
  %YMM7.i112 = bitcast %union.VectorReg* %8097 to %"class.std::bitset"*
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8099 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8098, i64 0, i64 8
  %YMM8.i113 = bitcast %union.VectorReg* %8099 to %"class.std::bitset"*
  %8100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8101 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8100, i64 0, i64 9
  %YMM9.i114 = bitcast %union.VectorReg* %8101 to %"class.std::bitset"*
  %8102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8103 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8102, i64 0, i64 10
  %YMM10.i115 = bitcast %union.VectorReg* %8103 to %"class.std::bitset"*
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8105 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8104, i64 0, i64 11
  %YMM11.i116 = bitcast %union.VectorReg* %8105 to %"class.std::bitset"*
  %8106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8107 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8106, i64 0, i64 12
  %YMM12.i117 = bitcast %union.VectorReg* %8107 to %"class.std::bitset"*
  %8108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8109 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8108, i64 0, i64 13
  %YMM13.i118 = bitcast %union.VectorReg* %8109 to %"class.std::bitset"*
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8111 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8110, i64 0, i64 14
  %YMM14.i119 = bitcast %union.VectorReg* %8111 to %"class.std::bitset"*
  %8112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8113 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8112, i64 0, i64 15
  %YMM15.i120 = bitcast %union.VectorReg* %8113 to %"class.std::bitset"*
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8115 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8114, i64 0, i64 0
  %XMM0.i121 = bitcast %union.VectorReg* %8115 to %union.vec128_t*
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8117 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8116, i64 0, i64 1
  %XMM1.i122 = bitcast %union.VectorReg* %8117 to %union.vec128_t*
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8119 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8118, i64 0, i64 2
  %XMM2.i123 = bitcast %union.VectorReg* %8119 to %union.vec128_t*
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8121 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8120, i64 0, i64 3
  %XMM3.i124 = bitcast %union.VectorReg* %8121 to %union.vec128_t*
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8123 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8122, i64 0, i64 4
  %XMM4.i125 = bitcast %union.VectorReg* %8123 to %union.vec128_t*
  %8124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8125 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8124, i64 0, i64 5
  %XMM5.i126 = bitcast %union.VectorReg* %8125 to %union.vec128_t*
  %8126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8127 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8126, i64 0, i64 6
  %XMM6.i127 = bitcast %union.VectorReg* %8127 to %union.vec128_t*
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8129 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8128, i64 0, i64 7
  %XMM7.i128 = bitcast %union.VectorReg* %8129 to %union.vec128_t*
  %8130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8131 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8130, i64 0, i64 8
  %XMM8.i129 = bitcast %union.VectorReg* %8131 to %union.vec128_t*
  %8132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8133 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8132, i64 0, i64 9
  %XMM9.i130 = bitcast %union.VectorReg* %8133 to %union.vec128_t*
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8135 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8134, i64 0, i64 10
  %XMM10.i131 = bitcast %union.VectorReg* %8135 to %union.vec128_t*
  %8136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8137 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8136, i64 0, i64 11
  %XMM11.i132 = bitcast %union.VectorReg* %8137 to %union.vec128_t*
  %8138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8139 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8138, i64 0, i64 12
  %XMM12.i133 = bitcast %union.VectorReg* %8139 to %union.vec128_t*
  %8140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8141 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8140, i64 0, i64 13
  %XMM13.i134 = bitcast %union.VectorReg* %8141 to %union.vec128_t*
  %8142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8143 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8142, i64 0, i64 14
  %XMM14.i135 = bitcast %union.VectorReg* %8143 to %union.vec128_t*
  %8144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8145 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8144, i64 0, i64 15
  %XMM15.i136 = bitcast %union.VectorReg* %8145 to %union.vec128_t*
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8147 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8146, i32 0, i32 0
  %8148 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8147, i64 0, i64 0
  %ST0.i137 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8148, i32 0, i32 1
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8150 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8149, i32 0, i32 0
  %8151 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8150, i64 0, i64 1
  %ST1.i138 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8151, i32 0, i32 1
  %8152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8153 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8152, i32 0, i32 0
  %8154 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8153, i64 0, i64 2
  %ST2.i139 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8154, i32 0, i32 1
  %8155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8156 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8155, i32 0, i32 0
  %8157 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8156, i64 0, i64 3
  %ST3.i140 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8157, i32 0, i32 1
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8159 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8158, i32 0, i32 0
  %8160 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8159, i64 0, i64 4
  %ST4.i141 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8160, i32 0, i32 1
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8162 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8161, i32 0, i32 0
  %8163 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8162, i64 0, i64 5
  %ST5.i142 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8163, i32 0, i32 1
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8165 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8164, i32 0, i32 0
  %8166 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8165, i64 0, i64 6
  %ST6.i143 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8166, i32 0, i32 1
  %8167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8168 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8167, i32 0, i32 0
  %8169 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8168, i64 0, i64 7
  %ST7.i144 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8169, i32 0, i32 1
  %8170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8171 = getelementptr inbounds %struct.MMX, %struct.MMX* %8170, i32 0, i32 0
  %8172 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8171, i64 0, i64 0
  %8173 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8172, i32 0, i32 1
  %8174 = bitcast %union.vec64_t* %8173 to %struct.uint64v1_t*
  %8175 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8174, i32 0, i32 0
  %MM0.i145 = getelementptr inbounds [1 x i64], [1 x i64]* %8175, i64 0, i64 0
  %8176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8177 = getelementptr inbounds %struct.MMX, %struct.MMX* %8176, i32 0, i32 0
  %8178 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8177, i64 0, i64 1
  %8179 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8178, i32 0, i32 1
  %8180 = bitcast %union.vec64_t* %8179 to %struct.uint64v1_t*
  %8181 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8180, i32 0, i32 0
  %MM1.i146 = getelementptr inbounds [1 x i64], [1 x i64]* %8181, i64 0, i64 0
  %8182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8183 = getelementptr inbounds %struct.MMX, %struct.MMX* %8182, i32 0, i32 0
  %8184 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8183, i64 0, i64 2
  %8185 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8184, i32 0, i32 1
  %8186 = bitcast %union.vec64_t* %8185 to %struct.uint64v1_t*
  %8187 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8186, i32 0, i32 0
  %MM2.i147 = getelementptr inbounds [1 x i64], [1 x i64]* %8187, i64 0, i64 0
  %8188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8189 = getelementptr inbounds %struct.MMX, %struct.MMX* %8188, i32 0, i32 0
  %8190 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8189, i64 0, i64 3
  %8191 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8190, i32 0, i32 1
  %8192 = bitcast %union.vec64_t* %8191 to %struct.uint64v1_t*
  %8193 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8192, i32 0, i32 0
  %MM3.i148 = getelementptr inbounds [1 x i64], [1 x i64]* %8193, i64 0, i64 0
  %8194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8195 = getelementptr inbounds %struct.MMX, %struct.MMX* %8194, i32 0, i32 0
  %8196 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8195, i64 0, i64 4
  %8197 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8196, i32 0, i32 1
  %8198 = bitcast %union.vec64_t* %8197 to %struct.uint64v1_t*
  %8199 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8198, i32 0, i32 0
  %MM4.i149 = getelementptr inbounds [1 x i64], [1 x i64]* %8199, i64 0, i64 0
  %8200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8201 = getelementptr inbounds %struct.MMX, %struct.MMX* %8200, i32 0, i32 0
  %8202 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8201, i64 0, i64 5
  %8203 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8202, i32 0, i32 1
  %8204 = bitcast %union.vec64_t* %8203 to %struct.uint64v1_t*
  %8205 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8204, i32 0, i32 0
  %MM5.i150 = getelementptr inbounds [1 x i64], [1 x i64]* %8205, i64 0, i64 0
  %8206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8207 = getelementptr inbounds %struct.MMX, %struct.MMX* %8206, i32 0, i32 0
  %8208 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8207, i64 0, i64 6
  %8209 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8208, i32 0, i32 1
  %8210 = bitcast %union.vec64_t* %8209 to %struct.uint64v1_t*
  %8211 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8210, i32 0, i32 0
  %MM6.i151 = getelementptr inbounds [1 x i64], [1 x i64]* %8211, i64 0, i64 0
  %8212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8213 = getelementptr inbounds %struct.MMX, %struct.MMX* %8212, i32 0, i32 0
  %8214 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8213, i64 0, i64 7
  %8215 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8214, i32 0, i32 1
  %8216 = bitcast %union.vec64_t* %8215 to %struct.uint64v1_t*
  %8217 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8216, i32 0, i32 0
  %MM7.i152 = getelementptr inbounds [1 x i64], [1 x i64]* %8217, i64 0, i64 0
  %8218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i153 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8218, i32 0, i32 5
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i154 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8219, i32 0, i32 1
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i155 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8220, i32 0, i32 11
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i156 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8221, i32 0, i32 13
  %8222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i157 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8222, i32 0, i32 3
  %8223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i158 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8223, i32 0, i32 9
  %8224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i159 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8224, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i11, align 8, !noalias !2510
  store i64* @DR1, i64** %_DR1.i12, align 8, !noalias !2510
  store i64* @DR2, i64** %_DR2.i13, align 8, !noalias !2510
  store i64* @DR3, i64** %_DR3.i14, align 8, !noalias !2510
  store i64* @DR4, i64** %_DR4.i15, align 8, !noalias !2510
  store i64* @DR5, i64** %_DR5.i16, align 8, !noalias !2510
  store i64* @DR6, i64** %_DR6.i17, align 8, !noalias !2510
  store i64* @DR7, i64** %_DR7.i18, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i19, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i20, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i21, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i22, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i23, align 8, !noalias !2510
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i24, align 8, !noalias !2510
  %8225 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  %8226 = load double, double* %8225, !alias.scope !2514, !noalias !2515
  %8227 = load i64, i64* %RSP.i86, !alias.scope !2514, !noalias !2515
  %8228 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2510
  %8229 = inttoptr i64 %8227 to i64*
  %8230 = load i64, i64* %8229
  store i64 %8230, i64* %PC.i25, !alias.scope !2514, !noalias !2515
  %8231 = add i64 %8227, 8
  store i64 %8231, i64* %RSP.i86, !alias.scope !2514, !noalias !2515
  %8232 = call double @cos(double %8226)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i105, !alias.scope !2514, !noalias !2515
  %8233 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  store double %8232, double* %8233, !alias.scope !2514, !noalias !2515
  %8234 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2510
  %8235 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8235)
  %8236 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8236)
  %8237 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8237)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i4)
  %8238 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8238)
  %8239 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8239)
  %8240 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8240)
  %8241 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8241)
  %8242 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8242)
  %8243 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8243)
  %8244 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8244)
  %8245 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8245)
  %8246 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8246)
  %8247 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8247)
  %8248 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8248)
  %8249 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8249)
  %8250 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8250)
  %8251 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8251)
  %8252 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8252)
  %8253 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8253)
  %8254 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8254)
  %8255 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8255)
  %8256 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8256)
  %8257 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8257)
  %8258 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8259 = load i64, i64* %RBP
  %8260 = sub i64 %8259, 312
  %8261 = load i64, i64* %PC
  %8262 = add i64 %8261, 8
  store i64 %8262, i64* %PC
  %8263 = inttoptr i64 %8260 to double*
  %8264 = load double, double* %8263
  %8265 = bitcast i8* %8258 to double*
  store double %8264, double* %8265, align 1, !tbaa !2432
  %8266 = getelementptr inbounds i8, i8* %8258, i64 8
  %8267 = bitcast i8* %8266 to double*
  store double 0.000000e+00, double* %8267, align 1, !tbaa !2432
  %8268 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8269 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8270 = bitcast %union.vec128_t* %XMM0 to i8*
  %8271 = load i64, i64* %PC
  %8272 = add i64 %8271, 4
  store i64 %8272, i64* %PC
  %8273 = bitcast i8* %8269 to double*
  %8274 = load double, double* %8273, align 1
  %8275 = getelementptr inbounds i8, i8* %8269, i64 8
  %8276 = bitcast i8* %8275 to i64*
  %8277 = load i64, i64* %8276, align 1
  %8278 = bitcast i8* %8270 to double*
  %8279 = load double, double* %8278, align 1
  %8280 = fadd double %8274, %8279
  %8281 = bitcast i8* %8268 to double*
  store double %8280, double* %8281, align 1, !tbaa !2432
  %8282 = getelementptr inbounds i8, i8* %8268, i64 8
  %8283 = bitcast i8* %8282 to i64*
  store i64 %8277, i64* %8283, align 1, !tbaa !2432
  %8284 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8285 = load i64, i64* %RBP
  %8286 = sub i64 %8285, 280
  %8287 = load i64, i64* %PC
  %8288 = add i64 %8287, 8
  store i64 %8288, i64* %PC
  %8289 = inttoptr i64 %8286 to double*
  %8290 = load double, double* %8289
  %8291 = bitcast i8* %8284 to double*
  store double %8290, double* %8291, align 1, !tbaa !2432
  %8292 = getelementptr inbounds i8, i8* %8284, i64 8
  %8293 = bitcast i8* %8292 to double*
  store double 0.000000e+00, double* %8293, align 1, !tbaa !2432
  %8294 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8295 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8296 = bitcast %union.vec128_t* %XMM0 to i8*
  %8297 = load i64, i64* %PC
  %8298 = add i64 %8297, 4
  store i64 %8298, i64* %PC
  %8299 = bitcast i8* %8295 to double*
  %8300 = load double, double* %8299, align 1
  %8301 = getelementptr inbounds i8, i8* %8295, i64 8
  %8302 = bitcast i8* %8301 to i64*
  %8303 = load i64, i64* %8302, align 1
  %8304 = bitcast i8* %8296 to double*
  %8305 = load double, double* %8304, align 1
  %8306 = fsub double %8300, %8305
  %8307 = bitcast i8* %8294 to double*
  store double %8306, double* %8307, align 1, !tbaa !2432
  %8308 = getelementptr inbounds i8, i8* %8294, i64 8
  %8309 = bitcast i8* %8308 to i64*
  store i64 %8303, i64* %8309, align 1, !tbaa !2432
  %8310 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8311 = load i64, i64* %RBP
  %8312 = sub i64 %8311, 304
  %8313 = load i64, i64* %PC
  %8314 = add i64 %8313, 8
  store i64 %8314, i64* %PC
  %8315 = inttoptr i64 %8312 to double*
  %8316 = load double, double* %8315
  %8317 = bitcast i8* %8310 to double*
  store double %8316, double* %8317, align 1, !tbaa !2432
  %8318 = getelementptr inbounds i8, i8* %8310, i64 8
  %8319 = bitcast i8* %8318 to double*
  store double 0.000000e+00, double* %8319, align 1, !tbaa !2432
  %8320 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8321 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %8322 = bitcast %union.vec128_t* %XMM1 to i8*
  %8323 = load i64, i64* %PC
  %8324 = add i64 %8323, 4
  store i64 %8324, i64* %PC
  %8325 = bitcast i8* %8321 to double*
  %8326 = load double, double* %8325, align 1
  %8327 = getelementptr inbounds i8, i8* %8321, i64 8
  %8328 = bitcast i8* %8327 to i64*
  %8329 = load i64, i64* %8328, align 1
  %8330 = bitcast i8* %8322 to double*
  %8331 = load double, double* %8330, align 1
  %8332 = fdiv double %8326, %8331
  %8333 = bitcast i8* %8320 to double*
  store double %8332, double* %8333, align 1, !tbaa !2432
  %8334 = getelementptr inbounds i8, i8* %8320, i64 8
  %8335 = bitcast i8* %8334 to i64*
  store i64 %8329, i64* %8335, align 1, !tbaa !2432
  %8336 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %8337 = bitcast %union.vec128_t* %XMM2 to i8*
  %8338 = load i64, i64* %PC
  %8339 = add i64 %8338, 3
  store i64 %8339, i64* %PC
  %8340 = bitcast i8* %8337 to <2 x i32>*
  %8341 = load <2 x i32>, <2 x i32>* %8340, align 1
  %8342 = getelementptr inbounds i8, i8* %8337, i64 8
  %8343 = bitcast i8* %8342 to <2 x i32>*
  %8344 = load <2 x i32>, <2 x i32>* %8343, align 1
  %8345 = extractelement <2 x i32> %8341, i32 0
  %8346 = bitcast i8* %8336 to i32*
  store i32 %8345, i32* %8346, align 1, !tbaa !2460
  %8347 = extractelement <2 x i32> %8341, i32 1
  %8348 = getelementptr inbounds i8, i8* %8336, i64 4
  %8349 = bitcast i8* %8348 to i32*
  store i32 %8347, i32* %8349, align 1, !tbaa !2460
  %8350 = extractelement <2 x i32> %8344, i32 0
  %8351 = getelementptr inbounds i8, i8* %8336, i64 8
  %8352 = bitcast i8* %8351 to i32*
  store i32 %8350, i32* %8352, align 1, !tbaa !2460
  %8353 = extractelement <2 x i32> %8344, i32 1
  %8354 = getelementptr inbounds i8, i8* %8336, i64 12
  %8355 = bitcast i8* %8354 to i32*
  store i32 %8353, i32* %8355, align 1, !tbaa !2460
  %8356 = load i64, i64* %PC
  %8357 = sub i64 %8356, 2858
  %8358 = load i64, i64* %PC
  %8359 = add i64 %8358, 5
  %8360 = load i64, i64* %PC
  %8361 = add i64 %8360, 5
  store i64 %8361, i64* %PC
  %8362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8363 = load i64, i64* %8362, align 8, !tbaa !2428
  %8364 = add i64 %8363, -8
  %8365 = inttoptr i64 %8364 to i64*
  store i64 %8359, i64* %8365
  store i64 %8364, i64* %8362, align 8, !tbaa !2428
  %8366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8357, i64* %8366, align 8, !tbaa !2428
  %8367 = load i64, i64* %PC
  %8368 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8368)
  %8369 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8369)
  %8370 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8370)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i)
  %8371 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8371)
  %8372 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8372)
  %8373 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8373)
  %8374 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8374)
  %8375 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8375)
  %8376 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8376)
  %8377 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8377)
  %8378 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8378)
  %8379 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8379)
  %8380 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8380)
  %8381 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8381)
  %8382 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8382)
  %8383 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8383)
  %8384 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8384)
  %8385 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8385)
  %8386 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8386)
  %8387 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8387)
  %8388 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8388)
  %8389 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8389)
  %8390 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8390)
  store %struct.State* %0, %struct.State** %state.i, align 8, !noalias !2516
  store i64 %8367, i64* %curr_pc.i, align 8, !noalias !2516
  store %struct.Memory* %8234, %struct.Memory** %memory.i, align 8, !noalias !2516
  store i8 0, i8* %BRANCH_TAKEN.i, align 1, !noalias !2516
  store i64 0, i64* %SS_BASE.i, align 8, !noalias !2516
  store i64 0, i64* %ES_BASE.i, align 8, !noalias !2516
  store i64 0, i64* %DS_BASE.i, align 8, !noalias !2516
  store i64 0, i64* %CS_BASE.i, align 8, !noalias !2516
  store %struct.State* %0, %struct.State** %STATE.i, align 8, !noalias !2516
  store %struct.Memory* %8234, %struct.Memory** %MEMORY.i, align 8, !noalias !2516
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8392 = getelementptr inbounds %struct.GPR, %struct.GPR* %8391, i32 0, i32 33
  %8393 = getelementptr inbounds %struct.Reg, %struct.Reg* %8392, i32 0, i32 0
  %PC.i = bitcast %union.anon* %8393 to i64*
  store i64 %8367, i64* %PC.i, align 8, !alias.scope !2520, !noalias !2521
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8395 = getelementptr inbounds %struct.GPR, %struct.GPR* %8394, i32 0, i32 1
  %8396 = getelementptr inbounds %struct.Reg, %struct.Reg* %8395, i32 0, i32 0
  %8397 = bitcast %union.anon* %8396 to %struct.anon.2*
  %AH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8397, i32 0, i32 1
  %8398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8399 = getelementptr inbounds %struct.GPR, %struct.GPR* %8398, i32 0, i32 3
  %8400 = getelementptr inbounds %struct.Reg, %struct.Reg* %8399, i32 0, i32 0
  %8401 = bitcast %union.anon* %8400 to %struct.anon.2*
  %BH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8401, i32 0, i32 1
  %8402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8403 = getelementptr inbounds %struct.GPR, %struct.GPR* %8402, i32 0, i32 5
  %8404 = getelementptr inbounds %struct.Reg, %struct.Reg* %8403, i32 0, i32 0
  %8405 = bitcast %union.anon* %8404 to %struct.anon.2*
  %CH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8405, i32 0, i32 1
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 7
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %8409 = bitcast %union.anon* %8408 to %struct.anon.2*
  %DH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8409, i32 0, i32 1
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8411 = getelementptr inbounds %struct.GPR, %struct.GPR* %8410, i32 0, i32 1
  %8412 = getelementptr inbounds %struct.Reg, %struct.Reg* %8411, i32 0, i32 0
  %8413 = bitcast %union.anon* %8412 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8413, i32 0, i32 0
  %8414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8415 = getelementptr inbounds %struct.GPR, %struct.GPR* %8414, i32 0, i32 3
  %8416 = getelementptr inbounds %struct.Reg, %struct.Reg* %8415, i32 0, i32 0
  %8417 = bitcast %union.anon* %8416 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8417, i32 0, i32 0
  %8418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8419 = getelementptr inbounds %struct.GPR, %struct.GPR* %8418, i32 0, i32 5
  %8420 = getelementptr inbounds %struct.Reg, %struct.Reg* %8419, i32 0, i32 0
  %8421 = bitcast %union.anon* %8420 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8421, i32 0, i32 0
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 7
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %8425 = bitcast %union.anon* %8424 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8425, i32 0, i32 0
  %8426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8427 = getelementptr inbounds %struct.GPR, %struct.GPR* %8426, i32 0, i32 9
  %8428 = getelementptr inbounds %struct.Reg, %struct.Reg* %8427, i32 0, i32 0
  %8429 = bitcast %union.anon* %8428 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8429, i32 0, i32 0
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 11
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %8433 = bitcast %union.anon* %8432 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8433, i32 0, i32 0
  %8434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8435 = getelementptr inbounds %struct.GPR, %struct.GPR* %8434, i32 0, i32 13
  %8436 = getelementptr inbounds %struct.Reg, %struct.Reg* %8435, i32 0, i32 0
  %8437 = bitcast %union.anon* %8436 to %struct.anon.2*
  %SPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8437, i32 0, i32 0
  %8438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8439 = getelementptr inbounds %struct.GPR, %struct.GPR* %8438, i32 0, i32 15
  %8440 = getelementptr inbounds %struct.Reg, %struct.Reg* %8439, i32 0, i32 0
  %8441 = bitcast %union.anon* %8440 to %struct.anon.2*
  %BPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8441, i32 0, i32 0
  %8442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8443 = getelementptr inbounds %struct.GPR, %struct.GPR* %8442, i32 0, i32 17
  %8444 = getelementptr inbounds %struct.Reg, %struct.Reg* %8443, i32 0, i32 0
  %8445 = bitcast %union.anon* %8444 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8445, i32 0, i32 0
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8447 = getelementptr inbounds %struct.GPR, %struct.GPR* %8446, i32 0, i32 19
  %8448 = getelementptr inbounds %struct.Reg, %struct.Reg* %8447, i32 0, i32 0
  %8449 = bitcast %union.anon* %8448 to %struct.anon.2*
  %R9B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8449, i32 0, i32 0
  %8450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8451 = getelementptr inbounds %struct.GPR, %struct.GPR* %8450, i32 0, i32 21
  %8452 = getelementptr inbounds %struct.Reg, %struct.Reg* %8451, i32 0, i32 0
  %8453 = bitcast %union.anon* %8452 to %struct.anon.2*
  %R10B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8453, i32 0, i32 0
  %8454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8455 = getelementptr inbounds %struct.GPR, %struct.GPR* %8454, i32 0, i32 23
  %8456 = getelementptr inbounds %struct.Reg, %struct.Reg* %8455, i32 0, i32 0
  %8457 = bitcast %union.anon* %8456 to %struct.anon.2*
  %R11B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8457, i32 0, i32 0
  %8458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8459 = getelementptr inbounds %struct.GPR, %struct.GPR* %8458, i32 0, i32 25
  %8460 = getelementptr inbounds %struct.Reg, %struct.Reg* %8459, i32 0, i32 0
  %8461 = bitcast %union.anon* %8460 to %struct.anon.2*
  %R12B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8461, i32 0, i32 0
  %8462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8463 = getelementptr inbounds %struct.GPR, %struct.GPR* %8462, i32 0, i32 27
  %8464 = getelementptr inbounds %struct.Reg, %struct.Reg* %8463, i32 0, i32 0
  %8465 = bitcast %union.anon* %8464 to %struct.anon.2*
  %R13B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8465, i32 0, i32 0
  %8466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8467 = getelementptr inbounds %struct.GPR, %struct.GPR* %8466, i32 0, i32 29
  %8468 = getelementptr inbounds %struct.Reg, %struct.Reg* %8467, i32 0, i32 0
  %8469 = bitcast %union.anon* %8468 to %struct.anon.2*
  %R14B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8469, i32 0, i32 0
  %8470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8471 = getelementptr inbounds %struct.GPR, %struct.GPR* %8470, i32 0, i32 31
  %8472 = getelementptr inbounds %struct.Reg, %struct.Reg* %8471, i32 0, i32 0
  %8473 = bitcast %union.anon* %8472 to %struct.anon.2*
  %R15B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8473, i32 0, i32 0
  %8474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8475 = getelementptr inbounds %struct.GPR, %struct.GPR* %8474, i32 0, i32 1
  %8476 = getelementptr inbounds %struct.Reg, %struct.Reg* %8475, i32 0, i32 0
  %AX.i = bitcast %union.anon* %8476 to i16*
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8478 = getelementptr inbounds %struct.GPR, %struct.GPR* %8477, i32 0, i32 3
  %8479 = getelementptr inbounds %struct.Reg, %struct.Reg* %8478, i32 0, i32 0
  %BX.i = bitcast %union.anon* %8479 to i16*
  %8480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8481 = getelementptr inbounds %struct.GPR, %struct.GPR* %8480, i32 0, i32 5
  %8482 = getelementptr inbounds %struct.Reg, %struct.Reg* %8481, i32 0, i32 0
  %CX.i = bitcast %union.anon* %8482 to i16*
  %8483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8484 = getelementptr inbounds %struct.GPR, %struct.GPR* %8483, i32 0, i32 7
  %8485 = getelementptr inbounds %struct.Reg, %struct.Reg* %8484, i32 0, i32 0
  %DX.i = bitcast %union.anon* %8485 to i16*
  %8486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8487 = getelementptr inbounds %struct.GPR, %struct.GPR* %8486, i32 0, i32 9
  %8488 = getelementptr inbounds %struct.Reg, %struct.Reg* %8487, i32 0, i32 0
  %SI.i = bitcast %union.anon* %8488 to i16*
  %8489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8490 = getelementptr inbounds %struct.GPR, %struct.GPR* %8489, i32 0, i32 11
  %8491 = getelementptr inbounds %struct.Reg, %struct.Reg* %8490, i32 0, i32 0
  %DI.i = bitcast %union.anon* %8491 to i16*
  %8492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8493 = getelementptr inbounds %struct.GPR, %struct.GPR* %8492, i32 0, i32 13
  %8494 = getelementptr inbounds %struct.Reg, %struct.Reg* %8493, i32 0, i32 0
  %SP.i = bitcast %union.anon* %8494 to i16*
  %8495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8496 = getelementptr inbounds %struct.GPR, %struct.GPR* %8495, i32 0, i32 15
  %8497 = getelementptr inbounds %struct.Reg, %struct.Reg* %8496, i32 0, i32 0
  %BP.i = bitcast %union.anon* %8497 to i16*
  %8498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8499 = getelementptr inbounds %struct.GPR, %struct.GPR* %8498, i32 0, i32 17
  %8500 = getelementptr inbounds %struct.Reg, %struct.Reg* %8499, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %8500 to i16*
  %8501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8502 = getelementptr inbounds %struct.GPR, %struct.GPR* %8501, i32 0, i32 19
  %8503 = getelementptr inbounds %struct.Reg, %struct.Reg* %8502, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %8503 to i16*
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8505 = getelementptr inbounds %struct.GPR, %struct.GPR* %8504, i32 0, i32 21
  %8506 = getelementptr inbounds %struct.Reg, %struct.Reg* %8505, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %8506 to i16*
  %8507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8508 = getelementptr inbounds %struct.GPR, %struct.GPR* %8507, i32 0, i32 23
  %8509 = getelementptr inbounds %struct.Reg, %struct.Reg* %8508, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %8509 to i16*
  %8510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8511 = getelementptr inbounds %struct.GPR, %struct.GPR* %8510, i32 0, i32 25
  %8512 = getelementptr inbounds %struct.Reg, %struct.Reg* %8511, i32 0, i32 0
  %R12W.i = bitcast %union.anon* %8512 to i16*
  %8513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8514 = getelementptr inbounds %struct.GPR, %struct.GPR* %8513, i32 0, i32 27
  %8515 = getelementptr inbounds %struct.Reg, %struct.Reg* %8514, i32 0, i32 0
  %R13W.i = bitcast %union.anon* %8515 to i16*
  %8516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8517 = getelementptr inbounds %struct.GPR, %struct.GPR* %8516, i32 0, i32 29
  %8518 = getelementptr inbounds %struct.Reg, %struct.Reg* %8517, i32 0, i32 0
  %R14W.i = bitcast %union.anon* %8518 to i16*
  %8519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8520 = getelementptr inbounds %struct.GPR, %struct.GPR* %8519, i32 0, i32 31
  %8521 = getelementptr inbounds %struct.Reg, %struct.Reg* %8520, i32 0, i32 0
  %R15W.i = bitcast %union.anon* %8521 to i16*
  %8522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8523 = getelementptr inbounds %struct.GPR, %struct.GPR* %8522, i32 0, i32 33
  %8524 = getelementptr inbounds %struct.Reg, %struct.Reg* %8523, i32 0, i32 0
  %IP.i = bitcast %union.anon* %8524 to i16*
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8526 = getelementptr inbounds %struct.GPR, %struct.GPR* %8525, i32 0, i32 1
  %8527 = getelementptr inbounds %struct.Reg, %struct.Reg* %8526, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %8527 to i32*
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 3
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %8530 to i32*
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8532 = getelementptr inbounds %struct.GPR, %struct.GPR* %8531, i32 0, i32 5
  %8533 = getelementptr inbounds %struct.Reg, %struct.Reg* %8532, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %8533 to i32*
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8535 = getelementptr inbounds %struct.GPR, %struct.GPR* %8534, i32 0, i32 7
  %8536 = getelementptr inbounds %struct.Reg, %struct.Reg* %8535, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %8536 to i32*
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8538 = getelementptr inbounds %struct.GPR, %struct.GPR* %8537, i32 0, i32 9
  %8539 = getelementptr inbounds %struct.Reg, %struct.Reg* %8538, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %8539 to i32*
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8541 = getelementptr inbounds %struct.GPR, %struct.GPR* %8540, i32 0, i32 11
  %8542 = getelementptr inbounds %struct.Reg, %struct.Reg* %8541, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %8542 to i32*
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 13
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %ESP.i = bitcast %union.anon* %8545 to i32*
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8547 = getelementptr inbounds %struct.GPR, %struct.GPR* %8546, i32 0, i32 15
  %8548 = getelementptr inbounds %struct.Reg, %struct.Reg* %8547, i32 0, i32 0
  %EBP.i = bitcast %union.anon* %8548 to i32*
  %8549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8550 = getelementptr inbounds %struct.GPR, %struct.GPR* %8549, i32 0, i32 33
  %8551 = getelementptr inbounds %struct.Reg, %struct.Reg* %8550, i32 0, i32 0
  %EIP.i = bitcast %union.anon* %8551 to i32*
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8553 = getelementptr inbounds %struct.GPR, %struct.GPR* %8552, i32 0, i32 17
  %8554 = getelementptr inbounds %struct.Reg, %struct.Reg* %8553, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %8554 to i32*
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8556 = getelementptr inbounds %struct.GPR, %struct.GPR* %8555, i32 0, i32 19
  %8557 = getelementptr inbounds %struct.Reg, %struct.Reg* %8556, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %8557 to i32*
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8559 = getelementptr inbounds %struct.GPR, %struct.GPR* %8558, i32 0, i32 21
  %8560 = getelementptr inbounds %struct.Reg, %struct.Reg* %8559, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %8560 to i32*
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8562 = getelementptr inbounds %struct.GPR, %struct.GPR* %8561, i32 0, i32 23
  %8563 = getelementptr inbounds %struct.Reg, %struct.Reg* %8562, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %8563 to i32*
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8565 = getelementptr inbounds %struct.GPR, %struct.GPR* %8564, i32 0, i32 25
  %8566 = getelementptr inbounds %struct.Reg, %struct.Reg* %8565, i32 0, i32 0
  %R12D.i = bitcast %union.anon* %8566 to i32*
  %8567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8568 = getelementptr inbounds %struct.GPR, %struct.GPR* %8567, i32 0, i32 27
  %8569 = getelementptr inbounds %struct.Reg, %struct.Reg* %8568, i32 0, i32 0
  %R13D.i = bitcast %union.anon* %8569 to i32*
  %8570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8571 = getelementptr inbounds %struct.GPR, %struct.GPR* %8570, i32 0, i32 29
  %8572 = getelementptr inbounds %struct.Reg, %struct.Reg* %8571, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %8572 to i32*
  %8573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8574 = getelementptr inbounds %struct.GPR, %struct.GPR* %8573, i32 0, i32 31
  %8575 = getelementptr inbounds %struct.Reg, %struct.Reg* %8574, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %8575 to i32*
  %8576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8577 = getelementptr inbounds %struct.GPR, %struct.GPR* %8576, i32 0, i32 1
  %8578 = getelementptr inbounds %struct.Reg, %struct.Reg* %8577, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %8578 to i64*
  %8579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8580 = getelementptr inbounds %struct.GPR, %struct.GPR* %8579, i32 0, i32 3
  %8581 = getelementptr inbounds %struct.Reg, %struct.Reg* %8580, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %8581 to i64*
  %8582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8583 = getelementptr inbounds %struct.GPR, %struct.GPR* %8582, i32 0, i32 5
  %8584 = getelementptr inbounds %struct.Reg, %struct.Reg* %8583, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %8584 to i64*
  %8585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8586 = getelementptr inbounds %struct.GPR, %struct.GPR* %8585, i32 0, i32 7
  %8587 = getelementptr inbounds %struct.Reg, %struct.Reg* %8586, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %8587 to i64*
  %8588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8589 = getelementptr inbounds %struct.GPR, %struct.GPR* %8588, i32 0, i32 9
  %8590 = getelementptr inbounds %struct.Reg, %struct.Reg* %8589, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %8590 to i64*
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8592 = getelementptr inbounds %struct.GPR, %struct.GPR* %8591, i32 0, i32 11
  %8593 = getelementptr inbounds %struct.Reg, %struct.Reg* %8592, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %8593 to i64*
  %8594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8595 = getelementptr inbounds %struct.GPR, %struct.GPR* %8594, i32 0, i32 13
  %8596 = getelementptr inbounds %struct.Reg, %struct.Reg* %8595, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %8596 to i64*
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8598 = getelementptr inbounds %struct.GPR, %struct.GPR* %8597, i32 0, i32 15
  %8599 = getelementptr inbounds %struct.Reg, %struct.Reg* %8598, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %8599 to i64*
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8601 = getelementptr inbounds %struct.GPR, %struct.GPR* %8600, i32 0, i32 17
  %8602 = getelementptr inbounds %struct.Reg, %struct.Reg* %8601, i32 0, i32 0
  %R8.i = bitcast %union.anon* %8602 to i64*
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8604 = getelementptr inbounds %struct.GPR, %struct.GPR* %8603, i32 0, i32 19
  %8605 = getelementptr inbounds %struct.Reg, %struct.Reg* %8604, i32 0, i32 0
  %R9.i = bitcast %union.anon* %8605 to i64*
  %8606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8607 = getelementptr inbounds %struct.GPR, %struct.GPR* %8606, i32 0, i32 21
  %8608 = getelementptr inbounds %struct.Reg, %struct.Reg* %8607, i32 0, i32 0
  %R10.i = bitcast %union.anon* %8608 to i64*
  %8609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8610 = getelementptr inbounds %struct.GPR, %struct.GPR* %8609, i32 0, i32 23
  %8611 = getelementptr inbounds %struct.Reg, %struct.Reg* %8610, i32 0, i32 0
  %R11.i = bitcast %union.anon* %8611 to i64*
  %8612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8613 = getelementptr inbounds %struct.GPR, %struct.GPR* %8612, i32 0, i32 25
  %8614 = getelementptr inbounds %struct.Reg, %struct.Reg* %8613, i32 0, i32 0
  %R12.i = bitcast %union.anon* %8614 to i64*
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8616 = getelementptr inbounds %struct.GPR, %struct.GPR* %8615, i32 0, i32 27
  %8617 = getelementptr inbounds %struct.Reg, %struct.Reg* %8616, i32 0, i32 0
  %R13.i = bitcast %union.anon* %8617 to i64*
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8619 = getelementptr inbounds %struct.GPR, %struct.GPR* %8618, i32 0, i32 29
  %8620 = getelementptr inbounds %struct.Reg, %struct.Reg* %8619, i32 0, i32 0
  %R14.i = bitcast %union.anon* %8620 to i64*
  %8621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8622 = getelementptr inbounds %struct.GPR, %struct.GPR* %8621, i32 0, i32 31
  %8623 = getelementptr inbounds %struct.Reg, %struct.Reg* %8622, i32 0, i32 0
  %R15.i = bitcast %union.anon* %8623 to i64*
  %8624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8625 = getelementptr inbounds %struct.GPR, %struct.GPR* %8624, i32 0, i32 33
  %8626 = getelementptr inbounds %struct.Reg, %struct.Reg* %8625, i32 0, i32 0
  %RIP.i = bitcast %union.anon* %8626 to i64*
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8628 = getelementptr inbounds %struct.Segments, %struct.Segments* %8627, i32 0, i32 1
  %SS.i = bitcast %union.SegmentSelector* %8628 to i16*
  %8629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8630 = getelementptr inbounds %struct.Segments, %struct.Segments* %8629, i32 0, i32 3
  %ES.i = bitcast %union.SegmentSelector* %8630 to i16*
  %8631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8632 = getelementptr inbounds %struct.Segments, %struct.Segments* %8631, i32 0, i32 5
  %GS.i = bitcast %union.SegmentSelector* %8632 to i16*
  %8633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8634 = getelementptr inbounds %struct.Segments, %struct.Segments* %8633, i32 0, i32 7
  %FS.i = bitcast %union.SegmentSelector* %8634 to i16*
  %8635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8636 = getelementptr inbounds %struct.Segments, %struct.Segments* %8635, i32 0, i32 9
  %DS.i = bitcast %union.SegmentSelector* %8636 to i16*
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %8638 = getelementptr inbounds %struct.Segments, %struct.Segments* %8637, i32 0, i32 11
  %CS.i = bitcast %union.SegmentSelector* %8638 to i16*
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %8640 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %8639, i32 0, i32 5
  %8641 = getelementptr inbounds %struct.Reg, %struct.Reg* %8640, i32 0, i32 0
  %GS_BASE.i = bitcast %union.anon* %8641 to i64*
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %8643 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %8642, i32 0, i32 7
  %8644 = getelementptr inbounds %struct.Reg, %struct.Reg* %8643, i32 0, i32 0
  %FS_BASE.i = bitcast %union.anon* %8644 to i64*
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8646 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8645, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %8646 to %"class.std::bitset"*
  %8647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8648 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8647, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %8648 to %"class.std::bitset"*
  %8649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8650 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8649, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %8650 to %"class.std::bitset"*
  %8651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8652 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8651, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %8652 to %"class.std::bitset"*
  %8653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8654 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8653, i64 0, i64 4
  %YMM4.i = bitcast %union.VectorReg* %8654 to %"class.std::bitset"*
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8656 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8655, i64 0, i64 5
  %YMM5.i = bitcast %union.VectorReg* %8656 to %"class.std::bitset"*
  %8657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8658 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8657, i64 0, i64 6
  %YMM6.i = bitcast %union.VectorReg* %8658 to %"class.std::bitset"*
  %8659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8660 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8659, i64 0, i64 7
  %YMM7.i = bitcast %union.VectorReg* %8660 to %"class.std::bitset"*
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8662 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8661, i64 0, i64 8
  %YMM8.i = bitcast %union.VectorReg* %8662 to %"class.std::bitset"*
  %8663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8664 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8663, i64 0, i64 9
  %YMM9.i = bitcast %union.VectorReg* %8664 to %"class.std::bitset"*
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8666 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8665, i64 0, i64 10
  %YMM10.i = bitcast %union.VectorReg* %8666 to %"class.std::bitset"*
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8668 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8667, i64 0, i64 11
  %YMM11.i = bitcast %union.VectorReg* %8668 to %"class.std::bitset"*
  %8669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8670 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8669, i64 0, i64 12
  %YMM12.i = bitcast %union.VectorReg* %8670 to %"class.std::bitset"*
  %8671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8672 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8671, i64 0, i64 13
  %YMM13.i = bitcast %union.VectorReg* %8672 to %"class.std::bitset"*
  %8673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8674 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8673, i64 0, i64 14
  %YMM14.i = bitcast %union.VectorReg* %8674 to %"class.std::bitset"*
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8676 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8675, i64 0, i64 15
  %YMM15.i = bitcast %union.VectorReg* %8676 to %"class.std::bitset"*
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8678 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8677, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %8678 to %union.vec128_t*
  %8679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8680 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8679, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %8680 to %union.vec128_t*
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8682 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8681, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %8682 to %union.vec128_t*
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8684 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8683, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %8684 to %union.vec128_t*
  %8685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8686 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8685, i64 0, i64 4
  %XMM4.i = bitcast %union.VectorReg* %8686 to %union.vec128_t*
  %8687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8688 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8687, i64 0, i64 5
  %XMM5.i = bitcast %union.VectorReg* %8688 to %union.vec128_t*
  %8689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8690 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8689, i64 0, i64 6
  %XMM6.i = bitcast %union.VectorReg* %8690 to %union.vec128_t*
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8692 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8691, i64 0, i64 7
  %XMM7.i = bitcast %union.VectorReg* %8692 to %union.vec128_t*
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8694 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8693, i64 0, i64 8
  %XMM8.i = bitcast %union.VectorReg* %8694 to %union.vec128_t*
  %8695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8696 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8695, i64 0, i64 9
  %XMM9.i = bitcast %union.VectorReg* %8696 to %union.vec128_t*
  %8697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8698 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8697, i64 0, i64 10
  %XMM10.i = bitcast %union.VectorReg* %8698 to %union.vec128_t*
  %8699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8700 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8699, i64 0, i64 11
  %XMM11.i = bitcast %union.VectorReg* %8700 to %union.vec128_t*
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8702 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8701, i64 0, i64 12
  %XMM12.i = bitcast %union.VectorReg* %8702 to %union.vec128_t*
  %8703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8704 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8703, i64 0, i64 13
  %XMM13.i = bitcast %union.VectorReg* %8704 to %union.vec128_t*
  %8705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8706 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8705, i64 0, i64 14
  %XMM14.i = bitcast %union.VectorReg* %8706 to %union.vec128_t*
  %8707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8708 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8707, i64 0, i64 15
  %XMM15.i = bitcast %union.VectorReg* %8708 to %union.vec128_t*
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8710 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8709, i32 0, i32 0
  %8711 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8710, i64 0, i64 0
  %ST0.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8711, i32 0, i32 1
  %8712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8713 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8712, i32 0, i32 0
  %8714 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8713, i64 0, i64 1
  %ST1.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8714, i32 0, i32 1
  %8715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8716 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8715, i32 0, i32 0
  %8717 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8716, i64 0, i64 2
  %ST2.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8717, i32 0, i32 1
  %8718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8719 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8718, i32 0, i32 0
  %8720 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8719, i64 0, i64 3
  %ST3.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8720, i32 0, i32 1
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8722 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8721, i32 0, i32 0
  %8723 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8722, i64 0, i64 4
  %ST4.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8723, i32 0, i32 1
  %8724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8725 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8724, i32 0, i32 0
  %8726 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8725, i64 0, i64 5
  %ST5.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8726, i32 0, i32 1
  %8727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8728 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8727, i32 0, i32 0
  %8729 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8728, i64 0, i64 6
  %ST6.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8729, i32 0, i32 1
  %8730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %8731 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %8730, i32 0, i32 0
  %8732 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %8731, i64 0, i64 7
  %ST7.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %8732, i32 0, i32 1
  %8733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8734 = getelementptr inbounds %struct.MMX, %struct.MMX* %8733, i32 0, i32 0
  %8735 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8734, i64 0, i64 0
  %8736 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8735, i32 0, i32 1
  %8737 = bitcast %union.vec64_t* %8736 to %struct.uint64v1_t*
  %8738 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8737, i32 0, i32 0
  %MM0.i = getelementptr inbounds [1 x i64], [1 x i64]* %8738, i64 0, i64 0
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8740 = getelementptr inbounds %struct.MMX, %struct.MMX* %8739, i32 0, i32 0
  %8741 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8740, i64 0, i64 1
  %8742 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8741, i32 0, i32 1
  %8743 = bitcast %union.vec64_t* %8742 to %struct.uint64v1_t*
  %8744 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8743, i32 0, i32 0
  %MM1.i = getelementptr inbounds [1 x i64], [1 x i64]* %8744, i64 0, i64 0
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8746 = getelementptr inbounds %struct.MMX, %struct.MMX* %8745, i32 0, i32 0
  %8747 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8746, i64 0, i64 2
  %8748 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8747, i32 0, i32 1
  %8749 = bitcast %union.vec64_t* %8748 to %struct.uint64v1_t*
  %8750 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8749, i32 0, i32 0
  %MM2.i = getelementptr inbounds [1 x i64], [1 x i64]* %8750, i64 0, i64 0
  %8751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8752 = getelementptr inbounds %struct.MMX, %struct.MMX* %8751, i32 0, i32 0
  %8753 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8752, i64 0, i64 3
  %8754 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8753, i32 0, i32 1
  %8755 = bitcast %union.vec64_t* %8754 to %struct.uint64v1_t*
  %8756 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8755, i32 0, i32 0
  %MM3.i = getelementptr inbounds [1 x i64], [1 x i64]* %8756, i64 0, i64 0
  %8757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8758 = getelementptr inbounds %struct.MMX, %struct.MMX* %8757, i32 0, i32 0
  %8759 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8758, i64 0, i64 4
  %8760 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8759, i32 0, i32 1
  %8761 = bitcast %union.vec64_t* %8760 to %struct.uint64v1_t*
  %8762 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8761, i32 0, i32 0
  %MM4.i = getelementptr inbounds [1 x i64], [1 x i64]* %8762, i64 0, i64 0
  %8763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8764 = getelementptr inbounds %struct.MMX, %struct.MMX* %8763, i32 0, i32 0
  %8765 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8764, i64 0, i64 5
  %8766 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8765, i32 0, i32 1
  %8767 = bitcast %union.vec64_t* %8766 to %struct.uint64v1_t*
  %8768 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8767, i32 0, i32 0
  %MM5.i = getelementptr inbounds [1 x i64], [1 x i64]* %8768, i64 0, i64 0
  %8769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8770 = getelementptr inbounds %struct.MMX, %struct.MMX* %8769, i32 0, i32 0
  %8771 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8770, i64 0, i64 6
  %8772 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8771, i32 0, i32 1
  %8773 = bitcast %union.vec64_t* %8772 to %struct.uint64v1_t*
  %8774 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8773, i32 0, i32 0
  %MM6.i = getelementptr inbounds [1 x i64], [1 x i64]* %8774, i64 0, i64 0
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %8776 = getelementptr inbounds %struct.MMX, %struct.MMX* %8775, i32 0, i32 0
  %8777 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %8776, i64 0, i64 7
  %8778 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %8777, i32 0, i32 1
  %8779 = bitcast %union.vec64_t* %8778 to %struct.uint64v1_t*
  %8780 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %8779, i32 0, i32 0
  %MM7.i = getelementptr inbounds [1 x i64], [1 x i64]* %8780, i64 0, i64 0
  %8781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8781, i32 0, i32 5
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8782, i32 0, i32 1
  %8783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8783, i32 0, i32 11
  %8784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8784, i32 0, i32 13
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8785, i32 0, i32 3
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8786, i32 0, i32 9
  %8787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %8787, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i, align 8, !noalias !2516
  store i64* @DR1, i64** %_DR1.i, align 8, !noalias !2516
  store i64* @DR2, i64** %_DR2.i, align 8, !noalias !2516
  store i64* @DR3, i64** %_DR3.i, align 8, !noalias !2516
  store i64* @DR4, i64** %_DR4.i, align 8, !noalias !2516
  store i64* @DR5, i64** %_DR5.i, align 8, !noalias !2516
  store i64* @DR6, i64** %_DR6.i, align 8, !noalias !2516
  store i64* @DR7, i64** %_DR7.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i, align 8, !noalias !2516
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i, align 8, !noalias !2516
  %8788 = bitcast %"class.std::bitset"* %YMM0.i to double*
  %8789 = load double, double* %8788, !alias.scope !2520, !noalias !2521
  %8790 = load i64, i64* %RSP.i, !alias.scope !2520, !noalias !2521
  %8791 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2516
  %8792 = inttoptr i64 %8790 to i64*
  %8793 = load i64, i64* %8792
  store i64 %8793, i64* %PC.i, !alias.scope !2520, !noalias !2521
  %8794 = add i64 %8790, 8
  store i64 %8794, i64* %RSP.i, !alias.scope !2520, !noalias !2521
  %8795 = call double @atan(double %8789)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i, !alias.scope !2520, !noalias !2521
  %8796 = bitcast %"class.std::bitset"* %YMM0.i to double*
  store double %8795, double* %8796, !alias.scope !2520, !noalias !2521
  %8797 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2516
  %8798 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8798)
  %8799 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8799)
  %8800 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8800)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i)
  %8801 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8801)
  %8802 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8802)
  %8803 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8803)
  %8804 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8804)
  %8805 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8805)
  %8806 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8806)
  %8807 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8807)
  %8808 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8808)
  %8809 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8809)
  %8810 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8810)
  %8811 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8811)
  %8812 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8812)
  %8813 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8813)
  %8814 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8814)
  %8815 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8815)
  %8816 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8816)
  %8817 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8817)
  %8818 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8818)
  %8819 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8819)
  %8820 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %8820)
  %8821 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8822 = load i64, i64* %RBP
  %8823 = sub i64 %8822, 272
  %8824 = load i64, i64* %PC
  %8825 = add i64 %8824, 8
  store i64 %8825, i64* %PC
  %8826 = inttoptr i64 %8823 to double*
  %8827 = load double, double* %8826
  %8828 = bitcast i8* %8821 to double*
  store double %8827, double* %8828, align 1, !tbaa !2432
  %8829 = getelementptr inbounds i8, i8* %8821, i64 8
  %8830 = bitcast i8* %8829 to double*
  store double 0.000000e+00, double* %8830, align 1, !tbaa !2432
  %8831 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8832 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %8833 = bitcast %union.vec128_t* %XMM0 to i8*
  %8834 = load i64, i64* %PC
  %8835 = add i64 %8834, 4
  store i64 %8835, i64* %PC
  %8836 = bitcast i8* %8832 to double*
  %8837 = load double, double* %8836, align 1
  %8838 = getelementptr inbounds i8, i8* %8832, i64 8
  %8839 = bitcast i8* %8838 to i64*
  %8840 = load i64, i64* %8839, align 1
  %8841 = bitcast i8* %8833 to double*
  %8842 = load double, double* %8841, align 1
  %8843 = fmul double %8837, %8842
  %8844 = bitcast i8* %8831 to double*
  store double %8843, double* %8844, align 1, !tbaa !2432
  %8845 = getelementptr inbounds i8, i8* %8831, i64 8
  %8846 = bitcast i8* %8845 to i64*
  store i64 %8840, i64* %8846, align 1, !tbaa !2432
  %8847 = load i64, i64* %RBP
  %8848 = sub i64 %8847, 152
  %8849 = bitcast %union.vec128_t* %XMM1 to i8*
  %8850 = load i64, i64* %PC
  %8851 = add i64 %8850, 8
  store i64 %8851, i64* %PC
  %8852 = bitcast i8* %8849 to double*
  %8853 = load double, double* %8852, align 1
  %8854 = inttoptr i64 %8848 to double*
  store double %8853, double* %8854
  %8855 = load i64, i64* %RBP
  %8856 = sub i64 %8855, 24
  %8857 = load i64, i64* %PC
  %8858 = add i64 %8857, 4
  store i64 %8858, i64* %PC
  %8859 = inttoptr i64 %8856 to i64*
  %8860 = load i64, i64* %8859
  store i64 %8860, i64* %RAX, align 8, !tbaa !2428
  %8861 = load i64, i64* %RAX
  %8862 = load i64, i64* %PC
  %8863 = add i64 %8862, 4
  store i64 %8863, i64* %PC
  %8864 = add i64 1, %8861
  store i64 %8864, i64* %RAX, align 8, !tbaa !2428
  %8865 = icmp ult i64 %8864, %8861
  %8866 = icmp ult i64 %8864, 1
  %8867 = or i1 %8865, %8866
  %8868 = zext i1 %8867 to i8
  %8869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8868, i8* %8869, align 1, !tbaa !2434
  %8870 = trunc i64 %8864 to i32
  %8871 = and i32 %8870, 255
  %8872 = call i32 @llvm.ctpop.i32(i32 %8871) #17
  %8873 = trunc i32 %8872 to i8
  %8874 = and i8 %8873, 1
  %8875 = xor i8 %8874, 1
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8875, i8* %8876, align 1, !tbaa !2448
  %8877 = xor i64 1, %8861
  %8878 = xor i64 %8877, %8864
  %8879 = lshr i64 %8878, 4
  %8880 = trunc i64 %8879 to i8
  %8881 = and i8 %8880, 1
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8881, i8* %8882, align 1, !tbaa !2449
  %8883 = icmp eq i64 %8864, 0
  %8884 = zext i1 %8883 to i8
  %8885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8884, i8* %8885, align 1, !tbaa !2450
  %8886 = lshr i64 %8864, 63
  %8887 = trunc i64 %8886 to i8
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8887, i8* %8888, align 1, !tbaa !2451
  %8889 = lshr i64 %8861, 63
  %8890 = xor i64 %8886, %8889
  %8891 = add nuw nsw i64 %8890, %8886
  %8892 = icmp eq i64 %8891, 2
  %8893 = zext i1 %8892 to i8
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8893, i8* %8894, align 1, !tbaa !2452
  %8895 = load i64, i64* %RBP
  %8896 = sub i64 %8895, 24
  %8897 = load i64, i64* %RAX
  %8898 = load i64, i64* %PC
  %8899 = add i64 %8898, 4
  store i64 %8899, i64* %PC
  %8900 = inttoptr i64 %8896 to i64*
  store i64 %8897, i64* %8900
  %8901 = load i64, i64* %PC
  %8902 = sub i64 %8901, 498
  %8903 = load i64, i64* %PC
  %8904 = add i64 %8903, 5
  store i64 %8904, i64* %PC
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8902, i64* %8905, align 8, !tbaa !2428
  br label %block_40102d

block_4015c9:                                     ; preds = %block_401590
  %8906 = load i64, i64* %RBP
  %8907 = sub i64 %8906, 4
  %8908 = load i64, i64* %PC
  %8909 = add i64 %8908, 7
  store i64 %8909, i64* %PC
  %8910 = inttoptr i64 %8907 to i32*
  store i32 0, i32* %8910
  br label %block_4015d0

block_400971:                                     ; preds = %block_400888
  %8911 = add i64 %11503, 5
  %8912 = load i64, i64* %PC
  %8913 = add i64 %8912, 5
  store i64 %8913, i64* %PC
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8911, i64* %8914, align 8, !tbaa !2428
  br label %block_400976

block_401525:                                     ; preds = %block_4014de
  %8915 = load i64, i64* %RBP
  %8916 = sub i64 %8915, 176
  %8917 = load i64, i64* %PC
  %8918 = add i64 %8917, 6
  store i64 %8918, i64* %PC
  %8919 = inttoptr i64 %8916 to i32*
  %8920 = load i32, i32* %8919
  %8921 = zext i32 %8920 to i64
  store i64 %8921, i64* %RAX, align 8, !tbaa !2428
  %8922 = load i32, i32* %EAX
  %8923 = zext i32 %8922 to i64
  %8924 = load i64, i64* %RBP
  %8925 = sub i64 %8924, 172
  %8926 = load i64, i64* %PC
  %8927 = add i64 %8926, 6
  store i64 %8927, i64* %PC
  %8928 = inttoptr i64 %8925 to i32*
  %8929 = load i32, i32* %8928
  %8930 = sub i32 %8922, %8929
  %8931 = icmp ult i32 %8922, %8929
  %8932 = zext i1 %8931 to i8
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8932, i8* %8933, align 1, !tbaa !2434
  %8934 = and i32 %8930, 255
  %8935 = call i32 @llvm.ctpop.i32(i32 %8934) #17
  %8936 = trunc i32 %8935 to i8
  %8937 = and i8 %8936, 1
  %8938 = xor i8 %8937, 1
  %8939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8938, i8* %8939, align 1, !tbaa !2448
  %8940 = xor i32 %8929, %8922
  %8941 = xor i32 %8940, %8930
  %8942 = lshr i32 %8941, 4
  %8943 = trunc i32 %8942 to i8
  %8944 = and i8 %8943, 1
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8944, i8* %8945, align 1, !tbaa !2449
  %8946 = icmp eq i32 %8930, 0
  %8947 = zext i1 %8946 to i8
  %8948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8947, i8* %8948, align 1, !tbaa !2450
  %8949 = lshr i32 %8930, 31
  %8950 = trunc i32 %8949 to i8
  %8951 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8950, i8* %8951, align 1, !tbaa !2451
  %8952 = lshr i32 %8922, 31
  %8953 = lshr i32 %8929, 31
  %8954 = xor i32 %8953, %8952
  %8955 = xor i32 %8949, %8952
  %8956 = add nuw nsw i32 %8955, %8954
  %8957 = icmp eq i32 %8956, 2
  %8958 = zext i1 %8957 to i8
  %8959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8958, i8* %8959, align 1, !tbaa !2452
  %8960 = load i64, i64* %PC
  %8961 = add i64 %8960, 63
  %8962 = load i64, i64* %PC
  %8963 = add i64 %8962, 6
  %8964 = load i64, i64* %PC
  %8965 = add i64 %8964, 6
  store i64 %8965, i64* %PC
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8967 = load i8, i8* %8966, align 1, !tbaa !2450
  %8968 = icmp eq i8 %8967, 0
  %8969 = zext i1 %8968 to i8
  store i8 %8969, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8971 = select i1 %8968, i64 %8961, i64 %8963
  store i64 %8971, i64* %8970, align 8, !tbaa !2428
  %8972 = load i8, i8* %BRANCH_TAKEN
  %8973 = icmp eq i8 %8972, 1
  br i1 %8973, label %block_401570, label %block_401537

block_400dbf:                                     ; preds = %block_400db1
  %8974 = load i64, i64* %PC
  %8975 = add i64 %8974, 8
  store i64 %8975, i64* %PC
  %8976 = load i32, i32* bitcast (%J_type* @J to i32*)
  %8977 = sub i32 %8976, 1
  %8978 = icmp ult i32 %8976, 1
  %8979 = zext i1 %8978 to i8
  %8980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8979, i8* %8980, align 1, !tbaa !2434
  %8981 = and i32 %8977, 255
  %8982 = call i32 @llvm.ctpop.i32(i32 %8981) #17
  %8983 = trunc i32 %8982 to i8
  %8984 = and i8 %8983, 1
  %8985 = xor i8 %8984, 1
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8985, i8* %8986, align 1, !tbaa !2448
  %8987 = xor i32 %8976, 1
  %8988 = xor i32 %8987, %8977
  %8989 = lshr i32 %8988, 4
  %8990 = trunc i32 %8989 to i8
  %8991 = and i8 %8990, 1
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8991, i8* %8992, align 1, !tbaa !2449
  %8993 = icmp eq i32 %8977, 0
  %8994 = zext i1 %8993 to i8
  %8995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8994, i8* %8995, align 1, !tbaa !2450
  %8996 = lshr i32 %8977, 31
  %8997 = trunc i32 %8996 to i8
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8997, i8* %8998, align 1, !tbaa !2451
  %8999 = lshr i32 %8976, 31
  %9000 = xor i32 %8996, %8999
  %9001 = add nuw nsw i32 %9000, %8999
  %9002 = icmp eq i32 %9001, 2
  %9003 = zext i1 %9002 to i8
  %9004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9003, i8* %9004, align 1, !tbaa !2452
  %9005 = load i64, i64* %PC
  %9006 = add i64 %9005, 22
  %9007 = load i64, i64* %PC
  %9008 = add i64 %9007, 6
  %9009 = load i64, i64* %PC
  %9010 = add i64 %9009, 6
  store i64 %9010, i64* %PC
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9012 = load i8, i8* %9011, align 1, !tbaa !2450
  %9013 = icmp eq i8 %9012, 0
  %9014 = zext i1 %9013 to i8
  store i8 %9014, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9016 = select i1 %9013, i64 %9006, i64 %9008
  store i64 %9016, i64* %9015, align 8, !tbaa !2428
  %9017 = load i8, i8* %BRANCH_TAKEN
  %9018 = icmp eq i8 %9017, 1
  %9019 = load i64, i64* %PC
  %9020 = add i64 %9019, 11
  store i64 %9020, i64* %PC
  br i1 %9018, label %block_400ddd, label %block_400dcd

block_400d21:                                     ; preds = %block_400cda, %block_400cec
  %MEMORY.13 = phi %struct.Memory* [ %MEMORY.4, %block_400cda ], [ %9743, %block_400cec ]
  %9021 = load i64, i64* %RBP
  %9022 = sub i64 %9021, 24
  %9023 = load i64, i64* %PC
  %9024 = add i64 %9023, 8
  store i64 %9024, i64* %PC
  %9025 = inttoptr i64 %9022 to i64*
  store i64 1, i64* %9025
  br label %block_400d29

block_4008e0:                                     ; preds = %block_400897, %block_4008c5
  %MEMORY.14 = phi %struct.Memory* [ %9470, %block_400897 ], [ %9470, %block_4008c5 ]
  %9026 = load i64, i64* %RBP
  %9027 = sub i64 %9026, 208
  %9028 = load i64, i64* %PC
  %9029 = add i64 %9028, 10
  store i64 %9029, i64* %PC
  %9030 = inttoptr i64 %9027 to i32*
  store i32 1, i32* %9030
  %9031 = load i64, i64* %PC
  %9032 = add i64 %9031, 115
  %9033 = load i64, i64* %PC
  %9034 = add i64 %9033, 5
  store i64 %9034, i64* %PC
  %9035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9032, i64* %9035, align 8, !tbaa !2428
  br label %block_40095d

block_400e1f:                                     ; preds = %block_400e11
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %9036 = load i64, i64* %PC
  %9037 = add i64 %9036, 16
  %9038 = load i64, i64* %PC
  %9039 = add i64 %9038, 5
  store i64 %9039, i64* %PC
  %9040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9037, i64* %9040, align 8, !tbaa !2428
  br label %block_400e3a

block_400d9e:                                     ; preds = %block_400d57, %block_400d69
  %MEMORY.15 = phi %struct.Memory* [ %MEMORY.27, %block_400d57 ], [ %617, %block_400d69 ]
  %9041 = load i64, i64* %PC
  %9042 = add i64 %9041, 11
  store i64 %9042, i64* %PC
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %9043 = load i64, i64* %RBP
  %9044 = sub i64 %9043, 24
  %9045 = load i64, i64* %PC
  %9046 = add i64 %9045, 8
  store i64 %9046, i64* %PC
  %9047 = inttoptr i64 %9044 to i64*
  store i64 1, i64* %9047
  br label %block_400db1

block_401224:                                     ; preds = %block_40102d
  %9048 = load i64, i64* %RBP
  %9049 = sub i64 %9048, 176
  %9050 = load i64, i64* %PC
  %9051 = add i64 %9050, 6
  store i64 %9051, i64* %PC
  %9052 = inttoptr i64 %9049 to i32*
  %9053 = load i32, i32* %9052
  %9054 = zext i32 %9053 to i64
  store i64 %9054, i64* %RAX, align 8, !tbaa !2428
  %9055 = load i32, i32* %EAX
  %9056 = zext i32 %9055 to i64
  %9057 = load i64, i64* %RBP
  %9058 = sub i64 %9057, 172
  %9059 = load i64, i64* %PC
  %9060 = add i64 %9059, 6
  store i64 %9060, i64* %PC
  %9061 = inttoptr i64 %9058 to i32*
  %9062 = load i32, i32* %9061
  %9063 = sub i32 %9055, %9062
  %9064 = icmp ult i32 %9055, %9062
  %9065 = zext i1 %9064 to i8
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9065, i8* %9066, align 1, !tbaa !2434
  %9067 = and i32 %9063, 255
  %9068 = call i32 @llvm.ctpop.i32(i32 %9067) #17
  %9069 = trunc i32 %9068 to i8
  %9070 = and i8 %9069, 1
  %9071 = xor i8 %9070, 1
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9071, i8* %9072, align 1, !tbaa !2448
  %9073 = xor i32 %9062, %9055
  %9074 = xor i32 %9073, %9063
  %9075 = lshr i32 %9074, 4
  %9076 = trunc i32 %9075 to i8
  %9077 = and i8 %9076, 1
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9077, i8* %9078, align 1, !tbaa !2449
  %9079 = icmp eq i32 %9063, 0
  %9080 = zext i1 %9079 to i8
  %9081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9080, i8* %9081, align 1, !tbaa !2450
  %9082 = lshr i32 %9063, 31
  %9083 = trunc i32 %9082 to i8
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9083, i8* %9084, align 1, !tbaa !2451
  %9085 = lshr i32 %9055, 31
  %9086 = lshr i32 %9062, 31
  %9087 = xor i32 %9086, %9085
  %9088 = xor i32 %9082, %9085
  %9089 = add nuw nsw i32 %9088, %9087
  %9090 = icmp eq i32 %9089, 2
  %9091 = zext i1 %9090 to i8
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9091, i8* %9092, align 1, !tbaa !2452
  %9093 = load i64, i64* %PC
  %9094 = add i64 %9093, 63
  %9095 = load i64, i64* %PC
  %9096 = add i64 %9095, 6
  %9097 = load i64, i64* %PC
  %9098 = add i64 %9097, 6
  store i64 %9098, i64* %PC
  %9099 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9100 = load i8, i8* %9099, align 1, !tbaa !2450
  %9101 = icmp eq i8 %9100, 0
  %9102 = zext i1 %9101 to i8
  store i8 %9102, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9104 = select i1 %9101, i64 %9094, i64 %9096
  store i64 %9104, i64* %9103, align 8, !tbaa !2428
  %9105 = load i8, i8* %BRANCH_TAKEN
  %9106 = icmp eq i8 %9105, 1
  br i1 %9106, label %block_40126f, label %block_401236

block_4013af:                                     ; preds = %block_40139d
  %9107 = load i64, i64* %RBP
  %9108 = sub i64 %9107, 88
  %9109 = load i64, i64* %PC
  %9110 = add i64 %9109, 4
  store i64 %9110, i64* %PC
  %9111 = inttoptr i64 %9108 to i64*
  %9112 = load i64, i64* %9111
  store i64 %9112, i64* %RDI, align 8, !tbaa !2428
  %9113 = load i64, i64* %PC
  %9114 = add i64 %9113, 8
  store i64 %9114, i64* %PC
  %9115 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9116 = sext i32 %9115 to i64
  store i64 %9116, i64* %RSI, align 8, !tbaa !2428
  %9117 = load i64, i64* %PC
  %9118 = add i64 %9117, 8
  store i64 %9118, i64* %PC
  %9119 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9120 = sext i32 %9119 to i64
  store i64 %9120, i64* %RDX, align 8, !tbaa !2428
  %9121 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9122 = load i64, i64* %PC
  %9123 = add i64 %9122, 9
  store i64 %9123, i64* %PC
  %9124 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %9125 = bitcast i8* %9121 to double*
  store double %9124, double* %9125, align 1, !tbaa !2432
  %9126 = getelementptr inbounds i8, i8* %9121, i64 8
  %9127 = bitcast i8* %9126 to double*
  store double 0.000000e+00, double* %9127, align 1, !tbaa !2432
  %9128 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9129 = load i64, i64* %PC
  %9130 = add i64 %9129, 9
  store i64 %9130, i64* %PC
  %9131 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %9132 = bitcast i8* %9128 to double*
  store double %9131, double* %9132, align 1, !tbaa !2432
  %9133 = getelementptr inbounds i8, i8* %9128, i64 8
  %9134 = bitcast i8* %9133 to double*
  store double 0.000000e+00, double* %9134, align 1, !tbaa !2432
  %9135 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9136 = load i64, i64* %PC
  %9137 = add i64 %9136, 9
  store i64 %9137, i64* %PC
  %9138 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %9139 = bitcast i8* %9135 to double*
  store double %9138, double* %9139, align 1, !tbaa !2432
  %9140 = getelementptr inbounds i8, i8* %9135, i64 8
  %9141 = bitcast i8* %9140 to double*
  store double 0.000000e+00, double* %9141, align 1, !tbaa !2432
  %9142 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9143 = load i64, i64* %PC
  %9144 = add i64 %9143, 9
  store i64 %9144, i64* %PC
  %9145 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %9146 = bitcast i8* %9142 to double*
  store double %9145, double* %9146, align 1, !tbaa !2432
  %9147 = getelementptr inbounds i8, i8* %9142, i64 8
  %9148 = bitcast i8* %9147 to double*
  store double 0.000000e+00, double* %9148, align 1, !tbaa !2432
  %9149 = load i64, i64* %PC
  %9150 = add i64 %9149, 505
  %9151 = load i64, i64* %PC
  %9152 = add i64 %9151, 5
  %9153 = load i64, i64* %PC
  %9154 = add i64 %9153, 5
  store i64 %9154, i64* %PC
  %9155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9156 = load i64, i64* %9155, align 8, !tbaa !2428
  %9157 = add i64 %9156, -8
  %9158 = inttoptr i64 %9157 to i64*
  store i64 %9152, i64* %9158
  store i64 %9157, i64* %9155, align 8, !tbaa !2428
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9150, i64* %9159, align 8, !tbaa !2428
  %9160 = load i64, i64* %PC
  %9161 = call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %9160, %struct.Memory* %MEMORY.7)
  br label %block_4013ec

block_401418:                                     ; preds = %block_40140a
  %9162 = load i64, i64* %PC
  %9163 = add i64 %9162, 7
  store i64 %9163, i64* %PC
  %9164 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9165 = zext i32 %9164 to i64
  store i64 %9165, i64* %RAX, align 8, !tbaa !2428
  %9166 = load i64, i64* %RAX
  %9167 = load i64, i64* %PC
  %9168 = add i64 %9167, 7
  store i64 %9168, i64* %PC
  %9169 = trunc i64 %9166 to i32
  %9170 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9171 = add i32 %9170, %9169
  %9172 = zext i32 %9171 to i64
  store i64 %9172, i64* %RAX, align 8, !tbaa !2428
  %9173 = icmp ult i32 %9171, %9169
  %9174 = icmp ult i32 %9171, %9170
  %9175 = or i1 %9173, %9174
  %9176 = zext i1 %9175 to i8
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9176, i8* %9177, align 1, !tbaa !2434
  %9178 = and i32 %9171, 255
  %9179 = call i32 @llvm.ctpop.i32(i32 %9178) #17
  %9180 = trunc i32 %9179 to i8
  %9181 = and i8 %9180, 1
  %9182 = xor i8 %9181, 1
  %9183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9182, i8* %9183, align 1, !tbaa !2448
  %9184 = xor i32 %9170, %9169
  %9185 = xor i32 %9184, %9171
  %9186 = lshr i32 %9185, 4
  %9187 = trunc i32 %9186 to i8
  %9188 = and i8 %9187, 1
  %9189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9188, i8* %9189, align 1, !tbaa !2449
  %9190 = icmp eq i32 %9171, 0
  %9191 = zext i1 %9190 to i8
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9191, i8* %9192, align 1, !tbaa !2450
  %9193 = lshr i32 %9171, 31
  %9194 = trunc i32 %9193 to i8
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9194, i8* %9195, align 1, !tbaa !2451
  %9196 = lshr i32 %9169, 31
  %9197 = lshr i32 %9170, 31
  %9198 = xor i32 %9193, %9196
  %9199 = xor i32 %9193, %9197
  %9200 = add nuw nsw i32 %9198, %9199
  %9201 = icmp eq i32 %9200, 2
  %9202 = zext i1 %9201 to i8
  %9203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9202, i8* %9203, align 1, !tbaa !2452
  %9204 = load i32, i32* %EAX
  %9205 = zext i32 %9204 to i64
  %9206 = load i64, i64* %PC
  %9207 = add i64 %9206, 7
  store i64 %9207, i64* %PC
  store i32 %9204, i32* bitcast (%J_type* @J to i32*)
  %9208 = load i64, i64* %PC
  %9209 = add i64 %9208, 7
  store i64 %9209, i64* %PC
  %9210 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9211 = zext i32 %9210 to i64
  store i64 %9211, i64* %RAX, align 8, !tbaa !2428
  %9212 = load i64, i64* %RAX
  %9213 = load i64, i64* %PC
  %9214 = add i64 %9213, 7
  store i64 %9214, i64* %PC
  %9215 = trunc i64 %9212 to i32
  %9216 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9217 = add i32 %9216, %9215
  %9218 = zext i32 %9217 to i64
  store i64 %9218, i64* %RAX, align 8, !tbaa !2428
  %9219 = icmp ult i32 %9217, %9215
  %9220 = icmp ult i32 %9217, %9216
  %9221 = or i1 %9219, %9220
  %9222 = zext i1 %9221 to i8
  %9223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9222, i8* %9223, align 1, !tbaa !2434
  %9224 = and i32 %9217, 255
  %9225 = call i32 @llvm.ctpop.i32(i32 %9224) #17
  %9226 = trunc i32 %9225 to i8
  %9227 = and i8 %9226, 1
  %9228 = xor i8 %9227, 1
  %9229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9228, i8* %9229, align 1, !tbaa !2448
  %9230 = xor i32 %9216, %9215
  %9231 = xor i32 %9230, %9217
  %9232 = lshr i32 %9231, 4
  %9233 = trunc i32 %9232 to i8
  %9234 = and i8 %9233, 1
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9234, i8* %9235, align 1, !tbaa !2449
  %9236 = icmp eq i32 %9217, 0
  %9237 = zext i1 %9236 to i8
  %9238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9237, i8* %9238, align 1, !tbaa !2450
  %9239 = lshr i32 %9217, 31
  %9240 = trunc i32 %9239 to i8
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9240, i8* %9241, align 1, !tbaa !2451
  %9242 = lshr i32 %9215, 31
  %9243 = lshr i32 %9216, 31
  %9244 = xor i32 %9239, %9242
  %9245 = xor i32 %9239, %9243
  %9246 = add nuw nsw i32 %9244, %9245
  %9247 = icmp eq i32 %9246, 2
  %9248 = zext i1 %9247 to i8
  %9249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9248, i8* %9249, align 1, !tbaa !2452
  %9250 = load i32, i32* %EAX
  %9251 = zext i32 %9250 to i64
  %9252 = load i64, i64* %PC
  %9253 = add i64 %9252, 7
  store i64 %9253, i64* %PC
  store i32 %9250, i32* bitcast (%K_type* @K to i32*)
  %9254 = load i64, i64* %PC
  %9255 = add i64 %9254, 7
  store i64 %9255, i64* %PC
  %9256 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9257 = zext i32 %9256 to i64
  store i64 %9257, i64* %RAX, align 8, !tbaa !2428
  %9258 = load i64, i64* %RAX
  %9259 = load i64, i64* %PC
  %9260 = add i64 %9259, 7
  store i64 %9260, i64* %PC
  %9261 = trunc i64 %9258 to i32
  %9262 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9263 = sub i32 %9261, %9262
  %9264 = zext i32 %9263 to i64
  store i64 %9264, i64* %RAX, align 8, !tbaa !2428
  %9265 = icmp ult i32 %9261, %9262
  %9266 = zext i1 %9265 to i8
  %9267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9266, i8* %9267, align 1, !tbaa !2434
  %9268 = and i32 %9263, 255
  %9269 = call i32 @llvm.ctpop.i32(i32 %9268) #17
  %9270 = trunc i32 %9269 to i8
  %9271 = and i8 %9270, 1
  %9272 = xor i8 %9271, 1
  %9273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9272, i8* %9273, align 1, !tbaa !2448
  %9274 = xor i32 %9262, %9261
  %9275 = xor i32 %9274, %9263
  %9276 = lshr i32 %9275, 4
  %9277 = trunc i32 %9276 to i8
  %9278 = and i8 %9277, 1
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9278, i8* %9279, align 1, !tbaa !2449
  %9280 = icmp eq i32 %9263, 0
  %9281 = zext i1 %9280 to i8
  %9282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9281, i8* %9282, align 1, !tbaa !2450
  %9283 = lshr i32 %9263, 31
  %9284 = trunc i32 %9283 to i8
  %9285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9284, i8* %9285, align 1, !tbaa !2451
  %9286 = lshr i32 %9261, 31
  %9287 = lshr i32 %9262, 31
  %9288 = xor i32 %9287, %9286
  %9289 = xor i32 %9283, %9286
  %9290 = add nuw nsw i32 %9289, %9288
  %9291 = icmp eq i32 %9290, 2
  %9292 = zext i1 %9291 to i8
  %9293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9292, i8* %9293, align 1, !tbaa !2452
  %9294 = load i32, i32* %EAX
  %9295 = zext i32 %9294 to i64
  %9296 = load i64, i64* %PC
  %9297 = add i64 %9296, 7
  store i64 %9297, i64* %PC
  store i32 %9294, i32* bitcast (%J_type* @J to i32*)
  %9298 = load i64, i64* %PC
  %9299 = add i64 %9298, 7
  store i64 %9299, i64* %PC
  %9300 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9301 = zext i32 %9300 to i64
  store i64 %9301, i64* %RAX, align 8, !tbaa !2428
  %9302 = load i64, i64* %RAX
  %9303 = load i64, i64* %PC
  %9304 = add i64 %9303, 7
  store i64 %9304, i64* %PC
  %9305 = trunc i64 %9302 to i32
  %9306 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9307 = sub i32 %9305, %9306
  %9308 = zext i32 %9307 to i64
  store i64 %9308, i64* %RAX, align 8, !tbaa !2428
  %9309 = icmp ult i32 %9305, %9306
  %9310 = zext i1 %9309 to i8
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9310, i8* %9311, align 1, !tbaa !2434
  %9312 = and i32 %9307, 255
  %9313 = call i32 @llvm.ctpop.i32(i32 %9312) #17
  %9314 = trunc i32 %9313 to i8
  %9315 = and i8 %9314, 1
  %9316 = xor i8 %9315, 1
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9316, i8* %9317, align 1, !tbaa !2448
  %9318 = xor i32 %9306, %9305
  %9319 = xor i32 %9318, %9307
  %9320 = lshr i32 %9319, 4
  %9321 = trunc i32 %9320 to i8
  %9322 = and i8 %9321, 1
  %9323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9322, i8* %9323, align 1, !tbaa !2449
  %9324 = icmp eq i32 %9307, 0
  %9325 = zext i1 %9324 to i8
  %9326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9325, i8* %9326, align 1, !tbaa !2450
  %9327 = lshr i32 %9307, 31
  %9328 = trunc i32 %9327 to i8
  %9329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9328, i8* %9329, align 1, !tbaa !2451
  %9330 = lshr i32 %9305, 31
  %9331 = lshr i32 %9306, 31
  %9332 = xor i32 %9331, %9330
  %9333 = xor i32 %9327, %9330
  %9334 = add nuw nsw i32 %9333, %9332
  %9335 = icmp eq i32 %9334, 2
  %9336 = zext i1 %9335 to i8
  %9337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9336, i8* %9337, align 1, !tbaa !2452
  %9338 = load i64, i64* %RAX
  %9339 = load i64, i64* %PC
  %9340 = add i64 %9339, 7
  store i64 %9340, i64* %PC
  %9341 = trunc i64 %9338 to i32
  %9342 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9343 = sub i32 %9341, %9342
  %9344 = zext i32 %9343 to i64
  store i64 %9344, i64* %RAX, align 8, !tbaa !2428
  %9345 = icmp ult i32 %9341, %9342
  %9346 = zext i1 %9345 to i8
  %9347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9346, i8* %9347, align 1, !tbaa !2434
  %9348 = and i32 %9343, 255
  %9349 = call i32 @llvm.ctpop.i32(i32 %9348) #17
  %9350 = trunc i32 %9349 to i8
  %9351 = and i8 %9350, 1
  %9352 = xor i8 %9351, 1
  %9353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9352, i8* %9353, align 1, !tbaa !2448
  %9354 = xor i32 %9342, %9341
  %9355 = xor i32 %9354, %9343
  %9356 = lshr i32 %9355, 4
  %9357 = trunc i32 %9356 to i8
  %9358 = and i8 %9357, 1
  %9359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9358, i8* %9359, align 1, !tbaa !2449
  %9360 = icmp eq i32 %9343, 0
  %9361 = zext i1 %9360 to i8
  %9362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9361, i8* %9362, align 1, !tbaa !2450
  %9363 = lshr i32 %9343, 31
  %9364 = trunc i32 %9363 to i8
  %9365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9364, i8* %9365, align 1, !tbaa !2451
  %9366 = lshr i32 %9341, 31
  %9367 = lshr i32 %9342, 31
  %9368 = xor i32 %9367, %9366
  %9369 = xor i32 %9363, %9366
  %9370 = add nuw nsw i32 %9369, %9368
  %9371 = icmp eq i32 %9370, 2
  %9372 = zext i1 %9371 to i8
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9372, i8* %9373, align 1, !tbaa !2452
  %9374 = load i32, i32* %EAX
  %9375 = zext i32 %9374 to i64
  %9376 = load i64, i64* %PC
  %9377 = add i64 %9376, 7
  store i64 %9377, i64* %PC
  store i32 %9374, i32* bitcast (%K_type* @K to i32*)
  %9378 = load i64, i64* %RBP
  %9379 = sub i64 %9378, 24
  %9380 = load i64, i64* %PC
  %9381 = add i64 %9380, 4
  store i64 %9381, i64* %PC
  %9382 = inttoptr i64 %9379 to i64*
  %9383 = load i64, i64* %9382
  store i64 %9383, i64* %RAX, align 8, !tbaa !2428
  %9384 = load i64, i64* %RAX
  %9385 = load i64, i64* %PC
  %9386 = add i64 %9385, 4
  store i64 %9386, i64* %PC
  %9387 = add i64 1, %9384
  store i64 %9387, i64* %RAX, align 8, !tbaa !2428
  %9388 = icmp ult i64 %9387, %9384
  %9389 = icmp ult i64 %9387, 1
  %9390 = or i1 %9388, %9389
  %9391 = zext i1 %9390 to i8
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9391, i8* %9392, align 1, !tbaa !2434
  %9393 = trunc i64 %9387 to i32
  %9394 = and i32 %9393, 255
  %9395 = call i32 @llvm.ctpop.i32(i32 %9394) #17
  %9396 = trunc i32 %9395 to i8
  %9397 = and i8 %9396, 1
  %9398 = xor i8 %9397, 1
  %9399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9398, i8* %9399, align 1, !tbaa !2448
  %9400 = xor i64 1, %9384
  %9401 = xor i64 %9400, %9387
  %9402 = lshr i64 %9401, 4
  %9403 = trunc i64 %9402 to i8
  %9404 = and i8 %9403, 1
  %9405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9404, i8* %9405, align 1, !tbaa !2449
  %9406 = icmp eq i64 %9387, 0
  %9407 = zext i1 %9406 to i8
  %9408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9407, i8* %9408, align 1, !tbaa !2450
  %9409 = lshr i64 %9387, 63
  %9410 = trunc i64 %9409 to i8
  %9411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9410, i8* %9411, align 1, !tbaa !2451
  %9412 = lshr i64 %9384, 63
  %9413 = xor i64 %9409, %9412
  %9414 = add nuw nsw i64 %9413, %9409
  %9415 = icmp eq i64 %9414, 2
  %9416 = zext i1 %9415 to i8
  %9417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9416, i8* %9417, align 1, !tbaa !2452
  %9418 = load i64, i64* %RBP
  %9419 = sub i64 %9418, 24
  %9420 = load i64, i64* %RAX
  %9421 = load i64, i64* %PC
  %9422 = add i64 %9421, 4
  store i64 %9422, i64* %PC
  %9423 = inttoptr i64 %9419 to i64*
  store i64 %9420, i64* %9423
  %9424 = load i64, i64* %PC
  %9425 = sub i64 %9424, 117
  %9426 = load i64, i64* %PC
  %9427 = add i64 %9426, 5
  store i64 %9427, i64* %PC
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9425, i64* %9428, align 8, !tbaa !2428
  br label %block_40140a

block_400897:                                     ; preds = %block_400888
  %9429 = add i64 %11503, 10
  store i64 %9429, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 72), i64* %RSI, align 8, !tbaa !2428
  %9430 = load i64, i64* %PC
  %9431 = add i64 %9430, 5
  store i64 %9431, i64* %PC
  store i64 2, i64* %RAX, align 8, !tbaa !2428
  %9432 = load i32, i32* %EAX
  %9433 = zext i32 %9432 to i64
  %9434 = load i64, i64* %PC
  %9435 = add i64 %9434, 2
  store i64 %9435, i64* %PC
  %9436 = and i64 %9433, 4294967295
  store i64 %9436, i64* %RDX, align 8, !tbaa !2428
  %9437 = load i64, i64* %RBP
  %9438 = sub i64 %9437, 16
  %9439 = load i64, i64* %PC
  %9440 = add i64 %9439, 4
  store i64 %9440, i64* %PC
  %9441 = inttoptr i64 %9438 to i64*
  %9442 = load i64, i64* %9441
  store i64 %9442, i64* %RCX, align 8, !tbaa !2428
  %9443 = load i64, i64* %RBP
  %9444 = sub i64 %9443, 172
  %9445 = load i64, i64* %PC
  %9446 = add i64 %9445, 7
  store i64 %9446, i64* %PC
  %9447 = inttoptr i64 %9444 to i32*
  %9448 = load i32, i32* %9447
  %9449 = sext i32 %9448 to i64
  store i64 %9449, i64* %RDI, align 8, !tbaa !2428
  %9450 = load i64, i64* %RCX
  %9451 = load i64, i64* %RDI
  %9452 = mul i64 %9451, 8
  %9453 = add i64 %9452, %9450
  %9454 = load i64, i64* %PC
  %9455 = add i64 %9454, 4
  store i64 %9455, i64* %PC
  %9456 = inttoptr i64 %9453 to i64*
  %9457 = load i64, i64* %9456
  store i64 %9457, i64* %RDI, align 8, !tbaa !2428
  %9458 = load i64, i64* %PC
  %9459 = sub i64 %9458, 519
  %9460 = load i64, i64* %PC
  %9461 = add i64 %9460, 5
  %9462 = load i64, i64* %PC
  %9463 = add i64 %9462, 5
  store i64 %9463, i64* %PC
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9465 = load i64, i64* %9464, align 8, !tbaa !2428
  %9466 = add i64 %9465, -8
  %9467 = inttoptr i64 %9466 to i64*
  store i64 %9461, i64* %9467
  store i64 %9466, i64* %9464, align 8, !tbaa !2428
  %9468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9459, i64* %9468, align 8, !tbaa !2428
  %9469 = load i64, i64* %PC
  %9470 = call %struct.Memory* @ext_6020e8_strncmp(%struct.State* %0, i64 %9469, %struct.Memory* %MEMORY.28)
  %9471 = load i32, i32* %EAX
  %9472 = zext i32 %9471 to i64
  %9473 = load i64, i64* %PC
  %9474 = add i64 %9473, 3
  store i64 %9474, i64* %PC
  %9475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9475, align 1, !tbaa !2434
  %9476 = and i32 %9471, 255
  %9477 = call i32 @llvm.ctpop.i32(i32 %9476) #17
  %9478 = trunc i32 %9477 to i8
  %9479 = and i8 %9478, 1
  %9480 = xor i8 %9479, 1
  %9481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9480, i8* %9481, align 1, !tbaa !2448
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9482, align 1, !tbaa !2449
  %9483 = icmp eq i32 %9471, 0
  %9484 = zext i1 %9483 to i8
  %9485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9484, i8* %9485, align 1, !tbaa !2450
  %9486 = lshr i32 %9471, 31
  %9487 = trunc i32 %9486 to i8
  %9488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9487, i8* %9488, align 1, !tbaa !2451
  %9489 = lshr i32 %9471, 31
  %9490 = xor i32 %9486, %9489
  %9491 = add nuw nsw i32 %9490, %9489
  %9492 = icmp eq i32 %9491, 2
  %9493 = zext i1 %9492 to i8
  %9494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9493, i8* %9494, align 1, !tbaa !2452
  %9495 = load i64, i64* %PC
  %9496 = add i64 %9495, 33
  %9497 = load i64, i64* %PC
  %9498 = add i64 %9497, 6
  %9499 = load i64, i64* %PC
  %9500 = add i64 %9499, 6
  store i64 %9500, i64* %PC
  %9501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9502 = load i8, i8* %9501, align 1, !tbaa !2450
  store i8 %9502, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9504 = icmp ne i8 %9502, 0
  %9505 = select i1 %9504, i64 %9496, i64 %9498
  store i64 %9505, i64* %9503, align 8, !tbaa !2428
  %9506 = load i8, i8* %BRANCH_TAKEN
  %9507 = icmp eq i8 %9506, 1
  br i1 %9507, label %block_4008e0, label %block_4008c5

block_401496:                                     ; preds = %block_401484
  %9508 = load i64, i64* %RBP
  %9509 = sub i64 %9508, 96
  %9510 = load i64, i64* %PC
  %9511 = add i64 %9510, 4
  store i64 %9511, i64* %PC
  %9512 = inttoptr i64 %9509 to i64*
  %9513 = load i64, i64* %9512
  store i64 %9513, i64* %RDI, align 8, !tbaa !2428
  %9514 = load i64, i64* %PC
  %9515 = add i64 %9514, 8
  store i64 %9515, i64* %PC
  %9516 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9517 = sext i32 %9516 to i64
  store i64 %9517, i64* %RSI, align 8, !tbaa !2428
  %9518 = load i64, i64* %PC
  %9519 = add i64 %9518, 8
  store i64 %9519, i64* %PC
  %9520 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9521 = sext i32 %9520 to i64
  store i64 %9521, i64* %RDX, align 8, !tbaa !2428
  %9522 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9523 = load i64, i64* %RBP
  %9524 = sub i64 %9523, 112
  %9525 = load i64, i64* %PC
  %9526 = add i64 %9525, 5
  store i64 %9526, i64* %PC
  %9527 = inttoptr i64 %9524 to double*
  %9528 = load double, double* %9527
  %9529 = bitcast i8* %9522 to double*
  store double %9528, double* %9529, align 1, !tbaa !2432
  %9530 = getelementptr inbounds i8, i8* %9522, i64 8
  %9531 = bitcast i8* %9530 to double*
  store double 0.000000e+00, double* %9531, align 1, !tbaa !2432
  %9532 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9533 = load i64, i64* %RBP
  %9534 = sub i64 %9533, 120
  %9535 = load i64, i64* %PC
  %9536 = add i64 %9535, 5
  store i64 %9536, i64* %PC
  %9537 = inttoptr i64 %9534 to double*
  %9538 = load double, double* %9537
  %9539 = bitcast i8* %9532 to double*
  store double %9538, double* %9539, align 1, !tbaa !2432
  %9540 = getelementptr inbounds i8, i8* %9532, i64 8
  %9541 = bitcast i8* %9540 to double*
  store double 0.000000e+00, double* %9541, align 1, !tbaa !2432
  %9542 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9543 = load i64, i64* %RBP
  %9544 = sub i64 %9543, 128
  %9545 = load i64, i64* %PC
  %9546 = add i64 %9545, 5
  store i64 %9546, i64* %PC
  %9547 = inttoptr i64 %9544 to double*
  %9548 = load double, double* %9547
  %9549 = bitcast i8* %9542 to double*
  store double %9548, double* %9549, align 1, !tbaa !2432
  %9550 = getelementptr inbounds i8, i8* %9542, i64 8
  %9551 = bitcast i8* %9550 to double*
  store double 0.000000e+00, double* %9551, align 1, !tbaa !2432
  %9552 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9553 = load i64, i64* %RBP
  %9554 = sub i64 %9553, 136
  %9555 = load i64, i64* %PC
  %9556 = add i64 %9555, 8
  store i64 %9556, i64* %PC
  %9557 = inttoptr i64 %9554 to double*
  %9558 = load double, double* %9557
  %9559 = bitcast i8* %9552 to double*
  store double %9558, double* %9559, align 1, !tbaa !2432
  %9560 = getelementptr inbounds i8, i8* %9552, i64 8
  %9561 = bitcast i8* %9560 to double*
  store double 0.000000e+00, double* %9561, align 1, !tbaa !2432
  %9562 = load i64, i64* %PC
  %9563 = add i64 %9562, 287
  %9564 = load i64, i64* %PC
  %9565 = add i64 %9564, 5
  %9566 = load i64, i64* %PC
  %9567 = add i64 %9566, 5
  store i64 %9567, i64* %PC
  %9568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9569 = load i64, i64* %9568, align 8, !tbaa !2428
  %9570 = add i64 %9569, -8
  %9571 = inttoptr i64 %9570 to i64*
  store i64 %9565, i64* %9571
  store i64 %9570, i64* %9568, align 8, !tbaa !2428
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9563, i64* %9572, align 8, !tbaa !2428
  %9573 = load i64, i64* %PC
  %9574 = call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %9573, %struct.Memory* %MEMORY.25)
  br label %block_4014c6

block_401590:                                     ; preds = %block_401570
  %9575 = load i64, i64* %RAX
  %9576 = load i32, i32* %EAX
  %9577 = zext i32 %9576 to i64
  %9578 = load i64, i64* %PC
  %9579 = add i64 %9578, 2
  store i64 %9579, i64* %PC
  %9580 = xor i64 %9577, %9575
  %9581 = trunc i64 %9580 to i32
  %9582 = and i64 %9580, 4294967295
  store i64 %9582, i64* %RAX, align 8, !tbaa !2428
  %9583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9583, align 1, !tbaa !2434
  %9584 = and i32 %9581, 255
  %9585 = call i32 @llvm.ctpop.i32(i32 %9584) #17
  %9586 = trunc i32 %9585 to i8
  %9587 = and i8 %9586, 1
  %9588 = xor i8 %9587, 1
  %9589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9588, i8* %9589, align 1, !tbaa !2448
  %9590 = icmp eq i32 %9581, 0
  %9591 = zext i1 %9590 to i8
  %9592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9591, i8* %9592, align 1, !tbaa !2450
  %9593 = lshr i32 %9581, 31
  %9594 = trunc i32 %9593 to i8
  %9595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9594, i8* %9595, align 1, !tbaa !2451
  %9596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9596, align 1, !tbaa !2452
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9597, align 1, !tbaa !2449
  %9598 = load i32, i32* %EAX
  %9599 = zext i32 %9598 to i64
  %9600 = load i64, i64* %PC
  %9601 = add i64 %9600, 2
  store i64 %9601, i64* %PC
  %9602 = and i64 %9599, 4294967295
  store i64 %9602, i64* %RDI, align 8, !tbaa !2428
  %9603 = load i64, i64* %PC
  %9604 = sub i64 %9603, 3700
  %9605 = load i64, i64* %PC
  %9606 = add i64 %9605, 5
  %9607 = load i64, i64* %PC
  %9608 = add i64 %9607, 5
  store i64 %9608, i64* %PC
  %9609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9610 = load i64, i64* %9609, align 8, !tbaa !2428
  %9611 = add i64 %9610, -8
  %9612 = inttoptr i64 %9611 to i64*
  store i64 %9606, i64* %9612
  store i64 %9611, i64* %9609, align 8, !tbaa !2428
  %9613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9604, i64* %9613, align 8, !tbaa !2428
  %9614 = load i64, i64* %PC
  %9615 = call %struct.Memory* @ext_400720_time(%struct.State* %0, i64 %9614, %struct.Memory* %MEMORY.18)
  %9616 = load i64, i64* %PC
  %9617 = add i64 %9616, 10
  store i64 %9617, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 101), i64* %RDI, align 8, !tbaa !2428
  %9618 = load i64, i64* %RBP
  %9619 = sub i64 %9618, 200
  %9620 = load i64, i64* %RAX
  %9621 = load i64, i64* %PC
  %9622 = add i64 %9621, 7
  store i64 %9622, i64* %PC
  %9623 = inttoptr i64 %9619 to i64*
  store i64 %9620, i64* %9623
  %9624 = load i64, i64* %PC
  %9625 = add i64 %9624, 2
  store i64 %9625, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %9626 = load i64, i64* %PC
  %9627 = sub i64 %9626, 3788
  %9628 = load i64, i64* %PC
  %9629 = add i64 %9628, 5
  %9630 = load i64, i64* %PC
  %9631 = add i64 %9630, 5
  store i64 %9631, i64* %PC
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9633 = load i64, i64* %9632, align 8, !tbaa !2428
  %9634 = add i64 %9633, -8
  %9635 = inttoptr i64 %9634 to i64*
  store i64 %9629, i64* %9635
  store i64 %9634, i64* %9632, align 8, !tbaa !2428
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9627, i64* %9636, align 8, !tbaa !2428
  %9637 = load i64, i64* %PC
  %9638 = call %struct.Memory* @ext_4006e0_printf(%struct.State* %0, i64 %9637, %struct.Memory* %9615)
  %9639 = load i64, i64* %RBP
  %9640 = sub i64 %9639, 208
  %9641 = load i64, i64* %PC
  %9642 = add i64 %9641, 7
  store i64 %9642, i64* %PC
  %9643 = inttoptr i64 %9640 to i32*
  %9644 = load i32, i32* %9643
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9645, align 1, !tbaa !2434
  %9646 = and i32 %9644, 255
  %9647 = call i32 @llvm.ctpop.i32(i32 %9646) #17
  %9648 = trunc i32 %9647 to i8
  %9649 = and i8 %9648, 1
  %9650 = xor i8 %9649, 1
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9650, i8* %9651, align 1, !tbaa !2448
  %9652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9652, align 1, !tbaa !2449
  %9653 = icmp eq i32 %9644, 0
  %9654 = zext i1 %9653 to i8
  %9655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9654, i8* %9655, align 1, !tbaa !2450
  %9656 = lshr i32 %9644, 31
  %9657 = trunc i32 %9656 to i8
  %9658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9657, i8* %9658, align 1, !tbaa !2451
  %9659 = lshr i32 %9644, 31
  %9660 = xor i32 %9656, %9659
  %9661 = add nuw nsw i32 %9660, %9659
  %9662 = icmp eq i32 %9661, 2
  %9663 = zext i1 %9662 to i8
  %9664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9663, i8* %9664, align 1, !tbaa !2452
  %9665 = load i64, i64* %RBP
  %9666 = sub i64 %9665, 316
  %9667 = load i32, i32* %EAX
  %9668 = zext i32 %9667 to i64
  %9669 = load i64, i64* %PC
  %9670 = add i64 %9669, 6
  store i64 %9670, i64* %PC
  %9671 = inttoptr i64 %9666 to i32*
  store i32 %9667, i32* %9671
  %9672 = load i64, i64* %PC
  %9673 = add i64 %9672, 11
  %9674 = load i64, i64* %PC
  %9675 = add i64 %9674, 6
  %9676 = load i64, i64* %PC
  %9677 = add i64 %9676, 6
  store i64 %9677, i64* %PC
  %9678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9679 = load i8, i8* %9678, align 1, !tbaa !2450
  store i8 %9679, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9681 = icmp ne i8 %9679, 0
  %9682 = select i1 %9681, i64 %9673, i64 %9675
  store i64 %9682, i64* %9680, align 8, !tbaa !2428
  %9683 = load i8, i8* %BRANCH_TAKEN
  %9684 = icmp eq i8 %9683, 1
  br i1 %9684, label %block_4015c9, label %block_4015c4

block_400cec:                                     ; preds = %block_400cda
  %9685 = load i64, i64* %RBP
  %9686 = sub i64 %9685, 40
  %9687 = load i64, i64* %PC
  %9688 = add i64 %9687, 4
  store i64 %9688, i64* %PC
  %9689 = inttoptr i64 %9686 to i64*
  %9690 = load i64, i64* %9689
  store i64 %9690, i64* %RDI, align 8, !tbaa !2428
  %9691 = load i64, i64* %RBP
  %9692 = sub i64 %9691, 48
  %9693 = load i64, i64* %PC
  %9694 = add i64 %9693, 4
  store i64 %9694, i64* %PC
  %9695 = inttoptr i64 %9692 to i64*
  %9696 = load i64, i64* %9695
  store i64 %9696, i64* %RSI, align 8, !tbaa !2428
  %9697 = load i64, i64* %RBP
  %9698 = sub i64 %9697, 40
  %9699 = load i64, i64* %PC
  %9700 = add i64 %9699, 4
  store i64 %9700, i64* %PC
  %9701 = inttoptr i64 %9698 to i64*
  %9702 = load i64, i64* %9701
  store i64 %9702, i64* %RDX, align 8, !tbaa !2428
  %9703 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9704 = load i64, i64* %PC
  %9705 = add i64 %9704, 9
  store i64 %9705, i64* %PC
  %9706 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %9707 = bitcast i8* %9703 to double*
  store double %9706, double* %9707, align 1, !tbaa !2432
  %9708 = getelementptr inbounds i8, i8* %9703, i64 8
  %9709 = bitcast i8* %9708 to double*
  store double 0.000000e+00, double* %9709, align 1, !tbaa !2432
  %9710 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9711 = load i64, i64* %PC
  %9712 = add i64 %9711, 9
  store i64 %9712, i64* %PC
  %9713 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %9714 = bitcast i8* %9710 to double*
  store double %9713, double* %9714, align 1, !tbaa !2432
  %9715 = getelementptr inbounds i8, i8* %9710, i64 8
  %9716 = bitcast i8* %9715 to double*
  store double 0.000000e+00, double* %9716, align 1, !tbaa !2432
  %9717 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9718 = load i64, i64* %PC
  %9719 = add i64 %9718, 9
  store i64 %9719, i64* %PC
  %9720 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %9721 = bitcast i8* %9717 to double*
  store double %9720, double* %9721, align 1, !tbaa !2432
  %9722 = getelementptr inbounds i8, i8* %9717, i64 8
  %9723 = bitcast i8* %9722 to double*
  store double 0.000000e+00, double* %9723, align 1, !tbaa !2432
  %9724 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9725 = load i64, i64* %PC
  %9726 = add i64 %9725, 9
  store i64 %9726, i64* %PC
  %9727 = load double, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %9728 = bitcast i8* %9724 to double*
  store double %9727, double* %9728, align 1, !tbaa !2432
  %9729 = getelementptr inbounds i8, i8* %9724, i64 8
  %9730 = bitcast i8* %9729 to double*
  store double 0.000000e+00, double* %9730, align 1, !tbaa !2432
  %9731 = load i64, i64* %PC
  %9732 = add i64 %9731, 2244
  %9733 = load i64, i64* %PC
  %9734 = add i64 %9733, 5
  %9735 = load i64, i64* %PC
  %9736 = add i64 %9735, 5
  store i64 %9736, i64* %PC
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9738 = load i64, i64* %9737, align 8, !tbaa !2428
  %9739 = add i64 %9738, -8
  %9740 = inttoptr i64 %9739 to i64*
  store i64 %9734, i64* %9740
  store i64 %9739, i64* %9737, align 8, !tbaa !2428
  %9741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9732, i64* %9741, align 8, !tbaa !2428
  %9742 = load i64, i64* %PC
  %9743 = call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %9742, %struct.Memory* %MEMORY.4)
  br label %block_400d21

block_4012e4:                                     ; preds = %block_4012d2
  %9744 = load i64, i64* %RBP
  %9745 = sub i64 %9744, 80
  %9746 = load i64, i64* %PC
  %9747 = add i64 %9746, 4
  store i64 %9747, i64* %PC
  %9748 = inttoptr i64 %9745 to i64*
  %9749 = load i64, i64* %9748
  store i64 %9749, i64* %RDI, align 8, !tbaa !2428
  %9750 = load i64, i64* %PC
  %9751 = add i64 %9750, 8
  store i64 %9751, i64* %PC
  %9752 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9753 = sext i32 %9752 to i64
  store i64 %9753, i64* %RSI, align 8, !tbaa !2428
  %9754 = load i64, i64* %PC
  %9755 = add i64 %9754, 8
  store i64 %9755, i64* %PC
  %9756 = load i32, i32* bitcast (%K_type* @K to i32*)
  %9757 = sext i32 %9756 to i64
  store i64 %9757, i64* %RDX, align 8, !tbaa !2428
  %9758 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9759 = load i64, i64* %RBP
  %9760 = sub i64 %9759, 144
  %9761 = load i64, i64* %PC
  %9762 = add i64 %9761, 8
  store i64 %9762, i64* %PC
  %9763 = inttoptr i64 %9760 to double*
  %9764 = load double, double* %9763
  %9765 = bitcast i8* %9758 to double*
  store double %9764, double* %9765, align 1, !tbaa !2432
  %9766 = getelementptr inbounds i8, i8* %9758, i64 8
  %9767 = bitcast i8* %9766 to double*
  store double 0.000000e+00, double* %9767, align 1, !tbaa !2432
  %9768 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9769 = load i64, i64* %RBP
  %9770 = sub i64 %9769, 152
  %9771 = load i64, i64* %PC
  %9772 = add i64 %9771, 8
  store i64 %9772, i64* %PC
  %9773 = inttoptr i64 %9770 to double*
  %9774 = load double, double* %9773
  %9775 = bitcast i8* %9768 to double*
  store double %9774, double* %9775, align 1, !tbaa !2432
  %9776 = getelementptr inbounds i8, i8* %9768, i64 8
  %9777 = bitcast i8* %9776 to double*
  store double 0.000000e+00, double* %9777, align 1, !tbaa !2432
  %9778 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9779 = load i64, i64* %RBP
  %9780 = sub i64 %9779, 160
  %9781 = load i64, i64* %PC
  %9782 = add i64 %9781, 8
  store i64 %9782, i64* %PC
  %9783 = inttoptr i64 %9780 to double*
  %9784 = load double, double* %9783
  %9785 = bitcast i8* %9778 to double*
  store double %9784, double* %9785, align 1, !tbaa !2432
  %9786 = getelementptr inbounds i8, i8* %9778, i64 8
  %9787 = bitcast i8* %9786 to double*
  store double 0.000000e+00, double* %9787, align 1, !tbaa !2432
  %9788 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9789 = load i64, i64* %RBP
  %9790 = sub i64 %9789, 160
  %9791 = load i64, i64* %PC
  %9792 = add i64 %9791, 8
  store i64 %9792, i64* %PC
  %9793 = inttoptr i64 %9790 to double*
  %9794 = load double, double* %9793
  %9795 = bitcast i8* %9788 to double*
  store double %9794, double* %9795, align 1, !tbaa !2432
  %9796 = getelementptr inbounds i8, i8* %9788, i64 8
  %9797 = bitcast i8* %9796 to double*
  store double 0.000000e+00, double* %9797, align 1, !tbaa !2432
  %9798 = load i64, i64* %PC
  %9799 = add i64 %9798, 712
  %9800 = load i64, i64* %PC
  %9801 = add i64 %9800, 5
  %9802 = load i64, i64* %PC
  %9803 = add i64 %9802, 5
  store i64 %9803, i64* %PC
  %9804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9805 = load i64, i64* %9804, align 8, !tbaa !2428
  %9806 = add i64 %9805, -8
  %9807 = inttoptr i64 %9806 to i64*
  store i64 %9801, i64* %9807
  store i64 %9806, i64* %9804, align 8, !tbaa !2428
  %9808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9799, i64* %9808, align 8, !tbaa !2428
  %9809 = load i64, i64* %PC
  %9810 = call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %9809, %struct.Memory* %MEMORY.6)
  br label %block_40131d

block_400e92:                                     ; preds = %block_400e50, %block_400e62
  %MEMORY.16 = phi %struct.Memory* [ %MEMORY.11, %block_400e50 ], [ %200, %block_400e62 ]
  %9811 = load i64, i64* %PC
  %9812 = add i64 %9811, 11
  store i64 %9812, i64* %PC
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %9813 = load i64, i64* %PC
  %9814 = add i64 %9813, 11
  store i64 %9814, i64* %PC
  store i32 2, i32* bitcast (%K_type* @K to i32*)
  %9815 = load i64, i64* %PC
  %9816 = add i64 %9815, 11
  store i64 %9816, i64* %PC
  store i32 3, i32* bitcast (%L_type* @L to i32*)
  %9817 = load i64, i64* %RBP
  %9818 = sub i64 %9817, 24
  %9819 = load i64, i64* %PC
  %9820 = add i64 %9819, 8
  store i64 %9820, i64* %PC
  %9821 = inttoptr i64 %9818 to i64*
  store i64 1, i64* %9821
  br label %block_400ebb

block_400e11:                                     ; preds = %block_400e06, %block_400df6
  %MEMORY.17 = phi %struct.Memory* [ %MEMORY.0, %block_400e06 ], [ %MEMORY.0, %block_400df6 ]
  %9822 = load i64, i64* %PC
  %9823 = add i64 %9822, 8
  store i64 %9823, i64* %PC
  %9824 = load i32, i32* bitcast (%J_type* @J to i32*)
  %9825 = sub i32 %9824, 1
  %9826 = icmp ult i32 %9824, 1
  %9827 = zext i1 %9826 to i8
  %9828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9827, i8* %9828, align 1, !tbaa !2434
  %9829 = and i32 %9825, 255
  %9830 = call i32 @llvm.ctpop.i32(i32 %9829) #17
  %9831 = trunc i32 %9830 to i8
  %9832 = and i8 %9831, 1
  %9833 = xor i8 %9832, 1
  %9834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9833, i8* %9834, align 1, !tbaa !2448
  %9835 = xor i32 %9824, 1
  %9836 = xor i32 %9835, %9825
  %9837 = lshr i32 %9836, 4
  %9838 = trunc i32 %9837 to i8
  %9839 = and i8 %9838, 1
  %9840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9839, i8* %9840, align 1, !tbaa !2449
  %9841 = icmp eq i32 %9825, 0
  %9842 = zext i1 %9841 to i8
  %9843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9842, i8* %9843, align 1, !tbaa !2450
  %9844 = lshr i32 %9825, 31
  %9845 = trunc i32 %9844 to i8
  %9846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9845, i8* %9846, align 1, !tbaa !2451
  %9847 = lshr i32 %9824, 31
  %9848 = xor i32 %9844, %9847
  %9849 = add nuw nsw i32 %9848, %9847
  %9850 = icmp eq i32 %9849, 2
  %9851 = zext i1 %9850 to i8
  %9852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9851, i8* %9852, align 1, !tbaa !2452
  %9853 = load i64, i64* %PC
  %9854 = add i64 %9853, 22
  %9855 = load i64, i64* %PC
  %9856 = add i64 %9855, 6
  %9857 = load i64, i64* %PC
  %9858 = add i64 %9857, 6
  store i64 %9858, i64* %PC
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9860 = load i8, i8* %9859, align 1, !tbaa !2451
  %9861 = icmp ne i8 %9860, 0
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9863 = load i8, i8* %9862, align 1, !tbaa !2452
  %9864 = icmp ne i8 %9863, 0
  %9865 = xor i1 %9861, %9864
  %9866 = xor i1 %9865, true
  %9867 = zext i1 %9866 to i8
  store i8 %9867, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9869 = select i1 %9865, i64 %9856, i64 %9854
  store i64 %9869, i64* %9868, align 8, !tbaa !2428
  %9870 = load i8, i8* %BRANCH_TAKEN
  %9871 = icmp eq i8 %9870, 1
  %9872 = load i64, i64* %PC
  %9873 = add i64 %9872, 11
  store i64 %9873, i64* %PC
  br i1 %9871, label %block_400e2f, label %block_400e1f

block_401570:                                     ; preds = %block_401525, %block_401537
  %MEMORY.18 = phi %struct.Memory* [ %MEMORY.3, %block_401525 ], [ %1926, %block_401537 ]
  %9874 = load i64, i64* %RBP
  %9875 = sub i64 %9874, 176
  %9876 = load i64, i64* %PC
  %9877 = add i64 %9876, 6
  store i64 %9877, i64* %PC
  %9878 = inttoptr i64 %9875 to i32*
  %9879 = load i32, i32* %9878
  %9880 = zext i32 %9879 to i64
  store i64 %9880, i64* %RAX, align 8, !tbaa !2428
  %9881 = load i64, i64* %RAX
  %9882 = load i64, i64* %PC
  %9883 = add i64 %9882, 3
  store i64 %9883, i64* %PC
  %9884 = trunc i64 %9881 to i32
  %9885 = add i32 1, %9884
  %9886 = zext i32 %9885 to i64
  store i64 %9886, i64* %RAX, align 8, !tbaa !2428
  %9887 = icmp ult i32 %9885, %9884
  %9888 = icmp ult i32 %9885, 1
  %9889 = or i1 %9887, %9888
  %9890 = zext i1 %9889 to i8
  %9891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9890, i8* %9891, align 1, !tbaa !2434
  %9892 = and i32 %9885, 255
  %9893 = call i32 @llvm.ctpop.i32(i32 %9892) #17
  %9894 = trunc i32 %9893 to i8
  %9895 = and i8 %9894, 1
  %9896 = xor i8 %9895, 1
  %9897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9896, i8* %9897, align 1, !tbaa !2448
  %9898 = xor i64 1, %9881
  %9899 = trunc i64 %9898 to i32
  %9900 = xor i32 %9899, %9885
  %9901 = lshr i32 %9900, 4
  %9902 = trunc i32 %9901 to i8
  %9903 = and i8 %9902, 1
  %9904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9903, i8* %9904, align 1, !tbaa !2449
  %9905 = icmp eq i32 %9885, 0
  %9906 = zext i1 %9905 to i8
  %9907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9906, i8* %9907, align 1, !tbaa !2450
  %9908 = lshr i32 %9885, 31
  %9909 = trunc i32 %9908 to i8
  %9910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9909, i8* %9910, align 1, !tbaa !2451
  %9911 = lshr i32 %9884, 31
  %9912 = xor i32 %9908, %9911
  %9913 = add nuw nsw i32 %9912, %9908
  %9914 = icmp eq i32 %9913, 2
  %9915 = zext i1 %9914 to i8
  %9916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9915, i8* %9916, align 1, !tbaa !2452
  %9917 = load i64, i64* %RBP
  %9918 = sub i64 %9917, 176
  %9919 = load i32, i32* %EAX
  %9920 = zext i32 %9919 to i64
  %9921 = load i64, i64* %PC
  %9922 = add i64 %9921, 6
  store i64 %9922, i64* %PC
  %9923 = inttoptr i64 %9918 to i32*
  store i32 %9919, i32* %9923
  %9924 = load i32, i32* %EAX
  %9925 = zext i32 %9924 to i64
  %9926 = load i64, i64* %RBP
  %9927 = sub i64 %9926, 172
  %9928 = load i64, i64* %PC
  %9929 = add i64 %9928, 6
  store i64 %9929, i64* %PC
  %9930 = inttoptr i64 %9927 to i32*
  %9931 = load i32, i32* %9930
  %9932 = sub i32 %9924, %9931
  %9933 = icmp ult i32 %9924, %9931
  %9934 = zext i1 %9933 to i8
  %9935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9934, i8* %9935, align 1, !tbaa !2434
  %9936 = and i32 %9932, 255
  %9937 = call i32 @llvm.ctpop.i32(i32 %9936) #17
  %9938 = trunc i32 %9937 to i8
  %9939 = and i8 %9938, 1
  %9940 = xor i8 %9939, 1
  %9941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9940, i8* %9941, align 1, !tbaa !2448
  %9942 = xor i32 %9931, %9924
  %9943 = xor i32 %9942, %9932
  %9944 = lshr i32 %9943, 4
  %9945 = trunc i32 %9944 to i8
  %9946 = and i8 %9945, 1
  %9947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9946, i8* %9947, align 1, !tbaa !2449
  %9948 = icmp eq i32 %9932, 0
  %9949 = zext i1 %9948 to i8
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9949, i8* %9950, align 1, !tbaa !2450
  %9951 = lshr i32 %9932, 31
  %9952 = trunc i32 %9951 to i8
  %9953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9952, i8* %9953, align 1, !tbaa !2451
  %9954 = lshr i32 %9924, 31
  %9955 = lshr i32 %9931, 31
  %9956 = xor i32 %9955, %9954
  %9957 = xor i32 %9951, %9954
  %9958 = add nuw nsw i32 %9957, %9956
  %9959 = icmp eq i32 %9958, 2
  %9960 = zext i1 %9959 to i8
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9960, i8* %9961, align 1, !tbaa !2452
  %9962 = load i64, i64* %PC
  %9963 = add i64 %9962, 11
  %9964 = load i64, i64* %PC
  %9965 = add i64 %9964, 6
  %9966 = load i64, i64* %PC
  %9967 = add i64 %9966, 6
  store i64 %9967, i64* %PC
  %9968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9969 = load i8, i8* %9968, align 1, !tbaa !2450
  %9970 = icmp eq i8 %9969, 0
  %9971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9972 = load i8, i8* %9971, align 1, !tbaa !2451
  %9973 = icmp ne i8 %9972, 0
  %9974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9975 = load i8, i8* %9974, align 1, !tbaa !2452
  %9976 = icmp ne i8 %9975, 0
  %9977 = xor i1 %9973, %9976
  %9978 = xor i1 %9977, true
  %9979 = and i1 %9970, %9978
  %9980 = zext i1 %9979 to i8
  store i8 %9980, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %9981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9982 = select i1 %9979, i64 %9963, i64 %9965
  store i64 %9982, i64* %9981, align 8, !tbaa !2428
  %9983 = load i8, i8* %BRANCH_TAKEN
  %9984 = icmp eq i8 %9983, 1
  br i1 %9984, label %block_401590, label %block_40158b

block_400b90:                                     ; preds = %block_400b56, %block_400b68
  %MEMORY.19 = phi %struct.Memory* [ %MEMORY.26, %block_400b56 ], [ %3241, %block_400b68 ]
  %9985 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9986 = load i64, i64* %PC
  %9987 = add i64 %9986, 8
  store i64 %9987, i64* %PC
  %9988 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 32) to double*)
  %9989 = bitcast i8* %9985 to double*
  store double %9988, double* %9989, align 1, !tbaa !2432
  %9990 = getelementptr inbounds i8, i8* %9985, i64 8
  %9991 = bitcast i8* %9990 to double*
  store double 0.000000e+00, double* %9991, align 1, !tbaa !2432
  %9992 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9993 = load i64, i64* %PC
  %9994 = add i64 %9993, 8
  store i64 %9994, i64* %PC
  %9995 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 40) to double*)
  %9996 = bitcast i8* %9992 to double*
  store double %9995, double* %9996, align 1, !tbaa !2432
  %9997 = getelementptr inbounds i8, i8* %9992, i64 8
  %9998 = bitcast i8* %9997 to double*
  store double 0.000000e+00, double* %9998, align 1, !tbaa !2432
  %9999 = bitcast %union.vec128_t* %XMM1 to i8*
  %10000 = load i64, i64* %PC
  %10001 = add i64 %10000, 9
  store i64 %10001, i64* %PC
  %10002 = bitcast i8* %9999 to double*
  %10003 = load double, double* %10002, align 1
  store double %10003, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %10004 = bitcast %union.vec128_t* %XMM0 to i8*
  %10005 = load i64, i64* %PC
  %10006 = add i64 %10005, 9
  store i64 %10006, i64* %PC
  %10007 = bitcast i8* %10004 to double*
  %10008 = load double, double* %10007, align 1
  store double %10008, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %10009 = bitcast %union.vec128_t* %XMM0 to i8*
  %10010 = load i64, i64* %PC
  %10011 = add i64 %10010, 9
  store i64 %10011, i64* %PC
  %10012 = bitcast i8* %10009 to double*
  %10013 = load double, double* %10012, align 1
  store double %10013, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %10014 = bitcast %union.vec128_t* %XMM0 to i8*
  %10015 = load i64, i64* %PC
  %10016 = add i64 %10015, 9
  store i64 %10016, i64* %PC
  %10017 = bitcast i8* %10014 to double*
  %10018 = load double, double* %10017, align 1
  store double %10018, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 32) to double*)
  %10019 = load i64, i64* %RBP
  %10020 = sub i64 %10019, 24
  %10021 = load i64, i64* %PC
  %10022 = add i64 %10021, 8
  store i64 %10022, i64* %PC
  %10023 = inttoptr i64 %10020 to i64*
  store i64 1, i64* %10023
  br label %block_400bcc

block_40126f:                                     ; preds = %block_401224, %block_401236
  %MEMORY.20 = phi %struct.Memory* [ %MEMORY.12, %block_401224 ], [ %3048, %block_401236 ]
  %10024 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10025 = load i64, i64* %PC
  %10026 = add i64 %10025, 8
  store i64 %10026, i64* %PC
  %10027 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 40) to double*)
  %10028 = bitcast i8* %10024 to double*
  store double %10027, double* %10028, align 1, !tbaa !2432
  %10029 = getelementptr inbounds i8, i8* %10024, i64 8
  %10030 = bitcast i8* %10029 to double*
  store double 0.000000e+00, double* %10030, align 1, !tbaa !2432
  %10031 = load i64, i64* %RBP
  %10032 = sub i64 %10031, 144
  %10033 = bitcast %union.vec128_t* %XMM0 to i8*
  %10034 = load i64, i64* %PC
  %10035 = add i64 %10034, 8
  store i64 %10035, i64* %PC
  %10036 = bitcast i8* %10033 to double*
  %10037 = load double, double* %10036, align 1
  %10038 = inttoptr i64 %10032 to double*
  store double %10037, double* %10038
  %10039 = load i64, i64* %RBP
  %10040 = sub i64 %10039, 152
  %10041 = bitcast %union.vec128_t* %XMM0 to i8*
  %10042 = load i64, i64* %PC
  %10043 = add i64 %10042, 8
  store i64 %10043, i64* %PC
  %10044 = bitcast i8* %10041 to double*
  %10045 = load double, double* %10044, align 1
  %10046 = inttoptr i64 %10040 to double*
  store double %10045, double* %10046
  %10047 = load i64, i64* %RBP
  %10048 = sub i64 %10047, 160
  %10049 = bitcast %union.vec128_t* %XMM0 to i8*
  %10050 = load i64, i64* %PC
  %10051 = add i64 %10050, 8
  store i64 %10051, i64* %PC
  %10052 = bitcast i8* %10049 to double*
  %10053 = load double, double* %10052, align 1
  %10054 = inttoptr i64 %10048 to double*
  store double %10053, double* %10054
  %10055 = load i64, i64* %RBP
  %10056 = sub i64 %10055, 24
  %10057 = load i64, i64* %PC
  %10058 = add i64 %10057, 8
  store i64 %10058, i64* %PC
  %10059 = inttoptr i64 %10056 to i64*
  store i64 1, i64* %10059
  br label %block_401297

block_400b56:                                     ; preds = %block_400a89
  %10060 = load i64, i64* %RBP
  %10061 = sub i64 %10060, 176
  %10062 = load i64, i64* %PC
  %10063 = add i64 %10062, 6
  store i64 %10063, i64* %PC
  %10064 = inttoptr i64 %10061 to i32*
  %10065 = load i32, i32* %10064
  %10066 = zext i32 %10065 to i64
  store i64 %10066, i64* %RAX, align 8, !tbaa !2428
  %10067 = load i32, i32* %EAX
  %10068 = zext i32 %10067 to i64
  %10069 = load i64, i64* %RBP
  %10070 = sub i64 %10069, 172
  %10071 = load i64, i64* %PC
  %10072 = add i64 %10071, 6
  store i64 %10072, i64* %PC
  %10073 = inttoptr i64 %10070 to i32*
  %10074 = load i32, i32* %10073
  %10075 = sub i32 %10067, %10074
  %10076 = icmp ult i32 %10067, %10074
  %10077 = zext i1 %10076 to i8
  %10078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10077, i8* %10078, align 1, !tbaa !2434
  %10079 = and i32 %10075, 255
  %10080 = call i32 @llvm.ctpop.i32(i32 %10079) #17
  %10081 = trunc i32 %10080 to i8
  %10082 = and i8 %10081, 1
  %10083 = xor i8 %10082, 1
  %10084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10083, i8* %10084, align 1, !tbaa !2448
  %10085 = xor i32 %10074, %10067
  %10086 = xor i32 %10085, %10075
  %10087 = lshr i32 %10086, 4
  %10088 = trunc i32 %10087 to i8
  %10089 = and i8 %10088, 1
  %10090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10089, i8* %10090, align 1, !tbaa !2449
  %10091 = icmp eq i32 %10075, 0
  %10092 = zext i1 %10091 to i8
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10092, i8* %10093, align 1, !tbaa !2450
  %10094 = lshr i32 %10075, 31
  %10095 = trunc i32 %10094 to i8
  %10096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10095, i8* %10096, align 1, !tbaa !2451
  %10097 = lshr i32 %10067, 31
  %10098 = lshr i32 %10074, 31
  %10099 = xor i32 %10098, %10097
  %10100 = xor i32 %10094, %10097
  %10101 = add nuw nsw i32 %10100, %10099
  %10102 = icmp eq i32 %10101, 2
  %10103 = zext i1 %10102 to i8
  %10104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10103, i8* %10104, align 1, !tbaa !2452
  %10105 = load i64, i64* %PC
  %10106 = add i64 %10105, 46
  %10107 = load i64, i64* %PC
  %10108 = add i64 %10107, 6
  %10109 = load i64, i64* %PC
  %10110 = add i64 %10109, 6
  store i64 %10110, i64* %PC
  %10111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10112 = load i8, i8* %10111, align 1, !tbaa !2450
  %10113 = icmp eq i8 %10112, 0
  %10114 = zext i1 %10113 to i8
  store i8 %10114, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10116 = select i1 %10113, i64 %10106, i64 %10108
  store i64 %10116, i64* %10115, align 8, !tbaa !2428
  %10117 = load i8, i8* %BRANCH_TAKEN
  %10118 = icmp eq i8 %10117, 1
  br i1 %10118, label %block_400b90, label %block_400b68

block_400ebb:                                     ; preds = %block_400e92, %block_400ec9
  %MEMORY.21 = phi %struct.Memory* [ %MEMORY.16, %block_400e92 ], [ %MEMORY.21, %block_400ec9 ]
  %10119 = load i64, i64* %RBP
  %10120 = sub i64 %10119, 24
  %10121 = load i64, i64* %PC
  %10122 = add i64 %10121, 4
  store i64 %10122, i64* %PC
  %10123 = inttoptr i64 %10120 to i64*
  %10124 = load i64, i64* %10123
  store i64 %10124, i64* %RAX, align 8, !tbaa !2428
  %10125 = load i64, i64* %RAX
  %10126 = load i64, i64* %RBP
  %10127 = sub i64 %10126, 64
  %10128 = load i64, i64* %PC
  %10129 = add i64 %10128, 4
  store i64 %10129, i64* %PC
  %10130 = inttoptr i64 %10127 to i64*
  %10131 = load i64, i64* %10130
  %10132 = sub i64 %10125, %10131
  %10133 = icmp ugt i64 %10131, %10125
  %10134 = zext i1 %10133 to i8
  %10135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10134, i8* %10135, align 1, !tbaa !2434
  %10136 = trunc i64 %10132 to i32
  %10137 = and i32 %10136, 255
  %10138 = call i32 @llvm.ctpop.i32(i32 %10137) #17
  %10139 = trunc i32 %10138 to i8
  %10140 = and i8 %10139, 1
  %10141 = xor i8 %10140, 1
  %10142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10141, i8* %10142, align 1, !tbaa !2448
  %10143 = xor i64 %10131, %10125
  %10144 = xor i64 %10143, %10132
  %10145 = lshr i64 %10144, 4
  %10146 = trunc i64 %10145 to i8
  %10147 = and i8 %10146, 1
  %10148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10147, i8* %10148, align 1, !tbaa !2449
  %10149 = icmp eq i64 %10132, 0
  %10150 = zext i1 %10149 to i8
  %10151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10150, i8* %10151, align 1, !tbaa !2450
  %10152 = lshr i64 %10132, 63
  %10153 = trunc i64 %10152 to i8
  %10154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10153, i8* %10154, align 1, !tbaa !2451
  %10155 = lshr i64 %10125, 63
  %10156 = lshr i64 %10131, 63
  %10157 = xor i64 %10156, %10155
  %10158 = xor i64 %10152, %10155
  %10159 = add nuw nsw i64 %10158, %10157
  %10160 = icmp eq i64 %10159, 2
  %10161 = zext i1 %10160 to i8
  %10162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10161, i8* %10162, align 1, !tbaa !2452
  %10163 = load i64, i64* %PC
  %10164 = add i64 %10163, 251
  %10165 = load i64, i64* %PC
  %10166 = add i64 %10165, 6
  %10167 = load i64, i64* %PC
  %10168 = add i64 %10167, 6
  store i64 %10168, i64* %PC
  %10169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10170 = load i8, i8* %10169, align 1, !tbaa !2450
  %10171 = icmp eq i8 %10170, 0
  %10172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10173 = load i8, i8* %10172, align 1, !tbaa !2451
  %10174 = icmp ne i8 %10173, 0
  %10175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10176 = load i8, i8* %10175, align 1, !tbaa !2452
  %10177 = icmp ne i8 %10176, 0
  %10178 = xor i1 %10174, %10177
  %10179 = xor i1 %10178, true
  %10180 = and i1 %10171, %10179
  %10181 = zext i1 %10180 to i8
  store i8 %10181, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %10182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10183 = select i1 %10180, i64 %10164, i64 %10166
  store i64 %10183, i64* %10182, align 8, !tbaa !2428
  %10184 = load i8, i8* %BRANCH_TAKEN
  %10185 = icmp eq i8 %10184, 1
  br i1 %10185, label %block_400fbe, label %block_400ec9

block_40092d:                                     ; preds = %block_4008ef
  %10186 = load i64, i64* %PC
  %10187 = add i64 %10186, 10
  store i64 %10187, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 75), i64* %RSI, align 8, !tbaa !2428
  %10188 = load i64, i64* %PC
  %10189 = add i64 %10188, 8
  store i64 %10189, i64* %PC
  %10190 = load i64, i64* @stderr
  store i64 %10190, i64* %RDI, align 8, !tbaa !2428
  %10191 = load i64, i64* %PC
  %10192 = add i64 %10191, 2
  store i64 %10192, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %10193 = load i64, i64* %PC
  %10194 = sub i64 %10193, 561
  %10195 = load i64, i64* %PC
  %10196 = add i64 %10195, 5
  %10197 = load i64, i64* %PC
  %10198 = add i64 %10197, 5
  store i64 %10198, i64* %PC
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10200 = load i64, i64* %10199, align 8, !tbaa !2428
  %10201 = add i64 %10200, -8
  %10202 = inttoptr i64 %10201 to i64*
  store i64 %10196, i64* %10202
  store i64 %10201, i64* %10199, align 8, !tbaa !2428
  %10203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10194, i64* %10203, align 8, !tbaa !2428
  %10204 = load i64, i64* %PC
  %10205 = call %struct.Memory* @ext_400710_fprintf(%struct.State* %0, i64 %10204, %struct.Memory* %10256)
  %10206 = load i64, i64* %RBP
  %10207 = sub i64 %10206, 4
  %10208 = load i64, i64* %PC
  %10209 = add i64 %10208, 7
  store i64 %10209, i64* %PC
  %10210 = inttoptr i64 %10207 to i32*
  store i32 1, i32* %10210
  %10211 = load i64, i64* %RBP
  %10212 = sub i64 %10211, 212
  %10213 = load i32, i32* %EAX
  %10214 = zext i32 %10213 to i64
  %10215 = load i64, i64* %PC
  %10216 = add i64 %10215, 6
  store i64 %10216, i64* %PC
  %10217 = inttoptr i64 %10212 to i32*
  store i32 %10213, i32* %10217
  %10218 = load i64, i64* %PC
  %10219 = add i64 %10218, 3197
  %10220 = load i64, i64* %PC
  %10221 = add i64 %10220, 5
  store i64 %10221, i64* %PC
  %10222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10219, i64* %10222, align 8, !tbaa !2428
  br label %block_4015d0

block_4008ef:                                     ; preds = %block_4008c5
  %10223 = load i64, i64* %RBP
  %10224 = sub i64 %10223, 16
  %10225 = load i64, i64* %PC
  %10226 = add i64 %10225, 4
  store i64 %10226, i64* %PC
  %10227 = inttoptr i64 %10224 to i64*
  %10228 = load i64, i64* %10227
  store i64 %10228, i64* %RAX, align 8, !tbaa !2428
  %10229 = load i64, i64* %RBP
  %10230 = sub i64 %10229, 172
  %10231 = load i64, i64* %PC
  %10232 = add i64 %10231, 7
  store i64 %10232, i64* %PC
  %10233 = inttoptr i64 %10230 to i32*
  %10234 = load i32, i32* %10233
  %10235 = sext i32 %10234 to i64
  store i64 %10235, i64* %RCX, align 8, !tbaa !2428
  %10236 = load i64, i64* %RAX
  %10237 = load i64, i64* %RCX
  %10238 = mul i64 %10237, 8
  %10239 = add i64 %10238, %10236
  %10240 = load i64, i64* %PC
  %10241 = add i64 %10240, 4
  store i64 %10241, i64* %PC
  %10242 = inttoptr i64 %10239 to i64*
  %10243 = load i64, i64* %10242
  store i64 %10243, i64* %RDI, align 8, !tbaa !2428
  %10244 = load i64, i64* %PC
  %10245 = sub i64 %10244, 462
  %10246 = load i64, i64* %PC
  %10247 = add i64 %10246, 5
  %10248 = load i64, i64* %PC
  %10249 = add i64 %10248, 5
  store i64 %10249, i64* %PC
  %10250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10251 = load i64, i64* %10250, align 8, !tbaa !2428
  %10252 = add i64 %10251, -8
  %10253 = inttoptr i64 %10252 to i64*
  store i64 %10247, i64* %10253
  store i64 %10252, i64* %10250, align 8, !tbaa !2428
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10245, i64* %10254, align 8, !tbaa !2428
  %10255 = load i64, i64* %PC
  %10256 = call %struct.Memory* @ext_602190_atol(%struct.State* %0, i64 %10255, %struct.Memory* %9470)
  %10257 = load i64, i64* %RAX
  %10258 = load i64, i64* %PC
  %10259 = add i64 %10258, 4
  store i64 %10259, i64* %PC
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10260, align 1, !tbaa !2434
  %10261 = trunc i64 %10257 to i32
  %10262 = and i32 %10261, 255
  %10263 = call i32 @llvm.ctpop.i32(i32 %10262) #17
  %10264 = trunc i32 %10263 to i8
  %10265 = and i8 %10264, 1
  %10266 = xor i8 %10265, 1
  %10267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10266, i8* %10267, align 1, !tbaa !2448
  %10268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10268, align 1, !tbaa !2449
  %10269 = icmp eq i64 %10257, 0
  %10270 = zext i1 %10269 to i8
  %10271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10270, i8* %10271, align 1, !tbaa !2450
  %10272 = lshr i64 %10257, 63
  %10273 = trunc i64 %10272 to i8
  %10274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10273, i8* %10274, align 1, !tbaa !2451
  %10275 = lshr i64 %10257, 63
  %10276 = xor i64 %10272, %10275
  %10277 = add nuw nsw i64 %10276, %10275
  %10278 = icmp eq i64 %10277, 2
  %10279 = zext i1 %10278 to i8
  %10280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10279, i8* %10280, align 1, !tbaa !2452
  %10281 = load i64, i64* %PC
  %10282 = add i64 %10281, 38
  %10283 = load i64, i64* %PC
  %10284 = add i64 %10283, 6
  %10285 = load i64, i64* %PC
  %10286 = add i64 %10285, 6
  store i64 %10286, i64* %PC
  %10287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10288 = load i8, i8* %10287, align 1, !tbaa !2450
  %10289 = icmp ne i8 %10288, 0
  %10290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10291 = load i8, i8* %10290, align 1, !tbaa !2451
  %10292 = icmp ne i8 %10291, 0
  %10293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10294 = load i8, i8* %10293, align 1, !tbaa !2452
  %10295 = icmp ne i8 %10294, 0
  %10296 = xor i1 %10292, %10295
  %10297 = or i1 %10289, %10296
  %10298 = zext i1 %10297 to i8
  store i8 %10298, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %10299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10300 = select i1 %10297, i64 %10282, i64 %10284
  store i64 %10300, i64* %10299, align 8, !tbaa !2428
  %10301 = load i8, i8* %BRANCH_TAKEN
  %10302 = icmp eq i8 %10301, 1
  br i1 %10302, label %block_40092d, label %block_40090d

block_40090d:                                     ; preds = %block_4008ef
  %10303 = load i64, i64* %RBP
  %10304 = sub i64 %10303, 16
  %10305 = load i64, i64* %PC
  %10306 = add i64 %10305, 4
  store i64 %10306, i64* %PC
  %10307 = inttoptr i64 %10304 to i64*
  %10308 = load i64, i64* %10307
  store i64 %10308, i64* %RAX, align 8, !tbaa !2428
  %10309 = load i64, i64* %RBP
  %10310 = sub i64 %10309, 172
  %10311 = load i64, i64* %PC
  %10312 = add i64 %10311, 7
  store i64 %10312, i64* %PC
  %10313 = inttoptr i64 %10310 to i32*
  %10314 = load i32, i32* %10313
  %10315 = sext i32 %10314 to i64
  store i64 %10315, i64* %RCX, align 8, !tbaa !2428
  %10316 = load i64, i64* %RAX
  %10317 = load i64, i64* %RCX
  %10318 = mul i64 %10317, 8
  %10319 = add i64 %10318, %10316
  %10320 = load i64, i64* %PC
  %10321 = add i64 %10320, 4
  store i64 %10321, i64* %PC
  %10322 = inttoptr i64 %10319 to i64*
  %10323 = load i64, i64* %10322
  store i64 %10323, i64* %RDI, align 8, !tbaa !2428
  %10324 = load i64, i64* %PC
  %10325 = sub i64 %10324, 492
  %10326 = load i64, i64* %PC
  %10327 = add i64 %10326, 5
  %10328 = load i64, i64* %PC
  %10329 = add i64 %10328, 5
  store i64 %10329, i64* %PC
  %10330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10331 = load i64, i64* %10330, align 8, !tbaa !2428
  %10332 = add i64 %10331, -8
  %10333 = inttoptr i64 %10332 to i64*
  store i64 %10327, i64* %10333
  store i64 %10332, i64* %10330, align 8, !tbaa !2428
  %10334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10325, i64* %10334, align 8, !tbaa !2428
  %10335 = load i64, i64* %PC
  %10336 = call %struct.Memory* @ext_602190_atol(%struct.State* %0, i64 %10335, %struct.Memory* %10256)
  %10337 = load i64, i64* %RBP
  %10338 = sub i64 %10337, 184
  %10339 = load i64, i64* %RAX
  %10340 = load i64, i64* %PC
  %10341 = add i64 %10340, 7
  store i64 %10341, i64* %PC
  %10342 = inttoptr i64 %10338 to i64*
  store i64 %10339, i64* %10342
  %10343 = load i64, i64* %PC
  %10344 = add i64 %10343, 48
  %10345 = load i64, i64* %PC
  %10346 = add i64 %10345, 5
  store i64 %10346, i64* %PC
  %10347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10344, i64* %10347, align 8, !tbaa !2428
  %10348 = load i64, i64* %PC
  %10349 = add i64 %10348, 5
  %10350 = load i64, i64* %PC
  %10351 = add i64 %10350, 5
  store i64 %10351, i64* %PC
  %10352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10349, i64* %10352, align 8, !tbaa !2428
  br label %block_40095d

block_4014c6:                                     ; preds = %block_401484, %block_401496
  %MEMORY.22 = phi %struct.Memory* [ %MEMORY.25, %block_401484 ], [ %9574, %block_401496 ]
  %10353 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10354 = load i64, i64* %PC
  %10355 = add i64 %10354, 8
  store i64 %10355, i64* %PC
  %10356 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 64) to double*)
  %10357 = bitcast i8* %10353 to double*
  store double %10356, double* %10357, align 1, !tbaa !2432
  %10358 = getelementptr inbounds i8, i8* %10353, i64 8
  %10359 = bitcast i8* %10358 to double*
  store double 0.000000e+00, double* %10359, align 1, !tbaa !2432
  %10360 = load i64, i64* %RBP
  %10361 = sub i64 %10360, 144
  %10362 = bitcast %union.vec128_t* %XMM0 to i8*
  %10363 = load i64, i64* %PC
  %10364 = add i64 %10363, 8
  store i64 %10364, i64* %PC
  %10365 = bitcast i8* %10362 to double*
  %10366 = load double, double* %10365, align 1
  %10367 = inttoptr i64 %10361 to double*
  store double %10366, double* %10367
  %10368 = load i64, i64* %RBP
  %10369 = sub i64 %10368, 24
  %10370 = load i64, i64* %PC
  %10371 = add i64 %10370, 8
  store i64 %10371, i64* %PC
  %10372 = inttoptr i64 %10369 to i64*
  store i64 1, i64* %10372
  br label %block_4014de

block_400a97:                                     ; preds = %block_400a89
  %10373 = load i64, i64* %PC
  %10374 = add i64 %10373, 10
  store i64 %10374, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %10375 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10376 = load i64, i64* %RBP
  %10377 = sub i64 %10376, 112
  %10378 = load i64, i64* %PC
  %10379 = add i64 %10378, 5
  store i64 %10379, i64* %PC
  %10380 = inttoptr i64 %10377 to double*
  %10381 = load double, double* %10380
  %10382 = bitcast i8* %10375 to double*
  store double %10381, double* %10382, align 1, !tbaa !2432
  %10383 = getelementptr inbounds i8, i8* %10375, i64 8
  %10384 = bitcast i8* %10383 to double*
  store double 0.000000e+00, double* %10384, align 1, !tbaa !2432
  %10385 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10386 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10387 = load i64, i64* %RBP
  %10388 = sub i64 %10387, 120
  %10389 = load i64, i64* %PC
  %10390 = add i64 %10389, 5
  store i64 %10390, i64* %PC
  %10391 = bitcast i8* %10386 to double*
  %10392 = load double, double* %10391, align 1
  %10393 = getelementptr inbounds i8, i8* %10386, i64 8
  %10394 = bitcast i8* %10393 to i64*
  %10395 = load i64, i64* %10394, align 1
  %10396 = inttoptr i64 %10388 to double*
  %10397 = load double, double* %10396
  %10398 = fadd double %10392, %10397
  %10399 = bitcast i8* %10385 to double*
  store double %10398, double* %10399, align 1, !tbaa !2432
  %10400 = getelementptr inbounds i8, i8* %10385, i64 8
  %10401 = bitcast i8* %10400 to i64*
  store i64 %10395, i64* %10401, align 1, !tbaa !2432
  %10402 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10403 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10404 = load i64, i64* %RBP
  %10405 = sub i64 %10404, 128
  %10406 = load i64, i64* %PC
  %10407 = add i64 %10406, 5
  store i64 %10407, i64* %PC
  %10408 = bitcast i8* %10403 to double*
  %10409 = load double, double* %10408, align 1
  %10410 = getelementptr inbounds i8, i8* %10403, i64 8
  %10411 = bitcast i8* %10410 to i64*
  %10412 = load i64, i64* %10411, align 1
  %10413 = inttoptr i64 %10405 to double*
  %10414 = load double, double* %10413
  %10415 = fadd double %10409, %10414
  %10416 = bitcast i8* %10402 to double*
  store double %10415, double* %10416, align 1, !tbaa !2432
  %10417 = getelementptr inbounds i8, i8* %10402, i64 8
  %10418 = bitcast i8* %10417 to i64*
  store i64 %10412, i64* %10418, align 1, !tbaa !2432
  %10419 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10420 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10421 = load i64, i64* %RBP
  %10422 = sub i64 %10421, 136
  %10423 = load i64, i64* %PC
  %10424 = add i64 %10423, 8
  store i64 %10424, i64* %PC
  %10425 = bitcast i8* %10420 to double*
  %10426 = load double, double* %10425, align 1
  %10427 = getelementptr inbounds i8, i8* %10420, i64 8
  %10428 = bitcast i8* %10427 to i64*
  %10429 = load i64, i64* %10428, align 1
  %10430 = inttoptr i64 %10422 to double*
  %10431 = load double, double* %10430
  %10432 = fsub double %10426, %10431
  %10433 = bitcast i8* %10419 to double*
  store double %10432, double* %10433, align 1, !tbaa !2432
  %10434 = getelementptr inbounds i8, i8* %10419, i64 8
  %10435 = bitcast i8* %10434 to i64*
  store i64 %10429, i64* %10435, align 1, !tbaa !2432
  %10436 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10437 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10438 = load i64, i64* %PC
  %10439 = add i64 %10438, 9
  store i64 %10439, i64* %PC
  %10440 = bitcast i8* %10437 to double*
  %10441 = load double, double* %10440, align 1
  %10442 = getelementptr inbounds i8, i8* %10437, i64 8
  %10443 = bitcast i8* %10442 to i64*
  %10444 = load i64, i64* %10443, align 1
  %10445 = load double, double* bitcast (%T_type* @T to double*)
  %10446 = fmul double %10441, %10445
  %10447 = bitcast i8* %10436 to double*
  store double %10446, double* %10447, align 1, !tbaa !2432
  %10448 = getelementptr inbounds i8, i8* %10436, i64 8
  %10449 = bitcast i8* %10448 to i64*
  store i64 %10444, i64* %10449, align 1, !tbaa !2432
  %10450 = load i64, i64* %RBP
  %10451 = sub i64 %10450, 112
  %10452 = bitcast %union.vec128_t* %XMM0 to i8*
  %10453 = load i64, i64* %PC
  %10454 = add i64 %10453, 5
  store i64 %10454, i64* %PC
  %10455 = bitcast i8* %10452 to double*
  %10456 = load double, double* %10455, align 1
  %10457 = inttoptr i64 %10451 to double*
  store double %10456, double* %10457
  %10458 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10459 = load i64, i64* %RBP
  %10460 = sub i64 %10459, 112
  %10461 = load i64, i64* %PC
  %10462 = add i64 %10461, 5
  store i64 %10462, i64* %PC
  %10463 = inttoptr i64 %10460 to double*
  %10464 = load double, double* %10463
  %10465 = bitcast i8* %10458 to double*
  store double %10464, double* %10465, align 1, !tbaa !2432
  %10466 = getelementptr inbounds i8, i8* %10458, i64 8
  %10467 = bitcast i8* %10466 to double*
  store double 0.000000e+00, double* %10467, align 1, !tbaa !2432
  %10468 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10469 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10470 = load i64, i64* %RBP
  %10471 = sub i64 %10470, 120
  %10472 = load i64, i64* %PC
  %10473 = add i64 %10472, 5
  store i64 %10473, i64* %PC
  %10474 = bitcast i8* %10469 to double*
  %10475 = load double, double* %10474, align 1
  %10476 = getelementptr inbounds i8, i8* %10469, i64 8
  %10477 = bitcast i8* %10476 to i64*
  %10478 = load i64, i64* %10477, align 1
  %10479 = inttoptr i64 %10471 to double*
  %10480 = load double, double* %10479
  %10481 = fadd double %10475, %10480
  %10482 = bitcast i8* %10468 to double*
  store double %10481, double* %10482, align 1, !tbaa !2432
  %10483 = getelementptr inbounds i8, i8* %10468, i64 8
  %10484 = bitcast i8* %10483 to i64*
  store i64 %10478, i64* %10484, align 1, !tbaa !2432
  %10485 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10486 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10487 = load i64, i64* %RBP
  %10488 = sub i64 %10487, 128
  %10489 = load i64, i64* %PC
  %10490 = add i64 %10489, 5
  store i64 %10490, i64* %PC
  %10491 = bitcast i8* %10486 to double*
  %10492 = load double, double* %10491, align 1
  %10493 = getelementptr inbounds i8, i8* %10486, i64 8
  %10494 = bitcast i8* %10493 to i64*
  %10495 = load i64, i64* %10494, align 1
  %10496 = inttoptr i64 %10488 to double*
  %10497 = load double, double* %10496
  %10498 = fsub double %10492, %10497
  %10499 = bitcast i8* %10485 to double*
  store double %10498, double* %10499, align 1, !tbaa !2432
  %10500 = getelementptr inbounds i8, i8* %10485, i64 8
  %10501 = bitcast i8* %10500 to i64*
  store i64 %10495, i64* %10501, align 1, !tbaa !2432
  %10502 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10503 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10504 = load i64, i64* %RBP
  %10505 = sub i64 %10504, 136
  %10506 = load i64, i64* %PC
  %10507 = add i64 %10506, 8
  store i64 %10507, i64* %PC
  %10508 = bitcast i8* %10503 to double*
  %10509 = load double, double* %10508, align 1
  %10510 = getelementptr inbounds i8, i8* %10503, i64 8
  %10511 = bitcast i8* %10510 to i64*
  %10512 = load i64, i64* %10511, align 1
  %10513 = inttoptr i64 %10505 to double*
  %10514 = load double, double* %10513
  %10515 = fadd double %10509, %10514
  %10516 = bitcast i8* %10502 to double*
  store double %10515, double* %10516, align 1, !tbaa !2432
  %10517 = getelementptr inbounds i8, i8* %10502, i64 8
  %10518 = bitcast i8* %10517 to i64*
  store i64 %10512, i64* %10518, align 1, !tbaa !2432
  %10519 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10520 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10521 = load i64, i64* %PC
  %10522 = add i64 %10521, 9
  store i64 %10522, i64* %PC
  %10523 = bitcast i8* %10520 to double*
  %10524 = load double, double* %10523, align 1
  %10525 = getelementptr inbounds i8, i8* %10520, i64 8
  %10526 = bitcast i8* %10525 to i64*
  %10527 = load i64, i64* %10526, align 1
  %10528 = load double, double* bitcast (%T_type* @T to double*)
  %10529 = fmul double %10524, %10528
  %10530 = bitcast i8* %10519 to double*
  store double %10529, double* %10530, align 1, !tbaa !2432
  %10531 = getelementptr inbounds i8, i8* %10519, i64 8
  %10532 = bitcast i8* %10531 to i64*
  store i64 %10527, i64* %10532, align 1, !tbaa !2432
  %10533 = load i64, i64* %RBP
  %10534 = sub i64 %10533, 120
  %10535 = bitcast %union.vec128_t* %XMM0 to i8*
  %10536 = load i64, i64* %PC
  %10537 = add i64 %10536, 5
  store i64 %10537, i64* %PC
  %10538 = bitcast i8* %10535 to double*
  %10539 = load double, double* %10538, align 1
  %10540 = inttoptr i64 %10534 to double*
  store double %10539, double* %10540
  %10541 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10542 = load i64, i64* %RBP
  %10543 = sub i64 %10542, 112
  %10544 = load i64, i64* %PC
  %10545 = add i64 %10544, 5
  store i64 %10545, i64* %PC
  %10546 = inttoptr i64 %10543 to double*
  %10547 = load double, double* %10546
  %10548 = bitcast i8* %10541 to double*
  store double %10547, double* %10548, align 1, !tbaa !2432
  %10549 = getelementptr inbounds i8, i8* %10541, i64 8
  %10550 = bitcast i8* %10549 to double*
  store double 0.000000e+00, double* %10550, align 1, !tbaa !2432
  %10551 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10552 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10553 = load i64, i64* %RBP
  %10554 = sub i64 %10553, 120
  %10555 = load i64, i64* %PC
  %10556 = add i64 %10555, 5
  store i64 %10556, i64* %PC
  %10557 = bitcast i8* %10552 to double*
  %10558 = load double, double* %10557, align 1
  %10559 = getelementptr inbounds i8, i8* %10552, i64 8
  %10560 = bitcast i8* %10559 to i64*
  %10561 = load i64, i64* %10560, align 1
  %10562 = inttoptr i64 %10554 to double*
  %10563 = load double, double* %10562
  %10564 = fsub double %10558, %10563
  %10565 = bitcast i8* %10551 to double*
  store double %10564, double* %10565, align 1, !tbaa !2432
  %10566 = getelementptr inbounds i8, i8* %10551, i64 8
  %10567 = bitcast i8* %10566 to i64*
  store i64 %10561, i64* %10567, align 1, !tbaa !2432
  %10568 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10569 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10570 = load i64, i64* %RBP
  %10571 = sub i64 %10570, 128
  %10572 = load i64, i64* %PC
  %10573 = add i64 %10572, 5
  store i64 %10573, i64* %PC
  %10574 = bitcast i8* %10569 to double*
  %10575 = load double, double* %10574, align 1
  %10576 = getelementptr inbounds i8, i8* %10569, i64 8
  %10577 = bitcast i8* %10576 to i64*
  %10578 = load i64, i64* %10577, align 1
  %10579 = inttoptr i64 %10571 to double*
  %10580 = load double, double* %10579
  %10581 = fadd double %10575, %10580
  %10582 = bitcast i8* %10568 to double*
  store double %10581, double* %10582, align 1, !tbaa !2432
  %10583 = getelementptr inbounds i8, i8* %10568, i64 8
  %10584 = bitcast i8* %10583 to i64*
  store i64 %10578, i64* %10584, align 1, !tbaa !2432
  %10585 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10586 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10587 = load i64, i64* %RBP
  %10588 = sub i64 %10587, 136
  %10589 = load i64, i64* %PC
  %10590 = add i64 %10589, 8
  store i64 %10590, i64* %PC
  %10591 = bitcast i8* %10586 to double*
  %10592 = load double, double* %10591, align 1
  %10593 = getelementptr inbounds i8, i8* %10586, i64 8
  %10594 = bitcast i8* %10593 to i64*
  %10595 = load i64, i64* %10594, align 1
  %10596 = inttoptr i64 %10588 to double*
  %10597 = load double, double* %10596
  %10598 = fadd double %10592, %10597
  %10599 = bitcast i8* %10585 to double*
  store double %10598, double* %10599, align 1, !tbaa !2432
  %10600 = getelementptr inbounds i8, i8* %10585, i64 8
  %10601 = bitcast i8* %10600 to i64*
  store i64 %10595, i64* %10601, align 1, !tbaa !2432
  %10602 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10603 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10604 = load i64, i64* %PC
  %10605 = add i64 %10604, 9
  store i64 %10605, i64* %PC
  %10606 = bitcast i8* %10603 to double*
  %10607 = load double, double* %10606, align 1
  %10608 = getelementptr inbounds i8, i8* %10603, i64 8
  %10609 = bitcast i8* %10608 to i64*
  %10610 = load i64, i64* %10609, align 1
  %10611 = load double, double* bitcast (%T_type* @T to double*)
  %10612 = fmul double %10607, %10611
  %10613 = bitcast i8* %10602 to double*
  store double %10612, double* %10613, align 1, !tbaa !2432
  %10614 = getelementptr inbounds i8, i8* %10602, i64 8
  %10615 = bitcast i8* %10614 to i64*
  store i64 %10610, i64* %10615, align 1, !tbaa !2432
  %10616 = load i64, i64* %RBP
  %10617 = sub i64 %10616, 128
  %10618 = bitcast %union.vec128_t* %XMM0 to i8*
  %10619 = load i64, i64* %PC
  %10620 = add i64 %10619, 5
  store i64 %10620, i64* %PC
  %10621 = bitcast i8* %10618 to double*
  %10622 = load double, double* %10621, align 1
  %10623 = inttoptr i64 %10617 to double*
  store double %10622, double* %10623
  %10624 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10625 = load i64, i64* %RBP
  %10626 = sub i64 %10625, 112
  %10627 = load i64, i64* %PC
  %10628 = add i64 %10627, 5
  store i64 %10628, i64* %PC
  %10629 = inttoptr i64 %10626 to double*
  %10630 = load double, double* %10629
  %10631 = bitcast i8* %10624 to double*
  store double %10630, double* %10631, align 1, !tbaa !2432
  %10632 = getelementptr inbounds i8, i8* %10624, i64 8
  %10633 = bitcast i8* %10632 to double*
  store double 0.000000e+00, double* %10633, align 1, !tbaa !2432
  %10634 = bitcast %union.vec128_t* %XMM0 to i8*
  %10635 = load i64, i64* %PC
  %10636 = add i64 %10635, 5
  store i64 %10636, i64* %PC
  %10637 = bitcast i8* %10634 to i64*
  %10638 = load i64, i64* %10637, align 1
  store i64 %10638, i64* %RCX, align 1, !tbaa !2428
  %10639 = load i64, i64* %RCX
  %10640 = load i64, i64* %RAX
  %10641 = load i64, i64* %PC
  %10642 = add i64 %10641, 3
  store i64 %10642, i64* %PC
  %10643 = xor i64 %10640, %10639
  store i64 %10643, i64* %RCX, align 8, !tbaa !2428
  %10644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10644, align 1, !tbaa !2434
  %10645 = trunc i64 %10643 to i32
  %10646 = and i32 %10645, 255
  %10647 = call i32 @llvm.ctpop.i32(i32 %10646) #17
  %10648 = trunc i32 %10647 to i8
  %10649 = and i8 %10648, 1
  %10650 = xor i8 %10649, 1
  %10651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10650, i8* %10651, align 1, !tbaa !2448
  %10652 = icmp eq i64 %10643, 0
  %10653 = zext i1 %10652 to i8
  %10654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10653, i8* %10654, align 1, !tbaa !2450
  %10655 = lshr i64 %10643, 63
  %10656 = trunc i64 %10655 to i8
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10656, i8* %10657, align 1, !tbaa !2451
  %10658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10658, align 1, !tbaa !2452
  %10659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10659, align 1, !tbaa !2449
  %10660 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10661 = load i64, i64* %RCX
  %10662 = load i64, i64* %PC
  %10663 = add i64 %10662, 5
  store i64 %10663, i64* %PC
  %10664 = bitcast i8* %10660 to i64*
  store i64 %10661, i64* %10664, align 1, !tbaa !2428
  %10665 = getelementptr inbounds i8, i8* %10660, i64 8
  %10666 = bitcast i8* %10665 to i64*
  store i64 0, i64* %10666, align 1, !tbaa !2428
  %10667 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10668 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10669 = load i64, i64* %RBP
  %10670 = sub i64 %10669, 120
  %10671 = load i64, i64* %PC
  %10672 = add i64 %10671, 5
  store i64 %10672, i64* %PC
  %10673 = bitcast i8* %10668 to double*
  %10674 = load double, double* %10673, align 1
  %10675 = getelementptr inbounds i8, i8* %10668, i64 8
  %10676 = bitcast i8* %10675 to i64*
  %10677 = load i64, i64* %10676, align 1
  %10678 = inttoptr i64 %10670 to double*
  %10679 = load double, double* %10678
  %10680 = fadd double %10674, %10679
  %10681 = bitcast i8* %10667 to double*
  store double %10680, double* %10681, align 1, !tbaa !2432
  %10682 = getelementptr inbounds i8, i8* %10667, i64 8
  %10683 = bitcast i8* %10682 to i64*
  store i64 %10677, i64* %10683, align 1, !tbaa !2432
  %10684 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10685 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10686 = load i64, i64* %RBP
  %10687 = sub i64 %10686, 128
  %10688 = load i64, i64* %PC
  %10689 = add i64 %10688, 5
  store i64 %10689, i64* %PC
  %10690 = bitcast i8* %10685 to double*
  %10691 = load double, double* %10690, align 1
  %10692 = getelementptr inbounds i8, i8* %10685, i64 8
  %10693 = bitcast i8* %10692 to i64*
  %10694 = load i64, i64* %10693, align 1
  %10695 = inttoptr i64 %10687 to double*
  %10696 = load double, double* %10695
  %10697 = fadd double %10691, %10696
  %10698 = bitcast i8* %10684 to double*
  store double %10697, double* %10698, align 1, !tbaa !2432
  %10699 = getelementptr inbounds i8, i8* %10684, i64 8
  %10700 = bitcast i8* %10699 to i64*
  store i64 %10694, i64* %10700, align 1, !tbaa !2432
  %10701 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10702 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10703 = load i64, i64* %RBP
  %10704 = sub i64 %10703, 136
  %10705 = load i64, i64* %PC
  %10706 = add i64 %10705, 8
  store i64 %10706, i64* %PC
  %10707 = bitcast i8* %10702 to double*
  %10708 = load double, double* %10707, align 1
  %10709 = getelementptr inbounds i8, i8* %10702, i64 8
  %10710 = bitcast i8* %10709 to i64*
  %10711 = load i64, i64* %10710, align 1
  %10712 = inttoptr i64 %10704 to double*
  %10713 = load double, double* %10712
  %10714 = fadd double %10708, %10713
  %10715 = bitcast i8* %10701 to double*
  store double %10714, double* %10715, align 1, !tbaa !2432
  %10716 = getelementptr inbounds i8, i8* %10701, i64 8
  %10717 = bitcast i8* %10716 to i64*
  store i64 %10711, i64* %10717, align 1, !tbaa !2432
  %10718 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10719 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10720 = load i64, i64* %PC
  %10721 = add i64 %10720, 9
  store i64 %10721, i64* %PC
  %10722 = bitcast i8* %10719 to double*
  %10723 = load double, double* %10722, align 1
  %10724 = getelementptr inbounds i8, i8* %10719, i64 8
  %10725 = bitcast i8* %10724 to i64*
  %10726 = load i64, i64* %10725, align 1
  %10727 = load double, double* bitcast (%T_type* @T to double*)
  %10728 = fmul double %10723, %10727
  %10729 = bitcast i8* %10718 to double*
  store double %10728, double* %10729, align 1, !tbaa !2432
  %10730 = getelementptr inbounds i8, i8* %10718, i64 8
  %10731 = bitcast i8* %10730 to i64*
  store i64 %10726, i64* %10731, align 1, !tbaa !2432
  %10732 = load i64, i64* %RBP
  %10733 = sub i64 %10732, 136
  %10734 = bitcast %union.vec128_t* %XMM0 to i8*
  %10735 = load i64, i64* %PC
  %10736 = add i64 %10735, 8
  store i64 %10736, i64* %PC
  %10737 = bitcast i8* %10734 to double*
  %10738 = load double, double* %10737, align 1
  %10739 = inttoptr i64 %10733 to double*
  store double %10738, double* %10739
  %10740 = load i64, i64* %RBP
  %10741 = sub i64 %10740, 24
  %10742 = load i64, i64* %PC
  %10743 = add i64 %10742, 4
  store i64 %10743, i64* %PC
  %10744 = inttoptr i64 %10741 to i64*
  %10745 = load i64, i64* %10744
  store i64 %10745, i64* %RAX, align 8, !tbaa !2428
  %10746 = load i64, i64* %RAX
  %10747 = load i64, i64* %PC
  %10748 = add i64 %10747, 4
  store i64 %10748, i64* %PC
  %10749 = add i64 1, %10746
  store i64 %10749, i64* %RAX, align 8, !tbaa !2428
  %10750 = icmp ult i64 %10749, %10746
  %10751 = icmp ult i64 %10749, 1
  %10752 = or i1 %10750, %10751
  %10753 = zext i1 %10752 to i8
  %10754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10753, i8* %10754, align 1, !tbaa !2434
  %10755 = trunc i64 %10749 to i32
  %10756 = and i32 %10755, 255
  %10757 = call i32 @llvm.ctpop.i32(i32 %10756) #17
  %10758 = trunc i32 %10757 to i8
  %10759 = and i8 %10758, 1
  %10760 = xor i8 %10759, 1
  %10761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10760, i8* %10761, align 1, !tbaa !2448
  %10762 = xor i64 1, %10746
  %10763 = xor i64 %10762, %10749
  %10764 = lshr i64 %10763, 4
  %10765 = trunc i64 %10764 to i8
  %10766 = and i8 %10765, 1
  %10767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10766, i8* %10767, align 1, !tbaa !2449
  %10768 = icmp eq i64 %10749, 0
  %10769 = zext i1 %10768 to i8
  %10770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10769, i8* %10770, align 1, !tbaa !2450
  %10771 = lshr i64 %10749, 63
  %10772 = trunc i64 %10771 to i8
  %10773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10772, i8* %10773, align 1, !tbaa !2451
  %10774 = lshr i64 %10746, 63
  %10775 = xor i64 %10771, %10774
  %10776 = add nuw nsw i64 %10775, %10771
  %10777 = icmp eq i64 %10776, 2
  %10778 = zext i1 %10777 to i8
  %10779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10778, i8* %10779, align 1, !tbaa !2452
  %10780 = load i64, i64* %RBP
  %10781 = sub i64 %10780, 24
  %10782 = load i64, i64* %RAX
  %10783 = load i64, i64* %PC
  %10784 = add i64 %10783, 4
  store i64 %10784, i64* %PC
  %10785 = inttoptr i64 %10781 to i64*
  store i64 %10782, i64* %10785
  %10786 = load i64, i64* %PC
  %10787 = sub i64 %10786, 200
  %10788 = load i64, i64* %PC
  %10789 = add i64 %10788, 5
  store i64 %10789, i64* %PC
  %10790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10787, i64* %10790, align 8, !tbaa !2428
  br label %block_400a89

block_4009db:                                     ; preds = %block_40158b, %block_400976
  %MEMORY.23 = phi %struct.Memory* [ %713, %block_400976 ], [ %MEMORY.18, %block_40158b ]
  %10791 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %10792 = load i64, i64* %PC
  %10793 = add i64 %10792, 8
  store i64 %10793, i64* %PC
  %10794 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 32) to double*)
  %10795 = bitcast i8* %10791 to double*
  store double %10794, double* %10795, align 1, !tbaa !2432
  %10796 = getelementptr inbounds i8, i8* %10791, i64 8
  %10797 = bitcast i8* %10796 to double*
  store double 0.000000e+00, double* %10797, align 1, !tbaa !2432
  %10798 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %10799 = load i64, i64* %PC
  %10800 = add i64 %10799, 8
  store i64 %10800, i64* %PC
  %10801 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 40) to double*)
  %10802 = bitcast i8* %10798 to double*
  store double %10801, double* %10802, align 1, !tbaa !2432
  %10803 = getelementptr inbounds i8, i8* %10798, i64 8
  %10804 = bitcast i8* %10803 to double*
  store double 0.000000e+00, double* %10804, align 1, !tbaa !2432
  %10805 = load i64, i64* %RBP
  %10806 = sub i64 %10805, 32
  %10807 = load i64, i64* %PC
  %10808 = add i64 %10807, 8
  store i64 %10808, i64* %PC
  %10809 = inttoptr i64 %10806 to i64*
  store i64 0, i64* %10809
  %10810 = load i64, i64* %RBP
  %10811 = sub i64 %10810, 168
  %10812 = load i64, i64* %PC
  %10813 = add i64 %10812, 8
  store i64 %10813, i64* %PC
  %10814 = inttoptr i64 %10811 to i64*
  %10815 = load i64, i64* %10814
  %10816 = sext i64 %10815 to i128
  %10817 = and i128 %10816, -18446744073709551616
  %10818 = zext i64 %10815 to i128
  %10819 = or i128 %10817, %10818
  %10820 = mul nsw i128 %10819, 12
  %10821 = trunc i128 %10820 to i64
  store i64 %10821, i64* %RAX, align 8, !tbaa !2428
  %10822 = sext i64 %10821 to i128
  %10823 = icmp ne i128 %10822, %10820
  %10824 = zext i1 %10823 to i8
  %10825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10824, i8* %10825, align 1, !tbaa !2434
  %10826 = trunc i128 %10820 to i32
  %10827 = and i32 %10826, 255
  %10828 = call i32 @llvm.ctpop.i32(i32 %10827) #17
  %10829 = trunc i32 %10828 to i8
  %10830 = and i8 %10829, 1
  %10831 = xor i8 %10830, 1
  %10832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10831, i8* %10832, align 1, !tbaa !2448
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10833, align 1, !tbaa !2449
  %10834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10834, align 1, !tbaa !2450
  %10835 = lshr i64 %10821, 63
  %10836 = trunc i64 %10835 to i8
  %10837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10836, i8* %10837, align 1, !tbaa !2451
  %10838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10824, i8* %10838, align 1, !tbaa !2452
  %10839 = load i64, i64* %RBP
  %10840 = sub i64 %10839, 40
  %10841 = load i64, i64* %RAX
  %10842 = load i64, i64* %PC
  %10843 = add i64 %10842, 4
  store i64 %10843, i64* %PC
  %10844 = inttoptr i64 %10840 to i64*
  store i64 %10841, i64* %10844
  %10845 = load i64, i64* %RBP
  %10846 = sub i64 %10845, 168
  %10847 = load i64, i64* %PC
  %10848 = add i64 %10847, 8
  store i64 %10848, i64* %PC
  %10849 = inttoptr i64 %10846 to i64*
  %10850 = load i64, i64* %10849
  %10851 = sext i64 %10850 to i128
  %10852 = and i128 %10851, -18446744073709551616
  %10853 = zext i64 %10850 to i128
  %10854 = or i128 %10852, %10853
  %10855 = mul nsw i128 %10854, 14
  %10856 = trunc i128 %10855 to i64
  store i64 %10856, i64* %RAX, align 8, !tbaa !2428
  %10857 = sext i64 %10856 to i128
  %10858 = icmp ne i128 %10857, %10855
  %10859 = zext i1 %10858 to i8
  %10860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10859, i8* %10860, align 1, !tbaa !2434
  %10861 = trunc i128 %10855 to i32
  %10862 = and i32 %10861, 255
  %10863 = call i32 @llvm.ctpop.i32(i32 %10862) #17
  %10864 = trunc i32 %10863 to i8
  %10865 = and i8 %10864, 1
  %10866 = xor i8 %10865, 1
  %10867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10866, i8* %10867, align 1, !tbaa !2448
  %10868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10868, align 1, !tbaa !2449
  %10869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10869, align 1, !tbaa !2450
  %10870 = lshr i64 %10856, 63
  %10871 = trunc i64 %10870 to i8
  %10872 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10871, i8* %10872, align 1, !tbaa !2451
  %10873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10859, i8* %10873, align 1, !tbaa !2452
  %10874 = load i64, i64* %RBP
  %10875 = sub i64 %10874, 48
  %10876 = load i64, i64* %RAX
  %10877 = load i64, i64* %PC
  %10878 = add i64 %10877, 4
  store i64 %10878, i64* %PC
  %10879 = inttoptr i64 %10875 to i64*
  store i64 %10876, i64* %10879
  %10880 = load i64, i64* %RBP
  %10881 = sub i64 %10880, 168
  %10882 = load i64, i64* %PC
  %10883 = add i64 %10882, 11
  store i64 %10883, i64* %PC
  %10884 = inttoptr i64 %10881 to i64*
  %10885 = load i64, i64* %10884
  %10886 = sext i64 %10885 to i128
  %10887 = and i128 %10886, -18446744073709551616
  %10888 = zext i64 %10885 to i128
  %10889 = or i128 %10887, %10888
  %10890 = mul nsw i128 %10889, 345
  %10891 = trunc i128 %10890 to i64
  store i64 %10891, i64* %RAX, align 8, !tbaa !2428
  %10892 = sext i64 %10891 to i128
  %10893 = icmp ne i128 %10892, %10890
  %10894 = zext i1 %10893 to i8
  %10895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10894, i8* %10895, align 1, !tbaa !2434
  %10896 = trunc i128 %10890 to i32
  %10897 = and i32 %10896, 255
  %10898 = call i32 @llvm.ctpop.i32(i32 %10897) #17
  %10899 = trunc i32 %10898 to i8
  %10900 = and i8 %10899, 1
  %10901 = xor i8 %10900, 1
  %10902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10901, i8* %10902, align 1, !tbaa !2448
  %10903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10903, align 1, !tbaa !2449
  %10904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10904, align 1, !tbaa !2450
  %10905 = lshr i64 %10891, 63
  %10906 = trunc i64 %10905 to i8
  %10907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10906, i8* %10907, align 1, !tbaa !2451
  %10908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10894, i8* %10908, align 1, !tbaa !2452
  %10909 = load i64, i64* %RBP
  %10910 = sub i64 %10909, 56
  %10911 = load i64, i64* %RAX
  %10912 = load i64, i64* %PC
  %10913 = add i64 %10912, 4
  store i64 %10913, i64* %PC
  %10914 = inttoptr i64 %10910 to i64*
  store i64 %10911, i64* %10914
  %10915 = load i64, i64* %RBP
  %10916 = sub i64 %10915, 168
  %10917 = load i64, i64* %PC
  %10918 = add i64 %10917, 11
  store i64 %10918, i64* %PC
  %10919 = inttoptr i64 %10916 to i64*
  %10920 = load i64, i64* %10919
  %10921 = sext i64 %10920 to i128
  %10922 = and i128 %10921, -18446744073709551616
  %10923 = zext i64 %10920 to i128
  %10924 = or i128 %10922, %10923
  %10925 = mul nsw i128 %10924, 210
  %10926 = trunc i128 %10925 to i64
  store i64 %10926, i64* %RAX, align 8, !tbaa !2428
  %10927 = sext i64 %10926 to i128
  %10928 = icmp ne i128 %10927, %10925
  %10929 = zext i1 %10928 to i8
  %10930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10929, i8* %10930, align 1, !tbaa !2434
  %10931 = trunc i128 %10925 to i32
  %10932 = and i32 %10931, 255
  %10933 = call i32 @llvm.ctpop.i32(i32 %10932) #17
  %10934 = trunc i32 %10933 to i8
  %10935 = and i8 %10934, 1
  %10936 = xor i8 %10935, 1
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10936, i8* %10937, align 1, !tbaa !2448
  %10938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10938, align 1, !tbaa !2449
  %10939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10939, align 1, !tbaa !2450
  %10940 = lshr i64 %10926, 63
  %10941 = trunc i64 %10940 to i8
  %10942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10941, i8* %10942, align 1, !tbaa !2451
  %10943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10929, i8* %10943, align 1, !tbaa !2452
  %10944 = load i64, i64* %RBP
  %10945 = sub i64 %10944, 64
  %10946 = load i64, i64* %RAX
  %10947 = load i64, i64* %PC
  %10948 = add i64 %10947, 4
  store i64 %10948, i64* %PC
  %10949 = inttoptr i64 %10945 to i64*
  store i64 %10946, i64* %10949
  %10950 = load i64, i64* %RBP
  %10951 = sub i64 %10950, 168
  %10952 = load i64, i64* %PC
  %10953 = add i64 %10952, 7
  store i64 %10953, i64* %PC
  %10954 = inttoptr i64 %10951 to i64*
  %10955 = load i64, i64* %10954
  store i64 %10955, i64* %RAX, align 8, !tbaa !2428
  %10956 = load i64, i64* %RAX
  %10957 = load i64, i64* %PC
  %10958 = add i64 %10957, 4
  store i64 %10958, i64* %PC
  %10959 = shl i64 %10956, 4
  %10960 = icmp slt i64 %10959, 0
  %10961 = shl i64 %10959, 1
  store i64 %10961, i64* %RAX, align 8, !tbaa !2428
  %10962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %10963 = zext i1 %10960 to i8
  store i8 %10963, i8* %10962, align 1, !tbaa !2453
  %10964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %10965 = trunc i64 %10961 to i32
  %10966 = and i32 %10965, 254
  %10967 = call i32 @llvm.ctpop.i32(i32 %10966) #17
  %10968 = trunc i32 %10967 to i8
  %10969 = and i8 %10968, 1
  %10970 = xor i8 %10969, 1
  store i8 %10970, i8* %10964, align 1, !tbaa !2453
  %10971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10971, align 1, !tbaa !2453
  %10972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10973 = icmp eq i64 %10961, 0
  %10974 = zext i1 %10973 to i8
  store i8 %10974, i8* %10972, align 1, !tbaa !2453
  %10975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10976 = lshr i64 %10961, 63
  %10977 = trunc i64 %10976 to i8
  store i8 %10977, i8* %10975, align 1, !tbaa !2453
  %10978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10978, align 1, !tbaa !2453
  %10979 = load i64, i64* %RBP
  %10980 = sub i64 %10979, 72
  %10981 = load i64, i64* %RAX
  %10982 = load i64, i64* %PC
  %10983 = add i64 %10982, 4
  store i64 %10983, i64* %PC
  %10984 = inttoptr i64 %10980 to i64*
  store i64 %10981, i64* %10984
  %10985 = load i64, i64* %RBP
  %10986 = sub i64 %10985, 168
  %10987 = load i64, i64* %PC
  %10988 = add i64 %10987, 11
  store i64 %10988, i64* %PC
  %10989 = inttoptr i64 %10986 to i64*
  %10990 = load i64, i64* %10989
  %10991 = sext i64 %10990 to i128
  %10992 = and i128 %10991, -18446744073709551616
  %10993 = zext i64 %10990 to i128
  %10994 = or i128 %10992, %10993
  %10995 = mul nsw i128 %10994, 899
  %10996 = trunc i128 %10995 to i64
  store i64 %10996, i64* %RAX, align 8, !tbaa !2428
  %10997 = sext i64 %10996 to i128
  %10998 = icmp ne i128 %10997, %10995
  %10999 = zext i1 %10998 to i8
  %11000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10999, i8* %11000, align 1, !tbaa !2434
  %11001 = trunc i128 %10995 to i32
  %11002 = and i32 %11001, 255
  %11003 = call i32 @llvm.ctpop.i32(i32 %11002) #17
  %11004 = trunc i32 %11003 to i8
  %11005 = and i8 %11004, 1
  %11006 = xor i8 %11005, 1
  %11007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11006, i8* %11007, align 1, !tbaa !2448
  %11008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11008, align 1, !tbaa !2449
  %11009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11009, align 1, !tbaa !2450
  %11010 = lshr i64 %10996, 63
  %11011 = trunc i64 %11010 to i8
  %11012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11011, i8* %11012, align 1, !tbaa !2451
  %11013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10999, i8* %11013, align 1, !tbaa !2452
  %11014 = load i64, i64* %RBP
  %11015 = sub i64 %11014, 80
  %11016 = load i64, i64* %RAX
  %11017 = load i64, i64* %PC
  %11018 = add i64 %11017, 4
  store i64 %11018, i64* %PC
  %11019 = inttoptr i64 %11015 to i64*
  store i64 %11016, i64* %11019
  %11020 = load i64, i64* %RBP
  %11021 = sub i64 %11020, 168
  %11022 = load i64, i64* %PC
  %11023 = add i64 %11022, 11
  store i64 %11023, i64* %PC
  %11024 = inttoptr i64 %11021 to i64*
  %11025 = load i64, i64* %11024
  %11026 = sext i64 %11025 to i128
  %11027 = and i128 %11026, -18446744073709551616
  %11028 = zext i64 %11025 to i128
  %11029 = or i128 %11027, %11028
  %11030 = mul nsw i128 %11029, 616
  %11031 = trunc i128 %11030 to i64
  store i64 %11031, i64* %RAX, align 8, !tbaa !2428
  %11032 = sext i64 %11031 to i128
  %11033 = icmp ne i128 %11032, %11030
  %11034 = zext i1 %11033 to i8
  %11035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11034, i8* %11035, align 1, !tbaa !2434
  %11036 = trunc i128 %11030 to i32
  %11037 = and i32 %11036, 255
  %11038 = call i32 @llvm.ctpop.i32(i32 %11037) #17
  %11039 = trunc i32 %11038 to i8
  %11040 = and i8 %11039, 1
  %11041 = xor i8 %11040, 1
  %11042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11041, i8* %11042, align 1, !tbaa !2448
  %11043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11043, align 1, !tbaa !2449
  %11044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11044, align 1, !tbaa !2450
  %11045 = lshr i64 %11031, 63
  %11046 = trunc i64 %11045 to i8
  %11047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11046, i8* %11047, align 1, !tbaa !2451
  %11048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11034, i8* %11048, align 1, !tbaa !2452
  %11049 = load i64, i64* %RBP
  %11050 = sub i64 %11049, 88
  %11051 = load i64, i64* %RAX
  %11052 = load i64, i64* %PC
  %11053 = add i64 %11052, 4
  store i64 %11053, i64* %PC
  %11054 = inttoptr i64 %11050 to i64*
  store i64 %11051, i64* %11054
  %11055 = load i64, i64* %RBP
  %11056 = sub i64 %11055, 96
  %11057 = load i64, i64* %PC
  %11058 = add i64 %11057, 8
  store i64 %11058, i64* %PC
  %11059 = inttoptr i64 %11056 to i64*
  store i64 0, i64* %11059
  %11060 = load i64, i64* %RBP
  %11061 = sub i64 %11060, 168
  %11062 = load i64, i64* %PC
  %11063 = add i64 %11062, 8
  store i64 %11063, i64* %PC
  %11064 = inttoptr i64 %11061 to i64*
  %11065 = load i64, i64* %11064
  %11066 = sext i64 %11065 to i128
  %11067 = and i128 %11066, -18446744073709551616
  %11068 = zext i64 %11065 to i128
  %11069 = or i128 %11067, %11068
  %11070 = mul nsw i128 %11069, 93
  %11071 = trunc i128 %11070 to i64
  store i64 %11071, i64* %RAX, align 8, !tbaa !2428
  %11072 = sext i64 %11071 to i128
  %11073 = icmp ne i128 %11072, %11070
  %11074 = zext i1 %11073 to i8
  %11075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11074, i8* %11075, align 1, !tbaa !2434
  %11076 = trunc i128 %11070 to i32
  %11077 = and i32 %11076, 255
  %11078 = call i32 @llvm.ctpop.i32(i32 %11077) #17
  %11079 = trunc i32 %11078 to i8
  %11080 = and i8 %11079, 1
  %11081 = xor i8 %11080, 1
  %11082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11081, i8* %11082, align 1, !tbaa !2448
  %11083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11083, align 1, !tbaa !2449
  %11084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11084, align 1, !tbaa !2450
  %11085 = lshr i64 %11071, 63
  %11086 = trunc i64 %11085 to i8
  %11087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11086, i8* %11087, align 1, !tbaa !2451
  %11088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11074, i8* %11088, align 1, !tbaa !2452
  %11089 = load i64, i64* %RBP
  %11090 = sub i64 %11089, 104
  %11091 = load i64, i64* %RAX
  %11092 = load i64, i64* %PC
  %11093 = add i64 %11092, 4
  store i64 %11093, i64* %PC
  %11094 = inttoptr i64 %11090 to i64*
  store i64 %11091, i64* %11094
  %11095 = load i64, i64* %RBP
  %11096 = sub i64 %11095, 112
  %11097 = bitcast %union.vec128_t* %XMM1 to i8*
  %11098 = load i64, i64* %PC
  %11099 = add i64 %11098, 5
  store i64 %11099, i64* %PC
  %11100 = bitcast i8* %11097 to double*
  %11101 = load double, double* %11100, align 1
  %11102 = inttoptr i64 %11096 to double*
  store double %11101, double* %11102
  %11103 = load i64, i64* %RBP
  %11104 = sub i64 %11103, 120
  %11105 = bitcast %union.vec128_t* %XMM0 to i8*
  %11106 = load i64, i64* %PC
  %11107 = add i64 %11106, 5
  store i64 %11107, i64* %PC
  %11108 = bitcast i8* %11105 to double*
  %11109 = load double, double* %11108, align 1
  %11110 = inttoptr i64 %11104 to double*
  store double %11109, double* %11110
  %11111 = load i64, i64* %RBP
  %11112 = sub i64 %11111, 128
  %11113 = bitcast %union.vec128_t* %XMM0 to i8*
  %11114 = load i64, i64* %PC
  %11115 = add i64 %11114, 5
  store i64 %11115, i64* %PC
  %11116 = bitcast i8* %11113 to double*
  %11117 = load double, double* %11116, align 1
  %11118 = inttoptr i64 %11112 to double*
  store double %11117, double* %11118
  %11119 = load i64, i64* %RBP
  %11120 = sub i64 %11119, 136
  %11121 = bitcast %union.vec128_t* %XMM0 to i8*
  %11122 = load i64, i64* %PC
  %11123 = add i64 %11122, 8
  store i64 %11123, i64* %PC
  %11124 = bitcast i8* %11121 to double*
  %11125 = load double, double* %11124, align 1
  %11126 = inttoptr i64 %11120 to double*
  store double %11125, double* %11126
  %11127 = load i64, i64* %RBP
  %11128 = sub i64 %11127, 24
  %11129 = load i64, i64* %PC
  %11130 = add i64 %11129, 8
  store i64 %11130, i64* %PC
  %11131 = inttoptr i64 %11128 to i64*
  store i64 1, i64* %11131
  br label %block_400a89

block_40131d:                                     ; preds = %block_4012e4, %block_4012d2
  %MEMORY.24 = phi %struct.Memory* [ %MEMORY.6, %block_4012d2 ], [ %9810, %block_4012e4 ]
  %11132 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11133 = load i64, i64* %PC
  %11134 = add i64 %11133, 8
  store i64 %11134, i64* %PC
  %11135 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 56) to double*)
  %11136 = bitcast i8* %11132 to double*
  store double %11135, double* %11136, align 1, !tbaa !2432
  %11137 = getelementptr inbounds i8, i8* %11132, i64 8
  %11138 = bitcast i8* %11137 to double*
  store double 0.000000e+00, double* %11138, align 1, !tbaa !2432
  %11139 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11140 = load i64, i64* %PC
  %11141 = add i64 %11140, 8
  store i64 %11141, i64* %PC
  %11142 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 8) to double*)
  %11143 = bitcast i8* %11139 to double*
  store double %11142, double* %11143, align 1, !tbaa !2432
  %11144 = getelementptr inbounds i8, i8* %11139, i64 8
  %11145 = bitcast i8* %11144 to double*
  store double 0.000000e+00, double* %11145, align 1, !tbaa !2432
  %11146 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11147 = load i64, i64* %PC
  %11148 = add i64 %11147, 8
  store i64 %11148, i64* %PC
  %11149 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4018f0__rodata_type* @seg_4018f0__rodata to i64), i64 40) to double*)
  %11150 = bitcast i8* %11146 to double*
  store double %11149, double* %11150, align 1, !tbaa !2432
  %11151 = getelementptr inbounds i8, i8* %11146, i64 8
  %11152 = bitcast i8* %11151 to double*
  store double 0.000000e+00, double* %11152, align 1, !tbaa !2432
  %11153 = load i64, i64* %PC
  %11154 = add i64 %11153, 11
  store i64 %11154, i64* %PC
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  %11155 = load i64, i64* %PC
  %11156 = add i64 %11155, 11
  store i64 %11156, i64* %PC
  store i32 2, i32* bitcast (%K_type* @K to i32*)
  %11157 = load i64, i64* %PC
  %11158 = add i64 %11157, 11
  store i64 %11158, i64* %PC
  store i32 3, i32* bitcast (%L_type* @L to i32*)
  %11159 = bitcast %union.vec128_t* %XMM2 to i8*
  %11160 = load i64, i64* %PC
  %11161 = add i64 %11160, 9
  store i64 %11161, i64* %PC
  %11162 = bitcast i8* %11159 to double*
  %11163 = load double, double* %11162, align 1
  store double %11163, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 8) to double*)
  %11164 = bitcast %union.vec128_t* %XMM1 to i8*
  %11165 = load i64, i64* %PC
  %11166 = add i64 %11165, 9
  store i64 %11166, i64* %PC
  %11167 = bitcast i8* %11164 to double*
  %11168 = load double, double* %11167, align 1
  store double %11168, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 16) to double*)
  %11169 = bitcast %union.vec128_t* %XMM0 to i8*
  %11170 = load i64, i64* %PC
  %11171 = add i64 %11170, 9
  store i64 %11171, i64* %PC
  %11172 = bitcast i8* %11169 to double*
  %11173 = load double, double* %11172, align 1
  store double %11173, double* inttoptr (i64 add (i64 ptrtoint (%E1_type* @E1 to i64), i64 24) to double*)
  %11174 = load i64, i64* %RBP
  %11175 = sub i64 %11174, 24
  %11176 = load i64, i64* %PC
  %11177 = add i64 %11176, 8
  store i64 %11177, i64* %PC
  %11178 = inttoptr i64 %11175 to i64*
  store i64 1, i64* %11178
  br label %block_401379

block_40140a:                                     ; preds = %block_401418, %block_4013ec
  %MEMORY.25 = phi %struct.Memory* [ %MEMORY.2, %block_4013ec ], [ %MEMORY.25, %block_401418 ]
  %11179 = load i64, i64* %RBP
  %11180 = sub i64 %11179, 24
  %11181 = load i64, i64* %PC
  %11182 = add i64 %11181, 4
  store i64 %11182, i64* %PC
  %11183 = inttoptr i64 %11180 to i64*
  %11184 = load i64, i64* %11183
  store i64 %11184, i64* %RAX, align 8, !tbaa !2428
  %11185 = load i64, i64* %RAX
  %11186 = load i64, i64* %RBP
  %11187 = sub i64 %11186, 96
  %11188 = load i64, i64* %PC
  %11189 = add i64 %11188, 4
  store i64 %11189, i64* %PC
  %11190 = inttoptr i64 %11187 to i64*
  %11191 = load i64, i64* %11190
  %11192 = sub i64 %11185, %11191
  %11193 = icmp ugt i64 %11191, %11185
  %11194 = zext i1 %11193 to i8
  %11195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11194, i8* %11195, align 1, !tbaa !2434
  %11196 = trunc i64 %11192 to i32
  %11197 = and i32 %11196, 255
  %11198 = call i32 @llvm.ctpop.i32(i32 %11197) #17
  %11199 = trunc i32 %11198 to i8
  %11200 = and i8 %11199, 1
  %11201 = xor i8 %11200, 1
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11201, i8* %11202, align 1, !tbaa !2448
  %11203 = xor i64 %11191, %11185
  %11204 = xor i64 %11203, %11192
  %11205 = lshr i64 %11204, 4
  %11206 = trunc i64 %11205 to i8
  %11207 = and i8 %11206, 1
  %11208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11207, i8* %11208, align 1, !tbaa !2449
  %11209 = icmp eq i64 %11192, 0
  %11210 = zext i1 %11209 to i8
  %11211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11210, i8* %11211, align 1, !tbaa !2450
  %11212 = lshr i64 %11192, 63
  %11213 = trunc i64 %11212 to i8
  %11214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11213, i8* %11214, align 1, !tbaa !2451
  %11215 = lshr i64 %11185, 63
  %11216 = lshr i64 %11191, 63
  %11217 = xor i64 %11216, %11215
  %11218 = xor i64 %11212, %11215
  %11219 = add nuw nsw i64 %11218, %11217
  %11220 = icmp eq i64 %11219, 2
  %11221 = zext i1 %11220 to i8
  %11222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11221, i8* %11222, align 1, !tbaa !2452
  %11223 = load i64, i64* %PC
  %11224 = add i64 %11223, 114
  %11225 = load i64, i64* %PC
  %11226 = add i64 %11225, 6
  %11227 = load i64, i64* %PC
  %11228 = add i64 %11227, 6
  store i64 %11228, i64* %PC
  %11229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11230 = load i8, i8* %11229, align 1, !tbaa !2450
  %11231 = icmp eq i8 %11230, 0
  %11232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11233 = load i8, i8* %11232, align 1, !tbaa !2451
  %11234 = icmp ne i8 %11233, 0
  %11235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11236 = load i8, i8* %11235, align 1, !tbaa !2452
  %11237 = icmp ne i8 %11236, 0
  %11238 = xor i1 %11234, %11237
  %11239 = xor i1 %11238, true
  %11240 = and i1 %11231, %11239
  %11241 = zext i1 %11240 to i8
  store i8 %11241, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %11242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11243 = select i1 %11240, i64 %11224, i64 %11226
  store i64 %11243, i64* %11242, align 8, !tbaa !2428
  %11244 = load i8, i8* %BRANCH_TAKEN
  %11245 = icmp eq i8 %11244, 1
  br i1 %11245, label %block_401484, label %block_401418

block_400a89:                                     ; preds = %block_4009db, %block_400a97
  %MEMORY.26 = phi %struct.Memory* [ %MEMORY.23, %block_4009db ], [ %MEMORY.26, %block_400a97 ]
  %11246 = load i64, i64* %RBP
  %11247 = sub i64 %11246, 24
  %11248 = load i64, i64* %PC
  %11249 = add i64 %11248, 4
  store i64 %11249, i64* %PC
  %11250 = inttoptr i64 %11247 to i64*
  %11251 = load i64, i64* %11250
  store i64 %11251, i64* %RAX, align 8, !tbaa !2428
  %11252 = load i64, i64* %RAX
  %11253 = load i64, i64* %RBP
  %11254 = sub i64 %11253, 32
  %11255 = load i64, i64* %PC
  %11256 = add i64 %11255, 4
  store i64 %11256, i64* %PC
  %11257 = inttoptr i64 %11254 to i64*
  %11258 = load i64, i64* %11257
  %11259 = sub i64 %11252, %11258
  %11260 = icmp ugt i64 %11258, %11252
  %11261 = zext i1 %11260 to i8
  %11262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11261, i8* %11262, align 1, !tbaa !2434
  %11263 = trunc i64 %11259 to i32
  %11264 = and i32 %11263, 255
  %11265 = call i32 @llvm.ctpop.i32(i32 %11264) #17
  %11266 = trunc i32 %11265 to i8
  %11267 = and i8 %11266, 1
  %11268 = xor i8 %11267, 1
  %11269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11268, i8* %11269, align 1, !tbaa !2448
  %11270 = xor i64 %11258, %11252
  %11271 = xor i64 %11270, %11259
  %11272 = lshr i64 %11271, 4
  %11273 = trunc i64 %11272 to i8
  %11274 = and i8 %11273, 1
  %11275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11274, i8* %11275, align 1, !tbaa !2449
  %11276 = icmp eq i64 %11259, 0
  %11277 = zext i1 %11276 to i8
  %11278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11277, i8* %11278, align 1, !tbaa !2450
  %11279 = lshr i64 %11259, 63
  %11280 = trunc i64 %11279 to i8
  %11281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11280, i8* %11281, align 1, !tbaa !2451
  %11282 = lshr i64 %11252, 63
  %11283 = lshr i64 %11258, 63
  %11284 = xor i64 %11283, %11282
  %11285 = xor i64 %11279, %11282
  %11286 = add nuw nsw i64 %11285, %11284
  %11287 = icmp eq i64 %11286, 2
  %11288 = zext i1 %11287 to i8
  %11289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11288, i8* %11289, align 1, !tbaa !2452
  %11290 = load i64, i64* %PC
  %11291 = add i64 %11290, 197
  %11292 = load i64, i64* %PC
  %11293 = add i64 %11292, 6
  %11294 = load i64, i64* %PC
  %11295 = add i64 %11294, 6
  store i64 %11295, i64* %PC
  %11296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11297 = load i8, i8* %11296, align 1, !tbaa !2450
  %11298 = icmp eq i8 %11297, 0
  %11299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11300 = load i8, i8* %11299, align 1, !tbaa !2451
  %11301 = icmp ne i8 %11300, 0
  %11302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11303 = load i8, i8* %11302, align 1, !tbaa !2452
  %11304 = icmp ne i8 %11303, 0
  %11305 = xor i1 %11301, %11304
  %11306 = xor i1 %11305, true
  %11307 = and i1 %11298, %11306
  %11308 = zext i1 %11307 to i8
  store i8 %11308, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11310 = select i1 %11307, i64 %11291, i64 %11293
  store i64 %11310, i64* %11309, align 8, !tbaa !2428
  %11311 = load i8, i8* %BRANCH_TAKEN
  %11312 = icmp eq i8 %11311, 1
  br i1 %11312, label %block_400b56, label %block_400a97

block_400cda:                                     ; preds = %block_400bcc
  %11313 = load i64, i64* %RBP
  %11314 = sub i64 %11313, 176
  %11315 = load i64, i64* %PC
  %11316 = add i64 %11315, 6
  store i64 %11316, i64* %PC
  %11317 = inttoptr i64 %11314 to i32*
  %11318 = load i32, i32* %11317
  %11319 = zext i32 %11318 to i64
  store i64 %11319, i64* %RAX, align 8, !tbaa !2428
  %11320 = load i32, i32* %EAX
  %11321 = zext i32 %11320 to i64
  %11322 = load i64, i64* %RBP
  %11323 = sub i64 %11322, 172
  %11324 = load i64, i64* %PC
  %11325 = add i64 %11324, 6
  store i64 %11325, i64* %PC
  %11326 = inttoptr i64 %11323 to i32*
  %11327 = load i32, i32* %11326
  %11328 = sub i32 %11320, %11327
  %11329 = icmp ult i32 %11320, %11327
  %11330 = zext i1 %11329 to i8
  %11331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11330, i8* %11331, align 1, !tbaa !2434
  %11332 = and i32 %11328, 255
  %11333 = call i32 @llvm.ctpop.i32(i32 %11332) #17
  %11334 = trunc i32 %11333 to i8
  %11335 = and i8 %11334, 1
  %11336 = xor i8 %11335, 1
  %11337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11336, i8* %11337, align 1, !tbaa !2448
  %11338 = xor i32 %11327, %11320
  %11339 = xor i32 %11338, %11328
  %11340 = lshr i32 %11339, 4
  %11341 = trunc i32 %11340 to i8
  %11342 = and i8 %11341, 1
  %11343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11342, i8* %11343, align 1, !tbaa !2449
  %11344 = icmp eq i32 %11328, 0
  %11345 = zext i1 %11344 to i8
  %11346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11345, i8* %11346, align 1, !tbaa !2450
  %11347 = lshr i32 %11328, 31
  %11348 = trunc i32 %11347 to i8
  %11349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11348, i8* %11349, align 1, !tbaa !2451
  %11350 = lshr i32 %11320, 31
  %11351 = lshr i32 %11327, 31
  %11352 = xor i32 %11351, %11350
  %11353 = xor i32 %11347, %11350
  %11354 = add nuw nsw i32 %11353, %11352
  %11355 = icmp eq i32 %11354, 2
  %11356 = zext i1 %11355 to i8
  %11357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11356, i8* %11357, align 1, !tbaa !2452
  %11358 = load i64, i64* %PC
  %11359 = add i64 %11358, 59
  %11360 = load i64, i64* %PC
  %11361 = add i64 %11360, 6
  %11362 = load i64, i64* %PC
  %11363 = add i64 %11362, 6
  store i64 %11363, i64* %PC
  %11364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11365 = load i8, i8* %11364, align 1, !tbaa !2450
  %11366 = icmp eq i8 %11365, 0
  %11367 = zext i1 %11366 to i8
  store i8 %11367, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %11368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11369 = select i1 %11366, i64 %11359, i64 %11361
  store i64 %11369, i64* %11368, align 8, !tbaa !2428
  %11370 = load i8, i8* %BRANCH_TAKEN
  %11371 = icmp eq i8 %11370, 1
  br i1 %11371, label %block_400d21, label %block_400cec

block_400d29:                                     ; preds = %block_400d21, %block_400d37
  %MEMORY.27 = phi %struct.Memory* [ %MEMORY.13, %block_400d21 ], [ %2843, %block_400d37 ]
  %11372 = load i64, i64* %RBP
  %11373 = sub i64 %11372, 24
  %11374 = load i64, i64* %PC
  %11375 = add i64 %11374, 4
  store i64 %11375, i64* %PC
  %11376 = inttoptr i64 %11373 to i64*
  %11377 = load i64, i64* %11376
  store i64 %11377, i64* %RAX, align 8, !tbaa !2428
  %11378 = load i64, i64* %RAX
  %11379 = load i64, i64* %RBP
  %11380 = sub i64 %11379, 48
  %11381 = load i64, i64* %PC
  %11382 = add i64 %11381, 4
  store i64 %11382, i64* %PC
  %11383 = inttoptr i64 %11380 to i64*
  %11384 = load i64, i64* %11383
  %11385 = sub i64 %11378, %11384
  %11386 = icmp ugt i64 %11384, %11378
  %11387 = zext i1 %11386 to i8
  %11388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11387, i8* %11388, align 1, !tbaa !2434
  %11389 = trunc i64 %11385 to i32
  %11390 = and i32 %11389, 255
  %11391 = call i32 @llvm.ctpop.i32(i32 %11390) #17
  %11392 = trunc i32 %11391 to i8
  %11393 = and i8 %11392, 1
  %11394 = xor i8 %11393, 1
  %11395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11394, i8* %11395, align 1, !tbaa !2448
  %11396 = xor i64 %11384, %11378
  %11397 = xor i64 %11396, %11385
  %11398 = lshr i64 %11397, 4
  %11399 = trunc i64 %11398 to i8
  %11400 = and i8 %11399, 1
  %11401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11400, i8* %11401, align 1, !tbaa !2449
  %11402 = icmp eq i64 %11385, 0
  %11403 = zext i1 %11402 to i8
  %11404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11403, i8* %11404, align 1, !tbaa !2450
  %11405 = lshr i64 %11385, 63
  %11406 = trunc i64 %11405 to i8
  %11407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11406, i8* %11407, align 1, !tbaa !2451
  %11408 = lshr i64 %11378, 63
  %11409 = lshr i64 %11384, 63
  %11410 = xor i64 %11409, %11408
  %11411 = xor i64 %11405, %11408
  %11412 = add nuw nsw i64 %11411, %11410
  %11413 = icmp eq i64 %11412, 2
  %11414 = zext i1 %11413 to i8
  %11415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11414, i8* %11415, align 1, !tbaa !2452
  %11416 = load i64, i64* %PC
  %11417 = add i64 %11416, 38
  %11418 = load i64, i64* %PC
  %11419 = add i64 %11418, 6
  %11420 = load i64, i64* %PC
  %11421 = add i64 %11420, 6
  store i64 %11421, i64* %PC
  %11422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11423 = load i8, i8* %11422, align 1, !tbaa !2450
  %11424 = icmp eq i8 %11423, 0
  %11425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11426 = load i8, i8* %11425, align 1, !tbaa !2451
  %11427 = icmp ne i8 %11426, 0
  %11428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11429 = load i8, i8* %11428, align 1, !tbaa !2452
  %11430 = icmp ne i8 %11429, 0
  %11431 = xor i1 %11427, %11430
  %11432 = xor i1 %11431, true
  %11433 = and i1 %11424, %11432
  %11434 = zext i1 %11433 to i8
  store i8 %11434, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %11435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11436 = select i1 %11433, i64 %11417, i64 %11419
  store i64 %11436, i64* %11435, align 8, !tbaa !2428
  %11437 = load i8, i8* %BRANCH_TAKEN
  %11438 = icmp eq i8 %11437, 1
  br i1 %11438, label %block_400d57, label %block_400d37

block_400888:                                     ; preds = %block_40095d, %block_400850
  %MEMORY.28 = phi %struct.Memory* [ %2, %block_400850 ], [ %MEMORY.10, %block_40095d ]
  %11439 = load i64, i64* %RBP
  %11440 = sub i64 %11439, 172
  %11441 = load i64, i64* %PC
  %11442 = add i64 %11441, 6
  store i64 %11442, i64* %PC
  %11443 = inttoptr i64 %11440 to i32*
  %11444 = load i32, i32* %11443
  %11445 = zext i32 %11444 to i64
  store i64 %11445, i64* %RAX, align 8, !tbaa !2428
  %11446 = load i32, i32* %EAX
  %11447 = zext i32 %11446 to i64
  %11448 = load i64, i64* %RBP
  %11449 = sub i64 %11448, 8
  %11450 = load i64, i64* %PC
  %11451 = add i64 %11450, 3
  store i64 %11451, i64* %PC
  %11452 = inttoptr i64 %11449 to i32*
  %11453 = load i32, i32* %11452
  %11454 = sub i32 %11446, %11453
  %11455 = icmp ult i32 %11446, %11453
  %11456 = zext i1 %11455 to i8
  %11457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11456, i8* %11457, align 1, !tbaa !2434
  %11458 = and i32 %11454, 255
  %11459 = call i32 @llvm.ctpop.i32(i32 %11458) #17
  %11460 = trunc i32 %11459 to i8
  %11461 = and i8 %11460, 1
  %11462 = xor i8 %11461, 1
  %11463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11462, i8* %11463, align 1, !tbaa !2448
  %11464 = xor i32 %11453, %11446
  %11465 = xor i32 %11464, %11454
  %11466 = lshr i32 %11465, 4
  %11467 = trunc i32 %11466 to i8
  %11468 = and i8 %11467, 1
  %11469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11468, i8* %11469, align 1, !tbaa !2449
  %11470 = icmp eq i32 %11454, 0
  %11471 = zext i1 %11470 to i8
  %11472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11471, i8* %11472, align 1, !tbaa !2450
  %11473 = lshr i32 %11454, 31
  %11474 = trunc i32 %11473 to i8
  %11475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11474, i8* %11475, align 1, !tbaa !2451
  %11476 = lshr i32 %11446, 31
  %11477 = lshr i32 %11453, 31
  %11478 = xor i32 %11477, %11476
  %11479 = xor i32 %11473, %11476
  %11480 = add nuw nsw i32 %11479, %11478
  %11481 = icmp eq i32 %11480, 2
  %11482 = zext i1 %11481 to i8
  %11483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11482, i8* %11483, align 1, !tbaa !2452
  %11484 = load i64, i64* %PC
  %11485 = add i64 %11484, 224
  %11486 = load i64, i64* %PC
  %11487 = add i64 %11486, 6
  %11488 = load i64, i64* %PC
  %11489 = add i64 %11488, 6
  store i64 %11489, i64* %PC
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %11491 = load i8, i8* %11490, align 1, !tbaa !2451
  %11492 = icmp ne i8 %11491, 0
  %11493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11494 = load i8, i8* %11493, align 1, !tbaa !2452
  %11495 = icmp ne i8 %11494, 0
  %11496 = xor i1 %11492, %11495
  %11497 = xor i1 %11496, true
  %11498 = zext i1 %11497 to i8
  store i8 %11498, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %11499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11500 = select i1 %11496, i64 %11487, i64 %11485
  store i64 %11500, i64* %11499, align 8, !tbaa !2428
  %11501 = load i8, i8* %BRANCH_TAKEN
  %11502 = icmp eq i8 %11501, 1
  %11503 = load i64, i64* %PC
  br i1 %11502, label %block_400971, label %block_400897

block_401387:                                     ; preds = %block_401379
  %11504 = load i64, i64* %PC
  %11505 = add i64 %11504, 1145
  %11506 = load i64, i64* %PC
  %11507 = add i64 %11506, 5
  %11508 = load i64, i64* %PC
  %11509 = add i64 %11508, 5
  store i64 %11509, i64* %PC
  %11510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11511 = load i64, i64* %11510, align 8, !tbaa !2428
  %11512 = add i64 %11511, -8
  %11513 = inttoptr i64 %11512 to i64*
  store i64 %11507, i64* %11513
  store i64 %11512, i64* %11510, align 8, !tbaa !2428
  %11514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11505, i64* %11514, align 8, !tbaa !2428
  %11515 = load i64, i64* %PC
  %11516 = call %struct.Memory* @sub_401800_P0(%struct.State* %0, i64 %11515, %struct.Memory* %MEMORY.7)
  %11517 = load i64, i64* %RBP
  %11518 = sub i64 %11517, 24
  %11519 = load i64, i64* %PC
  %11520 = add i64 %11519, 4
  store i64 %11520, i64* %PC
  %11521 = inttoptr i64 %11518 to i64*
  %11522 = load i64, i64* %11521
  store i64 %11522, i64* %RAX, align 8, !tbaa !2428
  %11523 = load i64, i64* %RAX
  %11524 = load i64, i64* %PC
  %11525 = add i64 %11524, 4
  store i64 %11525, i64* %PC
  %11526 = add i64 1, %11523
  store i64 %11526, i64* %RAX, align 8, !tbaa !2428
  %11527 = icmp ult i64 %11526, %11523
  %11528 = icmp ult i64 %11526, 1
  %11529 = or i1 %11527, %11528
  %11530 = zext i1 %11529 to i8
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11530, i8* %11531, align 1, !tbaa !2434
  %11532 = trunc i64 %11526 to i32
  %11533 = and i32 %11532, 255
  %11534 = call i32 @llvm.ctpop.i32(i32 %11533) #17
  %11535 = trunc i32 %11534 to i8
  %11536 = and i8 %11535, 1
  %11537 = xor i8 %11536, 1
  %11538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11537, i8* %11538, align 1, !tbaa !2448
  %11539 = xor i64 1, %11523
  %11540 = xor i64 %11539, %11526
  %11541 = lshr i64 %11540, 4
  %11542 = trunc i64 %11541 to i8
  %11543 = and i8 %11542, 1
  %11544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11543, i8* %11544, align 1, !tbaa !2449
  %11545 = icmp eq i64 %11526, 0
  %11546 = zext i1 %11545 to i8
  %11547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11546, i8* %11547, align 1, !tbaa !2450
  %11548 = lshr i64 %11526, 63
  %11549 = trunc i64 %11548 to i8
  %11550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11549, i8* %11550, align 1, !tbaa !2451
  %11551 = lshr i64 %11523, 63
  %11552 = xor i64 %11548, %11551
  %11553 = add nuw nsw i64 %11552, %11548
  %11554 = icmp eq i64 %11553, 2
  %11555 = zext i1 %11554 to i8
  %11556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11555, i8* %11556, align 1, !tbaa !2452
  %11557 = load i64, i64* %RBP
  %11558 = sub i64 %11557, 24
  %11559 = load i64, i64* %RAX
  %11560 = load i64, i64* %PC
  %11561 = add i64 %11560, 4
  store i64 %11561, i64* %PC
  %11562 = inttoptr i64 %11558 to i64*
  store i64 %11559, i64* %11562
  %11563 = load i64, i64* %PC
  %11564 = sub i64 %11563, 31
  %11565 = load i64, i64* %PC
  %11566 = add i64 %11565, 5
  store i64 %11566, i64* %PC
  %11567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11564, i64* %11567, align 8, !tbaa !2428
  br label %block_401379

block_400e06:                                     ; preds = %block_400de8
  store i32 1, i32* bitcast (%J_type* @J to i32*)
  br label %block_400e11

block_401484:                                     ; preds = %block_40140a
  %11568 = load i64, i64* %RBP
  %11569 = sub i64 %11568, 176
  %11570 = load i64, i64* %PC
  %11571 = add i64 %11570, 6
  store i64 %11571, i64* %PC
  %11572 = inttoptr i64 %11569 to i32*
  %11573 = load i32, i32* %11572
  %11574 = zext i32 %11573 to i64
  store i64 %11574, i64* %RAX, align 8, !tbaa !2428
  %11575 = load i32, i32* %EAX
  %11576 = zext i32 %11575 to i64
  %11577 = load i64, i64* %RBP
  %11578 = sub i64 %11577, 172
  %11579 = load i64, i64* %PC
  %11580 = add i64 %11579, 6
  store i64 %11580, i64* %PC
  %11581 = inttoptr i64 %11578 to i32*
  %11582 = load i32, i32* %11581
  %11583 = sub i32 %11575, %11582
  %11584 = icmp ult i32 %11575, %11582
  %11585 = zext i1 %11584 to i8
  %11586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11585, i8* %11586, align 1, !tbaa !2434
  %11587 = and i32 %11583, 255
  %11588 = call i32 @llvm.ctpop.i32(i32 %11587) #17
  %11589 = trunc i32 %11588 to i8
  %11590 = and i8 %11589, 1
  %11591 = xor i8 %11590, 1
  %11592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11591, i8* %11592, align 1, !tbaa !2448
  %11593 = xor i32 %11582, %11575
  %11594 = xor i32 %11593, %11583
  %11595 = lshr i32 %11594, 4
  %11596 = trunc i32 %11595 to i8
  %11597 = and i8 %11596, 1
  %11598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11597, i8* %11598, align 1, !tbaa !2449
  %11599 = icmp eq i32 %11583, 0
  %11600 = zext i1 %11599 to i8
  %11601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11600, i8* %11601, align 1, !tbaa !2450
  %11602 = lshr i32 %11583, 31
  %11603 = trunc i32 %11602 to i8
  %11604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11603, i8* %11604, align 1, !tbaa !2451
  %11605 = lshr i32 %11575, 31
  %11606 = lshr i32 %11582, 31
  %11607 = xor i32 %11606, %11605
  %11608 = xor i32 %11602, %11605
  %11609 = add nuw nsw i32 %11608, %11607
  %11610 = icmp eq i32 %11609, 2
  %11611 = zext i1 %11610 to i8
  %11612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11611, i8* %11612, align 1, !tbaa !2452
  %11613 = load i64, i64* %PC
  %11614 = add i64 %11613, 54
  %11615 = load i64, i64* %PC
  %11616 = add i64 %11615, 6
  %11617 = load i64, i64* %PC
  %11618 = add i64 %11617, 6
  store i64 %11618, i64* %PC
  %11619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11620 = load i8, i8* %11619, align 1, !tbaa !2450
  %11621 = icmp eq i8 %11620, 0
  %11622 = zext i1 %11621 to i8
  store i8 %11622, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %11623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11624 = select i1 %11621, i64 %11614, i64 %11616
  store i64 %11624, i64* %11623, align 8, !tbaa !2428
  %11625 = load i8, i8* %BRANCH_TAKEN
  %11626 = icmp eq i8 %11625, 1
  br i1 %11626, label %block_4014c6, label %block_401496
}

; Function Attrs: noinline
declare void @__mcsema_attach_call() #13

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_400840_frame_dummy() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400840;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @1, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_400840_frame_dummy_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400840_frame_dummy(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_400810___do_global_dtors_aux() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400810;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @3, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_400810___do_global_dtors_aux_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400810___do_global_dtors_aux(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_4006e0_printf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_4018e0___libc_csu_fini() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4018e0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @4, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_4018e0___libc_csu_fini_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4018e0___libc_csu_fini(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_401870___libc_csu_init() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401870;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @5, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_401870___libc_csu_init_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401870___libc_csu_init(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @main() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400850;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @6, void ()** @2)
  ret void
}

define internal %struct.Memory* @main_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400850_main(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602178___libc_start_main(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_400720_time(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602168_log(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_4006c0_exp(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_602140_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @sqrt(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_602138_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @sin(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_400700_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @cos(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_6020f8_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @atan(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6020e8_strncmp(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_400710_fprintf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602190_atol(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.init_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400688;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @7, void ()** @2)
  ret void
}

define internal %struct.Memory* @.init_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400688__init_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.term_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4018e4;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @8, void ()** @2)
  ret void
}

define internal %struct.Memory* @.term_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4018e4__term_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @PA() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401650;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @9, void ()** @2)
  ret void
}

define internal %struct.Memory* @PA_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401650_PA(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @P3() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401780;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @10, void ()** @2)
  ret void
}

define internal %struct.Memory* @P3_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401780_P3(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @POUT() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4015e0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @11, void ()** @2)
  ret void
}

define internal %struct.Memory* @POUT_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4015e0_POUT(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @P0() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401800;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @12, void ()** @2)
  ret void
}

define internal %struct.Memory* @P0_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401800_P0(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

define internal void @__mcsema_constructor() {
  %1 = load volatile i1, i1* @0
  br i1 %1, label %2, label %3

; <label>:2:                                      ; preds = %0
  br label %__mcsema_early_init.exit

; <label>:3:                                      ; preds = %0
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %2
  call void @callback_sub_401870___libc_csu_init()
  ret void
}

define internal void @__mcsema_destructor() {
  call void @callback_sub_4018e0___libc_csu_fini()
  ret void
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline }
attributes #14 = { noinline "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { naked nobuiltin noinline }
attributes #16 = { alwaysinline inlinehint "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }

!llvm.ident = !{!0, !0}
!llvm.dbg.cu = !{!1}
!llvm.module.flags = !{!1259, !1260}

!0 = !{!"clang version 4.0.1 (tags/RELEASE_401/final)"}
!1 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !2, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, retainedTypes: !67, imports: !70)
!2 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/BasicBlock.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!3 = !{!4, !26, !35, !39, !45, !51, !55, !61}
!4 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "Name", scope: !6, file: !5, line: 70, baseType: !8, size: 32, elements: !11, identifier: "_ZTSN14AsyncHyperCall4NameE")
!5 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/HyperCall.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!6 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "AsyncHyperCall", file: !5, line: 68, size: 8, elements: !7, identifier: "_ZTS14AsyncHyperCall")
!7 = !{}
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !9, line: 183, baseType: !10)
!9 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stdint.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!12 = !DIEnumerator(name: "kInvalid", value: 0)
!13 = !DIEnumerator(name: "kX86Int1", value: 1)
!14 = !DIEnumerator(name: "kX86Int3", value: 2)
!15 = !DIEnumerator(name: "kX86IntO", value: 3)
!16 = !DIEnumerator(name: "kX86IntN", value: 4)
!17 = !DIEnumerator(name: "kX86Bound", value: 5)
!18 = !DIEnumerator(name: "kX86IRet", value: 6)
!19 = !DIEnumerator(name: "kX86SysCall", value: 7)
!20 = !DIEnumerator(name: "kX86SysRet", value: 8)
!21 = !DIEnumerator(name: "kX86SysEnter", value: 9)
!22 = !DIEnumerator(name: "kX86SysExit", value: 10)
!23 = !DIEnumerator(name: "kX86JmpFar", value: 11)
!24 = !DIEnumerator(name: "kAArch64SupervisorCall", value: 12)
!25 = !DIEnumerator(name: "kInvalidInstruction", value: 13)
!26 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "RequestPrivilegeLevel", file: !27, line: 64, baseType: !28, size: 16, elements: !30, identifier: "_ZTS21RequestPrivilegeLevel")
!27 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !9, line: 218, baseType: !29)
!29 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!30 = !{!31, !32, !33, !34}
!31 = !DIEnumerator(name: "kRPLRingZero", value: 0)
!32 = !DIEnumerator(name: "kRPLRingOne", value: 1)
!33 = !DIEnumerator(name: "kRPLRingTwo", value: 2)
!34 = !DIEnumerator(name: "kRPLRingThree", value: 3)
!35 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "TableIndicator", file: !27, line: 71, baseType: !28, size: 16, elements: !36, identifier: "_ZTS14TableIndicator")
!36 = !{!37, !38}
!37 = !DIEnumerator(name: "kGlobalDescriptorTable", value: 0)
!38 = !DIEnumerator(name: "kLocalDescriptorTable", value: 1)
!39 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUPrecisionControl", file: !27, line: 123, baseType: !28, size: 16, elements: !40, identifier: "_ZTS19FPUPrecisionControl")
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "kPrecisionSingle", value: 0)
!42 = !DIEnumerator(name: "kPrecisionReserved", value: 1)
!43 = !DIEnumerator(name: "kPrecisionDouble", value: 2)
!44 = !DIEnumerator(name: "kPrecisionExtended", value: 3)
!45 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPURoundingControl", file: !27, line: 130, baseType: !28, size: 16, elements: !46, identifier: "_ZTS18FPURoundingControl")
!46 = !{!47, !48, !49, !50}
!47 = !DIEnumerator(name: "kFPURoundToNearestEven", value: 0)
!48 = !DIEnumerator(name: "kFPURoundDownNegInf", value: 1)
!49 = !DIEnumerator(name: "kFPURoundUpInf", value: 2)
!50 = !DIEnumerator(name: "kFPURoundToZero", value: 3)
!51 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUInfinityControl", file: !27, line: 137, baseType: !28, size: 16, elements: !52, identifier: "_ZTS18FPUInfinityControl")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "kInfinityProjective", value: 0)
!54 = !DIEnumerator(name: "kInfinityAffine", value: 1)
!55 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUTag", file: !27, line: 214, baseType: !28, size: 16, elements: !56, identifier: "_ZTS6FPUTag")
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "kFPUTagNonZero", value: 0)
!58 = !DIEnumerator(name: "kFPUTagZero", value: 1)
!59 = !DIEnumerator(name: "kFPUTagSpecial", value: 2)
!60 = !DIEnumerator(name: "kFPUTagEmpty", value: 3)
!61 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUAbridgedTag", file: !27, line: 221, baseType: !62, size: 8, elements: !64, identifier: "_ZTS14FPUAbridgedTag")
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !9, line: 237, baseType: !63)
!63 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!64 = !{!65, !66}
!65 = !DIEnumerator(name: "kFPUAbridgedTagEmpty", value: 0)
!66 = !DIEnumerator(name: "kFPUAbridgedTagValid", value: 1)
!67 = !{!68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!70 = !{!71, !77, !83, !86, !93, !97, !102, !104, !112, !116, !120, !132, !136, !140, !144, !148, !153, !157, !161, !165, !169, !177, !181, !185, !187, !191, !195, !199, !205, !209, !213, !215, !223, !227, !235, !237, !241, !245, !249, !253, !258, !263, !268, !269, !270, !271, !274, !275, !276, !277, !278, !279, !280, !335, !339, !355, !358, !363, !371, !376, !380, !384, !388, !392, !394, !396, !400, !406, !410, !416, !422, !424, !428, !432, !436, !440, !451, !453, !457, !461, !465, !467, !471, !475, !479, !481, !483, !487, !495, !499, !503, !507, !509, !515, !517, !523, !527, !531, !535, !539, !543, !547, !549, !551, !555, !559, !563, !565, !569, !573, !575, !577, !581, !585, !589, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !606, !609, !611, !613, !615, !617, !619, !621, !623, !625, !627, !629, !631, !633, !634, !635, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !665, !669, !674, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !706, !712, !717, !721, !723, !725, !727, !729, !736, !740, !744, !748, !752, !756, !761, !765, !767, !771, !777, !781, !786, !788, !790, !794, !798, !802, !804, !806, !808, !810, !814, !816, !818, !822, !826, !830, !834, !838, !840, !842, !846, !850, !854, !858, !860, !862, !866, !870, !871, !872, !873, !874, !875, !880, !882, !884, !888, !890, !892, !894, !896, !898, !900, !902, !907, !911, !913, !915, !920, !922, !924, !926, !928, !930, !932, !935, !937, !939, !943, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !971, !975, !977, !979, !981, !983, !985, !987, !989, !991, !993, !995, !997, !999, !1001, !1003, !1005, !1009, !1013, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1039, !1043, !1047, !1049, !1051, !1053, !1057, !1061, !1065, !1067, !1069, !1071, !1073, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1093, !1097, !1101, !1103, !1105, !1107, !1109, !1113, !1117, !1119, !1121, !1123, !1125, !1127, !1129, !1133, !1137, !1139, !1141, !1143, !1145, !1149, !1153, !1157, !1159, !1161, !1163, !1165, !1167, !1169, !1173, !1177, !1181, !1183, !1187, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1207, !1209, !1212, !1217, !1219, !1225, !1227, !1229, !1231, !1236, !1238, !1244, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!71 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !72, entity: !74, line: 58)
!72 = !DINamespace(name: "__gnu_debug", scope: null, file: !73, line: 56)
!73 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/debug/debug.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!74 = !DINamespace(name: "__debug", scope: !75, file: !73, line: 50)
!75 = !DINamespace(name: "std", scope: null, file: !76, line: 229)
!76 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!77 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !78, line: 52)
!78 = !DISubprogram(name: "abs", scope: !79, file: !79, line: 837, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!79 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!80 = !DISubroutineType(types: !81)
!81 = !{!82, !82}
!82 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!83 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !84, line: 127)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !79, line: 62, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 58, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!86 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !87, line: 128)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !79, line: 70, baseType: !88)
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 66, size: 128, elements: !89, identifier: "_ZTS6ldiv_t")
!89 = !{!90, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !88, file: !79, line: 68, baseType: !91, size: 64)
!91 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !88, file: !79, line: 69, baseType: !91, size: 64, offset: 64)
!93 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !94, line: 130)
!94 = !DISubprogram(name: "abort", scope: !79, file: !79, line: 588, type: !95, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!95 = !DISubroutineType(types: !96)
!96 = !{null}
!97 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !98, line: 134)
!98 = !DISubprogram(name: "atexit", scope: !79, file: !79, line: 592, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!99 = !DISubroutineType(types: !100)
!100 = !{!82, !101}
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !103, line: 137)
!103 = !DISubprogram(name: "at_quick_exit", scope: !79, file: !79, line: 597, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!104 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !105, line: 140)
!105 = !DISubprogram(name: "atof", scope: !79, file: !79, line: 101, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!106 = !DISubroutineType(types: !107)
!107 = !{!108, !109}
!108 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!111 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!112 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !113, line: 141)
!113 = !DISubprogram(name: "atoi", scope: !79, file: !79, line: 104, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!114 = !DISubroutineType(types: !115)
!115 = !{!82, !109}
!116 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !117, line: 142)
!117 = !DISubprogram(name: "atol", scope: !79, file: !79, line: 107, type: !118, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!118 = !DISubroutineType(types: !119)
!119 = !{!91, !109}
!120 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !121, line: 143)
!121 = !DISubprogram(name: "bsearch", scope: !79, file: !79, line: 817, type: !122, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!122 = !DISubroutineType(types: !123)
!123 = !{!124, !68, !68, !125, !125, !128}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !126, line: 62, baseType: !127)
!126 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stddef.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!127 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !79, line: 805, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{!82, !68, !68}
!132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !133, line: 144)
!133 = !DISubprogram(name: "calloc", scope: !79, file: !79, line: 541, type: !134, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!134 = !DISubroutineType(types: !135)
!135 = !{!124, !125, !125}
!136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !137, line: 145)
!137 = !DISubprogram(name: "div", scope: !79, file: !79, line: 849, type: !138, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!138 = !DISubroutineType(types: !139)
!139 = !{!84, !82, !82}
!140 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !141, line: 146)
!141 = !DISubprogram(name: "exit", scope: !79, file: !79, line: 614, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !82}
!144 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !145, line: 147)
!145 = !DISubprogram(name: "free", scope: !79, file: !79, line: 563, type: !146, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!146 = !DISubroutineType(types: !147)
!147 = !{null, !124}
!148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !149, line: 148)
!149 = !DISubprogram(name: "getenv", scope: !79, file: !79, line: 631, type: !150, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!150 = !DISubroutineType(types: !151)
!151 = !{!152, !109}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !154, line: 149)
!154 = !DISubprogram(name: "labs", scope: !79, file: !79, line: 838, type: !155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!155 = !DISubroutineType(types: !156)
!156 = !{!91, !91}
!157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !158, line: 150)
!158 = !DISubprogram(name: "ldiv", scope: !79, file: !79, line: 851, type: !159, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!159 = !DISubroutineType(types: !160)
!160 = !{!87, !91, !91}
!161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !162, line: 151)
!162 = !DISubprogram(name: "malloc", scope: !79, file: !79, line: 539, type: !163, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!163 = !DISubroutineType(types: !164)
!164 = !{!124, !125}
!165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !166, line: 153)
!166 = !DISubprogram(name: "mblen", scope: !79, file: !79, line: 919, type: !167, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!167 = !DISubroutineType(types: !168)
!168 = !{!82, !109, !125}
!169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !170, line: 154)
!170 = !DISubprogram(name: "mbstowcs", scope: !79, file: !79, line: 930, type: !171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!171 = !DISubroutineType(types: !172)
!172 = !{!125, !173, !176, !125}
!173 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !174)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_signed)
!176 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !109)
!177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !178, line: 155)
!178 = !DISubprogram(name: "mbtowc", scope: !79, file: !79, line: 922, type: !179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!179 = !DISubroutineType(types: !180)
!180 = !{!82, !173, !176, !125}
!181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !182, line: 157)
!182 = !DISubprogram(name: "qsort", scope: !79, file: !79, line: 827, type: !183, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!183 = !DISubroutineType(types: !184)
!184 = !{null, !124, !125, !125, !128}
!185 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !186, line: 160)
!186 = !DISubprogram(name: "quick_exit", scope: !79, file: !79, line: 620, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !188, line: 163)
!188 = !DISubprogram(name: "rand", scope: !79, file: !79, line: 453, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!189 = !DISubroutineType(types: !190)
!190 = !{!82}
!191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !192, line: 164)
!192 = !DISubprogram(name: "realloc", scope: !79, file: !79, line: 549, type: !193, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!193 = !DISubroutineType(types: !194)
!194 = !{!124, !124, !125}
!195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !196, line: 165)
!196 = !DISubprogram(name: "srand", scope: !79, file: !79, line: 455, type: !197, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!197 = !DISubroutineType(types: !198)
!198 = !{null, !10}
!199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !200, line: 166)
!200 = !DISubprogram(name: "strtod", scope: !79, file: !79, line: 117, type: !201, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!201 = !DISubroutineType(types: !202)
!202 = !{!108, !176, !203}
!203 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!205 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !206, line: 167)
!206 = !DISubprogram(name: "strtol", scope: !79, file: !79, line: 176, type: !207, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!207 = !DISubroutineType(types: !208)
!208 = !{!91, !176, !203, !82}
!209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !210, line: 168)
!210 = !DISubprogram(name: "strtoul", scope: !79, file: !79, line: 180, type: !211, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!211 = !DISubroutineType(types: !212)
!212 = !{!127, !176, !203, !82}
!213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !214, line: 169)
!214 = !DISubprogram(name: "system", scope: !79, file: !79, line: 781, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !216, line: 171)
!216 = !DISubprogram(name: "wcstombs", scope: !79, file: !79, line: 933, type: !217, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!217 = !DISubroutineType(types: !218)
!218 = !{!125, !219, !220, !125}
!219 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !152)
!220 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !224, line: 172)
!224 = !DISubprogram(name: "wctomb", scope: !79, file: !79, line: 926, type: !225, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!225 = !DISubroutineType(types: !226)
!226 = !{!82, !152, !175}
!227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !229, line: 200)
!228 = !DINamespace(name: "__gnu_cxx", scope: null, file: !76, line: 255)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !79, line: 80, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 76, size: 128, elements: !231, identifier: "_ZTS7lldiv_t")
!231 = !{!232, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !230, file: !79, line: 78, baseType: !233, size: 64)
!233 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !230, file: !79, line: 79, baseType: !233, size: 64, offset: 64)
!235 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !236, line: 206)
!236 = !DISubprogram(name: "_Exit", scope: !79, file: !79, line: 626, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!237 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !238, line: 210)
!238 = !DISubprogram(name: "llabs", scope: !79, file: !79, line: 841, type: !239, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!239 = !DISubroutineType(types: !240)
!240 = !{!233, !233}
!241 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !242, line: 216)
!242 = !DISubprogram(name: "lldiv", scope: !79, file: !79, line: 855, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!243 = !DISubroutineType(types: !244)
!244 = !{!229, !233, !233}
!245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !246, line: 227)
!246 = !DISubprogram(name: "atoll", scope: !79, file: !79, line: 112, type: !247, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!247 = !DISubroutineType(types: !248)
!248 = !{!233, !109}
!249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !250, line: 228)
!250 = !DISubprogram(name: "strtoll", scope: !79, file: !79, line: 200, type: !251, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!251 = !DISubroutineType(types: !252)
!252 = !{!233, !176, !203, !82}
!253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !254, line: 229)
!254 = !DISubprogram(name: "strtoull", scope: !79, file: !79, line: 205, type: !255, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!255 = !DISubroutineType(types: !256)
!256 = !{!257, !176, !203, !82}
!257 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !259, line: 231)
!259 = !DISubprogram(name: "strtof", scope: !79, file: !79, line: 123, type: !260, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!260 = !DISubroutineType(types: !261)
!261 = !{!262, !176, !203}
!262 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !264, line: 232)
!264 = !DISubprogram(name: "strtold", scope: !79, file: !79, line: 126, type: !265, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!265 = !DISubroutineType(types: !266)
!266 = !{!267, !176, !203}
!267 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !229, line: 240)
!269 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !236, line: 242)
!270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !238, line: 244)
!271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !272, line: 245)
!272 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !228, file: !273, line: 213, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!273 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdlib", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !242, line: 246)
!275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !246, line: 248)
!276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !259, line: 249)
!277 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !250, line: 250)
!278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !254, line: 251)
!279 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !264, line: 252)
!280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !281, line: 57)
!281 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !283, file: !282, line: 79, size: 64, elements: !284, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!282 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_ptr.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!283 = !DINamespace(name: "__exception_ptr", scope: !75, file: !282, line: 52)
!284 = !{!285, !286, !290, !293, !294, !299, !300, !304, !309, !313, !317, !320, !321, !324, !328}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_M_exception_object", scope: !281, file: !282, line: 81, baseType: !124, size: 64)
!286 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 83, type: !287, isLocal: false, isDefinition: false, scopeLine: 83, flags: DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289, !124}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!290 = !DISubprogram(name: "_M_addref", linkageName: "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", scope: !281, file: !282, line: 85, type: !291, isLocal: false, isDefinition: false, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false)
!291 = !DISubroutineType(types: !292)
!292 = !{null, !289}
!293 = !DISubprogram(name: "_M_release", linkageName: "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", scope: !281, file: !282, line: 86, type: !291, isLocal: false, isDefinition: false, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false)
!294 = !DISubprogram(name: "_M_get", linkageName: "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", scope: !281, file: !282, line: 88, type: !295, isLocal: false, isDefinition: false, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false)
!295 = !DISubroutineType(types: !296)
!296 = !{!124, !297}
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!299 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 96, type: !291, isLocal: false, isDefinition: false, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!300 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 98, type: !301, isLocal: false, isDefinition: false, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!301 = !DISubroutineType(types: !302)
!302 = !{null, !289, !303}
!303 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !298, size: 64)
!304 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 101, type: !305, isLocal: false, isDefinition: false, scopeLine: 101, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !289, !307}
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "nullptr_t", scope: !75, file: !76, line: 235, baseType: !308)
!308 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "decltype(nullptr)")
!309 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 105, type: !310, isLocal: false, isDefinition: false, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !289, !312}
!312 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !281, size: 64)
!313 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSERKS0_", scope: !281, file: !282, line: 118, type: !314, isLocal: false, isDefinition: false, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!314 = !DISubroutineType(types: !315)
!315 = !{!316, !289, !303}
!316 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !281, size: 64)
!317 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSEOS0_", scope: !281, file: !282, line: 122, type: !318, isLocal: false, isDefinition: false, scopeLine: 122, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!318 = !DISubroutineType(types: !319)
!319 = !{!316, !289, !312}
!320 = !DISubprogram(name: "~exception_ptr", scope: !281, file: !282, line: 129, type: !291, isLocal: false, isDefinition: false, scopeLine: 129, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!321 = !DISubprogram(name: "swap", linkageName: "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", scope: !281, file: !282, line: 132, type: !322, isLocal: false, isDefinition: false, scopeLine: 132, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!322 = !DISubroutineType(types: !323)
!323 = !{null, !289, !316}
!324 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt15__exception_ptr13exception_ptrcvbEv", scope: !281, file: !282, line: 144, type: !325, isLocal: false, isDefinition: false, scopeLine: 144, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!325 = !DISubroutineType(types: !326)
!326 = !{!327, !297}
!327 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!328 = !DISubprogram(name: "__cxa_exception_type", linkageName: "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", scope: !281, file: !282, line: 153, type: !329, isLocal: false, isDefinition: false, scopeLine: 153, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!329 = !DISubroutineType(types: !330)
!330 = !{!331, !297}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "type_info", scope: !75, file: !334, line: 88, flags: DIFlagFwdDecl, identifier: "_ZTSSt9type_info")
!334 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/typeinfo", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!335 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !283, entity: !336, line: 73)
!336 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !75, file: !282, line: 69, type: !337, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!337 = !DISubroutineType(types: !338)
!338 = !{null, !281}
!339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !340, line: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !341, line: 6, baseType: !342)
!341 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !343, line: 21, baseType: !344)
!343 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 13, size: 64, elements: !345, identifier: "_ZTS11__mbstate_t")
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !344, file: !343, line: 15, baseType: !82, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !344, file: !343, line: 20, baseType: !348, size: 32, offset: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !344, file: !343, line: 16, size: 32, elements: !349, identifier: "_ZTSN11__mbstate_tUt_E")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !348, file: !343, line: 18, baseType: !10, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !348, file: !343, line: 19, baseType: !352, size: 32)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 32, elements: !353)
!353 = !{!354}
!354 = !DISubrange(count: 4)
!355 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !356, line: 139)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !357, line: 20, baseType: !10)
!357 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!358 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !359, line: 141)
!359 = !DISubprogram(name: "btowc", scope: !360, file: !360, line: 284, type: !361, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!360 = !DIFile(filename: "/usr/include/wchar.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!361 = !DISubroutineType(types: !362)
!362 = !{!356, !82}
!363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !364, line: 142)
!364 = !DISubprogram(name: "fgetwc", scope: !360, file: !360, line: 727, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!365 = !DISubroutineType(types: !366)
!366 = !{!356, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !369, line: 5, baseType: !370)
!369 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !369, line: 4, flags: DIFlagFwdDecl, identifier: "_ZTS8_IO_FILE")
!371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !372, line: 143)
!372 = !DISubprogram(name: "fgetws", scope: !360, file: !360, line: 756, type: !373, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!373 = !DISubroutineType(types: !374)
!374 = !{!174, !173, !82, !375}
!375 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !367)
!376 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !377, line: 144)
!377 = !DISubprogram(name: "fputwc", scope: !360, file: !360, line: 741, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!378 = !DISubroutineType(types: !379)
!379 = !{!356, !175, !367}
!380 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !381, line: 145)
!381 = !DISubprogram(name: "fputws", scope: !360, file: !360, line: 763, type: !382, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!382 = !DISubroutineType(types: !383)
!383 = !{!82, !220, !375}
!384 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !385, line: 146)
!385 = !DISubprogram(name: "fwide", scope: !360, file: !360, line: 573, type: !386, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!386 = !DISubroutineType(types: !387)
!387 = !{!82, !367, !82}
!388 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !389, line: 147)
!389 = !DISubprogram(name: "fwprintf", scope: !360, file: !360, line: 580, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!390 = !DISubroutineType(types: !391)
!391 = !{!82, !375, !220, null}
!392 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !393, line: 148)
!393 = !DISubprogram(name: "fwscanf", scope: !360, file: !360, line: 621, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!394 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !395, line: 149)
!395 = !DISubprogram(name: "getwc", scope: !360, file: !360, line: 728, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!396 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !397, line: 150)
!397 = !DISubprogram(name: "getwchar", scope: !360, file: !360, line: 734, type: !398, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!398 = !DISubroutineType(types: !399)
!399 = !{!356}
!400 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !401, line: 151)
!401 = !DISubprogram(name: "mbrlen", scope: !360, file: !360, line: 307, type: !402, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!402 = !DISubroutineType(types: !403)
!403 = !{!125, !176, !125, !404}
!404 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!406 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !407, line: 152)
!407 = !DISubprogram(name: "mbrtowc", scope: !360, file: !360, line: 296, type: !408, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!408 = !DISubroutineType(types: !409)
!409 = !{!125, !173, !176, !125, !404}
!410 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !411, line: 153)
!411 = !DISubprogram(name: "mbsinit", scope: !360, file: !360, line: 292, type: !412, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!412 = !DISubroutineType(types: !413)
!413 = !{!82, !414}
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!416 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !417, line: 154)
!417 = !DISubprogram(name: "mbsrtowcs", scope: !360, file: !360, line: 337, type: !418, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!418 = !DISubroutineType(types: !419)
!419 = !{!125, !173, !420, !125, !404}
!420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!422 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !423, line: 155)
!423 = !DISubprogram(name: "putwc", scope: !360, file: !360, line: 742, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!424 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !425, line: 156)
!425 = !DISubprogram(name: "putwchar", scope: !360, file: !360, line: 748, type: !426, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!426 = !DISubroutineType(types: !427)
!427 = !{!356, !175}
!428 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !429, line: 158)
!429 = !DISubprogram(name: "swprintf", scope: !360, file: !360, line: 590, type: !430, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!430 = !DISubroutineType(types: !431)
!431 = !{!82, !173, !125, !220, null}
!432 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !433, line: 160)
!433 = !DISubprogram(name: "swscanf", scope: !360, file: !360, line: 631, type: !434, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!434 = !DISubroutineType(types: !435)
!435 = !{!82, !220, !220, null}
!436 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !437, line: 161)
!437 = !DISubprogram(name: "ungetwc", scope: !360, file: !360, line: 771, type: !438, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!438 = !DISubroutineType(types: !439)
!439 = !{!356, !356, !367}
!440 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !441, line: 162)
!441 = !DISubprogram(name: "vfwprintf", scope: !360, file: !360, line: 598, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!442 = !DISubroutineType(types: !443)
!443 = !{!82, !375, !220, !444}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2, size: 192, elements: !446, identifier: "_ZTS13__va_list_tag")
!446 = !{!447, !448, !449, !450}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !445, file: !2, baseType: !10, size: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !445, file: !2, baseType: !10, size: 32, offset: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 128)
!451 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 164)
!452 = !DISubprogram(name: "vfwscanf", scope: !360, file: !360, line: 673, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!453 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !454, line: 167)
!454 = !DISubprogram(name: "vswprintf", scope: !360, file: !360, line: 611, type: !455, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!455 = !DISubroutineType(types: !456)
!456 = !{!82, !173, !125, !220, !444}
!457 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 170)
!458 = !DISubprogram(name: "vswscanf", scope: !360, file: !360, line: 685, type: !459, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!459 = !DISubroutineType(types: !460)
!460 = !{!82, !220, !220, !444}
!461 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !462, line: 172)
!462 = !DISubprogram(name: "vwprintf", scope: !360, file: !360, line: 606, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!463 = !DISubroutineType(types: !464)
!464 = !{!82, !220, !444}
!465 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 174)
!466 = !DISubprogram(name: "vwscanf", scope: !360, file: !360, line: 681, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!467 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !468, line: 176)
!468 = !DISubprogram(name: "wcrtomb", scope: !360, file: !360, line: 301, type: !469, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!469 = !DISubroutineType(types: !470)
!470 = !{!125, !219, !175, !404}
!471 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !472, line: 177)
!472 = !DISubprogram(name: "wcscat", scope: !360, file: !360, line: 97, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!473 = !DISubroutineType(types: !474)
!474 = !{!174, !173, !220}
!475 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !476, line: 178)
!476 = !DISubprogram(name: "wcscmp", scope: !360, file: !360, line: 106, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!477 = !DISubroutineType(types: !478)
!478 = !{!82, !221, !221}
!479 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !480, line: 179)
!480 = !DISubprogram(name: "wcscoll", scope: !360, file: !360, line: 131, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!481 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !482, line: 180)
!482 = !DISubprogram(name: "wcscpy", scope: !360, file: !360, line: 87, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!483 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !484, line: 181)
!484 = !DISubprogram(name: "wcscspn", scope: !360, file: !360, line: 187, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!485 = !DISubroutineType(types: !486)
!486 = !{!125, !221, !221}
!487 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !488, line: 182)
!488 = !DISubprogram(name: "wcsftime", scope: !360, file: !360, line: 835, type: !489, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!489 = !DISubroutineType(types: !490)
!490 = !{!125, !173, !125, !220, !491}
!491 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !360, line: 83, flags: DIFlagFwdDecl, identifier: "_ZTS2tm")
!495 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !496, line: 183)
!496 = !DISubprogram(name: "wcslen", scope: !360, file: !360, line: 222, type: !497, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!497 = !DISubroutineType(types: !498)
!498 = !{!125, !221}
!499 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !500, line: 184)
!500 = !DISubprogram(name: "wcsncat", scope: !360, file: !360, line: 101, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!501 = !DISubroutineType(types: !502)
!502 = !{!174, !173, !220, !125}
!503 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !504, line: 185)
!504 = !DISubprogram(name: "wcsncmp", scope: !360, file: !360, line: 109, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!505 = !DISubroutineType(types: !506)
!506 = !{!82, !221, !221, !125}
!507 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !508, line: 186)
!508 = !DISubprogram(name: "wcsncpy", scope: !360, file: !360, line: 92, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!509 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !510, line: 187)
!510 = !DISubprogram(name: "wcsrtombs", scope: !360, file: !360, line: 343, type: !511, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!511 = !DISubroutineType(types: !512)
!512 = !{!125, !219, !513, !125, !404}
!513 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !514)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!515 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !516, line: 188)
!516 = !DISubprogram(name: "wcsspn", scope: !360, file: !360, line: 191, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!517 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !518, line: 189)
!518 = !DISubprogram(name: "wcstod", scope: !360, file: !360, line: 377, type: !519, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!519 = !DISubroutineType(types: !520)
!520 = !{!108, !220, !521}
!521 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!523 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 191)
!524 = !DISubprogram(name: "wcstof", scope: !360, file: !360, line: 382, type: !525, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!525 = !DISubroutineType(types: !526)
!526 = !{!262, !220, !521}
!527 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !528, line: 193)
!528 = !DISubprogram(name: "wcstok", scope: !360, file: !360, line: 217, type: !529, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!529 = !DISubroutineType(types: !530)
!530 = !{!174, !173, !220, !521}
!531 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !532, line: 194)
!532 = !DISubprogram(name: "wcstol", scope: !360, file: !360, line: 428, type: !533, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!533 = !DISubroutineType(types: !534)
!534 = !{!91, !220, !521, !82}
!535 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !536, line: 195)
!536 = !DISubprogram(name: "wcstoul", scope: !360, file: !360, line: 433, type: !537, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!537 = !DISubroutineType(types: !538)
!538 = !{!127, !220, !521, !82}
!539 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !540, line: 196)
!540 = !DISubprogram(name: "wcsxfrm", scope: !360, file: !360, line: 135, type: !541, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!541 = !DISubroutineType(types: !542)
!542 = !{!125, !173, !220, !125}
!543 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !544, line: 197)
!544 = !DISubprogram(name: "wctob", scope: !360, file: !360, line: 288, type: !545, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!545 = !DISubroutineType(types: !546)
!546 = !{!82, !356}
!547 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !548, line: 198)
!548 = !DISubprogram(name: "wmemcmp", scope: !360, file: !360, line: 258, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!549 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !550, line: 199)
!550 = !DISubprogram(name: "wmemcpy", scope: !360, file: !360, line: 262, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!551 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !552, line: 200)
!552 = !DISubprogram(name: "wmemmove", scope: !360, file: !360, line: 267, type: !553, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!553 = !DISubroutineType(types: !554)
!554 = !{!174, !174, !221, !125}
!555 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !556, line: 201)
!556 = !DISubprogram(name: "wmemset", scope: !360, file: !360, line: 271, type: !557, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!557 = !DISubroutineType(types: !558)
!558 = !{!174, !174, !175, !125}
!559 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !560, line: 202)
!560 = !DISubprogram(name: "wprintf", scope: !360, file: !360, line: 587, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!561 = !DISubroutineType(types: !562)
!562 = !{!82, !220, null}
!563 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !564, line: 203)
!564 = !DISubprogram(name: "wscanf", scope: !360, file: !360, line: 628, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!565 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !566, line: 204)
!566 = !DISubprogram(name: "wcschr", scope: !360, file: !360, line: 164, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!567 = !DISubroutineType(types: !568)
!568 = !{!174, !221, !175}
!569 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !570, line: 205)
!570 = !DISubprogram(name: "wcspbrk", scope: !360, file: !360, line: 201, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!571 = !DISubroutineType(types: !572)
!572 = !{!174, !221, !221}
!573 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !574, line: 206)
!574 = !DISubprogram(name: "wcsrchr", scope: !360, file: !360, line: 174, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!575 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !576, line: 207)
!576 = !DISubprogram(name: "wcsstr", scope: !360, file: !360, line: 212, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!577 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !578, line: 208)
!578 = !DISubprogram(name: "wmemchr", scope: !360, file: !360, line: 253, type: !579, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!579 = !DISubroutineType(types: !580)
!580 = !{!174, !221, !175, !125}
!581 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !582, line: 248)
!582 = !DISubprogram(name: "wcstold", scope: !360, file: !360, line: 384, type: !583, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!583 = !DISubroutineType(types: !584)
!584 = !{!267, !220, !521}
!585 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !586, line: 257)
!586 = !DISubprogram(name: "wcstoll", scope: !360, file: !360, line: 441, type: !587, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!587 = !DISubroutineType(types: !588)
!588 = !{!233, !220, !521, !82}
!589 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !590, line: 258)
!590 = !DISubprogram(name: "wcstoull", scope: !360, file: !360, line: 448, type: !591, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!591 = !DISubroutineType(types: !592)
!592 = !{!257, !220, !521, !82}
!593 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 264)
!594 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 265)
!595 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 266)
!596 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 280)
!597 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 283)
!598 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 286)
!599 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 289)
!600 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 293)
!601 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 294)
!602 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 295)
!603 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !604, line: 48)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9, line: 235, baseType: !605)
!605 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!606 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !607, line: 49)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9, line: 216, baseType: !608)
!608 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!609 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !610, line: 50)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !9, line: 178, baseType: !82)
!611 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !612, line: 51)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !9, line: 107, baseType: !91)
!613 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !614, line: 53)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !9, line: 245, baseType: !604)
!615 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !616, line: 54)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !9, line: 228, baseType: !607)
!617 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !618, line: 55)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !9, line: 197, baseType: !610)
!619 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !620, line: 56)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !9, line: 123, baseType: !612)
!621 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !622, line: 58)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !9, line: 243, baseType: !604)
!623 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !624, line: 59)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !9, line: 226, baseType: !607)
!625 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !626, line: 60)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !9, line: 195, baseType: !610)
!627 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !628, line: 61)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !9, line: 121, baseType: !612)
!629 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !630, line: 63)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !9, line: 276, baseType: !91)
!631 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !632, line: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !9, line: 263, baseType: !612)
!633 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !62, line: 66)
!634 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !28, line: 67)
!635 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !8, line: 68)
!636 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !637, line: 69)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !9, line: 109, baseType: !127)
!638 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !639, line: 71)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !9, line: 246, baseType: !62)
!640 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !641, line: 72)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !9, line: 229, baseType: !28)
!642 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !643, line: 73)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !9, line: 198, baseType: !8)
!644 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !645, line: 74)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !9, line: 124, baseType: !637)
!646 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !647, line: 76)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !9, line: 244, baseType: !62)
!648 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !649, line: 77)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !9, line: 227, baseType: !28)
!650 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !651, line: 78)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !9, line: 196, baseType: !8)
!652 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !653, line: 79)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !9, line: 122, baseType: !637)
!654 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !655, line: 81)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !9, line: 277, baseType: !127)
!656 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !657, line: 82)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !9, line: 270, baseType: !637)
!658 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !659, line: 44)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", scope: !75, file: !76, line: 231, baseType: !127)
!660 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !661, line: 45)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", scope: !75, file: !76, line: 232, baseType: !91)
!662 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !663, line: 53)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !664, line: 51, flags: DIFlagFwdDecl, identifier: "_ZTS5lconv")
!664 = !DIFile(filename: "/usr/include/locale.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!665 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !666, line: 54)
!666 = !DISubprogram(name: "setlocale", scope: !664, file: !664, line: 122, type: !667, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!667 = !DISubroutineType(types: !668)
!668 = !{!152, !82, !109}
!669 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !670, line: 55)
!670 = !DISubprogram(name: "localeconv", scope: !664, file: !664, line: 125, type: !671, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!671 = !DISubroutineType(types: !672)
!672 = !{!673}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!674 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !675, line: 64)
!675 = !DISubprogram(name: "isalnum", scope: !676, file: !676, line: 108, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!676 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!677 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !678, line: 65)
!678 = !DISubprogram(name: "isalpha", scope: !676, file: !676, line: 109, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!679 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !680, line: 66)
!680 = !DISubprogram(name: "iscntrl", scope: !676, file: !676, line: 110, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!681 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !682, line: 67)
!682 = !DISubprogram(name: "isdigit", scope: !676, file: !676, line: 111, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!683 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !684, line: 68)
!684 = !DISubprogram(name: "isgraph", scope: !676, file: !676, line: 113, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!685 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !686, line: 69)
!686 = !DISubprogram(name: "islower", scope: !676, file: !676, line: 112, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!687 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !688, line: 70)
!688 = !DISubprogram(name: "isprint", scope: !676, file: !676, line: 114, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!689 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !690, line: 71)
!690 = !DISubprogram(name: "ispunct", scope: !676, file: !676, line: 115, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!691 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !692, line: 72)
!692 = !DISubprogram(name: "isspace", scope: !676, file: !676, line: 116, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!693 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !694, line: 73)
!694 = !DISubprogram(name: "isupper", scope: !676, file: !676, line: 117, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!695 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !696, line: 74)
!696 = !DISubprogram(name: "isxdigit", scope: !676, file: !676, line: 118, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!697 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !698, line: 75)
!698 = !DISubprogram(name: "tolower", scope: !676, file: !676, line: 122, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!699 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !700, line: 76)
!700 = !DISubprogram(name: "toupper", scope: !676, file: !676, line: 125, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!701 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !702, line: 87)
!702 = !DISubprogram(name: "isblank", scope: !676, file: !676, line: 130, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!703 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !704, line: 98)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !705, line: 7, baseType: !370)
!705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!706 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !707, line: 99)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !708, line: 78, baseType: !709)
!708 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "_G_fpos_t", file: !710, line: 30, baseType: !711)
!710 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/_G_config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !710, line: 26, flags: DIFlagFwdDecl, identifier: "_ZTS9_G_fpos_t")
!712 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !713, line: 101)
!713 = !DISubprogram(name: "clearerr", scope: !708, file: !708, line: 757, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !716}
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!717 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !718, line: 102)
!718 = !DISubprogram(name: "fclose", scope: !708, file: !708, line: 199, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!719 = !DISubroutineType(types: !720)
!720 = !{!82, !716}
!721 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !722, line: 103)
!722 = !DISubprogram(name: "feof", scope: !708, file: !708, line: 759, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!723 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !724, line: 104)
!724 = !DISubprogram(name: "ferror", scope: !708, file: !708, line: 761, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!725 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !726, line: 105)
!726 = !DISubprogram(name: "fflush", scope: !708, file: !708, line: 204, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!727 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !728, line: 106)
!728 = !DISubprogram(name: "fgetc", scope: !708, file: !708, line: 477, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!729 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !730, line: 107)
!730 = !DISubprogram(name: "fgetpos", scope: !708, file: !708, line: 731, type: !731, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!731 = !DISubroutineType(types: !732)
!732 = !{!82, !733, !734}
!733 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !716)
!734 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!736 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !737, line: 108)
!737 = !DISubprogram(name: "fgets", scope: !708, file: !708, line: 564, type: !738, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!738 = !DISubroutineType(types: !739)
!739 = !{!152, !219, !82, !733}
!740 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !741, line: 109)
!741 = !DISubprogram(name: "fopen", scope: !708, file: !708, line: 232, type: !742, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!742 = !DISubroutineType(types: !743)
!743 = !{!716, !176, !176}
!744 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !745, line: 110)
!745 = !DISubprogram(name: "fprintf", scope: !708, file: !708, line: 312, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!746 = !DISubroutineType(types: !747)
!747 = !{!82, !733, !176, null}
!748 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !749, line: 111)
!749 = !DISubprogram(name: "fputc", scope: !708, file: !708, line: 517, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!750 = !DISubroutineType(types: !751)
!751 = !{!82, !82, !716}
!752 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !753, line: 112)
!753 = !DISubprogram(name: "fputs", scope: !708, file: !708, line: 626, type: !754, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!754 = !DISubroutineType(types: !755)
!755 = !{!82, !176, !733}
!756 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !757, line: 113)
!757 = !DISubprogram(name: "fread", scope: !708, file: !708, line: 646, type: !758, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!758 = !DISubroutineType(types: !759)
!759 = !{!125, !760, !125, !125, !733}
!760 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!761 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !762, line: 114)
!762 = !DISubprogram(name: "freopen", scope: !708, file: !708, line: 238, type: !763, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!763 = !DISubroutineType(types: !764)
!764 = !{!716, !176, !176, !733}
!765 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !766, line: 115)
!766 = !DISubprogram(name: "fscanf", scope: !708, file: !708, line: 377, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!767 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !768, line: 116)
!768 = !DISubprogram(name: "fseek", scope: !708, file: !708, line: 684, type: !769, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!769 = !DISubroutineType(types: !770)
!770 = !{!82, !716, !91, !82}
!771 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !772, line: 117)
!772 = !DISubprogram(name: "fsetpos", scope: !708, file: !708, line: 736, type: !773, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!773 = !DISubroutineType(types: !774)
!774 = !{!82, !716, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!777 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !778, line: 118)
!778 = !DISubprogram(name: "ftell", scope: !708, file: !708, line: 689, type: !779, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!779 = !DISubroutineType(types: !780)
!780 = !{!91, !716}
!781 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !782, line: 119)
!782 = !DISubprogram(name: "fwrite", scope: !708, file: !708, line: 652, type: !783, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!783 = !DISubroutineType(types: !784)
!784 = !{!125, !785, !125, !125, !733}
!785 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !68)
!786 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !787, line: 120)
!787 = !DISubprogram(name: "getc", scope: !708, file: !708, line: 478, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!788 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !789, line: 121)
!789 = !DISubprogram(name: "getchar", scope: !708, file: !708, line: 484, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!790 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !791, line: 124)
!791 = !DISubprogram(name: "gets", scope: !708, file: !708, line: 577, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!792 = !DISubroutineType(types: !793)
!793 = !{!152, !152}
!794 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !795, line: 126)
!795 = !DISubprogram(name: "perror", scope: !708, file: !708, line: 775, type: !796, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!796 = !DISubroutineType(types: !797)
!797 = !{null, !109}
!798 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !799, line: 127)
!799 = !DISubprogram(name: "printf", scope: !708, file: !708, line: 318, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!800 = !DISubroutineType(types: !801)
!801 = !{!82, !176, null}
!802 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !803, line: 128)
!803 = !DISubprogram(name: "putc", scope: !708, file: !708, line: 518, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!804 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !805, line: 129)
!805 = !DISubprogram(name: "putchar", scope: !708, file: !708, line: 524, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!806 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !807, line: 130)
!807 = !DISubprogram(name: "puts", scope: !708, file: !708, line: 632, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!808 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !809, line: 131)
!809 = !DISubprogram(name: "remove", scope: !708, file: !708, line: 144, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!810 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !811, line: 132)
!811 = !DISubprogram(name: "rename", scope: !708, file: !708, line: 146, type: !812, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!812 = !DISubroutineType(types: !813)
!813 = !{!82, !109, !109}
!814 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !815, line: 133)
!815 = !DISubprogram(name: "rewind", scope: !708, file: !708, line: 694, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!816 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !817, line: 134)
!817 = !DISubprogram(name: "scanf", scope: !708, file: !708, line: 383, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!818 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !819, line: 135)
!819 = !DISubprogram(name: "setbuf", scope: !708, file: !708, line: 290, type: !820, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!820 = !DISubroutineType(types: !821)
!821 = !{null, !733, !219}
!822 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !823, line: 136)
!823 = !DISubprogram(name: "setvbuf", scope: !708, file: !708, line: 294, type: !824, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!824 = !DISubroutineType(types: !825)
!825 = !{!82, !733, !219, !82, !125}
!826 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !827, line: 137)
!827 = !DISubprogram(name: "sprintf", scope: !708, file: !708, line: 320, type: !828, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!828 = !DISubroutineType(types: !829)
!829 = !{!82, !219, !176, null}
!830 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !831, line: 138)
!831 = !DISubprogram(name: "sscanf", scope: !708, file: !708, line: 385, type: !832, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!832 = !DISubroutineType(types: !833)
!833 = !{!82, !176, !176, null}
!834 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !835, line: 139)
!835 = !DISubprogram(name: "tmpfile", scope: !708, file: !708, line: 159, type: !836, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!836 = !DISubroutineType(types: !837)
!837 = !{!716}
!838 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !839, line: 141)
!839 = !DISubprogram(name: "tmpnam", scope: !708, file: !708, line: 173, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!840 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !841, line: 143)
!841 = !DISubprogram(name: "ungetc", scope: !708, file: !708, line: 639, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!842 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !843, line: 144)
!843 = !DISubprogram(name: "vfprintf", scope: !708, file: !708, line: 327, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!844 = !DISubroutineType(types: !845)
!845 = !{!82, !733, !176, !444}
!846 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !847, line: 145)
!847 = !DISubprogram(name: "vprintf", scope: !708, file: !708, line: 333, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!848 = !DISubroutineType(types: !849)
!849 = !{!82, !176, !444}
!850 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !851, line: 146)
!851 = !DISubprogram(name: "vsprintf", scope: !708, file: !708, line: 335, type: !852, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!852 = !DISubroutineType(types: !853)
!853 = !{!82, !219, !176, !444}
!854 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !855, line: 175)
!855 = !DISubprogram(name: "snprintf", scope: !708, file: !708, line: 340, type: !856, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!856 = !DISubroutineType(types: !857)
!857 = !{!82, !219, !125, !176, null}
!858 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !859, line: 176)
!859 = !DISubprogram(name: "vfscanf", scope: !708, file: !708, line: 420, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!860 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !861, line: 177)
!861 = !DISubprogram(name: "vscanf", scope: !708, file: !708, line: 428, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!862 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !863, line: 178)
!863 = !DISubprogram(name: "vsnprintf", scope: !708, file: !708, line: 344, type: !864, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!864 = !DISubroutineType(types: !865)
!865 = !{!82, !219, !125, !176, !444}
!866 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !867, line: 179)
!867 = !DISubprogram(name: "vsscanf", scope: !708, file: !708, line: 432, type: !868, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!868 = !DISubroutineType(types: !869)
!869 = !{!82, !176, !176, !444}
!870 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !855, line: 185)
!871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !859, line: 186)
!872 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !861, line: 187)
!873 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !863, line: 188)
!874 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !867, line: 189)
!875 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !876, line: 83)
!876 = !DISubprogram(name: "acos", scope: !877, file: !877, line: 53, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!877 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/mathcalls.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!878 = !DISubroutineType(types: !879)
!879 = !{!108, !108}
!880 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !881, line: 102)
!881 = !DISubprogram(name: "asin", scope: !877, file: !877, line: 55, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!882 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !883, line: 121)
!883 = !DISubprogram(name: "atan", scope: !877, file: !877, line: 57, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!884 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !885, line: 140)
!885 = !DISubprogram(name: "atan2", scope: !877, file: !877, line: 59, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!886 = !DISubroutineType(types: !887)
!887 = !{!108, !108, !108}
!888 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !889, line: 161)
!889 = !DISubprogram(name: "ceil", scope: !877, file: !877, line: 159, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!890 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !891, line: 180)
!891 = !DISubprogram(name: "cos", scope: !877, file: !877, line: 62, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!892 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !893, line: 199)
!893 = !DISubprogram(name: "cosh", scope: !877, file: !877, line: 71, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!894 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !895, line: 218)
!895 = !DISubprogram(name: "exp", scope: !877, file: !877, line: 95, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!896 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !897, line: 237)
!897 = !DISubprogram(name: "fabs", scope: !877, file: !877, line: 162, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!898 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !899, line: 256)
!899 = !DISubprogram(name: "floor", scope: !877, file: !877, line: 165, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!900 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !901, line: 275)
!901 = !DISubprogram(name: "fmod", scope: !877, file: !877, line: 168, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!902 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !903, line: 296)
!903 = !DISubprogram(name: "frexp", scope: !877, file: !877, line: 98, type: !904, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!904 = !DISubroutineType(types: !905)
!905 = !{!108, !108, !906}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!907 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !908, line: 315)
!908 = !DISubprogram(name: "ldexp", scope: !877, file: !877, line: 101, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!909 = !DISubroutineType(types: !910)
!910 = !{!108, !108, !82}
!911 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !912, line: 334)
!912 = !DISubprogram(name: "log", scope: !877, file: !877, line: 104, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!913 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !914, line: 353)
!914 = !DISubprogram(name: "log10", scope: !877, file: !877, line: 107, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !916, line: 372)
!916 = !DISubprogram(name: "modf", scope: !877, file: !877, line: 110, type: !917, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!917 = !DISubroutineType(types: !918)
!918 = !{!108, !108, !919}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!920 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !921, line: 384)
!921 = !DISubprogram(name: "pow", scope: !877, file: !877, line: 140, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!922 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !923, line: 421)
!923 = !DISubprogram(name: "sin", scope: !877, file: !877, line: 64, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!924 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !925, line: 440)
!925 = !DISubprogram(name: "sinh", scope: !877, file: !877, line: 73, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!926 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !927, line: 459)
!927 = !DISubprogram(name: "sqrt", scope: !877, file: !877, line: 143, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!928 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !929, line: 478)
!929 = !DISubprogram(name: "tan", scope: !877, file: !877, line: 66, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!930 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !931, line: 497)
!931 = !DISubprogram(name: "tanh", scope: !877, file: !877, line: 75, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!932 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !933, line: 1080)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_t", file: !934, line: 150, baseType: !108)
!934 = !DIFile(filename: "/usr/include/math.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!935 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !936, line: 1081)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "float_t", file: !934, line: 149, baseType: !262)
!937 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !938, line: 1084)
!938 = !DISubprogram(name: "acosh", scope: !877, file: !877, line: 85, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!939 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !940, line: 1085)
!940 = !DISubprogram(name: "acoshf", scope: !877, file: !877, line: 85, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!941 = !DISubroutineType(types: !942)
!942 = !{!262, !262}
!943 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !944, line: 1086)
!944 = !DISubprogram(name: "acoshl", scope: !877, file: !877, line: 85, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!945 = !DISubroutineType(types: !946)
!946 = !{!267, !267}
!947 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !948, line: 1088)
!948 = !DISubprogram(name: "asinh", scope: !877, file: !877, line: 87, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!949 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !950, line: 1089)
!950 = !DISubprogram(name: "asinhf", scope: !877, file: !877, line: 87, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!951 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !952, line: 1090)
!952 = !DISubprogram(name: "asinhl", scope: !877, file: !877, line: 87, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!953 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !954, line: 1092)
!954 = !DISubprogram(name: "atanh", scope: !877, file: !877, line: 89, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!955 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !956, line: 1093)
!956 = !DISubprogram(name: "atanhf", scope: !877, file: !877, line: 89, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!957 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !958, line: 1094)
!958 = !DISubprogram(name: "atanhl", scope: !877, file: !877, line: 89, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!959 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !960, line: 1096)
!960 = !DISubprogram(name: "cbrt", scope: !877, file: !877, line: 152, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!961 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !962, line: 1097)
!962 = !DISubprogram(name: "cbrtf", scope: !877, file: !877, line: 152, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!963 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !964, line: 1098)
!964 = !DISubprogram(name: "cbrtl", scope: !877, file: !877, line: 152, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!965 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !966, line: 1100)
!966 = !DISubprogram(name: "copysign", scope: !877, file: !877, line: 196, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!967 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !968, line: 1101)
!968 = !DISubprogram(name: "copysignf", scope: !877, file: !877, line: 196, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!969 = !DISubroutineType(types: !970)
!970 = !{!262, !262, !262}
!971 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !972, line: 1102)
!972 = !DISubprogram(name: "copysignl", scope: !877, file: !877, line: 196, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!973 = !DISubroutineType(types: !974)
!974 = !{!267, !267, !267}
!975 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !976, line: 1104)
!976 = !DISubprogram(name: "erf", scope: !877, file: !877, line: 228, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!977 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !978, line: 1105)
!978 = !DISubprogram(name: "erff", scope: !877, file: !877, line: 228, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!979 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !980, line: 1106)
!980 = !DISubprogram(name: "erfl", scope: !877, file: !877, line: 228, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!981 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !982, line: 1108)
!982 = !DISubprogram(name: "erfc", scope: !877, file: !877, line: 229, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!983 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !984, line: 1109)
!984 = !DISubprogram(name: "erfcf", scope: !877, file: !877, line: 229, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!985 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !986, line: 1110)
!986 = !DISubprogram(name: "erfcl", scope: !877, file: !877, line: 229, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!987 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !988, line: 1112)
!988 = !DISubprogram(name: "exp2", scope: !877, file: !877, line: 130, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!989 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !990, line: 1113)
!990 = !DISubprogram(name: "exp2f", scope: !877, file: !877, line: 130, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!991 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !992, line: 1114)
!992 = !DISubprogram(name: "exp2l", scope: !877, file: !877, line: 130, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !994, line: 1116)
!994 = !DISubprogram(name: "expm1", scope: !877, file: !877, line: 119, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!995 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !996, line: 1117)
!996 = !DISubprogram(name: "expm1f", scope: !877, file: !877, line: 119, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!997 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !998, line: 1118)
!998 = !DISubprogram(name: "expm1l", scope: !877, file: !877, line: 119, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!999 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1000, line: 1120)
!1000 = !DISubprogram(name: "fdim", scope: !877, file: !877, line: 326, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1001 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1002, line: 1121)
!1002 = !DISubprogram(name: "fdimf", scope: !877, file: !877, line: 326, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1003 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1004, line: 1122)
!1004 = !DISubprogram(name: "fdiml", scope: !877, file: !877, line: 326, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1005 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1006, line: 1124)
!1006 = !DISubprogram(name: "fma", scope: !877, file: !877, line: 335, type: !1007, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!108, !108, !108, !108}
!1009 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1010, line: 1125)
!1010 = !DISubprogram(name: "fmaf", scope: !877, file: !877, line: 335, type: !1011, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!262, !262, !262, !262}
!1013 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1014, line: 1126)
!1014 = !DISubprogram(name: "fmal", scope: !877, file: !877, line: 335, type: !1015, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!267, !267, !267, !267}
!1017 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1018, line: 1128)
!1018 = !DISubprogram(name: "fmax", scope: !877, file: !877, line: 329, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1019 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1020, line: 1129)
!1020 = !DISubprogram(name: "fmaxf", scope: !877, file: !877, line: 329, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1021 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1022, line: 1130)
!1022 = !DISubprogram(name: "fmaxl", scope: !877, file: !877, line: 329, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1023 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1024, line: 1132)
!1024 = !DISubprogram(name: "fmin", scope: !877, file: !877, line: 332, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1025 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1026, line: 1133)
!1026 = !DISubprogram(name: "fminf", scope: !877, file: !877, line: 332, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1027 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1028, line: 1134)
!1028 = !DISubprogram(name: "fminl", scope: !877, file: !877, line: 332, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1029 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1030, line: 1136)
!1030 = !DISubprogram(name: "hypot", scope: !877, file: !877, line: 147, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1031 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1032, line: 1137)
!1032 = !DISubprogram(name: "hypotf", scope: !877, file: !877, line: 147, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1033 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1034, line: 1138)
!1034 = !DISubprogram(name: "hypotl", scope: !877, file: !877, line: 147, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1035 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1036, line: 1140)
!1036 = !DISubprogram(name: "ilogb", scope: !877, file: !877, line: 280, type: !1037, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!82, !108}
!1039 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1040, line: 1141)
!1040 = !DISubprogram(name: "ilogbf", scope: !877, file: !877, line: 280, type: !1041, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!82, !262}
!1043 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1044, line: 1142)
!1044 = !DISubprogram(name: "ilogbl", scope: !877, file: !877, line: 280, type: !1045, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!82, !267}
!1047 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1048, line: 1144)
!1048 = !DISubprogram(name: "lgamma", scope: !877, file: !877, line: 230, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1049 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1050, line: 1145)
!1050 = !DISubprogram(name: "lgammaf", scope: !877, file: !877, line: 230, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1051 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1052, line: 1146)
!1052 = !DISubprogram(name: "lgammal", scope: !877, file: !877, line: 230, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1053 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1054, line: 1149)
!1054 = !DISubprogram(name: "llrint", scope: !877, file: !877, line: 316, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!233, !108}
!1057 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1058, line: 1150)
!1058 = !DISubprogram(name: "llrintf", scope: !877, file: !877, line: 316, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!233, !262}
!1061 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1062, line: 1151)
!1062 = !DISubprogram(name: "llrintl", scope: !877, file: !877, line: 316, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!233, !267}
!1065 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1066, line: 1153)
!1066 = !DISubprogram(name: "llround", scope: !877, file: !877, line: 322, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1067 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1068, line: 1154)
!1068 = !DISubprogram(name: "llroundf", scope: !877, file: !877, line: 322, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1069 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1070, line: 1155)
!1070 = !DISubprogram(name: "llroundl", scope: !877, file: !877, line: 322, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1071 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1072, line: 1158)
!1072 = !DISubprogram(name: "log1p", scope: !877, file: !877, line: 122, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1073 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1074, line: 1159)
!1074 = !DISubprogram(name: "log1pf", scope: !877, file: !877, line: 122, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1075 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1076, line: 1160)
!1076 = !DISubprogram(name: "log1pl", scope: !877, file: !877, line: 122, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1077 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1078, line: 1162)
!1078 = !DISubprogram(name: "log2", scope: !877, file: !877, line: 133, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1079 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1080, line: 1163)
!1080 = !DISubprogram(name: "log2f", scope: !877, file: !877, line: 133, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1081 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1082, line: 1164)
!1082 = !DISubprogram(name: "log2l", scope: !877, file: !877, line: 133, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1083 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1084, line: 1166)
!1084 = !DISubprogram(name: "logb", scope: !877, file: !877, line: 125, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1085 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1086, line: 1167)
!1086 = !DISubprogram(name: "logbf", scope: !877, file: !877, line: 125, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1087 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1088, line: 1168)
!1088 = !DISubprogram(name: "logbl", scope: !877, file: !877, line: 125, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1089 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1090, line: 1170)
!1090 = !DISubprogram(name: "lrint", scope: !877, file: !877, line: 314, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!91, !108}
!1093 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1094, line: 1171)
!1094 = !DISubprogram(name: "lrintf", scope: !877, file: !877, line: 314, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!91, !262}
!1097 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1098, line: 1172)
!1098 = !DISubprogram(name: "lrintl", scope: !877, file: !877, line: 314, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!91, !267}
!1101 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1102, line: 1174)
!1102 = !DISubprogram(name: "lround", scope: !877, file: !877, line: 320, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1103 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1104, line: 1175)
!1104 = !DISubprogram(name: "lroundf", scope: !877, file: !877, line: 320, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1105 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1106, line: 1176)
!1106 = !DISubprogram(name: "lroundl", scope: !877, file: !877, line: 320, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1107 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1108, line: 1178)
!1108 = !DISubprogram(name: "nan", scope: !877, file: !877, line: 201, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1109 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1110, line: 1179)
!1110 = !DISubprogram(name: "nanf", scope: !877, file: !877, line: 201, type: !1111, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!262, !109}
!1113 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1114, line: 1180)
!1114 = !DISubprogram(name: "nanl", scope: !877, file: !877, line: 201, type: !1115, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!267, !109}
!1117 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1118, line: 1182)
!1118 = !DISubprogram(name: "nearbyint", scope: !877, file: !877, line: 294, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1119 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1120, line: 1183)
!1120 = !DISubprogram(name: "nearbyintf", scope: !877, file: !877, line: 294, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1122, line: 1184)
!1122 = !DISubprogram(name: "nearbyintl", scope: !877, file: !877, line: 294, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1123 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1124, line: 1186)
!1124 = !DISubprogram(name: "nextafter", scope: !877, file: !877, line: 259, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1125 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1126, line: 1187)
!1126 = !DISubprogram(name: "nextafterf", scope: !877, file: !877, line: 259, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1127 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1128, line: 1188)
!1128 = !DISubprogram(name: "nextafterl", scope: !877, file: !877, line: 259, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1129 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1130, line: 1190)
!1130 = !DISubprogram(name: "nexttoward", scope: !877, file: !877, line: 261, type: !1131, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!108, !108, !267}
!1133 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1134, line: 1191)
!1134 = !DISubprogram(name: "nexttowardf", scope: !877, file: !877, line: 261, type: !1135, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!262, !262, !267}
!1137 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1138, line: 1192)
!1138 = !DISubprogram(name: "nexttowardl", scope: !877, file: !877, line: 261, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1139 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1140, line: 1194)
!1140 = !DISubprogram(name: "remainder", scope: !877, file: !877, line: 272, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1142, line: 1195)
!1142 = !DISubprogram(name: "remainderf", scope: !877, file: !877, line: 272, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1143 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1144, line: 1196)
!1144 = !DISubprogram(name: "remainderl", scope: !877, file: !877, line: 272, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1146, line: 1198)
!1146 = !DISubprogram(name: "remquo", scope: !877, file: !877, line: 307, type: !1147, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!108, !108, !108, !906}
!1149 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1150, line: 1199)
!1150 = !DISubprogram(name: "remquof", scope: !877, file: !877, line: 307, type: !1151, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!262, !262, !262, !906}
!1153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1154, line: 1200)
!1154 = !DISubprogram(name: "remquol", scope: !877, file: !877, line: 307, type: !1155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!267, !267, !267, !906}
!1157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1158, line: 1202)
!1158 = !DISubprogram(name: "rint", scope: !877, file: !877, line: 256, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1159 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1160, line: 1203)
!1160 = !DISubprogram(name: "rintf", scope: !877, file: !877, line: 256, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1162, line: 1204)
!1162 = !DISubprogram(name: "rintl", scope: !877, file: !877, line: 256, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1163 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1164, line: 1206)
!1164 = !DISubprogram(name: "round", scope: !877, file: !877, line: 298, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1166, line: 1207)
!1166 = !DISubprogram(name: "roundf", scope: !877, file: !877, line: 298, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1168, line: 1208)
!1168 = !DISubprogram(name: "roundl", scope: !877, file: !877, line: 298, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1170, line: 1210)
!1170 = !DISubprogram(name: "scalbln", scope: !877, file: !877, line: 290, type: !1171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!108, !108, !91}
!1173 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1174, line: 1211)
!1174 = !DISubprogram(name: "scalblnf", scope: !877, file: !877, line: 290, type: !1175, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!262, !262, !91}
!1177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1178, line: 1212)
!1178 = !DISubprogram(name: "scalblnl", scope: !877, file: !877, line: 290, type: !1179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!267, !267, !91}
!1181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1182, line: 1214)
!1182 = !DISubprogram(name: "scalbn", scope: !877, file: !877, line: 276, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1183 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1184, line: 1215)
!1184 = !DISubprogram(name: "scalbnf", scope: !877, file: !877, line: 276, type: !1185, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!262, !262, !82}
!1187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1188, line: 1216)
!1188 = !DISubprogram(name: "scalbnl", scope: !877, file: !877, line: 276, type: !1189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!267, !267, !82}
!1191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1192, line: 1218)
!1192 = !DISubprogram(name: "tgamma", scope: !877, file: !877, line: 235, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1193 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1194, line: 1219)
!1194 = !DISubprogram(name: "tgammaf", scope: !877, file: !877, line: 235, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1196, line: 1220)
!1196 = !DISubprogram(name: "tgammal", scope: !877, file: !877, line: 235, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1197 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1198, line: 1222)
!1198 = !DISubprogram(name: "trunc", scope: !877, file: !877, line: 302, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1200, line: 1223)
!1200 = !DISubprogram(name: "truncf", scope: !877, file: !877, line: 302, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1201 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1202, line: 1224)
!1202 = !DISubprogram(name: "truncl", scope: !877, file: !877, line: 302, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 58)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "fenv_t", file: !1205, line: 94, baseType: !1206)
!1205 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1205, line: 75, flags: DIFlagFwdDecl, identifier: "_ZTS6fenv_t")
!1207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 59)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "fexcept_t", file: !1205, line: 68, baseType: !29)
!1209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 62)
!1210 = !DISubprogram(name: "feclearexcept", scope: !1211, file: !1211, line: 71, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1211 = !DIFile(filename: "/usr/include/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1212 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 63)
!1213 = !DISubprogram(name: "fegetexceptflag", scope: !1211, file: !1211, line: 75, type: !1214, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!82, !1216, !82}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 64)
!1218 = !DISubprogram(name: "feraiseexcept", scope: !1211, file: !1211, line: 78, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 65)
!1220 = !DISubprogram(name: "fesetexceptflag", scope: !1211, file: !1211, line: 88, type: !1221, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!82, !1223, !82}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1225 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 66)
!1226 = !DISubprogram(name: "fetestexcept", scope: !1211, file: !1211, line: 92, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 68)
!1228 = !DISubprogram(name: "fegetround", scope: !1211, file: !1211, line: 104, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 69)
!1230 = !DISubprogram(name: "fesetround", scope: !1211, file: !1211, line: 107, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1231 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 71)
!1232 = !DISubprogram(name: "fegetenv", scope: !1211, file: !1211, line: 114, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!82, !1235}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 72)
!1237 = !DISubprogram(name: "feholdexcept", scope: !1211, file: !1211, line: 119, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 73)
!1239 = !DISubprogram(name: "fesetenv", scope: !1211, file: !1211, line: 123, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!82, !1242}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!1244 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 74)
!1245 = !DISubprogram(name: "feupdateenv", scope: !1211, file: !1211, line: 128, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 61)
!1247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 62)
!1248 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 65)
!1249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 66)
!1250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 67)
!1251 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 68)
!1252 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 69)
!1253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 71)
!1254 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 72)
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 74)
!1256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 75)
!1257 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 76)
!1258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 77)
!1259 = !{i32 2, !"Dwarf Version", i32 4}
!1260 = !{i32 2, !"Debug Info Version", i32 3}
!1261 = distinct !DISubprogram(name: "__remill_basic_block", scope: !2, file: !2, line: 52, type: !1262, isLocal: false, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1264, !1267, !1950, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Memory", file: !1266, line: 36, flags: DIFlagFwdDecl, identifier: "_ZTS6Memory")
!1266 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Types.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1267 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "State", file: !27, line: 742, size: 27008, align: 128, elements: !1269, identifier: "_ZTS5State")
!1269 = !{!1270, !1282, !1491, !1511, !1541, !1566, !1595, !1632, !1642, !1703, !1728, !1752, !1932}
!1270 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1268, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArchState", file: !1272, line: 21, size: 128, elements: !1273, identifier: "_ZTS9ArchState")
!1272 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1273 = !{!1274, !1275, !1276}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call", scope: !1271, file: !1272, line: 23, baseType: !4, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1271, file: !1272, line: 25, baseType: !8, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !1272, line: 31, baseType: !1277, size: 64, offset: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !1272, line: 31, size: 64, elements: !1278, identifier: "_ZTSN9ArchStateUt_E")
!1278 = !{!1279, !1280, !1281}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_load", scope: !1277, file: !1272, line: 32, baseType: !637, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_store", scope: !1277, file: !1272, line: 33, baseType: !637, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call_vector", scope: !1277, file: !1272, line: 34, baseType: !8, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1268, file: !27, line: 747, baseType: !1283, size: 16384, offset: 128)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 16384, elements: !1369)
!1284 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "VectorReg", file: !27, line: 636, size: 512, align: 128, elements: !1285, identifier: "_ZTS9VectorReg")
!1285 = !{!1286, !1361, !1426}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1284, file: !27, line: 637, baseType: !1287, size: 128, align: 128)
!1287 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec128_t", file: !1266, line: 317, size: 128, elements: !1288, identifier: "_ZTS8vec128_t")
!1288 = !{!1289, !1298, !1305, !1312, !1317, !1324, !1329, !1334, !1339, !1344, !1349, !1354}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1287, file: !1266, line: 321, baseType: !1290, size: 128)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v1_t", file: !1266, line: 205, size: 128, elements: !1291, identifier: "_ZTS11uint128v1_t")
!1291 = !{!1292}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1290, file: !1266, line: 205, baseType: !1293, size: 128)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 128, elements: !1296)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint128_t", file: !1266, line: 46, baseType: !1295)
!1295 = !DIBasicType(name: "unsigned __int128", size: 128, encoding: DW_ATE_unsigned)
!1296 = !{!1297}
!1297 = !DISubrange(count: 1)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1287, file: !1266, line: 323, baseType: !1299, size: 128)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v16_t", file: !1266, line: 182, size: 128, elements: !1300, identifier: "_ZTS10uint8v16_t")
!1300 = !{!1301}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1299, file: !1266, line: 182, baseType: !1302, size: 128)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 128, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 16)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1287, file: !1266, line: 324, baseType: !1306, size: 128)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v8_t", file: !1266, line: 189, size: 128, elements: !1307, identifier: "_ZTS10uint16v8_t")
!1307 = !{!1308}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1306, file: !1266, line: 189, baseType: !1309, size: 128)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 8)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1287, file: !1266, line: 325, baseType: !1313, size: 128)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v4_t", file: !1266, line: 195, size: 128, elements: !1314, identifier: "_ZTS10uint32v4_t")
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1313, file: !1266, line: 195, baseType: !1316, size: 128)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !353)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1287, file: !1266, line: 326, baseType: !1318, size: 128)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v2_t", file: !1266, line: 200, size: 128, elements: !1319, identifier: "_ZTS10uint64v2_t")
!1319 = !{!1320}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1318, file: !1266, line: 200, baseType: !1321, size: 128)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 128, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: 2)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1287, file: !1266, line: 327, baseType: !1325, size: 128)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v4_t", file: !1266, line: 242, size: 128, elements: !1326, identifier: "_ZTS11float32v4_t")
!1326 = !{!1327}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1325, file: !1266, line: 242, baseType: !1328, size: 128)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !353)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1287, file: !1266, line: 328, baseType: !1330, size: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v2_t", file: !1266, line: 247, size: 128, elements: !1331, identifier: "_ZTS11float64v2_t")
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1330, file: !1266, line: 247, baseType: !1333, size: 128)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 128, elements: !1322)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1287, file: !1266, line: 330, baseType: !1335, size: 128)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v16_t", file: !1266, line: 213, size: 128, elements: !1336, identifier: "_ZTS9int8v16_t")
!1336 = !{!1337}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1335, file: !1266, line: 213, baseType: !1338, size: 128)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 128, elements: !1303)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1287, file: !1266, line: 331, baseType: !1340, size: 128)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v8_t", file: !1266, line: 220, size: 128, elements: !1341, identifier: "_ZTS9int16v8_t")
!1341 = !{!1342}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1340, file: !1266, line: 220, baseType: !1343, size: 128)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 128, elements: !1310)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1287, file: !1266, line: 332, baseType: !1345, size: 128)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v4_t", file: !1266, line: 226, size: 128, elements: !1346, identifier: "_ZTS9int32v4_t")
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1345, file: !1266, line: 226, baseType: !1348, size: 128)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 128, elements: !353)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1287, file: !1266, line: 333, baseType: !1350, size: 128)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v2_t", file: !1266, line: 231, size: 128, elements: !1351, identifier: "_ZTS9int64v2_t")
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1350, file: !1266, line: 231, baseType: !1353, size: 128)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 128, elements: !1322)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1287, file: !1266, line: 334, baseType: !1355, size: 128)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v1_t", file: !1266, line: 236, size: 128, elements: !1356, identifier: "_ZTS10int128v1_t")
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1355, file: !1266, line: 236, baseType: !1358, size: 128)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 128, elements: !1296)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int128_t", file: !1266, line: 47, baseType: !1360)
!1360 = !DIBasicType(name: "__int128", size: 128, encoding: DW_ATE_signed)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1284, file: !27, line: 638, baseType: !1362, size: 256, align: 128)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec256_t", file: !1266, line: 340, size: 256, elements: !1363, identifier: "_ZTS8vec256_t")
!1363 = !{!1364, !1371, !1376, !1381, !1386, !1391, !1396, !1401, !1406, !1411, !1416, !1421}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1362, file: !1266, line: 341, baseType: !1365, size: 256)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v32_t", file: !1266, line: 183, size: 256, elements: !1366, identifier: "_ZTS10uint8v32_t")
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1365, file: !1266, line: 183, baseType: !1368, size: 256)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 256, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1362, file: !1266, line: 342, baseType: !1372, size: 256)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v16_t", file: !1266, line: 190, size: 256, elements: !1373, identifier: "_ZTS11uint16v16_t")
!1373 = !{!1374}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1372, file: !1266, line: 190, baseType: !1375, size: 256)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !1303)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1362, file: !1266, line: 343, baseType: !1377, size: 256)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v8_t", file: !1266, line: 196, size: 256, elements: !1378, identifier: "_ZTS10uint32v8_t")
!1378 = !{!1379}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1377, file: !1266, line: 196, baseType: !1380, size: 256)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !1310)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1362, file: !1266, line: 344, baseType: !1382, size: 256)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v4_t", file: !1266, line: 201, size: 256, elements: !1383, identifier: "_ZTS10uint64v4_t")
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1382, file: !1266, line: 201, baseType: !1385, size: 256)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 256, elements: !353)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1362, file: !1266, line: 345, baseType: !1387, size: 256)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v2_t", file: !1266, line: 206, size: 256, elements: !1388, identifier: "_ZTS11uint128v2_t")
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1387, file: !1266, line: 206, baseType: !1390, size: 256)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 256, elements: !1322)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1362, file: !1266, line: 346, baseType: !1392, size: 256)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v8_t", file: !1266, line: 243, size: 256, elements: !1393, identifier: "_ZTS11float32v8_t")
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1392, file: !1266, line: 243, baseType: !1395, size: 256)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 256, elements: !1310)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1362, file: !1266, line: 347, baseType: !1397, size: 256)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v4_t", file: !1266, line: 248, size: 256, elements: !1398, identifier: "_ZTS11float64v4_t")
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1397, file: !1266, line: 248, baseType: !1400, size: 256)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !353)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1362, file: !1266, line: 349, baseType: !1402, size: 256)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v32_t", file: !1266, line: 214, size: 256, elements: !1403, identifier: "_ZTS9int8v32_t")
!1403 = !{!1404}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1402, file: !1266, line: 214, baseType: !1405, size: 256)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 256, elements: !1369)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1362, file: !1266, line: 350, baseType: !1407, size: 256)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v16_t", file: !1266, line: 221, size: 256, elements: !1408, identifier: "_ZTS10int16v16_t")
!1408 = !{!1409}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1407, file: !1266, line: 221, baseType: !1410, size: 256)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 256, elements: !1303)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1362, file: !1266, line: 351, baseType: !1412, size: 256)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v8_t", file: !1266, line: 227, size: 256, elements: !1413, identifier: "_ZTS9int32v8_t")
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1412, file: !1266, line: 227, baseType: !1415, size: 256)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 256, elements: !1310)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1362, file: !1266, line: 352, baseType: !1417, size: 256)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v4_t", file: !1266, line: 232, size: 256, elements: !1418, identifier: "_ZTS9int64v4_t")
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1417, file: !1266, line: 232, baseType: !1420, size: 256)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 256, elements: !353)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1362, file: !1266, line: 353, baseType: !1422, size: 256)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v2_t", file: !1266, line: 237, size: 256, elements: !1423, identifier: "_ZTS10int128v2_t")
!1423 = !{!1424}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1422, file: !1266, line: 237, baseType: !1425, size: 256)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 256, elements: !1322)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "zmm", scope: !1284, file: !27, line: 639, baseType: !1427, size: 512, align: 128)
!1427 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec512_t", file: !1266, line: 359, size: 512, elements: !1428, identifier: "_ZTS8vec512_t")
!1428 = !{!1429, !1436, !1441, !1446, !1451, !1456, !1461, !1466, !1471, !1476, !1481, !1486}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1427, file: !1266, line: 360, baseType: !1430, size: 512)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v64_t", file: !1266, line: 184, size: 512, elements: !1431, identifier: "_ZTS10uint8v64_t")
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1430, file: !1266, line: 184, baseType: !1433, size: 512)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 512, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1427, file: !1266, line: 361, baseType: !1437, size: 512)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v32_t", file: !1266, line: 191, size: 512, elements: !1438, identifier: "_ZTS11uint16v32_t")
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1437, file: !1266, line: 191, baseType: !1440, size: 512)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, elements: !1369)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1427, file: !1266, line: 362, baseType: !1442, size: 512)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v16_t", file: !1266, line: 197, size: 512, elements: !1443, identifier: "_ZTS11uint32v16_t")
!1443 = !{!1444}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1442, file: !1266, line: 197, baseType: !1445, size: 512)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !1303)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1427, file: !1266, line: 363, baseType: !1447, size: 512)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v8_t", file: !1266, line: 202, size: 512, elements: !1448, identifier: "_ZTS10uint64v8_t")
!1448 = !{!1449}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1447, file: !1266, line: 202, baseType: !1450, size: 512)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 512, elements: !1310)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1427, file: !1266, line: 364, baseType: !1452, size: 512)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v4_t", file: !1266, line: 207, size: 512, elements: !1453, identifier: "_ZTS11uint128v4_t")
!1453 = !{!1454}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1452, file: !1266, line: 207, baseType: !1455, size: 512)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 512, elements: !353)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1427, file: !1266, line: 365, baseType: !1457, size: 512)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v16_t", file: !1266, line: 244, size: 512, elements: !1458, identifier: "_ZTS12float32v16_t")
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1457, file: !1266, line: 244, baseType: !1460, size: 512)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 512, elements: !1303)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1427, file: !1266, line: 366, baseType: !1462, size: 512)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v8_t", file: !1266, line: 249, size: 512, elements: !1463, identifier: "_ZTS11float64v8_t")
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1462, file: !1266, line: 249, baseType: !1465, size: 512)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 512, elements: !1310)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1427, file: !1266, line: 368, baseType: !1467, size: 512)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v64_t", file: !1266, line: 215, size: 512, elements: !1468, identifier: "_ZTS9int8v64_t")
!1468 = !{!1469}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1467, file: !1266, line: 215, baseType: !1470, size: 512)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 512, elements: !1434)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1427, file: !1266, line: 369, baseType: !1472, size: 512)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v32_t", file: !1266, line: 222, size: 512, elements: !1473, identifier: "_ZTS10int16v32_t")
!1473 = !{!1474}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1472, file: !1266, line: 222, baseType: !1475, size: 512)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 512, elements: !1369)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1427, file: !1266, line: 370, baseType: !1477, size: 512)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v16_t", file: !1266, line: 228, size: 512, elements: !1478, identifier: "_ZTS10int32v16_t")
!1478 = !{!1479}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1477, file: !1266, line: 228, baseType: !1480, size: 512)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 512, elements: !1303)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1427, file: !1266, line: 371, baseType: !1482, size: 512)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v8_t", file: !1266, line: 233, size: 512, elements: !1483, identifier: "_ZTS9int64v8_t")
!1483 = !{!1484}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1482, file: !1266, line: 233, baseType: !1485, size: 512)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 512, elements: !1310)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1427, file: !1266, line: 372, baseType: !1487, size: 512)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v4_t", file: !1266, line: 238, size: 512, elements: !1488, identifier: "_ZTS10int128v4_t")
!1488 = !{!1489}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1487, file: !1266, line: 238, baseType: !1490, size: 512)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 512, elements: !353)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "aflag", scope: !1268, file: !27, line: 751, baseType: !1492, size: 128, align: 64, offset: 16512)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArithFlags", file: !27, line: 402, size: 128, align: 64, elements: !1493, identifier: "_ZTS10ArithFlags")
!1493 = !{!1494, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1492, file: !27, line: 404, baseType: !1495, size: 8)
!1495 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !62)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1492, file: !27, line: 405, baseType: !62, size: 8, offset: 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1492, file: !27, line: 406, baseType: !1495, size: 8, offset: 16)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1492, file: !27, line: 407, baseType: !62, size: 8, offset: 24)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1492, file: !27, line: 408, baseType: !1495, size: 8, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1492, file: !27, line: 409, baseType: !62, size: 8, offset: 40)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1492, file: !27, line: 410, baseType: !1495, size: 8, offset: 48)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1492, file: !27, line: 411, baseType: !62, size: 8, offset: 56)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1492, file: !27, line: 412, baseType: !1495, size: 8, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1492, file: !27, line: 413, baseType: !62, size: 8, offset: 72)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1492, file: !27, line: 414, baseType: !1495, size: 8, offset: 80)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1492, file: !27, line: 415, baseType: !62, size: 8, offset: 88)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1492, file: !27, line: 416, baseType: !1495, size: 8, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1492, file: !27, line: 417, baseType: !62, size: 8, offset: 104)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1492, file: !27, line: 418, baseType: !1495, size: 8, offset: 112)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1492, file: !27, line: 419, baseType: !1495, size: 8, offset: 120)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !1268, file: !27, line: 752, baseType: !1512, size: 64, align: 64, offset: 16640)
!1512 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "Flags", file: !27, line: 366, size: 64, align: 64, elements: !1513, identifier: "_ZTS5Flags")
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1512, file: !27, line: 367, baseType: !637, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, scope: !1512, file: !27, line: 368, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1512, file: !27, line: 368, size: 64, elements: !1517, identifier: "_ZTSN5FlagsUt_E")
!1517 = !{!1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1516, file: !27, line: 369, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_1", scope: !1516, file: !27, line: 370, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1516, file: !27, line: 371, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0a", scope: !1516, file: !27, line: 372, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1516, file: !27, line: 374, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0b", scope: !1516, file: !27, line: 375, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1516, file: !27, line: 376, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1516, file: !27, line: 377, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1516, file: !27, line: 379, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_if", scope: !1516, file: !27, line: 380, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1516, file: !27, line: 381, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1516, file: !27, line: 382, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "iopl", scope: !1516, file: !27, line: 384, baseType: !8, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "nt", scope: !1516, file: !27, line: 385, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0c", scope: !1516, file: !27, line: 386, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "rf", scope: !1516, file: !27, line: 388, baseType: !8, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vm", scope: !1516, file: !27, line: 389, baseType: !8, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !1516, file: !27, line: 390, baseType: !8, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !1516, file: !27, line: 391, baseType: !8, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "vip", scope: !1516, file: !27, line: 393, baseType: !8, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1516, file: !27, line: 394, baseType: !8, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_eflags", scope: !1516, file: !27, line: 395, baseType: !8, size: 10, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_rflags", scope: !1516, file: !27, line: 396, baseType: !8, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !1268, file: !27, line: 753, baseType: !1542, size: 192, align: 64, offset: 16704)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Segments", file: !27, line: 451, size: 192, align: 64, elements: !1543, identifier: "_ZTS8Segments")
!1543 = !{!1544, !1546, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1542, file: !27, line: 452, baseType: !1545, size: 16)
!1545 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !28)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1542, file: !27, line: 453, baseType: !1547, size: 16, offset: 16)
!1547 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "SegmentSelector", file: !27, line: 76, size: 16, elements: !1548, identifier: "_ZTS15SegmentSelector")
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1547, file: !27, line: 77, baseType: !28, size: 16)
!1550 = !DIDerivedType(tag: DW_TAG_member, scope: !1547, file: !27, line: 78, baseType: !1551, size: 16)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1547, file: !27, line: 78, size: 16, elements: !1552, identifier: "_ZTSN15SegmentSelectorUt_E")
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rpi", scope: !1551, file: !27, line: 79, baseType: !26, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ti", scope: !1551, file: !27, line: 80, baseType: !35, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1551, file: !27, line: 81, baseType: !28, size: 13, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1542, file: !27, line: 454, baseType: !1545, size: 16, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1542, file: !27, line: 455, baseType: !1547, size: 16, offset: 48)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1542, file: !27, line: 456, baseType: !1545, size: 16, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1542, file: !27, line: 457, baseType: !1547, size: 16, offset: 80)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1542, file: !27, line: 458, baseType: !1545, size: 16, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1542, file: !27, line: 459, baseType: !1547, size: 16, offset: 112)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1542, file: !27, line: 460, baseType: !1545, size: 16, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1542, file: !27, line: 461, baseType: !1547, size: 16, offset: 144)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1542, file: !27, line: 462, baseType: !1545, size: 16, offset: 160)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1542, file: !27, line: 463, baseType: !1547, size: 16, offset: 176)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1268, file: !27, line: 754, baseType: !1567, size: 768, align: 64, offset: 16896)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AddressSpace", file: !27, line: 654, size: 768, align: 64, elements: !1568, identifier: "_ZTS12AddressSpace")
!1568 = !{!1569, !1571, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1567, file: !27, line: 655, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !637)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ss_base", scope: !1567, file: !27, line: 656, baseType: !1572, size: 64, offset: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Reg", file: !27, line: 610, size: 64, elements: !1573, identifier: "_ZTS3Reg")
!1573 = !{!1574}
!1574 = !DIDerivedType(tag: DW_TAG_member, scope: !1572, file: !27, line: 611, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1572, file: !27, line: 611, size: 64, elements: !1576, identifier: "_ZTSN3RegUt_E")
!1576 = !{!1577, !1582, !1583, !1584}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !1575, file: !27, line: 615, baseType: !1578, size: 16, align: 8)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !27, line: 612, size: 16, elements: !1579, identifier: "_ZTSN3RegUt_Ut_E")
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1578, file: !27, line: 613, baseType: !62, size: 8)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1578, file: !27, line: 614, baseType: !62, size: 8, offset: 8)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !1575, file: !27, line: 616, baseType: !28, size: 16, align: 16)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1575, file: !27, line: 617, baseType: !8, size: 32, align: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1575, file: !27, line: 618, baseType: !637, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1567, file: !27, line: 657, baseType: !1570, size: 64, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "es_base", scope: !1567, file: !27, line: 658, baseType: !1572, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1567, file: !27, line: 659, baseType: !1570, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "gs_base", scope: !1567, file: !27, line: 660, baseType: !1572, size: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1567, file: !27, line: 661, baseType: !1570, size: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "fs_base", scope: !1567, file: !27, line: 662, baseType: !1572, size: 64, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1567, file: !27, line: 663, baseType: !1570, size: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ds_base", scope: !1567, file: !27, line: 664, baseType: !1572, size: 64, offset: 576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1567, file: !27, line: 665, baseType: !1570, size: 64, offset: 640)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cs_base", scope: !1567, file: !27, line: 666, baseType: !1572, size: 64, offset: 704)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "gpr", scope: !1268, file: !27, line: 755, baseType: !1596, size: 2176, align: 64, offset: 17664)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPR", file: !27, line: 677, size: 2176, align: 64, elements: !1597, identifier: "_ZTS3GPR")
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1596, file: !27, line: 679, baseType: !1570, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !1596, file: !27, line: 680, baseType: !1572, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1596, file: !27, line: 681, baseType: !1570, size: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "rbx", scope: !1596, file: !27, line: 682, baseType: !1572, size: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1596, file: !27, line: 683, baseType: !1570, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rcx", scope: !1596, file: !27, line: 684, baseType: !1572, size: 64, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1596, file: !27, line: 685, baseType: !1570, size: 64, offset: 384)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rdx", scope: !1596, file: !27, line: 686, baseType: !1572, size: 64, offset: 448)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1596, file: !27, line: 687, baseType: !1570, size: 64, offset: 512)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "rsi", scope: !1596, file: !27, line: 688, baseType: !1572, size: 64, offset: 576)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1596, file: !27, line: 689, baseType: !1570, size: 64, offset: 640)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rdi", scope: !1596, file: !27, line: 690, baseType: !1572, size: 64, offset: 704)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1596, file: !27, line: 691, baseType: !1570, size: 64, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rsp", scope: !1596, file: !27, line: 692, baseType: !1572, size: 64, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1596, file: !27, line: 693, baseType: !1570, size: 64, offset: 896)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "rbp", scope: !1596, file: !27, line: 694, baseType: !1572, size: 64, offset: 960)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1596, file: !27, line: 695, baseType: !1570, size: 64, offset: 1024)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1596, file: !27, line: 696, baseType: !1572, size: 64, offset: 1088)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1596, file: !27, line: 697, baseType: !1570, size: 64, offset: 1152)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1596, file: !27, line: 698, baseType: !1572, size: 64, offset: 1216)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_10", scope: !1596, file: !27, line: 699, baseType: !1570, size: 64, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1596, file: !27, line: 700, baseType: !1572, size: 64, offset: 1344)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_11", scope: !1596, file: !27, line: 701, baseType: !1570, size: 64, offset: 1408)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1596, file: !27, line: 702, baseType: !1572, size: 64, offset: 1472)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_12", scope: !1596, file: !27, line: 703, baseType: !1570, size: 64, offset: 1536)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1596, file: !27, line: 704, baseType: !1572, size: 64, offset: 1600)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_13", scope: !1596, file: !27, line: 705, baseType: !1570, size: 64, offset: 1664)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1596, file: !27, line: 706, baseType: !1572, size: 64, offset: 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_14", scope: !1596, file: !27, line: 707, baseType: !1570, size: 64, offset: 1792)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1596, file: !27, line: 708, baseType: !1572, size: 64, offset: 1856)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_15", scope: !1596, file: !27, line: 709, baseType: !1570, size: 64, offset: 1920)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1596, file: !27, line: 710, baseType: !1572, size: 64, offset: 1984)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_16", scope: !1596, file: !27, line: 711, baseType: !1570, size: 64, offset: 2048)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1596, file: !27, line: 714, baseType: !1572, size: 64, offset: 2112)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1268, file: !27, line: 756, baseType: !1633, size: 1024, align: 64, offset: 19840)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "X87Stack", file: !27, line: 719, size: 1024, align: 64, elements: !1634, identifier: "_ZTS8X87Stack")
!1634 = !{!1635}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1633, file: !27, line: 723, baseType: !1636, size: 1024)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 1024, elements: !1310)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1633, file: !27, line: 720, size: 128, align: 64, elements: !1638, identifier: "_ZTSN8X87StackUt_E")
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1637, file: !27, line: 721, baseType: !637, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1637, file: !27, line: 722, baseType: !1641, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "float64_t", file: !1266, line: 61, baseType: !108)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1268, file: !27, line: 757, baseType: !1643, size: 1024, align: 64, offset: 20864)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MMX", file: !27, line: 729, size: 1024, align: 64, elements: !1644, identifier: "_ZTS3MMX")
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1643, file: !27, line: 733, baseType: !1646, size: 1024)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 1024, elements: !1310)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1643, file: !27, line: 730, size: 128, align: 64, elements: !1648, identifier: "_ZTSN3MMXUt_E")
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1647, file: !27, line: 731, baseType: !637, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1647, file: !27, line: 732, baseType: !1651, size: 64, offset: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec64_t", file: !1266, line: 294, size: 64, elements: !1652, identifier: "_ZTS7vec64_t")
!1652 = !{!1653, !1658, !1663, !1668, !1673, !1678, !1683, !1688, !1693, !1698}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1651, file: !1266, line: 298, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v1_t", file: !1266, line: 199, size: 64, elements: !1655, identifier: "_ZTS10uint64v1_t")
!1655 = !{!1656}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1654, file: !1266, line: 199, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 64, elements: !1296)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1651, file: !1266, line: 300, baseType: !1659, size: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v8_t", file: !1266, line: 181, size: 64, elements: !1660, identifier: "_ZTS9uint8v8_t")
!1660 = !{!1661}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1659, file: !1266, line: 181, baseType: !1662, size: 64)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 64, elements: !1310)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1651, file: !1266, line: 301, baseType: !1664, size: 64)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v4_t", file: !1266, line: 188, size: 64, elements: !1665, identifier: "_ZTS10uint16v4_t")
!1665 = !{!1666}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1664, file: !1266, line: 188, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !353)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1651, file: !1266, line: 302, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v2_t", file: !1266, line: 194, size: 64, elements: !1670, identifier: "_ZTS10uint32v2_t")
!1670 = !{!1671}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1669, file: !1266, line: 194, baseType: !1672, size: 64)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, elements: !1322)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1651, file: !1266, line: 303, baseType: !1674, size: 64)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v2_t", file: !1266, line: 241, size: 64, elements: !1675, identifier: "_ZTS11float32v2_t")
!1675 = !{!1676}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1674, file: !1266, line: 241, baseType: !1677, size: 64)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1322)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1651, file: !1266, line: 304, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v1_t", file: !1266, line: 246, size: 64, elements: !1680, identifier: "_ZTS11float64v1_t")
!1680 = !{!1681}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1679, file: !1266, line: 246, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1296)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1651, file: !1266, line: 306, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v8_t", file: !1266, line: 212, size: 64, elements: !1685, identifier: "_ZTS8int8v8_t")
!1685 = !{!1686}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1684, file: !1266, line: 212, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 64, elements: !1310)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1651, file: !1266, line: 307, baseType: !1689, size: 64)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v4_t", file: !1266, line: 219, size: 64, elements: !1690, identifier: "_ZTS9int16v4_t")
!1690 = !{!1691}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1689, file: !1266, line: 219, baseType: !1692, size: 64)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 64, elements: !353)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1651, file: !1266, line: 308, baseType: !1694, size: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v2_t", file: !1266, line: 225, size: 64, elements: !1695, identifier: "_ZTS9int32v2_t")
!1695 = !{!1696}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1694, file: !1266, line: 225, baseType: !1697, size: 64)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 64, elements: !1322)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1651, file: !1266, line: 309, baseType: !1699, size: 64)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v1_t", file: !1266, line: 230, size: 64, elements: !1700, identifier: "_ZTS9int64v1_t")
!1700 = !{!1701}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1699, file: !1266, line: 230, baseType: !1702, size: 64)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 64, elements: !1296)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !1268, file: !27, line: 758, baseType: !1704, size: 192, offset: 21888)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStatusFlags", file: !27, line: 332, size: 192, elements: !1705, identifier: "_ZTS14FPUStatusFlags")
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1704, file: !27, line: 333, baseType: !62, size: 8)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1704, file: !27, line: 334, baseType: !62, size: 8, offset: 8)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1704, file: !27, line: 335, baseType: !62, size: 8, offset: 16)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1704, file: !27, line: 336, baseType: !62, size: 8, offset: 24)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1704, file: !27, line: 337, baseType: !62, size: 8, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1704, file: !27, line: 338, baseType: !62, size: 8, offset: 40)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1704, file: !27, line: 339, baseType: !62, size: 8, offset: 48)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1704, file: !27, line: 340, baseType: !62, size: 8, offset: 56)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1704, file: !27, line: 342, baseType: !62, size: 8, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1704, file: !27, line: 343, baseType: !62, size: 8, offset: 72)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1704, file: !27, line: 345, baseType: !62, size: 8, offset: 80)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1704, file: !27, line: 346, baseType: !62, size: 8, offset: 88)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1704, file: !27, line: 348, baseType: !62, size: 8, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1704, file: !27, line: 349, baseType: !62, size: 8, offset: 104)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1704, file: !27, line: 351, baseType: !62, size: 8, offset: 112)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1704, file: !27, line: 352, baseType: !62, size: 8, offset: 120)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1704, file: !27, line: 354, baseType: !62, size: 8, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1704, file: !27, line: 355, baseType: !62, size: 8, offset: 136)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1704, file: !27, line: 357, baseType: !62, size: 8, offset: 144)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1704, file: !27, line: 358, baseType: !62, size: 8, offset: 152)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "_padding", scope: !1704, file: !27, line: 360, baseType: !1727, size: 32, offset: 160)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 32, elements: !353)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "xcr0", scope: !1268, file: !27, line: 759, baseType: !1729, size: 64, offset: 22080)
!1729 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "XCR0", file: !27, line: 424, size: 64, elements: !1730, identifier: "_ZTS4XCR0")
!1730 = !{!1731, !1732, !1737}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1729, file: !27, line: 425, baseType: !637, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 427, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 427, size: 64, elements: !1734, identifier: "_ZTSN4XCR0Ut_E")
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "eax", scope: !1733, file: !27, line: 428, baseType: !8, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "edx", scope: !1733, file: !27, line: 429, baseType: !8, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 433, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 433, size: 64, elements: !1739, identifier: "_ZTSN4XCR0Ut0_E")
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "x87_fpu_mmx", scope: !1738, file: !27, line: 434, baseType: !637, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1738, file: !27, line: 435, baseType: !637, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1738, file: !27, line: 436, baseType: !637, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "bndreg", scope: !1738, file: !27, line: 437, baseType: !637, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bndcsr", scope: !1738, file: !27, line: 438, baseType: !637, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "opmask", scope: !1738, file: !27, line: 439, baseType: !637, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "zmm_hi256", scope: !1738, file: !27, line: 440, baseType: !637, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "hi16_zmm", scope: !1738, file: !27, line: 441, baseType: !637, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pkru", scope: !1738, file: !27, line: 442, baseType: !637, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !1738, file: !27, line: 443, baseType: !637, size: 53, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lwp", scope: !1738, file: !27, line: 444, baseType: !637, size: 1, offset: 62, flags: DIFlagBitField, extraData: i64 0)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !1738, file: !27, line: 445, baseType: !637, size: 1, offset: 63, flags: DIFlagBitField, extraData: i64 0)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "x87", scope: !1268, file: !27, line: 760, baseType: !1753, size: 4096, align: 128, offset: 22144)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPU", file: !27, line: 314, size: 4096, align: 128, elements: !1754, identifier: "_ZTS3FPU")
!1754 = !{!1755, !1851, !1914}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1753, file: !27, line: 317, baseType: !1756, size: 4096)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 315, size: 4096, elements: !1757, identifier: "_ZTSN3FPUUt_E")
!1757 = !{!1758, !1847}
!1758 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1756, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFSAVE", file: !27, line: 263, size: 1248, elements: !1760, identifier: "_ZTS8FpuFSAVE")
!1760 = !{!1761, !1779, !1780, !1801, !1802, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1759, file: !27, line: 264, baseType: !1762, size: 16)
!1762 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlWord", file: !27, line: 142, size: 16, elements: !1763, identifier: "_ZTS14FPUControlWord")
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1762, file: !27, line: 143, baseType: !28, size: 16)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1762, file: !27, line: 144, baseType: !1766, size: 16)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1762, file: !27, line: 144, size: 16, elements: !1767, identifier: "_ZTSN14FPUControlWordUt_E")
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1766, file: !27, line: 145, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1766, file: !27, line: 146, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1766, file: !27, line: 147, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1766, file: !27, line: 148, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1766, file: !27, line: 149, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1766, file: !27, line: 150, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1766, file: !27, line: 151, baseType: !28, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1766, file: !27, line: 152, baseType: !39, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !1766, file: !27, line: 153, baseType: !45, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1766, file: !27, line: 154, baseType: !51, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1766, file: !27, line: 155, baseType: !28, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1759, file: !27, line: 265, baseType: !28, size: 16, offset: 16)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1759, file: !27, line: 266, baseType: !1781, size: 16, offset: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUStatusWord", file: !27, line: 100, size: 16, elements: !1782, identifier: "_ZTS13FPUStatusWord")
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1781, file: !27, line: 101, baseType: !28, size: 16)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1781, file: !27, line: 102, baseType: !1785, size: 16)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1781, file: !27, line: 102, size: 16, elements: !1786, identifier: "_ZTSN13FPUStatusWordUt_E")
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1785, file: !27, line: 103, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1785, file: !27, line: 104, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1785, file: !27, line: 105, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1785, file: !27, line: 106, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1785, file: !27, line: 107, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1785, file: !27, line: 108, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1785, file: !27, line: 109, baseType: !28, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1785, file: !27, line: 110, baseType: !28, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1785, file: !27, line: 111, baseType: !28, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1785, file: !27, line: 112, baseType: !28, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1785, file: !27, line: 113, baseType: !28, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1785, file: !27, line: 114, baseType: !28, size: 3, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1785, file: !27, line: 115, baseType: !28, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1785, file: !27, line: 116, baseType: !28, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1759, file: !27, line: 267, baseType: !28, size: 16, offset: 48)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1759, file: !27, line: 268, baseType: !1803, size: 16, offset: 64)
!1803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUTagWord", file: !27, line: 227, size: 16, elements: !1804, identifier: "_ZTS10FPUTagWord")
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1803, file: !27, line: 228, baseType: !28, size: 16)
!1806 = !DIDerivedType(tag: DW_TAG_member, scope: !1803, file: !27, line: 229, baseType: !1807, size: 16)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1803, file: !27, line: 229, size: 16, elements: !1808, identifier: "_ZTSN10FPUTagWordUt_E")
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tag0", scope: !1807, file: !27, line: 230, baseType: !55, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tag1", scope: !1807, file: !27, line: 231, baseType: !55, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tag2", scope: !1807, file: !27, line: 232, baseType: !55, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "tag3", scope: !1807, file: !27, line: 233, baseType: !55, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "tag4", scope: !1807, file: !27, line: 234, baseType: !55, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "tag5", scope: !1807, file: !27, line: 235, baseType: !55, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "tag6", scope: !1807, file: !27, line: 236, baseType: !55, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tag7", scope: !1807, file: !27, line: 237, baseType: !55, size: 2, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1759, file: !27, line: 269, baseType: !28, size: 16, offset: 80)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1759, file: !27, line: 270, baseType: !8, size: 32, offset: 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1759, file: !27, line: 271, baseType: !1547, size: 16, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1759, file: !27, line: 272, baseType: !28, size: 16, offset: 144)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1759, file: !27, line: 273, baseType: !8, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1759, file: !27, line: 274, baseType: !1547, size: 16, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd3", scope: !1759, file: !27, line: 275, baseType: !28, size: 16, offset: 208)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1759, file: !27, line: 276, baseType: !1825, size: 1024, offset: 224)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 1024, elements: !1310)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStackElem", file: !27, line: 162, size: 128, elements: !1827, identifier: "_ZTS12FPUStackElem")
!1827 = !{!1828, !1843}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !27, line: 163, baseType: !1829, size: 80)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !27, line: 163, size: 80, elements: !1830, identifier: "_ZTSN12FPUStackElemUt_E")
!1830 = !{!1831, !1838}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1829, file: !27, line: 164, baseType: !1832, size: 80)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float80_t", file: !1266, line: 65, size: 80, elements: !1833, identifier: "_ZTS9float80_t")
!1833 = !{!1834}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1832, file: !1266, line: 66, baseType: !1835, size: 80)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 80, elements: !1836)
!1836 = !{!1837}
!1837 = !DISubrange(count: 10)
!1838 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !27, line: 165, baseType: !1839, size: 80)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1829, file: !27, line: 165, size: 80, elements: !1840, identifier: "_ZTSN12FPUStackElemUt_Ut_E")
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1839, file: !27, line: 166, baseType: !637, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "infinity", scope: !1839, file: !27, line: 167, baseType: !28, size: 16, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1826, file: !27, line: 170, baseType: !1844, size: 48, offset: 80)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 48, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 6)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1756, file: !27, line: 316, baseType: !1848, size: 2848, offset: 1248)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 2848, elements: !1849)
!1849 = !{!1850}
!1850 = !DISubrange(count: 356)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave32", scope: !1753, file: !27, line: 321, baseType: !1852, size: 4096)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 319, size: 4096, elements: !1853, identifier: "_ZTSN3FPUUt0_E")
!1853 = !{!1854, !1910}
!1854 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1852, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE", file: !27, line: 280, size: 3328, elements: !1856, identifier: "_ZTS9FpuFXSAVE")
!1856 = !{!1857, !1858, !1859, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1906, !1907, !1908}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1855, file: !27, line: 281, baseType: !1762, size: 16)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1855, file: !27, line: 282, baseType: !1781, size: 16, offset: 16)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1855, file: !27, line: 283, baseType: !1860, size: 8, offset: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUAbridgedTagWord", file: !27, line: 245, size: 8, elements: !1861, identifier: "_ZTS18FPUAbridgedTagWord")
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1860, file: !27, line: 246, baseType: !62, size: 8)
!1863 = !DIDerivedType(tag: DW_TAG_member, scope: !1860, file: !27, line: 247, baseType: !1864, size: 8)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1860, file: !27, line: 247, size: 8, elements: !1865, identifier: "_ZTSN18FPUAbridgedTagWordUt_E")
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1864, file: !27, line: 248, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1864, file: !27, line: 249, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1864, file: !27, line: 250, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1864, file: !27, line: 251, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1864, file: !27, line: 252, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1864, file: !27, line: 253, baseType: !61, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1864, file: !27, line: 254, baseType: !61, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1864, file: !27, line: 255, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1855, file: !27, line: 284, baseType: !62, size: 8, offset: 40)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1855, file: !27, line: 285, baseType: !28, size: 16, offset: 48)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1855, file: !27, line: 286, baseType: !8, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1855, file: !27, line: 287, baseType: !1547, size: 16, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1855, file: !27, line: 288, baseType: !28, size: 16, offset: 112)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1855, file: !27, line: 289, baseType: !8, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1855, file: !27, line: 290, baseType: !1547, size: 16, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1855, file: !27, line: 291, baseType: !28, size: 16, offset: 176)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1855, file: !27, line: 292, baseType: !1883, size: 32, offset: 192)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlStatus", file: !27, line: 188, size: 32, elements: !1884, identifier: "_ZTS16FPUControlStatus")
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1883, file: !27, line: 189, baseType: !8, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !27, line: 190, baseType: !1887, size: 32)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !27, line: 190, size: 32, elements: !1888, identifier: "_ZTSN16FPUControlStatusUt_E")
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1887, file: !27, line: 191, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1887, file: !27, line: 192, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1887, file: !27, line: 193, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1887, file: !27, line: 194, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1887, file: !27, line: 195, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1887, file: !27, line: 196, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "daz", scope: !1887, file: !27, line: 197, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1887, file: !27, line: 198, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1887, file: !27, line: 199, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1887, file: !27, line: 200, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1887, file: !27, line: 201, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1887, file: !27, line: 202, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1887, file: !27, line: 203, baseType: !8, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rn", scope: !1887, file: !27, line: 204, baseType: !8, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "rp", scope: !1887, file: !27, line: 205, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "fz", scope: !1887, file: !27, line: 206, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1887, file: !27, line: 207, baseType: !8, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1855, file: !27, line: 293, baseType: !1883, size: 32, offset: 224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1855, file: !27, line: 294, baseType: !1825, size: 1024, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1855, file: !27, line: 295, baseType: !1909, size: 2048, offset: 1280)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1287, size: 2048, elements: !1303)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1852, file: !27, line: 320, baseType: !1911, size: 768, offset: 3328)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 768, elements: !1912)
!1912 = !{!1913}
!1913 = !DISubrange(count: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave64", scope: !1753, file: !27, line: 325, baseType: !1915, size: 4096)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 323, size: 4096, elements: !1916, identifier: "_ZTSN3FPUUt1_E")
!1916 = !{!1917, !1931}
!1917 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1915, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE64", file: !27, line: 299, size: 3328, elements: !1919, identifier: "_ZTS11FpuFXSAVE64")
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1918, file: !27, line: 300, baseType: !1762, size: 16)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1918, file: !27, line: 301, baseType: !1781, size: 16, offset: 16)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1918, file: !27, line: 302, baseType: !1860, size: 8, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1918, file: !27, line: 303, baseType: !62, size: 8, offset: 40)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1918, file: !27, line: 304, baseType: !28, size: 16, offset: 48)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1918, file: !27, line: 305, baseType: !637, size: 64, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1918, file: !27, line: 306, baseType: !637, size: 64, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1918, file: !27, line: 307, baseType: !1883, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1918, file: !27, line: 308, baseType: !1883, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1918, file: !27, line: 309, baseType: !1825, size: 1024, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1918, file: !27, line: 310, baseType: !1909, size: 2048, offset: 1280)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1915, file: !27, line: 324, baseType: !1911, size: 768, offset: 3328)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "seg_caches", scope: !1268, file: !27, line: 761, baseType: !1933, size: 768, align: 64, offset: 26240)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentCaches", file: !27, line: 468, size: 768, align: 64, elements: !1934, identifier: "_ZTS13SegmentCaches")
!1934 = !{!1935, !1945, !1946, !1947, !1948, !1949}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1933, file: !27, line: 469, baseType: !1936, size: 128)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentShadow", file: !27, line: 88, size: 128, elements: !1937, identifier: "_ZTS13SegmentShadow")
!1937 = !{!1938, !1943, !1944}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1936, file: !27, line: 92, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !27, line: 89, size: 64, elements: !1940, identifier: "_ZTSN13SegmentShadowUt_E")
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1939, file: !27, line: 90, baseType: !8, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1939, file: !27, line: 91, baseType: !637, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1936, file: !27, line: 93, baseType: !8, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1936, file: !27, line: 94, baseType: !8, size: 32, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1933, file: !27, line: 470, baseType: !1936, size: 128, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1933, file: !27, line: 471, baseType: !1936, size: 128, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1933, file: !27, line: 472, baseType: !1936, size: 128, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1933, file: !27, line: 473, baseType: !1936, size: 128, offset: 512)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1933, file: !27, line: 474, baseType: !1936, size: 128, offset: 640)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_t", file: !1266, line: 42, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr64_t", file: !1266, line: 41, baseType: !637)
!1952 = !DILocation(line: 54, column: 8, scope: !1261)
!1953 = !DILocation(line: 55, column: 10, scope: !1261)
!1954 = !DILocation(line: 56, column: 10, scope: !1261)
!1955 = !DILocation(line: 57, column: 10, scope: !1261)
!1956 = !DILocation(line: 58, column: 10, scope: !1261)
!1957 = !DILocation(line: 61, column: 9, scope: !1261)
!1958 = !DILocation(line: 62, column: 9, scope: !1261)
!1959 = !DILocation(line: 63, column: 20, scope: !1261)
!1960 = !DILocation(line: 63, column: 24, scope: !1261)
!1961 = !DILocation(line: 63, column: 28, scope: !1261)
!1962 = !DILocation(line: 69, column: 6, scope: !1261)
!1963 = !DILocation(line: 74, column: 20, scope: !1261)
!1964 = !DILocation(line: 74, column: 24, scope: !1261)
!1965 = !DILocation(line: 74, column: 28, scope: !1261)
!1966 = !DILocation(line: 74, column: 33, scope: !1261)
!1967 = !DILocation(line: 75, column: 20, scope: !1261)
!1968 = !DILocation(line: 75, column: 24, scope: !1261)
!1969 = !DILocation(line: 75, column: 28, scope: !1261)
!1970 = !DILocation(line: 75, column: 33, scope: !1261)
!1971 = !DILocation(line: 76, column: 20, scope: !1261)
!1972 = !DILocation(line: 76, column: 24, scope: !1261)
!1973 = !DILocation(line: 76, column: 28, scope: !1261)
!1974 = !DILocation(line: 76, column: 33, scope: !1261)
!1975 = !DILocation(line: 77, column: 20, scope: !1261)
!1976 = !DILocation(line: 77, column: 24, scope: !1261)
!1977 = !DILocation(line: 77, column: 28, scope: !1261)
!1978 = !DILocation(line: 77, column: 33, scope: !1261)
!1979 = !DILocation(line: 78, column: 20, scope: !1261)
!1980 = !DILocation(line: 78, column: 24, scope: !1261)
!1981 = !DILocation(line: 78, column: 28, scope: !1261)
!1982 = !DILocation(line: 78, column: 33, scope: !1261)
!1983 = !DILocation(line: 79, column: 20, scope: !1261)
!1984 = !DILocation(line: 79, column: 24, scope: !1261)
!1985 = !DILocation(line: 79, column: 28, scope: !1261)
!1986 = !DILocation(line: 79, column: 33, scope: !1261)
!1987 = !DILocation(line: 80, column: 20, scope: !1261)
!1988 = !DILocation(line: 80, column: 24, scope: !1261)
!1989 = !DILocation(line: 80, column: 28, scope: !1261)
!1990 = !DILocation(line: 80, column: 33, scope: !1261)
!1991 = !DILocation(line: 81, column: 20, scope: !1261)
!1992 = !DILocation(line: 81, column: 24, scope: !1261)
!1993 = !DILocation(line: 81, column: 28, scope: !1261)
!1994 = !DILocation(line: 81, column: 33, scope: !1261)
!1995 = !DILocation(line: 83, column: 21, scope: !1261)
!1996 = !DILocation(line: 83, column: 25, scope: !1261)
!1997 = !DILocation(line: 83, column: 29, scope: !1261)
!1998 = !DILocation(line: 83, column: 34, scope: !1261)
!1999 = !DILocation(line: 84, column: 21, scope: !1261)
!2000 = !DILocation(line: 84, column: 25, scope: !1261)
!2001 = !DILocation(line: 84, column: 29, scope: !1261)
!2002 = !DILocation(line: 84, column: 34, scope: !1261)
!2003 = !DILocation(line: 85, column: 21, scope: !1261)
!2004 = !DILocation(line: 85, column: 25, scope: !1261)
!2005 = !DILocation(line: 85, column: 29, scope: !1261)
!2006 = !DILocation(line: 85, column: 34, scope: !1261)
!2007 = !DILocation(line: 86, column: 21, scope: !1261)
!2008 = !DILocation(line: 86, column: 25, scope: !1261)
!2009 = !DILocation(line: 86, column: 29, scope: !1261)
!2010 = !DILocation(line: 86, column: 34, scope: !1261)
!2011 = !DILocation(line: 87, column: 21, scope: !1261)
!2012 = !DILocation(line: 87, column: 25, scope: !1261)
!2013 = !DILocation(line: 87, column: 28, scope: !1261)
!2014 = !DILocation(line: 87, column: 33, scope: !1261)
!2015 = !DILocation(line: 88, column: 21, scope: !1261)
!2016 = !DILocation(line: 88, column: 25, scope: !1261)
!2017 = !DILocation(line: 88, column: 28, scope: !1261)
!2018 = !DILocation(line: 88, column: 33, scope: !1261)
!2019 = !DILocation(line: 89, column: 22, scope: !1261)
!2020 = !DILocation(line: 89, column: 26, scope: !1261)
!2021 = !DILocation(line: 89, column: 30, scope: !1261)
!2022 = !DILocation(line: 89, column: 35, scope: !1261)
!2023 = !DILocation(line: 90, column: 22, scope: !1261)
!2024 = !DILocation(line: 90, column: 26, scope: !1261)
!2025 = !DILocation(line: 90, column: 30, scope: !1261)
!2026 = !DILocation(line: 90, column: 35, scope: !1261)
!2027 = !DILocation(line: 91, column: 22, scope: !1261)
!2028 = !DILocation(line: 91, column: 26, scope: !1261)
!2029 = !DILocation(line: 91, column: 30, scope: !1261)
!2030 = !DILocation(line: 91, column: 35, scope: !1261)
!2031 = !DILocation(line: 92, column: 22, scope: !1261)
!2032 = !DILocation(line: 92, column: 26, scope: !1261)
!2033 = !DILocation(line: 92, column: 30, scope: !1261)
!2034 = !DILocation(line: 92, column: 35, scope: !1261)
!2035 = !DILocation(line: 93, column: 22, scope: !1261)
!2036 = !DILocation(line: 93, column: 26, scope: !1261)
!2037 = !DILocation(line: 93, column: 30, scope: !1261)
!2038 = !DILocation(line: 93, column: 35, scope: !1261)
!2039 = !DILocation(line: 94, column: 22, scope: !1261)
!2040 = !DILocation(line: 94, column: 26, scope: !1261)
!2041 = !DILocation(line: 94, column: 30, scope: !1261)
!2042 = !DILocation(line: 94, column: 35, scope: !1261)
!2043 = !DILocation(line: 96, column: 20, scope: !1261)
!2044 = !DILocation(line: 96, column: 24, scope: !1261)
!2045 = !DILocation(line: 96, column: 28, scope: !1261)
!2046 = !DILocation(line: 97, column: 20, scope: !1261)
!2047 = !DILocation(line: 97, column: 24, scope: !1261)
!2048 = !DILocation(line: 97, column: 28, scope: !1261)
!2049 = !DILocation(line: 98, column: 20, scope: !1261)
!2050 = !DILocation(line: 98, column: 24, scope: !1261)
!2051 = !DILocation(line: 98, column: 28, scope: !1261)
!2052 = !DILocation(line: 99, column: 20, scope: !1261)
!2053 = !DILocation(line: 99, column: 24, scope: !1261)
!2054 = !DILocation(line: 99, column: 28, scope: !1261)
!2055 = !DILocation(line: 100, column: 20, scope: !1261)
!2056 = !DILocation(line: 100, column: 24, scope: !1261)
!2057 = !DILocation(line: 100, column: 28, scope: !1261)
!2058 = !DILocation(line: 101, column: 20, scope: !1261)
!2059 = !DILocation(line: 101, column: 24, scope: !1261)
!2060 = !DILocation(line: 101, column: 28, scope: !1261)
!2061 = !DILocation(line: 102, column: 20, scope: !1261)
!2062 = !DILocation(line: 102, column: 24, scope: !1261)
!2063 = !DILocation(line: 102, column: 28, scope: !1261)
!2064 = !DILocation(line: 103, column: 20, scope: !1261)
!2065 = !DILocation(line: 103, column: 24, scope: !1261)
!2066 = !DILocation(line: 103, column: 28, scope: !1261)
!2067 = !DILocation(line: 105, column: 21, scope: !1261)
!2068 = !DILocation(line: 105, column: 25, scope: !1261)
!2069 = !DILocation(line: 105, column: 28, scope: !1261)
!2070 = !DILocation(line: 106, column: 21, scope: !1261)
!2071 = !DILocation(line: 106, column: 25, scope: !1261)
!2072 = !DILocation(line: 106, column: 28, scope: !1261)
!2073 = !DILocation(line: 107, column: 22, scope: !1261)
!2074 = !DILocation(line: 107, column: 26, scope: !1261)
!2075 = !DILocation(line: 107, column: 30, scope: !1261)
!2076 = !DILocation(line: 108, column: 22, scope: !1261)
!2077 = !DILocation(line: 108, column: 26, scope: !1261)
!2078 = !DILocation(line: 108, column: 30, scope: !1261)
!2079 = !DILocation(line: 109, column: 22, scope: !1261)
!2080 = !DILocation(line: 109, column: 26, scope: !1261)
!2081 = !DILocation(line: 109, column: 30, scope: !1261)
!2082 = !DILocation(line: 110, column: 22, scope: !1261)
!2083 = !DILocation(line: 110, column: 26, scope: !1261)
!2084 = !DILocation(line: 110, column: 30, scope: !1261)
!2085 = !DILocation(line: 111, column: 22, scope: !1261)
!2086 = !DILocation(line: 111, column: 26, scope: !1261)
!2087 = !DILocation(line: 111, column: 30, scope: !1261)
!2088 = !DILocation(line: 112, column: 22, scope: !1261)
!2089 = !DILocation(line: 112, column: 26, scope: !1261)
!2090 = !DILocation(line: 112, column: 30, scope: !1261)
!2091 = !DILocation(line: 114, column: 20, scope: !1261)
!2092 = !DILocation(line: 114, column: 24, scope: !1261)
!2093 = !DILocation(line: 114, column: 28, scope: !1261)
!2094 = !DILocation(line: 116, column: 21, scope: !1261)
!2095 = !DILocation(line: 116, column: 25, scope: !1261)
!2096 = !DILocation(line: 116, column: 29, scope: !1261)
!2097 = !DILocation(line: 117, column: 21, scope: !1261)
!2098 = !DILocation(line: 117, column: 25, scope: !1261)
!2099 = !DILocation(line: 117, column: 29, scope: !1261)
!2100 = !DILocation(line: 118, column: 21, scope: !1261)
!2101 = !DILocation(line: 118, column: 25, scope: !1261)
!2102 = !DILocation(line: 118, column: 29, scope: !1261)
!2103 = !DILocation(line: 119, column: 21, scope: !1261)
!2104 = !DILocation(line: 119, column: 25, scope: !1261)
!2105 = !DILocation(line: 119, column: 29, scope: !1261)
!2106 = !DILocation(line: 120, column: 21, scope: !1261)
!2107 = !DILocation(line: 120, column: 25, scope: !1261)
!2108 = !DILocation(line: 120, column: 29, scope: !1261)
!2109 = !DILocation(line: 121, column: 21, scope: !1261)
!2110 = !DILocation(line: 121, column: 25, scope: !1261)
!2111 = !DILocation(line: 121, column: 29, scope: !1261)
!2112 = !DILocation(line: 122, column: 21, scope: !1261)
!2113 = !DILocation(line: 122, column: 25, scope: !1261)
!2114 = !DILocation(line: 122, column: 29, scope: !1261)
!2115 = !DILocation(line: 123, column: 21, scope: !1261)
!2116 = !DILocation(line: 123, column: 25, scope: !1261)
!2117 = !DILocation(line: 123, column: 29, scope: !1261)
!2118 = !DILocation(line: 124, column: 21, scope: !1261)
!2119 = !DILocation(line: 124, column: 25, scope: !1261)
!2120 = !DILocation(line: 124, column: 29, scope: !1261)
!2121 = !DILocation(line: 127, column: 21, scope: !1261)
!2122 = !DILocation(line: 127, column: 25, scope: !1261)
!2123 = !DILocation(line: 127, column: 28, scope: !1261)
!2124 = !DILocation(line: 128, column: 21, scope: !1261)
!2125 = !DILocation(line: 128, column: 25, scope: !1261)
!2126 = !DILocation(line: 128, column: 28, scope: !1261)
!2127 = !DILocation(line: 129, column: 22, scope: !1261)
!2128 = !DILocation(line: 129, column: 26, scope: !1261)
!2129 = !DILocation(line: 129, column: 30, scope: !1261)
!2130 = !DILocation(line: 130, column: 22, scope: !1261)
!2131 = !DILocation(line: 130, column: 26, scope: !1261)
!2132 = !DILocation(line: 130, column: 30, scope: !1261)
!2133 = !DILocation(line: 131, column: 22, scope: !1261)
!2134 = !DILocation(line: 131, column: 26, scope: !1261)
!2135 = !DILocation(line: 131, column: 30, scope: !1261)
!2136 = !DILocation(line: 132, column: 22, scope: !1261)
!2137 = !DILocation(line: 132, column: 26, scope: !1261)
!2138 = !DILocation(line: 132, column: 30, scope: !1261)
!2139 = !DILocation(line: 133, column: 22, scope: !1261)
!2140 = !DILocation(line: 133, column: 26, scope: !1261)
!2141 = !DILocation(line: 133, column: 30, scope: !1261)
!2142 = !DILocation(line: 134, column: 22, scope: !1261)
!2143 = !DILocation(line: 134, column: 26, scope: !1261)
!2144 = !DILocation(line: 134, column: 30, scope: !1261)
!2145 = !DILocation(line: 136, column: 21, scope: !1261)
!2146 = !DILocation(line: 136, column: 25, scope: !1261)
!2147 = !DILocation(line: 136, column: 29, scope: !1261)
!2148 = !DILocation(line: 137, column: 21, scope: !1261)
!2149 = !DILocation(line: 137, column: 25, scope: !1261)
!2150 = !DILocation(line: 137, column: 29, scope: !1261)
!2151 = !DILocation(line: 138, column: 21, scope: !1261)
!2152 = !DILocation(line: 138, column: 25, scope: !1261)
!2153 = !DILocation(line: 138, column: 29, scope: !1261)
!2154 = !DILocation(line: 139, column: 21, scope: !1261)
!2155 = !DILocation(line: 139, column: 25, scope: !1261)
!2156 = !DILocation(line: 139, column: 29, scope: !1261)
!2157 = !DILocation(line: 140, column: 21, scope: !1261)
!2158 = !DILocation(line: 140, column: 25, scope: !1261)
!2159 = !DILocation(line: 140, column: 29, scope: !1261)
!2160 = !DILocation(line: 141, column: 21, scope: !1261)
!2161 = !DILocation(line: 141, column: 25, scope: !1261)
!2162 = !DILocation(line: 141, column: 29, scope: !1261)
!2163 = !DILocation(line: 142, column: 21, scope: !1261)
!2164 = !DILocation(line: 142, column: 25, scope: !1261)
!2165 = !DILocation(line: 142, column: 29, scope: !1261)
!2166 = !DILocation(line: 143, column: 21, scope: !1261)
!2167 = !DILocation(line: 143, column: 25, scope: !1261)
!2168 = !DILocation(line: 143, column: 29, scope: !1261)
!2169 = !DILocation(line: 144, column: 20, scope: !1261)
!2170 = !DILocation(line: 144, column: 24, scope: !1261)
!2171 = !DILocation(line: 144, column: 27, scope: !1261)
!2172 = !DILocation(line: 145, column: 20, scope: !1261)
!2173 = !DILocation(line: 145, column: 24, scope: !1261)
!2174 = !DILocation(line: 145, column: 27, scope: !1261)
!2175 = !DILocation(line: 146, column: 21, scope: !1261)
!2176 = !DILocation(line: 146, column: 25, scope: !1261)
!2177 = !DILocation(line: 146, column: 29, scope: !1261)
!2178 = !DILocation(line: 147, column: 21, scope: !1261)
!2179 = !DILocation(line: 147, column: 25, scope: !1261)
!2180 = !DILocation(line: 147, column: 29, scope: !1261)
!2181 = !DILocation(line: 148, column: 21, scope: !1261)
!2182 = !DILocation(line: 148, column: 25, scope: !1261)
!2183 = !DILocation(line: 148, column: 29, scope: !1261)
!2184 = !DILocation(line: 149, column: 21, scope: !1261)
!2185 = !DILocation(line: 149, column: 25, scope: !1261)
!2186 = !DILocation(line: 149, column: 29, scope: !1261)
!2187 = !DILocation(line: 150, column: 21, scope: !1261)
!2188 = !DILocation(line: 150, column: 25, scope: !1261)
!2189 = !DILocation(line: 150, column: 29, scope: !1261)
!2190 = !DILocation(line: 151, column: 21, scope: !1261)
!2191 = !DILocation(line: 151, column: 25, scope: !1261)
!2192 = !DILocation(line: 151, column: 29, scope: !1261)
!2193 = !DILocation(line: 152, column: 21, scope: !1261)
!2194 = !DILocation(line: 152, column: 25, scope: !1261)
!2195 = !DILocation(line: 152, column: 29, scope: !1261)
!2196 = !DILocation(line: 155, column: 20, scope: !1261)
!2197 = !DILocation(line: 155, column: 24, scope: !1261)
!2198 = !DILocation(line: 155, column: 27, scope: !1261)
!2199 = !DILocation(line: 156, column: 20, scope: !1261)
!2200 = !DILocation(line: 156, column: 24, scope: !1261)
!2201 = !DILocation(line: 156, column: 27, scope: !1261)
!2202 = !DILocation(line: 157, column: 20, scope: !1261)
!2203 = !DILocation(line: 157, column: 24, scope: !1261)
!2204 = !DILocation(line: 157, column: 27, scope: !1261)
!2205 = !DILocation(line: 158, column: 20, scope: !1261)
!2206 = !DILocation(line: 158, column: 24, scope: !1261)
!2207 = !DILocation(line: 158, column: 27, scope: !1261)
!2208 = !DILocation(line: 159, column: 20, scope: !1261)
!2209 = !DILocation(line: 159, column: 24, scope: !1261)
!2210 = !DILocation(line: 159, column: 27, scope: !1261)
!2211 = !DILocation(line: 160, column: 20, scope: !1261)
!2212 = !DILocation(line: 160, column: 24, scope: !1261)
!2213 = !DILocation(line: 160, column: 27, scope: !1261)
!2214 = !DILocation(line: 164, column: 25, scope: !1261)
!2215 = !DILocation(line: 164, column: 30, scope: !1261)
!2216 = !DILocation(line: 164, column: 38, scope: !1261)
!2217 = !DILocation(line: 165, column: 25, scope: !1261)
!2218 = !DILocation(line: 165, column: 30, scope: !1261)
!2219 = !DILocation(line: 165, column: 38, scope: !1261)
!2220 = !DILocation(line: 205, column: 22, scope: !1261)
!2221 = !DILocation(line: 205, column: 16, scope: !1261)
!2222 = !DILocation(line: 205, column: 29, scope: !1261)
!2223 = !DILocation(line: 206, column: 22, scope: !1261)
!2224 = !DILocation(line: 206, column: 16, scope: !1261)
!2225 = !DILocation(line: 206, column: 29, scope: !1261)
!2226 = !DILocation(line: 207, column: 22, scope: !1261)
!2227 = !DILocation(line: 207, column: 16, scope: !1261)
!2228 = !DILocation(line: 207, column: 29, scope: !1261)
!2229 = !DILocation(line: 208, column: 22, scope: !1261)
!2230 = !DILocation(line: 208, column: 16, scope: !1261)
!2231 = !DILocation(line: 208, column: 29, scope: !1261)
!2232 = !DILocation(line: 209, column: 22, scope: !1261)
!2233 = !DILocation(line: 209, column: 16, scope: !1261)
!2234 = !DILocation(line: 209, column: 29, scope: !1261)
!2235 = !DILocation(line: 210, column: 22, scope: !1261)
!2236 = !DILocation(line: 210, column: 16, scope: !1261)
!2237 = !DILocation(line: 210, column: 29, scope: !1261)
!2238 = !DILocation(line: 211, column: 22, scope: !1261)
!2239 = !DILocation(line: 211, column: 16, scope: !1261)
!2240 = !DILocation(line: 211, column: 29, scope: !1261)
!2241 = !DILocation(line: 212, column: 22, scope: !1261)
!2242 = !DILocation(line: 212, column: 16, scope: !1261)
!2243 = !DILocation(line: 212, column: 29, scope: !1261)
!2244 = !DILocation(line: 214, column: 22, scope: !1261)
!2245 = !DILocation(line: 214, column: 16, scope: !1261)
!2246 = !DILocation(line: 214, column: 29, scope: !1261)
!2247 = !DILocation(line: 215, column: 22, scope: !1261)
!2248 = !DILocation(line: 215, column: 16, scope: !1261)
!2249 = !DILocation(line: 215, column: 29, scope: !1261)
!2250 = !DILocation(line: 216, column: 23, scope: !1261)
!2251 = !DILocation(line: 216, column: 17, scope: !1261)
!2252 = !DILocation(line: 216, column: 31, scope: !1261)
!2253 = !DILocation(line: 217, column: 23, scope: !1261)
!2254 = !DILocation(line: 217, column: 17, scope: !1261)
!2255 = !DILocation(line: 217, column: 31, scope: !1261)
!2256 = !DILocation(line: 218, column: 23, scope: !1261)
!2257 = !DILocation(line: 218, column: 17, scope: !1261)
!2258 = !DILocation(line: 218, column: 31, scope: !1261)
!2259 = !DILocation(line: 219, column: 23, scope: !1261)
!2260 = !DILocation(line: 219, column: 17, scope: !1261)
!2261 = !DILocation(line: 219, column: 31, scope: !1261)
!2262 = !DILocation(line: 220, column: 23, scope: !1261)
!2263 = !DILocation(line: 220, column: 17, scope: !1261)
!2264 = !DILocation(line: 220, column: 31, scope: !1261)
!2265 = !DILocation(line: 221, column: 23, scope: !1261)
!2266 = !DILocation(line: 221, column: 17, scope: !1261)
!2267 = !DILocation(line: 221, column: 31, scope: !1261)
!2268 = !DILocation(line: 245, column: 22, scope: !1261)
!2269 = !DILocation(line: 245, column: 16, scope: !1261)
!2270 = !DILocation(line: 245, column: 29, scope: !1261)
!2271 = !DILocation(line: 246, column: 22, scope: !1261)
!2272 = !DILocation(line: 246, column: 16, scope: !1261)
!2273 = !DILocation(line: 246, column: 29, scope: !1261)
!2274 = !DILocation(line: 247, column: 22, scope: !1261)
!2275 = !DILocation(line: 247, column: 16, scope: !1261)
!2276 = !DILocation(line: 247, column: 29, scope: !1261)
!2277 = !DILocation(line: 248, column: 22, scope: !1261)
!2278 = !DILocation(line: 248, column: 16, scope: !1261)
!2279 = !DILocation(line: 248, column: 29, scope: !1261)
!2280 = !DILocation(line: 249, column: 22, scope: !1261)
!2281 = !DILocation(line: 249, column: 16, scope: !1261)
!2282 = !DILocation(line: 249, column: 29, scope: !1261)
!2283 = !DILocation(line: 250, column: 22, scope: !1261)
!2284 = !DILocation(line: 250, column: 16, scope: !1261)
!2285 = !DILocation(line: 250, column: 29, scope: !1261)
!2286 = !DILocation(line: 251, column: 22, scope: !1261)
!2287 = !DILocation(line: 251, column: 16, scope: !1261)
!2288 = !DILocation(line: 251, column: 29, scope: !1261)
!2289 = !DILocation(line: 252, column: 22, scope: !1261)
!2290 = !DILocation(line: 252, column: 16, scope: !1261)
!2291 = !DILocation(line: 252, column: 29, scope: !1261)
!2292 = !DILocation(line: 255, column: 22, scope: !1261)
!2293 = !DILocation(line: 255, column: 16, scope: !1261)
!2294 = !DILocation(line: 255, column: 29, scope: !1261)
!2295 = !DILocation(line: 256, column: 22, scope: !1261)
!2296 = !DILocation(line: 256, column: 16, scope: !1261)
!2297 = !DILocation(line: 256, column: 29, scope: !1261)
!2298 = !DILocation(line: 257, column: 23, scope: !1261)
!2299 = !DILocation(line: 257, column: 17, scope: !1261)
!2300 = !DILocation(line: 257, column: 31, scope: !1261)
!2301 = !DILocation(line: 258, column: 23, scope: !1261)
!2302 = !DILocation(line: 258, column: 17, scope: !1261)
!2303 = !DILocation(line: 258, column: 31, scope: !1261)
!2304 = !DILocation(line: 259, column: 23, scope: !1261)
!2305 = !DILocation(line: 259, column: 17, scope: !1261)
!2306 = !DILocation(line: 259, column: 31, scope: !1261)
!2307 = !DILocation(line: 260, column: 23, scope: !1261)
!2308 = !DILocation(line: 260, column: 17, scope: !1261)
!2309 = !DILocation(line: 260, column: 31, scope: !1261)
!2310 = !DILocation(line: 261, column: 23, scope: !1261)
!2311 = !DILocation(line: 261, column: 17, scope: !1261)
!2312 = !DILocation(line: 261, column: 31, scope: !1261)
!2313 = !DILocation(line: 262, column: 23, scope: !1261)
!2314 = !DILocation(line: 262, column: 17, scope: !1261)
!2315 = !DILocation(line: 262, column: 31, scope: !1261)
!2316 = !DILocation(line: 285, column: 21, scope: !1261)
!2317 = !DILocation(line: 285, column: 24, scope: !1261)
!2318 = !DILocation(line: 285, column: 15, scope: !1261)
!2319 = !DILocation(line: 285, column: 33, scope: !1261)
!2320 = !DILocation(line: 286, column: 21, scope: !1261)
!2321 = !DILocation(line: 286, column: 24, scope: !1261)
!2322 = !DILocation(line: 286, column: 15, scope: !1261)
!2323 = !DILocation(line: 286, column: 33, scope: !1261)
!2324 = !DILocation(line: 287, column: 21, scope: !1261)
!2325 = !DILocation(line: 287, column: 24, scope: !1261)
!2326 = !DILocation(line: 287, column: 15, scope: !1261)
!2327 = !DILocation(line: 287, column: 33, scope: !1261)
!2328 = !DILocation(line: 288, column: 21, scope: !1261)
!2329 = !DILocation(line: 288, column: 24, scope: !1261)
!2330 = !DILocation(line: 288, column: 15, scope: !1261)
!2331 = !DILocation(line: 288, column: 33, scope: !1261)
!2332 = !DILocation(line: 289, column: 21, scope: !1261)
!2333 = !DILocation(line: 289, column: 24, scope: !1261)
!2334 = !DILocation(line: 289, column: 15, scope: !1261)
!2335 = !DILocation(line: 289, column: 33, scope: !1261)
!2336 = !DILocation(line: 290, column: 21, scope: !1261)
!2337 = !DILocation(line: 290, column: 24, scope: !1261)
!2338 = !DILocation(line: 290, column: 15, scope: !1261)
!2339 = !DILocation(line: 290, column: 33, scope: !1261)
!2340 = !DILocation(line: 291, column: 21, scope: !1261)
!2341 = !DILocation(line: 291, column: 24, scope: !1261)
!2342 = !DILocation(line: 291, column: 15, scope: !1261)
!2343 = !DILocation(line: 291, column: 33, scope: !1261)
!2344 = !DILocation(line: 292, column: 21, scope: !1261)
!2345 = !DILocation(line: 292, column: 24, scope: !1261)
!2346 = !DILocation(line: 292, column: 15, scope: !1261)
!2347 = !DILocation(line: 292, column: 33, scope: !1261)
!2348 = !DILocation(line: 318, column: 21, scope: !1261)
!2349 = !DILocation(line: 318, column: 25, scope: !1261)
!2350 = !DILocation(line: 318, column: 15, scope: !1261)
!2351 = !DILocation(line: 318, column: 34, scope: !1261)
!2352 = !DILocation(line: 318, column: 38, scope: !1261)
!2353 = !DILocation(line: 318, column: 45, scope: !1261)
!2354 = !DILocation(line: 319, column: 21, scope: !1261)
!2355 = !DILocation(line: 319, column: 25, scope: !1261)
!2356 = !DILocation(line: 319, column: 15, scope: !1261)
!2357 = !DILocation(line: 319, column: 34, scope: !1261)
!2358 = !DILocation(line: 319, column: 38, scope: !1261)
!2359 = !DILocation(line: 319, column: 45, scope: !1261)
!2360 = !DILocation(line: 320, column: 21, scope: !1261)
!2361 = !DILocation(line: 320, column: 25, scope: !1261)
!2362 = !DILocation(line: 320, column: 15, scope: !1261)
!2363 = !DILocation(line: 320, column: 34, scope: !1261)
!2364 = !DILocation(line: 320, column: 38, scope: !1261)
!2365 = !DILocation(line: 320, column: 45, scope: !1261)
!2366 = !DILocation(line: 321, column: 21, scope: !1261)
!2367 = !DILocation(line: 321, column: 25, scope: !1261)
!2368 = !DILocation(line: 321, column: 15, scope: !1261)
!2369 = !DILocation(line: 321, column: 34, scope: !1261)
!2370 = !DILocation(line: 321, column: 38, scope: !1261)
!2371 = !DILocation(line: 321, column: 45, scope: !1261)
!2372 = !DILocation(line: 322, column: 21, scope: !1261)
!2373 = !DILocation(line: 322, column: 25, scope: !1261)
!2374 = !DILocation(line: 322, column: 15, scope: !1261)
!2375 = !DILocation(line: 322, column: 34, scope: !1261)
!2376 = !DILocation(line: 322, column: 38, scope: !1261)
!2377 = !DILocation(line: 322, column: 45, scope: !1261)
!2378 = !DILocation(line: 323, column: 21, scope: !1261)
!2379 = !DILocation(line: 323, column: 25, scope: !1261)
!2380 = !DILocation(line: 323, column: 15, scope: !1261)
!2381 = !DILocation(line: 323, column: 34, scope: !1261)
!2382 = !DILocation(line: 323, column: 38, scope: !1261)
!2383 = !DILocation(line: 323, column: 45, scope: !1261)
!2384 = !DILocation(line: 324, column: 21, scope: !1261)
!2385 = !DILocation(line: 324, column: 25, scope: !1261)
!2386 = !DILocation(line: 324, column: 15, scope: !1261)
!2387 = !DILocation(line: 324, column: 34, scope: !1261)
!2388 = !DILocation(line: 324, column: 38, scope: !1261)
!2389 = !DILocation(line: 324, column: 45, scope: !1261)
!2390 = !DILocation(line: 325, column: 21, scope: !1261)
!2391 = !DILocation(line: 325, column: 25, scope: !1261)
!2392 = !DILocation(line: 325, column: 15, scope: !1261)
!2393 = !DILocation(line: 325, column: 34, scope: !1261)
!2394 = !DILocation(line: 325, column: 38, scope: !1261)
!2395 = !DILocation(line: 325, column: 45, scope: !1261)
!2396 = !DILocation(line: 328, column: 20, scope: !1261)
!2397 = !DILocation(line: 328, column: 26, scope: !1261)
!2398 = !DILocation(line: 329, column: 20, scope: !1261)
!2399 = !DILocation(line: 329, column: 26, scope: !1261)
!2400 = !DILocation(line: 330, column: 20, scope: !1261)
!2401 = !DILocation(line: 330, column: 26, scope: !1261)
!2402 = !DILocation(line: 331, column: 20, scope: !1261)
!2403 = !DILocation(line: 331, column: 26, scope: !1261)
!2404 = !DILocation(line: 332, column: 20, scope: !1261)
!2405 = !DILocation(line: 332, column: 26, scope: !1261)
!2406 = !DILocation(line: 333, column: 20, scope: !1261)
!2407 = !DILocation(line: 333, column: 26, scope: !1261)
!2408 = !DILocation(line: 334, column: 20, scope: !1261)
!2409 = !DILocation(line: 334, column: 26, scope: !1261)
!2410 = !DILocation(line: 337, column: 9, scope: !1261)
!2411 = !DILocation(line: 338, column: 9, scope: !1261)
!2412 = !DILocation(line: 339, column: 9, scope: !1261)
!2413 = !DILocation(line: 340, column: 9, scope: !1261)
!2414 = !DILocation(line: 341, column: 9, scope: !1261)
!2415 = !DILocation(line: 342, column: 9, scope: !1261)
!2416 = !DILocation(line: 343, column: 9, scope: !1261)
!2417 = !DILocation(line: 344, column: 9, scope: !1261)
!2418 = !DILocation(line: 347, column: 9, scope: !1261)
!2419 = !DILocation(line: 348, column: 9, scope: !1261)
!2420 = !DILocation(line: 349, column: 9, scope: !1261)
!2421 = !DILocation(line: 350, column: 9, scope: !1261)
!2422 = !DILocation(line: 351, column: 9, scope: !1261)
!2423 = !DILocation(line: 353, column: 9, scope: !1261)
!2424 = !DILocation(line: 357, column: 3, scope: !1261)
!2425 = distinct !DISubprogram(name: "__remill_intrinsics", scope: !2426, file: !2426, line: 35, type: !95, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!2426 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Intrinsics.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!2427 = !DILocation(line: 116, column: 1, scope: !2425)
!2428 = !{!2429, !2429, i64 0}
!2429 = !{!"long", !2430, i64 0}
!2430 = !{!"omnipotent char", !2431, i64 0}
!2431 = !{!"Simple C++ TBAA"}
!2432 = !{!2433, !2433, i64 0}
!2433 = !{!"double", !2430, i64 0}
!2434 = !{!2435, !2430, i64 2065}
!2435 = !{!"_ZTS5State", !2430, i64 16, !2436, i64 2064, !2430, i64 2080, !2437, i64 2088, !2439, i64 2112, !2441, i64 2208, !2442, i64 2480, !2443, i64 2608, !2444, i64 2736, !2430, i64 2760, !2430, i64 2768, !2445, i64 3280}
!2436 = !{!"_ZTS10ArithFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15}
!2437 = !{!"_ZTS8Segments", !2438, i64 0, !2430, i64 2, !2438, i64 4, !2430, i64 6, !2438, i64 8, !2430, i64 10, !2438, i64 12, !2430, i64 14, !2438, i64 16, !2430, i64 18, !2438, i64 20, !2430, i64 22}
!2438 = !{!"short", !2430, i64 0}
!2439 = !{!"_ZTS12AddressSpace", !2429, i64 0, !2440, i64 8, !2429, i64 16, !2440, i64 24, !2429, i64 32, !2440, i64 40, !2429, i64 48, !2440, i64 56, !2429, i64 64, !2440, i64 72, !2429, i64 80, !2440, i64 88}
!2440 = !{!"_ZTS3Reg", !2430, i64 0}
!2441 = !{!"_ZTS3GPR", !2429, i64 0, !2440, i64 8, !2429, i64 16, !2440, i64 24, !2429, i64 32, !2440, i64 40, !2429, i64 48, !2440, i64 56, !2429, i64 64, !2440, i64 72, !2429, i64 80, !2440, i64 88, !2429, i64 96, !2440, i64 104, !2429, i64 112, !2440, i64 120, !2429, i64 128, !2440, i64 136, !2429, i64 144, !2440, i64 152, !2429, i64 160, !2440, i64 168, !2429, i64 176, !2440, i64 184, !2429, i64 192, !2440, i64 200, !2429, i64 208, !2440, i64 216, !2429, i64 224, !2440, i64 232, !2429, i64 240, !2440, i64 248, !2429, i64 256, !2440, i64 264}
!2442 = !{!"_ZTS8X87Stack", !2430, i64 0}
!2443 = !{!"_ZTS3MMX", !2430, i64 0}
!2444 = !{!"_ZTS14FPUStatusFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15, !2430, i64 16, !2430, i64 17, !2430, i64 18, !2430, i64 19, !2430, i64 20}
!2445 = !{!"_ZTS13SegmentCaches", !2446, i64 0, !2446, i64 16, !2446, i64 32, !2446, i64 48, !2446, i64 64, !2446, i64 80}
!2446 = !{!"_ZTS13SegmentShadow", !2430, i64 0, !2447, i64 8, !2447, i64 12}
!2447 = !{!"int", !2430, i64 0}
!2448 = !{!2435, !2430, i64 2067}
!2449 = !{!2435, !2430, i64 2069}
!2450 = !{!2435, !2430, i64 2071}
!2451 = !{!2435, !2430, i64 2073}
!2452 = !{!2435, !2430, i64 2077}
!2453 = !{!2430, !2430, i64 0}
!2454 = !{!2455, !2457}
!2455 = distinct !{!2455, !2456, !"ext_602140_sqrt: argument 0"}
!2456 = distinct !{!2456, !"ext_602140_sqrt"}
!2457 = distinct !{!2457, !2456, !"ext_602140_sqrt: argument 1"}
!2458 = !{!2455}
!2459 = !{!2457}
!2460 = !{!2461, !2461, i64 0}
!2461 = !{!"float", !2430, i64 0}
!2462 = !{!2463, !2465}
!2463 = distinct !{!2463, !2464, !"ext_602138_sin: argument 0"}
!2464 = distinct !{!2464, !"ext_602138_sin"}
!2465 = distinct !{!2465, !2464, !"ext_602138_sin: argument 1"}
!2466 = !{!2463}
!2467 = !{!2465}
!2468 = !{!2469, !2471}
!2469 = distinct !{!2469, !2470, !"ext_400700_cos: argument 0"}
!2470 = distinct !{!2470, !"ext_400700_cos"}
!2471 = distinct !{!2471, !2470, !"ext_400700_cos: argument 1"}
!2472 = !{!2469}
!2473 = !{!2471}
!2474 = !{!2475, !2477}
!2475 = distinct !{!2475, !2476, !"ext_400700_cos: argument 0"}
!2476 = distinct !{!2476, !"ext_400700_cos"}
!2477 = distinct !{!2477, !2476, !"ext_400700_cos: argument 1"}
!2478 = !{!2475}
!2479 = !{!2477}
!2480 = !{!2481, !2483}
!2481 = distinct !{!2481, !2482, !"ext_400700_cos: argument 0"}
!2482 = distinct !{!2482, !"ext_400700_cos"}
!2483 = distinct !{!2483, !2482, !"ext_400700_cos: argument 1"}
!2484 = !{!2481}
!2485 = !{!2483}
!2486 = !{!2487, !2489}
!2487 = distinct !{!2487, !2488, !"ext_6020f8_atan: argument 0"}
!2488 = distinct !{!2488, !"ext_6020f8_atan"}
!2489 = distinct !{!2489, !2488, !"ext_6020f8_atan: argument 1"}
!2490 = !{!2487}
!2491 = !{!2489}
!2492 = !{!2493, !2495}
!2493 = distinct !{!2493, !2494, !"ext_602138_sin: argument 0"}
!2494 = distinct !{!2494, !"ext_602138_sin"}
!2495 = distinct !{!2495, !2494, !"ext_602138_sin: argument 1"}
!2496 = !{!2493}
!2497 = !{!2495}
!2498 = !{!2499, !2501}
!2499 = distinct !{!2499, !2500, !"ext_400700_cos: argument 0"}
!2500 = distinct !{!2500, !"ext_400700_cos"}
!2501 = distinct !{!2501, !2500, !"ext_400700_cos: argument 1"}
!2502 = !{!2499}
!2503 = !{!2501}
!2504 = !{!2505, !2507}
!2505 = distinct !{!2505, !2506, !"ext_400700_cos: argument 0"}
!2506 = distinct !{!2506, !"ext_400700_cos"}
!2507 = distinct !{!2507, !2506, !"ext_400700_cos: argument 1"}
!2508 = !{!2505}
!2509 = !{!2507}
!2510 = !{!2511, !2513}
!2511 = distinct !{!2511, !2512, !"ext_400700_cos: argument 0"}
!2512 = distinct !{!2512, !"ext_400700_cos"}
!2513 = distinct !{!2513, !2512, !"ext_400700_cos: argument 1"}
!2514 = !{!2511}
!2515 = !{!2513}
!2516 = !{!2517, !2519}
!2517 = distinct !{!2517, !2518, !"ext_6020f8_atan: argument 0"}
!2518 = distinct !{!2518, !"ext_6020f8_atan"}
!2519 = distinct !{!2519, !2518, !"ext_6020f8_atan: argument 1"}
!2520 = !{!2517}
!2521 = !{!2519}
