; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0C\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_401590.feof_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43ea10.Die(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_402ec0.InitAinfo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_401540.fgets_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_401660.strtok_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_401480.strchr_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_446060.sre_malloc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4460b0.sre_realloc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43fee0.SetSeqinfoString(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4014a0.rewind_plt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_451f40.FSet(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_445df0.Strdup(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4514a0.IsReal(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43bdd0.copy_alignment_line(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43ebe0.Warn(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_42f240.MSAFromAINFO(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_42e2c0.MSAVerifyParse(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_402f60.FreeAlignment(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x19f1f__rip__type = type <{ [4 x i8] }>
@G_0x19f1f__rip_= global %G_0x19f1f__rip__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x676f80_type = type <{ [4 x i8] }>
@G_0x676f80= global %G_0x676f80_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4598e4_type = type <{ [8 x i8] }>
@G__0x4598e4= global %G__0x4598e4_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x45992c_type = type <{ [8 x i8] }>
@G__0x45992c= global %G__0x45992c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459931_type = type <{ [8 x i8] }>
@G__0x459931= global %G__0x459931_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459936_type = type <{ [8 x i8] }>
@G__0x459936= global %G__0x459936_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4599e3_type = type <{ [8 x i8] }>
@G__0x4599e3= global %G__0x4599e3_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4599e8_type = type <{ [8 x i8] }>
@G__0x4599e8= global %G__0x4599e8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4599ed_type = type <{ [8 x i8] }>
@G__0x4599ed= global %G__0x4599ed_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459a08_type = type <{ [4 x i8] }>
@G__0x459a08= global %G__0x459a08_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x459a0d_type = type <{ [4 x i8] }>
@G__0x459a0d= global %G__0x459a0d_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x459a12_type = type <{ [4 x i8] }>
@G__0x459a12= global %G__0x459a12_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x459a17_type = type <{ [4 x i8] }>
@G__0x459a17= global %G__0x459a17_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x459a1c_type = type <{ [4 x i8] }>
@G__0x459a1c= global %G__0x459a1c_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x459a21_type = type <{ [8 x i8] }>
@G__0x459a21= global %G__0x459a21_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459a49_type = type <{ [4 x i8] }>
@G__0x459a49= global %G__0x459a49_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x459a4e_type = type <{ [8 x i8] }>
@G__0x459a4e= global %G__0x459a4e_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459a76_type = type <{ [4 x i8] }>
@G__0x459a76= global %G__0x459a76_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x459a7b_type = type <{ [8 x i8] }>
@G__0x459a7b= global %G__0x459a7b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459aa3_type = type <{ [4 x i8] }>
@G__0x459aa3= global %G__0x459aa3_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x459aa8_type = type <{ [8 x i8] }>
@G__0x459aa8= global %G__0x459aa8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459ad0_type = type <{ [8 x i8] }>
@G__0x459ad0= global %G__0x459ad0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459b10_type = type <{ [8 x i8] }>
@G__0x459b10= global %G__0x459b10_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459b49_type = type <{ [8 x i8] }>
@G__0x459b49= global %G__0x459b49_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459b4c_type = type <{ [8 x i8] }>
@G__0x459b4c= global %G__0x459b4c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459b50_type = type <{ [8 x i8] }>
@G__0x459b50= global %G__0x459b50_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459b78_type = type <{ [8 x i8] }>
@G__0x459b78= global %G__0x459b78_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459ba0_type = type <{ [8 x i8] }>
@G__0x459ba0= global %G__0x459ba0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459bc8_type = type <{ [8 x i8] }>
@G__0x459bc8= global %G__0x459bc8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459bf0_type = type <{ [8 x i8] }>
@G__0x459bf0= global %G__0x459bf0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459bf3_type = type <{ [8 x i8] }>
@G__0x459bf3= global %G__0x459bf3_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x459c20_type = type <{ [8 x i8] }>
@G__0x459c20= global %G__0x459c20_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x45a1f5_type = type <{ [8 x i8] }>
@G__0x45a1f5= global %G__0x45a1f5_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x45a1f7_type = type <{ [8 x i8] }>
@G__0x45a1f7= global %G__0x45a1f7_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x662bc0_type = type <{ [8 x i8] }>
@G__0x662bc0= global %G__0x662bc0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @ReadSELEX(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .ReadSELEX:	 RIP: 439d30	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 439d30	 Bytes: 1
  %loadMem_439d30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d30 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d30)
  store %struct.Memory* %call_439d30, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 439d31	 Bytes: 3
  %loadMem_439d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d31 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d31)
  store %struct.Memory* %call_439d31, %struct.Memory** %MEMORY

  ; Code: subq $0x2260, %rsp	 RIP: 439d34	 Bytes: 7
  %loadMem_439d34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d34 = call %struct.Memory* @routine_subq__0x2260___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d34)
  store %struct.Memory* %call_439d34, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x10(%rbp)	 RIP: 439d3b	 Bytes: 4
  %loadMem_439d3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d3b = call %struct.Memory* @routine_movq__rdi__MINUS0x10__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d3b)
  store %struct.Memory* %call_439d3b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2c(%rbp)	 RIP: 439d3f	 Bytes: 7
  %loadMem_439d3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d3f = call %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d3f)
  store %struct.Memory* %call_439d3f, %struct.Memory** %MEMORY

  ; Code: movq $0x0, -0x2038(%rbp)	 RIP: 439d46	 Bytes: 11
  %loadMem_439d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d46 = call %struct.Memory* @routine_movq__0x0__MINUS0x2038__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d46)
  store %struct.Memory* %call_439d46, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2078(%rbp)	 RIP: 439d51	 Bytes: 10
  %loadMem_439d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d51 = call %struct.Memory* @routine_movl__0x0__MINUS0x2078__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d51)
  store %struct.Memory* %call_439d51, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x207c(%rbp)	 RIP: 439d5b	 Bytes: 10
  %loadMem_439d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d5b = call %struct.Memory* @routine_movl__0x0__MINUS0x207c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d5b)
  store %struct.Memory* %call_439d5b, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rdi	 RIP: 439d65	 Bytes: 4
  %loadMem_439d65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d65 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d65)
  store %struct.Memory* %call_439d65, %struct.Memory** %MEMORY

  ; Code: movq (%rdi), %rdi	 RIP: 439d69	 Bytes: 3
  %loadMem_439d69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d69 = call %struct.Memory* @routine_movq___rdi____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d69)
  store %struct.Memory* %call_439d69, %struct.Memory** %MEMORY

  ; Code: callq .feof_plt	 RIP: 439d6c	 Bytes: 5
  %loadMem1_439d6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439d6c = call %struct.Memory* @routine_callq_.feof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439d6c, i64 -231388, i64 5, i64 5)
  store %struct.Memory* %call1_439d6c, %struct.Memory** %MEMORY

  %loadMem2_439d6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439d6c = load i64, i64* %3
  %call2_439d6c = call %struct.Memory* @sub_401590.feof_plt(%struct.State* %0, i64  %loadPC_439d6c, %struct.Memory* %loadMem2_439d6c)
  store %struct.Memory* %call2_439d6c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 439d71	 Bytes: 3
  %loadMem_439d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d71 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d71)
  store %struct.Memory* %call_439d71, %struct.Memory** %MEMORY

  ; Code: je .L_439d87	 RIP: 439d74	 Bytes: 6
  %loadMem_439d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d74 = call %struct.Memory* @routine_je_.L_439d87(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d74, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_439d74, %struct.Memory** %MEMORY

  %loadBr_439d74 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439d74 = icmp eq i8 %loadBr_439d74, 1
  br i1 %cmpBr_439d74, label %block_.L_439d87, label %block_439d7a

block_439d7a:
  ; Code: movq $0x0, -0x8(%rbp)	 RIP: 439d7a	 Bytes: 8
  %loadMem_439d7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d7a = call %struct.Memory* @routine_movq__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d7a)
  store %struct.Memory* %call_439d7a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43bdb6	 RIP: 439d82	 Bytes: 5
  %loadMem_439d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d82 = call %struct.Memory* @routine_jmpq_.L_43bdb6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d82, i64 8244, i64 5)
  store %struct.Memory* %call_439d82, %struct.Memory** %MEMORY

  br label %block_.L_43bdb6

  ; Code: .L_439d87:	 RIP: 439d87	 Bytes: 0
block_.L_439d87:

  ; Code: movq -0x10(%rbp), %rax	 RIP: 439d87	 Bytes: 4
  %loadMem_439d87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d87 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d87)
  store %struct.Memory* %call_439d87, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x30(%rax)	 RIP: 439d8b	 Bytes: 4
  %loadMem_439d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d8b = call %struct.Memory* @routine_cmpl__0x0__0x30__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d8b)
  store %struct.Memory* %call_439d8b, %struct.Memory** %MEMORY

  ; Code: jne .L_439da3	 RIP: 439d8f	 Bytes: 6
  %loadMem_439d8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d8f = call %struct.Memory* @routine_jne_.L_439da3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d8f, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_439d8f, %struct.Memory** %MEMORY

  %loadBr_439d8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439d8f = icmp eq i8 %loadBr_439d8f, 1
  br i1 %cmpBr_439d8f, label %block_.L_439da3, label %block_439d95

block_439d95:
  ; Code: movq -0x10(%rbp), %rax	 RIP: 439d95	 Bytes: 4
  %loadMem_439d95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d95 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d95)
  store %struct.Memory* %call_439d95, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x34(%rax)	 RIP: 439d99	 Bytes: 4
  %loadMem_439d99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d99 = call %struct.Memory* @routine_cmpl__0x0__0x34__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d99)
  store %struct.Memory* %call_439d99, %struct.Memory** %MEMORY

  ; Code: je .L_439db4	 RIP: 439d9d	 Bytes: 6
  %loadMem_439d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439d9d = call %struct.Memory* @routine_je_.L_439db4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439d9d, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_439d9d, %struct.Memory** %MEMORY

  %loadBr_439d9d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439d9d = icmp eq i8 %loadBr_439d9d, 1
  br i1 %cmpBr_439d9d, label %block_.L_439db4, label %block_.L_439da3

  ; Code: .L_439da3:	 RIP: 439da3	 Bytes: 0
block_.L_439da3:

  ; Code: movq $0x4598e4, %rdi	 RIP: 439da3	 Bytes: 10
  %loadMem_439da3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439da3 = call %struct.Memory* @routine_movq__0x4598e4___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439da3)
  store %struct.Memory* %call_439da3, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 439dad	 Bytes: 2
  %loadMem_439dad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439dad = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439dad)
  store %struct.Memory* %call_439dad, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 439daf	 Bytes: 5
  %loadMem1_439daf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439daf = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439daf, i64 19553, i64 5, i64 5)
  store %struct.Memory* %call1_439daf, %struct.Memory** %MEMORY

  %loadMem2_439daf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439daf = load i64, i64* %3
  %call2_439daf = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_439daf, %struct.Memory* %loadMem2_439daf)
  store %struct.Memory* %call2_439daf, %struct.Memory** %MEMORY

  ; Code: .L_439db4:	 RIP: 439db4	 Bytes: 0
  br label %block_.L_439db4
block_.L_439db4:

  ; Code: leaq -0x20e8(%rbp), %rax	 RIP: 439db4	 Bytes: 7
  %loadMem_439db4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439db4 = call %struct.Memory* @routine_leaq_MINUS0x20e8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439db4)
  store %struct.Memory* %call_439db4, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rcx	 RIP: 439dbb	 Bytes: 4
  %loadMem_439dbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439dbb = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439dbb)
  store %struct.Memory* %call_439dbb, %struct.Memory** %MEMORY

  ; Code: movq (%rcx), %rcx	 RIP: 439dbf	 Bytes: 3
  %loadMem_439dbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439dbf = call %struct.Memory* @routine_movq___rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439dbf)
  store %struct.Memory* %call_439dbf, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x20(%rbp)	 RIP: 439dc2	 Bytes: 4
  %loadMem_439dc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439dc2 = call %struct.Memory* @routine_movq__rcx__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439dc2)
  store %struct.Memory* %call_439dc2, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x20f0(%rbp)	 RIP: 439dc6	 Bytes: 7
  %loadMem_439dc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439dc6 = call %struct.Memory* @routine_movq__rax__MINUS0x20f0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439dc6)
  store %struct.Memory* %call_439dc6, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 439dcd	 Bytes: 7
  %loadMem_439dcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439dcd = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439dcd)
  store %struct.Memory* %call_439dcd, %struct.Memory** %MEMORY

  ; Code: callq .InitAinfo	 RIP: 439dd4	 Bytes: 5
  %loadMem1_439dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439dd4 = call %struct.Memory* @routine_callq_.InitAinfo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439dd4, i64 -225044, i64 5, i64 5)
  store %struct.Memory* %call1_439dd4, %struct.Memory** %MEMORY

  %loadMem2_439dd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439dd4 = load i64, i64* %3
  %call2_439dd4 = call %struct.Memory* @sub_402ec0.InitAinfo(%struct.State* %0, i64  %loadPC_439dd4, %struct.Memory* %loadMem2_439dd4)
  store %struct.Memory* %call2_439dd4, %struct.Memory** %MEMORY

  ; Code: .L_439dd9:	 RIP: 439dd9	 Bytes: 0
  br label %block_.L_439dd9
block_.L_439dd9:

  ; Code: movl $0x1000, %esi	 RIP: 439dd9	 Bytes: 5
  %loadMem_439dd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439dd9 = call %struct.Memory* @routine_movl__0x1000___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439dd9)
  store %struct.Memory* %call_439dd9, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 439dde	 Bytes: 7
  %loadMem_439dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439dde = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439dde)
  store %struct.Memory* %call_439dde, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rdx	 RIP: 439de5	 Bytes: 4
  %loadMem_439de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439de5 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439de5)
  store %struct.Memory* %call_439de5, %struct.Memory** %MEMORY

  ; Code: callq .fgets_plt	 RIP: 439de9	 Bytes: 5
  %loadMem1_439de9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439de9 = call %struct.Memory* @routine_callq_.fgets_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439de9, i64 -231593, i64 5, i64 5)
  store %struct.Memory* %call1_439de9, %struct.Memory** %MEMORY

  %loadMem2_439de9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439de9 = load i64, i64* %3
  %call2_439de9 = call %struct.Memory* @sub_401540.fgets_plt(%struct.State* %0, i64  %loadPC_439de9, %struct.Memory* %loadMem2_439de9)
  store %struct.Memory* %call2_439de9, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 439dee	 Bytes: 4
  %loadMem_439dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439dee = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439dee)
  store %struct.Memory* %call_439dee, %struct.Memory** %MEMORY

  ; Code: jne .L_439e10	 RIP: 439df2	 Bytes: 6
  %loadMem_439df2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439df2 = call %struct.Memory* @routine_jne_.L_439e10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439df2, i8* %BRANCH_TAKEN, i64 30, i64 6, i64 6)
  store %struct.Memory* %call_439df2, %struct.Memory** %MEMORY

  %loadBr_439df2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439df2 = icmp eq i8 %loadBr_439df2, 1
  br i1 %cmpBr_439df2, label %block_.L_439e10, label %block_439df8

block_439df8:
  ; Code: movl $0x2, 0x676f80	 RIP: 439df8	 Bytes: 11
  %loadMem_439df8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439df8 = call %struct.Memory* @routine_movl__0x2__0x676f80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439df8)
  store %struct.Memory* %call_439df8, %struct.Memory** %MEMORY

  ; Code: movq $0x0, -0x8(%rbp)	 RIP: 439e03	 Bytes: 8
  %loadMem_439e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e03 = call %struct.Memory* @routine_movq__0x0__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e03)
  store %struct.Memory* %call_439e03, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43bdb6	 RIP: 439e0b	 Bytes: 5
  %loadMem_439e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e0b = call %struct.Memory* @routine_jmpq_.L_43bdb6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e0b, i64 8107, i64 5)
  store %struct.Memory* %call_439e0b, %struct.Memory** %MEMORY

  br label %block_.L_43bdb6

  ; Code: .L_439e10:	 RIP: 439e10	 Bytes: 0
block_.L_439e10:

  ; Code: leaq -0x1030(%rbp), %rsi	 RIP: 439e10	 Bytes: 7
  %loadMem_439e10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e10 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e10)
  store %struct.Memory* %call_439e10, %struct.Memory** %MEMORY

  ; Code: leaq -0x2030(%rbp), %rdi	 RIP: 439e17	 Bytes: 7
  %loadMem_439e17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e17 = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e17)
  store %struct.Memory* %call_439e17, %struct.Memory** %MEMORY

  ; Code: callq .strcpy_plt	 RIP: 439e1e	 Bytes: 5
  %loadMem1_439e1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439e1e = call %struct.Memory* @routine_callq_.strcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439e1e, i64 -231998, i64 5, i64 5)
  store %struct.Memory* %call1_439e1e, %struct.Memory** %MEMORY

  %loadMem2_439e1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439e1e = load i64, i64* %3
  %call2_439e1e = call %struct.Memory* @ext_strcpy(%struct.State* %0, i64  %loadPC_439e1e, %struct.Memory* %loadMem2_439e1e)
  store %struct.Memory* %call2_439e1e, %struct.Memory** %MEMORY

  ; Code: movsbl -0x1030(%rbp), %ecx	 RIP: 439e23	 Bytes: 7
  %loadMem_439e23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e23 = call %struct.Memory* @routine_movsbl_MINUS0x1030__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e23)
  store %struct.Memory* %call_439e23, %struct.Memory** %MEMORY

  ; Code: cmpl $0x23, %ecx	 RIP: 439e2a	 Bytes: 3
  %loadMem_439e2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e2a = call %struct.Memory* @routine_cmpl__0x23___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e2a)
  store %struct.Memory* %call_439e2a, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2100(%rbp)	 RIP: 439e2d	 Bytes: 7
  %loadMem_439e2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e2d = call %struct.Memory* @routine_movq__rax__MINUS0x2100__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e2d)
  store %struct.Memory* %call_439e2d, %struct.Memory** %MEMORY

  ; Code: jne .L_439ea9	 RIP: 439e34	 Bytes: 6
  %loadMem_439e34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e34 = call %struct.Memory* @routine_jne_.L_439ea9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e34, i8* %BRANCH_TAKEN, i64 117, i64 6, i64 6)
  store %struct.Memory* %call_439e34, %struct.Memory** %MEMORY

  %loadBr_439e34 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439e34 = icmp eq i8 %loadBr_439e34, 1
  br i1 %cmpBr_439e34, label %block_.L_439ea9, label %block_439e3a

block_439e3a:
  ; Code: movq $0x45992c, %rsi	 RIP: 439e3a	 Bytes: 10
  %loadMem_439e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e3a = call %struct.Memory* @routine_movq__0x45992c___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e3a)
  store %struct.Memory* %call_439e3a, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 439e44	 Bytes: 5
  %loadMem_439e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e44 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e44)
  store %struct.Memory* %call_439e44, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 439e49	 Bytes: 2
  %loadMem_439e49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e49 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e49)
  store %struct.Memory* %call_439e49, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 439e4b	 Bytes: 7
  %loadMem_439e4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e4b = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e4b)
  store %struct.Memory* %call_439e4b, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 439e52	 Bytes: 5
  %loadMem1_439e52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439e52 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439e52, i64 -232066, i64 5, i64 5)
  store %struct.Memory* %call1_439e52, %struct.Memory** %MEMORY

  %loadMem2_439e52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439e52 = load i64, i64* %3
  %call2_439e52 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_439e52, %struct.Memory* %loadMem2_439e52)
  store %struct.Memory* %call2_439e52, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 439e57	 Bytes: 3
  %loadMem_439e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e57 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e57)
  store %struct.Memory* %call_439e57, %struct.Memory** %MEMORY

  ; Code: jne .L_439e6f	 RIP: 439e5a	 Bytes: 6
  %loadMem_439e5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e5a = call %struct.Memory* @routine_jne_.L_439e6f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e5a, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_439e5a, %struct.Memory** %MEMORY

  %loadBr_439e5a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439e5a = icmp eq i8 %loadBr_439e5a, 1
  br i1 %cmpBr_439e5a, label %block_.L_439e6f, label %block_439e60

block_439e60:
  ; Code: movl $0x1, -0x2078(%rbp)	 RIP: 439e60	 Bytes: 10
  %loadMem_439e60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e60 = call %struct.Memory* @routine_movl__0x1__MINUS0x2078__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e60)
  store %struct.Memory* %call_439e60, %struct.Memory** %MEMORY

  ; Code: jmpq .L_439ea4	 RIP: 439e6a	 Bytes: 5
  %loadMem_439e6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e6a = call %struct.Memory* @routine_jmpq_.L_439ea4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e6a, i64 58, i64 5)
  store %struct.Memory* %call_439e6a, %struct.Memory** %MEMORY

  br label %block_.L_439ea4

  ; Code: .L_439e6f:	 RIP: 439e6f	 Bytes: 0
block_.L_439e6f:

  ; Code: movq $0x459931, %rsi	 RIP: 439e6f	 Bytes: 10
  %loadMem_439e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e6f = call %struct.Memory* @routine_movq__0x459931___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e6f)
  store %struct.Memory* %call_439e6f, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 439e79	 Bytes: 5
  %loadMem_439e79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e79 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e79)
  store %struct.Memory* %call_439e79, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 439e7e	 Bytes: 2
  %loadMem_439e7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e7e = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e7e)
  store %struct.Memory* %call_439e7e, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 439e80	 Bytes: 7
  %loadMem_439e80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e80 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e80)
  store %struct.Memory* %call_439e80, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 439e87	 Bytes: 5
  %loadMem1_439e87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439e87 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439e87, i64 -232119, i64 5, i64 5)
  store %struct.Memory* %call1_439e87, %struct.Memory** %MEMORY

  %loadMem2_439e87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439e87 = load i64, i64* %3
  %call2_439e87 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_439e87, %struct.Memory* %loadMem2_439e87)
  store %struct.Memory* %call2_439e87, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 439e8c	 Bytes: 3
  %loadMem_439e8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e8c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e8c)
  store %struct.Memory* %call_439e8c, %struct.Memory** %MEMORY

  ; Code: jne .L_439e9f	 RIP: 439e8f	 Bytes: 6
  %loadMem_439e8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e8f = call %struct.Memory* @routine_jne_.L_439e9f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e8f, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_439e8f, %struct.Memory** %MEMORY

  %loadBr_439e8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439e8f = icmp eq i8 %loadBr_439e8f, 1
  br i1 %cmpBr_439e8f, label %block_.L_439e9f, label %block_439e95

block_439e95:
  ; Code: movl $0x1, -0x207c(%rbp)	 RIP: 439e95	 Bytes: 10
  %loadMem_439e95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e95 = call %struct.Memory* @routine_movl__0x1__MINUS0x207c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e95)
  store %struct.Memory* %call_439e95, %struct.Memory** %MEMORY

  ; Code: .L_439e9f:	 RIP: 439e9f	 Bytes: 0
  br label %block_.L_439e9f
block_.L_439e9f:

  ; Code: jmpq .L_439ea4	 RIP: 439e9f	 Bytes: 5
  %loadMem_439e9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439e9f = call %struct.Memory* @routine_jmpq_.L_439ea4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439e9f, i64 5, i64 5)
  store %struct.Memory* %call_439e9f, %struct.Memory** %MEMORY

  br label %block_.L_439ea4

  ; Code: .L_439ea4:	 RIP: 439ea4	 Bytes: 0
block_.L_439ea4:

  ; Code: jmpq .L_439ea9	 RIP: 439ea4	 Bytes: 5
  %loadMem_439ea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ea4 = call %struct.Memory* @routine_jmpq_.L_439ea9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ea4, i64 5, i64 5)
  store %struct.Memory* %call_439ea4, %struct.Memory** %MEMORY

  br label %block_.L_439ea9

  ; Code: .L_439ea9:	 RIP: 439ea9	 Bytes: 0
block_.L_439ea9:

  ; Code: jmpq .L_439eae	 RIP: 439ea9	 Bytes: 5
  %loadMem_439ea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ea9 = call %struct.Memory* @routine_jmpq_.L_439eae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ea9, i64 5, i64 5)
  store %struct.Memory* %call_439ea9, %struct.Memory** %MEMORY

  br label %block_.L_439eae

  ; Code: .L_439eae:	 RIP: 439eae	 Bytes: 0
block_.L_439eae:

  ; Code: movq $0x45a1f5, %rsi	 RIP: 439eae	 Bytes: 10
  %loadMem_439eae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439eae = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439eae)
  store %struct.Memory* %call_439eae, %struct.Memory** %MEMORY

  ; Code: leaq -0x2030(%rbp), %rdi	 RIP: 439eb8	 Bytes: 7
  %loadMem_439eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439eb8 = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439eb8)
  store %struct.Memory* %call_439eb8, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 439ebf	 Bytes: 5
  %loadMem1_439ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439ebf = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439ebf, i64 -231519, i64 5, i64 5)
  store %struct.Memory* %call1_439ebf, %struct.Memory** %MEMORY

  %loadMem2_439ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439ebf = load i64, i64* %3
  %call2_439ebf = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_439ebf, %struct.Memory* %loadMem2_439ebf)
  store %struct.Memory* %call2_439ebf, %struct.Memory** %MEMORY

  ; Code: movb $0x1, %cl	 RIP: 439ec4	 Bytes: 2
  %loadMem_439ec4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ec4 = call %struct.Memory* @routine_movb__0x1___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ec4)
  store %struct.Memory* %call_439ec4, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2048(%rbp)	 RIP: 439ec6	 Bytes: 7
  %loadMem_439ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ec6 = call %struct.Memory* @routine_movq__rax__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ec6)
  store %struct.Memory* %call_439ec6, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 439ecd	 Bytes: 4
  %loadMem_439ecd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ecd = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ecd)
  store %struct.Memory* %call_439ecd, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x2101(%rbp)	 RIP: 439ed1	 Bytes: 6
  %loadMem_439ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ed1 = call %struct.Memory* @routine_movb__cl__MINUS0x2101__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ed1)
  store %struct.Memory* %call_439ed1, %struct.Memory** %MEMORY

  ; Code: je .L_439f03	 RIP: 439ed7	 Bytes: 6
  %loadMem_439ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ed7 = call %struct.Memory* @routine_je_.L_439f03(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ed7, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_439ed7, %struct.Memory** %MEMORY

  %loadBr_439ed7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439ed7 = icmp eq i8 %loadBr_439ed7, 1
  br i1 %cmpBr_439ed7, label %block_.L_439f03, label %block_439edd

block_439edd:
  ; Code: movq $0x662bc0, %rdi	 RIP: 439edd	 Bytes: 10
  %loadMem_439edd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439edd = call %struct.Memory* @routine_movq__0x662bc0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439edd)
  store %struct.Memory* %call_439edd, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rax	 RIP: 439ee7	 Bytes: 7
  %loadMem_439ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ee7 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ee7)
  store %struct.Memory* %call_439ee7, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %esi	 RIP: 439eee	 Bytes: 3
  %loadMem_439eee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439eee = call %struct.Memory* @routine_movsbl___rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439eee)
  store %struct.Memory* %call_439eee, %struct.Memory** %MEMORY

  ; Code: callq .strchr_plt	 RIP: 439ef1	 Bytes: 5
  %loadMem1_439ef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439ef1 = call %struct.Memory* @routine_callq_.strchr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439ef1, i64 -232049, i64 5, i64 5)
  store %struct.Memory* %call1_439ef1, %struct.Memory** %MEMORY

  %loadMem2_439ef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439ef1 = load i64, i64* %3
  %call2_439ef1 = call %struct.Memory* @sub_401480.strchr_plt(%struct.State* %0, i64  %loadPC_439ef1, %struct.Memory* %loadMem2_439ef1)
  store %struct.Memory* %call2_439ef1, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 439ef6	 Bytes: 4
  %loadMem_439ef6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ef6 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ef6)
  store %struct.Memory* %call_439ef6, %struct.Memory** %MEMORY

  ; Code: setne %cl	 RIP: 439efa	 Bytes: 3
  %loadMem_439efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439efa = call %struct.Memory* @routine_setne__cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439efa)
  store %struct.Memory* %call_439efa, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x2101(%rbp)	 RIP: 439efd	 Bytes: 6
  %loadMem_439efd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439efd = call %struct.Memory* @routine_movb__cl__MINUS0x2101__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439efd)
  store %struct.Memory* %call_439efd, %struct.Memory** %MEMORY

  ; Code: .L_439f03:	 RIP: 439f03	 Bytes: 0
  br label %block_.L_439f03
block_.L_439f03:

  ; Code: movb -0x2101(%rbp), %al	 RIP: 439f03	 Bytes: 6
  %loadMem_439f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f03 = call %struct.Memory* @routine_movb_MINUS0x2101__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f03)
  store %struct.Memory* %call_439f03, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 439f09	 Bytes: 2
  %loadMem_439f09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f09 = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f09)
  store %struct.Memory* %call_439f09, %struct.Memory** %MEMORY

  ; Code: jne .L_439dd9	 RIP: 439f0b	 Bytes: 6
  %loadMem_439f0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f0b = call %struct.Memory* @routine_jne_.L_439dd9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f0b, i8* %BRANCH_TAKEN, i64 -306, i64 6, i64 6)
  store %struct.Memory* %call_439f0b, %struct.Memory** %MEMORY

  %loadBr_439f0b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439f0b = icmp eq i8 %loadBr_439f0b, 1
  br i1 %cmpBr_439f0b, label %block_.L_439dd9, label %block_439f11

block_439f11:
  ; Code: movl $0x0, -0x203c(%rbp)	 RIP: 439f11	 Bytes: 10
  %loadMem_439f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f11 = call %struct.Memory* @routine_movl__0x0__MINUS0x203c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f11)
  store %struct.Memory* %call_439f11, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2068(%rbp)	 RIP: 439f1b	 Bytes: 10
  %loadMem_439f1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f1b = call %struct.Memory* @routine_movl__0x0__MINUS0x2068__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f1b)
  store %struct.Memory* %call_439f1b, %struct.Memory** %MEMORY

  ; Code: .L_439f25:	 RIP: 439f25	 Bytes: 0
  br label %block_.L_439f25
block_.L_439f25:

  ; Code: movq -0x20(%rbp), %rdi	 RIP: 439f25	 Bytes: 4
  %loadMem_439f25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f25 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f25)
  store %struct.Memory* %call_439f25, %struct.Memory** %MEMORY

  ; Code: callq .feof_plt	 RIP: 439f29	 Bytes: 5
  %loadMem1_439f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439f29 = call %struct.Memory* @routine_callq_.feof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439f29, i64 -231833, i64 5, i64 5)
  store %struct.Memory* %call1_439f29, %struct.Memory** %MEMORY

  %loadMem2_439f29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439f29 = load i64, i64* %3
  %call2_439f29 = call %struct.Memory* @sub_401590.feof_plt(%struct.State* %0, i64  %loadPC_439f29, %struct.Memory* %loadMem2_439f29)
  store %struct.Memory* %call2_439f29, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 439f2e	 Bytes: 3
  %loadMem_439f2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f2e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f2e)
  store %struct.Memory* %call_439f2e, %struct.Memory** %MEMORY

  ; Code: setne %cl	 RIP: 439f31	 Bytes: 3
  %loadMem_439f31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f31 = call %struct.Memory* @routine_setne__cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f31)
  store %struct.Memory* %call_439f31, %struct.Memory** %MEMORY

  ; Code: xorb $0xff, %cl	 RIP: 439f34	 Bytes: 3
  %loadMem_439f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f34 = call %struct.Memory* @routine_xorb__0xff___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f34)
  store %struct.Memory* %call_439f34, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %cl	 RIP: 439f37	 Bytes: 3
  %loadMem_439f37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f37 = call %struct.Memory* @routine_testb__0x1___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f37)
  store %struct.Memory* %call_439f37, %struct.Memory** %MEMORY

  ; Code: jne .L_439f45	 RIP: 439f3a	 Bytes: 6
  %loadMem_439f3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f3a = call %struct.Memory* @routine_jne_.L_439f45(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f3a, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_439f3a, %struct.Memory** %MEMORY

  %loadBr_439f3a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439f3a = icmp eq i8 %loadBr_439f3a, 1
  br i1 %cmpBr_439f3a, label %block_.L_439f45, label %block_439f40

block_439f40:
  ; Code: jmpq .L_43a559	 RIP: 439f40	 Bytes: 5
  %loadMem_439f40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f40 = call %struct.Memory* @routine_jmpq_.L_43a559(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f40, i64 1561, i64 5)
  store %struct.Memory* %call_439f40, %struct.Memory** %MEMORY

  br label %block_.L_43a559

  ; Code: .L_439f45:	 RIP: 439f45	 Bytes: 0
block_.L_439f45:

  ; Code: cmpl $0x0, -0x203c(%rbp)	 RIP: 439f45	 Bytes: 7
  %loadMem_439f45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f45 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x203c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f45)
  store %struct.Memory* %call_439f45, %struct.Memory** %MEMORY

  ; Code: jne .L_439f79	 RIP: 439f4c	 Bytes: 6
  %loadMem_439f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f4c = call %struct.Memory* @routine_jne_.L_439f79(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f4c, i8* %BRANCH_TAKEN, i64 45, i64 6, i64 6)
  store %struct.Memory* %call_439f4c, %struct.Memory** %MEMORY

  %loadBr_439f4c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439f4c = icmp eq i8 %loadBr_439f4c, 1
  br i1 %cmpBr_439f4c, label %block_.L_439f79, label %block_439f52

block_439f52:
  ; Code: movq $0x459936, %rdi	 RIP: 439f52	 Bytes: 10
  %loadMem_439f52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f52 = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f52)
  store %struct.Memory* %call_439f52, %struct.Memory** %MEMORY

  ; Code: movl $0x97, %esi	 RIP: 439f5c	 Bytes: 5
  %loadMem_439f5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f5c = call %struct.Memory* @routine_movl__0x97___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f5c)
  store %struct.Memory* %call_439f5c, %struct.Memory** %MEMORY

  ; Code: movl $0x8, %eax	 RIP: 439f61	 Bytes: 5
  %loadMem_439f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f61 = call %struct.Memory* @routine_movl__0x8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f61)
  store %struct.Memory* %call_439f61, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 439f66	 Bytes: 2
  %loadMem_439f66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f66 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f66)
  store %struct.Memory* %call_439f66, %struct.Memory** %MEMORY

  ; Code: callq .sre_malloc	 RIP: 439f68	 Bytes: 5
  %loadMem1_439f68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439f68 = call %struct.Memory* @routine_callq_.sre_malloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439f68, i64 49400, i64 5, i64 5)
  store %struct.Memory* %call1_439f68, %struct.Memory** %MEMORY

  %loadMem2_439f68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439f68 = load i64, i64* %3
  %call2_439f68 = call %struct.Memory* @sub_446060.sre_malloc(%struct.State* %0, i64  %loadPC_439f68, %struct.Memory* %loadMem2_439f68)
  store %struct.Memory* %call2_439f68, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2038(%rbp)	 RIP: 439f6d	 Bytes: 7
  %loadMem_439f6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f6d = call %struct.Memory* @routine_movq__rax__MINUS0x2038__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f6d)
  store %struct.Memory* %call_439f6d, %struct.Memory** %MEMORY

  ; Code: jmpq .L_439fbc	 RIP: 439f74	 Bytes: 5
  %loadMem_439f74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f74 = call %struct.Memory* @routine_jmpq_.L_439fbc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f74, i64 72, i64 5)
  store %struct.Memory* %call_439f74, %struct.Memory** %MEMORY

  br label %block_.L_439fbc

  ; Code: .L_439f79:	 RIP: 439f79	 Bytes: 0
block_.L_439f79:

  ; Code: movq $0x459936, %rdi	 RIP: 439f79	 Bytes: 10
  %loadMem_439f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f79 = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f79)
  store %struct.Memory* %call_439f79, %struct.Memory** %MEMORY

  ; Code: movl $0x99, %esi	 RIP: 439f83	 Bytes: 5
  %loadMem_439f83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f83 = call %struct.Memory* @routine_movl__0x99___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f83)
  store %struct.Memory* %call_439f83, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 439f88	 Bytes: 7
  %loadMem_439f88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f88 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f88)
  store %struct.Memory* %call_439f88, %struct.Memory** %MEMORY

  ; Code: movl -0x203c(%rbp), %ecx	 RIP: 439f8f	 Bytes: 6
  %loadMem_439f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f8f = call %struct.Memory* @routine_movl_MINUS0x203c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f8f)
  store %struct.Memory* %call_439f8f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %ecx	 RIP: 439f95	 Bytes: 3
  %loadMem_439f95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f95 = call %struct.Memory* @routine_addl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f95)
  store %struct.Memory* %call_439f95, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 439f98	 Bytes: 3
  %loadMem_439f98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f98 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f98)
  store %struct.Memory* %call_439f98, %struct.Memory** %MEMORY

  ; Code: shlq $0x3, %rdx	 RIP: 439f9b	 Bytes: 4
  %loadMem_439f9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f9b = call %struct.Memory* @routine_shlq__0x3___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f9b)
  store %struct.Memory* %call_439f9b, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x2110(%rbp)	 RIP: 439f9f	 Bytes: 7
  %loadMem_439f9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439f9f = call %struct.Memory* @routine_movq__rdx__MINUS0x2110__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439f9f)
  store %struct.Memory* %call_439f9f, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 439fa6	 Bytes: 3
  %loadMem_439fa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fa6 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fa6)
  store %struct.Memory* %call_439fa6, %struct.Memory** %MEMORY

  ; Code: movq -0x2110(%rbp), %rcx	 RIP: 439fa9	 Bytes: 7
  %loadMem_439fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fa9 = call %struct.Memory* @routine_movq_MINUS0x2110__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fa9)
  store %struct.Memory* %call_439fa9, %struct.Memory** %MEMORY

  ; Code: callq .sre_realloc	 RIP: 439fb0	 Bytes: 5
  %loadMem1_439fb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_439fb0 = call %struct.Memory* @routine_callq_.sre_realloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_439fb0, i64 49408, i64 5, i64 5)
  store %struct.Memory* %call1_439fb0, %struct.Memory** %MEMORY

  %loadMem2_439fb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_439fb0 = load i64, i64* %3
  %call2_439fb0 = call %struct.Memory* @sub_4460b0.sre_realloc(%struct.State* %0, i64  %loadPC_439fb0, %struct.Memory* %loadMem2_439fb0)
  store %struct.Memory* %call2_439fb0, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2038(%rbp)	 RIP: 439fb5	 Bytes: 7
  %loadMem_439fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fb5 = call %struct.Memory* @routine_movq__rax__MINUS0x2038__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fb5)
  store %struct.Memory* %call_439fb5, %struct.Memory** %MEMORY

  ; Code: .L_439fbc:	 RIP: 439fbc	 Bytes: 0
  br label %block_.L_439fbc
block_.L_439fbc:

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 439fbc	 Bytes: 7
  %loadMem_439fbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fbc = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fbc)
  store %struct.Memory* %call_439fbc, %struct.Memory** %MEMORY

  ; Code: movslq -0x203c(%rbp), %rcx	 RIP: 439fc3	 Bytes: 7
  %loadMem_439fc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fc3 = call %struct.Memory* @routine_movslq_MINUS0x203c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fc3)
  store %struct.Memory* %call_439fc3, %struct.Memory** %MEMORY

  ; Code: movl $0x1001, (%rax,%rcx,8)	 RIP: 439fca	 Bytes: 7
  %loadMem_439fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fca = call %struct.Memory* @routine_movl__0x1001____rax__rcx_8_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fca)
  store %struct.Memory* %call_439fca, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 439fd1	 Bytes: 7
  %loadMem_439fd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fd1 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fd1)
  store %struct.Memory* %call_439fd1, %struct.Memory** %MEMORY

  ; Code: movslq -0x203c(%rbp), %rcx	 RIP: 439fd8	 Bytes: 7
  %loadMem_439fd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fd8 = call %struct.Memory* @routine_movslq_MINUS0x203c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fd8)
  store %struct.Memory* %call_439fd8, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, 0x4(%rax,%rcx,8)	 RIP: 439fdf	 Bytes: 8
  %loadMem_439fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fdf = call %struct.Memory* @routine_movl__0xffffffff__0x4__rax__rcx_8_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fdf)
  store %struct.Memory* %call_439fdf, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2054(%rbp)	 RIP: 439fe7	 Bytes: 10
  %loadMem_439fe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fe7 = call %struct.Memory* @routine_movl__0x0__MINUS0x2054__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fe7)
  store %struct.Memory* %call_439fe7, %struct.Memory** %MEMORY

  ; Code: .L_439ff1:	 RIP: 439ff1	 Bytes: 0
  br label %block_.L_439ff1
block_.L_439ff1:

  ; Code: cmpq $0x0, -0x2048(%rbp)	 RIP: 439ff1	 Bytes: 8
  %loadMem_439ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ff1 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ff1)
  store %struct.Memory* %call_439ff1, %struct.Memory** %MEMORY

  ; Code: je .L_43a459	 RIP: 439ff9	 Bytes: 6
  %loadMem_439ff9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439ff9 = call %struct.Memory* @routine_je_.L_43a459(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439ff9, i8* %BRANCH_TAKEN, i64 1120, i64 6, i64 6)
  store %struct.Memory* %call_439ff9, %struct.Memory** %MEMORY

  %loadBr_439ff9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_439ff9 = icmp eq i8 %loadBr_439ff9, 1
  br i1 %cmpBr_439ff9, label %block_.L_43a459, label %block_439fff

block_439fff:
  ; Code: cmpl $0x0, -0x203c(%rbp)	 RIP: 439fff	 Bytes: 7
  %loadMem_439fff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_439fff = call %struct.Memory* @routine_cmpl__0x0__MINUS0x203c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_439fff)
  store %struct.Memory* %call_439fff, %struct.Memory** %MEMORY

  ; Code: jne .L_43a0e1	 RIP: 43a006	 Bytes: 6
  %loadMem_43a006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a006 = call %struct.Memory* @routine_jne_.L_43a0e1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a006, i8* %BRANCH_TAKEN, i64 219, i64 6, i64 6)
  store %struct.Memory* %call_43a006, %struct.Memory** %MEMORY

  %loadBr_43a006 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a006 = icmp eq i8 %loadBr_43a006, 1
  br i1 %cmpBr_43a006, label %block_.L_43a0e1, label %block_43a00c

block_43a00c:
  ; Code: cmpl $0x0, -0x2054(%rbp)	 RIP: 43a00c	 Bytes: 7
  %loadMem_43a00c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a00c = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2054__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a00c)
  store %struct.Memory* %call_43a00c, %struct.Memory** %MEMORY

  ; Code: jne .L_43a044	 RIP: 43a013	 Bytes: 6
  %loadMem_43a013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a013 = call %struct.Memory* @routine_jne_.L_43a044(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a013, i8* %BRANCH_TAKEN, i64 49, i64 6, i64 6)
  store %struct.Memory* %call_43a013, %struct.Memory** %MEMORY

  %loadBr_43a013 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a013 = icmp eq i8 %loadBr_43a013, 1
  br i1 %cmpBr_43a013, label %block_.L_43a044, label %block_43a019

block_43a019:
  ; Code: movq $0x459936, %rdi	 RIP: 43a019	 Bytes: 10
  %loadMem_43a019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a019 = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a019)
  store %struct.Memory* %call_43a019, %struct.Memory** %MEMORY

  ; Code: movl $0xa4, %esi	 RIP: 43a023	 Bytes: 5
  %loadMem_43a023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a023 = call %struct.Memory* @routine_movl__0xa4___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a023)
  store %struct.Memory* %call_43a023, %struct.Memory** %MEMORY

  ; Code: movl $0x168, %eax	 RIP: 43a028	 Bytes: 5
  %loadMem_43a028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a028 = call %struct.Memory* @routine_movl__0x168___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a028)
  store %struct.Memory* %call_43a028, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43a02d	 Bytes: 2
  %loadMem_43a02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a02d = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a02d)
  store %struct.Memory* %call_43a02d, %struct.Memory** %MEMORY

  ; Code: callq .sre_malloc	 RIP: 43a02f	 Bytes: 5
  %loadMem1_43a02f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a02f = call %struct.Memory* @routine_callq_.sre_malloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a02f, i64 49201, i64 5, i64 5)
  store %struct.Memory* %call1_43a02f, %struct.Memory** %MEMORY

  %loadMem2_43a02f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a02f = load i64, i64* %3
  %call2_43a02f = call %struct.Memory* @sub_446060.sre_malloc(%struct.State* %0, i64  %loadPC_43a02f, %struct.Memory* %loadMem2_43a02f)
  store %struct.Memory* %call2_43a02f, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdx	 RIP: 43a034	 Bytes: 7
  %loadMem_43a034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a034 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a034)
  store %struct.Memory* %call_43a034, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x28(%rdx)	 RIP: 43a03b	 Bytes: 4
  %loadMem_43a03b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a03b = call %struct.Memory* @routine_movq__rax__0x28__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a03b)
  store %struct.Memory* %call_43a03b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a084	 RIP: 43a03f	 Bytes: 5
  %loadMem_43a03f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a03f = call %struct.Memory* @routine_jmpq_.L_43a084(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a03f, i64 69, i64 5)
  store %struct.Memory* %call_43a03f, %struct.Memory** %MEMORY

  br label %block_.L_43a084

  ; Code: .L_43a044:	 RIP: 43a044	 Bytes: 0
block_.L_43a044:

  ; Code: movq $0x459936, %rdi	 RIP: 43a044	 Bytes: 10
  %loadMem_43a044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a044 = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a044)
  store %struct.Memory* %call_43a044, %struct.Memory** %MEMORY

  ; Code: movl $0xa6, %esi	 RIP: 43a04e	 Bytes: 5
  %loadMem_43a04e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a04e = call %struct.Memory* @routine_movl__0xa6___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a04e)
  store %struct.Memory* %call_43a04e, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43a053	 Bytes: 7
  %loadMem_43a053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a053 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a053)
  store %struct.Memory* %call_43a053, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43a05a	 Bytes: 4
  %loadMem_43a05a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a05a = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a05a)
  store %struct.Memory* %call_43a05a, %struct.Memory** %MEMORY

  ; Code: movl -0x2054(%rbp), %ecx	 RIP: 43a05e	 Bytes: 6
  %loadMem_43a05e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a05e = call %struct.Memory* @routine_movl_MINUS0x2054__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a05e)
  store %struct.Memory* %call_43a05e, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %ecx	 RIP: 43a064	 Bytes: 3
  %loadMem_43a064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a064 = call %struct.Memory* @routine_addl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a064)
  store %struct.Memory* %call_43a064, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 43a067	 Bytes: 3
  %loadMem_43a067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a067 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a067)
  store %struct.Memory* %call_43a067, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rdx, %rcx	 RIP: 43a06a	 Bytes: 7
  %loadMem_43a06a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a06a = call %struct.Memory* @routine_imulq__0x168___rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a06a)
  store %struct.Memory* %call_43a06a, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 43a071	 Bytes: 3
  %loadMem_43a071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a071 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a071)
  store %struct.Memory* %call_43a071, %struct.Memory** %MEMORY

  ; Code: callq .sre_realloc	 RIP: 43a074	 Bytes: 5
  %loadMem1_43a074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a074 = call %struct.Memory* @routine_callq_.sre_realloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a074, i64 49212, i64 5, i64 5)
  store %struct.Memory* %call1_43a074, %struct.Memory** %MEMORY

  %loadMem2_43a074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a074 = load i64, i64* %3
  %call2_43a074 = call %struct.Memory* @sub_4460b0.sre_realloc(%struct.State* %0, i64  %loadPC_43a074, %struct.Memory* %loadMem2_43a074)
  store %struct.Memory* %call2_43a074, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43a079	 Bytes: 7
  %loadMem_43a079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a079 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a079)
  store %struct.Memory* %call_43a079, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x28(%rcx)	 RIP: 43a080	 Bytes: 4
  %loadMem_43a080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a080 = call %struct.Memory* @routine_movq__rax__0x28__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a080)
  store %struct.Memory* %call_43a080, %struct.Memory** %MEMORY

  ; Code: .L_43a084:	 RIP: 43a084	 Bytes: 0
  br label %block_.L_43a084
block_.L_43a084:

  ; Code: movl $0x1, %edx	 RIP: 43a084	 Bytes: 5
  %loadMem_43a084 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a084 = call %struct.Memory* @routine_movl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a084)
  store %struct.Memory* %call_43a084, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43a089	 Bytes: 7
  %loadMem_43a089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a089 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a089)
  store %struct.Memory* %call_43a089, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43a090	 Bytes: 4
  %loadMem_43a090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a090 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a090)
  store %struct.Memory* %call_43a090, %struct.Memory** %MEMORY

  ; Code: movslq -0x2054(%rbp), %rcx	 RIP: 43a094	 Bytes: 7
  %loadMem_43a094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a094 = call %struct.Memory* @routine_movslq_MINUS0x2054__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a094)
  store %struct.Memory* %call_43a094, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43a09b	 Bytes: 7
  %loadMem_43a09b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a09b = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a09b)
  store %struct.Memory* %call_43a09b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43a0a2	 Bytes: 3
  %loadMem_43a0a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0a2 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0a2)
  store %struct.Memory* %call_43a0a2, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43a0a5	 Bytes: 6
  %loadMem_43a0a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0a5 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0a5)
  store %struct.Memory* %call_43a0a5, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43a0ab	 Bytes: 7
  %loadMem_43a0ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0ab = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0ab)
  store %struct.Memory* %call_43a0ab, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43a0b2	 Bytes: 4
  %loadMem_43a0b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0b2 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0b2)
  store %struct.Memory* %call_43a0b2, %struct.Memory** %MEMORY

  ; Code: movslq -0x2054(%rbp), %rcx	 RIP: 43a0b6	 Bytes: 7
  %loadMem_43a0b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0b6 = call %struct.Memory* @routine_movslq_MINUS0x2054__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0b6)
  store %struct.Memory* %call_43a0b6, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43a0bd	 Bytes: 7
  %loadMem_43a0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0bd = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0bd)
  store %struct.Memory* %call_43a0bd, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43a0c4	 Bytes: 3
  %loadMem_43a0c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0c4 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0c4)
  store %struct.Memory* %call_43a0c4, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rsi	 RIP: 43a0c7	 Bytes: 7
  %loadMem_43a0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0c7 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0c7)
  store %struct.Memory* %call_43a0c7, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43a0ce	 Bytes: 3
  %loadMem_43a0ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0ce = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0ce)
  store %struct.Memory* %call_43a0ce, %struct.Memory** %MEMORY

  ; Code: callq .SetSeqinfoString	 RIP: 43a0d1	 Bytes: 5
  %loadMem1_43a0d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a0d1 = call %struct.Memory* @routine_callq_.SetSeqinfoString(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a0d1, i64 24079, i64 5, i64 5)
  store %struct.Memory* %call1_43a0d1, %struct.Memory** %MEMORY

  %loadMem2_43a0d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a0d1 = load i64, i64* %3
  %call2_43a0d1 = call %struct.Memory* @sub_43fee0.SetSeqinfoString(%struct.State* %0, i64  %loadPC_43a0d1, %struct.Memory* %loadMem2_43a0d1)
  store %struct.Memory* %call2_43a0d1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2114(%rbp)	 RIP: 43a0d6	 Bytes: 6
  %loadMem_43a0d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0d6 = call %struct.Memory* @routine_movl__eax__MINUS0x2114__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0d6)
  store %struct.Memory* %call_43a0d6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a128	 RIP: 43a0dc	 Bytes: 5
  %loadMem_43a0dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0dc = call %struct.Memory* @routine_jmpq_.L_43a128(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0dc, i64 76, i64 5)
  store %struct.Memory* %call_43a0dc, %struct.Memory** %MEMORY

  br label %block_.L_43a128

  ; Code: .L_43a0e1:	 RIP: 43a0e1	 Bytes: 0
block_.L_43a0e1:

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43a0e1	 Bytes: 7
  %loadMem_43a0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0e1 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0e1)
  store %struct.Memory* %call_43a0e1, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43a0e8	 Bytes: 4
  %loadMem_43a0e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0e8 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0e8)
  store %struct.Memory* %call_43a0e8, %struct.Memory** %MEMORY

  ; Code: movslq -0x2054(%rbp), %rcx	 RIP: 43a0ec	 Bytes: 7
  %loadMem_43a0ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0ec = call %struct.Memory* @routine_movslq_MINUS0x2054__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0ec)
  store %struct.Memory* %call_43a0ec, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43a0f3	 Bytes: 7
  %loadMem_43a0f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0f3 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0f3)
  store %struct.Memory* %call_43a0f3, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43a0fa	 Bytes: 3
  %loadMem_43a0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0fa = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0fa)
  store %struct.Memory* %call_43a0fa, %struct.Memory** %MEMORY

  ; Code: addq $0x4, %rax	 RIP: 43a0fd	 Bytes: 4
  %loadMem_43a0fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a0fd = call %struct.Memory* @routine_addq__0x4___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a0fd)
  store %struct.Memory* %call_43a0fd, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rsi	 RIP: 43a101	 Bytes: 7
  %loadMem_43a101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a101 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a101)
  store %struct.Memory* %call_43a101, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43a108	 Bytes: 3
  %loadMem_43a108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a108 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a108)
  store %struct.Memory* %call_43a108, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43a10b	 Bytes: 5
  %loadMem1_43a10b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a10b = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a10b, i64 -232363, i64 5, i64 5)
  store %struct.Memory* %call1_43a10b, %struct.Memory** %MEMORY

  %loadMem2_43a10b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a10b = load i64, i64* %3
  %call2_43a10b = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43a10b, %struct.Memory* %loadMem2_43a10b)
  store %struct.Memory* %call2_43a10b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43a110	 Bytes: 3
  %loadMem_43a110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a110 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a110)
  store %struct.Memory* %call_43a110, %struct.Memory** %MEMORY

  ; Code: je .L_43a123	 RIP: 43a113	 Bytes: 6
  %loadMem_43a113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a113 = call %struct.Memory* @routine_je_.L_43a123(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a113, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_43a113, %struct.Memory** %MEMORY

  %loadBr_43a113 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a113 = icmp eq i8 %loadBr_43a113, 1
  br i1 %cmpBr_43a113, label %block_.L_43a123, label %block_43a119

block_43a119:
  ; Code: movl $0x1, -0x2068(%rbp)	 RIP: 43a119	 Bytes: 10
  %loadMem_43a119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a119 = call %struct.Memory* @routine_movl__0x1__MINUS0x2068__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a119)
  store %struct.Memory* %call_43a119, %struct.Memory** %MEMORY

  ; Code: .L_43a123:	 RIP: 43a123	 Bytes: 0
  br label %block_.L_43a123
block_.L_43a123:

  ; Code: jmpq .L_43a128	 RIP: 43a123	 Bytes: 5
  %loadMem_43a123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a123 = call %struct.Memory* @routine_jmpq_.L_43a128(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a123, i64 5, i64 5)
  store %struct.Memory* %call_43a123, %struct.Memory** %MEMORY

  br label %block_.L_43a128

  ; Code: .L_43a128:	 RIP: 43a128	 Bytes: 0
block_.L_43a128:

  ; Code: xorl %eax, %eax	 RIP: 43a128	 Bytes: 2
  %loadMem_43a128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a128 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a128)
  store %struct.Memory* %call_43a128, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43a12a	 Bytes: 2
  %loadMem_43a12a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a12a = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a12a)
  store %struct.Memory* %call_43a12a, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43a12c	 Bytes: 10
  %loadMem_43a12c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a12c = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a12c)
  store %struct.Memory* %call_43a12c, %struct.Memory** %MEMORY

  ; Code: movl -0x2054(%rbp), %eax	 RIP: 43a136	 Bytes: 6
  %loadMem_43a136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a136 = call %struct.Memory* @routine_movl_MINUS0x2054__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a136)
  store %struct.Memory* %call_43a136, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43a13c	 Bytes: 3
  %loadMem_43a13c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a13c = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a13c)
  store %struct.Memory* %call_43a13c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2054(%rbp)	 RIP: 43a13f	 Bytes: 6
  %loadMem_43a13f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a13f = call %struct.Memory* @routine_movl__eax__MINUS0x2054__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a13f)
  store %struct.Memory* %call_43a13f, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43a145	 Bytes: 5
  %loadMem1_43a145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a145 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a145, i64 -232165, i64 5, i64 5)
  store %struct.Memory* %call1_43a145, %struct.Memory** %MEMORY

  %loadMem2_43a145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a145 = load i64, i64* %3
  %call2_43a145 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43a145, %struct.Memory* %loadMem2_43a145)
  store %struct.Memory* %call2_43a145, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43a14a	 Bytes: 7
  %loadMem_43a14a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a14a = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a14a)
  store %struct.Memory* %call_43a14a, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a151	 Bytes: 4
  %loadMem_43a151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a151 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a151)
  store %struct.Memory* %call_43a151, %struct.Memory** %MEMORY

  ; Code: je .L_43a26c	 RIP: 43a155	 Bytes: 6
  %loadMem_43a155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a155 = call %struct.Memory* @routine_je_.L_43a26c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a155, i8* %BRANCH_TAKEN, i64 279, i64 6, i64 6)
  store %struct.Memory* %call_43a155, %struct.Memory** %MEMORY

  %loadBr_43a155 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a155 = icmp eq i8 %loadBr_43a155, 1
  br i1 %cmpBr_43a155, label %block_.L_43a26c, label %block_43a15b

block_43a15b:
  ; Code: leaq -0x2030(%rbp), %rax	 RIP: 43a15b	 Bytes: 7
  %loadMem_43a15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a15b = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a15b)
  store %struct.Memory* %call_43a15b, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rcx	 RIP: 43a162	 Bytes: 7
  %loadMem_43a162 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a162 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a162)
  store %struct.Memory* %call_43a162, %struct.Memory** %MEMORY

  ; Code: subq %rax, %rcx	 RIP: 43a169	 Bytes: 3
  %loadMem_43a169 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a169 = call %struct.Memory* @routine_subq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a169)
  store %struct.Memory* %call_43a169, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43a16c	 Bytes: 7
  %loadMem_43a16c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a16c = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a16c)
  store %struct.Memory* %call_43a16c, %struct.Memory** %MEMORY

  ; Code: movslq -0x203c(%rbp), %rdx	 RIP: 43a173	 Bytes: 7
  %loadMem_43a173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a173 = call %struct.Memory* @routine_movslq_MINUS0x203c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a173)
  store %struct.Memory* %call_43a173, %struct.Memory** %MEMORY

  ; Code: movslq (%rax,%rdx,8), %rax	 RIP: 43a17a	 Bytes: 4
  %loadMem_43a17a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a17a = call %struct.Memory* @routine_movslq___rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a17a)
  store %struct.Memory* %call_43a17a, %struct.Memory** %MEMORY

  ; Code: cmpq %rax, %rcx	 RIP: 43a17e	 Bytes: 3
  %loadMem_43a17e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a17e = call %struct.Memory* @routine_cmpq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a17e)
  store %struct.Memory* %call_43a17e, %struct.Memory** %MEMORY

  ; Code: jge .L_43a1ab	 RIP: 43a181	 Bytes: 6
  %loadMem_43a181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a181 = call %struct.Memory* @routine_jge_.L_43a1ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a181, i8* %BRANCH_TAKEN, i64 42, i64 6, i64 6)
  store %struct.Memory* %call_43a181, %struct.Memory** %MEMORY

  %loadBr_43a181 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a181 = icmp eq i8 %loadBr_43a181, 1
  br i1 %cmpBr_43a181, label %block_.L_43a1ab, label %block_43a187

block_43a187:
  ; Code: leaq -0x2030(%rbp), %rax	 RIP: 43a187	 Bytes: 7
  %loadMem_43a187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a187 = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a187)
  store %struct.Memory* %call_43a187, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rcx	 RIP: 43a18e	 Bytes: 7
  %loadMem_43a18e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a18e = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a18e)
  store %struct.Memory* %call_43a18e, %struct.Memory** %MEMORY

  ; Code: subq %rax, %rcx	 RIP: 43a195	 Bytes: 3
  %loadMem_43a195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a195 = call %struct.Memory* @routine_subq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a195)
  store %struct.Memory* %call_43a195, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 43a198	 Bytes: 2
  %loadMem_43a198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a198 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a198)
  store %struct.Memory* %call_43a198, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43a19a	 Bytes: 7
  %loadMem_43a19a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a19a = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a19a)
  store %struct.Memory* %call_43a19a, %struct.Memory** %MEMORY

  ; Code: movslq -0x203c(%rbp), %rcx	 RIP: 43a1a1	 Bytes: 7
  %loadMem_43a1a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1a1 = call %struct.Memory* @routine_movslq_MINUS0x203c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1a1)
  store %struct.Memory* %call_43a1a1, %struct.Memory** %MEMORY

  ; Code: movl %edx, (%rax,%rcx,8)	 RIP: 43a1a8	 Bytes: 3
  %loadMem_43a1a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1a8 = call %struct.Memory* @routine_movl__edx____rax__rcx_8_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1a8)
  store %struct.Memory* %call_43a1a8, %struct.Memory** %MEMORY

  ; Code: .L_43a1ab:	 RIP: 43a1ab	 Bytes: 0
  br label %block_.L_43a1ab
block_.L_43a1ab:

  ; Code: leaq -0x1030(%rbp), %rax	 RIP: 43a1ab	 Bytes: 7
  %loadMem_43a1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1ab = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1ab)
  store %struct.Memory* %call_43a1ab, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43a1b2	 Bytes: 3
  %loadMem_43a1b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1b2 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1b2)
  store %struct.Memory* %call_43a1b2, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2120(%rbp)	 RIP: 43a1b5	 Bytes: 7
  %loadMem_43a1b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1b5 = call %struct.Memory* @routine_movq__rax__MINUS0x2120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1b5)
  store %struct.Memory* %call_43a1b5, %struct.Memory** %MEMORY

  ; Code: callq .strlen_plt	 RIP: 43a1bc	 Bytes: 5
  %loadMem1_43a1bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a1bc = call %struct.Memory* @routine_callq_.strlen_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a1bc, i64 -232796, i64 5, i64 5)
  store %struct.Memory* %call1_43a1bc, %struct.Memory** %MEMORY

  %loadMem2_43a1bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a1bc = load i64, i64* %3
  %call2_43a1bc = call %struct.Memory* @ext_strlen(%struct.State* %0, i64  %loadPC_43a1bc, %struct.Memory* %loadMem2_43a1bc)
  store %struct.Memory* %call2_43a1bc, %struct.Memory** %MEMORY

  ; Code: movq -0x2120(%rbp), %rdi	 RIP: 43a1c1	 Bytes: 7
  %loadMem_43a1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1c1 = call %struct.Memory* @routine_movq_MINUS0x2120__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1c1)
  store %struct.Memory* %call_43a1c1, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rdi	 RIP: 43a1c8	 Bytes: 3
  %loadMem_43a1c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1c8 = call %struct.Memory* @routine_addq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1c8)
  store %struct.Memory* %call_43a1c8, %struct.Memory** %MEMORY

  ; Code: addq $0xffffffff, %rdi	 RIP: 43a1cb	 Bytes: 4
  %loadMem_43a1cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1cb = call %struct.Memory* @routine_addq__0xffffffff___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1cb)
  store %struct.Memory* %call_43a1cb, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x2050(%rbp)	 RIP: 43a1cf	 Bytes: 7
  %loadMem_43a1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1cf = call %struct.Memory* @routine_movq__rdi__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1cf)
  store %struct.Memory* %call_43a1cf, %struct.Memory** %MEMORY

  ; Code: .L_43a1d6:	 RIP: 43a1d6	 Bytes: 0
  br label %block_.L_43a1d6
block_.L_43a1d6:

  ; Code: movq $0x45a1f5, %rdi	 RIP: 43a1d6	 Bytes: 10
  %loadMem_43a1d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1d6 = call %struct.Memory* @routine_movq__0x45a1f5___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1d6)
  store %struct.Memory* %call_43a1d6, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rax	 RIP: 43a1e0	 Bytes: 7
  %loadMem_43a1e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1e0 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1e0)
  store %struct.Memory* %call_43a1e0, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %esi	 RIP: 43a1e7	 Bytes: 3
  %loadMem_43a1e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1e7 = call %struct.Memory* @routine_movsbl___rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1e7)
  store %struct.Memory* %call_43a1e7, %struct.Memory** %MEMORY

  ; Code: callq .strchr_plt	 RIP: 43a1ea	 Bytes: 5
  %loadMem1_43a1ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a1ea = call %struct.Memory* @routine_callq_.strchr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a1ea, i64 -232810, i64 5, i64 5)
  store %struct.Memory* %call1_43a1ea, %struct.Memory** %MEMORY

  %loadMem2_43a1ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a1ea = load i64, i64* %3
  %call2_43a1ea = call %struct.Memory* @sub_401480.strchr_plt(%struct.State* %0, i64  %loadPC_43a1ea, %struct.Memory* %loadMem2_43a1ea)
  store %struct.Memory* %call2_43a1ea, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a1ef	 Bytes: 4
  %loadMem_43a1ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1ef = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1ef)
  store %struct.Memory* %call_43a1ef, %struct.Memory** %MEMORY

  ; Code: je .L_43a215	 RIP: 43a1f3	 Bytes: 6
  %loadMem_43a1f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1f3 = call %struct.Memory* @routine_je_.L_43a215(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1f3, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_43a1f3, %struct.Memory** %MEMORY

  %loadBr_43a1f3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a1f3 = icmp eq i8 %loadBr_43a1f3, 1
  br i1 %cmpBr_43a1f3, label %block_.L_43a215, label %block_43a1f9

block_43a1f9:
  ; Code: jmpq .L_43a1fe	 RIP: 43a1f9	 Bytes: 5
  %loadMem_43a1f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1f9 = call %struct.Memory* @routine_jmpq_.L_43a1fe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1f9, i64 5, i64 5)
  store %struct.Memory* %call_43a1f9, %struct.Memory** %MEMORY

  br label %block_.L_43a1fe

  ; Code: .L_43a1fe:	 RIP: 43a1fe	 Bytes: 0
block_.L_43a1fe:

  ; Code: movq -0x2050(%rbp), %rax	 RIP: 43a1fe	 Bytes: 7
  %loadMem_43a1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a1fe = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a1fe)
  store %struct.Memory* %call_43a1fe, %struct.Memory** %MEMORY

  ; Code: addq $0xffffffff, %rax	 RIP: 43a205	 Bytes: 4
  %loadMem_43a205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a205 = call %struct.Memory* @routine_addq__0xffffffff___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a205)
  store %struct.Memory* %call_43a205, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43a209	 Bytes: 7
  %loadMem_43a209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a209 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a209)
  store %struct.Memory* %call_43a209, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a1d6	 RIP: 43a210	 Bytes: 5
  %loadMem_43a210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a210 = call %struct.Memory* @routine_jmpq_.L_43a1d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a210, i64 -58, i64 5)
  store %struct.Memory* %call_43a210, %struct.Memory** %MEMORY

  br label %block_.L_43a1d6

  ; Code: .L_43a215:	 RIP: 43a215	 Bytes: 0
block_.L_43a215:

  ; Code: leaq -0x1030(%rbp), %rax	 RIP: 43a215	 Bytes: 7
  %loadMem_43a215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a215 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a215)
  store %struct.Memory* %call_43a215, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rcx	 RIP: 43a21c	 Bytes: 7
  %loadMem_43a21c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a21c = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a21c)
  store %struct.Memory* %call_43a21c, %struct.Memory** %MEMORY

  ; Code: subq %rax, %rcx	 RIP: 43a223	 Bytes: 3
  %loadMem_43a223 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a223 = call %struct.Memory* @routine_subq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a223)
  store %struct.Memory* %call_43a223, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43a226	 Bytes: 7
  %loadMem_43a226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a226 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a226)
  store %struct.Memory* %call_43a226, %struct.Memory** %MEMORY

  ; Code: movslq -0x203c(%rbp), %rdx	 RIP: 43a22d	 Bytes: 7
  %loadMem_43a22d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a22d = call %struct.Memory* @routine_movslq_MINUS0x203c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a22d)
  store %struct.Memory* %call_43a22d, %struct.Memory** %MEMORY

  ; Code: movslq 0x4(%rax,%rdx,8), %rax	 RIP: 43a234	 Bytes: 5
  %loadMem_43a234 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a234 = call %struct.Memory* @routine_movslq_0x4__rax__rdx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a234)
  store %struct.Memory* %call_43a234, %struct.Memory** %MEMORY

  ; Code: cmpq %rax, %rcx	 RIP: 43a239	 Bytes: 3
  %loadMem_43a239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a239 = call %struct.Memory* @routine_cmpq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a239)
  store %struct.Memory* %call_43a239, %struct.Memory** %MEMORY

  ; Code: jle .L_43a267	 RIP: 43a23c	 Bytes: 6
  %loadMem_43a23c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a23c = call %struct.Memory* @routine_jle_.L_43a267(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a23c, i8* %BRANCH_TAKEN, i64 43, i64 6, i64 6)
  store %struct.Memory* %call_43a23c, %struct.Memory** %MEMORY

  %loadBr_43a23c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a23c = icmp eq i8 %loadBr_43a23c, 1
  br i1 %cmpBr_43a23c, label %block_.L_43a267, label %block_43a242

block_43a242:
  ; Code: leaq -0x1030(%rbp), %rax	 RIP: 43a242	 Bytes: 7
  %loadMem_43a242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a242 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a242)
  store %struct.Memory* %call_43a242, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rcx	 RIP: 43a249	 Bytes: 7
  %loadMem_43a249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a249 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a249)
  store %struct.Memory* %call_43a249, %struct.Memory** %MEMORY

  ; Code: subq %rax, %rcx	 RIP: 43a250	 Bytes: 3
  %loadMem_43a250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a250 = call %struct.Memory* @routine_subq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a250)
  store %struct.Memory* %call_43a250, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 43a253	 Bytes: 2
  %loadMem_43a253 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a253 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a253)
  store %struct.Memory* %call_43a253, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43a255	 Bytes: 7
  %loadMem_43a255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a255 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a255)
  store %struct.Memory* %call_43a255, %struct.Memory** %MEMORY

  ; Code: movslq -0x203c(%rbp), %rcx	 RIP: 43a25c	 Bytes: 7
  %loadMem_43a25c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a25c = call %struct.Memory* @routine_movslq_MINUS0x203c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a25c)
  store %struct.Memory* %call_43a25c, %struct.Memory** %MEMORY

  ; Code: movl %edx, 0x4(%rax,%rcx,8)	 RIP: 43a263	 Bytes: 4
  %loadMem_43a263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a263 = call %struct.Memory* @routine_movl__edx__0x4__rax__rcx_8_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a263)
  store %struct.Memory* %call_43a263, %struct.Memory** %MEMORY

  ; Code: .L_43a267:	 RIP: 43a267	 Bytes: 0
  br label %block_.L_43a267
block_.L_43a267:

  ; Code: jmpq .L_43a26c	 RIP: 43a267	 Bytes: 5
  %loadMem_43a267 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a267 = call %struct.Memory* @routine_jmpq_.L_43a26c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a267, i64 5, i64 5)
  store %struct.Memory* %call_43a267, %struct.Memory** %MEMORY

  br label %block_.L_43a26c

  ; Code: .L_43a26c:	 RIP: 43a26c	 Bytes: 0
block_.L_43a26c:

  ; Code: jmpq .L_43a271	 RIP: 43a26c	 Bytes: 5
  %loadMem_43a26c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a26c = call %struct.Memory* @routine_jmpq_.L_43a271(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a26c, i64 5, i64 5)
  store %struct.Memory* %call_43a26c, %struct.Memory** %MEMORY

  br label %block_.L_43a271

  ; Code: .L_43a271:	 RIP: 43a271	 Bytes: 0
block_.L_43a271:

  ; Code: movl $0x1000, %esi	 RIP: 43a271	 Bytes: 5
  %loadMem_43a271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a271 = call %struct.Memory* @routine_movl__0x1000___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a271)
  store %struct.Memory* %call_43a271, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 43a276	 Bytes: 7
  %loadMem_43a276 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a276 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a276)
  store %struct.Memory* %call_43a276, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rdx	 RIP: 43a27d	 Bytes: 4
  %loadMem_43a27d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a27d = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a27d)
  store %struct.Memory* %call_43a27d, %struct.Memory** %MEMORY

  ; Code: callq .fgets_plt	 RIP: 43a281	 Bytes: 5
  %loadMem1_43a281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a281 = call %struct.Memory* @routine_callq_.fgets_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a281, i64 -232769, i64 5, i64 5)
  store %struct.Memory* %call1_43a281, %struct.Memory** %MEMORY

  %loadMem2_43a281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a281 = load i64, i64* %3
  %call2_43a281 = call %struct.Memory* @sub_401540.fgets_plt(%struct.State* %0, i64  %loadPC_43a281, %struct.Memory* %loadMem2_43a281)
  store %struct.Memory* %call2_43a281, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a286	 Bytes: 4
  %loadMem_43a286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a286 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a286)
  store %struct.Memory* %call_43a286, %struct.Memory** %MEMORY

  ; Code: jne .L_43a2a0	 RIP: 43a28a	 Bytes: 6
  %loadMem_43a28a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a28a = call %struct.Memory* @routine_jne_.L_43a2a0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a28a, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_43a28a, %struct.Memory** %MEMORY

  %loadBr_43a28a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a28a = icmp eq i8 %loadBr_43a28a, 1
  br i1 %cmpBr_43a28a, label %block_.L_43a2a0, label %block_43a290

block_43a290:
  ; Code: movq $0x0, -0x2048(%rbp)	 RIP: 43a290	 Bytes: 11
  %loadMem_43a290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a290 = call %struct.Memory* @routine_movq__0x0__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a290)
  store %struct.Memory* %call_43a290, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a454	 RIP: 43a29b	 Bytes: 5
  %loadMem_43a29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a29b = call %struct.Memory* @routine_jmpq_.L_43a454(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a29b, i64 441, i64 5)
  store %struct.Memory* %call_43a29b, %struct.Memory** %MEMORY

  br label %block_.L_43a454

  ; Code: .L_43a2a0:	 RIP: 43a2a0	 Bytes: 0
block_.L_43a2a0:

  ; Code: movq $0x4599e3, %rsi	 RIP: 43a2a0	 Bytes: 10
  %loadMem_43a2a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2a0 = call %struct.Memory* @routine_movq__0x4599e3___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2a0)
  store %struct.Memory* %call_43a2a0, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 43a2aa	 Bytes: 5
  %loadMem_43a2aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2aa = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2aa)
  store %struct.Memory* %call_43a2aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43a2af	 Bytes: 2
  %loadMem_43a2af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2af = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2af)
  store %struct.Memory* %call_43a2af, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rcx	 RIP: 43a2b1	 Bytes: 7
  %loadMem_43a2b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2b1 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2b1)
  store %struct.Memory* %call_43a2b1, %struct.Memory** %MEMORY

  ; Code: leaq -0x2030(%rbp), %rdi	 RIP: 43a2b8	 Bytes: 7
  %loadMem_43a2b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2b8 = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2b8)
  store %struct.Memory* %call_43a2b8, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x2128(%rbp)	 RIP: 43a2bf	 Bytes: 7
  %loadMem_43a2bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2bf = call %struct.Memory* @routine_movq__rsi__MINUS0x2128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2bf)
  store %struct.Memory* %call_43a2bf, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 43a2c6	 Bytes: 3
  %loadMem_43a2c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2c6 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2c6)
  store %struct.Memory* %call_43a2c6, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x2130(%rbp)	 RIP: 43a2c9	 Bytes: 7
  %loadMem_43a2c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2c9 = call %struct.Memory* @routine_movq__rcx__MINUS0x2130__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2c9)
  store %struct.Memory* %call_43a2c9, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x2138(%rbp)	 RIP: 43a2d0	 Bytes: 7
  %loadMem_43a2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2d0 = call %struct.Memory* @routine_movq__rdx__MINUS0x2138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2d0)
  store %struct.Memory* %call_43a2d0, %struct.Memory** %MEMORY

  ; Code: callq .strcpy_plt	 RIP: 43a2d7	 Bytes: 5
  %loadMem1_43a2d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a2d7 = call %struct.Memory* @routine_callq_.strcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a2d7, i64 -233207, i64 5, i64 5)
  store %struct.Memory* %call1_43a2d7, %struct.Memory** %MEMORY

  %loadMem2_43a2d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a2d7 = load i64, i64* %3
  %call2_43a2d7 = call %struct.Memory* @ext_strcpy(%struct.State* %0, i64  %loadPC_43a2d7, %struct.Memory* %loadMem2_43a2d7)
  store %struct.Memory* %call2_43a2d7, %struct.Memory** %MEMORY

  ; Code: movq -0x2130(%rbp), %rdi	 RIP: 43a2dc	 Bytes: 7
  %loadMem_43a2dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2dc = call %struct.Memory* @routine_movq_MINUS0x2130__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2dc)
  store %struct.Memory* %call_43a2dc, %struct.Memory** %MEMORY

  ; Code: movq -0x2128(%rbp), %rsi	 RIP: 43a2e3	 Bytes: 7
  %loadMem_43a2e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2e3 = call %struct.Memory* @routine_movq_MINUS0x2128__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2e3)
  store %struct.Memory* %call_43a2e3, %struct.Memory** %MEMORY

  ; Code: movq -0x2138(%rbp), %rdx	 RIP: 43a2ea	 Bytes: 7
  %loadMem_43a2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2ea = call %struct.Memory* @routine_movq_MINUS0x2138__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2ea)
  store %struct.Memory* %call_43a2ea, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2140(%rbp)	 RIP: 43a2f1	 Bytes: 7
  %loadMem_43a2f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2f1 = call %struct.Memory* @routine_movq__rax__MINUS0x2140__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2f1)
  store %struct.Memory* %call_43a2f1, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 43a2f8	 Bytes: 5
  %loadMem1_43a2f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a2f8 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a2f8, i64 -233256, i64 5, i64 5)
  store %struct.Memory* %call1_43a2f8, %struct.Memory** %MEMORY

  %loadMem2_43a2f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a2f8 = load i64, i64* %3
  %call2_43a2f8 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_43a2f8, %struct.Memory* %loadMem2_43a2f8)
  store %struct.Memory* %call2_43a2f8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43a2fd	 Bytes: 3
  %loadMem_43a2fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a2fd = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a2fd)
  store %struct.Memory* %call_43a2fd, %struct.Memory** %MEMORY

  ; Code: jne .L_43a336	 RIP: 43a300	 Bytes: 6
  %loadMem_43a300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a300 = call %struct.Memory* @routine_jne_.L_43a336(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a300, i8* %BRANCH_TAKEN, i64 54, i64 6, i64 6)
  store %struct.Memory* %call_43a300, %struct.Memory** %MEMORY

  %loadBr_43a300 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a300 = icmp eq i8 %loadBr_43a300, 1
  br i1 %cmpBr_43a300, label %block_.L_43a336, label %block_43a306

block_43a306:
  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43a306	 Bytes: 7
  %loadMem_43a306 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a306 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a306)
  store %struct.Memory* %call_43a306, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43a30d	 Bytes: 4
  %loadMem_43a30d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a30d = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a30d)
  store %struct.Memory* %call_43a30d, %struct.Memory** %MEMORY

  ; Code: movl -0x2054(%rbp), %ecx	 RIP: 43a311	 Bytes: 6
  %loadMem_43a311 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a311 = call %struct.Memory* @routine_movl_MINUS0x2054__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a311)
  store %struct.Memory* %call_43a311, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 43a317	 Bytes: 3
  %loadMem_43a317 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a317 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a317)
  store %struct.Memory* %call_43a317, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 43a31a	 Bytes: 3
  %loadMem_43a31a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a31a = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a31a)
  store %struct.Memory* %call_43a31a, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rdx, %rdx	 RIP: 43a31d	 Bytes: 7
  %loadMem_43a31d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a31d = call %struct.Memory* @routine_imulq__0x168___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a31d)
  store %struct.Memory* %call_43a31d, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 43a324	 Bytes: 3
  %loadMem_43a324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a324 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a324)
  store %struct.Memory* %call_43a324, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %ecx	 RIP: 43a327	 Bytes: 2
  %loadMem_43a327 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a327 = call %struct.Memory* @routine_movl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a327)
  store %struct.Memory* %call_43a327, %struct.Memory** %MEMORY

  ; Code: orl $0x200, %ecx	 RIP: 43a329	 Bytes: 6
  %loadMem_43a329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a329 = call %struct.Memory* @routine_orl__0x200___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a329)
  store %struct.Memory* %call_43a329, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax)	 RIP: 43a32f	 Bytes: 2
  %loadMem_43a32f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a32f = call %struct.Memory* @routine_movl__ecx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a32f)
  store %struct.Memory* %call_43a32f, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a400	 RIP: 43a331	 Bytes: 5
  %loadMem_43a331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a331 = call %struct.Memory* @routine_jmpq_.L_43a400(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a331, i64 207, i64 5)
  store %struct.Memory* %call_43a331, %struct.Memory** %MEMORY

  br label %block_.L_43a400

  ; Code: .L_43a336:	 RIP: 43a336	 Bytes: 0
block_.L_43a336:

  ; Code: movq $0x4599e8, %rsi	 RIP: 43a336	 Bytes: 10
  %loadMem_43a336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a336 = call %struct.Memory* @routine_movq__0x4599e8___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a336)
  store %struct.Memory* %call_43a336, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 43a340	 Bytes: 5
  %loadMem_43a340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a340 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a340)
  store %struct.Memory* %call_43a340, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43a345	 Bytes: 2
  %loadMem_43a345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a345 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a345)
  store %struct.Memory* %call_43a345, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 43a347	 Bytes: 7
  %loadMem_43a347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a347 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a347)
  store %struct.Memory* %call_43a347, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 43a34e	 Bytes: 5
  %loadMem1_43a34e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a34e = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a34e, i64 -233342, i64 5, i64 5)
  store %struct.Memory* %call1_43a34e, %struct.Memory** %MEMORY

  %loadMem2_43a34e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a34e = load i64, i64* %3
  %call2_43a34e = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_43a34e, %struct.Memory* %loadMem2_43a34e)
  store %struct.Memory* %call2_43a34e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43a353	 Bytes: 3
  %loadMem_43a353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a353 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a353)
  store %struct.Memory* %call_43a353, %struct.Memory** %MEMORY

  ; Code: jne .L_43a38c	 RIP: 43a356	 Bytes: 6
  %loadMem_43a356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a356 = call %struct.Memory* @routine_jne_.L_43a38c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a356, i8* %BRANCH_TAKEN, i64 54, i64 6, i64 6)
  store %struct.Memory* %call_43a356, %struct.Memory** %MEMORY

  %loadBr_43a356 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a356 = icmp eq i8 %loadBr_43a356, 1
  br i1 %cmpBr_43a356, label %block_.L_43a38c, label %block_43a35c

block_43a35c:
  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43a35c	 Bytes: 7
  %loadMem_43a35c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a35c = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a35c)
  store %struct.Memory* %call_43a35c, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43a363	 Bytes: 4
  %loadMem_43a363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a363 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a363)
  store %struct.Memory* %call_43a363, %struct.Memory** %MEMORY

  ; Code: movl -0x2054(%rbp), %ecx	 RIP: 43a367	 Bytes: 6
  %loadMem_43a367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a367 = call %struct.Memory* @routine_movl_MINUS0x2054__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a367)
  store %struct.Memory* %call_43a367, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 43a36d	 Bytes: 3
  %loadMem_43a36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a36d = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a36d)
  store %struct.Memory* %call_43a36d, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 43a370	 Bytes: 3
  %loadMem_43a370 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a370 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a370)
  store %struct.Memory* %call_43a370, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rdx, %rdx	 RIP: 43a373	 Bytes: 7
  %loadMem_43a373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a373 = call %struct.Memory* @routine_imulq__0x168___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a373)
  store %struct.Memory* %call_43a373, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 43a37a	 Bytes: 3
  %loadMem_43a37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a37a = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a37a)
  store %struct.Memory* %call_43a37a, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %ecx	 RIP: 43a37d	 Bytes: 2
  %loadMem_43a37d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a37d = call %struct.Memory* @routine_movl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a37d)
  store %struct.Memory* %call_43a37d, %struct.Memory** %MEMORY

  ; Code: orl $0x400, %ecx	 RIP: 43a37f	 Bytes: 6
  %loadMem_43a37f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a37f = call %struct.Memory* @routine_orl__0x400___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a37f)
  store %struct.Memory* %call_43a37f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax)	 RIP: 43a385	 Bytes: 2
  %loadMem_43a385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a385 = call %struct.Memory* @routine_movl__ecx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a385)
  store %struct.Memory* %call_43a385, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a3fb	 RIP: 43a387	 Bytes: 5
  %loadMem_43a387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a387 = call %struct.Memory* @routine_jmpq_.L_43a3fb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a387, i64 116, i64 5)
  store %struct.Memory* %call_43a387, %struct.Memory** %MEMORY

  br label %block_.L_43a3fb

  ; Code: .L_43a38c:	 RIP: 43a38c	 Bytes: 0
block_.L_43a38c:

  ; Code: movq $0x45992c, %rsi	 RIP: 43a38c	 Bytes: 10
  %loadMem_43a38c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a38c = call %struct.Memory* @routine_movq__0x45992c___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a38c)
  store %struct.Memory* %call_43a38c, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 43a396	 Bytes: 5
  %loadMem_43a396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a396 = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a396)
  store %struct.Memory* %call_43a396, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43a39b	 Bytes: 2
  %loadMem_43a39b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a39b = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a39b)
  store %struct.Memory* %call_43a39b, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 43a39d	 Bytes: 7
  %loadMem_43a39d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a39d = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a39d)
  store %struct.Memory* %call_43a39d, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 43a3a4	 Bytes: 5
  %loadMem1_43a3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a3a4 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a3a4, i64 -233428, i64 5, i64 5)
  store %struct.Memory* %call1_43a3a4, %struct.Memory** %MEMORY

  %loadMem2_43a3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a3a4 = load i64, i64* %3
  %call2_43a3a4 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_43a3a4, %struct.Memory* %loadMem2_43a3a4)
  store %struct.Memory* %call2_43a3a4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43a3a9	 Bytes: 3
  %loadMem_43a3a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3a9 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3a9)
  store %struct.Memory* %call_43a3a9, %struct.Memory** %MEMORY

  ; Code: jne .L_43a3c1	 RIP: 43a3ac	 Bytes: 6
  %loadMem_43a3ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3ac = call %struct.Memory* @routine_jne_.L_43a3c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3ac, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_43a3ac, %struct.Memory** %MEMORY

  %loadBr_43a3ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a3ac = icmp eq i8 %loadBr_43a3ac, 1
  br i1 %cmpBr_43a3ac, label %block_.L_43a3c1, label %block_43a3b2

block_43a3b2:
  ; Code: movl $0x1, -0x2078(%rbp)	 RIP: 43a3b2	 Bytes: 10
  %loadMem_43a3b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3b2 = call %struct.Memory* @routine_movl__0x1__MINUS0x2078__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3b2)
  store %struct.Memory* %call_43a3b2, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a3f6	 RIP: 43a3bc	 Bytes: 5
  %loadMem_43a3bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3bc = call %struct.Memory* @routine_jmpq_.L_43a3f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3bc, i64 58, i64 5)
  store %struct.Memory* %call_43a3bc, %struct.Memory** %MEMORY

  br label %block_.L_43a3f6

  ; Code: .L_43a3c1:	 RIP: 43a3c1	 Bytes: 0
block_.L_43a3c1:

  ; Code: movq $0x459931, %rsi	 RIP: 43a3c1	 Bytes: 10
  %loadMem_43a3c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3c1 = call %struct.Memory* @routine_movq__0x459931___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3c1)
  store %struct.Memory* %call_43a3c1, %struct.Memory** %MEMORY

  ; Code: movl $0x4, %eax	 RIP: 43a3cb	 Bytes: 5
  %loadMem_43a3cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3cb = call %struct.Memory* @routine_movl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3cb)
  store %struct.Memory* %call_43a3cb, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43a3d0	 Bytes: 2
  %loadMem_43a3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3d0 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3d0)
  store %struct.Memory* %call_43a3d0, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 43a3d2	 Bytes: 7
  %loadMem_43a3d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3d2 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3d2)
  store %struct.Memory* %call_43a3d2, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 43a3d9	 Bytes: 5
  %loadMem1_43a3d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a3d9 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a3d9, i64 -233481, i64 5, i64 5)
  store %struct.Memory* %call1_43a3d9, %struct.Memory** %MEMORY

  %loadMem2_43a3d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a3d9 = load i64, i64* %3
  %call2_43a3d9 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_43a3d9, %struct.Memory* %loadMem2_43a3d9)
  store %struct.Memory* %call2_43a3d9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43a3de	 Bytes: 3
  %loadMem_43a3de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3de = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3de)
  store %struct.Memory* %call_43a3de, %struct.Memory** %MEMORY

  ; Code: jne .L_43a3f1	 RIP: 43a3e1	 Bytes: 6
  %loadMem_43a3e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3e1 = call %struct.Memory* @routine_jne_.L_43a3f1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3e1, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_43a3e1, %struct.Memory** %MEMORY

  %loadBr_43a3e1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a3e1 = icmp eq i8 %loadBr_43a3e1, 1
  br i1 %cmpBr_43a3e1, label %block_.L_43a3f1, label %block_43a3e7

block_43a3e7:
  ; Code: movl $0x1, -0x207c(%rbp)	 RIP: 43a3e7	 Bytes: 10
  %loadMem_43a3e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3e7 = call %struct.Memory* @routine_movl__0x1__MINUS0x207c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3e7)
  store %struct.Memory* %call_43a3e7, %struct.Memory** %MEMORY

  ; Code: .L_43a3f1:	 RIP: 43a3f1	 Bytes: 0
  br label %block_.L_43a3f1
block_.L_43a3f1:

  ; Code: jmpq .L_43a3f6	 RIP: 43a3f1	 Bytes: 5
  %loadMem_43a3f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3f1 = call %struct.Memory* @routine_jmpq_.L_43a3f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3f1, i64 5, i64 5)
  store %struct.Memory* %call_43a3f1, %struct.Memory** %MEMORY

  br label %block_.L_43a3f6

  ; Code: .L_43a3f6:	 RIP: 43a3f6	 Bytes: 0
block_.L_43a3f6:

  ; Code: jmpq .L_43a3fb	 RIP: 43a3f6	 Bytes: 5
  %loadMem_43a3f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3f6 = call %struct.Memory* @routine_jmpq_.L_43a3fb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3f6, i64 5, i64 5)
  store %struct.Memory* %call_43a3f6, %struct.Memory** %MEMORY

  br label %block_.L_43a3fb

  ; Code: .L_43a3fb:	 RIP: 43a3fb	 Bytes: 0
block_.L_43a3fb:

  ; Code: jmpq .L_43a400	 RIP: 43a3fb	 Bytes: 5
  %loadMem_43a3fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a3fb = call %struct.Memory* @routine_jmpq_.L_43a400(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a3fb, i64 5, i64 5)
  store %struct.Memory* %call_43a3fb, %struct.Memory** %MEMORY

  br label %block_.L_43a400

  ; Code: .L_43a400:	 RIP: 43a400	 Bytes: 0
block_.L_43a400:

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43a400	 Bytes: 10
  %loadMem_43a400 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a400 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a400)
  store %struct.Memory* %call_43a400, %struct.Memory** %MEMORY

  ; Code: leaq -0x2030(%rbp), %rdi	 RIP: 43a40a	 Bytes: 7
  %loadMem_43a40a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a40a = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a40a)
  store %struct.Memory* %call_43a40a, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43a411	 Bytes: 5
  %loadMem1_43a411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a411 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a411, i64 -232881, i64 5, i64 5)
  store %struct.Memory* %call1_43a411, %struct.Memory** %MEMORY

  %loadMem2_43a411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a411 = load i64, i64* %3
  %call2_43a411 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43a411, %struct.Memory* %loadMem2_43a411)
  store %struct.Memory* %call2_43a411, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2048(%rbp)	 RIP: 43a416	 Bytes: 7
  %loadMem_43a416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a416 = call %struct.Memory* @routine_movq__rax__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a416)
  store %struct.Memory* %call_43a416, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a41d	 Bytes: 4
  %loadMem_43a41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a41d = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a41d)
  store %struct.Memory* %call_43a41d, %struct.Memory** %MEMORY

  ; Code: jne .L_43a42c	 RIP: 43a421	 Bytes: 6
  %loadMem_43a421 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a421 = call %struct.Memory* @routine_jne_.L_43a42c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a421, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43a421, %struct.Memory** %MEMORY

  %loadBr_43a421 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a421 = icmp eq i8 %loadBr_43a421, 1
  br i1 %cmpBr_43a421, label %block_.L_43a42c, label %block_43a427

block_43a427:
  ; Code: jmpq .L_43a454	 RIP: 43a427	 Bytes: 5
  %loadMem_43a427 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a427 = call %struct.Memory* @routine_jmpq_.L_43a454(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a427, i64 45, i64 5)
  store %struct.Memory* %call_43a427, %struct.Memory** %MEMORY

  br label %block_.L_43a454

  ; Code: .L_43a42c:	 RIP: 43a42c	 Bytes: 0
block_.L_43a42c:

  ; Code: jmpq .L_43a431	 RIP: 43a42c	 Bytes: 5
  %loadMem_43a42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a42c = call %struct.Memory* @routine_jmpq_.L_43a431(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a42c, i64 5, i64 5)
  store %struct.Memory* %call_43a42c, %struct.Memory** %MEMORY

  br label %block_.L_43a431

  ; Code: .L_43a431:	 RIP: 43a431	 Bytes: 0
block_.L_43a431:

  ; Code: movq $0x662bc0, %rdi	 RIP: 43a431	 Bytes: 10
  %loadMem_43a431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a431 = call %struct.Memory* @routine_movq__0x662bc0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a431)
  store %struct.Memory* %call_43a431, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rax	 RIP: 43a43b	 Bytes: 7
  %loadMem_43a43b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a43b = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a43b)
  store %struct.Memory* %call_43a43b, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %esi	 RIP: 43a442	 Bytes: 3
  %loadMem_43a442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a442 = call %struct.Memory* @routine_movsbl___rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a442)
  store %struct.Memory* %call_43a442, %struct.Memory** %MEMORY

  ; Code: callq .strchr_plt	 RIP: 43a445	 Bytes: 5
  %loadMem1_43a445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a445 = call %struct.Memory* @routine_callq_.strchr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a445, i64 -233413, i64 5, i64 5)
  store %struct.Memory* %call1_43a445, %struct.Memory** %MEMORY

  %loadMem2_43a445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a445 = load i64, i64* %3
  %call2_43a445 = call %struct.Memory* @sub_401480.strchr_plt(%struct.State* %0, i64  %loadPC_43a445, %struct.Memory* %loadMem2_43a445)
  store %struct.Memory* %call2_43a445, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a44a	 Bytes: 4
  %loadMem_43a44a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a44a = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a44a)
  store %struct.Memory* %call_43a44a, %struct.Memory** %MEMORY

  ; Code: jne .L_43a271	 RIP: 43a44e	 Bytes: 6
  %loadMem_43a44e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a44e = call %struct.Memory* @routine_jne_.L_43a271(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a44e, i8* %BRANCH_TAKEN, i64 -477, i64 6, i64 6)
  store %struct.Memory* %call_43a44e, %struct.Memory** %MEMORY

  %loadBr_43a44e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a44e = icmp eq i8 %loadBr_43a44e, 1
  br i1 %cmpBr_43a44e, label %block_.L_43a271, label %block_.L_43a454

  ; Code: .L_43a454:	 RIP: 43a454	 Bytes: 0
block_.L_43a454:

  ; Code: jmpq .L_439ff1	 RIP: 43a454	 Bytes: 5
  %loadMem_43a454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a454 = call %struct.Memory* @routine_jmpq_.L_439ff1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a454, i64 -1123, i64 5)
  store %struct.Memory* %call_43a454, %struct.Memory** %MEMORY

  br label %block_.L_439ff1

  ; Code: .L_43a459:	 RIP: 43a459	 Bytes: 0
block_.L_43a459:

  ; Code: cmpl $0x0, -0x203c(%rbp)	 RIP: 43a459	 Bytes: 7
  %loadMem_43a459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a459 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x203c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a459)
  store %struct.Memory* %call_43a459, %struct.Memory** %MEMORY

  ; Code: jne .L_43a474	 RIP: 43a460	 Bytes: 6
  %loadMem_43a460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a460 = call %struct.Memory* @routine_jne_.L_43a474(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a460, i8* %BRANCH_TAKEN, i64 20, i64 6, i64 6)
  store %struct.Memory* %call_43a460, %struct.Memory** %MEMORY

  %loadBr_43a460 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a460 = icmp eq i8 %loadBr_43a460, 1
  br i1 %cmpBr_43a460, label %block_.L_43a474, label %block_43a466

block_43a466:
  ; Code: movl -0x2054(%rbp), %eax	 RIP: 43a466	 Bytes: 6
  %loadMem_43a466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a466 = call %struct.Memory* @routine_movl_MINUS0x2054__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a466)
  store %struct.Memory* %call_43a466, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2c(%rbp)	 RIP: 43a46c	 Bytes: 3
  %loadMem_43a46c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a46c = call %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a46c)
  store %struct.Memory* %call_43a46c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a499	 RIP: 43a46f	 Bytes: 5
  %loadMem_43a46f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a46f = call %struct.Memory* @routine_jmpq_.L_43a499(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a46f, i64 42, i64 5)
  store %struct.Memory* %call_43a46f, %struct.Memory** %MEMORY

  br label %block_.L_43a499

  ; Code: .L_43a474:	 RIP: 43a474	 Bytes: 0
block_.L_43a474:

  ; Code: movl -0x2054(%rbp), %eax	 RIP: 43a474	 Bytes: 6
  %loadMem_43a474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a474 = call %struct.Memory* @routine_movl_MINUS0x2054__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a474)
  store %struct.Memory* %call_43a474, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %eax	 RIP: 43a47a	 Bytes: 3
  %loadMem_43a47a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a47a = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a47a)
  store %struct.Memory* %call_43a47a, %struct.Memory** %MEMORY

  ; Code: je .L_43a494	 RIP: 43a47d	 Bytes: 6
  %loadMem_43a47d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a47d = call %struct.Memory* @routine_je_.L_43a494(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a47d, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43a47d, %struct.Memory** %MEMORY

  %loadBr_43a47d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a47d = icmp eq i8 %loadBr_43a47d, 1
  br i1 %cmpBr_43a47d, label %block_.L_43a494, label %block_43a483

block_43a483:
  ; Code: movq $0x4599ed, %rdi	 RIP: 43a483	 Bytes: 10
  %loadMem_43a483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a483 = call %struct.Memory* @routine_movq__0x4599ed___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a483)
  store %struct.Memory* %call_43a483, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43a48d	 Bytes: 2
  %loadMem_43a48d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a48d = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a48d)
  store %struct.Memory* %call_43a48d, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43a48f	 Bytes: 5
  %loadMem1_43a48f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a48f = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a48f, i64 17793, i64 5, i64 5)
  store %struct.Memory* %call1_43a48f, %struct.Memory** %MEMORY

  %loadMem2_43a48f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a48f = load i64, i64* %3
  %call2_43a48f = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43a48f, %struct.Memory* %loadMem2_43a48f)
  store %struct.Memory* %call2_43a48f, %struct.Memory** %MEMORY

  ; Code: .L_43a494:	 RIP: 43a494	 Bytes: 0
  br label %block_.L_43a494
block_.L_43a494:

  ; Code: jmpq .L_43a499	 RIP: 43a494	 Bytes: 5
  %loadMem_43a494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a494 = call %struct.Memory* @routine_jmpq_.L_43a499(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a494, i64 5, i64 5)
  store %struct.Memory* %call_43a494, %struct.Memory** %MEMORY

  br label %block_.L_43a499

  ; Code: .L_43a499:	 RIP: 43a499	 Bytes: 0
block_.L_43a499:

  ; Code: movl -0x203c(%rbp), %eax	 RIP: 43a499	 Bytes: 6
  %loadMem_43a499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a499 = call %struct.Memory* @routine_movl_MINUS0x203c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a499)
  store %struct.Memory* %call_43a499, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43a49f	 Bytes: 3
  %loadMem_43a49f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a49f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a49f)
  store %struct.Memory* %call_43a49f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x203c(%rbp)	 RIP: 43a4a2	 Bytes: 6
  %loadMem_43a4a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4a2 = call %struct.Memory* @routine_movl__eax__MINUS0x203c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4a2)
  store %struct.Memory* %call_43a4a2, %struct.Memory** %MEMORY

  ; Code: .L_43a4a8:	 RIP: 43a4a8	 Bytes: 0
  br label %block_.L_43a4a8
block_.L_43a4a8:

  ; Code: movl $0x1000, %esi	 RIP: 43a4a8	 Bytes: 5
  %loadMem_43a4a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4a8 = call %struct.Memory* @routine_movl__0x1000___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4a8)
  store %struct.Memory* %call_43a4a8, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 43a4ad	 Bytes: 7
  %loadMem_43a4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4ad = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4ad)
  store %struct.Memory* %call_43a4ad, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rdx	 RIP: 43a4b4	 Bytes: 4
  %loadMem_43a4b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4b4 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4b4)
  store %struct.Memory* %call_43a4b4, %struct.Memory** %MEMORY

  ; Code: callq .fgets_plt	 RIP: 43a4b8	 Bytes: 5
  %loadMem1_43a4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a4b8 = call %struct.Memory* @routine_callq_.fgets_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a4b8, i64 -233336, i64 5, i64 5)
  store %struct.Memory* %call1_43a4b8, %struct.Memory** %MEMORY

  %loadMem2_43a4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a4b8 = load i64, i64* %3
  %call2_43a4b8 = call %struct.Memory* @sub_401540.fgets_plt(%struct.State* %0, i64  %loadPC_43a4b8, %struct.Memory* %loadMem2_43a4b8)
  store %struct.Memory* %call2_43a4b8, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a4bd	 Bytes: 4
  %loadMem_43a4bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4bd = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4bd)
  store %struct.Memory* %call_43a4bd, %struct.Memory** %MEMORY

  ; Code: jne .L_43a4d7	 RIP: 43a4c1	 Bytes: 6
  %loadMem_43a4c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4c1 = call %struct.Memory* @routine_jne_.L_43a4d7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4c1, i8* %BRANCH_TAKEN, i64 22, i64 6, i64 6)
  store %struct.Memory* %call_43a4c1, %struct.Memory** %MEMORY

  %loadBr_43a4c1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a4c1 = icmp eq i8 %loadBr_43a4c1, 1
  br i1 %cmpBr_43a4c1, label %block_.L_43a4d7, label %block_43a4c7

block_43a4c7:
  ; Code: movq $0x0, -0x2048(%rbp)	 RIP: 43a4c7	 Bytes: 11
  %loadMem_43a4c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4c7 = call %struct.Memory* @routine_movq__0x0__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4c7)
  store %struct.Memory* %call_43a4c7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a554	 RIP: 43a4d2	 Bytes: 5
  %loadMem_43a4d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4d2 = call %struct.Memory* @routine_jmpq_.L_43a554(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4d2, i64 130, i64 5)
  store %struct.Memory* %call_43a4d2, %struct.Memory** %MEMORY

  br label %block_.L_43a554

  ; Code: .L_43a4d7:	 RIP: 43a4d7	 Bytes: 0
block_.L_43a4d7:

  ; Code: leaq -0x1030(%rbp), %rsi	 RIP: 43a4d7	 Bytes: 7
  %loadMem_43a4d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4d7 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4d7)
  store %struct.Memory* %call_43a4d7, %struct.Memory** %MEMORY

  ; Code: leaq -0x2030(%rbp), %rdi	 RIP: 43a4de	 Bytes: 7
  %loadMem_43a4de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4de = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4de)
  store %struct.Memory* %call_43a4de, %struct.Memory** %MEMORY

  ; Code: callq .strcpy_plt	 RIP: 43a4e5	 Bytes: 5
  %loadMem1_43a4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a4e5 = call %struct.Memory* @routine_callq_.strcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a4e5, i64 -233733, i64 5, i64 5)
  store %struct.Memory* %call1_43a4e5, %struct.Memory** %MEMORY

  %loadMem2_43a4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a4e5 = load i64, i64* %3
  %call2_43a4e5 = call %struct.Memory* @ext_strcpy(%struct.State* %0, i64  %loadPC_43a4e5, %struct.Memory* %loadMem2_43a4e5)
  store %struct.Memory* %call2_43a4e5, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2148(%rbp)	 RIP: 43a4ea	 Bytes: 7
  %loadMem_43a4ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4ea = call %struct.Memory* @routine_movq__rax__MINUS0x2148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4ea)
  store %struct.Memory* %call_43a4ea, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43a4f1	 Bytes: 10
  %loadMem_43a4f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4f1 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4f1)
  store %struct.Memory* %call_43a4f1, %struct.Memory** %MEMORY

  ; Code: leaq -0x2030(%rbp), %rdi	 RIP: 43a4fb	 Bytes: 7
  %loadMem_43a4fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a4fb = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a4fb)
  store %struct.Memory* %call_43a4fb, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43a502	 Bytes: 5
  %loadMem1_43a502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a502 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a502, i64 -233122, i64 5, i64 5)
  store %struct.Memory* %call1_43a502, %struct.Memory** %MEMORY

  %loadMem2_43a502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a502 = load i64, i64* %3
  %call2_43a502 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43a502, %struct.Memory* %loadMem2_43a502)
  store %struct.Memory* %call2_43a502, %struct.Memory** %MEMORY

  ; Code: movb $0x1, %cl	 RIP: 43a507	 Bytes: 2
  %loadMem_43a507 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a507 = call %struct.Memory* @routine_movb__0x1___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a507)
  store %struct.Memory* %call_43a507, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2048(%rbp)	 RIP: 43a509	 Bytes: 7
  %loadMem_43a509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a509 = call %struct.Memory* @routine_movq__rax__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a509)
  store %struct.Memory* %call_43a509, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a510	 Bytes: 4
  %loadMem_43a510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a510 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a510)
  store %struct.Memory* %call_43a510, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x2149(%rbp)	 RIP: 43a514	 Bytes: 6
  %loadMem_43a514 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a514 = call %struct.Memory* @routine_movb__cl__MINUS0x2149__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a514)
  store %struct.Memory* %call_43a514, %struct.Memory** %MEMORY

  ; Code: je .L_43a546	 RIP: 43a51a	 Bytes: 6
  %loadMem_43a51a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a51a = call %struct.Memory* @routine_je_.L_43a546(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a51a, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_43a51a, %struct.Memory** %MEMORY

  %loadBr_43a51a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a51a = icmp eq i8 %loadBr_43a51a, 1
  br i1 %cmpBr_43a51a, label %block_.L_43a546, label %block_43a520

block_43a520:
  ; Code: movq $0x662bc0, %rdi	 RIP: 43a520	 Bytes: 10
  %loadMem_43a520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a520 = call %struct.Memory* @routine_movq__0x662bc0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a520)
  store %struct.Memory* %call_43a520, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rax	 RIP: 43a52a	 Bytes: 7
  %loadMem_43a52a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a52a = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a52a)
  store %struct.Memory* %call_43a52a, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %esi	 RIP: 43a531	 Bytes: 3
  %loadMem_43a531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a531 = call %struct.Memory* @routine_movsbl___rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a531)
  store %struct.Memory* %call_43a531, %struct.Memory** %MEMORY

  ; Code: callq .strchr_plt	 RIP: 43a534	 Bytes: 5
  %loadMem1_43a534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a534 = call %struct.Memory* @routine_callq_.strchr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a534, i64 -233652, i64 5, i64 5)
  store %struct.Memory* %call1_43a534, %struct.Memory** %MEMORY

  %loadMem2_43a534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a534 = load i64, i64* %3
  %call2_43a534 = call %struct.Memory* @sub_401480.strchr_plt(%struct.State* %0, i64  %loadPC_43a534, %struct.Memory* %loadMem2_43a534)
  store %struct.Memory* %call2_43a534, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a539	 Bytes: 4
  %loadMem_43a539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a539 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a539)
  store %struct.Memory* %call_43a539, %struct.Memory** %MEMORY

  ; Code: setne %cl	 RIP: 43a53d	 Bytes: 3
  %loadMem_43a53d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a53d = call %struct.Memory* @routine_setne__cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a53d)
  store %struct.Memory* %call_43a53d, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x2149(%rbp)	 RIP: 43a540	 Bytes: 6
  %loadMem_43a540 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a540 = call %struct.Memory* @routine_movb__cl__MINUS0x2149__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a540)
  store %struct.Memory* %call_43a540, %struct.Memory** %MEMORY

  ; Code: .L_43a546:	 RIP: 43a546	 Bytes: 0
  br label %block_.L_43a546
block_.L_43a546:

  ; Code: movb -0x2149(%rbp), %al	 RIP: 43a546	 Bytes: 6
  %loadMem_43a546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a546 = call %struct.Memory* @routine_movb_MINUS0x2149__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a546)
  store %struct.Memory* %call_43a546, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 43a54c	 Bytes: 2
  %loadMem_43a54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a54c = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a54c)
  store %struct.Memory* %call_43a54c, %struct.Memory** %MEMORY

  ; Code: jne .L_43a4a8	 RIP: 43a54e	 Bytes: 6
  %loadMem_43a54e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a54e = call %struct.Memory* @routine_jne_.L_43a4a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a54e, i8* %BRANCH_TAKEN, i64 -166, i64 6, i64 6)
  store %struct.Memory* %call_43a54e, %struct.Memory** %MEMORY

  %loadBr_43a54e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a54e = icmp eq i8 %loadBr_43a54e, 1
  br i1 %cmpBr_43a54e, label %block_.L_43a4a8, label %block_.L_43a554

  ; Code: .L_43a554:	 RIP: 43a554	 Bytes: 0
block_.L_43a554:

  ; Code: jmpq .L_439f25	 RIP: 43a554	 Bytes: 5
  %loadMem_43a554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a554 = call %struct.Memory* @routine_jmpq_.L_439f25(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a554, i64 -1583, i64 5)
  store %struct.Memory* %call_43a554, %struct.Memory** %MEMORY

  br label %block_.L_439f25

  ; Code: .L_43a559:	 RIP: 43a559	 Bytes: 0
block_.L_43a559:

  ; Code: movl $0x0, -0x2064(%rbp)	 RIP: 43a559	 Bytes: 10
  %loadMem_43a559 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a559 = call %struct.Memory* @routine_movl__0x0__MINUS0x2064__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a559)
  store %struct.Memory* %call_43a559, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2058(%rbp)	 RIP: 43a563	 Bytes: 10
  %loadMem_43a563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a563 = call %struct.Memory* @routine_movl__0x0__MINUS0x2058__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a563)
  store %struct.Memory* %call_43a563, %struct.Memory** %MEMORY

  ; Code: .L_43a56d:	 RIP: 43a56d	 Bytes: 0
  br label %block_.L_43a56d
block_.L_43a56d:

  ; Code: movl -0x2058(%rbp), %eax	 RIP: 43a56d	 Bytes: 6
  %loadMem_43a56d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a56d = call %struct.Memory* @routine_movl_MINUS0x2058__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a56d)
  store %struct.Memory* %call_43a56d, %struct.Memory** %MEMORY

  ; Code: cmpl -0x203c(%rbp), %eax	 RIP: 43a573	 Bytes: 6
  %loadMem_43a573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a573 = call %struct.Memory* @routine_cmpl_MINUS0x203c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a573)
  store %struct.Memory* %call_43a573, %struct.Memory** %MEMORY

  ; Code: jge .L_43a5c5	 RIP: 43a579	 Bytes: 6
  %loadMem_43a579 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a579 = call %struct.Memory* @routine_jge_.L_43a5c5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a579, i8* %BRANCH_TAKEN, i64 76, i64 6, i64 6)
  store %struct.Memory* %call_43a579, %struct.Memory** %MEMORY

  %loadBr_43a579 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a579 = icmp eq i8 %loadBr_43a579, 1
  br i1 %cmpBr_43a579, label %block_.L_43a5c5, label %block_43a57f

block_43a57f:
  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43a57f	 Bytes: 7
  %loadMem_43a57f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a57f = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a57f)
  store %struct.Memory* %call_43a57f, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43a586	 Bytes: 7
  %loadMem_43a586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a586 = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a586)
  store %struct.Memory* %call_43a586, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax,%rcx,8), %edx	 RIP: 43a58d	 Bytes: 4
  %loadMem_43a58d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a58d = call %struct.Memory* @routine_movl_0x4__rax__rcx_8____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a58d)
  store %struct.Memory* %call_43a58d, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43a591	 Bytes: 7
  %loadMem_43a591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a591 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a591)
  store %struct.Memory* %call_43a591, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43a598	 Bytes: 7
  %loadMem_43a598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a598 = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a598)
  store %struct.Memory* %call_43a598, %struct.Memory** %MEMORY

  ; Code: subl (%rax,%rcx,8), %edx	 RIP: 43a59f	 Bytes: 3
  %loadMem_43a59f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a59f = call %struct.Memory* @routine_subl___rax__rcx_8____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a59f)
  store %struct.Memory* %call_43a59f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 43a5a2	 Bytes: 3
  %loadMem_43a5a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5a2 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5a2)
  store %struct.Memory* %call_43a5a2, %struct.Memory** %MEMORY

  ; Code: addl -0x2064(%rbp), %edx	 RIP: 43a5a5	 Bytes: 6
  %loadMem_43a5a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5a5 = call %struct.Memory* @routine_addl_MINUS0x2064__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5a5)
  store %struct.Memory* %call_43a5a5, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2064(%rbp)	 RIP: 43a5ab	 Bytes: 6
  %loadMem_43a5ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5ab = call %struct.Memory* @routine_movl__edx__MINUS0x2064__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5ab)
  store %struct.Memory* %call_43a5ab, %struct.Memory** %MEMORY

  ; Code: movl -0x2058(%rbp), %eax	 RIP: 43a5b1	 Bytes: 6
  %loadMem_43a5b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5b1 = call %struct.Memory* @routine_movl_MINUS0x2058__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5b1)
  store %struct.Memory* %call_43a5b1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43a5b7	 Bytes: 3
  %loadMem_43a5b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5b7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5b7)
  store %struct.Memory* %call_43a5b7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2058(%rbp)	 RIP: 43a5ba	 Bytes: 6
  %loadMem_43a5ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5ba = call %struct.Memory* @routine_movl__eax__MINUS0x2058__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5ba)
  store %struct.Memory* %call_43a5ba, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a56d	 RIP: 43a5c0	 Bytes: 5
  %loadMem_43a5c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5c0 = call %struct.Memory* @routine_jmpq_.L_43a56d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5c0, i64 -83, i64 5)
  store %struct.Memory* %call_43a5c0, %struct.Memory** %MEMORY

  br label %block_.L_43a56d

  ; Code: .L_43a5c5:	 RIP: 43a5c5	 Bytes: 0
block_.L_43a5c5:

  ; Code: movq -0x20(%rbp), %rdi	 RIP: 43a5c5	 Bytes: 4
  %loadMem_43a5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5c5 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5c5)
  store %struct.Memory* %call_43a5c5, %struct.Memory** %MEMORY

  ; Code: callq .rewind_plt	 RIP: 43a5c9	 Bytes: 5
  %loadMem1_43a5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a5c9 = call %struct.Memory* @routine_callq_.rewind_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a5c9, i64 -233769, i64 5, i64 5)
  store %struct.Memory* %call1_43a5c9, %struct.Memory** %MEMORY

  %loadMem2_43a5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a5c9 = load i64, i64* %3
  %call2_43a5c9 = call %struct.Memory* @sub_4014a0.rewind_plt(%struct.State* %0, i64  %loadPC_43a5c9, %struct.Memory* %loadMem2_43a5c9)
  store %struct.Memory* %call2_43a5c9, %struct.Memory** %MEMORY

  ; Code: movq $0x459936, %rdi	 RIP: 43a5ce	 Bytes: 10
  %loadMem_43a5ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5ce = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5ce)
  store %struct.Memory* %call_43a5ce, %struct.Memory** %MEMORY

  ; Code: movl $0xf7, %esi	 RIP: 43a5d8	 Bytes: 5
  %loadMem_43a5d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5d8 = call %struct.Memory* @routine_movl__0xf7___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5d8)
  store %struct.Memory* %call_43a5d8, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rax	 RIP: 43a5dd	 Bytes: 4
  %loadMem_43a5dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5dd = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5dd)
  store %struct.Memory* %call_43a5dd, %struct.Memory** %MEMORY

  ; Code: shlq $0x3, %rax	 RIP: 43a5e1	 Bytes: 4
  %loadMem_43a5e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5e1 = call %struct.Memory* @routine_shlq__0x3___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5e1)
  store %struct.Memory* %call_43a5e1, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 43a5e5	 Bytes: 3
  %loadMem_43a5e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5e5 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5e5)
  store %struct.Memory* %call_43a5e5, %struct.Memory** %MEMORY

  ; Code: callq .sre_malloc	 RIP: 43a5e8	 Bytes: 5
  %loadMem1_43a5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a5e8 = call %struct.Memory* @routine_callq_.sre_malloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a5e8, i64 47736, i64 5, i64 5)
  store %struct.Memory* %call1_43a5e8, %struct.Memory** %MEMORY

  %loadMem2_43a5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a5e8 = load i64, i64* %3
  %call2_43a5e8 = call %struct.Memory* @sub_446060.sre_malloc(%struct.State* %0, i64  %loadPC_43a5e8, %struct.Memory* %loadMem2_43a5e8)
  store %struct.Memory* %call2_43a5e8, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x28(%rbp)	 RIP: 43a5ed	 Bytes: 4
  %loadMem_43a5ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5ed = call %struct.Memory* @routine_movq__rax__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5ed)
  store %struct.Memory* %call_43a5ed, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x2078(%rbp)	 RIP: 43a5f1	 Bytes: 7
  %loadMem_43a5f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5f1 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2078__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5f1)
  store %struct.Memory* %call_43a5f1, %struct.Memory** %MEMORY

  ; Code: je .L_43a630	 RIP: 43a5f8	 Bytes: 6
  %loadMem_43a5f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5f8 = call %struct.Memory* @routine_je_.L_43a630(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5f8, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_43a5f8, %struct.Memory** %MEMORY

  %loadBr_43a5f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a5f8 = icmp eq i8 %loadBr_43a5f8, 1
  br i1 %cmpBr_43a5f8, label %block_.L_43a630, label %block_43a5fe

block_43a5fe:
  ; Code: movq $0x459936, %rdi	 RIP: 43a5fe	 Bytes: 10
  %loadMem_43a5fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a5fe = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a5fe)
  store %struct.Memory* %call_43a5fe, %struct.Memory** %MEMORY

  ; Code: movl $0xf9, %esi	 RIP: 43a608	 Bytes: 5
  %loadMem_43a608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a608 = call %struct.Memory* @routine_movl__0xf9___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a608)
  store %struct.Memory* %call_43a608, %struct.Memory** %MEMORY

  ; Code: movl -0x2064(%rbp), %eax	 RIP: 43a60d	 Bytes: 6
  %loadMem_43a60d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a60d = call %struct.Memory* @routine_movl_MINUS0x2064__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a60d)
  store %struct.Memory* %call_43a60d, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43a613	 Bytes: 3
  %loadMem_43a613 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a613 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a613)
  store %struct.Memory* %call_43a613, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 43a616	 Bytes: 3
  %loadMem_43a616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a616 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a616)
  store %struct.Memory* %call_43a616, %struct.Memory** %MEMORY

  ; Code: shlq $0x0, %rcx	 RIP: 43a619	 Bytes: 4
  %loadMem_43a619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a619 = call %struct.Memory* @routine_shlq__0x0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a619)
  store %struct.Memory* %call_43a619, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdx	 RIP: 43a61d	 Bytes: 3
  %loadMem_43a61d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a61d = call %struct.Memory* @routine_movq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a61d)
  store %struct.Memory* %call_43a61d, %struct.Memory** %MEMORY

  ; Code: callq .sre_malloc	 RIP: 43a620	 Bytes: 5
  %loadMem1_43a620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a620 = call %struct.Memory* @routine_callq_.sre_malloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a620, i64 47680, i64 5, i64 5)
  store %struct.Memory* %call1_43a620, %struct.Memory** %MEMORY

  %loadMem2_43a620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a620 = load i64, i64* %3
  %call2_43a620 = call %struct.Memory* @sub_446060.sre_malloc(%struct.State* %0, i64  %loadPC_43a620, %struct.Memory* %loadMem2_43a620)
  store %struct.Memory* %call2_43a620, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43a625	 Bytes: 7
  %loadMem_43a625 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a625 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a625)
  store %struct.Memory* %call_43a625, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x18(%rcx)	 RIP: 43a62c	 Bytes: 4
  %loadMem_43a62c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a62c = call %struct.Memory* @routine_movq__rax__0x18__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a62c)
  store %struct.Memory* %call_43a62c, %struct.Memory** %MEMORY

  ; Code: .L_43a630:	 RIP: 43a630	 Bytes: 0
  br label %block_.L_43a630
block_.L_43a630:

  ; Code: cmpl $0x0, -0x207c(%rbp)	 RIP: 43a630	 Bytes: 7
  %loadMem_43a630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a630 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x207c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a630)
  store %struct.Memory* %call_43a630, %struct.Memory** %MEMORY

  ; Code: je .L_43a66f	 RIP: 43a637	 Bytes: 6
  %loadMem_43a637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a637 = call %struct.Memory* @routine_je_.L_43a66f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a637, i8* %BRANCH_TAKEN, i64 56, i64 6, i64 6)
  store %struct.Memory* %call_43a637, %struct.Memory** %MEMORY

  %loadBr_43a637 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a637 = icmp eq i8 %loadBr_43a637, 1
  br i1 %cmpBr_43a637, label %block_.L_43a66f, label %block_43a63d

block_43a63d:
  ; Code: movq $0x459936, %rdi	 RIP: 43a63d	 Bytes: 10
  %loadMem_43a63d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a63d = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a63d)
  store %struct.Memory* %call_43a63d, %struct.Memory** %MEMORY

  ; Code: movl $0xfb, %esi	 RIP: 43a647	 Bytes: 5
  %loadMem_43a647 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a647 = call %struct.Memory* @routine_movl__0xfb___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a647)
  store %struct.Memory* %call_43a647, %struct.Memory** %MEMORY

  ; Code: movl -0x2064(%rbp), %eax	 RIP: 43a64c	 Bytes: 6
  %loadMem_43a64c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a64c = call %struct.Memory* @routine_movl_MINUS0x2064__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a64c)
  store %struct.Memory* %call_43a64c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43a652	 Bytes: 3
  %loadMem_43a652 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a652 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a652)
  store %struct.Memory* %call_43a652, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 43a655	 Bytes: 3
  %loadMem_43a655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a655 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a655)
  store %struct.Memory* %call_43a655, %struct.Memory** %MEMORY

  ; Code: shlq $0x0, %rcx	 RIP: 43a658	 Bytes: 4
  %loadMem_43a658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a658 = call %struct.Memory* @routine_shlq__0x0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a658)
  store %struct.Memory* %call_43a658, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdx	 RIP: 43a65c	 Bytes: 3
  %loadMem_43a65c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a65c = call %struct.Memory* @routine_movq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a65c)
  store %struct.Memory* %call_43a65c, %struct.Memory** %MEMORY

  ; Code: callq .sre_malloc	 RIP: 43a65f	 Bytes: 5
  %loadMem1_43a65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a65f = call %struct.Memory* @routine_callq_.sre_malloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a65f, i64 47617, i64 5, i64 5)
  store %struct.Memory* %call1_43a65f, %struct.Memory** %MEMORY

  %loadMem2_43a65f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a65f = load i64, i64* %3
  %call2_43a65f = call %struct.Memory* @sub_446060.sre_malloc(%struct.State* %0, i64  %loadPC_43a65f, %struct.Memory* %loadMem2_43a65f)
  store %struct.Memory* %call2_43a65f, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43a664	 Bytes: 7
  %loadMem_43a664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a664 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a664)
  store %struct.Memory* %call_43a664, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x20(%rcx)	 RIP: 43a66b	 Bytes: 4
  %loadMem_43a66b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a66b = call %struct.Memory* @routine_movq__rax__0x20__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a66b)
  store %struct.Memory* %call_43a66b, %struct.Memory** %MEMORY

  ; Code: .L_43a66f:	 RIP: 43a66f	 Bytes: 0
  br label %block_.L_43a66f
block_.L_43a66f:

  ; Code: movl $0x0, -0x205c(%rbp)	 RIP: 43a66f	 Bytes: 10
  %loadMem_43a66f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a66f = call %struct.Memory* @routine_movl__0x0__MINUS0x205c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a66f)
  store %struct.Memory* %call_43a66f, %struct.Memory** %MEMORY

  ; Code: .L_43a679:	 RIP: 43a679	 Bytes: 0
  br label %block_.L_43a679
block_.L_43a679:

  ; Code: movl -0x205c(%rbp), %eax	 RIP: 43a679	 Bytes: 6
  %loadMem_43a679 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a679 = call %struct.Memory* @routine_movl_MINUS0x205c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a679)
  store %struct.Memory* %call_43a679, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %eax	 RIP: 43a67f	 Bytes: 3
  %loadMem_43a67f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a67f = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a67f)
  store %struct.Memory* %call_43a67f, %struct.Memory** %MEMORY

  ; Code: jge .L_43a7c5	 RIP: 43a682	 Bytes: 6
  %loadMem_43a682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a682 = call %struct.Memory* @routine_jge_.L_43a7c5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a682, i8* %BRANCH_TAKEN, i64 323, i64 6, i64 6)
  store %struct.Memory* %call_43a682, %struct.Memory** %MEMORY

  %loadBr_43a682 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a682 = icmp eq i8 %loadBr_43a682, 1
  br i1 %cmpBr_43a682, label %block_.L_43a7c5, label %block_43a688

block_43a688:
  ; Code: movq $0x459936, %rdi	 RIP: 43a688	 Bytes: 10
  %loadMem_43a688 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a688 = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a688)
  store %struct.Memory* %call_43a688, %struct.Memory** %MEMORY

  ; Code: movl $0x101, %esi	 RIP: 43a692	 Bytes: 5
  %loadMem_43a692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a692 = call %struct.Memory* @routine_movl__0x101___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a692)
  store %struct.Memory* %call_43a692, %struct.Memory** %MEMORY

  ; Code: movl -0x2064(%rbp), %eax	 RIP: 43a697	 Bytes: 6
  %loadMem_43a697 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a697 = call %struct.Memory* @routine_movl_MINUS0x2064__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a697)
  store %struct.Memory* %call_43a697, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43a69d	 Bytes: 3
  %loadMem_43a69d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a69d = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a69d)
  store %struct.Memory* %call_43a69d, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 43a6a0	 Bytes: 3
  %loadMem_43a6a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6a0 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6a0)
  store %struct.Memory* %call_43a6a0, %struct.Memory** %MEMORY

  ; Code: shlq $0x0, %rcx	 RIP: 43a6a3	 Bytes: 4
  %loadMem_43a6a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6a3 = call %struct.Memory* @routine_shlq__0x0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6a3)
  store %struct.Memory* %call_43a6a3, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdx	 RIP: 43a6a7	 Bytes: 3
  %loadMem_43a6a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6a7 = call %struct.Memory* @routine_movq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6a7)
  store %struct.Memory* %call_43a6a7, %struct.Memory** %MEMORY

  ; Code: callq .sre_malloc	 RIP: 43a6aa	 Bytes: 5
  %loadMem1_43a6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a6aa = call %struct.Memory* @routine_callq_.sre_malloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a6aa, i64 47542, i64 5, i64 5)
  store %struct.Memory* %call1_43a6aa, %struct.Memory** %MEMORY

  %loadMem2_43a6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a6aa = load i64, i64* %3
  %call2_43a6aa = call %struct.Memory* @sub_446060.sre_malloc(%struct.State* %0, i64  %loadPC_43a6aa, %struct.Memory* %loadMem2_43a6aa)
  store %struct.Memory* %call2_43a6aa, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 43a6af	 Bytes: 4
  %loadMem_43a6af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6af = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6af)
  store %struct.Memory* %call_43a6af, %struct.Memory** %MEMORY

  ; Code: movslq -0x205c(%rbp), %rdx	 RIP: 43a6b3	 Bytes: 7
  %loadMem_43a6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6b3 = call %struct.Memory* @routine_movslq_MINUS0x205c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6b3)
  store %struct.Memory* %call_43a6b3, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rcx,%rdx,8)	 RIP: 43a6ba	 Bytes: 4
  %loadMem_43a6ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6ba = call %struct.Memory* @routine_movq__rax____rcx__rdx_8_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6ba)
  store %struct.Memory* %call_43a6ba, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43a6be	 Bytes: 7
  %loadMem_43a6be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6be = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6be)
  store %struct.Memory* %call_43a6be, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43a6c5	 Bytes: 4
  %loadMem_43a6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6c5 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6c5)
  store %struct.Memory* %call_43a6c5, %struct.Memory** %MEMORY

  ; Code: movslq -0x205c(%rbp), %rcx	 RIP: 43a6c9	 Bytes: 7
  %loadMem_43a6c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6c9 = call %struct.Memory* @routine_movslq_MINUS0x205c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6c9)
  store %struct.Memory* %call_43a6c9, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43a6d0	 Bytes: 7
  %loadMem_43a6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6d0 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6d0)
  store %struct.Memory* %call_43a6d0, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43a6d7	 Bytes: 3
  %loadMem_43a6d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6d7 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6d7)
  store %struct.Memory* %call_43a6d7, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %esi	 RIP: 43a6da	 Bytes: 2
  %loadMem_43a6da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6da = call %struct.Memory* @routine_movl___rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6da)
  store %struct.Memory* %call_43a6da, %struct.Memory** %MEMORY

  ; Code: andl $0x200, %esi	 RIP: 43a6dc	 Bytes: 6
  %loadMem_43a6dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6dc = call %struct.Memory* @routine_andl__0x200___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6dc)
  store %struct.Memory* %call_43a6dc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %esi	 RIP: 43a6e2	 Bytes: 3
  %loadMem_43a6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6e2 = call %struct.Memory* @routine_cmpl__0x0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6e2)
  store %struct.Memory* %call_43a6e2, %struct.Memory** %MEMORY

  ; Code: je .L_43a735	 RIP: 43a6e5	 Bytes: 6
  %loadMem_43a6e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6e5 = call %struct.Memory* @routine_je_.L_43a735(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6e5, i8* %BRANCH_TAKEN, i64 80, i64 6, i64 6)
  store %struct.Memory* %call_43a6e5, %struct.Memory** %MEMORY

  %loadBr_43a6e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a6e5 = icmp eq i8 %loadBr_43a6e5, 1
  br i1 %cmpBr_43a6e5, label %block_.L_43a735, label %block_43a6eb

block_43a6eb:
  ; Code: movq $0x459936, %rdi	 RIP: 43a6eb	 Bytes: 10
  %loadMem_43a6eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6eb = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6eb)
  store %struct.Memory* %call_43a6eb, %struct.Memory** %MEMORY

  ; Code: movl $0x103, %esi	 RIP: 43a6f5	 Bytes: 5
  %loadMem_43a6f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6f5 = call %struct.Memory* @routine_movl__0x103___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6f5)
  store %struct.Memory* %call_43a6f5, %struct.Memory** %MEMORY

  ; Code: movl -0x2064(%rbp), %eax	 RIP: 43a6fa	 Bytes: 6
  %loadMem_43a6fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a6fa = call %struct.Memory* @routine_movl_MINUS0x2064__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a6fa)
  store %struct.Memory* %call_43a6fa, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43a700	 Bytes: 3
  %loadMem_43a700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a700 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a700)
  store %struct.Memory* %call_43a700, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 43a703	 Bytes: 3
  %loadMem_43a703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a703 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a703)
  store %struct.Memory* %call_43a703, %struct.Memory** %MEMORY

  ; Code: shlq $0x0, %rcx	 RIP: 43a706	 Bytes: 4
  %loadMem_43a706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a706 = call %struct.Memory* @routine_shlq__0x0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a706)
  store %struct.Memory* %call_43a706, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdx	 RIP: 43a70a	 Bytes: 3
  %loadMem_43a70a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a70a = call %struct.Memory* @routine_movq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a70a)
  store %struct.Memory* %call_43a70a, %struct.Memory** %MEMORY

  ; Code: callq .sre_malloc	 RIP: 43a70d	 Bytes: 5
  %loadMem1_43a70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a70d = call %struct.Memory* @routine_callq_.sre_malloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a70d, i64 47443, i64 5, i64 5)
  store %struct.Memory* %call1_43a70d, %struct.Memory** %MEMORY

  %loadMem2_43a70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a70d = load i64, i64* %3
  %call2_43a70d = call %struct.Memory* @sub_446060.sre_malloc(%struct.State* %0, i64  %loadPC_43a70d, %struct.Memory* %loadMem2_43a70d)
  store %struct.Memory* %call2_43a70d, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43a712	 Bytes: 7
  %loadMem_43a712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a712 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a712)
  store %struct.Memory* %call_43a712, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rcx), %rcx	 RIP: 43a719	 Bytes: 4
  %loadMem_43a719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a719 = call %struct.Memory* @routine_movq_0x28__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a719)
  store %struct.Memory* %call_43a719, %struct.Memory** %MEMORY

  ; Code: movslq -0x205c(%rbp), %rdx	 RIP: 43a71d	 Bytes: 7
  %loadMem_43a71d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a71d = call %struct.Memory* @routine_movslq_MINUS0x205c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a71d)
  store %struct.Memory* %call_43a71d, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rdx, %rdx	 RIP: 43a724	 Bytes: 7
  %loadMem_43a724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a724 = call %struct.Memory* @routine_imulq__0x168___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a724)
  store %struct.Memory* %call_43a724, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 43a72b	 Bytes: 3
  %loadMem_43a72b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a72b = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a72b)
  store %struct.Memory* %call_43a72b, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x158(%rcx)	 RIP: 43a72e	 Bytes: 7
  %loadMem_43a72e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a72e = call %struct.Memory* @routine_movq__rax__0x158__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a72e)
  store %struct.Memory* %call_43a72e, %struct.Memory** %MEMORY

  ; Code: .L_43a735:	 RIP: 43a735	 Bytes: 0
  br label %block_.L_43a735
block_.L_43a735:

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43a735	 Bytes: 7
  %loadMem_43a735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a735 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a735)
  store %struct.Memory* %call_43a735, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43a73c	 Bytes: 4
  %loadMem_43a73c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a73c = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a73c)
  store %struct.Memory* %call_43a73c, %struct.Memory** %MEMORY

  ; Code: movslq -0x205c(%rbp), %rcx	 RIP: 43a740	 Bytes: 7
  %loadMem_43a740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a740 = call %struct.Memory* @routine_movslq_MINUS0x205c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a740)
  store %struct.Memory* %call_43a740, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43a747	 Bytes: 7
  %loadMem_43a747 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a747 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a747)
  store %struct.Memory* %call_43a747, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43a74e	 Bytes: 3
  %loadMem_43a74e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a74e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a74e)
  store %struct.Memory* %call_43a74e, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 43a751	 Bytes: 2
  %loadMem_43a751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a751 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a751)
  store %struct.Memory* %call_43a751, %struct.Memory** %MEMORY

  ; Code: andl $0x400, %edx	 RIP: 43a753	 Bytes: 6
  %loadMem_43a753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a753 = call %struct.Memory* @routine_andl__0x400___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a753)
  store %struct.Memory* %call_43a753, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 43a759	 Bytes: 3
  %loadMem_43a759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a759 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a759)
  store %struct.Memory* %call_43a759, %struct.Memory** %MEMORY

  ; Code: je .L_43a7ac	 RIP: 43a75c	 Bytes: 6
  %loadMem_43a75c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a75c = call %struct.Memory* @routine_je_.L_43a7ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a75c, i8* %BRANCH_TAKEN, i64 80, i64 6, i64 6)
  store %struct.Memory* %call_43a75c, %struct.Memory** %MEMORY

  %loadBr_43a75c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a75c = icmp eq i8 %loadBr_43a75c, 1
  br i1 %cmpBr_43a75c, label %block_.L_43a7ac, label %block_43a762

block_43a762:
  ; Code: movq $0x459936, %rdi	 RIP: 43a762	 Bytes: 10
  %loadMem_43a762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a762 = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a762)
  store %struct.Memory* %call_43a762, %struct.Memory** %MEMORY

  ; Code: movl $0x105, %esi	 RIP: 43a76c	 Bytes: 5
  %loadMem_43a76c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a76c = call %struct.Memory* @routine_movl__0x105___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a76c)
  store %struct.Memory* %call_43a76c, %struct.Memory** %MEMORY

  ; Code: movl -0x2064(%rbp), %eax	 RIP: 43a771	 Bytes: 6
  %loadMem_43a771 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a771 = call %struct.Memory* @routine_movl_MINUS0x2064__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a771)
  store %struct.Memory* %call_43a771, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43a777	 Bytes: 3
  %loadMem_43a777 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a777 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a777)
  store %struct.Memory* %call_43a777, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 43a77a	 Bytes: 3
  %loadMem_43a77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a77a = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a77a)
  store %struct.Memory* %call_43a77a, %struct.Memory** %MEMORY

  ; Code: shlq $0x0, %rcx	 RIP: 43a77d	 Bytes: 4
  %loadMem_43a77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a77d = call %struct.Memory* @routine_shlq__0x0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a77d)
  store %struct.Memory* %call_43a77d, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdx	 RIP: 43a781	 Bytes: 3
  %loadMem_43a781 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a781 = call %struct.Memory* @routine_movq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a781)
  store %struct.Memory* %call_43a781, %struct.Memory** %MEMORY

  ; Code: callq .sre_malloc	 RIP: 43a784	 Bytes: 5
  %loadMem1_43a784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a784 = call %struct.Memory* @routine_callq_.sre_malloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a784, i64 47324, i64 5, i64 5)
  store %struct.Memory* %call1_43a784, %struct.Memory** %MEMORY

  %loadMem2_43a784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a784 = load i64, i64* %3
  %call2_43a784 = call %struct.Memory* @sub_446060.sre_malloc(%struct.State* %0, i64  %loadPC_43a784, %struct.Memory* %loadMem2_43a784)
  store %struct.Memory* %call2_43a784, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43a789	 Bytes: 7
  %loadMem_43a789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a789 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a789)
  store %struct.Memory* %call_43a789, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rcx), %rcx	 RIP: 43a790	 Bytes: 4
  %loadMem_43a790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a790 = call %struct.Memory* @routine_movq_0x28__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a790)
  store %struct.Memory* %call_43a790, %struct.Memory** %MEMORY

  ; Code: movslq -0x205c(%rbp), %rdx	 RIP: 43a794	 Bytes: 7
  %loadMem_43a794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a794 = call %struct.Memory* @routine_movslq_MINUS0x205c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a794)
  store %struct.Memory* %call_43a794, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rdx, %rdx	 RIP: 43a79b	 Bytes: 7
  %loadMem_43a79b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a79b = call %struct.Memory* @routine_imulq__0x168___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a79b)
  store %struct.Memory* %call_43a79b, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 43a7a2	 Bytes: 3
  %loadMem_43a7a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7a2 = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7a2)
  store %struct.Memory* %call_43a7a2, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x160(%rcx)	 RIP: 43a7a5	 Bytes: 7
  %loadMem_43a7a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7a5 = call %struct.Memory* @routine_movq__rax__0x160__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7a5)
  store %struct.Memory* %call_43a7a5, %struct.Memory** %MEMORY

  ; Code: .L_43a7ac:	 RIP: 43a7ac	 Bytes: 0
  br label %block_.L_43a7ac
block_.L_43a7ac:

  ; Code: jmpq .L_43a7b1	 RIP: 43a7ac	 Bytes: 5
  %loadMem_43a7ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7ac = call %struct.Memory* @routine_jmpq_.L_43a7b1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7ac, i64 5, i64 5)
  store %struct.Memory* %call_43a7ac, %struct.Memory** %MEMORY

  br label %block_.L_43a7b1

  ; Code: .L_43a7b1:	 RIP: 43a7b1	 Bytes: 0
block_.L_43a7b1:

  ; Code: movl -0x205c(%rbp), %eax	 RIP: 43a7b1	 Bytes: 6
  %loadMem_43a7b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7b1 = call %struct.Memory* @routine_movl_MINUS0x205c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7b1)
  store %struct.Memory* %call_43a7b1, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43a7b7	 Bytes: 3
  %loadMem_43a7b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7b7 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7b7)
  store %struct.Memory* %call_43a7b7, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x205c(%rbp)	 RIP: 43a7ba	 Bytes: 6
  %loadMem_43a7ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7ba = call %struct.Memory* @routine_movl__eax__MINUS0x205c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7ba)
  store %struct.Memory* %call_43a7ba, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43a679	 RIP: 43a7c0	 Bytes: 5
  %loadMem_43a7c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7c0 = call %struct.Memory* @routine_jmpq_.L_43a679(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7c0, i64 -327, i64 5)
  store %struct.Memory* %call_43a7c0, %struct.Memory** %MEMORY

  br label %block_.L_43a679

  ; Code: .L_43a7c5:	 RIP: 43a7c5	 Bytes: 0
block_.L_43a7c5:

  ; Code: movq $0x459936, %rdi	 RIP: 43a7c5	 Bytes: 10
  %loadMem_43a7c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7c5 = call %struct.Memory* @routine_movq__0x459936___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7c5)
  store %struct.Memory* %call_43a7c5, %struct.Memory** %MEMORY

  ; Code: movl $0x10a, %esi	 RIP: 43a7cf	 Bytes: 5
  %loadMem_43a7cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7cf = call %struct.Memory* @routine_movl__0x10a___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7cf)
  store %struct.Memory* %call_43a7cf, %struct.Memory** %MEMORY

  ; Code: movl -0x2064(%rbp), %eax	 RIP: 43a7d4	 Bytes: 6
  %loadMem_43a7d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7d4 = call %struct.Memory* @routine_movl_MINUS0x2064__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7d4)
  store %struct.Memory* %call_43a7d4, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43a7da	 Bytes: 7
  %loadMem_43a7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7da = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7da)
  store %struct.Memory* %call_43a7da, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x4(%rcx)	 RIP: 43a7e1	 Bytes: 3
  %loadMem_43a7e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7e1 = call %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7e1)
  store %struct.Memory* %call_43a7e1, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %eax	 RIP: 43a7e4	 Bytes: 3
  %loadMem_43a7e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7e4 = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7e4)
  store %struct.Memory* %call_43a7e4, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43a7e7	 Bytes: 7
  %loadMem_43a7e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7e7 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7e7)
  store %struct.Memory* %call_43a7e7, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x8(%rcx)	 RIP: 43a7ee	 Bytes: 3
  %loadMem_43a7ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7ee = call %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7ee)
  store %struct.Memory* %call_43a7ee, %struct.Memory** %MEMORY

  ; Code: movslq -0x2c(%rbp), %rcx	 RIP: 43a7f1	 Bytes: 4
  %loadMem_43a7f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7f1 = call %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7f1)
  store %struct.Memory* %call_43a7f1, %struct.Memory** %MEMORY

  ; Code: shlq $0x2, %rcx	 RIP: 43a7f5	 Bytes: 4
  %loadMem_43a7f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7f5 = call %struct.Memory* @routine_shlq__0x2___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7f5)
  store %struct.Memory* %call_43a7f5, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdx	 RIP: 43a7f9	 Bytes: 3
  %loadMem_43a7f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a7f9 = call %struct.Memory* @routine_movq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a7f9)
  store %struct.Memory* %call_43a7f9, %struct.Memory** %MEMORY

  ; Code: callq .sre_malloc	 RIP: 43a7fc	 Bytes: 5
  %loadMem1_43a7fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a7fc = call %struct.Memory* @routine_callq_.sre_malloc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a7fc, i64 47204, i64 5, i64 5)
  store %struct.Memory* %call1_43a7fc, %struct.Memory** %MEMORY

  %loadMem2_43a7fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a7fc = load i64, i64* %3
  %call2_43a7fc = call %struct.Memory* @sub_446060.sre_malloc(%struct.State* %0, i64  %loadPC_43a7fc, %struct.Memory* %loadMem2_43a7fc)
  store %struct.Memory* %call2_43a7fc, %struct.Memory** %MEMORY

  ; Code: movss 0x19f1f(%rip), %xmm0	 RIP: 43a801	 Bytes: 8
  %loadMem_43a801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a801 = call %struct.Memory* @routine_movss_0x19f1f__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a801)
  store %struct.Memory* %call_43a801, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43a809	 Bytes: 7
  %loadMem_43a809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a809 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a809)
  store %struct.Memory* %call_43a809, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x10(%rcx)	 RIP: 43a810	 Bytes: 4
  %loadMem_43a810 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a810 = call %struct.Memory* @routine_movq__rax__0x10__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a810)
  store %struct.Memory* %call_43a810, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43a814	 Bytes: 7
  %loadMem_43a814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a814 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a814)
  store %struct.Memory* %call_43a814, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rdi	 RIP: 43a81b	 Bytes: 4
  %loadMem_43a81b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a81b = call %struct.Memory* @routine_movq_0x10__rax____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a81b)
  store %struct.Memory* %call_43a81b, %struct.Memory** %MEMORY

  ; Code: movl -0x2c(%rbp), %esi	 RIP: 43a81f	 Bytes: 3
  %loadMem_43a81f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a81f = call %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a81f)
  store %struct.Memory* %call_43a81f, %struct.Memory** %MEMORY

  ; Code: callq .FSet	 RIP: 43a822	 Bytes: 5
  %loadMem1_43a822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a822 = call %struct.Memory* @routine_callq_.FSet(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a822, i64 96030, i64 5, i64 5)
  store %struct.Memory* %call1_43a822, %struct.Memory** %MEMORY

  %loadMem2_43a822 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a822 = load i64, i64* %3
  %call2_43a822 = call %struct.Memory* @sub_451f40.FSet(%struct.State* %0, i64  %loadPC_43a822, %struct.Memory* %loadMem2_43a822)
  store %struct.Memory* %call2_43a822, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x206c(%rbp)	 RIP: 43a827	 Bytes: 10
  %loadMem_43a827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a827 = call %struct.Memory* @routine_movl__0x0__MINUS0x206c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a827)
  store %struct.Memory* %call_43a827, %struct.Memory** %MEMORY

  ; Code: .L_43a831:	 RIP: 43a831	 Bytes: 0
  br label %block_.L_43a831
block_.L_43a831:

  ; Code: movl $0x1000, %esi	 RIP: 43a831	 Bytes: 5
  %loadMem_43a831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a831 = call %struct.Memory* @routine_movl__0x1000___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a831)
  store %struct.Memory* %call_43a831, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 43a836	 Bytes: 7
  %loadMem_43a836 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a836 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a836)
  store %struct.Memory* %call_43a836, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rdx	 RIP: 43a83d	 Bytes: 4
  %loadMem_43a83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a83d = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a83d)
  store %struct.Memory* %call_43a83d, %struct.Memory** %MEMORY

  ; Code: callq .fgets_plt	 RIP: 43a841	 Bytes: 5
  %loadMem1_43a841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a841 = call %struct.Memory* @routine_callq_.fgets_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a841, i64 -234241, i64 5, i64 5)
  store %struct.Memory* %call1_43a841, %struct.Memory** %MEMORY

  %loadMem2_43a841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a841 = load i64, i64* %3
  %call2_43a841 = call %struct.Memory* @sub_401540.fgets_plt(%struct.State* %0, i64  %loadPC_43a841, %struct.Memory* %loadMem2_43a841)
  store %struct.Memory* %call2_43a841, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a846	 Bytes: 4
  %loadMem_43a846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a846 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a846)
  store %struct.Memory* %call_43a846, %struct.Memory** %MEMORY

  ; Code: jne .L_43a861	 RIP: 43a84a	 Bytes: 6
  %loadMem_43a84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a84a = call %struct.Memory* @routine_jne_.L_43a861(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a84a, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43a84a, %struct.Memory** %MEMORY

  %loadBr_43a84a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a84a = icmp eq i8 %loadBr_43a84a, 1
  br i1 %cmpBr_43a84a, label %block_.L_43a861, label %block_43a850

block_43a850:
  ; Code: movq $0x4599ed, %rdi	 RIP: 43a850	 Bytes: 10
  %loadMem_43a850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a850 = call %struct.Memory* @routine_movq__0x4599ed___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a850)
  store %struct.Memory* %call_43a850, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43a85a	 Bytes: 2
  %loadMem_43a85a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a85a = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a85a)
  store %struct.Memory* %call_43a85a, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43a85c	 Bytes: 5
  %loadMem1_43a85c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a85c = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a85c, i64 16820, i64 5, i64 5)
  store %struct.Memory* %call1_43a85c, %struct.Memory** %MEMORY

  %loadMem2_43a85c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a85c = load i64, i64* %3
  %call2_43a85c = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43a85c, %struct.Memory* %loadMem2_43a85c)
  store %struct.Memory* %call2_43a85c, %struct.Memory** %MEMORY

  ; Code: .L_43a861:	 RIP: 43a861	 Bytes: 0
  br label %block_.L_43a861
block_.L_43a861:

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43a861	 Bytes: 10
  %loadMem_43a861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a861 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a861)
  store %struct.Memory* %call_43a861, %struct.Memory** %MEMORY

  ; Code: leaq -0x2030(%rbp), %rax	 RIP: 43a86b	 Bytes: 7
  %loadMem_43a86b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a86b = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a86b)
  store %struct.Memory* %call_43a86b, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rcx	 RIP: 43a872	 Bytes: 7
  %loadMem_43a872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a872 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a872)
  store %struct.Memory* %call_43a872, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43a879	 Bytes: 3
  %loadMem_43a879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a879 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a879)
  store %struct.Memory* %call_43a879, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x2158(%rbp)	 RIP: 43a87c	 Bytes: 7
  %loadMem_43a87c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a87c = call %struct.Memory* @routine_movq__rsi__MINUS0x2158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a87c)
  store %struct.Memory* %call_43a87c, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 43a883	 Bytes: 3
  %loadMem_43a883 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a883 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a883)
  store %struct.Memory* %call_43a883, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2160(%rbp)	 RIP: 43a886	 Bytes: 7
  %loadMem_43a886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a886 = call %struct.Memory* @routine_movq__rax__MINUS0x2160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a886)
  store %struct.Memory* %call_43a886, %struct.Memory** %MEMORY

  ; Code: callq .strcpy_plt	 RIP: 43a88d	 Bytes: 5
  %loadMem1_43a88d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a88d = call %struct.Memory* @routine_callq_.strcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a88d, i64 -234669, i64 5, i64 5)
  store %struct.Memory* %call1_43a88d, %struct.Memory** %MEMORY

  %loadMem2_43a88d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a88d = load i64, i64* %3
  %call2_43a88d = call %struct.Memory* @ext_strcpy(%struct.State* %0, i64  %loadPC_43a88d, %struct.Memory* %loadMem2_43a88d)
  store %struct.Memory* %call2_43a88d, %struct.Memory** %MEMORY

  ; Code: movq -0x2160(%rbp), %rdi	 RIP: 43a892	 Bytes: 7
  %loadMem_43a892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a892 = call %struct.Memory* @routine_movq_MINUS0x2160__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a892)
  store %struct.Memory* %call_43a892, %struct.Memory** %MEMORY

  ; Code: movq -0x2158(%rbp), %rsi	 RIP: 43a899	 Bytes: 7
  %loadMem_43a899 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a899 = call %struct.Memory* @routine_movq_MINUS0x2158__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a899)
  store %struct.Memory* %call_43a899, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2168(%rbp)	 RIP: 43a8a0	 Bytes: 7
  %loadMem_43a8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8a0 = call %struct.Memory* @routine_movq__rax__MINUS0x2168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8a0)
  store %struct.Memory* %call_43a8a0, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43a8a7	 Bytes: 5
  %loadMem1_43a8a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a8a7 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a8a7, i64 -234055, i64 5, i64 5)
  store %struct.Memory* %call1_43a8a7, %struct.Memory** %MEMORY

  %loadMem2_43a8a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a8a7 = load i64, i64* %3
  %call2_43a8a7 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43a8a7, %struct.Memory* %loadMem2_43a8a7)
  store %struct.Memory* %call2_43a8a7, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2048(%rbp)	 RIP: 43a8ac	 Bytes: 7
  %loadMem_43a8ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8ac = call %struct.Memory* @routine_movq__rax__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8ac)
  store %struct.Memory* %call_43a8ac, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a8b3	 Bytes: 4
  %loadMem_43a8b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8b3 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8b3)
  store %struct.Memory* %call_43a8b3, %struct.Memory** %MEMORY

  ; Code: jne .L_43a8c2	 RIP: 43a8b7	 Bytes: 6
  %loadMem_43a8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8b7 = call %struct.Memory* @routine_jne_.L_43a8c2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8b7, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43a8b7, %struct.Memory** %MEMORY

  %loadBr_43a8b7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a8b7 = icmp eq i8 %loadBr_43a8b7, 1
  br i1 %cmpBr_43a8b7, label %block_.L_43a8c2, label %block_43a8bd

block_43a8bd:
  ; Code: jmpq .L_43a831	 RIP: 43a8bd	 Bytes: 5
  %loadMem_43a8bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8bd = call %struct.Memory* @routine_jmpq_.L_43a831(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8bd, i64 -140, i64 5)
  store %struct.Memory* %call_43a8bd, %struct.Memory** %MEMORY

  br label %block_.L_43a831

  ; Code: .L_43a8c2:	 RIP: 43a8c2	 Bytes: 0
block_.L_43a8c2:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43a8c2	 Bytes: 7
  %loadMem_43a8c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8c2 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8c2)
  store %struct.Memory* %call_43a8c2, %struct.Memory** %MEMORY

  ; Code: movl $0x459a08, %eax	 RIP: 43a8c9	 Bytes: 5
  %loadMem_43a8c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8c9 = call %struct.Memory* @routine_movl__0x459a08___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8c9)
  store %struct.Memory* %call_43a8c9, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43a8ce	 Bytes: 2
  %loadMem_43a8ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8ce = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8ce)
  store %struct.Memory* %call_43a8ce, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43a8d0	 Bytes: 5
  %loadMem1_43a8d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a8d0 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a8d0, i64 -234352, i64 5, i64 5)
  store %struct.Memory* %call1_43a8d0, %struct.Memory** %MEMORY

  %loadMem2_43a8d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a8d0 = load i64, i64* %3
  %call2_43a8d0 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43a8d0, %struct.Memory* %loadMem2_43a8d0)
  store %struct.Memory* %call2_43a8d0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43a8d5	 Bytes: 3
  %loadMem_43a8d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8d5 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8d5)
  store %struct.Memory* %call_43a8d5, %struct.Memory** %MEMORY

  ; Code: jne .L_43a91e	 RIP: 43a8d8	 Bytes: 6
  %loadMem_43a8d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8d8 = call %struct.Memory* @routine_jne_.L_43a91e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8d8, i8* %BRANCH_TAKEN, i64 70, i64 6, i64 6)
  store %struct.Memory* %call_43a8d8, %struct.Memory** %MEMORY

  %loadBr_43a8d8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a8d8 = icmp eq i8 %loadBr_43a8d8, 1
  br i1 %cmpBr_43a8d8, label %block_.L_43a91e, label %block_43a8de

block_43a8de:
  ; Code: xorl %eax, %eax	 RIP: 43a8de	 Bytes: 2
  %loadMem_43a8de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8de = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8de)
  store %struct.Memory* %call_43a8de, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43a8e0	 Bytes: 2
  %loadMem_43a8e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8e0 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8e0)
  store %struct.Memory* %call_43a8e0, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f7, %rsi	 RIP: 43a8e2	 Bytes: 10
  %loadMem_43a8e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8e2 = call %struct.Memory* @routine_movq__0x45a1f7___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8e2)
  store %struct.Memory* %call_43a8e2, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43a8ec	 Bytes: 5
  %loadMem1_43a8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a8ec = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a8ec, i64 -234124, i64 5, i64 5)
  store %struct.Memory* %call1_43a8ec, %struct.Memory** %MEMORY

  %loadMem2_43a8ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a8ec = load i64, i64* %3
  %call2_43a8ec = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43a8ec, %struct.Memory* %loadMem2_43a8ec)
  store %struct.Memory* %call2_43a8ec, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43a8f1	 Bytes: 7
  %loadMem_43a8f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8f1 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8f1)
  store %struct.Memory* %call_43a8f1, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a8f8	 Bytes: 4
  %loadMem_43a8f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8f8 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8f8)
  store %struct.Memory* %call_43a8f8, %struct.Memory** %MEMORY

  ; Code: je .L_43a91e	 RIP: 43a8fc	 Bytes: 6
  %loadMem_43a8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a8fc = call %struct.Memory* @routine_je_.L_43a91e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a8fc, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_43a8fc, %struct.Memory** %MEMORY

  %loadBr_43a8fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a8fc = icmp eq i8 %loadBr_43a8fc, 1
  br i1 %cmpBr_43a8fc, label %block_.L_43a91e, label %block_43a902

block_43a902:
  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43a902	 Bytes: 7
  %loadMem_43a902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a902 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a902)
  store %struct.Memory* %call_43a902, %struct.Memory** %MEMORY

  ; Code: callq .Strdup	 RIP: 43a909	 Bytes: 5
  %loadMem1_43a909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a909 = call %struct.Memory* @routine_callq_.Strdup(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a909, i64 46311, i64 5, i64 5)
  store %struct.Memory* %call1_43a909, %struct.Memory** %MEMORY

  %loadMem2_43a909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a909 = load i64, i64* %3
  %call2_43a909 = call %struct.Memory* @sub_445df0.Strdup(%struct.State* %0, i64  %loadPC_43a909, %struct.Memory* %loadMem2_43a909)
  store %struct.Memory* %call2_43a909, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 43a90e	 Bytes: 7
  %loadMem_43a90e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a90e = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a90e)
  store %struct.Memory* %call_43a90e, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x48(%rdi)	 RIP: 43a915	 Bytes: 4
  %loadMem_43a915 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a915 = call %struct.Memory* @routine_movq__rax__0x48__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a915)
  store %struct.Memory* %call_43a915, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b0db	 RIP: 43a919	 Bytes: 5
  %loadMem_43a919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a919 = call %struct.Memory* @routine_jmpq_.L_43b0db(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a919, i64 1986, i64 5)
  store %struct.Memory* %call_43a919, %struct.Memory** %MEMORY

  br label %block_.L_43b0db

  ; Code: .L_43a91e:	 RIP: 43a91e	 Bytes: 0
block_.L_43a91e:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43a91e	 Bytes: 7
  %loadMem_43a91e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a91e = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a91e)
  store %struct.Memory* %call_43a91e, %struct.Memory** %MEMORY

  ; Code: movl $0x459a0d, %eax	 RIP: 43a925	 Bytes: 5
  %loadMem_43a925 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a925 = call %struct.Memory* @routine_movl__0x459a0d___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a925)
  store %struct.Memory* %call_43a925, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43a92a	 Bytes: 2
  %loadMem_43a92a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a92a = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a92a)
  store %struct.Memory* %call_43a92a, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43a92c	 Bytes: 5
  %loadMem1_43a92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a92c = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a92c, i64 -234444, i64 5, i64 5)
  store %struct.Memory* %call1_43a92c, %struct.Memory** %MEMORY

  %loadMem2_43a92c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a92c = load i64, i64* %3
  %call2_43a92c = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43a92c, %struct.Memory* %loadMem2_43a92c)
  store %struct.Memory* %call2_43a92c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43a931	 Bytes: 3
  %loadMem_43a931 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a931 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a931)
  store %struct.Memory* %call_43a931, %struct.Memory** %MEMORY

  ; Code: jne .L_43a97a	 RIP: 43a934	 Bytes: 6
  %loadMem_43a934 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a934 = call %struct.Memory* @routine_jne_.L_43a97a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a934, i8* %BRANCH_TAKEN, i64 70, i64 6, i64 6)
  store %struct.Memory* %call_43a934, %struct.Memory** %MEMORY

  %loadBr_43a934 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a934 = icmp eq i8 %loadBr_43a934, 1
  br i1 %cmpBr_43a934, label %block_.L_43a97a, label %block_43a93a

block_43a93a:
  ; Code: xorl %eax, %eax	 RIP: 43a93a	 Bytes: 2
  %loadMem_43a93a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a93a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a93a)
  store %struct.Memory* %call_43a93a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43a93c	 Bytes: 2
  %loadMem_43a93c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a93c = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a93c)
  store %struct.Memory* %call_43a93c, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f7, %rsi	 RIP: 43a93e	 Bytes: 10
  %loadMem_43a93e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a93e = call %struct.Memory* @routine_movq__0x45a1f7___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a93e)
  store %struct.Memory* %call_43a93e, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43a948	 Bytes: 5
  %loadMem1_43a948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a948 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a948, i64 -234216, i64 5, i64 5)
  store %struct.Memory* %call1_43a948, %struct.Memory** %MEMORY

  %loadMem2_43a948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a948 = load i64, i64* %3
  %call2_43a948 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43a948, %struct.Memory* %loadMem2_43a948)
  store %struct.Memory* %call2_43a948, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43a94d	 Bytes: 7
  %loadMem_43a94d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a94d = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a94d)
  store %struct.Memory* %call_43a94d, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a954	 Bytes: 4
  %loadMem_43a954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a954 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a954)
  store %struct.Memory* %call_43a954, %struct.Memory** %MEMORY

  ; Code: je .L_43a97a	 RIP: 43a958	 Bytes: 6
  %loadMem_43a958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a958 = call %struct.Memory* @routine_je_.L_43a97a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a958, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_43a958, %struct.Memory** %MEMORY

  %loadBr_43a958 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a958 = icmp eq i8 %loadBr_43a958, 1
  br i1 %cmpBr_43a958, label %block_.L_43a97a, label %block_43a95e

block_43a95e:
  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43a95e	 Bytes: 7
  %loadMem_43a95e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a95e = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a95e)
  store %struct.Memory* %call_43a95e, %struct.Memory** %MEMORY

  ; Code: callq .Strdup	 RIP: 43a965	 Bytes: 5
  %loadMem1_43a965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a965 = call %struct.Memory* @routine_callq_.Strdup(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a965, i64 46219, i64 5, i64 5)
  store %struct.Memory* %call1_43a965, %struct.Memory** %MEMORY

  %loadMem2_43a965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a965 = load i64, i64* %3
  %call2_43a965 = call %struct.Memory* @sub_445df0.Strdup(%struct.State* %0, i64  %loadPC_43a965, %struct.Memory* %loadMem2_43a965)
  store %struct.Memory* %call2_43a965, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 43a96a	 Bytes: 7
  %loadMem_43a96a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a96a = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a96a)
  store %struct.Memory* %call_43a96a, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x30(%rdi)	 RIP: 43a971	 Bytes: 4
  %loadMem_43a971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a971 = call %struct.Memory* @routine_movq__rax__0x30__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a971)
  store %struct.Memory* %call_43a971, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b0d6	 RIP: 43a975	 Bytes: 5
  %loadMem_43a975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a975 = call %struct.Memory* @routine_jmpq_.L_43b0d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a975, i64 1889, i64 5)
  store %struct.Memory* %call_43a975, %struct.Memory** %MEMORY

  br label %block_.L_43b0d6

  ; Code: .L_43a97a:	 RIP: 43a97a	 Bytes: 0
block_.L_43a97a:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43a97a	 Bytes: 7
  %loadMem_43a97a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a97a = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a97a)
  store %struct.Memory* %call_43a97a, %struct.Memory** %MEMORY

  ; Code: movl $0x459a12, %eax	 RIP: 43a981	 Bytes: 5
  %loadMem_43a981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a981 = call %struct.Memory* @routine_movl__0x459a12___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a981)
  store %struct.Memory* %call_43a981, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43a986	 Bytes: 2
  %loadMem_43a986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a986 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a986)
  store %struct.Memory* %call_43a986, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43a988	 Bytes: 5
  %loadMem1_43a988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a988 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a988, i64 -234536, i64 5, i64 5)
  store %struct.Memory* %call1_43a988, %struct.Memory** %MEMORY

  %loadMem2_43a988 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a988 = load i64, i64* %3
  %call2_43a988 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43a988, %struct.Memory* %loadMem2_43a988)
  store %struct.Memory* %call2_43a988, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43a98d	 Bytes: 3
  %loadMem_43a98d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a98d = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a98d)
  store %struct.Memory* %call_43a98d, %struct.Memory** %MEMORY

  ; Code: jne .L_43a9d6	 RIP: 43a990	 Bytes: 6
  %loadMem_43a990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a990 = call %struct.Memory* @routine_jne_.L_43a9d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a990, i8* %BRANCH_TAKEN, i64 70, i64 6, i64 6)
  store %struct.Memory* %call_43a990, %struct.Memory** %MEMORY

  %loadBr_43a990 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a990 = icmp eq i8 %loadBr_43a990, 1
  br i1 %cmpBr_43a990, label %block_.L_43a9d6, label %block_43a996

block_43a996:
  ; Code: xorl %eax, %eax	 RIP: 43a996	 Bytes: 2
  %loadMem_43a996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a996 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a996)
  store %struct.Memory* %call_43a996, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43a998	 Bytes: 2
  %loadMem_43a998 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a998 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a998)
  store %struct.Memory* %call_43a998, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f7, %rsi	 RIP: 43a99a	 Bytes: 10
  %loadMem_43a99a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a99a = call %struct.Memory* @routine_movq__0x45a1f7___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a99a)
  store %struct.Memory* %call_43a99a, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43a9a4	 Bytes: 5
  %loadMem1_43a9a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a9a4 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a9a4, i64 -234308, i64 5, i64 5)
  store %struct.Memory* %call1_43a9a4, %struct.Memory** %MEMORY

  %loadMem2_43a9a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a9a4 = load i64, i64* %3
  %call2_43a9a4 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43a9a4, %struct.Memory* %loadMem2_43a9a4)
  store %struct.Memory* %call2_43a9a4, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43a9a9	 Bytes: 7
  %loadMem_43a9a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9a9 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9a9)
  store %struct.Memory* %call_43a9a9, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43a9b0	 Bytes: 4
  %loadMem_43a9b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9b0 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9b0)
  store %struct.Memory* %call_43a9b0, %struct.Memory** %MEMORY

  ; Code: je .L_43a9d6	 RIP: 43a9b4	 Bytes: 6
  %loadMem_43a9b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9b4 = call %struct.Memory* @routine_je_.L_43a9d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9b4, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_43a9b4, %struct.Memory** %MEMORY

  %loadBr_43a9b4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a9b4 = icmp eq i8 %loadBr_43a9b4, 1
  br i1 %cmpBr_43a9b4, label %block_.L_43a9d6, label %block_43a9ba

block_43a9ba:
  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43a9ba	 Bytes: 7
  %loadMem_43a9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9ba = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9ba)
  store %struct.Memory* %call_43a9ba, %struct.Memory** %MEMORY

  ; Code: callq .Strdup	 RIP: 43a9c1	 Bytes: 5
  %loadMem1_43a9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a9c1 = call %struct.Memory* @routine_callq_.Strdup(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a9c1, i64 46127, i64 5, i64 5)
  store %struct.Memory* %call1_43a9c1, %struct.Memory** %MEMORY

  %loadMem2_43a9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a9c1 = load i64, i64* %3
  %call2_43a9c1 = call %struct.Memory* @sub_445df0.Strdup(%struct.State* %0, i64  %loadPC_43a9c1, %struct.Memory* %loadMem2_43a9c1)
  store %struct.Memory* %call2_43a9c1, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 43a9c6	 Bytes: 7
  %loadMem_43a9c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9c6 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9c6)
  store %struct.Memory* %call_43a9c6, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x40(%rdi)	 RIP: 43a9cd	 Bytes: 4
  %loadMem_43a9cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9cd = call %struct.Memory* @routine_movq__rax__0x40__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9cd)
  store %struct.Memory* %call_43a9cd, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b0d1	 RIP: 43a9d1	 Bytes: 5
  %loadMem_43a9d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9d1 = call %struct.Memory* @routine_jmpq_.L_43b0d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9d1, i64 1792, i64 5)
  store %struct.Memory* %call_43a9d1, %struct.Memory** %MEMORY

  br label %block_.L_43b0d1

  ; Code: .L_43a9d6:	 RIP: 43a9d6	 Bytes: 0
block_.L_43a9d6:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43a9d6	 Bytes: 7
  %loadMem_43a9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9d6 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9d6)
  store %struct.Memory* %call_43a9d6, %struct.Memory** %MEMORY

  ; Code: movl $0x459a17, %eax	 RIP: 43a9dd	 Bytes: 5
  %loadMem_43a9dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9dd = call %struct.Memory* @routine_movl__0x459a17___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9dd)
  store %struct.Memory* %call_43a9dd, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43a9e2	 Bytes: 2
  %loadMem_43a9e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9e2 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9e2)
  store %struct.Memory* %call_43a9e2, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43a9e4	 Bytes: 5
  %loadMem1_43a9e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43a9e4 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43a9e4, i64 -234628, i64 5, i64 5)
  store %struct.Memory* %call1_43a9e4, %struct.Memory** %MEMORY

  %loadMem2_43a9e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43a9e4 = load i64, i64* %3
  %call2_43a9e4 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43a9e4, %struct.Memory* %loadMem2_43a9e4)
  store %struct.Memory* %call2_43a9e4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43a9e9	 Bytes: 3
  %loadMem_43a9e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9e9 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9e9)
  store %struct.Memory* %call_43a9e9, %struct.Memory** %MEMORY

  ; Code: jne .L_43aa32	 RIP: 43a9ec	 Bytes: 6
  %loadMem_43a9ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9ec = call %struct.Memory* @routine_jne_.L_43aa32(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9ec, i8* %BRANCH_TAKEN, i64 70, i64 6, i64 6)
  store %struct.Memory* %call_43a9ec, %struct.Memory** %MEMORY

  %loadBr_43a9ec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43a9ec = icmp eq i8 %loadBr_43a9ec, 1
  br i1 %cmpBr_43a9ec, label %block_.L_43aa32, label %block_43a9f2

block_43a9f2:
  ; Code: xorl %eax, %eax	 RIP: 43a9f2	 Bytes: 2
  %loadMem_43a9f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9f2 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9f2)
  store %struct.Memory* %call_43a9f2, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43a9f4	 Bytes: 2
  %loadMem_43a9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9f4 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9f4)
  store %struct.Memory* %call_43a9f4, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f7, %rsi	 RIP: 43a9f6	 Bytes: 10
  %loadMem_43a9f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43a9f6 = call %struct.Memory* @routine_movq__0x45a1f7___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43a9f6)
  store %struct.Memory* %call_43a9f6, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43aa00	 Bytes: 5
  %loadMem1_43aa00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aa00 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aa00, i64 -234400, i64 5, i64 5)
  store %struct.Memory* %call1_43aa00, %struct.Memory** %MEMORY

  %loadMem2_43aa00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aa00 = load i64, i64* %3
  %call2_43aa00 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43aa00, %struct.Memory* %loadMem2_43aa00)
  store %struct.Memory* %call2_43aa00, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43aa05	 Bytes: 7
  %loadMem_43aa05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa05 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa05)
  store %struct.Memory* %call_43aa05, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43aa0c	 Bytes: 4
  %loadMem_43aa0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa0c = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa0c)
  store %struct.Memory* %call_43aa0c, %struct.Memory** %MEMORY

  ; Code: je .L_43aa32	 RIP: 43aa10	 Bytes: 6
  %loadMem_43aa10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa10 = call %struct.Memory* @routine_je_.L_43aa32(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa10, i8* %BRANCH_TAKEN, i64 34, i64 6, i64 6)
  store %struct.Memory* %call_43aa10, %struct.Memory** %MEMORY

  %loadBr_43aa10 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aa10 = icmp eq i8 %loadBr_43aa10, 1
  br i1 %cmpBr_43aa10, label %block_.L_43aa32, label %block_43aa16

block_43aa16:
  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43aa16	 Bytes: 7
  %loadMem_43aa16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa16 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa16)
  store %struct.Memory* %call_43aa16, %struct.Memory** %MEMORY

  ; Code: callq .Strdup	 RIP: 43aa1d	 Bytes: 5
  %loadMem1_43aa1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aa1d = call %struct.Memory* @routine_callq_.Strdup(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aa1d, i64 46035, i64 5, i64 5)
  store %struct.Memory* %call1_43aa1d, %struct.Memory** %MEMORY

  %loadMem2_43aa1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aa1d = load i64, i64* %3
  %call2_43aa1d = call %struct.Memory* @sub_445df0.Strdup(%struct.State* %0, i64  %loadPC_43aa1d, %struct.Memory* %loadMem2_43aa1d)
  store %struct.Memory* %call2_43aa1d, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 43aa22	 Bytes: 7
  %loadMem_43aa22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa22 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa22)
  store %struct.Memory* %call_43aa22, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0x38(%rdi)	 RIP: 43aa29	 Bytes: 4
  %loadMem_43aa29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa29 = call %struct.Memory* @routine_movq__rax__0x38__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa29)
  store %struct.Memory* %call_43aa29, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b0cc	 RIP: 43aa2d	 Bytes: 5
  %loadMem_43aa2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa2d = call %struct.Memory* @routine_jmpq_.L_43b0cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa2d, i64 1695, i64 5)
  store %struct.Memory* %call_43aa2d, %struct.Memory** %MEMORY

  br label %block_.L_43b0cc

  ; Code: .L_43aa32:	 RIP: 43aa32	 Bytes: 0
block_.L_43aa32:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43aa32	 Bytes: 7
  %loadMem_43aa32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa32 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa32)
  store %struct.Memory* %call_43aa32, %struct.Memory** %MEMORY

  ; Code: movl $0x459a1c, %eax	 RIP: 43aa39	 Bytes: 5
  %loadMem_43aa39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa39 = call %struct.Memory* @routine_movl__0x459a1c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa39)
  store %struct.Memory* %call_43aa39, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43aa3e	 Bytes: 2
  %loadMem_43aa3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa3e = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa3e)
  store %struct.Memory* %call_43aa3e, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43aa40	 Bytes: 5
  %loadMem1_43aa40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aa40 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aa40, i64 -234720, i64 5, i64 5)
  store %struct.Memory* %call1_43aa40, %struct.Memory** %MEMORY

  %loadMem2_43aa40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aa40 = load i64, i64* %3
  %call2_43aa40 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43aa40, %struct.Memory* %loadMem2_43aa40)
  store %struct.Memory* %call2_43aa40, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43aa45	 Bytes: 3
  %loadMem_43aa45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa45 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa45)
  store %struct.Memory* %call_43aa45, %struct.Memory** %MEMORY

  ; Code: jne .L_43ab03	 RIP: 43aa48	 Bytes: 6
  %loadMem_43aa48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa48 = call %struct.Memory* @routine_jne_.L_43ab03(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa48, i8* %BRANCH_TAKEN, i64 187, i64 6, i64 6)
  store %struct.Memory* %call_43aa48, %struct.Memory** %MEMORY

  %loadBr_43aa48 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aa48 = icmp eq i8 %loadBr_43aa48, 1
  br i1 %cmpBr_43aa48, label %block_.L_43ab03, label %block_43aa4e

block_43aa4e:
  ; Code: xorl %eax, %eax	 RIP: 43aa4e	 Bytes: 2
  %loadMem_43aa4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa4e = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa4e)
  store %struct.Memory* %call_43aa4e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43aa50	 Bytes: 2
  %loadMem_43aa50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa50 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa50)
  store %struct.Memory* %call_43aa50, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43aa52	 Bytes: 10
  %loadMem_43aa52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa52 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa52)
  store %struct.Memory* %call_43aa52, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43aa5c	 Bytes: 5
  %loadMem1_43aa5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aa5c = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aa5c, i64 -234492, i64 5, i64 5)
  store %struct.Memory* %call1_43aa5c, %struct.Memory** %MEMORY

  %loadMem2_43aa5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aa5c = load i64, i64* %3
  %call2_43aa5c = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43aa5c, %struct.Memory* %loadMem2_43aa5c)
  store %struct.Memory* %call2_43aa5c, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43aa61	 Bytes: 7
  %loadMem_43aa61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa61 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa61)
  store %struct.Memory* %call_43aa61, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43aa68	 Bytes: 4
  %loadMem_43aa68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa68 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa68)
  store %struct.Memory* %call_43aa68, %struct.Memory** %MEMORY

  ; Code: jne .L_43aa83	 RIP: 43aa6c	 Bytes: 6
  %loadMem_43aa6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa6c = call %struct.Memory* @routine_jne_.L_43aa83(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa6c, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43aa6c, %struct.Memory** %MEMORY

  %loadBr_43aa6c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aa6c = icmp eq i8 %loadBr_43aa6c, 1
  br i1 %cmpBr_43aa6c, label %block_.L_43aa83, label %block_43aa72

block_43aa72:
  ; Code: movq $0x459a21, %rdi	 RIP: 43aa72	 Bytes: 10
  %loadMem_43aa72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa72 = call %struct.Memory* @routine_movq__0x459a21___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa72)
  store %struct.Memory* %call_43aa72, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43aa7c	 Bytes: 2
  %loadMem_43aa7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa7c = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa7c)
  store %struct.Memory* %call_43aa7c, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43aa7e	 Bytes: 5
  %loadMem1_43aa7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aa7e = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aa7e, i64 16274, i64 5, i64 5)
  store %struct.Memory* %call1_43aa7e, %struct.Memory** %MEMORY

  %loadMem2_43aa7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aa7e = load i64, i64* %3
  %call2_43aa7e = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43aa7e, %struct.Memory* %loadMem2_43aa7e)
  store %struct.Memory* %call2_43aa7e, %struct.Memory** %MEMORY

  ; Code: .L_43aa83:	 RIP: 43aa83	 Bytes: 0
  br label %block_.L_43aa83
block_.L_43aa83:

  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43aa83	 Bytes: 7
  %loadMem_43aa83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa83 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa83)
  store %struct.Memory* %call_43aa83, %struct.Memory** %MEMORY

  ; Code: callq .atof_plt	 RIP: 43aa8a	 Bytes: 5
  %loadMem1_43aa8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aa8a = call %struct.Memory* @routine_callq_.atof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aa8a, i64 -235098, i64 5, i64 5)
  store %struct.Memory* %call1_43aa8a, %struct.Memory** %MEMORY

  %loadMem2_43aa8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aa8a = load i64, i64* %3
  %call2_43aa8a = call %struct.Memory* @ext_atof(%struct.State* %0, i64  %loadPC_43aa8a, %struct.Memory* %loadMem2_43aa8a)
  store %struct.Memory* %call2_43aa8a, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 43aa8f	 Bytes: 2
  %loadMem_43aa8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa8f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa8f)
  store %struct.Memory* %call_43aa8f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43aa91	 Bytes: 2
  %loadMem_43aa91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa91 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa91)
  store %struct.Memory* %call_43aa91, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43aa93	 Bytes: 10
  %loadMem_43aa93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa93 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa93)
  store %struct.Memory* %call_43aa93, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 43aa9d	 Bytes: 4
  %loadMem_43aa9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aa9d = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aa9d)
  store %struct.Memory* %call_43aa9d, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43aaa1	 Bytes: 7
  %loadMem_43aaa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aaa1 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aaa1)
  store %struct.Memory* %call_43aaa1, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, 0x60(%rcx)	 RIP: 43aaa8	 Bytes: 5
  %loadMem_43aaa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aaa8 = call %struct.Memory* @routine_movss__xmm0__0x60__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aaa8)
  store %struct.Memory* %call_43aaa8, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43aaad	 Bytes: 5
  %loadMem1_43aaad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aaad = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aaad, i64 -234573, i64 5, i64 5)
  store %struct.Memory* %call1_43aaad, %struct.Memory** %MEMORY

  %loadMem2_43aaad = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aaad = load i64, i64* %3
  %call2_43aaad = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43aaad, %struct.Memory* %loadMem2_43aaad)
  store %struct.Memory* %call2_43aaad, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43aab2	 Bytes: 7
  %loadMem_43aab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aab2 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aab2)
  store %struct.Memory* %call_43aab2, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43aab9	 Bytes: 4
  %loadMem_43aab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aab9 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aab9)
  store %struct.Memory* %call_43aab9, %struct.Memory** %MEMORY

  ; Code: jne .L_43aad4	 RIP: 43aabd	 Bytes: 6
  %loadMem_43aabd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aabd = call %struct.Memory* @routine_jne_.L_43aad4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aabd, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43aabd, %struct.Memory** %MEMORY

  %loadBr_43aabd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aabd = icmp eq i8 %loadBr_43aabd, 1
  br i1 %cmpBr_43aabd, label %block_.L_43aad4, label %block_43aac3

block_43aac3:
  ; Code: movq $0x459a21, %rdi	 RIP: 43aac3	 Bytes: 10
  %loadMem_43aac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aac3 = call %struct.Memory* @routine_movq__0x459a21___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aac3)
  store %struct.Memory* %call_43aac3, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43aacd	 Bytes: 2
  %loadMem_43aacd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aacd = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aacd)
  store %struct.Memory* %call_43aacd, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43aacf	 Bytes: 5
  %loadMem1_43aacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aacf = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aacf, i64 16193, i64 5, i64 5)
  store %struct.Memory* %call1_43aacf, %struct.Memory** %MEMORY

  %loadMem2_43aacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aacf = load i64, i64* %3
  %call2_43aacf = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43aacf, %struct.Memory* %loadMem2_43aacf)
  store %struct.Memory* %call2_43aacf, %struct.Memory** %MEMORY

  ; Code: .L_43aad4:	 RIP: 43aad4	 Bytes: 0
  br label %block_.L_43aad4
block_.L_43aad4:

  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43aad4	 Bytes: 7
  %loadMem_43aad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aad4 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aad4)
  store %struct.Memory* %call_43aad4, %struct.Memory** %MEMORY

  ; Code: callq .atof_plt	 RIP: 43aadb	 Bytes: 5
  %loadMem1_43aadb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aadb = call %struct.Memory* @routine_callq_.atof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aadb, i64 -235179, i64 5, i64 5)
  store %struct.Memory* %call1_43aadb, %struct.Memory** %MEMORY

  %loadMem2_43aadb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aadb = load i64, i64* %3
  %call2_43aadb = call %struct.Memory* @ext_atof(%struct.State* %0, i64  %loadPC_43aadb, %struct.Memory* %loadMem2_43aadb)
  store %struct.Memory* %call2_43aadb, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 43aae0	 Bytes: 4
  %loadMem_43aae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aae0 = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aae0)
  store %struct.Memory* %call_43aae0, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 43aae4	 Bytes: 7
  %loadMem_43aae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aae4 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aae4)
  store %struct.Memory* %call_43aae4, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, 0x64(%rdi)	 RIP: 43aaeb	 Bytes: 5
  %loadMem_43aaeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aaeb = call %struct.Memory* @routine_movss__xmm0__0x64__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aaeb)
  store %struct.Memory* %call_43aaeb, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 43aaf0	 Bytes: 7
  %loadMem_43aaf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aaf0 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aaf0)
  store %struct.Memory* %call_43aaf0, %struct.Memory** %MEMORY

  ; Code: movl (%rdi), %eax	 RIP: 43aaf7	 Bytes: 2
  %loadMem_43aaf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aaf7 = call %struct.Memory* @routine_movl___rdi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aaf7)
  store %struct.Memory* %call_43aaf7, %struct.Memory** %MEMORY

  ; Code: orl $0x4, %eax	 RIP: 43aaf9	 Bytes: 3
  %loadMem_43aaf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aaf9 = call %struct.Memory* @routine_orl__0x4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aaf9)
  store %struct.Memory* %call_43aaf9, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdi)	 RIP: 43aafc	 Bytes: 2
  %loadMem_43aafc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aafc = call %struct.Memory* @routine_movl__eax____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aafc)
  store %struct.Memory* %call_43aafc, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b0c7	 RIP: 43aafe	 Bytes: 5
  %loadMem_43aafe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aafe = call %struct.Memory* @routine_jmpq_.L_43b0c7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aafe, i64 1481, i64 5)
  store %struct.Memory* %call_43aafe, %struct.Memory** %MEMORY

  br label %block_.L_43b0c7

  ; Code: .L_43ab03:	 RIP: 43ab03	 Bytes: 0
block_.L_43ab03:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43ab03	 Bytes: 7
  %loadMem_43ab03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab03 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab03)
  store %struct.Memory* %call_43ab03, %struct.Memory** %MEMORY

  ; Code: movl $0x459a49, %eax	 RIP: 43ab0a	 Bytes: 5
  %loadMem_43ab0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab0a = call %struct.Memory* @routine_movl__0x459a49___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab0a)
  store %struct.Memory* %call_43ab0a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43ab0f	 Bytes: 2
  %loadMem_43ab0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab0f = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab0f)
  store %struct.Memory* %call_43ab0f, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43ab11	 Bytes: 5
  %loadMem1_43ab11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ab11 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ab11, i64 -234929, i64 5, i64 5)
  store %struct.Memory* %call1_43ab11, %struct.Memory** %MEMORY

  %loadMem2_43ab11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ab11 = load i64, i64* %3
  %call2_43ab11 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43ab11, %struct.Memory* %loadMem2_43ab11)
  store %struct.Memory* %call2_43ab11, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43ab16	 Bytes: 3
  %loadMem_43ab16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab16 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab16)
  store %struct.Memory* %call_43ab16, %struct.Memory** %MEMORY

  ; Code: jne .L_43abd4	 RIP: 43ab19	 Bytes: 6
  %loadMem_43ab19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab19 = call %struct.Memory* @routine_jne_.L_43abd4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab19, i8* %BRANCH_TAKEN, i64 187, i64 6, i64 6)
  store %struct.Memory* %call_43ab19, %struct.Memory** %MEMORY

  %loadBr_43ab19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab19 = icmp eq i8 %loadBr_43ab19, 1
  br i1 %cmpBr_43ab19, label %block_.L_43abd4, label %block_43ab1f

block_43ab1f:
  ; Code: xorl %eax, %eax	 RIP: 43ab1f	 Bytes: 2
  %loadMem_43ab1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab1f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab1f)
  store %struct.Memory* %call_43ab1f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43ab21	 Bytes: 2
  %loadMem_43ab21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab21 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab21)
  store %struct.Memory* %call_43ab21, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43ab23	 Bytes: 10
  %loadMem_43ab23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab23 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab23)
  store %struct.Memory* %call_43ab23, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43ab2d	 Bytes: 5
  %loadMem1_43ab2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ab2d = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ab2d, i64 -234701, i64 5, i64 5)
  store %struct.Memory* %call1_43ab2d, %struct.Memory** %MEMORY

  %loadMem2_43ab2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ab2d = load i64, i64* %3
  %call2_43ab2d = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43ab2d, %struct.Memory* %loadMem2_43ab2d)
  store %struct.Memory* %call2_43ab2d, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43ab32	 Bytes: 7
  %loadMem_43ab32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab32 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab32)
  store %struct.Memory* %call_43ab32, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43ab39	 Bytes: 4
  %loadMem_43ab39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab39 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab39)
  store %struct.Memory* %call_43ab39, %struct.Memory** %MEMORY

  ; Code: jne .L_43ab54	 RIP: 43ab3d	 Bytes: 6
  %loadMem_43ab3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab3d = call %struct.Memory* @routine_jne_.L_43ab54(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab3d, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43ab3d, %struct.Memory** %MEMORY

  %loadBr_43ab3d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab3d = icmp eq i8 %loadBr_43ab3d, 1
  br i1 %cmpBr_43ab3d, label %block_.L_43ab54, label %block_43ab43

block_43ab43:
  ; Code: movq $0x459a4e, %rdi	 RIP: 43ab43	 Bytes: 10
  %loadMem_43ab43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab43 = call %struct.Memory* @routine_movq__0x459a4e___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab43)
  store %struct.Memory* %call_43ab43, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43ab4d	 Bytes: 2
  %loadMem_43ab4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab4d = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab4d)
  store %struct.Memory* %call_43ab4d, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43ab4f	 Bytes: 5
  %loadMem1_43ab4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ab4f = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ab4f, i64 16065, i64 5, i64 5)
  store %struct.Memory* %call1_43ab4f, %struct.Memory** %MEMORY

  %loadMem2_43ab4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ab4f = load i64, i64* %3
  %call2_43ab4f = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43ab4f, %struct.Memory* %loadMem2_43ab4f)
  store %struct.Memory* %call2_43ab4f, %struct.Memory** %MEMORY

  ; Code: .L_43ab54:	 RIP: 43ab54	 Bytes: 0
  br label %block_.L_43ab54
block_.L_43ab54:

  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43ab54	 Bytes: 7
  %loadMem_43ab54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab54 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab54)
  store %struct.Memory* %call_43ab54, %struct.Memory** %MEMORY

  ; Code: callq .atof_plt	 RIP: 43ab5b	 Bytes: 5
  %loadMem1_43ab5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ab5b = call %struct.Memory* @routine_callq_.atof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ab5b, i64 -235307, i64 5, i64 5)
  store %struct.Memory* %call1_43ab5b, %struct.Memory** %MEMORY

  %loadMem2_43ab5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ab5b = load i64, i64* %3
  %call2_43ab5b = call %struct.Memory* @ext_atof(%struct.State* %0, i64  %loadPC_43ab5b, %struct.Memory* %loadMem2_43ab5b)
  store %struct.Memory* %call2_43ab5b, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 43ab60	 Bytes: 2
  %loadMem_43ab60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab60 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab60)
  store %struct.Memory* %call_43ab60, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43ab62	 Bytes: 2
  %loadMem_43ab62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab62 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab62)
  store %struct.Memory* %call_43ab62, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43ab64	 Bytes: 10
  %loadMem_43ab64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab64 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab64)
  store %struct.Memory* %call_43ab64, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 43ab6e	 Bytes: 4
  %loadMem_43ab6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab6e = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab6e)
  store %struct.Memory* %call_43ab6e, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43ab72	 Bytes: 7
  %loadMem_43ab72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab72 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab72)
  store %struct.Memory* %call_43ab72, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, 0x50(%rcx)	 RIP: 43ab79	 Bytes: 5
  %loadMem_43ab79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab79 = call %struct.Memory* @routine_movss__xmm0__0x50__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab79)
  store %struct.Memory* %call_43ab79, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43ab7e	 Bytes: 5
  %loadMem1_43ab7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ab7e = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ab7e, i64 -234782, i64 5, i64 5)
  store %struct.Memory* %call1_43ab7e, %struct.Memory** %MEMORY

  %loadMem2_43ab7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ab7e = load i64, i64* %3
  %call2_43ab7e = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43ab7e, %struct.Memory* %loadMem2_43ab7e)
  store %struct.Memory* %call2_43ab7e, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43ab83	 Bytes: 7
  %loadMem_43ab83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab83 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab83)
  store %struct.Memory* %call_43ab83, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43ab8a	 Bytes: 4
  %loadMem_43ab8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab8a = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab8a)
  store %struct.Memory* %call_43ab8a, %struct.Memory** %MEMORY

  ; Code: jne .L_43aba5	 RIP: 43ab8e	 Bytes: 6
  %loadMem_43ab8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab8e = call %struct.Memory* @routine_jne_.L_43aba5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab8e, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43ab8e, %struct.Memory** %MEMORY

  %loadBr_43ab8e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ab8e = icmp eq i8 %loadBr_43ab8e, 1
  br i1 %cmpBr_43ab8e, label %block_.L_43aba5, label %block_43ab94

block_43ab94:
  ; Code: movq $0x459a4e, %rdi	 RIP: 43ab94	 Bytes: 10
  %loadMem_43ab94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab94 = call %struct.Memory* @routine_movq__0x459a4e___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab94)
  store %struct.Memory* %call_43ab94, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43ab9e	 Bytes: 2
  %loadMem_43ab9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ab9e = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ab9e)
  store %struct.Memory* %call_43ab9e, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43aba0	 Bytes: 5
  %loadMem1_43aba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aba0 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aba0, i64 15984, i64 5, i64 5)
  store %struct.Memory* %call1_43aba0, %struct.Memory** %MEMORY

  %loadMem2_43aba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aba0 = load i64, i64* %3
  %call2_43aba0 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43aba0, %struct.Memory* %loadMem2_43aba0)
  store %struct.Memory* %call2_43aba0, %struct.Memory** %MEMORY

  ; Code: .L_43aba5:	 RIP: 43aba5	 Bytes: 0
  br label %block_.L_43aba5
block_.L_43aba5:

  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43aba5	 Bytes: 7
  %loadMem_43aba5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aba5 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aba5)
  store %struct.Memory* %call_43aba5, %struct.Memory** %MEMORY

  ; Code: callq .atof_plt	 RIP: 43abac	 Bytes: 5
  %loadMem1_43abac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43abac = call %struct.Memory* @routine_callq_.atof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43abac, i64 -235388, i64 5, i64 5)
  store %struct.Memory* %call1_43abac, %struct.Memory** %MEMORY

  %loadMem2_43abac = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43abac = load i64, i64* %3
  %call2_43abac = call %struct.Memory* @ext_atof(%struct.State* %0, i64  %loadPC_43abac, %struct.Memory* %loadMem2_43abac)
  store %struct.Memory* %call2_43abac, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 43abb1	 Bytes: 4
  %loadMem_43abb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abb1 = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abb1)
  store %struct.Memory* %call_43abb1, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 43abb5	 Bytes: 7
  %loadMem_43abb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abb5 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abb5)
  store %struct.Memory* %call_43abb5, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, 0x54(%rdi)	 RIP: 43abbc	 Bytes: 5
  %loadMem_43abbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abbc = call %struct.Memory* @routine_movss__xmm0__0x54__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abbc)
  store %struct.Memory* %call_43abbc, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 43abc1	 Bytes: 7
  %loadMem_43abc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abc1 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abc1)
  store %struct.Memory* %call_43abc1, %struct.Memory** %MEMORY

  ; Code: movl (%rdi), %eax	 RIP: 43abc8	 Bytes: 2
  %loadMem_43abc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abc8 = call %struct.Memory* @routine_movl___rdi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abc8)
  store %struct.Memory* %call_43abc8, %struct.Memory** %MEMORY

  ; Code: orl $0x1, %eax	 RIP: 43abca	 Bytes: 3
  %loadMem_43abca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abca = call %struct.Memory* @routine_orl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abca)
  store %struct.Memory* %call_43abca, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdi)	 RIP: 43abcd	 Bytes: 2
  %loadMem_43abcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abcd = call %struct.Memory* @routine_movl__eax____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abcd)
  store %struct.Memory* %call_43abcd, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b0c2	 RIP: 43abcf	 Bytes: 5
  %loadMem_43abcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abcf = call %struct.Memory* @routine_jmpq_.L_43b0c2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abcf, i64 1267, i64 5)
  store %struct.Memory* %call_43abcf, %struct.Memory** %MEMORY

  br label %block_.L_43b0c2

  ; Code: .L_43abd4:	 RIP: 43abd4	 Bytes: 0
block_.L_43abd4:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43abd4	 Bytes: 7
  %loadMem_43abd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abd4 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abd4)
  store %struct.Memory* %call_43abd4, %struct.Memory** %MEMORY

  ; Code: movl $0x459a76, %eax	 RIP: 43abdb	 Bytes: 5
  %loadMem_43abdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abdb = call %struct.Memory* @routine_movl__0x459a76___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abdb)
  store %struct.Memory* %call_43abdb, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43abe0	 Bytes: 2
  %loadMem_43abe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abe0 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abe0)
  store %struct.Memory* %call_43abe0, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43abe2	 Bytes: 5
  %loadMem1_43abe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43abe2 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43abe2, i64 -235138, i64 5, i64 5)
  store %struct.Memory* %call1_43abe2, %struct.Memory** %MEMORY

  %loadMem2_43abe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43abe2 = load i64, i64* %3
  %call2_43abe2 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43abe2, %struct.Memory* %loadMem2_43abe2)
  store %struct.Memory* %call2_43abe2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43abe7	 Bytes: 3
  %loadMem_43abe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abe7 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abe7)
  store %struct.Memory* %call_43abe7, %struct.Memory** %MEMORY

  ; Code: jne .L_43aca5	 RIP: 43abea	 Bytes: 6
  %loadMem_43abea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abea = call %struct.Memory* @routine_jne_.L_43aca5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abea, i8* %BRANCH_TAKEN, i64 187, i64 6, i64 6)
  store %struct.Memory* %call_43abea, %struct.Memory** %MEMORY

  %loadBr_43abea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43abea = icmp eq i8 %loadBr_43abea, 1
  br i1 %cmpBr_43abea, label %block_.L_43aca5, label %block_43abf0

block_43abf0:
  ; Code: xorl %eax, %eax	 RIP: 43abf0	 Bytes: 2
  %loadMem_43abf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abf0 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abf0)
  store %struct.Memory* %call_43abf0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43abf2	 Bytes: 2
  %loadMem_43abf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abf2 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abf2)
  store %struct.Memory* %call_43abf2, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43abf4	 Bytes: 10
  %loadMem_43abf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43abf4 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43abf4)
  store %struct.Memory* %call_43abf4, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43abfe	 Bytes: 5
  %loadMem1_43abfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43abfe = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43abfe, i64 -234910, i64 5, i64 5)
  store %struct.Memory* %call1_43abfe, %struct.Memory** %MEMORY

  %loadMem2_43abfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43abfe = load i64, i64* %3
  %call2_43abfe = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43abfe, %struct.Memory* %loadMem2_43abfe)
  store %struct.Memory* %call2_43abfe, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43ac03	 Bytes: 7
  %loadMem_43ac03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac03 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac03)
  store %struct.Memory* %call_43ac03, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43ac0a	 Bytes: 4
  %loadMem_43ac0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac0a = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac0a)
  store %struct.Memory* %call_43ac0a, %struct.Memory** %MEMORY

  ; Code: jne .L_43ac25	 RIP: 43ac0e	 Bytes: 6
  %loadMem_43ac0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac0e = call %struct.Memory* @routine_jne_.L_43ac25(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac0e, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43ac0e, %struct.Memory** %MEMORY

  %loadBr_43ac0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ac0e = icmp eq i8 %loadBr_43ac0e, 1
  br i1 %cmpBr_43ac0e, label %block_.L_43ac25, label %block_43ac14

block_43ac14:
  ; Code: movq $0x459a7b, %rdi	 RIP: 43ac14	 Bytes: 10
  %loadMem_43ac14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac14 = call %struct.Memory* @routine_movq__0x459a7b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac14)
  store %struct.Memory* %call_43ac14, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43ac1e	 Bytes: 2
  %loadMem_43ac1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac1e = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac1e)
  store %struct.Memory* %call_43ac1e, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43ac20	 Bytes: 5
  %loadMem1_43ac20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ac20 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ac20, i64 15856, i64 5, i64 5)
  store %struct.Memory* %call1_43ac20, %struct.Memory** %MEMORY

  %loadMem2_43ac20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ac20 = load i64, i64* %3
  %call2_43ac20 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43ac20, %struct.Memory* %loadMem2_43ac20)
  store %struct.Memory* %call2_43ac20, %struct.Memory** %MEMORY

  ; Code: .L_43ac25:	 RIP: 43ac25	 Bytes: 0
  br label %block_.L_43ac25
block_.L_43ac25:

  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43ac25	 Bytes: 7
  %loadMem_43ac25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac25 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac25)
  store %struct.Memory* %call_43ac25, %struct.Memory** %MEMORY

  ; Code: callq .atof_plt	 RIP: 43ac2c	 Bytes: 5
  %loadMem1_43ac2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ac2c = call %struct.Memory* @routine_callq_.atof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ac2c, i64 -235516, i64 5, i64 5)
  store %struct.Memory* %call1_43ac2c, %struct.Memory** %MEMORY

  %loadMem2_43ac2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ac2c = load i64, i64* %3
  %call2_43ac2c = call %struct.Memory* @ext_atof(%struct.State* %0, i64  %loadPC_43ac2c, %struct.Memory* %loadMem2_43ac2c)
  store %struct.Memory* %call2_43ac2c, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 43ac31	 Bytes: 2
  %loadMem_43ac31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac31 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac31)
  store %struct.Memory* %call_43ac31, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43ac33	 Bytes: 2
  %loadMem_43ac33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac33 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac33)
  store %struct.Memory* %call_43ac33, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43ac35	 Bytes: 10
  %loadMem_43ac35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac35 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac35)
  store %struct.Memory* %call_43ac35, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 43ac3f	 Bytes: 4
  %loadMem_43ac3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac3f = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac3f)
  store %struct.Memory* %call_43ac3f, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43ac43	 Bytes: 7
  %loadMem_43ac43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac43 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac43)
  store %struct.Memory* %call_43ac43, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, 0x58(%rcx)	 RIP: 43ac4a	 Bytes: 5
  %loadMem_43ac4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac4a = call %struct.Memory* @routine_movss__xmm0__0x58__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac4a)
  store %struct.Memory* %call_43ac4a, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43ac4f	 Bytes: 5
  %loadMem1_43ac4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ac4f = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ac4f, i64 -234991, i64 5, i64 5)
  store %struct.Memory* %call1_43ac4f, %struct.Memory** %MEMORY

  %loadMem2_43ac4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ac4f = load i64, i64* %3
  %call2_43ac4f = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43ac4f, %struct.Memory* %loadMem2_43ac4f)
  store %struct.Memory* %call2_43ac4f, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43ac54	 Bytes: 7
  %loadMem_43ac54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac54 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac54)
  store %struct.Memory* %call_43ac54, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43ac5b	 Bytes: 4
  %loadMem_43ac5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac5b = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac5b)
  store %struct.Memory* %call_43ac5b, %struct.Memory** %MEMORY

  ; Code: jne .L_43ac76	 RIP: 43ac5f	 Bytes: 6
  %loadMem_43ac5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac5f = call %struct.Memory* @routine_jne_.L_43ac76(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac5f, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43ac5f, %struct.Memory** %MEMORY

  %loadBr_43ac5f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ac5f = icmp eq i8 %loadBr_43ac5f, 1
  br i1 %cmpBr_43ac5f, label %block_.L_43ac76, label %block_43ac65

block_43ac65:
  ; Code: movq $0x459a7b, %rdi	 RIP: 43ac65	 Bytes: 10
  %loadMem_43ac65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac65 = call %struct.Memory* @routine_movq__0x459a7b___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac65)
  store %struct.Memory* %call_43ac65, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43ac6f	 Bytes: 2
  %loadMem_43ac6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac6f = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac6f)
  store %struct.Memory* %call_43ac6f, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43ac71	 Bytes: 5
  %loadMem1_43ac71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ac71 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ac71, i64 15775, i64 5, i64 5)
  store %struct.Memory* %call1_43ac71, %struct.Memory** %MEMORY

  %loadMem2_43ac71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ac71 = load i64, i64* %3
  %call2_43ac71 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43ac71, %struct.Memory* %loadMem2_43ac71)
  store %struct.Memory* %call2_43ac71, %struct.Memory** %MEMORY

  ; Code: .L_43ac76:	 RIP: 43ac76	 Bytes: 0
  br label %block_.L_43ac76
block_.L_43ac76:

  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43ac76	 Bytes: 7
  %loadMem_43ac76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac76 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac76)
  store %struct.Memory* %call_43ac76, %struct.Memory** %MEMORY

  ; Code: callq .atof_plt	 RIP: 43ac7d	 Bytes: 5
  %loadMem1_43ac7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ac7d = call %struct.Memory* @routine_callq_.atof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ac7d, i64 -235597, i64 5, i64 5)
  store %struct.Memory* %call1_43ac7d, %struct.Memory** %MEMORY

  %loadMem2_43ac7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ac7d = load i64, i64* %3
  %call2_43ac7d = call %struct.Memory* @ext_atof(%struct.State* %0, i64  %loadPC_43ac7d, %struct.Memory* %loadMem2_43ac7d)
  store %struct.Memory* %call2_43ac7d, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 43ac82	 Bytes: 4
  %loadMem_43ac82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac82 = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac82)
  store %struct.Memory* %call_43ac82, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 43ac86	 Bytes: 7
  %loadMem_43ac86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac86 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac86)
  store %struct.Memory* %call_43ac86, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, 0x5c(%rdi)	 RIP: 43ac8d	 Bytes: 5
  %loadMem_43ac8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac8d = call %struct.Memory* @routine_movss__xmm0__0x5c__rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac8d)
  store %struct.Memory* %call_43ac8d, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdi	 RIP: 43ac92	 Bytes: 7
  %loadMem_43ac92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac92 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac92)
  store %struct.Memory* %call_43ac92, %struct.Memory** %MEMORY

  ; Code: movl (%rdi), %eax	 RIP: 43ac99	 Bytes: 2
  %loadMem_43ac99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac99 = call %struct.Memory* @routine_movl___rdi____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac99)
  store %struct.Memory* %call_43ac99, %struct.Memory** %MEMORY

  ; Code: orl $0x2, %eax	 RIP: 43ac9b	 Bytes: 3
  %loadMem_43ac9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac9b = call %struct.Memory* @routine_orl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac9b)
  store %struct.Memory* %call_43ac9b, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rdi)	 RIP: 43ac9e	 Bytes: 2
  %loadMem_43ac9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ac9e = call %struct.Memory* @routine_movl__eax____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ac9e)
  store %struct.Memory* %call_43ac9e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b0bd	 RIP: 43aca0	 Bytes: 5
  %loadMem_43aca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aca0 = call %struct.Memory* @routine_jmpq_.L_43b0bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aca0, i64 1053, i64 5)
  store %struct.Memory* %call_43aca0, %struct.Memory** %MEMORY

  br label %block_.L_43b0bd

  ; Code: .L_43aca5:	 RIP: 43aca5	 Bytes: 0
block_.L_43aca5:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43aca5	 Bytes: 7
  %loadMem_43aca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aca5 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aca5)
  store %struct.Memory* %call_43aca5, %struct.Memory** %MEMORY

  ; Code: movl $0x459aa3, %eax	 RIP: 43acac	 Bytes: 5
  %loadMem_43acac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acac = call %struct.Memory* @routine_movl__0x459aa3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acac)
  store %struct.Memory* %call_43acac, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43acb1	 Bytes: 2
  %loadMem_43acb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acb1 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acb1)
  store %struct.Memory* %call_43acb1, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43acb3	 Bytes: 5
  %loadMem1_43acb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43acb3 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43acb3, i64 -235347, i64 5, i64 5)
  store %struct.Memory* %call1_43acb3, %struct.Memory** %MEMORY

  %loadMem2_43acb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43acb3 = load i64, i64* %3
  %call2_43acb3 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43acb3, %struct.Memory* %loadMem2_43acb3)
  store %struct.Memory* %call2_43acb3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43acb8	 Bytes: 3
  %loadMem_43acb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acb8 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acb8)
  store %struct.Memory* %call_43acb8, %struct.Memory** %MEMORY

  ; Code: jne .L_43b03f	 RIP: 43acbb	 Bytes: 6
  %loadMem_43acbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acbb = call %struct.Memory* @routine_jne_.L_43b03f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acbb, i8* %BRANCH_TAKEN, i64 900, i64 6, i64 6)
  store %struct.Memory* %call_43acbb, %struct.Memory** %MEMORY

  %loadBr_43acbb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43acbb = icmp eq i8 %loadBr_43acbb, 1
  br i1 %cmpBr_43acbb, label %block_.L_43b03f, label %block_43acc1

block_43acc1:
  ; Code: xorl %eax, %eax	 RIP: 43acc1	 Bytes: 2
  %loadMem_43acc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acc1 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acc1)
  store %struct.Memory* %call_43acc1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43acc3	 Bytes: 2
  %loadMem_43acc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acc3 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acc3)
  store %struct.Memory* %call_43acc3, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43acc5	 Bytes: 10
  %loadMem_43acc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acc5 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acc5)
  store %struct.Memory* %call_43acc5, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43accf	 Bytes: 5
  %loadMem1_43accf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43accf = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43accf, i64 -235119, i64 5, i64 5)
  store %struct.Memory* %call1_43accf, %struct.Memory** %MEMORY

  %loadMem2_43accf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43accf = load i64, i64* %3
  %call2_43accf = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43accf, %struct.Memory* %loadMem2_43accf)
  store %struct.Memory* %call2_43accf, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43acd4	 Bytes: 7
  %loadMem_43acd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acd4 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acd4)
  store %struct.Memory* %call_43acd4, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43acdb	 Bytes: 4
  %loadMem_43acdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acdb = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acdb)
  store %struct.Memory* %call_43acdb, %struct.Memory** %MEMORY

  ; Code: jne .L_43acf6	 RIP: 43acdf	 Bytes: 6
  %loadMem_43acdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acdf = call %struct.Memory* @routine_jne_.L_43acf6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acdf, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43acdf, %struct.Memory** %MEMORY

  %loadBr_43acdf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43acdf = icmp eq i8 %loadBr_43acdf, 1
  br i1 %cmpBr_43acdf, label %block_.L_43acf6, label %block_43ace5

block_43ace5:
  ; Code: movq $0x459aa8, %rdi	 RIP: 43ace5	 Bytes: 10
  %loadMem_43ace5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ace5 = call %struct.Memory* @routine_movq__0x459aa8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ace5)
  store %struct.Memory* %call_43ace5, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43acef	 Bytes: 2
  %loadMem_43acef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acef = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acef)
  store %struct.Memory* %call_43acef, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43acf1	 Bytes: 5
  %loadMem1_43acf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43acf1 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43acf1, i64 15647, i64 5, i64 5)
  store %struct.Memory* %call1_43acf1, %struct.Memory** %MEMORY

  %loadMem2_43acf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43acf1 = load i64, i64* %3
  %call2_43acf1 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43acf1, %struct.Memory* %loadMem2_43acf1)
  store %struct.Memory* %call2_43acf1, %struct.Memory** %MEMORY

  ; Code: .L_43acf6:	 RIP: 43acf6	 Bytes: 0
  br label %block_.L_43acf6
block_.L_43acf6:

  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43acf6	 Bytes: 7
  %loadMem_43acf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acf6 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acf6)
  store %struct.Memory* %call_43acf6, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43acfd	 Bytes: 7
  %loadMem_43acfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43acfd = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43acfd)
  store %struct.Memory* %call_43acfd, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43ad04	 Bytes: 4
  %loadMem_43ad04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad04 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad04)
  store %struct.Memory* %call_43ad04, %struct.Memory** %MEMORY

  ; Code: movslq -0x206c(%rbp), %rcx	 RIP: 43ad08	 Bytes: 7
  %loadMem_43ad08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad08 = call %struct.Memory* @routine_movslq_MINUS0x206c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad08)
  store %struct.Memory* %call_43ad08, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43ad0f	 Bytes: 7
  %loadMem_43ad0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad0f = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad0f)
  store %struct.Memory* %call_43ad0f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43ad16	 Bytes: 3
  %loadMem_43ad16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad16 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad16)
  store %struct.Memory* %call_43ad16, %struct.Memory** %MEMORY

  ; Code: addq $0x4, %rax	 RIP: 43ad19	 Bytes: 4
  %loadMem_43ad19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad19 = call %struct.Memory* @routine_addq__0x4___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad19)
  store %struct.Memory* %call_43ad19, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rsi	 RIP: 43ad1d	 Bytes: 3
  %loadMem_43ad1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad1d = call %struct.Memory* @routine_movq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad1d)
  store %struct.Memory* %call_43ad1d, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43ad20	 Bytes: 5
  %loadMem1_43ad20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ad20 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ad20, i64 -235456, i64 5, i64 5)
  store %struct.Memory* %call1_43ad20, %struct.Memory** %MEMORY

  %loadMem2_43ad20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ad20 = load i64, i64* %3
  %call2_43ad20 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43ad20, %struct.Memory* %loadMem2_43ad20)
  store %struct.Memory* %call2_43ad20, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43ad25	 Bytes: 3
  %loadMem_43ad25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad25 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad25)
  store %struct.Memory* %call_43ad25, %struct.Memory** %MEMORY

  ; Code: je .L_43ad38	 RIP: 43ad28	 Bytes: 6
  %loadMem_43ad28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad28 = call %struct.Memory* @routine_je_.L_43ad38(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad28, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_43ad28, %struct.Memory** %MEMORY

  %loadBr_43ad28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ad28 = icmp eq i8 %loadBr_43ad28, 1
  br i1 %cmpBr_43ad28, label %block_.L_43ad38, label %block_43ad2e

block_43ad2e:
  ; Code: movl $0x1, -0x2068(%rbp)	 RIP: 43ad2e	 Bytes: 10
  %loadMem_43ad2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad2e = call %struct.Memory* @routine_movl__0x1__MINUS0x2068__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad2e)
  store %struct.Memory* %call_43ad2e, %struct.Memory** %MEMORY

  ; Code: .L_43ad38:	 RIP: 43ad38	 Bytes: 0
  br label %block_.L_43ad38
block_.L_43ad38:

  ; Code: xorl %eax, %eax	 RIP: 43ad38	 Bytes: 2
  %loadMem_43ad38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad38 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad38)
  store %struct.Memory* %call_43ad38, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43ad3a	 Bytes: 2
  %loadMem_43ad3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad3a = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad3a)
  store %struct.Memory* %call_43ad3a, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43ad3c	 Bytes: 10
  %loadMem_43ad3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad3c = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad3c)
  store %struct.Memory* %call_43ad3c, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43ad46	 Bytes: 5
  %loadMem1_43ad46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ad46 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ad46, i64 -235238, i64 5, i64 5)
  store %struct.Memory* %call1_43ad46, %struct.Memory** %MEMORY

  %loadMem2_43ad46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ad46 = load i64, i64* %3
  %call2_43ad46 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43ad46, %struct.Memory* %loadMem2_43ad46)
  store %struct.Memory* %call2_43ad46, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43ad4b	 Bytes: 7
  %loadMem_43ad4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad4b = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad4b)
  store %struct.Memory* %call_43ad4b, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43ad52	 Bytes: 4
  %loadMem_43ad52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad52 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad52)
  store %struct.Memory* %call_43ad52, %struct.Memory** %MEMORY

  ; Code: jne .L_43ad6d	 RIP: 43ad56	 Bytes: 6
  %loadMem_43ad56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad56 = call %struct.Memory* @routine_jne_.L_43ad6d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad56, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43ad56, %struct.Memory** %MEMORY

  %loadBr_43ad56 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ad56 = icmp eq i8 %loadBr_43ad56, 1
  br i1 %cmpBr_43ad56, label %block_.L_43ad6d, label %block_43ad5c

block_43ad5c:
  ; Code: movq $0x459aa8, %rdi	 RIP: 43ad5c	 Bytes: 10
  %loadMem_43ad5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad5c = call %struct.Memory* @routine_movq__0x459aa8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad5c)
  store %struct.Memory* %call_43ad5c, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43ad66	 Bytes: 2
  %loadMem_43ad66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad66 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad66)
  store %struct.Memory* %call_43ad66, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43ad68	 Bytes: 5
  %loadMem1_43ad68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ad68 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ad68, i64 15528, i64 5, i64 5)
  store %struct.Memory* %call1_43ad68, %struct.Memory** %MEMORY

  %loadMem2_43ad68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ad68 = load i64, i64* %3
  %call2_43ad68 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43ad68, %struct.Memory* %loadMem2_43ad68)
  store %struct.Memory* %call2_43ad68, %struct.Memory** %MEMORY

  ; Code: .L_43ad6d:	 RIP: 43ad6d	 Bytes: 0
  br label %block_.L_43ad6d
block_.L_43ad6d:

  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43ad6d	 Bytes: 7
  %loadMem_43ad6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad6d = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad6d)
  store %struct.Memory* %call_43ad6d, %struct.Memory** %MEMORY

  ; Code: callq .IsReal	 RIP: 43ad74	 Bytes: 5
  %loadMem1_43ad74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ad74 = call %struct.Memory* @routine_callq_.IsReal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ad74, i64 91948, i64 5, i64 5)
  store %struct.Memory* %call1_43ad74, %struct.Memory** %MEMORY

  %loadMem2_43ad74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ad74 = load i64, i64* %3
  %call2_43ad74 = call %struct.Memory* @sub_4514a0.IsReal(%struct.State* %0, i64  %loadPC_43ad74, %struct.Memory* %loadMem2_43ad74)
  store %struct.Memory* %call2_43ad74, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43ad79	 Bytes: 3
  %loadMem_43ad79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad79 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad79)
  store %struct.Memory* %call_43ad79, %struct.Memory** %MEMORY

  ; Code: jne .L_43ad93	 RIP: 43ad7c	 Bytes: 6
  %loadMem_43ad7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad7c = call %struct.Memory* @routine_jne_.L_43ad93(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad7c, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43ad7c, %struct.Memory** %MEMORY

  %loadBr_43ad7c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ad7c = icmp eq i8 %loadBr_43ad7c, 1
  br i1 %cmpBr_43ad7c, label %block_.L_43ad93, label %block_43ad82

block_43ad82:
  ; Code: movq $0x459ad0, %rdi	 RIP: 43ad82	 Bytes: 10
  %loadMem_43ad82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad82 = call %struct.Memory* @routine_movq__0x459ad0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad82)
  store %struct.Memory* %call_43ad82, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43ad8c	 Bytes: 2
  %loadMem_43ad8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad8c = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad8c)
  store %struct.Memory* %call_43ad8c, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43ad8e	 Bytes: 5
  %loadMem1_43ad8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ad8e = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ad8e, i64 15490, i64 5, i64 5)
  store %struct.Memory* %call1_43ad8e, %struct.Memory** %MEMORY

  %loadMem2_43ad8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ad8e = load i64, i64* %3
  %call2_43ad8e = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43ad8e, %struct.Memory* %loadMem2_43ad8e)
  store %struct.Memory* %call2_43ad8e, %struct.Memory** %MEMORY

  ; Code: .L_43ad93:	 RIP: 43ad93	 Bytes: 0
  br label %block_.L_43ad93
block_.L_43ad93:

  ; Code: movq -0x2050(%rbp), %rdi	 RIP: 43ad93	 Bytes: 7
  %loadMem_43ad93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad93 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad93)
  store %struct.Memory* %call_43ad93, %struct.Memory** %MEMORY

  ; Code: callq .atof_plt	 RIP: 43ad9a	 Bytes: 5
  %loadMem1_43ad9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ad9a = call %struct.Memory* @routine_callq_.atof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ad9a, i64 -235882, i64 5, i64 5)
  store %struct.Memory* %call1_43ad9a, %struct.Memory** %MEMORY

  %loadMem2_43ad9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ad9a = load i64, i64* %3
  %call2_43ad9a = call %struct.Memory* @ext_atof(%struct.State* %0, i64  %loadPC_43ad9a, %struct.Memory* %loadMem2_43ad9a)
  store %struct.Memory* %call2_43ad9a, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 43ad9f	 Bytes: 2
  %loadMem_43ad9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ad9f = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ad9f)
  store %struct.Memory* %call_43ad9f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 43ada1	 Bytes: 2
  %loadMem_43ada1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ada1 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ada1)
  store %struct.Memory* %call_43ada1, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43ada3	 Bytes: 10
  %loadMem_43ada3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ada3 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ada3)
  store %struct.Memory* %call_43ada3, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 43adad	 Bytes: 4
  %loadMem_43adad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adad = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adad)
  store %struct.Memory* %call_43adad, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43adb1	 Bytes: 7
  %loadMem_43adb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adb1 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adb1)
  store %struct.Memory* %call_43adb1, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rcx), %rcx	 RIP: 43adb8	 Bytes: 4
  %loadMem_43adb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adb8 = call %struct.Memory* @routine_movq_0x10__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adb8)
  store %struct.Memory* %call_43adb8, %struct.Memory** %MEMORY

  ; Code: movslq -0x206c(%rbp), %rdx	 RIP: 43adbc	 Bytes: 7
  %loadMem_43adbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adbc = call %struct.Memory* @routine_movslq_MINUS0x206c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adbc)
  store %struct.Memory* %call_43adbc, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, (%rcx,%rdx,4)	 RIP: 43adc3	 Bytes: 5
  %loadMem_43adc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adc3 = call %struct.Memory* @routine_movss__xmm0____rcx__rdx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adc3)
  store %struct.Memory* %call_43adc3, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43adc8	 Bytes: 5
  %loadMem1_43adc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43adc8 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43adc8, i64 -235368, i64 5, i64 5)
  store %struct.Memory* %call1_43adc8, %struct.Memory** %MEMORY

  %loadMem2_43adc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43adc8 = load i64, i64* %3
  %call2_43adc8 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43adc8, %struct.Memory* %loadMem2_43adc8)
  store %struct.Memory* %call2_43adc8, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43adcd	 Bytes: 7
  %loadMem_43adcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adcd = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adcd)
  store %struct.Memory* %call_43adcd, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43add4	 Bytes: 4
  %loadMem_43add4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43add4 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43add4)
  store %struct.Memory* %call_43add4, %struct.Memory** %MEMORY

  ; Code: jne .L_43adef	 RIP: 43add8	 Bytes: 6
  %loadMem_43add8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43add8 = call %struct.Memory* @routine_jne_.L_43adef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43add8, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43add8, %struct.Memory** %MEMORY

  %loadBr_43add8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43add8 = icmp eq i8 %loadBr_43add8, 1
  br i1 %cmpBr_43add8, label %block_.L_43adef, label %block_43adde

block_43adde:
  ; Code: movq $0x459b10, %rdi	 RIP: 43adde	 Bytes: 10
  %loadMem_43adde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adde = call %struct.Memory* @routine_movq__0x459b10___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adde)
  store %struct.Memory* %call_43adde, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43ade8	 Bytes: 2
  %loadMem_43ade8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ade8 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ade8)
  store %struct.Memory* %call_43ade8, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43adea	 Bytes: 5
  %loadMem1_43adea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43adea = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43adea, i64 15398, i64 5, i64 5)
  store %struct.Memory* %call1_43adea, %struct.Memory** %MEMORY

  %loadMem2_43adea = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43adea = load i64, i64* %3
  %call2_43adea = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43adea, %struct.Memory* %loadMem2_43adea)
  store %struct.Memory* %call2_43adea, %struct.Memory** %MEMORY

  ; Code: .L_43adef:	 RIP: 43adef	 Bytes: 0
  br label %block_.L_43adef
block_.L_43adef:

  ; Code: movl $0x2, %edx	 RIP: 43adef	 Bytes: 5
  %loadMem_43adef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adef = call %struct.Memory* @routine_movl__0x2___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adef)
  store %struct.Memory* %call_43adef, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43adf4	 Bytes: 7
  %loadMem_43adf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adf4 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adf4)
  store %struct.Memory* %call_43adf4, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43adfb	 Bytes: 4
  %loadMem_43adfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adfb = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adfb)
  store %struct.Memory* %call_43adfb, %struct.Memory** %MEMORY

  ; Code: movslq -0x206c(%rbp), %rcx	 RIP: 43adff	 Bytes: 7
  %loadMem_43adff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43adff = call %struct.Memory* @routine_movslq_MINUS0x206c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43adff)
  store %struct.Memory* %call_43adff, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43ae06	 Bytes: 7
  %loadMem_43ae06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae06 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae06)
  store %struct.Memory* %call_43ae06, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43ae0d	 Bytes: 3
  %loadMem_43ae0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae0d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae0d)
  store %struct.Memory* %call_43ae0d, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rsi	 RIP: 43ae10	 Bytes: 7
  %loadMem_43ae10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae10 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae10)
  store %struct.Memory* %call_43ae10, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43ae17	 Bytes: 3
  %loadMem_43ae17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae17 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae17)
  store %struct.Memory* %call_43ae17, %struct.Memory** %MEMORY

  ; Code: callq .SetSeqinfoString	 RIP: 43ae1a	 Bytes: 5
  %loadMem1_43ae1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ae1a = call %struct.Memory* @routine_callq_.SetSeqinfoString(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ae1a, i64 20678, i64 5, i64 5)
  store %struct.Memory* %call1_43ae1a, %struct.Memory** %MEMORY

  %loadMem2_43ae1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ae1a = load i64, i64* %3
  %call2_43ae1a = call %struct.Memory* @sub_43fee0.SetSeqinfoString(%struct.State* %0, i64  %loadPC_43ae1a, %struct.Memory* %loadMem2_43ae1a)
  store %struct.Memory* %call2_43ae1a, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 43ae1f	 Bytes: 2
  %loadMem_43ae1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae1f = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae1f)
  store %struct.Memory* %call_43ae1f, %struct.Memory** %MEMORY

  ; Code: movl %edx, %edi	 RIP: 43ae21	 Bytes: 2
  %loadMem_43ae21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae21 = call %struct.Memory* @routine_movl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae21)
  store %struct.Memory* %call_43ae21, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43ae23	 Bytes: 10
  %loadMem_43ae23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae23 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae23)
  store %struct.Memory* %call_43ae23, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x216c(%rbp)	 RIP: 43ae2d	 Bytes: 6
  %loadMem_43ae2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae2d = call %struct.Memory* @routine_movl__eax__MINUS0x216c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae2d)
  store %struct.Memory* %call_43ae2d, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43ae33	 Bytes: 5
  %loadMem1_43ae33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ae33 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ae33, i64 -235475, i64 5, i64 5)
  store %struct.Memory* %call1_43ae33, %struct.Memory** %MEMORY

  %loadMem2_43ae33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ae33 = load i64, i64* %3
  %call2_43ae33 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43ae33, %struct.Memory* %loadMem2_43ae33)
  store %struct.Memory* %call2_43ae33, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43ae38	 Bytes: 7
  %loadMem_43ae38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae38 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae38)
  store %struct.Memory* %call_43ae38, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43ae3f	 Bytes: 4
  %loadMem_43ae3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae3f = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae3f)
  store %struct.Memory* %call_43ae3f, %struct.Memory** %MEMORY

  ; Code: jne .L_43ae5a	 RIP: 43ae43	 Bytes: 6
  %loadMem_43ae43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae43 = call %struct.Memory* @routine_jne_.L_43ae5a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae43, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43ae43, %struct.Memory** %MEMORY

  %loadBr_43ae43 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ae43 = icmp eq i8 %loadBr_43ae43, 1
  br i1 %cmpBr_43ae43, label %block_.L_43ae5a, label %block_43ae49

block_43ae49:
  ; Code: movq $0x459b10, %rdi	 RIP: 43ae49	 Bytes: 10
  %loadMem_43ae49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae49 = call %struct.Memory* @routine_movq__0x459b10___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae49)
  store %struct.Memory* %call_43ae49, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43ae53	 Bytes: 2
  %loadMem_43ae53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae53 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae53)
  store %struct.Memory* %call_43ae53, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43ae55	 Bytes: 5
  %loadMem1_43ae55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ae55 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ae55, i64 15291, i64 5, i64 5)
  store %struct.Memory* %call1_43ae55, %struct.Memory** %MEMORY

  %loadMem2_43ae55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ae55 = load i64, i64* %3
  %call2_43ae55 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43ae55, %struct.Memory* %loadMem2_43ae55)
  store %struct.Memory* %call2_43ae55, %struct.Memory** %MEMORY

  ; Code: .L_43ae5a:	 RIP: 43ae5a	 Bytes: 0
  br label %block_.L_43ae5a
block_.L_43ae5a:

  ; Code: movl $0x4, %edx	 RIP: 43ae5a	 Bytes: 5
  %loadMem_43ae5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae5a = call %struct.Memory* @routine_movl__0x4___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae5a)
  store %struct.Memory* %call_43ae5a, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43ae5f	 Bytes: 7
  %loadMem_43ae5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae5f = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae5f)
  store %struct.Memory* %call_43ae5f, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43ae66	 Bytes: 4
  %loadMem_43ae66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae66 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae66)
  store %struct.Memory* %call_43ae66, %struct.Memory** %MEMORY

  ; Code: movslq -0x206c(%rbp), %rcx	 RIP: 43ae6a	 Bytes: 7
  %loadMem_43ae6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae6a = call %struct.Memory* @routine_movslq_MINUS0x206c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae6a)
  store %struct.Memory* %call_43ae6a, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43ae71	 Bytes: 7
  %loadMem_43ae71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae71 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae71)
  store %struct.Memory* %call_43ae71, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43ae78	 Bytes: 3
  %loadMem_43ae78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae78 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae78)
  store %struct.Memory* %call_43ae78, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rsi	 RIP: 43ae7b	 Bytes: 7
  %loadMem_43ae7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae7b = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae7b)
  store %struct.Memory* %call_43ae7b, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43ae82	 Bytes: 3
  %loadMem_43ae82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae82 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae82)
  store %struct.Memory* %call_43ae82, %struct.Memory** %MEMORY

  ; Code: callq .SetSeqinfoString	 RIP: 43ae85	 Bytes: 5
  %loadMem1_43ae85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ae85 = call %struct.Memory* @routine_callq_.SetSeqinfoString(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ae85, i64 20571, i64 5, i64 5)
  store %struct.Memory* %call1_43ae85, %struct.Memory** %MEMORY

  %loadMem2_43ae85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ae85 = load i64, i64* %3
  %call2_43ae85 = call %struct.Memory* @sub_43fee0.SetSeqinfoString(%struct.State* %0, i64  %loadPC_43ae85, %struct.Memory* %loadMem2_43ae85)
  store %struct.Memory* %call2_43ae85, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 43ae8a	 Bytes: 2
  %loadMem_43ae8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae8a = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae8a)
  store %struct.Memory* %call_43ae8a, %struct.Memory** %MEMORY

  ; Code: movl %edx, %edi	 RIP: 43ae8c	 Bytes: 2
  %loadMem_43ae8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae8c = call %struct.Memory* @routine_movl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae8c)
  store %struct.Memory* %call_43ae8c, %struct.Memory** %MEMORY

  ; Code: movq $0x459b49, %rsi	 RIP: 43ae8e	 Bytes: 10
  %loadMem_43ae8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae8e = call %struct.Memory* @routine_movq__0x459b49___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae8e)
  store %struct.Memory* %call_43ae8e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2170(%rbp)	 RIP: 43ae98	 Bytes: 6
  %loadMem_43ae98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ae98 = call %struct.Memory* @routine_movl__eax__MINUS0x2170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ae98)
  store %struct.Memory* %call_43ae98, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43ae9e	 Bytes: 5
  %loadMem1_43ae9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ae9e = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ae9e, i64 -235582, i64 5, i64 5)
  store %struct.Memory* %call1_43ae9e, %struct.Memory** %MEMORY

  %loadMem2_43ae9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ae9e = load i64, i64* %3
  %call2_43ae9e = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43ae9e, %struct.Memory* %loadMem2_43ae9e)
  store %struct.Memory* %call2_43ae9e, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43aea3	 Bytes: 7
  %loadMem_43aea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aea3 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aea3)
  store %struct.Memory* %call_43aea3, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43aeaa	 Bytes: 4
  %loadMem_43aeaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aeaa = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aeaa)
  store %struct.Memory* %call_43aeaa, %struct.Memory** %MEMORY

  ; Code: jne .L_43aec5	 RIP: 43aeae	 Bytes: 6
  %loadMem_43aeae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aeae = call %struct.Memory* @routine_jne_.L_43aec5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aeae, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43aeae, %struct.Memory** %MEMORY

  %loadBr_43aeae = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43aeae = icmp eq i8 %loadBr_43aeae, 1
  br i1 %cmpBr_43aeae, label %block_.L_43aec5, label %block_43aeb4

block_43aeb4:
  ; Code: movq $0x459b10, %rdi	 RIP: 43aeb4	 Bytes: 10
  %loadMem_43aeb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aeb4 = call %struct.Memory* @routine_movq__0x459b10___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aeb4)
  store %struct.Memory* %call_43aeb4, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43aebe	 Bytes: 2
  %loadMem_43aebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aebe = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aebe)
  store %struct.Memory* %call_43aebe, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43aec0	 Bytes: 5
  %loadMem1_43aec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aec0 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aec0, i64 15184, i64 5, i64 5)
  store %struct.Memory* %call1_43aec0, %struct.Memory** %MEMORY

  %loadMem2_43aec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aec0 = load i64, i64* %3
  %call2_43aec0 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43aec0, %struct.Memory* %loadMem2_43aec0)
  store %struct.Memory* %call2_43aec0, %struct.Memory** %MEMORY

  ; Code: .L_43aec5:	 RIP: 43aec5	 Bytes: 0
  br label %block_.L_43aec5
block_.L_43aec5:

  ; Code: movl $0x10, %edx	 RIP: 43aec5	 Bytes: 5
  %loadMem_43aec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aec5 = call %struct.Memory* @routine_movl__0x10___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aec5)
  store %struct.Memory* %call_43aec5, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43aeca	 Bytes: 7
  %loadMem_43aeca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aeca = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aeca)
  store %struct.Memory* %call_43aeca, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43aed1	 Bytes: 4
  %loadMem_43aed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aed1 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aed1)
  store %struct.Memory* %call_43aed1, %struct.Memory** %MEMORY

  ; Code: movslq -0x206c(%rbp), %rcx	 RIP: 43aed5	 Bytes: 7
  %loadMem_43aed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aed5 = call %struct.Memory* @routine_movslq_MINUS0x206c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aed5)
  store %struct.Memory* %call_43aed5, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43aedc	 Bytes: 7
  %loadMem_43aedc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aedc = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aedc)
  store %struct.Memory* %call_43aedc, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43aee3	 Bytes: 3
  %loadMem_43aee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aee3 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aee3)
  store %struct.Memory* %call_43aee3, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rsi	 RIP: 43aee6	 Bytes: 7
  %loadMem_43aee6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aee6 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aee6)
  store %struct.Memory* %call_43aee6, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43aeed	 Bytes: 3
  %loadMem_43aeed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aeed = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aeed)
  store %struct.Memory* %call_43aeed, %struct.Memory** %MEMORY

  ; Code: callq .SetSeqinfoString	 RIP: 43aef0	 Bytes: 5
  %loadMem1_43aef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43aef0 = call %struct.Memory* @routine_callq_.SetSeqinfoString(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43aef0, i64 20464, i64 5, i64 5)
  store %struct.Memory* %call1_43aef0, %struct.Memory** %MEMORY

  %loadMem2_43aef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43aef0 = load i64, i64* %3
  %call2_43aef0 = call %struct.Memory* @sub_43fee0.SetSeqinfoString(%struct.State* %0, i64  %loadPC_43aef0, %struct.Memory* %loadMem2_43aef0)
  store %struct.Memory* %call2_43aef0, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 43aef5	 Bytes: 2
  %loadMem_43aef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aef5 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aef5)
  store %struct.Memory* %call_43aef5, %struct.Memory** %MEMORY

  ; Code: movl %edx, %edi	 RIP: 43aef7	 Bytes: 2
  %loadMem_43aef7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aef7 = call %struct.Memory* @routine_movl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aef7)
  store %struct.Memory* %call_43aef7, %struct.Memory** %MEMORY

  ; Code: movq $0x459b49, %rsi	 RIP: 43aef9	 Bytes: 10
  %loadMem_43aef9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aef9 = call %struct.Memory* @routine_movq__0x459b49___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aef9)
  store %struct.Memory* %call_43aef9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2174(%rbp)	 RIP: 43af03	 Bytes: 6
  %loadMem_43af03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af03 = call %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af03)
  store %struct.Memory* %call_43af03, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43af09	 Bytes: 5
  %loadMem1_43af09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43af09 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43af09, i64 -235689, i64 5, i64 5)
  store %struct.Memory* %call1_43af09, %struct.Memory** %MEMORY

  %loadMem2_43af09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43af09 = load i64, i64* %3
  %call2_43af09 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43af09, %struct.Memory* %loadMem2_43af09)
  store %struct.Memory* %call2_43af09, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43af0e	 Bytes: 7
  %loadMem_43af0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af0e = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af0e)
  store %struct.Memory* %call_43af0e, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43af15	 Bytes: 4
  %loadMem_43af15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af15 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af15)
  store %struct.Memory* %call_43af15, %struct.Memory** %MEMORY

  ; Code: jne .L_43af30	 RIP: 43af19	 Bytes: 6
  %loadMem_43af19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af19 = call %struct.Memory* @routine_jne_.L_43af30(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af19, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43af19, %struct.Memory** %MEMORY

  %loadBr_43af19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43af19 = icmp eq i8 %loadBr_43af19, 1
  br i1 %cmpBr_43af19, label %block_.L_43af30, label %block_43af1f

block_43af1f:
  ; Code: movq $0x459b10, %rdi	 RIP: 43af1f	 Bytes: 10
  %loadMem_43af1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af1f = call %struct.Memory* @routine_movq__0x459b10___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af1f)
  store %struct.Memory* %call_43af1f, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43af29	 Bytes: 2
  %loadMem_43af29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af29 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af29)
  store %struct.Memory* %call_43af29, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43af2b	 Bytes: 5
  %loadMem1_43af2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43af2b = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43af2b, i64 15077, i64 5, i64 5)
  store %struct.Memory* %call1_43af2b, %struct.Memory** %MEMORY

  %loadMem2_43af2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43af2b = load i64, i64* %3
  %call2_43af2b = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43af2b, %struct.Memory* %loadMem2_43af2b)
  store %struct.Memory* %call2_43af2b, %struct.Memory** %MEMORY

  ; Code: .L_43af30:	 RIP: 43af30	 Bytes: 0
  br label %block_.L_43af30
block_.L_43af30:

  ; Code: movl $0x20, %edx	 RIP: 43af30	 Bytes: 5
  %loadMem_43af30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af30 = call %struct.Memory* @routine_movl__0x20___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af30)
  store %struct.Memory* %call_43af30, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43af35	 Bytes: 7
  %loadMem_43af35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af35 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af35)
  store %struct.Memory* %call_43af35, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43af3c	 Bytes: 4
  %loadMem_43af3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af3c = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af3c)
  store %struct.Memory* %call_43af3c, %struct.Memory** %MEMORY

  ; Code: movslq -0x206c(%rbp), %rcx	 RIP: 43af40	 Bytes: 7
  %loadMem_43af40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af40 = call %struct.Memory* @routine_movslq_MINUS0x206c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af40)
  store %struct.Memory* %call_43af40, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43af47	 Bytes: 7
  %loadMem_43af47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af47 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af47)
  store %struct.Memory* %call_43af47, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43af4e	 Bytes: 3
  %loadMem_43af4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af4e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af4e)
  store %struct.Memory* %call_43af4e, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rsi	 RIP: 43af51	 Bytes: 7
  %loadMem_43af51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af51 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af51)
  store %struct.Memory* %call_43af51, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43af58	 Bytes: 3
  %loadMem_43af58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af58 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af58)
  store %struct.Memory* %call_43af58, %struct.Memory** %MEMORY

  ; Code: callq .SetSeqinfoString	 RIP: 43af5b	 Bytes: 5
  %loadMem1_43af5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43af5b = call %struct.Memory* @routine_callq_.SetSeqinfoString(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43af5b, i64 20357, i64 5, i64 5)
  store %struct.Memory* %call1_43af5b, %struct.Memory** %MEMORY

  %loadMem2_43af5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43af5b = load i64, i64* %3
  %call2_43af5b = call %struct.Memory* @sub_43fee0.SetSeqinfoString(%struct.State* %0, i64  %loadPC_43af5b, %struct.Memory* %loadMem2_43af5b)
  store %struct.Memory* %call2_43af5b, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 43af60	 Bytes: 2
  %loadMem_43af60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af60 = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af60)
  store %struct.Memory* %call_43af60, %struct.Memory** %MEMORY

  ; Code: movl %edx, %edi	 RIP: 43af62	 Bytes: 2
  %loadMem_43af62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af62 = call %struct.Memory* @routine_movl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af62)
  store %struct.Memory* %call_43af62, %struct.Memory** %MEMORY

  ; Code: movq $0x459b4c, %rsi	 RIP: 43af64	 Bytes: 10
  %loadMem_43af64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af64 = call %struct.Memory* @routine_movq__0x459b4c___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af64)
  store %struct.Memory* %call_43af64, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2178(%rbp)	 RIP: 43af6e	 Bytes: 6
  %loadMem_43af6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af6e = call %struct.Memory* @routine_movl__eax__MINUS0x2178__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af6e)
  store %struct.Memory* %call_43af6e, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43af74	 Bytes: 5
  %loadMem1_43af74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43af74 = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43af74, i64 -235796, i64 5, i64 5)
  store %struct.Memory* %call1_43af74, %struct.Memory** %MEMORY

  %loadMem2_43af74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43af74 = load i64, i64* %3
  %call2_43af74 = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43af74, %struct.Memory* %loadMem2_43af74)
  store %struct.Memory* %call2_43af74, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43af79	 Bytes: 7
  %loadMem_43af79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af79 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af79)
  store %struct.Memory* %call_43af79, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43af80	 Bytes: 4
  %loadMem_43af80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af80 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af80)
  store %struct.Memory* %call_43af80, %struct.Memory** %MEMORY

  ; Code: jne .L_43af9b	 RIP: 43af84	 Bytes: 6
  %loadMem_43af84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af84 = call %struct.Memory* @routine_jne_.L_43af9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af84, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43af84, %struct.Memory** %MEMORY

  %loadBr_43af84 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43af84 = icmp eq i8 %loadBr_43af84, 1
  br i1 %cmpBr_43af84, label %block_.L_43af9b, label %block_43af8a

block_43af8a:
  ; Code: movq $0x459b10, %rdi	 RIP: 43af8a	 Bytes: 10
  %loadMem_43af8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af8a = call %struct.Memory* @routine_movq__0x459b10___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af8a)
  store %struct.Memory* %call_43af8a, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43af94	 Bytes: 2
  %loadMem_43af94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af94 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af94)
  store %struct.Memory* %call_43af94, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43af96	 Bytes: 5
  %loadMem1_43af96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43af96 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43af96, i64 14970, i64 5, i64 5)
  store %struct.Memory* %call1_43af96, %struct.Memory** %MEMORY

  %loadMem2_43af96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43af96 = load i64, i64* %3
  %call2_43af96 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43af96, %struct.Memory* %loadMem2_43af96)
  store %struct.Memory* %call2_43af96, %struct.Memory** %MEMORY

  ; Code: .L_43af9b:	 RIP: 43af9b	 Bytes: 0
  br label %block_.L_43af9b
block_.L_43af9b:

  ; Code: movl $0x100, %edx	 RIP: 43af9b	 Bytes: 5
  %loadMem_43af9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43af9b = call %struct.Memory* @routine_movl__0x100___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43af9b)
  store %struct.Memory* %call_43af9b, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43afa0	 Bytes: 7
  %loadMem_43afa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afa0 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afa0)
  store %struct.Memory* %call_43afa0, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43afa7	 Bytes: 4
  %loadMem_43afa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afa7 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afa7)
  store %struct.Memory* %call_43afa7, %struct.Memory** %MEMORY

  ; Code: movslq -0x206c(%rbp), %rcx	 RIP: 43afab	 Bytes: 7
  %loadMem_43afab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afab = call %struct.Memory* @routine_movslq_MINUS0x206c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afab)
  store %struct.Memory* %call_43afab, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43afb2	 Bytes: 7
  %loadMem_43afb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afb2 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afb2)
  store %struct.Memory* %call_43afb2, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43afb9	 Bytes: 3
  %loadMem_43afb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afb9 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afb9)
  store %struct.Memory* %call_43afb9, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rsi	 RIP: 43afbc	 Bytes: 7
  %loadMem_43afbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afbc = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afbc)
  store %struct.Memory* %call_43afbc, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43afc3	 Bytes: 3
  %loadMem_43afc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afc3 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afc3)
  store %struct.Memory* %call_43afc3, %struct.Memory** %MEMORY

  ; Code: callq .SetSeqinfoString	 RIP: 43afc6	 Bytes: 5
  %loadMem1_43afc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43afc6 = call %struct.Memory* @routine_callq_.SetSeqinfoString(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43afc6, i64 20250, i64 5, i64 5)
  store %struct.Memory* %call1_43afc6, %struct.Memory** %MEMORY

  %loadMem2_43afc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43afc6 = load i64, i64* %3
  %call2_43afc6 = call %struct.Memory* @sub_43fee0.SetSeqinfoString(%struct.State* %0, i64  %loadPC_43afc6, %struct.Memory* %loadMem2_43afc6)
  store %struct.Memory* %call2_43afc6, %struct.Memory** %MEMORY

  ; Code: xorl %edx, %edx	 RIP: 43afcb	 Bytes: 2
  %loadMem_43afcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afcb = call %struct.Memory* @routine_xorl__edx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afcb)
  store %struct.Memory* %call_43afcb, %struct.Memory** %MEMORY

  ; Code: movl %edx, %edi	 RIP: 43afcd	 Bytes: 2
  %loadMem_43afcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afcd = call %struct.Memory* @routine_movl__edx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afcd)
  store %struct.Memory* %call_43afcd, %struct.Memory** %MEMORY

  ; Code: movq $0x45a1f7, %rsi	 RIP: 43afcf	 Bytes: 10
  %loadMem_43afcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afcf = call %struct.Memory* @routine_movq__0x45a1f7___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afcf)
  store %struct.Memory* %call_43afcf, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x217c(%rbp)	 RIP: 43afd9	 Bytes: 6
  %loadMem_43afd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afd9 = call %struct.Memory* @routine_movl__eax__MINUS0x217c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afd9)
  store %struct.Memory* %call_43afd9, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43afdf	 Bytes: 5
  %loadMem1_43afdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43afdf = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43afdf, i64 -235903, i64 5, i64 5)
  store %struct.Memory* %call1_43afdf, %struct.Memory** %MEMORY

  %loadMem2_43afdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43afdf = load i64, i64* %3
  %call2_43afdf = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43afdf, %struct.Memory* %loadMem2_43afdf)
  store %struct.Memory* %call2_43afdf, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43afe4	 Bytes: 7
  %loadMem_43afe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afe4 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afe4)
  store %struct.Memory* %call_43afe4, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43afeb	 Bytes: 4
  %loadMem_43afeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afeb = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afeb)
  store %struct.Memory* %call_43afeb, %struct.Memory** %MEMORY

  ; Code: je .L_43b02b	 RIP: 43afef	 Bytes: 6
  %loadMem_43afef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43afef = call %struct.Memory* @routine_je_.L_43b02b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43afef, i8* %BRANCH_TAKEN, i64 60, i64 6, i64 6)
  store %struct.Memory* %call_43afef, %struct.Memory** %MEMORY

  %loadBr_43afef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43afef = icmp eq i8 %loadBr_43afef, 1
  br i1 %cmpBr_43afef, label %block_.L_43b02b, label %block_43aff5

block_43aff5:
  ; Code: movl $0x8, %edx	 RIP: 43aff5	 Bytes: 5
  %loadMem_43aff5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43aff5 = call %struct.Memory* @routine_movl__0x8___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43aff5)
  store %struct.Memory* %call_43aff5, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43affa	 Bytes: 7
  %loadMem_43affa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43affa = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43affa)
  store %struct.Memory* %call_43affa, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43b001	 Bytes: 4
  %loadMem_43b001 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b001 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b001)
  store %struct.Memory* %call_43b001, %struct.Memory** %MEMORY

  ; Code: movslq -0x206c(%rbp), %rcx	 RIP: 43b005	 Bytes: 7
  %loadMem_43b005 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b005 = call %struct.Memory* @routine_movslq_MINUS0x206c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b005)
  store %struct.Memory* %call_43b005, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43b00c	 Bytes: 7
  %loadMem_43b00c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b00c = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b00c)
  store %struct.Memory* %call_43b00c, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43b013	 Bytes: 3
  %loadMem_43b013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b013 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b013)
  store %struct.Memory* %call_43b013, %struct.Memory** %MEMORY

  ; Code: movq -0x2050(%rbp), %rsi	 RIP: 43b016	 Bytes: 7
  %loadMem_43b016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b016 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b016)
  store %struct.Memory* %call_43b016, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43b01d	 Bytes: 3
  %loadMem_43b01d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b01d = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b01d)
  store %struct.Memory* %call_43b01d, %struct.Memory** %MEMORY

  ; Code: callq .SetSeqinfoString	 RIP: 43b020	 Bytes: 5
  %loadMem1_43b020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b020 = call %struct.Memory* @routine_callq_.SetSeqinfoString(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b020, i64 20160, i64 5, i64 5)
  store %struct.Memory* %call1_43b020, %struct.Memory** %MEMORY

  %loadMem2_43b020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b020 = load i64, i64* %3
  %call2_43b020 = call %struct.Memory* @sub_43fee0.SetSeqinfoString(%struct.State* %0, i64  %loadPC_43b020, %struct.Memory* %loadMem2_43b020)
  store %struct.Memory* %call2_43b020, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2180(%rbp)	 RIP: 43b025	 Bytes: 6
  %loadMem_43b025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b025 = call %struct.Memory* @routine_movl__eax__MINUS0x2180__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b025)
  store %struct.Memory* %call_43b025, %struct.Memory** %MEMORY

  ; Code: .L_43b02b:	 RIP: 43b02b	 Bytes: 0
  br label %block_.L_43b02b
block_.L_43b02b:

  ; Code: movl -0x206c(%rbp), %eax	 RIP: 43b02b	 Bytes: 6
  %loadMem_43b02b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b02b = call %struct.Memory* @routine_movl_MINUS0x206c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b02b)
  store %struct.Memory* %call_43b02b, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43b031	 Bytes: 3
  %loadMem_43b031 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b031 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b031)
  store %struct.Memory* %call_43b031, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x206c(%rbp)	 RIP: 43b034	 Bytes: 6
  %loadMem_43b034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b034 = call %struct.Memory* @routine_movl__eax__MINUS0x206c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b034)
  store %struct.Memory* %call_43b034, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b0b8	 RIP: 43b03a	 Bytes: 5
  %loadMem_43b03a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b03a = call %struct.Memory* @routine_jmpq_.L_43b0b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b03a, i64 126, i64 5)
  store %struct.Memory* %call_43b03a, %struct.Memory** %MEMORY

  br label %block_.L_43b0b8

  ; Code: .L_43b03f:	 RIP: 43b03f	 Bytes: 0
block_.L_43b03f:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43b03f	 Bytes: 7
  %loadMem_43b03f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b03f = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b03f)
  store %struct.Memory* %call_43b03f, %struct.Memory** %MEMORY

  ; Code: movl $0x45992c, %eax	 RIP: 43b046	 Bytes: 5
  %loadMem_43b046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b046 = call %struct.Memory* @routine_movl__0x45992c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b046)
  store %struct.Memory* %call_43b046, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b04b	 Bytes: 2
  %loadMem_43b04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b04b = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b04b)
  store %struct.Memory* %call_43b04b, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43b04d	 Bytes: 5
  %loadMem1_43b04d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b04d = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b04d, i64 -236269, i64 5, i64 5)
  store %struct.Memory* %call1_43b04d, %struct.Memory** %MEMORY

  %loadMem2_43b04d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b04d = load i64, i64* %3
  %call2_43b04d = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43b04d, %struct.Memory* %loadMem2_43b04d)
  store %struct.Memory* %call2_43b04d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b052	 Bytes: 3
  %loadMem_43b052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b052 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b052)
  store %struct.Memory* %call_43b052, %struct.Memory** %MEMORY

  ; Code: jne .L_43b060	 RIP: 43b055	 Bytes: 6
  %loadMem_43b055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b055 = call %struct.Memory* @routine_jne_.L_43b060(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b055, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b055, %struct.Memory** %MEMORY

  %loadBr_43b055 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b055 = icmp eq i8 %loadBr_43b055, 1
  br i1 %cmpBr_43b055, label %block_.L_43b060, label %block_43b05b

block_43b05b:
  ; Code: jmpq .L_43b0e0	 RIP: 43b05b	 Bytes: 5
  %loadMem_43b05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b05b = call %struct.Memory* @routine_jmpq_.L_43b0e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b05b, i64 133, i64 5)
  store %struct.Memory* %call_43b05b, %struct.Memory** %MEMORY

  br label %block_.L_43b0e0

  ; Code: .L_43b060:	 RIP: 43b060	 Bytes: 0
block_.L_43b060:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43b060	 Bytes: 7
  %loadMem_43b060 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b060 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b060)
  store %struct.Memory* %call_43b060, %struct.Memory** %MEMORY

  ; Code: movl $0x459931, %eax	 RIP: 43b067	 Bytes: 5
  %loadMem_43b067 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b067 = call %struct.Memory* @routine_movl__0x459931___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b067)
  store %struct.Memory* %call_43b067, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b06c	 Bytes: 2
  %loadMem_43b06c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b06c = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b06c)
  store %struct.Memory* %call_43b06c, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43b06e	 Bytes: 5
  %loadMem1_43b06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b06e = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b06e, i64 -236302, i64 5, i64 5)
  store %struct.Memory* %call1_43b06e, %struct.Memory** %MEMORY

  %loadMem2_43b06e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b06e = load i64, i64* %3
  %call2_43b06e = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43b06e, %struct.Memory* %loadMem2_43b06e)
  store %struct.Memory* %call2_43b06e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b073	 Bytes: 3
  %loadMem_43b073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b073 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b073)
  store %struct.Memory* %call_43b073, %struct.Memory** %MEMORY

  ; Code: jne .L_43b081	 RIP: 43b076	 Bytes: 6
  %loadMem_43b076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b076 = call %struct.Memory* @routine_jne_.L_43b081(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b076, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b076, %struct.Memory** %MEMORY

  %loadBr_43b076 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b076 = icmp eq i8 %loadBr_43b076, 1
  br i1 %cmpBr_43b076, label %block_.L_43b081, label %block_43b07c

block_43b07c:
  ; Code: jmpq .L_43b0e0	 RIP: 43b07c	 Bytes: 5
  %loadMem_43b07c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b07c = call %struct.Memory* @routine_jmpq_.L_43b0e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b07c, i64 100, i64 5)
  store %struct.Memory* %call_43b07c, %struct.Memory** %MEMORY

  br label %block_.L_43b0e0

  ; Code: .L_43b081:	 RIP: 43b081	 Bytes: 0
block_.L_43b081:

  ; Code: movq $0x662bc0, %rdi	 RIP: 43b081	 Bytes: 10
  %loadMem_43b081 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b081 = call %struct.Memory* @routine_movq__0x662bc0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b081)
  store %struct.Memory* %call_43b081, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rax	 RIP: 43b08b	 Bytes: 7
  %loadMem_43b08b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b08b = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b08b)
  store %struct.Memory* %call_43b08b, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %esi	 RIP: 43b092	 Bytes: 3
  %loadMem_43b092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b092 = call %struct.Memory* @routine_movsbl___rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b092)
  store %struct.Memory* %call_43b092, %struct.Memory** %MEMORY

  ; Code: callq .strchr_plt	 RIP: 43b095	 Bytes: 5
  %loadMem1_43b095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b095 = call %struct.Memory* @routine_callq_.strchr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b095, i64 -236565, i64 5, i64 5)
  store %struct.Memory* %call1_43b095, %struct.Memory** %MEMORY

  %loadMem2_43b095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b095 = load i64, i64* %3
  %call2_43b095 = call %struct.Memory* @sub_401480.strchr_plt(%struct.State* %0, i64  %loadPC_43b095, %struct.Memory* %loadMem2_43b095)
  store %struct.Memory* %call2_43b095, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43b09a	 Bytes: 4
  %loadMem_43b09a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b09a = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b09a)
  store %struct.Memory* %call_43b09a, %struct.Memory** %MEMORY

  ; Code: jne .L_43b0a9	 RIP: 43b09e	 Bytes: 6
  %loadMem_43b09e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b09e = call %struct.Memory* @routine_jne_.L_43b0a9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b09e, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b09e, %struct.Memory** %MEMORY

  %loadBr_43b09e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b09e = icmp eq i8 %loadBr_43b09e, 1
  br i1 %cmpBr_43b09e, label %block_.L_43b0a9, label %block_43b0a4

block_43b0a4:
  ; Code: jmpq .L_43b0e0	 RIP: 43b0a4	 Bytes: 5
  %loadMem_43b0a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0a4 = call %struct.Memory* @routine_jmpq_.L_43b0e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0a4, i64 60, i64 5)
  store %struct.Memory* %call_43b0a4, %struct.Memory** %MEMORY

  br label %block_.L_43b0e0

  ; Code: .L_43b0a9:	 RIP: 43b0a9	 Bytes: 0
block_.L_43b0a9:

  ; Code: jmpq .L_43b0ae	 RIP: 43b0a9	 Bytes: 5
  %loadMem_43b0a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0a9 = call %struct.Memory* @routine_jmpq_.L_43b0ae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0a9, i64 5, i64 5)
  store %struct.Memory* %call_43b0a9, %struct.Memory** %MEMORY

  br label %block_.L_43b0ae

  ; Code: .L_43b0ae:	 RIP: 43b0ae	 Bytes: 0
block_.L_43b0ae:

  ; Code: jmpq .L_43b0b3	 RIP: 43b0ae	 Bytes: 5
  %loadMem_43b0ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0ae = call %struct.Memory* @routine_jmpq_.L_43b0b3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0ae, i64 5, i64 5)
  store %struct.Memory* %call_43b0ae, %struct.Memory** %MEMORY

  br label %block_.L_43b0b3

  ; Code: .L_43b0b3:	 RIP: 43b0b3	 Bytes: 0
block_.L_43b0b3:

  ; Code: jmpq .L_43b0b8	 RIP: 43b0b3	 Bytes: 5
  %loadMem_43b0b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0b3 = call %struct.Memory* @routine_jmpq_.L_43b0b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0b3, i64 5, i64 5)
  store %struct.Memory* %call_43b0b3, %struct.Memory** %MEMORY

  br label %block_.L_43b0b8

  ; Code: .L_43b0b8:	 RIP: 43b0b8	 Bytes: 0
block_.L_43b0b8:

  ; Code: jmpq .L_43b0bd	 RIP: 43b0b8	 Bytes: 5
  %loadMem_43b0b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0b8 = call %struct.Memory* @routine_jmpq_.L_43b0bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0b8, i64 5, i64 5)
  store %struct.Memory* %call_43b0b8, %struct.Memory** %MEMORY

  br label %block_.L_43b0bd

  ; Code: .L_43b0bd:	 RIP: 43b0bd	 Bytes: 0
block_.L_43b0bd:

  ; Code: jmpq .L_43b0c2	 RIP: 43b0bd	 Bytes: 5
  %loadMem_43b0bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0bd = call %struct.Memory* @routine_jmpq_.L_43b0c2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0bd, i64 5, i64 5)
  store %struct.Memory* %call_43b0bd, %struct.Memory** %MEMORY

  br label %block_.L_43b0c2

  ; Code: .L_43b0c2:	 RIP: 43b0c2	 Bytes: 0
block_.L_43b0c2:

  ; Code: jmpq .L_43b0c7	 RIP: 43b0c2	 Bytes: 5
  %loadMem_43b0c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0c2 = call %struct.Memory* @routine_jmpq_.L_43b0c7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0c2, i64 5, i64 5)
  store %struct.Memory* %call_43b0c2, %struct.Memory** %MEMORY

  br label %block_.L_43b0c7

  ; Code: .L_43b0c7:	 RIP: 43b0c7	 Bytes: 0
block_.L_43b0c7:

  ; Code: jmpq .L_43b0cc	 RIP: 43b0c7	 Bytes: 5
  %loadMem_43b0c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0c7 = call %struct.Memory* @routine_jmpq_.L_43b0cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0c7, i64 5, i64 5)
  store %struct.Memory* %call_43b0c7, %struct.Memory** %MEMORY

  br label %block_.L_43b0cc

  ; Code: .L_43b0cc:	 RIP: 43b0cc	 Bytes: 0
block_.L_43b0cc:

  ; Code: jmpq .L_43b0d1	 RIP: 43b0cc	 Bytes: 5
  %loadMem_43b0cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0cc = call %struct.Memory* @routine_jmpq_.L_43b0d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0cc, i64 5, i64 5)
  store %struct.Memory* %call_43b0cc, %struct.Memory** %MEMORY

  br label %block_.L_43b0d1

  ; Code: .L_43b0d1:	 RIP: 43b0d1	 Bytes: 0
block_.L_43b0d1:

  ; Code: jmpq .L_43b0d6	 RIP: 43b0d1	 Bytes: 5
  %loadMem_43b0d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0d1 = call %struct.Memory* @routine_jmpq_.L_43b0d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0d1, i64 5, i64 5)
  store %struct.Memory* %call_43b0d1, %struct.Memory** %MEMORY

  br label %block_.L_43b0d6

  ; Code: .L_43b0d6:	 RIP: 43b0d6	 Bytes: 0
block_.L_43b0d6:

  ; Code: jmpq .L_43b0db	 RIP: 43b0d6	 Bytes: 5
  %loadMem_43b0d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0d6 = call %struct.Memory* @routine_jmpq_.L_43b0db(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0d6, i64 5, i64 5)
  store %struct.Memory* %call_43b0d6, %struct.Memory** %MEMORY

  br label %block_.L_43b0db

  ; Code: .L_43b0db:	 RIP: 43b0db	 Bytes: 0
block_.L_43b0db:

  ; Code: jmpq .L_43a831	 RIP: 43b0db	 Bytes: 5
  %loadMem_43b0db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0db = call %struct.Memory* @routine_jmpq_.L_43a831(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0db, i64 -2218, i64 5)
  store %struct.Memory* %call_43b0db, %struct.Memory** %MEMORY

  br label %block_.L_43a831

  ; Code: .L_43b0e0:	 RIP: 43b0e0	 Bytes: 0
block_.L_43b0e0:

  ; Code: movl $0x0, -0x2070(%rbp)	 RIP: 43b0e0	 Bytes: 10
  %loadMem_43b0e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0e0 = call %struct.Memory* @routine_movl__0x0__MINUS0x2070__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0e0)
  store %struct.Memory* %call_43b0e0, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x2058(%rbp)	 RIP: 43b0ea	 Bytes: 10
  %loadMem_43b0ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0ea = call %struct.Memory* @routine_movl__0x0__MINUS0x2058__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0ea)
  store %struct.Memory* %call_43b0ea, %struct.Memory** %MEMORY

  ; Code: .L_43b0f4:	 RIP: 43b0f4	 Bytes: 0
  br label %block_.L_43b0f4
block_.L_43b0f4:

  ; Code: movl -0x2058(%rbp), %eax	 RIP: 43b0f4	 Bytes: 6
  %loadMem_43b0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0f4 = call %struct.Memory* @routine_movl_MINUS0x2058__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0f4)
  store %struct.Memory* %call_43b0f4, %struct.Memory** %MEMORY

  ; Code: cmpl -0x203c(%rbp), %eax	 RIP: 43b0fa	 Bytes: 6
  %loadMem_43b0fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b0fa = call %struct.Memory* @routine_cmpl_MINUS0x203c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b0fa)
  store %struct.Memory* %call_43b0fa, %struct.Memory** %MEMORY

  ; Code: jge .L_43b7ea	 RIP: 43b100	 Bytes: 6
  %loadMem_43b100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b100 = call %struct.Memory* @routine_jge_.L_43b7ea(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b100, i8* %BRANCH_TAKEN, i64 1770, i64 6, i64 6)
  store %struct.Memory* %call_43b100, %struct.Memory** %MEMORY

  %loadBr_43b100 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b100 = icmp eq i8 %loadBr_43b100, 1
  br i1 %cmpBr_43b100, label %block_.L_43b7ea, label %block_43b106

block_43b106:
  ; Code: movl $0x0, -0x2060(%rbp)	 RIP: 43b106	 Bytes: 10
  %loadMem_43b106 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b106 = call %struct.Memory* @routine_movl__0x0__MINUS0x2060__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b106)
  store %struct.Memory* %call_43b106, %struct.Memory** %MEMORY

  ; Code: .L_43b110:	 RIP: 43b110	 Bytes: 0
  br label %block_.L_43b110
block_.L_43b110:

  ; Code: cmpq $0x0, -0x2048(%rbp)	 RIP: 43b110	 Bytes: 8
  %loadMem_43b110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b110 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b110)
  store %struct.Memory* %call_43b110, %struct.Memory** %MEMORY

  ; Code: je .L_43b6c2	 RIP: 43b118	 Bytes: 6
  %loadMem_43b118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b118 = call %struct.Memory* @routine_je_.L_43b6c2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b118, i8* %BRANCH_TAKEN, i64 1450, i64 6, i64 6)
  store %struct.Memory* %call_43b118, %struct.Memory** %MEMORY

  %loadBr_43b118 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b118 = icmp eq i8 %loadBr_43b118, 1
  br i1 %cmpBr_43b118, label %block_.L_43b6c2, label %block_43b11e

block_43b11e:
  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43b11e	 Bytes: 7
  %loadMem_43b11e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b11e = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b11e)
  store %struct.Memory* %call_43b11e, %struct.Memory** %MEMORY

  ; Code: movl $0x45992c, %eax	 RIP: 43b125	 Bytes: 5
  %loadMem_43b125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b125 = call %struct.Memory* @routine_movl__0x45992c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b125)
  store %struct.Memory* %call_43b125, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b12a	 Bytes: 2
  %loadMem_43b12a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b12a = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b12a)
  store %struct.Memory* %call_43b12a, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43b12c	 Bytes: 5
  %loadMem1_43b12c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b12c = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b12c, i64 -236492, i64 5, i64 5)
  store %struct.Memory* %call1_43b12c, %struct.Memory** %MEMORY

  %loadMem2_43b12c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b12c = load i64, i64* %3
  %call2_43b12c = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43b12c, %struct.Memory* %loadMem2_43b12c)
  store %struct.Memory* %call2_43b12c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b131	 Bytes: 3
  %loadMem_43b131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b131 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b131)
  store %struct.Memory* %call_43b131, %struct.Memory** %MEMORY

  ; Code: jne .L_43b1fa	 RIP: 43b134	 Bytes: 6
  %loadMem_43b134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b134 = call %struct.Memory* @routine_jne_.L_43b1fa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b134, i8* %BRANCH_TAKEN, i64 198, i64 6, i64 6)
  store %struct.Memory* %call_43b134, %struct.Memory** %MEMORY

  %loadBr_43b134 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b134 = icmp eq i8 %loadBr_43b134, 1
  br i1 %cmpBr_43b134, label %block_.L_43b1fa, label %block_43b13a

block_43b13a:
  ; Code: movl $0x2e, %eax	 RIP: 43b13a	 Bytes: 5
  %loadMem_43b13a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b13a = call %struct.Memory* @routine_movl__0x2e___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b13a)
  store %struct.Memory* %call_43b13a, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rcx	 RIP: 43b13f	 Bytes: 7
  %loadMem_43b13f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b13f = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b13f)
  store %struct.Memory* %call_43b13f, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdx	 RIP: 43b146	 Bytes: 7
  %loadMem_43b146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b146 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b146)
  store %struct.Memory* %call_43b146, %struct.Memory** %MEMORY

  ; Code: movq 0x18(%rdx), %rdi	 RIP: 43b14d	 Bytes: 4
  %loadMem_43b14d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b14d = call %struct.Memory* @routine_movq_0x18__rdx____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b14d)
  store %struct.Memory* %call_43b14d, %struct.Memory** %MEMORY

  ; Code: movl -0x2070(%rbp), %esi	 RIP: 43b151	 Bytes: 6
  %loadMem_43b151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b151 = call %struct.Memory* @routine_movl_MINUS0x2070__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b151)
  store %struct.Memory* %call_43b151, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rdx	 RIP: 43b157	 Bytes: 7
  %loadMem_43b157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b157 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b157)
  store %struct.Memory* %call_43b157, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x2188(%rbp)	 RIP: 43b15e	 Bytes: 7
  %loadMem_43b15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b15e = call %struct.Memory* @routine_movq__rdi__MINUS0x2188__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b15e)
  store %struct.Memory* %call_43b15e, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 43b165	 Bytes: 3
  %loadMem_43b165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b165 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b165)
  store %struct.Memory* %call_43b165, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x218c(%rbp)	 RIP: 43b168	 Bytes: 6
  %loadMem_43b168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b168 = call %struct.Memory* @routine_movl__eax__MINUS0x218c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b168)
  store %struct.Memory* %call_43b168, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x2198(%rbp)	 RIP: 43b16e	 Bytes: 7
  %loadMem_43b16e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b16e = call %struct.Memory* @routine_movq__rcx__MINUS0x2198__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b16e)
  store %struct.Memory* %call_43b16e, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x219c(%rbp)	 RIP: 43b175	 Bytes: 6
  %loadMem_43b175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b175 = call %struct.Memory* @routine_movl__esi__MINUS0x219c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b175)
  store %struct.Memory* %call_43b175, %struct.Memory** %MEMORY

  ; Code: callq .strlen_plt	 RIP: 43b17b	 Bytes: 5
  %loadMem1_43b17b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b17b = call %struct.Memory* @routine_callq_.strlen_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b17b, i64 -236827, i64 5, i64 5)
  store %struct.Memory* %call1_43b17b, %struct.Memory** %MEMORY

  %loadMem2_43b17b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b17b = load i64, i64* %3
  %call2_43b17b = call %struct.Memory* @ext_strlen(%struct.State* %0, i64  %loadPC_43b17b, %struct.Memory* %loadMem2_43b17b)
  store %struct.Memory* %call2_43b17b, %struct.Memory** %MEMORY

  ; Code: subq $0x1, %rax	 RIP: 43b180	 Bytes: 4
  %loadMem_43b180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b180 = call %struct.Memory* @routine_subq__0x1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b180)
  store %struct.Memory* %call_43b180, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b184	 Bytes: 2
  %loadMem_43b184 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b184 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b184)
  store %struct.Memory* %call_43b184, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b186	 Bytes: 7
  %loadMem_43b186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b186 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b186)
  store %struct.Memory* %call_43b186, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b18d	 Bytes: 7
  %loadMem_43b18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b18d = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b18d)
  store %struct.Memory* %call_43b18d, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,8), %r8d	 RIP: 43b194	 Bytes: 4
  %loadMem_43b194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b194 = call %struct.Memory* @routine_movl___rax__rcx_8____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b194)
  store %struct.Memory* %call_43b194, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b198	 Bytes: 7
  %loadMem_43b198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b198 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b198)
  store %struct.Memory* %call_43b198, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b19f	 Bytes: 7
  %loadMem_43b19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b19f = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b19f)
  store %struct.Memory* %call_43b19f, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax,%rcx,8), %r9d	 RIP: 43b1a6	 Bytes: 5
  %loadMem_43b1a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1a6 = call %struct.Memory* @routine_movl_0x4__rax__rcx_8____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1a6)
  store %struct.Memory* %call_43b1a6, %struct.Memory** %MEMORY

  ; Code: movq -0x2188(%rbp), %rdi	 RIP: 43b1ab	 Bytes: 7
  %loadMem_43b1ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1ab = call %struct.Memory* @routine_movq_MINUS0x2188__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1ab)
  store %struct.Memory* %call_43b1ab, %struct.Memory** %MEMORY

  ; Code: movl -0x219c(%rbp), %r10d	 RIP: 43b1b2	 Bytes: 7
  %loadMem_43b1b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1b2 = call %struct.Memory* @routine_movl_MINUS0x219c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1b2)
  store %struct.Memory* %call_43b1b2, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x21a0(%rbp)	 RIP: 43b1b9	 Bytes: 6
  %loadMem_43b1b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1b9 = call %struct.Memory* @routine_movl__esi__MINUS0x21a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1b9)
  store %struct.Memory* %call_43b1b9, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %esi	 RIP: 43b1bf	 Bytes: 3
  %loadMem_43b1bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1bf = call %struct.Memory* @routine_movl__r10d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1bf)
  store %struct.Memory* %call_43b1bf, %struct.Memory** %MEMORY

  ; Code: movl -0x21a0(%rbp), %edx	 RIP: 43b1c2	 Bytes: 6
  %loadMem_43b1c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1c2 = call %struct.Memory* @routine_movl_MINUS0x21a0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1c2)
  store %struct.Memory* %call_43b1c2, %struct.Memory** %MEMORY

  ; Code: movq -0x2198(%rbp), %rcx	 RIP: 43b1c8	 Bytes: 7
  %loadMem_43b1c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1c8 = call %struct.Memory* @routine_movq_MINUS0x2198__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1c8)
  store %struct.Memory* %call_43b1c8, %struct.Memory** %MEMORY

  ; Code: movl $0x2e, (%rsp)	 RIP: 43b1cf	 Bytes: 7
  %loadMem_43b1cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1cf = call %struct.Memory* @routine_movl__0x2e____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1cf)
  store %struct.Memory* %call_43b1cf, %struct.Memory** %MEMORY

  ; Code: callq .copy_alignment_line	 RIP: 43b1d6	 Bytes: 5
  %loadMem1_43b1d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b1d6 = call %struct.Memory* @routine_callq_.copy_alignment_line(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b1d6, i64 3066, i64 5, i64 5)
  store %struct.Memory* %call1_43b1d6, %struct.Memory** %MEMORY

  %loadMem2_43b1d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b1d6 = load i64, i64* %3
  %call2_43b1d6 = call %struct.Memory* @sub_43bdd0.copy_alignment_line(%struct.State* %0, i64  %loadPC_43b1d6, %struct.Memory* %loadMem2_43b1d6)
  store %struct.Memory* %call2_43b1d6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b1db	 Bytes: 3
  %loadMem_43b1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1db = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1db)
  store %struct.Memory* %call_43b1db, %struct.Memory** %MEMORY

  ; Code: jne .L_43b1f5	 RIP: 43b1de	 Bytes: 6
  %loadMem_43b1de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1de = call %struct.Memory* @routine_jne_.L_43b1f5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1de, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43b1de, %struct.Memory** %MEMORY

  %loadBr_43b1de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b1de = icmp eq i8 %loadBr_43b1de, 1
  br i1 %cmpBr_43b1de, label %block_.L_43b1f5, label %block_43b1e4

block_43b1e4:
  ; Code: movq $0x459b50, %rdi	 RIP: 43b1e4	 Bytes: 10
  %loadMem_43b1e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1e4 = call %struct.Memory* @routine_movq__0x459b50___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1e4)
  store %struct.Memory* %call_43b1e4, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43b1ee	 Bytes: 2
  %loadMem_43b1ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1ee = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1ee)
  store %struct.Memory* %call_43b1ee, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43b1f0	 Bytes: 5
  %loadMem1_43b1f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b1f0 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b1f0, i64 14368, i64 5, i64 5)
  store %struct.Memory* %call1_43b1f0, %struct.Memory** %MEMORY

  %loadMem2_43b1f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b1f0 = load i64, i64* %3
  %call2_43b1f0 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43b1f0, %struct.Memory* %loadMem2_43b1f0)
  store %struct.Memory* %call2_43b1f0, %struct.Memory** %MEMORY

  ; Code: .L_43b1f5:	 RIP: 43b1f5	 Bytes: 0
  br label %block_.L_43b1f5
block_.L_43b1f5:

  ; Code: jmpq .L_43b5d0	 RIP: 43b1f5	 Bytes: 5
  %loadMem_43b1f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1f5 = call %struct.Memory* @routine_jmpq_.L_43b5d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1f5, i64 987, i64 5)
  store %struct.Memory* %call_43b1f5, %struct.Memory** %MEMORY

  br label %block_.L_43b5d0

  ; Code: .L_43b1fa:	 RIP: 43b1fa	 Bytes: 0
block_.L_43b1fa:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43b1fa	 Bytes: 7
  %loadMem_43b1fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b1fa = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b1fa)
  store %struct.Memory* %call_43b1fa, %struct.Memory** %MEMORY

  ; Code: movl $0x459931, %eax	 RIP: 43b201	 Bytes: 5
  %loadMem_43b201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b201 = call %struct.Memory* @routine_movl__0x459931___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b201)
  store %struct.Memory* %call_43b201, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b206	 Bytes: 2
  %loadMem_43b206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b206 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b206)
  store %struct.Memory* %call_43b206, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43b208	 Bytes: 5
  %loadMem1_43b208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b208 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b208, i64 -236712, i64 5, i64 5)
  store %struct.Memory* %call1_43b208, %struct.Memory** %MEMORY

  %loadMem2_43b208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b208 = load i64, i64* %3
  %call2_43b208 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43b208, %struct.Memory* %loadMem2_43b208)
  store %struct.Memory* %call2_43b208, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b20d	 Bytes: 3
  %loadMem_43b20d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b20d = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b20d)
  store %struct.Memory* %call_43b20d, %struct.Memory** %MEMORY

  ; Code: jne .L_43b2d6	 RIP: 43b210	 Bytes: 6
  %loadMem_43b210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b210 = call %struct.Memory* @routine_jne_.L_43b2d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b210, i8* %BRANCH_TAKEN, i64 198, i64 6, i64 6)
  store %struct.Memory* %call_43b210, %struct.Memory** %MEMORY

  %loadBr_43b210 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b210 = icmp eq i8 %loadBr_43b210, 1
  br i1 %cmpBr_43b210, label %block_.L_43b2d6, label %block_43b216

block_43b216:
  ; Code: movl $0x2e, %eax	 RIP: 43b216	 Bytes: 5
  %loadMem_43b216 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b216 = call %struct.Memory* @routine_movl__0x2e___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b216)
  store %struct.Memory* %call_43b216, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rcx	 RIP: 43b21b	 Bytes: 7
  %loadMem_43b21b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b21b = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b21b)
  store %struct.Memory* %call_43b21b, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdx	 RIP: 43b222	 Bytes: 7
  %loadMem_43b222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b222 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b222)
  store %struct.Memory* %call_43b222, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rdx), %rdi	 RIP: 43b229	 Bytes: 4
  %loadMem_43b229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b229 = call %struct.Memory* @routine_movq_0x20__rdx____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b229)
  store %struct.Memory* %call_43b229, %struct.Memory** %MEMORY

  ; Code: movl -0x2070(%rbp), %esi	 RIP: 43b22d	 Bytes: 6
  %loadMem_43b22d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b22d = call %struct.Memory* @routine_movl_MINUS0x2070__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b22d)
  store %struct.Memory* %call_43b22d, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rdx	 RIP: 43b233	 Bytes: 7
  %loadMem_43b233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b233 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b233)
  store %struct.Memory* %call_43b233, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x21a8(%rbp)	 RIP: 43b23a	 Bytes: 7
  %loadMem_43b23a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b23a = call %struct.Memory* @routine_movq__rdi__MINUS0x21a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b23a)
  store %struct.Memory* %call_43b23a, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 43b241	 Bytes: 3
  %loadMem_43b241 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b241 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b241)
  store %struct.Memory* %call_43b241, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x21ac(%rbp)	 RIP: 43b244	 Bytes: 6
  %loadMem_43b244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b244 = call %struct.Memory* @routine_movl__eax__MINUS0x21ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b244)
  store %struct.Memory* %call_43b244, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x21b8(%rbp)	 RIP: 43b24a	 Bytes: 7
  %loadMem_43b24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b24a = call %struct.Memory* @routine_movq__rcx__MINUS0x21b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b24a)
  store %struct.Memory* %call_43b24a, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x21bc(%rbp)	 RIP: 43b251	 Bytes: 6
  %loadMem_43b251 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b251 = call %struct.Memory* @routine_movl__esi__MINUS0x21bc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b251)
  store %struct.Memory* %call_43b251, %struct.Memory** %MEMORY

  ; Code: callq .strlen_plt	 RIP: 43b257	 Bytes: 5
  %loadMem1_43b257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b257 = call %struct.Memory* @routine_callq_.strlen_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b257, i64 -237047, i64 5, i64 5)
  store %struct.Memory* %call1_43b257, %struct.Memory** %MEMORY

  %loadMem2_43b257 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b257 = load i64, i64* %3
  %call2_43b257 = call %struct.Memory* @ext_strlen(%struct.State* %0, i64  %loadPC_43b257, %struct.Memory* %loadMem2_43b257)
  store %struct.Memory* %call2_43b257, %struct.Memory** %MEMORY

  ; Code: subq $0x1, %rax	 RIP: 43b25c	 Bytes: 4
  %loadMem_43b25c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b25c = call %struct.Memory* @routine_subq__0x1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b25c)
  store %struct.Memory* %call_43b25c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b260	 Bytes: 2
  %loadMem_43b260 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b260 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b260)
  store %struct.Memory* %call_43b260, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b262	 Bytes: 7
  %loadMem_43b262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b262 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b262)
  store %struct.Memory* %call_43b262, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b269	 Bytes: 7
  %loadMem_43b269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b269 = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b269)
  store %struct.Memory* %call_43b269, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,8), %r8d	 RIP: 43b270	 Bytes: 4
  %loadMem_43b270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b270 = call %struct.Memory* @routine_movl___rax__rcx_8____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b270)
  store %struct.Memory* %call_43b270, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b274	 Bytes: 7
  %loadMem_43b274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b274 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b274)
  store %struct.Memory* %call_43b274, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b27b	 Bytes: 7
  %loadMem_43b27b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b27b = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b27b)
  store %struct.Memory* %call_43b27b, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax,%rcx,8), %r9d	 RIP: 43b282	 Bytes: 5
  %loadMem_43b282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b282 = call %struct.Memory* @routine_movl_0x4__rax__rcx_8____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b282)
  store %struct.Memory* %call_43b282, %struct.Memory** %MEMORY

  ; Code: movq -0x21a8(%rbp), %rdi	 RIP: 43b287	 Bytes: 7
  %loadMem_43b287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b287 = call %struct.Memory* @routine_movq_MINUS0x21a8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b287)
  store %struct.Memory* %call_43b287, %struct.Memory** %MEMORY

  ; Code: movl -0x21bc(%rbp), %r10d	 RIP: 43b28e	 Bytes: 7
  %loadMem_43b28e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b28e = call %struct.Memory* @routine_movl_MINUS0x21bc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b28e)
  store %struct.Memory* %call_43b28e, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x21c0(%rbp)	 RIP: 43b295	 Bytes: 6
  %loadMem_43b295 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b295 = call %struct.Memory* @routine_movl__esi__MINUS0x21c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b295)
  store %struct.Memory* %call_43b295, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %esi	 RIP: 43b29b	 Bytes: 3
  %loadMem_43b29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b29b = call %struct.Memory* @routine_movl__r10d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b29b)
  store %struct.Memory* %call_43b29b, %struct.Memory** %MEMORY

  ; Code: movl -0x21c0(%rbp), %edx	 RIP: 43b29e	 Bytes: 6
  %loadMem_43b29e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b29e = call %struct.Memory* @routine_movl_MINUS0x21c0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b29e)
  store %struct.Memory* %call_43b29e, %struct.Memory** %MEMORY

  ; Code: movq -0x21b8(%rbp), %rcx	 RIP: 43b2a4	 Bytes: 7
  %loadMem_43b2a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2a4 = call %struct.Memory* @routine_movq_MINUS0x21b8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2a4)
  store %struct.Memory* %call_43b2a4, %struct.Memory** %MEMORY

  ; Code: movl $0x2e, (%rsp)	 RIP: 43b2ab	 Bytes: 7
  %loadMem_43b2ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2ab = call %struct.Memory* @routine_movl__0x2e____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2ab)
  store %struct.Memory* %call_43b2ab, %struct.Memory** %MEMORY

  ; Code: callq .copy_alignment_line	 RIP: 43b2b2	 Bytes: 5
  %loadMem1_43b2b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b2b2 = call %struct.Memory* @routine_callq_.copy_alignment_line(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b2b2, i64 2846, i64 5, i64 5)
  store %struct.Memory* %call1_43b2b2, %struct.Memory** %MEMORY

  %loadMem2_43b2b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b2b2 = load i64, i64* %3
  %call2_43b2b2 = call %struct.Memory* @sub_43bdd0.copy_alignment_line(%struct.State* %0, i64  %loadPC_43b2b2, %struct.Memory* %loadMem2_43b2b2)
  store %struct.Memory* %call2_43b2b2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b2b7	 Bytes: 3
  %loadMem_43b2b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2b7 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2b7)
  store %struct.Memory* %call_43b2b7, %struct.Memory** %MEMORY

  ; Code: jne .L_43b2d1	 RIP: 43b2ba	 Bytes: 6
  %loadMem_43b2ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2ba = call %struct.Memory* @routine_jne_.L_43b2d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2ba, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43b2ba, %struct.Memory** %MEMORY

  %loadBr_43b2ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b2ba = icmp eq i8 %loadBr_43b2ba, 1
  br i1 %cmpBr_43b2ba, label %block_.L_43b2d1, label %block_43b2c0

block_43b2c0:
  ; Code: movq $0x459b78, %rdi	 RIP: 43b2c0	 Bytes: 10
  %loadMem_43b2c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2c0 = call %struct.Memory* @routine_movq__0x459b78___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2c0)
  store %struct.Memory* %call_43b2c0, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43b2ca	 Bytes: 2
  %loadMem_43b2ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2ca = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2ca)
  store %struct.Memory* %call_43b2ca, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43b2cc	 Bytes: 5
  %loadMem1_43b2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b2cc = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b2cc, i64 14148, i64 5, i64 5)
  store %struct.Memory* %call1_43b2cc, %struct.Memory** %MEMORY

  %loadMem2_43b2cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b2cc = load i64, i64* %3
  %call2_43b2cc = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43b2cc, %struct.Memory* %loadMem2_43b2cc)
  store %struct.Memory* %call2_43b2cc, %struct.Memory** %MEMORY

  ; Code: .L_43b2d1:	 RIP: 43b2d1	 Bytes: 0
  br label %block_.L_43b2d1
block_.L_43b2d1:

  ; Code: jmpq .L_43b5cb	 RIP: 43b2d1	 Bytes: 5
  %loadMem_43b2d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2d1 = call %struct.Memory* @routine_jmpq_.L_43b5cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2d1, i64 762, i64 5)
  store %struct.Memory* %call_43b2d1, %struct.Memory** %MEMORY

  br label %block_.L_43b5cb

  ; Code: .L_43b2d6:	 RIP: 43b2d6	 Bytes: 0
block_.L_43b2d6:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43b2d6	 Bytes: 7
  %loadMem_43b2d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2d6 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2d6)
  store %struct.Memory* %call_43b2d6, %struct.Memory** %MEMORY

  ; Code: movl $0x4599e3, %eax	 RIP: 43b2dd	 Bytes: 5
  %loadMem_43b2dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2dd = call %struct.Memory* @routine_movl__0x4599e3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2dd)
  store %struct.Memory* %call_43b2dd, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b2e2	 Bytes: 2
  %loadMem_43b2e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2e2 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2e2)
  store %struct.Memory* %call_43b2e2, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43b2e4	 Bytes: 5
  %loadMem1_43b2e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b2e4 = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b2e4, i64 -236932, i64 5, i64 5)
  store %struct.Memory* %call1_43b2e4, %struct.Memory** %MEMORY

  %loadMem2_43b2e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b2e4 = load i64, i64* %3
  %call2_43b2e4 = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43b2e4, %struct.Memory* %loadMem2_43b2e4)
  store %struct.Memory* %call2_43b2e4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b2e9	 Bytes: 3
  %loadMem_43b2e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2e9 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2e9)
  store %struct.Memory* %call_43b2e9, %struct.Memory** %MEMORY

  ; Code: jne .L_43b3cf	 RIP: 43b2ec	 Bytes: 6
  %loadMem_43b2ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2ec = call %struct.Memory* @routine_jne_.L_43b3cf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2ec, i8* %BRANCH_TAKEN, i64 227, i64 6, i64 6)
  store %struct.Memory* %call_43b2ec, %struct.Memory** %MEMORY

  %loadBr_43b2ec = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b2ec = icmp eq i8 %loadBr_43b2ec, 1
  br i1 %cmpBr_43b2ec, label %block_.L_43b3cf, label %block_43b2f2

block_43b2f2:
  ; Code: movl $0x2e, %eax	 RIP: 43b2f2	 Bytes: 5
  %loadMem_43b2f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2f2 = call %struct.Memory* @routine_movl__0x2e___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2f2)
  store %struct.Memory* %call_43b2f2, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rcx	 RIP: 43b2f7	 Bytes: 7
  %loadMem_43b2f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2f7 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2f7)
  store %struct.Memory* %call_43b2f7, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdx	 RIP: 43b2fe	 Bytes: 7
  %loadMem_43b2fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b2fe = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b2fe)
  store %struct.Memory* %call_43b2fe, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rdx), %rdx	 RIP: 43b305	 Bytes: 4
  %loadMem_43b305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b305 = call %struct.Memory* @routine_movq_0x28__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b305)
  store %struct.Memory* %call_43b305, %struct.Memory** %MEMORY

  ; Code: movl -0x2060(%rbp), %esi	 RIP: 43b309	 Bytes: 6
  %loadMem_43b309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b309 = call %struct.Memory* @routine_movl_MINUS0x2060__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b309)
  store %struct.Memory* %call_43b309, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %esi	 RIP: 43b30f	 Bytes: 3
  %loadMem_43b30f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b30f = call %struct.Memory* @routine_subl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b30f)
  store %struct.Memory* %call_43b30f, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdi	 RIP: 43b312	 Bytes: 3
  %loadMem_43b312 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b312 = call %struct.Memory* @routine_movslq__esi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b312)
  store %struct.Memory* %call_43b312, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rdi, %rdi	 RIP: 43b315	 Bytes: 7
  %loadMem_43b315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b315 = call %struct.Memory* @routine_imulq__0x168___rdi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b315)
  store %struct.Memory* %call_43b315, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rdx	 RIP: 43b31c	 Bytes: 3
  %loadMem_43b31c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b31c = call %struct.Memory* @routine_addq__rdi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b31c)
  store %struct.Memory* %call_43b31c, %struct.Memory** %MEMORY

  ; Code: movq 0x158(%rdx), %rdi	 RIP: 43b31f	 Bytes: 7
  %loadMem_43b31f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b31f = call %struct.Memory* @routine_movq_0x158__rdx____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b31f)
  store %struct.Memory* %call_43b31f, %struct.Memory** %MEMORY

  ; Code: movl -0x2070(%rbp), %esi	 RIP: 43b326	 Bytes: 6
  %loadMem_43b326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b326 = call %struct.Memory* @routine_movl_MINUS0x2070__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b326)
  store %struct.Memory* %call_43b326, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rdx	 RIP: 43b32c	 Bytes: 7
  %loadMem_43b32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b32c = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b32c)
  store %struct.Memory* %call_43b32c, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x21c8(%rbp)	 RIP: 43b333	 Bytes: 7
  %loadMem_43b333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b333 = call %struct.Memory* @routine_movq__rdi__MINUS0x21c8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b333)
  store %struct.Memory* %call_43b333, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 43b33a	 Bytes: 3
  %loadMem_43b33a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b33a = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b33a)
  store %struct.Memory* %call_43b33a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x21cc(%rbp)	 RIP: 43b33d	 Bytes: 6
  %loadMem_43b33d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b33d = call %struct.Memory* @routine_movl__eax__MINUS0x21cc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b33d)
  store %struct.Memory* %call_43b33d, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x21d8(%rbp)	 RIP: 43b343	 Bytes: 7
  %loadMem_43b343 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b343 = call %struct.Memory* @routine_movq__rcx__MINUS0x21d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b343)
  store %struct.Memory* %call_43b343, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x21dc(%rbp)	 RIP: 43b34a	 Bytes: 6
  %loadMem_43b34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b34a = call %struct.Memory* @routine_movl__esi__MINUS0x21dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b34a)
  store %struct.Memory* %call_43b34a, %struct.Memory** %MEMORY

  ; Code: callq .strlen_plt	 RIP: 43b350	 Bytes: 5
  %loadMem1_43b350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b350 = call %struct.Memory* @routine_callq_.strlen_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b350, i64 -237296, i64 5, i64 5)
  store %struct.Memory* %call1_43b350, %struct.Memory** %MEMORY

  %loadMem2_43b350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b350 = load i64, i64* %3
  %call2_43b350 = call %struct.Memory* @ext_strlen(%struct.State* %0, i64  %loadPC_43b350, %struct.Memory* %loadMem2_43b350)
  store %struct.Memory* %call2_43b350, %struct.Memory** %MEMORY

  ; Code: subq $0x1, %rax	 RIP: 43b355	 Bytes: 4
  %loadMem_43b355 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b355 = call %struct.Memory* @routine_subq__0x1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b355)
  store %struct.Memory* %call_43b355, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b359	 Bytes: 2
  %loadMem_43b359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b359 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b359)
  store %struct.Memory* %call_43b359, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b35b	 Bytes: 7
  %loadMem_43b35b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b35b = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b35b)
  store %struct.Memory* %call_43b35b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b362	 Bytes: 7
  %loadMem_43b362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b362 = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b362)
  store %struct.Memory* %call_43b362, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,8), %r8d	 RIP: 43b369	 Bytes: 4
  %loadMem_43b369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b369 = call %struct.Memory* @routine_movl___rax__rcx_8____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b369)
  store %struct.Memory* %call_43b369, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b36d	 Bytes: 7
  %loadMem_43b36d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b36d = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b36d)
  store %struct.Memory* %call_43b36d, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b374	 Bytes: 7
  %loadMem_43b374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b374 = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b374)
  store %struct.Memory* %call_43b374, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax,%rcx,8), %r9d	 RIP: 43b37b	 Bytes: 5
  %loadMem_43b37b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b37b = call %struct.Memory* @routine_movl_0x4__rax__rcx_8____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b37b)
  store %struct.Memory* %call_43b37b, %struct.Memory** %MEMORY

  ; Code: movq -0x21c8(%rbp), %rdi	 RIP: 43b380	 Bytes: 7
  %loadMem_43b380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b380 = call %struct.Memory* @routine_movq_MINUS0x21c8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b380)
  store %struct.Memory* %call_43b380, %struct.Memory** %MEMORY

  ; Code: movl -0x21dc(%rbp), %r10d	 RIP: 43b387	 Bytes: 7
  %loadMem_43b387 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b387 = call %struct.Memory* @routine_movl_MINUS0x21dc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b387)
  store %struct.Memory* %call_43b387, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x21e0(%rbp)	 RIP: 43b38e	 Bytes: 6
  %loadMem_43b38e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b38e = call %struct.Memory* @routine_movl__esi__MINUS0x21e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b38e)
  store %struct.Memory* %call_43b38e, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %esi	 RIP: 43b394	 Bytes: 3
  %loadMem_43b394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b394 = call %struct.Memory* @routine_movl__r10d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b394)
  store %struct.Memory* %call_43b394, %struct.Memory** %MEMORY

  ; Code: movl -0x21e0(%rbp), %edx	 RIP: 43b397	 Bytes: 6
  %loadMem_43b397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b397 = call %struct.Memory* @routine_movl_MINUS0x21e0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b397)
  store %struct.Memory* %call_43b397, %struct.Memory** %MEMORY

  ; Code: movq -0x21d8(%rbp), %rcx	 RIP: 43b39d	 Bytes: 7
  %loadMem_43b39d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b39d = call %struct.Memory* @routine_movq_MINUS0x21d8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b39d)
  store %struct.Memory* %call_43b39d, %struct.Memory** %MEMORY

  ; Code: movl $0x2e, (%rsp)	 RIP: 43b3a4	 Bytes: 7
  %loadMem_43b3a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3a4 = call %struct.Memory* @routine_movl__0x2e____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3a4)
  store %struct.Memory* %call_43b3a4, %struct.Memory** %MEMORY

  ; Code: callq .copy_alignment_line	 RIP: 43b3ab	 Bytes: 5
  %loadMem1_43b3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b3ab = call %struct.Memory* @routine_callq_.copy_alignment_line(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b3ab, i64 2597, i64 5, i64 5)
  store %struct.Memory* %call1_43b3ab, %struct.Memory** %MEMORY

  %loadMem2_43b3ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b3ab = load i64, i64* %3
  %call2_43b3ab = call %struct.Memory* @sub_43bdd0.copy_alignment_line(%struct.State* %0, i64  %loadPC_43b3ab, %struct.Memory* %loadMem2_43b3ab)
  store %struct.Memory* %call2_43b3ab, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b3b0	 Bytes: 3
  %loadMem_43b3b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3b0 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3b0)
  store %struct.Memory* %call_43b3b0, %struct.Memory** %MEMORY

  ; Code: jne .L_43b3ca	 RIP: 43b3b3	 Bytes: 6
  %loadMem_43b3b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3b3 = call %struct.Memory* @routine_jne_.L_43b3ca(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3b3, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43b3b3, %struct.Memory** %MEMORY

  %loadBr_43b3b3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b3b3 = icmp eq i8 %loadBr_43b3b3, 1
  br i1 %cmpBr_43b3b3, label %block_.L_43b3ca, label %block_43b3b9

block_43b3b9:
  ; Code: movq $0x459ba0, %rdi	 RIP: 43b3b9	 Bytes: 10
  %loadMem_43b3b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3b9 = call %struct.Memory* @routine_movq__0x459ba0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3b9)
  store %struct.Memory* %call_43b3b9, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43b3c3	 Bytes: 2
  %loadMem_43b3c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3c3 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3c3)
  store %struct.Memory* %call_43b3c3, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43b3c5	 Bytes: 5
  %loadMem1_43b3c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b3c5 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b3c5, i64 13899, i64 5, i64 5)
  store %struct.Memory* %call1_43b3c5, %struct.Memory** %MEMORY

  %loadMem2_43b3c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b3c5 = load i64, i64* %3
  %call2_43b3c5 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43b3c5, %struct.Memory* %loadMem2_43b3c5)
  store %struct.Memory* %call2_43b3c5, %struct.Memory** %MEMORY

  ; Code: .L_43b3ca:	 RIP: 43b3ca	 Bytes: 0
  br label %block_.L_43b3ca
block_.L_43b3ca:

  ; Code: jmpq .L_43b5c6	 RIP: 43b3ca	 Bytes: 5
  %loadMem_43b3ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3ca = call %struct.Memory* @routine_jmpq_.L_43b5c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3ca, i64 508, i64 5)
  store %struct.Memory* %call_43b3ca, %struct.Memory** %MEMORY

  br label %block_.L_43b5c6

  ; Code: .L_43b3cf:	 RIP: 43b3cf	 Bytes: 0
block_.L_43b3cf:

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43b3cf	 Bytes: 7
  %loadMem_43b3cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3cf = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3cf)
  store %struct.Memory* %call_43b3cf, %struct.Memory** %MEMORY

  ; Code: movl $0x4599e8, %eax	 RIP: 43b3d6	 Bytes: 5
  %loadMem_43b3d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3d6 = call %struct.Memory* @routine_movl__0x4599e8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3d6)
  store %struct.Memory* %call_43b3d6, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b3db	 Bytes: 2
  %loadMem_43b3db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3db = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3db)
  store %struct.Memory* %call_43b3db, %struct.Memory** %MEMORY

  ; Code: callq .strcmp_plt	 RIP: 43b3dd	 Bytes: 5
  %loadMem1_43b3dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b3dd = call %struct.Memory* @routine_callq_.strcmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b3dd, i64 -237181, i64 5, i64 5)
  store %struct.Memory* %call1_43b3dd, %struct.Memory** %MEMORY

  %loadMem2_43b3dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b3dd = load i64, i64* %3
  %call2_43b3dd = call %struct.Memory* @ext_strcmp(%struct.State* %0, i64  %loadPC_43b3dd, %struct.Memory* %loadMem2_43b3dd)
  store %struct.Memory* %call2_43b3dd, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b3e2	 Bytes: 3
  %loadMem_43b3e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3e2 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3e2)
  store %struct.Memory* %call_43b3e2, %struct.Memory** %MEMORY

  ; Code: jne .L_43b4c8	 RIP: 43b3e5	 Bytes: 6
  %loadMem_43b3e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3e5 = call %struct.Memory* @routine_jne_.L_43b4c8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3e5, i8* %BRANCH_TAKEN, i64 227, i64 6, i64 6)
  store %struct.Memory* %call_43b3e5, %struct.Memory** %MEMORY

  %loadBr_43b3e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b3e5 = icmp eq i8 %loadBr_43b3e5, 1
  br i1 %cmpBr_43b3e5, label %block_.L_43b4c8, label %block_43b3eb

block_43b3eb:
  ; Code: movl $0x2e, %eax	 RIP: 43b3eb	 Bytes: 5
  %loadMem_43b3eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3eb = call %struct.Memory* @routine_movl__0x2e___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3eb)
  store %struct.Memory* %call_43b3eb, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rcx	 RIP: 43b3f0	 Bytes: 7
  %loadMem_43b3f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3f0 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3f0)
  store %struct.Memory* %call_43b3f0, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rdx	 RIP: 43b3f7	 Bytes: 7
  %loadMem_43b3f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3f7 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3f7)
  store %struct.Memory* %call_43b3f7, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rdx), %rdx	 RIP: 43b3fe	 Bytes: 4
  %loadMem_43b3fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b3fe = call %struct.Memory* @routine_movq_0x28__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b3fe)
  store %struct.Memory* %call_43b3fe, %struct.Memory** %MEMORY

  ; Code: movl -0x2060(%rbp), %esi	 RIP: 43b402	 Bytes: 6
  %loadMem_43b402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b402 = call %struct.Memory* @routine_movl_MINUS0x2060__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b402)
  store %struct.Memory* %call_43b402, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %esi	 RIP: 43b408	 Bytes: 3
  %loadMem_43b408 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b408 = call %struct.Memory* @routine_subl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b408)
  store %struct.Memory* %call_43b408, %struct.Memory** %MEMORY

  ; Code: movslq %esi, %rdi	 RIP: 43b40b	 Bytes: 3
  %loadMem_43b40b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b40b = call %struct.Memory* @routine_movslq__esi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b40b)
  store %struct.Memory* %call_43b40b, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rdi, %rdi	 RIP: 43b40e	 Bytes: 7
  %loadMem_43b40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b40e = call %struct.Memory* @routine_imulq__0x168___rdi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b40e)
  store %struct.Memory* %call_43b40e, %struct.Memory** %MEMORY

  ; Code: addq %rdi, %rdx	 RIP: 43b415	 Bytes: 3
  %loadMem_43b415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b415 = call %struct.Memory* @routine_addq__rdi___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b415)
  store %struct.Memory* %call_43b415, %struct.Memory** %MEMORY

  ; Code: movq 0x160(%rdx), %rdi	 RIP: 43b418	 Bytes: 7
  %loadMem_43b418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b418 = call %struct.Memory* @routine_movq_0x160__rdx____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b418)
  store %struct.Memory* %call_43b418, %struct.Memory** %MEMORY

  ; Code: movl -0x2070(%rbp), %esi	 RIP: 43b41f	 Bytes: 6
  %loadMem_43b41f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b41f = call %struct.Memory* @routine_movl_MINUS0x2070__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b41f)
  store %struct.Memory* %call_43b41f, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rdx	 RIP: 43b425	 Bytes: 7
  %loadMem_43b425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b425 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b425)
  store %struct.Memory* %call_43b425, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x21e8(%rbp)	 RIP: 43b42c	 Bytes: 7
  %loadMem_43b42c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b42c = call %struct.Memory* @routine_movq__rdi__MINUS0x21e8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b42c)
  store %struct.Memory* %call_43b42c, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 43b433	 Bytes: 3
  %loadMem_43b433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b433 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b433)
  store %struct.Memory* %call_43b433, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x21ec(%rbp)	 RIP: 43b436	 Bytes: 6
  %loadMem_43b436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b436 = call %struct.Memory* @routine_movl__eax__MINUS0x21ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b436)
  store %struct.Memory* %call_43b436, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x21f8(%rbp)	 RIP: 43b43c	 Bytes: 7
  %loadMem_43b43c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b43c = call %struct.Memory* @routine_movq__rcx__MINUS0x21f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b43c)
  store %struct.Memory* %call_43b43c, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x21fc(%rbp)	 RIP: 43b443	 Bytes: 6
  %loadMem_43b443 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b443 = call %struct.Memory* @routine_movl__esi__MINUS0x21fc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b443)
  store %struct.Memory* %call_43b443, %struct.Memory** %MEMORY

  ; Code: callq .strlen_plt	 RIP: 43b449	 Bytes: 5
  %loadMem1_43b449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b449 = call %struct.Memory* @routine_callq_.strlen_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b449, i64 -237545, i64 5, i64 5)
  store %struct.Memory* %call1_43b449, %struct.Memory** %MEMORY

  %loadMem2_43b449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b449 = load i64, i64* %3
  %call2_43b449 = call %struct.Memory* @ext_strlen(%struct.State* %0, i64  %loadPC_43b449, %struct.Memory* %loadMem2_43b449)
  store %struct.Memory* %call2_43b449, %struct.Memory** %MEMORY

  ; Code: subq $0x1, %rax	 RIP: 43b44e	 Bytes: 4
  %loadMem_43b44e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b44e = call %struct.Memory* @routine_subq__0x1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b44e)
  store %struct.Memory* %call_43b44e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b452	 Bytes: 2
  %loadMem_43b452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b452 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b452)
  store %struct.Memory* %call_43b452, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b454	 Bytes: 7
  %loadMem_43b454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b454 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b454)
  store %struct.Memory* %call_43b454, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b45b	 Bytes: 7
  %loadMem_43b45b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b45b = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b45b)
  store %struct.Memory* %call_43b45b, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,8), %r8d	 RIP: 43b462	 Bytes: 4
  %loadMem_43b462 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b462 = call %struct.Memory* @routine_movl___rax__rcx_8____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b462)
  store %struct.Memory* %call_43b462, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b466	 Bytes: 7
  %loadMem_43b466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b466 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b466)
  store %struct.Memory* %call_43b466, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b46d	 Bytes: 7
  %loadMem_43b46d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b46d = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b46d)
  store %struct.Memory* %call_43b46d, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax,%rcx,8), %r9d	 RIP: 43b474	 Bytes: 5
  %loadMem_43b474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b474 = call %struct.Memory* @routine_movl_0x4__rax__rcx_8____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b474)
  store %struct.Memory* %call_43b474, %struct.Memory** %MEMORY

  ; Code: movq -0x21e8(%rbp), %rdi	 RIP: 43b479	 Bytes: 7
  %loadMem_43b479 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b479 = call %struct.Memory* @routine_movq_MINUS0x21e8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b479)
  store %struct.Memory* %call_43b479, %struct.Memory** %MEMORY

  ; Code: movl -0x21fc(%rbp), %r10d	 RIP: 43b480	 Bytes: 7
  %loadMem_43b480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b480 = call %struct.Memory* @routine_movl_MINUS0x21fc__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b480)
  store %struct.Memory* %call_43b480, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x2200(%rbp)	 RIP: 43b487	 Bytes: 6
  %loadMem_43b487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b487 = call %struct.Memory* @routine_movl__esi__MINUS0x2200__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b487)
  store %struct.Memory* %call_43b487, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %esi	 RIP: 43b48d	 Bytes: 3
  %loadMem_43b48d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b48d = call %struct.Memory* @routine_movl__r10d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b48d)
  store %struct.Memory* %call_43b48d, %struct.Memory** %MEMORY

  ; Code: movl -0x2200(%rbp), %edx	 RIP: 43b490	 Bytes: 6
  %loadMem_43b490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b490 = call %struct.Memory* @routine_movl_MINUS0x2200__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b490)
  store %struct.Memory* %call_43b490, %struct.Memory** %MEMORY

  ; Code: movq -0x21f8(%rbp), %rcx	 RIP: 43b496	 Bytes: 7
  %loadMem_43b496 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b496 = call %struct.Memory* @routine_movq_MINUS0x21f8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b496)
  store %struct.Memory* %call_43b496, %struct.Memory** %MEMORY

  ; Code: movl $0x2e, (%rsp)	 RIP: 43b49d	 Bytes: 7
  %loadMem_43b49d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b49d = call %struct.Memory* @routine_movl__0x2e____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b49d)
  store %struct.Memory* %call_43b49d, %struct.Memory** %MEMORY

  ; Code: callq .copy_alignment_line	 RIP: 43b4a4	 Bytes: 5
  %loadMem1_43b4a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b4a4 = call %struct.Memory* @routine_callq_.copy_alignment_line(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b4a4, i64 2348, i64 5, i64 5)
  store %struct.Memory* %call1_43b4a4, %struct.Memory** %MEMORY

  %loadMem2_43b4a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b4a4 = load i64, i64* %3
  %call2_43b4a4 = call %struct.Memory* @sub_43bdd0.copy_alignment_line(%struct.State* %0, i64  %loadPC_43b4a4, %struct.Memory* %loadMem2_43b4a4)
  store %struct.Memory* %call2_43b4a4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b4a9	 Bytes: 3
  %loadMem_43b4a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4a9 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4a9)
  store %struct.Memory* %call_43b4a9, %struct.Memory** %MEMORY

  ; Code: jne .L_43b4c3	 RIP: 43b4ac	 Bytes: 6
  %loadMem_43b4ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4ac = call %struct.Memory* @routine_jne_.L_43b4c3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4ac, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43b4ac, %struct.Memory** %MEMORY

  %loadBr_43b4ac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b4ac = icmp eq i8 %loadBr_43b4ac, 1
  br i1 %cmpBr_43b4ac, label %block_.L_43b4c3, label %block_43b4b2

block_43b4b2:
  ; Code: movq $0x459bc8, %rdi	 RIP: 43b4b2	 Bytes: 10
  %loadMem_43b4b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4b2 = call %struct.Memory* @routine_movq__0x459bc8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4b2)
  store %struct.Memory* %call_43b4b2, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43b4bc	 Bytes: 2
  %loadMem_43b4bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4bc = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4bc)
  store %struct.Memory* %call_43b4bc, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43b4be	 Bytes: 5
  %loadMem1_43b4be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b4be = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b4be, i64 13650, i64 5, i64 5)
  store %struct.Memory* %call1_43b4be, %struct.Memory** %MEMORY

  %loadMem2_43b4be = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b4be = load i64, i64* %3
  %call2_43b4be = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43b4be, %struct.Memory* %loadMem2_43b4be)
  store %struct.Memory* %call2_43b4be, %struct.Memory** %MEMORY

  ; Code: .L_43b4c3:	 RIP: 43b4c3	 Bytes: 0
  br label %block_.L_43b4c3
block_.L_43b4c3:

  ; Code: jmpq .L_43b5c1	 RIP: 43b4c3	 Bytes: 5
  %loadMem_43b4c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4c3 = call %struct.Memory* @routine_jmpq_.L_43b5c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4c3, i64 254, i64 5)
  store %struct.Memory* %call_43b4c3, %struct.Memory** %MEMORY

  br label %block_.L_43b5c1

  ; Code: .L_43b4c8:	 RIP: 43b4c8	 Bytes: 0
block_.L_43b4c8:

  ; Code: movq $0x459bf0, %rsi	 RIP: 43b4c8	 Bytes: 10
  %loadMem_43b4c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4c8 = call %struct.Memory* @routine_movq__0x459bf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4c8)
  store %struct.Memory* %call_43b4c8, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %eax	 RIP: 43b4d2	 Bytes: 5
  %loadMem_43b4d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4d2 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4d2)
  store %struct.Memory* %call_43b4d2, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43b4d7	 Bytes: 2
  %loadMem_43b4d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4d7 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4d7)
  store %struct.Memory* %call_43b4d7, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rdi	 RIP: 43b4d9	 Bytes: 7
  %loadMem_43b4d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4d9 = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4d9)
  store %struct.Memory* %call_43b4d9, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 43b4e0	 Bytes: 5
  %loadMem1_43b4e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b4e0 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b4e0, i64 -237840, i64 5, i64 5)
  store %struct.Memory* %call1_43b4e0, %struct.Memory** %MEMORY

  %loadMem2_43b4e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b4e0 = load i64, i64* %3
  %call2_43b4e0 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_43b4e0, %struct.Memory* %loadMem2_43b4e0)
  store %struct.Memory* %call2_43b4e0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b4e5	 Bytes: 3
  %loadMem_43b4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4e5 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4e5)
  store %struct.Memory* %call_43b4e5, %struct.Memory** %MEMORY

  ; Code: je .L_43b5bc	 RIP: 43b4e8	 Bytes: 6
  %loadMem_43b4e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4e8 = call %struct.Memory* @routine_je_.L_43b5bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4e8, i8* %BRANCH_TAKEN, i64 212, i64 6, i64 6)
  store %struct.Memory* %call_43b4e8, %struct.Memory** %MEMORY

  %loadBr_43b4e8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b4e8 = icmp eq i8 %loadBr_43b4e8, 1
  br i1 %cmpBr_43b4e8, label %block_.L_43b5bc, label %block_43b4ee

block_43b4ee:
  ; Code: movl $0x2e, %eax	 RIP: 43b4ee	 Bytes: 5
  %loadMem_43b4ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4ee = call %struct.Memory* @routine_movl__0x2e___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4ee)
  store %struct.Memory* %call_43b4ee, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rcx	 RIP: 43b4f3	 Bytes: 7
  %loadMem_43b4f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4f3 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4f3)
  store %struct.Memory* %call_43b4f3, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rdx	 RIP: 43b4fa	 Bytes: 4
  %loadMem_43b4fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4fa = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4fa)
  store %struct.Memory* %call_43b4fa, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rsi	 RIP: 43b4fe	 Bytes: 7
  %loadMem_43b4fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b4fe = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b4fe)
  store %struct.Memory* %call_43b4fe, %struct.Memory** %MEMORY

  ; Code: movq (%rdx,%rsi,8), %rdi	 RIP: 43b505	 Bytes: 4
  %loadMem_43b505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b505 = call %struct.Memory* @routine_movq___rdx__rsi_8____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b505)
  store %struct.Memory* %call_43b505, %struct.Memory** %MEMORY

  ; Code: movl -0x2070(%rbp), %esi	 RIP: 43b509	 Bytes: 6
  %loadMem_43b509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b509 = call %struct.Memory* @routine_movl_MINUS0x2070__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b509)
  store %struct.Memory* %call_43b509, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rdx	 RIP: 43b50f	 Bytes: 7
  %loadMem_43b50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b50f = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b50f)
  store %struct.Memory* %call_43b50f, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x2208(%rbp)	 RIP: 43b516	 Bytes: 7
  %loadMem_43b516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b516 = call %struct.Memory* @routine_movq__rdi__MINUS0x2208__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b516)
  store %struct.Memory* %call_43b516, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 43b51d	 Bytes: 3
  %loadMem_43b51d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b51d = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b51d)
  store %struct.Memory* %call_43b51d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x220c(%rbp)	 RIP: 43b520	 Bytes: 6
  %loadMem_43b520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b520 = call %struct.Memory* @routine_movl__eax__MINUS0x220c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b520)
  store %struct.Memory* %call_43b520, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x2218(%rbp)	 RIP: 43b526	 Bytes: 7
  %loadMem_43b526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b526 = call %struct.Memory* @routine_movq__rcx__MINUS0x2218__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b526)
  store %struct.Memory* %call_43b526, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x221c(%rbp)	 RIP: 43b52d	 Bytes: 6
  %loadMem_43b52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b52d = call %struct.Memory* @routine_movl__esi__MINUS0x221c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b52d)
  store %struct.Memory* %call_43b52d, %struct.Memory** %MEMORY

  ; Code: callq .strlen_plt	 RIP: 43b533	 Bytes: 5
  %loadMem1_43b533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b533 = call %struct.Memory* @routine_callq_.strlen_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b533, i64 -237779, i64 5, i64 5)
  store %struct.Memory* %call1_43b533, %struct.Memory** %MEMORY

  %loadMem2_43b533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b533 = load i64, i64* %3
  %call2_43b533 = call %struct.Memory* @ext_strlen(%struct.State* %0, i64  %loadPC_43b533, %struct.Memory* %loadMem2_43b533)
  store %struct.Memory* %call2_43b533, %struct.Memory** %MEMORY

  ; Code: subq $0x1, %rax	 RIP: 43b538	 Bytes: 4
  %loadMem_43b538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b538 = call %struct.Memory* @routine_subq__0x1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b538)
  store %struct.Memory* %call_43b538, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43b53c	 Bytes: 2
  %loadMem_43b53c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b53c = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b53c)
  store %struct.Memory* %call_43b53c, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b53e	 Bytes: 7
  %loadMem_43b53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b53e = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b53e)
  store %struct.Memory* %call_43b53e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b545	 Bytes: 7
  %loadMem_43b545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b545 = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b545)
  store %struct.Memory* %call_43b545, %struct.Memory** %MEMORY

  ; Code: movl (%rax,%rcx,8), %r8d	 RIP: 43b54c	 Bytes: 4
  %loadMem_43b54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b54c = call %struct.Memory* @routine_movl___rax__rcx_8____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b54c)
  store %struct.Memory* %call_43b54c, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b550	 Bytes: 7
  %loadMem_43b550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b550 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b550)
  store %struct.Memory* %call_43b550, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b557	 Bytes: 7
  %loadMem_43b557 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b557 = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b557)
  store %struct.Memory* %call_43b557, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax,%rcx,8), %r9d	 RIP: 43b55e	 Bytes: 5
  %loadMem_43b55e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b55e = call %struct.Memory* @routine_movl_0x4__rax__rcx_8____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b55e)
  store %struct.Memory* %call_43b55e, %struct.Memory** %MEMORY

  ; Code: movq -0x2208(%rbp), %rdi	 RIP: 43b563	 Bytes: 7
  %loadMem_43b563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b563 = call %struct.Memory* @routine_movq_MINUS0x2208__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b563)
  store %struct.Memory* %call_43b563, %struct.Memory** %MEMORY

  ; Code: movl -0x221c(%rbp), %r10d	 RIP: 43b56a	 Bytes: 7
  %loadMem_43b56a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b56a = call %struct.Memory* @routine_movl_MINUS0x221c__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b56a)
  store %struct.Memory* %call_43b56a, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x2220(%rbp)	 RIP: 43b571	 Bytes: 6
  %loadMem_43b571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b571 = call %struct.Memory* @routine_movl__esi__MINUS0x2220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b571)
  store %struct.Memory* %call_43b571, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %esi	 RIP: 43b577	 Bytes: 3
  %loadMem_43b577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b577 = call %struct.Memory* @routine_movl__r10d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b577)
  store %struct.Memory* %call_43b577, %struct.Memory** %MEMORY

  ; Code: movl -0x2220(%rbp), %edx	 RIP: 43b57a	 Bytes: 6
  %loadMem_43b57a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b57a = call %struct.Memory* @routine_movl_MINUS0x2220__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b57a)
  store %struct.Memory* %call_43b57a, %struct.Memory** %MEMORY

  ; Code: movq -0x2218(%rbp), %rcx	 RIP: 43b580	 Bytes: 7
  %loadMem_43b580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b580 = call %struct.Memory* @routine_movq_MINUS0x2218__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b580)
  store %struct.Memory* %call_43b580, %struct.Memory** %MEMORY

  ; Code: movl $0x2e, (%rsp)	 RIP: 43b587	 Bytes: 7
  %loadMem_43b587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b587 = call %struct.Memory* @routine_movl__0x2e____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b587)
  store %struct.Memory* %call_43b587, %struct.Memory** %MEMORY

  ; Code: callq .copy_alignment_line	 RIP: 43b58e	 Bytes: 5
  %loadMem1_43b58e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b58e = call %struct.Memory* @routine_callq_.copy_alignment_line(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b58e, i64 2114, i64 5, i64 5)
  store %struct.Memory* %call1_43b58e, %struct.Memory** %MEMORY

  %loadMem2_43b58e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b58e = load i64, i64* %3
  %call2_43b58e = call %struct.Memory* @sub_43bdd0.copy_alignment_line(%struct.State* %0, i64  %loadPC_43b58e, %struct.Memory* %loadMem2_43b58e)
  store %struct.Memory* %call2_43b58e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b593	 Bytes: 3
  %loadMem_43b593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b593 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b593)
  store %struct.Memory* %call_43b593, %struct.Memory** %MEMORY

  ; Code: jne .L_43b5ad	 RIP: 43b596	 Bytes: 6
  %loadMem_43b596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b596 = call %struct.Memory* @routine_jne_.L_43b5ad(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b596, i8* %BRANCH_TAKEN, i64 23, i64 6, i64 6)
  store %struct.Memory* %call_43b596, %struct.Memory** %MEMORY

  %loadBr_43b596 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b596 = icmp eq i8 %loadBr_43b596, 1
  br i1 %cmpBr_43b596, label %block_.L_43b5ad, label %block_43b59c

block_43b59c:
  ; Code: movq $0x459bf3, %rdi	 RIP: 43b59c	 Bytes: 10
  %loadMem_43b59c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b59c = call %struct.Memory* @routine_movq__0x459bf3___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b59c)
  store %struct.Memory* %call_43b59c, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43b5a6	 Bytes: 2
  %loadMem_43b5a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5a6 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5a6)
  store %struct.Memory* %call_43b5a6, %struct.Memory** %MEMORY

  ; Code: callq .Die	 RIP: 43b5a8	 Bytes: 5
  %loadMem1_43b5a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b5a8 = call %struct.Memory* @routine_callq_.Die(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b5a8, i64 13416, i64 5, i64 5)
  store %struct.Memory* %call1_43b5a8, %struct.Memory** %MEMORY

  %loadMem2_43b5a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b5a8 = load i64, i64* %3
  %call2_43b5a8 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64  %loadPC_43b5a8, %struct.Memory* %loadMem2_43b5a8)
  store %struct.Memory* %call2_43b5a8, %struct.Memory** %MEMORY

  ; Code: .L_43b5ad:	 RIP: 43b5ad	 Bytes: 0
  br label %block_.L_43b5ad
block_.L_43b5ad:

  ; Code: movl -0x2060(%rbp), %eax	 RIP: 43b5ad	 Bytes: 6
  %loadMem_43b5ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5ad = call %struct.Memory* @routine_movl_MINUS0x2060__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5ad)
  store %struct.Memory* %call_43b5ad, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43b5b3	 Bytes: 3
  %loadMem_43b5b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5b3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5b3)
  store %struct.Memory* %call_43b5b3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2060(%rbp)	 RIP: 43b5b6	 Bytes: 6
  %loadMem_43b5b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5b6 = call %struct.Memory* @routine_movl__eax__MINUS0x2060__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5b6)
  store %struct.Memory* %call_43b5b6, %struct.Memory** %MEMORY

  ; Code: .L_43b5bc:	 RIP: 43b5bc	 Bytes: 0
  br label %block_.L_43b5bc
block_.L_43b5bc:

  ; Code: jmpq .L_43b5c1	 RIP: 43b5bc	 Bytes: 5
  %loadMem_43b5bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5bc = call %struct.Memory* @routine_jmpq_.L_43b5c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5bc, i64 5, i64 5)
  store %struct.Memory* %call_43b5bc, %struct.Memory** %MEMORY

  br label %block_.L_43b5c1

  ; Code: .L_43b5c1:	 RIP: 43b5c1	 Bytes: 0
block_.L_43b5c1:

  ; Code: jmpq .L_43b5c6	 RIP: 43b5c1	 Bytes: 5
  %loadMem_43b5c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5c1 = call %struct.Memory* @routine_jmpq_.L_43b5c6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5c1, i64 5, i64 5)
  store %struct.Memory* %call_43b5c1, %struct.Memory** %MEMORY

  br label %block_.L_43b5c6

  ; Code: .L_43b5c6:	 RIP: 43b5c6	 Bytes: 0
block_.L_43b5c6:

  ; Code: jmpq .L_43b5cb	 RIP: 43b5c6	 Bytes: 5
  %loadMem_43b5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5c6 = call %struct.Memory* @routine_jmpq_.L_43b5cb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5c6, i64 5, i64 5)
  store %struct.Memory* %call_43b5c6, %struct.Memory** %MEMORY

  br label %block_.L_43b5cb

  ; Code: .L_43b5cb:	 RIP: 43b5cb	 Bytes: 0
block_.L_43b5cb:

  ; Code: jmpq .L_43b5d0	 RIP: 43b5cb	 Bytes: 5
  %loadMem_43b5cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5cb = call %struct.Memory* @routine_jmpq_.L_43b5d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5cb, i64 5, i64 5)
  store %struct.Memory* %call_43b5cb, %struct.Memory** %MEMORY

  br label %block_.L_43b5d0

  ; Code: .L_43b5d0:	 RIP: 43b5d0	 Bytes: 0
block_.L_43b5d0:

  ; Code: jmpq .L_43b5d5	 RIP: 43b5d0	 Bytes: 5
  %loadMem_43b5d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5d0 = call %struct.Memory* @routine_jmpq_.L_43b5d5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5d0, i64 5, i64 5)
  store %struct.Memory* %call_43b5d0, %struct.Memory** %MEMORY

  br label %block_.L_43b5d5

  ; Code: .L_43b5d5:	 RIP: 43b5d5	 Bytes: 0
block_.L_43b5d5:

  ; Code: movl $0x1000, %esi	 RIP: 43b5d5	 Bytes: 5
  %loadMem_43b5d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5d5 = call %struct.Memory* @routine_movl__0x1000___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5d5)
  store %struct.Memory* %call_43b5d5, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 43b5da	 Bytes: 7
  %loadMem_43b5da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5da = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5da)
  store %struct.Memory* %call_43b5da, %struct.Memory** %MEMORY

  ; Code: movq $0x0, -0x2048(%rbp)	 RIP: 43b5e1	 Bytes: 11
  %loadMem_43b5e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5e1 = call %struct.Memory* @routine_movq__0x0__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5e1)
  store %struct.Memory* %call_43b5e1, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rdx	 RIP: 43b5ec	 Bytes: 4
  %loadMem_43b5ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5ec = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5ec)
  store %struct.Memory* %call_43b5ec, %struct.Memory** %MEMORY

  ; Code: callq .fgets_plt	 RIP: 43b5f0	 Bytes: 5
  %loadMem1_43b5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b5f0 = call %struct.Memory* @routine_callq_.fgets_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b5f0, i64 -237744, i64 5, i64 5)
  store %struct.Memory* %call1_43b5f0, %struct.Memory** %MEMORY

  %loadMem2_43b5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b5f0 = load i64, i64* %3
  %call2_43b5f0 = call %struct.Memory* @sub_401540.fgets_plt(%struct.State* %0, i64  %loadPC_43b5f0, %struct.Memory* %loadMem2_43b5f0)
  store %struct.Memory* %call2_43b5f0, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43b5f5	 Bytes: 4
  %loadMem_43b5f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5f5 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5f5)
  store %struct.Memory* %call_43b5f5, %struct.Memory** %MEMORY

  ; Code: jne .L_43b604	 RIP: 43b5f9	 Bytes: 6
  %loadMem_43b5f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5f9 = call %struct.Memory* @routine_jne_.L_43b604(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5f9, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b5f9, %struct.Memory** %MEMORY

  %loadBr_43b5f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b5f9 = icmp eq i8 %loadBr_43b5f9, 1
  br i1 %cmpBr_43b5f9, label %block_.L_43b604, label %block_43b5ff

block_43b5ff:
  ; Code: jmpq .L_43b6bd	 RIP: 43b5ff	 Bytes: 5
  %loadMem_43b5ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b5ff = call %struct.Memory* @routine_jmpq_.L_43b6bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b5ff, i64 190, i64 5)
  store %struct.Memory* %call_43b5ff, %struct.Memory** %MEMORY

  br label %block_.L_43b6bd

  ; Code: .L_43b604:	 RIP: 43b604	 Bytes: 0
block_.L_43b604:

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43b604	 Bytes: 10
  %loadMem_43b604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b604 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b604)
  store %struct.Memory* %call_43b604, %struct.Memory** %MEMORY

  ; Code: leaq -0x2030(%rbp), %rax	 RIP: 43b60e	 Bytes: 7
  %loadMem_43b60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b60e = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b60e)
  store %struct.Memory* %call_43b60e, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rcx	 RIP: 43b615	 Bytes: 7
  %loadMem_43b615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b615 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b615)
  store %struct.Memory* %call_43b615, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43b61c	 Bytes: 3
  %loadMem_43b61c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b61c = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b61c)
  store %struct.Memory* %call_43b61c, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x2228(%rbp)	 RIP: 43b61f	 Bytes: 7
  %loadMem_43b61f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b61f = call %struct.Memory* @routine_movq__rsi__MINUS0x2228__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b61f)
  store %struct.Memory* %call_43b61f, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 43b626	 Bytes: 3
  %loadMem_43b626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b626 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b626)
  store %struct.Memory* %call_43b626, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2230(%rbp)	 RIP: 43b629	 Bytes: 7
  %loadMem_43b629 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b629 = call %struct.Memory* @routine_movq__rax__MINUS0x2230__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b629)
  store %struct.Memory* %call_43b629, %struct.Memory** %MEMORY

  ; Code: callq .strcpy_plt	 RIP: 43b630	 Bytes: 5
  %loadMem1_43b630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b630 = call %struct.Memory* @routine_callq_.strcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b630, i64 -238160, i64 5, i64 5)
  store %struct.Memory* %call1_43b630, %struct.Memory** %MEMORY

  %loadMem2_43b630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b630 = load i64, i64* %3
  %call2_43b630 = call %struct.Memory* @ext_strcpy(%struct.State* %0, i64  %loadPC_43b630, %struct.Memory* %loadMem2_43b630)
  store %struct.Memory* %call2_43b630, %struct.Memory** %MEMORY

  ; Code: movq -0x2230(%rbp), %rdi	 RIP: 43b635	 Bytes: 7
  %loadMem_43b635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b635 = call %struct.Memory* @routine_movq_MINUS0x2230__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b635)
  store %struct.Memory* %call_43b635, %struct.Memory** %MEMORY

  ; Code: movq -0x2228(%rbp), %rsi	 RIP: 43b63c	 Bytes: 7
  %loadMem_43b63c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b63c = call %struct.Memory* @routine_movq_MINUS0x2228__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b63c)
  store %struct.Memory* %call_43b63c, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2238(%rbp)	 RIP: 43b643	 Bytes: 7
  %loadMem_43b643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b643 = call %struct.Memory* @routine_movq__rax__MINUS0x2238__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b643)
  store %struct.Memory* %call_43b643, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43b64a	 Bytes: 5
  %loadMem1_43b64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b64a = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b64a, i64 -237546, i64 5, i64 5)
  store %struct.Memory* %call1_43b64a, %struct.Memory** %MEMORY

  %loadMem2_43b64a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b64a = load i64, i64* %3
  %call2_43b64a = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43b64a, %struct.Memory* %loadMem2_43b64a)
  store %struct.Memory* %call2_43b64a, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2048(%rbp)	 RIP: 43b64f	 Bytes: 7
  %loadMem_43b64f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b64f = call %struct.Memory* @routine_movq__rax__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b64f)
  store %struct.Memory* %call_43b64f, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43b656	 Bytes: 4
  %loadMem_43b656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b656 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b656)
  store %struct.Memory* %call_43b656, %struct.Memory** %MEMORY

  ; Code: jne .L_43b665	 RIP: 43b65a	 Bytes: 6
  %loadMem_43b65a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b65a = call %struct.Memory* @routine_jne_.L_43b665(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b65a, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b65a, %struct.Memory** %MEMORY

  %loadBr_43b65a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b65a = icmp eq i8 %loadBr_43b65a, 1
  br i1 %cmpBr_43b65a, label %block_.L_43b665, label %block_43b660

block_43b660:
  ; Code: jmpq .L_43b6bd	 RIP: 43b660	 Bytes: 5
  %loadMem_43b660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b660 = call %struct.Memory* @routine_jmpq_.L_43b6bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b660, i64 93, i64 5)
  store %struct.Memory* %call_43b660, %struct.Memory** %MEMORY

  br label %block_.L_43b6bd

  ; Code: .L_43b665:	 RIP: 43b665	 Bytes: 0
block_.L_43b665:

  ; Code: movq $0x459bf0, %rsi	 RIP: 43b665	 Bytes: 10
  %loadMem_43b665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b665 = call %struct.Memory* @routine_movq__0x459bf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b665)
  store %struct.Memory* %call_43b665, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %eax	 RIP: 43b66f	 Bytes: 5
  %loadMem_43b66f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b66f = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b66f)
  store %struct.Memory* %call_43b66f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43b674	 Bytes: 2
  %loadMem_43b674 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b674 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b674)
  store %struct.Memory* %call_43b674, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 43b676	 Bytes: 7
  %loadMem_43b676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b676 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b676)
  store %struct.Memory* %call_43b676, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 43b67d	 Bytes: 5
  %loadMem1_43b67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b67d = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b67d, i64 -238253, i64 5, i64 5)
  store %struct.Memory* %call1_43b67d, %struct.Memory** %MEMORY

  %loadMem2_43b67d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b67d = load i64, i64* %3
  %call2_43b67d = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_43b67d, %struct.Memory* %loadMem2_43b67d)
  store %struct.Memory* %call2_43b67d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b682	 Bytes: 3
  %loadMem_43b682 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b682 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b682)
  store %struct.Memory* %call_43b682, %struct.Memory** %MEMORY

  ; Code: jne .L_43b690	 RIP: 43b685	 Bytes: 6
  %loadMem_43b685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b685 = call %struct.Memory* @routine_jne_.L_43b690(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b685, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b685, %struct.Memory** %MEMORY

  %loadBr_43b685 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b685 = icmp eq i8 %loadBr_43b685, 1
  br i1 %cmpBr_43b685, label %block_.L_43b690, label %block_43b68b

block_43b68b:
  ; Code: jmpq .L_43b6bd	 RIP: 43b68b	 Bytes: 5
  %loadMem_43b68b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b68b = call %struct.Memory* @routine_jmpq_.L_43b6bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b68b, i64 50, i64 5)
  store %struct.Memory* %call_43b68b, %struct.Memory** %MEMORY

  br label %block_.L_43b6bd

  ; Code: .L_43b690:	 RIP: 43b690	 Bytes: 0
block_.L_43b690:

  ; Code: movq $0x662bc0, %rdi	 RIP: 43b690	 Bytes: 10
  %loadMem_43b690 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b690 = call %struct.Memory* @routine_movq__0x662bc0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b690)
  store %struct.Memory* %call_43b690, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rax	 RIP: 43b69a	 Bytes: 7
  %loadMem_43b69a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b69a = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b69a)
  store %struct.Memory* %call_43b69a, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %esi	 RIP: 43b6a1	 Bytes: 3
  %loadMem_43b6a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6a1 = call %struct.Memory* @routine_movsbl___rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6a1)
  store %struct.Memory* %call_43b6a1, %struct.Memory** %MEMORY

  ; Code: callq .strchr_plt	 RIP: 43b6a4	 Bytes: 5
  %loadMem1_43b6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b6a4 = call %struct.Memory* @routine_callq_.strchr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b6a4, i64 -238116, i64 5, i64 5)
  store %struct.Memory* %call1_43b6a4, %struct.Memory** %MEMORY

  %loadMem2_43b6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b6a4 = load i64, i64* %3
  %call2_43b6a4 = call %struct.Memory* @sub_401480.strchr_plt(%struct.State* %0, i64  %loadPC_43b6a4, %struct.Memory* %loadMem2_43b6a4)
  store %struct.Memory* %call2_43b6a4, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43b6a9	 Bytes: 4
  %loadMem_43b6a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6a9 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6a9)
  store %struct.Memory* %call_43b6a9, %struct.Memory** %MEMORY

  ; Code: jne .L_43b6b8	 RIP: 43b6ad	 Bytes: 6
  %loadMem_43b6ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6ad = call %struct.Memory* @routine_jne_.L_43b6b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6ad, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b6ad, %struct.Memory** %MEMORY

  %loadBr_43b6ad = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b6ad = icmp eq i8 %loadBr_43b6ad, 1
  br i1 %cmpBr_43b6ad, label %block_.L_43b6b8, label %block_43b6b3

block_43b6b3:
  ; Code: jmpq .L_43b6bd	 RIP: 43b6b3	 Bytes: 5
  %loadMem_43b6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6b3 = call %struct.Memory* @routine_jmpq_.L_43b6bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6b3, i64 10, i64 5)
  store %struct.Memory* %call_43b6b3, %struct.Memory** %MEMORY

  br label %block_.L_43b6bd

  ; Code: .L_43b6b8:	 RIP: 43b6b8	 Bytes: 0
block_.L_43b6b8:

  ; Code: jmpq .L_43b5d5	 RIP: 43b6b8	 Bytes: 5
  %loadMem_43b6b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6b8 = call %struct.Memory* @routine_jmpq_.L_43b5d5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6b8, i64 -227, i64 5)
  store %struct.Memory* %call_43b6b8, %struct.Memory** %MEMORY

  br label %block_.L_43b5d5

  ; Code: .L_43b6bd:	 RIP: 43b6bd	 Bytes: 0
block_.L_43b6bd:

  ; Code: jmpq .L_43b110	 RIP: 43b6bd	 Bytes: 5
  %loadMem_43b6bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6bd = call %struct.Memory* @routine_jmpq_.L_43b110(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6bd, i64 -1453, i64 5)
  store %struct.Memory* %call_43b6bd, %struct.Memory** %MEMORY

  br label %block_.L_43b110

  ; Code: .L_43b6c2:	 RIP: 43b6c2	 Bytes: 0
block_.L_43b6c2:

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b6c2	 Bytes: 7
  %loadMem_43b6c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6c2 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6c2)
  store %struct.Memory* %call_43b6c2, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b6c9	 Bytes: 7
  %loadMem_43b6c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6c9 = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6c9)
  store %struct.Memory* %call_43b6c9, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax,%rcx,8), %edx	 RIP: 43b6d0	 Bytes: 4
  %loadMem_43b6d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6d0 = call %struct.Memory* @routine_movl_0x4__rax__rcx_8____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6d0)
  store %struct.Memory* %call_43b6d0, %struct.Memory** %MEMORY

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43b6d4	 Bytes: 7
  %loadMem_43b6d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6d4 = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6d4)
  store %struct.Memory* %call_43b6d4, %struct.Memory** %MEMORY

  ; Code: movslq -0x2058(%rbp), %rcx	 RIP: 43b6db	 Bytes: 7
  %loadMem_43b6db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6db = call %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6db)
  store %struct.Memory* %call_43b6db, %struct.Memory** %MEMORY

  ; Code: subl (%rax,%rcx,8), %edx	 RIP: 43b6e2	 Bytes: 3
  %loadMem_43b6e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6e2 = call %struct.Memory* @routine_subl___rax__rcx_8____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6e2)
  store %struct.Memory* %call_43b6e2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %edx	 RIP: 43b6e5	 Bytes: 3
  %loadMem_43b6e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6e5 = call %struct.Memory* @routine_addl__0x1___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6e5)
  store %struct.Memory* %call_43b6e5, %struct.Memory** %MEMORY

  ; Code: addl -0x2070(%rbp), %edx	 RIP: 43b6e8	 Bytes: 6
  %loadMem_43b6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6e8 = call %struct.Memory* @routine_addl_MINUS0x2070__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6e8)
  store %struct.Memory* %call_43b6e8, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x2070(%rbp)	 RIP: 43b6ee	 Bytes: 6
  %loadMem_43b6ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6ee = call %struct.Memory* @routine_movl__edx__MINUS0x2070__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6ee)
  store %struct.Memory* %call_43b6ee, %struct.Memory** %MEMORY

  ; Code: .L_43b6f4:	 RIP: 43b6f4	 Bytes: 0
  br label %block_.L_43b6f4
block_.L_43b6f4:

  ; Code: movl $0x1000, %esi	 RIP: 43b6f4	 Bytes: 5
  %loadMem_43b6f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6f4 = call %struct.Memory* @routine_movl__0x1000___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6f4)
  store %struct.Memory* %call_43b6f4, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 43b6f9	 Bytes: 7
  %loadMem_43b6f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b6f9 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b6f9)
  store %struct.Memory* %call_43b6f9, %struct.Memory** %MEMORY

  ; Code: movq -0x20(%rbp), %rdx	 RIP: 43b700	 Bytes: 4
  %loadMem_43b700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b700 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b700)
  store %struct.Memory* %call_43b700, %struct.Memory** %MEMORY

  ; Code: callq .fgets_plt	 RIP: 43b704	 Bytes: 5
  %loadMem1_43b704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b704 = call %struct.Memory* @routine_callq_.fgets_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b704, i64 -238020, i64 5, i64 5)
  store %struct.Memory* %call1_43b704, %struct.Memory** %MEMORY

  %loadMem2_43b704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b704 = load i64, i64* %3
  %call2_43b704 = call %struct.Memory* @sub_401540.fgets_plt(%struct.State* %0, i64  %loadPC_43b704, %struct.Memory* %loadMem2_43b704)
  store %struct.Memory* %call2_43b704, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43b709	 Bytes: 4
  %loadMem_43b709 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b709 = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b709)
  store %struct.Memory* %call_43b709, %struct.Memory** %MEMORY

  ; Code: jne .L_43b718	 RIP: 43b70d	 Bytes: 6
  %loadMem_43b70d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b70d = call %struct.Memory* @routine_jne_.L_43b718(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b70d, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b70d, %struct.Memory** %MEMORY

  %loadBr_43b70d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b70d = icmp eq i8 %loadBr_43b70d, 1
  br i1 %cmpBr_43b70d, label %block_.L_43b718, label %block_43b713

block_43b713:
  ; Code: jmpq .L_43b7d1	 RIP: 43b713	 Bytes: 5
  %loadMem_43b713 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b713 = call %struct.Memory* @routine_jmpq_.L_43b7d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b713, i64 190, i64 5)
  store %struct.Memory* %call_43b713, %struct.Memory** %MEMORY

  br label %block_.L_43b7d1

  ; Code: .L_43b718:	 RIP: 43b718	 Bytes: 0
block_.L_43b718:

  ; Code: movq $0x45a1f5, %rsi	 RIP: 43b718	 Bytes: 10
  %loadMem_43b718 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b718 = call %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b718)
  store %struct.Memory* %call_43b718, %struct.Memory** %MEMORY

  ; Code: leaq -0x2030(%rbp), %rax	 RIP: 43b722	 Bytes: 7
  %loadMem_43b722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b722 = call %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b722)
  store %struct.Memory* %call_43b722, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rcx	 RIP: 43b729	 Bytes: 7
  %loadMem_43b729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b729 = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b729)
  store %struct.Memory* %call_43b729, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43b730	 Bytes: 3
  %loadMem_43b730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b730 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b730)
  store %struct.Memory* %call_43b730, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x2240(%rbp)	 RIP: 43b733	 Bytes: 7
  %loadMem_43b733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b733 = call %struct.Memory* @routine_movq__rsi__MINUS0x2240__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b733)
  store %struct.Memory* %call_43b733, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 43b73a	 Bytes: 3
  %loadMem_43b73a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b73a = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b73a)
  store %struct.Memory* %call_43b73a, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2248(%rbp)	 RIP: 43b73d	 Bytes: 7
  %loadMem_43b73d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b73d = call %struct.Memory* @routine_movq__rax__MINUS0x2248__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b73d)
  store %struct.Memory* %call_43b73d, %struct.Memory** %MEMORY

  ; Code: callq .strcpy_plt	 RIP: 43b744	 Bytes: 5
  %loadMem1_43b744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b744 = call %struct.Memory* @routine_callq_.strcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b744, i64 -238436, i64 5, i64 5)
  store %struct.Memory* %call1_43b744, %struct.Memory** %MEMORY

  %loadMem2_43b744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b744 = load i64, i64* %3
  %call2_43b744 = call %struct.Memory* @ext_strcpy(%struct.State* %0, i64  %loadPC_43b744, %struct.Memory* %loadMem2_43b744)
  store %struct.Memory* %call2_43b744, %struct.Memory** %MEMORY

  ; Code: movq -0x2248(%rbp), %rdi	 RIP: 43b749	 Bytes: 7
  %loadMem_43b749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b749 = call %struct.Memory* @routine_movq_MINUS0x2248__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b749)
  store %struct.Memory* %call_43b749, %struct.Memory** %MEMORY

  ; Code: movq -0x2240(%rbp), %rsi	 RIP: 43b750	 Bytes: 7
  %loadMem_43b750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b750 = call %struct.Memory* @routine_movq_MINUS0x2240__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b750)
  store %struct.Memory* %call_43b750, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2250(%rbp)	 RIP: 43b757	 Bytes: 7
  %loadMem_43b757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b757 = call %struct.Memory* @routine_movq__rax__MINUS0x2250__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b757)
  store %struct.Memory* %call_43b757, %struct.Memory** %MEMORY

  ; Code: callq .strtok_plt	 RIP: 43b75e	 Bytes: 5
  %loadMem1_43b75e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b75e = call %struct.Memory* @routine_callq_.strtok_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b75e, i64 -237822, i64 5, i64 5)
  store %struct.Memory* %call1_43b75e, %struct.Memory** %MEMORY

  %loadMem2_43b75e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b75e = load i64, i64* %3
  %call2_43b75e = call %struct.Memory* @sub_401660.strtok_plt(%struct.State* %0, i64  %loadPC_43b75e, %struct.Memory* %loadMem2_43b75e)
  store %struct.Memory* %call2_43b75e, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2048(%rbp)	 RIP: 43b763	 Bytes: 7
  %loadMem_43b763 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b763 = call %struct.Memory* @routine_movq__rax__MINUS0x2048__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b763)
  store %struct.Memory* %call_43b763, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43b76a	 Bytes: 4
  %loadMem_43b76a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b76a = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b76a)
  store %struct.Memory* %call_43b76a, %struct.Memory** %MEMORY

  ; Code: jne .L_43b779	 RIP: 43b76e	 Bytes: 6
  %loadMem_43b76e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b76e = call %struct.Memory* @routine_jne_.L_43b779(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b76e, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b76e, %struct.Memory** %MEMORY

  %loadBr_43b76e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b76e = icmp eq i8 %loadBr_43b76e, 1
  br i1 %cmpBr_43b76e, label %block_.L_43b779, label %block_43b774

block_43b774:
  ; Code: jmpq .L_43b6f4	 RIP: 43b774	 Bytes: 5
  %loadMem_43b774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b774 = call %struct.Memory* @routine_jmpq_.L_43b6f4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b774, i64 -128, i64 5)
  store %struct.Memory* %call_43b774, %struct.Memory** %MEMORY

  br label %block_.L_43b6f4

  ; Code: .L_43b779:	 RIP: 43b779	 Bytes: 0
block_.L_43b779:

  ; Code: movq $0x459bf0, %rsi	 RIP: 43b779	 Bytes: 10
  %loadMem_43b779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b779 = call %struct.Memory* @routine_movq__0x459bf0___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b779)
  store %struct.Memory* %call_43b779, %struct.Memory** %MEMORY

  ; Code: movl $0x2, %eax	 RIP: 43b783	 Bytes: 5
  %loadMem_43b783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b783 = call %struct.Memory* @routine_movl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b783)
  store %struct.Memory* %call_43b783, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43b788	 Bytes: 2
  %loadMem_43b788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b788 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b788)
  store %struct.Memory* %call_43b788, %struct.Memory** %MEMORY

  ; Code: leaq -0x1030(%rbp), %rdi	 RIP: 43b78a	 Bytes: 7
  %loadMem_43b78a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b78a = call %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b78a)
  store %struct.Memory* %call_43b78a, %struct.Memory** %MEMORY

  ; Code: callq .strncmp_plt	 RIP: 43b791	 Bytes: 5
  %loadMem1_43b791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b791 = call %struct.Memory* @routine_callq_.strncmp_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b791, i64 -238529, i64 5, i64 5)
  store %struct.Memory* %call1_43b791, %struct.Memory** %MEMORY

  %loadMem2_43b791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b791 = load i64, i64* %3
  %call2_43b791 = call %struct.Memory* @ext_strncmp(%struct.State* %0, i64  %loadPC_43b791, %struct.Memory* %loadMem2_43b791)
  store %struct.Memory* %call2_43b791, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43b796	 Bytes: 3
  %loadMem_43b796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b796 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b796)
  store %struct.Memory* %call_43b796, %struct.Memory** %MEMORY

  ; Code: jne .L_43b7a4	 RIP: 43b799	 Bytes: 6
  %loadMem_43b799 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b799 = call %struct.Memory* @routine_jne_.L_43b7a4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b799, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b799, %struct.Memory** %MEMORY

  %loadBr_43b799 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b799 = icmp eq i8 %loadBr_43b799, 1
  br i1 %cmpBr_43b799, label %block_.L_43b7a4, label %block_43b79f

block_43b79f:
  ; Code: jmpq .L_43b7d1	 RIP: 43b79f	 Bytes: 5
  %loadMem_43b79f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b79f = call %struct.Memory* @routine_jmpq_.L_43b7d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b79f, i64 50, i64 5)
  store %struct.Memory* %call_43b79f, %struct.Memory** %MEMORY

  br label %block_.L_43b7d1

  ; Code: .L_43b7a4:	 RIP: 43b7a4	 Bytes: 0
block_.L_43b7a4:

  ; Code: movq $0x662bc0, %rdi	 RIP: 43b7a4	 Bytes: 10
  %loadMem_43b7a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7a4 = call %struct.Memory* @routine_movq__0x662bc0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7a4)
  store %struct.Memory* %call_43b7a4, %struct.Memory** %MEMORY

  ; Code: movq -0x2048(%rbp), %rax	 RIP: 43b7ae	 Bytes: 7
  %loadMem_43b7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7ae = call %struct.Memory* @routine_movq_MINUS0x2048__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7ae)
  store %struct.Memory* %call_43b7ae, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %esi	 RIP: 43b7b5	 Bytes: 3
  %loadMem_43b7b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7b5 = call %struct.Memory* @routine_movsbl___rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7b5)
  store %struct.Memory* %call_43b7b5, %struct.Memory** %MEMORY

  ; Code: callq .strchr_plt	 RIP: 43b7b8	 Bytes: 5
  %loadMem1_43b7b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43b7b8 = call %struct.Memory* @routine_callq_.strchr_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43b7b8, i64 -238392, i64 5, i64 5)
  store %struct.Memory* %call1_43b7b8, %struct.Memory** %MEMORY

  %loadMem2_43b7b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43b7b8 = load i64, i64* %3
  %call2_43b7b8 = call %struct.Memory* @sub_401480.strchr_plt(%struct.State* %0, i64  %loadPC_43b7b8, %struct.Memory* %loadMem2_43b7b8)
  store %struct.Memory* %call2_43b7b8, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, %rax	 RIP: 43b7bd	 Bytes: 4
  %loadMem_43b7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7bd = call %struct.Memory* @routine_cmpq__0x0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7bd)
  store %struct.Memory* %call_43b7bd, %struct.Memory** %MEMORY

  ; Code: jne .L_43b7cc	 RIP: 43b7c1	 Bytes: 6
  %loadMem_43b7c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7c1 = call %struct.Memory* @routine_jne_.L_43b7cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7c1, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43b7c1, %struct.Memory** %MEMORY

  %loadBr_43b7c1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b7c1 = icmp eq i8 %loadBr_43b7c1, 1
  br i1 %cmpBr_43b7c1, label %block_.L_43b7cc, label %block_43b7c7

block_43b7c7:
  ; Code: jmpq .L_43b7d1	 RIP: 43b7c7	 Bytes: 5
  %loadMem_43b7c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7c7 = call %struct.Memory* @routine_jmpq_.L_43b7d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7c7, i64 10, i64 5)
  store %struct.Memory* %call_43b7c7, %struct.Memory** %MEMORY

  br label %block_.L_43b7d1

  ; Code: .L_43b7cc:	 RIP: 43b7cc	 Bytes: 0
block_.L_43b7cc:

  ; Code: jmpq .L_43b6f4	 RIP: 43b7cc	 Bytes: 5
  %loadMem_43b7cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7cc = call %struct.Memory* @routine_jmpq_.L_43b6f4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7cc, i64 -216, i64 5)
  store %struct.Memory* %call_43b7cc, %struct.Memory** %MEMORY

  br label %block_.L_43b6f4

  ; Code: .L_43b7d1:	 RIP: 43b7d1	 Bytes: 0
block_.L_43b7d1:

  ; Code: jmpq .L_43b7d6	 RIP: 43b7d1	 Bytes: 5
  %loadMem_43b7d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7d1 = call %struct.Memory* @routine_jmpq_.L_43b7d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7d1, i64 5, i64 5)
  store %struct.Memory* %call_43b7d1, %struct.Memory** %MEMORY

  br label %block_.L_43b7d6

  ; Code: .L_43b7d6:	 RIP: 43b7d6	 Bytes: 0
block_.L_43b7d6:

  ; Code: movl -0x2058(%rbp), %eax	 RIP: 43b7d6	 Bytes: 6
  %loadMem_43b7d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7d6 = call %struct.Memory* @routine_movl_MINUS0x2058__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7d6)
  store %struct.Memory* %call_43b7d6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43b7dc	 Bytes: 3
  %loadMem_43b7dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7dc = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7dc)
  store %struct.Memory* %call_43b7dc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2058(%rbp)	 RIP: 43b7df	 Bytes: 6
  %loadMem_43b7df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7df = call %struct.Memory* @routine_movl__eax__MINUS0x2058__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7df)
  store %struct.Memory* %call_43b7df, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b0f4	 RIP: 43b7e5	 Bytes: 5
  %loadMem_43b7e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7e5 = call %struct.Memory* @routine_jmpq_.L_43b0f4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7e5, i64 -1777, i64 5)
  store %struct.Memory* %call_43b7e5, %struct.Memory** %MEMORY

  br label %block_.L_43b0f4

  ; Code: .L_43b7ea:	 RIP: 43b7ea	 Bytes: 0
block_.L_43b7ea:

  ; Code: movl $0x0, -0x2060(%rbp)	 RIP: 43b7ea	 Bytes: 10
  %loadMem_43b7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7ea = call %struct.Memory* @routine_movl__0x0__MINUS0x2060__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7ea)
  store %struct.Memory* %call_43b7ea, %struct.Memory** %MEMORY

  ; Code: .L_43b7f4:	 RIP: 43b7f4	 Bytes: 0
  br label %block_.L_43b7f4
block_.L_43b7f4:

  ; Code: movl -0x2060(%rbp), %eax	 RIP: 43b7f4	 Bytes: 6
  %loadMem_43b7f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7f4 = call %struct.Memory* @routine_movl_MINUS0x2060__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7f4)
  store %struct.Memory* %call_43b7f4, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %eax	 RIP: 43b7fa	 Bytes: 3
  %loadMem_43b7fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7fa = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7fa)
  store %struct.Memory* %call_43b7fa, %struct.Memory** %MEMORY

  ; Code: jge .L_43bb80	 RIP: 43b7fd	 Bytes: 6
  %loadMem_43b7fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b7fd = call %struct.Memory* @routine_jge_.L_43bb80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b7fd, i8* %BRANCH_TAKEN, i64 899, i64 6, i64 6)
  store %struct.Memory* %call_43b7fd, %struct.Memory** %MEMORY

  %loadBr_43b7fd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b7fd = icmp eq i8 %loadBr_43b7fd, 1
  br i1 %cmpBr_43b7fd, label %block_.L_43bb80, label %block_43b803

block_43b803:
  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43b803	 Bytes: 7
  %loadMem_43b803 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b803 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b803)
  store %struct.Memory* %call_43b803, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43b80a	 Bytes: 4
  %loadMem_43b80a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b80a = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b80a)
  store %struct.Memory* %call_43b80a, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43b80e	 Bytes: 7
  %loadMem_43b80e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b80e = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b80e)
  store %struct.Memory* %call_43b80e, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43b815	 Bytes: 7
  %loadMem_43b815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b815 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b815)
  store %struct.Memory* %call_43b815, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43b81c	 Bytes: 3
  %loadMem_43b81c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b81c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b81c)
  store %struct.Memory* %call_43b81c, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 43b81f	 Bytes: 2
  %loadMem_43b81f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b81f = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b81f)
  store %struct.Memory* %call_43b81f, %struct.Memory** %MEMORY

  ; Code: andl $0x200, %edx	 RIP: 43b821	 Bytes: 6
  %loadMem_43b821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b821 = call %struct.Memory* @routine_andl__0x200___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b821)
  store %struct.Memory* %call_43b821, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 43b827	 Bytes: 3
  %loadMem_43b827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b827 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b827)
  store %struct.Memory* %call_43b827, %struct.Memory** %MEMORY

  ; Code: je .L_43b9b5	 RIP: 43b82a	 Bytes: 6
  %loadMem_43b82a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b82a = call %struct.Memory* @routine_je_.L_43b9b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b82a, i8* %BRANCH_TAKEN, i64 395, i64 6, i64 6)
  store %struct.Memory* %call_43b82a, %struct.Memory** %MEMORY

  %loadBr_43b82a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b82a = icmp eq i8 %loadBr_43b82a, 1
  br i1 %cmpBr_43b82a, label %block_.L_43b9b5, label %block_43b830

block_43b830:
  ; Code: movl $0x0, -0x20f8(%rbp)	 RIP: 43b830	 Bytes: 10
  %loadMem_43b830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b830 = call %struct.Memory* @routine_movl__0x0__MINUS0x20f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b830)
  store %struct.Memory* %call_43b830, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x20f4(%rbp)	 RIP: 43b83a	 Bytes: 10
  %loadMem_43b83a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b83a = call %struct.Memory* @routine_movl__0x0__MINUS0x20f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b83a)
  store %struct.Memory* %call_43b83a, %struct.Memory** %MEMORY

  ; Code: .L_43b844:	 RIP: 43b844	 Bytes: 0
  br label %block_.L_43b844
block_.L_43b844:

  ; Code: movl -0x20f4(%rbp), %eax	 RIP: 43b844	 Bytes: 6
  %loadMem_43b844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b844 = call %struct.Memory* @routine_movl_MINUS0x20f4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b844)
  store %struct.Memory* %call_43b844, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2064(%rbp), %eax	 RIP: 43b84a	 Bytes: 6
  %loadMem_43b84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b84a = call %struct.Memory* @routine_cmpl_MINUS0x2064__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b84a)
  store %struct.Memory* %call_43b84a, %struct.Memory** %MEMORY

  ; Code: jge .L_43b987	 RIP: 43b850	 Bytes: 6
  %loadMem_43b850 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b850 = call %struct.Memory* @routine_jge_.L_43b987(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b850, i8* %BRANCH_TAKEN, i64 311, i64 6, i64 6)
  store %struct.Memory* %call_43b850, %struct.Memory** %MEMORY

  %loadBr_43b850 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b850 = icmp eq i8 %loadBr_43b850, 1
  br i1 %cmpBr_43b850, label %block_.L_43b987, label %block_43b856

block_43b856:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43b856	 Bytes: 4
  %loadMem_43b856 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b856 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b856)
  store %struct.Memory* %call_43b856, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43b85a	 Bytes: 7
  %loadMem_43b85a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b85a = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b85a)
  store %struct.Memory* %call_43b85a, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43b861	 Bytes: 4
  %loadMem_43b861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b861 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b861)
  store %struct.Memory* %call_43b861, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43b865	 Bytes: 7
  %loadMem_43b865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b865 = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b865)
  store %struct.Memory* %call_43b865, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %edx	 RIP: 43b86c	 Bytes: 4
  %loadMem_43b86c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b86c = call %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b86c)
  store %struct.Memory* %call_43b86c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x20, %edx	 RIP: 43b870	 Bytes: 3
  %loadMem_43b870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b870 = call %struct.Memory* @routine_cmpl__0x20___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b870)
  store %struct.Memory* %call_43b870, %struct.Memory** %MEMORY

  ; Code: je .L_43b96e	 RIP: 43b873	 Bytes: 6
  %loadMem_43b873 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b873 = call %struct.Memory* @routine_je_.L_43b96e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b873, i8* %BRANCH_TAKEN, i64 251, i64 6, i64 6)
  store %struct.Memory* %call_43b873, %struct.Memory** %MEMORY

  %loadBr_43b873 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b873 = icmp eq i8 %loadBr_43b873, 1
  br i1 %cmpBr_43b873, label %block_.L_43b96e, label %block_43b879

block_43b879:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43b879	 Bytes: 4
  %loadMem_43b879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b879 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b879)
  store %struct.Memory* %call_43b879, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43b87d	 Bytes: 7
  %loadMem_43b87d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b87d = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b87d)
  store %struct.Memory* %call_43b87d, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43b884	 Bytes: 4
  %loadMem_43b884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b884 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b884)
  store %struct.Memory* %call_43b884, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43b888	 Bytes: 7
  %loadMem_43b888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b888 = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b888)
  store %struct.Memory* %call_43b888, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %edx	 RIP: 43b88f	 Bytes: 4
  %loadMem_43b88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b88f = call %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b88f)
  store %struct.Memory* %call_43b88f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2e, %edx	 RIP: 43b893	 Bytes: 3
  %loadMem_43b893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b893 = call %struct.Memory* @routine_cmpl__0x2e___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b893)
  store %struct.Memory* %call_43b893, %struct.Memory** %MEMORY

  ; Code: je .L_43b96e	 RIP: 43b896	 Bytes: 6
  %loadMem_43b896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b896 = call %struct.Memory* @routine_je_.L_43b96e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b896, i8* %BRANCH_TAKEN, i64 216, i64 6, i64 6)
  store %struct.Memory* %call_43b896, %struct.Memory** %MEMORY

  %loadBr_43b896 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b896 = icmp eq i8 %loadBr_43b896, 1
  br i1 %cmpBr_43b896, label %block_.L_43b96e, label %block_43b89c

block_43b89c:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43b89c	 Bytes: 4
  %loadMem_43b89c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b89c = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b89c)
  store %struct.Memory* %call_43b89c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43b8a0	 Bytes: 7
  %loadMem_43b8a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8a0 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8a0)
  store %struct.Memory* %call_43b8a0, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43b8a7	 Bytes: 4
  %loadMem_43b8a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8a7 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8a7)
  store %struct.Memory* %call_43b8a7, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43b8ab	 Bytes: 7
  %loadMem_43b8ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8ab = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8ab)
  store %struct.Memory* %call_43b8ab, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %edx	 RIP: 43b8b2	 Bytes: 4
  %loadMem_43b8b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8b2 = call %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8b2)
  store %struct.Memory* %call_43b8b2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5f, %edx	 RIP: 43b8b6	 Bytes: 3
  %loadMem_43b8b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8b6 = call %struct.Memory* @routine_cmpl__0x5f___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8b6)
  store %struct.Memory* %call_43b8b6, %struct.Memory** %MEMORY

  ; Code: je .L_43b96e	 RIP: 43b8b9	 Bytes: 6
  %loadMem_43b8b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8b9 = call %struct.Memory* @routine_je_.L_43b96e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8b9, i8* %BRANCH_TAKEN, i64 181, i64 6, i64 6)
  store %struct.Memory* %call_43b8b9, %struct.Memory** %MEMORY

  %loadBr_43b8b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b8b9 = icmp eq i8 %loadBr_43b8b9, 1
  br i1 %cmpBr_43b8b9, label %block_.L_43b96e, label %block_43b8bf

block_43b8bf:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43b8bf	 Bytes: 4
  %loadMem_43b8bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8bf = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8bf)
  store %struct.Memory* %call_43b8bf, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43b8c3	 Bytes: 7
  %loadMem_43b8c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8c3 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8c3)
  store %struct.Memory* %call_43b8c3, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43b8ca	 Bytes: 4
  %loadMem_43b8ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8ca = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8ca)
  store %struct.Memory* %call_43b8ca, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43b8ce	 Bytes: 7
  %loadMem_43b8ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8ce = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8ce)
  store %struct.Memory* %call_43b8ce, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %edx	 RIP: 43b8d5	 Bytes: 4
  %loadMem_43b8d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8d5 = call %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8d5)
  store %struct.Memory* %call_43b8d5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2d, %edx	 RIP: 43b8d9	 Bytes: 3
  %loadMem_43b8d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8d9 = call %struct.Memory* @routine_cmpl__0x2d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8d9)
  store %struct.Memory* %call_43b8d9, %struct.Memory** %MEMORY

  ; Code: je .L_43b96e	 RIP: 43b8dc	 Bytes: 6
  %loadMem_43b8dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8dc = call %struct.Memory* @routine_je_.L_43b96e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8dc, i8* %BRANCH_TAKEN, i64 146, i64 6, i64 6)
  store %struct.Memory* %call_43b8dc, %struct.Memory** %MEMORY

  %loadBr_43b8dc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b8dc = icmp eq i8 %loadBr_43b8dc, 1
  br i1 %cmpBr_43b8dc, label %block_.L_43b96e, label %block_43b8e2

block_43b8e2:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43b8e2	 Bytes: 4
  %loadMem_43b8e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8e2 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8e2)
  store %struct.Memory* %call_43b8e2, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43b8e6	 Bytes: 7
  %loadMem_43b8e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8e6 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8e6)
  store %struct.Memory* %call_43b8e6, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43b8ed	 Bytes: 4
  %loadMem_43b8ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8ed = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8ed)
  store %struct.Memory* %call_43b8ed, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43b8f1	 Bytes: 7
  %loadMem_43b8f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8f1 = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8f1)
  store %struct.Memory* %call_43b8f1, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %edx	 RIP: 43b8f8	 Bytes: 4
  %loadMem_43b8f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8f8 = call %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8f8)
  store %struct.Memory* %call_43b8f8, %struct.Memory** %MEMORY

  ; Code: cmpl $0x7e, %edx	 RIP: 43b8fc	 Bytes: 3
  %loadMem_43b8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8fc = call %struct.Memory* @routine_cmpl__0x7e___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8fc)
  store %struct.Memory* %call_43b8fc, %struct.Memory** %MEMORY

  ; Code: je .L_43b96e	 RIP: 43b8ff	 Bytes: 6
  %loadMem_43b8ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b8ff = call %struct.Memory* @routine_je_.L_43b96e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b8ff, i8* %BRANCH_TAKEN, i64 111, i64 6, i64 6)
  store %struct.Memory* %call_43b8ff, %struct.Memory** %MEMORY

  %loadBr_43b8ff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b8ff = icmp eq i8 %loadBr_43b8ff, 1
  br i1 %cmpBr_43b8ff, label %block_.L_43b96e, label %block_43b905

block_43b905:
  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43b905	 Bytes: 7
  %loadMem_43b905 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b905 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b905)
  store %struct.Memory* %call_43b905, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43b90c	 Bytes: 4
  %loadMem_43b90c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b90c = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b90c)
  store %struct.Memory* %call_43b90c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43b910	 Bytes: 7
  %loadMem_43b910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b910 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b910)
  store %struct.Memory* %call_43b910, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43b917	 Bytes: 7
  %loadMem_43b917 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b917 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b917)
  store %struct.Memory* %call_43b917, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43b91e	 Bytes: 3
  %loadMem_43b91e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b91e = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b91e)
  store %struct.Memory* %call_43b91e, %struct.Memory** %MEMORY

  ; Code: movq 0x158(%rax), %rax	 RIP: 43b921	 Bytes: 7
  %loadMem_43b921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b921 = call %struct.Memory* @routine_movq_0x158__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b921)
  store %struct.Memory* %call_43b921, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43b928	 Bytes: 7
  %loadMem_43b928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b928 = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b928)
  store %struct.Memory* %call_43b928, %struct.Memory** %MEMORY

  ; Code: movb (%rax,%rcx,1), %dl	 RIP: 43b92f	 Bytes: 3
  %loadMem_43b92f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b92f = call %struct.Memory* @routine_movb___rax__rcx_1____dl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b92f)
  store %struct.Memory* %call_43b92f, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43b932	 Bytes: 7
  %loadMem_43b932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b932 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b932)
  store %struct.Memory* %call_43b932, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43b939	 Bytes: 4
  %loadMem_43b939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b939 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b939)
  store %struct.Memory* %call_43b939, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43b93d	 Bytes: 7
  %loadMem_43b93d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b93d = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b93d)
  store %struct.Memory* %call_43b93d, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43b944	 Bytes: 7
  %loadMem_43b944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b944 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b944)
  store %struct.Memory* %call_43b944, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43b94b	 Bytes: 3
  %loadMem_43b94b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b94b = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b94b)
  store %struct.Memory* %call_43b94b, %struct.Memory** %MEMORY

  ; Code: movq 0x158(%rax), %rax	 RIP: 43b94e	 Bytes: 7
  %loadMem_43b94e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b94e = call %struct.Memory* @routine_movq_0x158__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b94e)
  store %struct.Memory* %call_43b94e, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f8(%rbp), %rcx	 RIP: 43b955	 Bytes: 7
  %loadMem_43b955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b955 = call %struct.Memory* @routine_movslq_MINUS0x20f8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b955)
  store %struct.Memory* %call_43b955, %struct.Memory** %MEMORY

  ; Code: movb %dl, (%rax,%rcx,1)	 RIP: 43b95c	 Bytes: 3
  %loadMem_43b95c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b95c = call %struct.Memory* @routine_movb__dl____rax__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b95c)
  store %struct.Memory* %call_43b95c, %struct.Memory** %MEMORY

  ; Code: movl -0x20f8(%rbp), %esi	 RIP: 43b95f	 Bytes: 6
  %loadMem_43b95f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b95f = call %struct.Memory* @routine_movl_MINUS0x20f8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b95f)
  store %struct.Memory* %call_43b95f, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 43b965	 Bytes: 3
  %loadMem_43b965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b965 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b965)
  store %struct.Memory* %call_43b965, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x20f8(%rbp)	 RIP: 43b968	 Bytes: 6
  %loadMem_43b968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b968 = call %struct.Memory* @routine_movl__esi__MINUS0x20f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b968)
  store %struct.Memory* %call_43b968, %struct.Memory** %MEMORY

  ; Code: .L_43b96e:	 RIP: 43b96e	 Bytes: 0
  br label %block_.L_43b96e
block_.L_43b96e:

  ; Code: jmpq .L_43b973	 RIP: 43b96e	 Bytes: 5
  %loadMem_43b96e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b96e = call %struct.Memory* @routine_jmpq_.L_43b973(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b96e, i64 5, i64 5)
  store %struct.Memory* %call_43b96e, %struct.Memory** %MEMORY

  br label %block_.L_43b973

  ; Code: .L_43b973:	 RIP: 43b973	 Bytes: 0
block_.L_43b973:

  ; Code: movl -0x20f4(%rbp), %eax	 RIP: 43b973	 Bytes: 6
  %loadMem_43b973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b973 = call %struct.Memory* @routine_movl_MINUS0x20f4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b973)
  store %struct.Memory* %call_43b973, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43b979	 Bytes: 3
  %loadMem_43b979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b979 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b979)
  store %struct.Memory* %call_43b979, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20f4(%rbp)	 RIP: 43b97c	 Bytes: 6
  %loadMem_43b97c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b97c = call %struct.Memory* @routine_movl__eax__MINUS0x20f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b97c)
  store %struct.Memory* %call_43b97c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b844	 RIP: 43b982	 Bytes: 5
  %loadMem_43b982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b982 = call %struct.Memory* @routine_jmpq_.L_43b844(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b982, i64 -318, i64 5)
  store %struct.Memory* %call_43b982, %struct.Memory** %MEMORY

  br label %block_.L_43b844

  ; Code: .L_43b987:	 RIP: 43b987	 Bytes: 0
block_.L_43b987:

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43b987	 Bytes: 7
  %loadMem_43b987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b987 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b987)
  store %struct.Memory* %call_43b987, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43b98e	 Bytes: 4
  %loadMem_43b98e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b98e = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b98e)
  store %struct.Memory* %call_43b98e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43b992	 Bytes: 7
  %loadMem_43b992 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b992 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b992)
  store %struct.Memory* %call_43b992, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43b999	 Bytes: 7
  %loadMem_43b999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b999 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b999)
  store %struct.Memory* %call_43b999, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43b9a0	 Bytes: 3
  %loadMem_43b9a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9a0 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9a0)
  store %struct.Memory* %call_43b9a0, %struct.Memory** %MEMORY

  ; Code: movq 0x158(%rax), %rax	 RIP: 43b9a3	 Bytes: 7
  %loadMem_43b9a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9a3 = call %struct.Memory* @routine_movq_0x158__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9a3)
  store %struct.Memory* %call_43b9a3, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f8(%rbp), %rcx	 RIP: 43b9aa	 Bytes: 7
  %loadMem_43b9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9aa = call %struct.Memory* @routine_movslq_MINUS0x20f8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9aa)
  store %struct.Memory* %call_43b9aa, %struct.Memory** %MEMORY

  ; Code: movb $0x0, (%rax,%rcx,1)	 RIP: 43b9b1	 Bytes: 4
  %loadMem_43b9b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9b1 = call %struct.Memory* @routine_movb__0x0____rax__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9b1)
  store %struct.Memory* %call_43b9b1, %struct.Memory** %MEMORY

  ; Code: .L_43b9b5:	 RIP: 43b9b5	 Bytes: 0
  br label %block_.L_43b9b5
block_.L_43b9b5:

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43b9b5	 Bytes: 7
  %loadMem_43b9b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9b5 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9b5)
  store %struct.Memory* %call_43b9b5, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43b9bc	 Bytes: 4
  %loadMem_43b9bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9bc = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9bc)
  store %struct.Memory* %call_43b9bc, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43b9c0	 Bytes: 7
  %loadMem_43b9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9c0 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9c0)
  store %struct.Memory* %call_43b9c0, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43b9c7	 Bytes: 7
  %loadMem_43b9c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9c7 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9c7)
  store %struct.Memory* %call_43b9c7, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43b9ce	 Bytes: 3
  %loadMem_43b9ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9ce = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9ce)
  store %struct.Memory* %call_43b9ce, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 43b9d1	 Bytes: 2
  %loadMem_43b9d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9d1 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9d1)
  store %struct.Memory* %call_43b9d1, %struct.Memory** %MEMORY

  ; Code: andl $0x400, %edx	 RIP: 43b9d3	 Bytes: 6
  %loadMem_43b9d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9d3 = call %struct.Memory* @routine_andl__0x400___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9d3)
  store %struct.Memory* %call_43b9d3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %edx	 RIP: 43b9d9	 Bytes: 3
  %loadMem_43b9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9d9 = call %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9d9)
  store %struct.Memory* %call_43b9d9, %struct.Memory** %MEMORY

  ; Code: je .L_43bb67	 RIP: 43b9dc	 Bytes: 6
  %loadMem_43b9dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9dc = call %struct.Memory* @routine_je_.L_43bb67(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9dc, i8* %BRANCH_TAKEN, i64 395, i64 6, i64 6)
  store %struct.Memory* %call_43b9dc, %struct.Memory** %MEMORY

  %loadBr_43b9dc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43b9dc = icmp eq i8 %loadBr_43b9dc, 1
  br i1 %cmpBr_43b9dc, label %block_.L_43bb67, label %block_43b9e2

block_43b9e2:
  ; Code: movl $0x0, -0x20f8(%rbp)	 RIP: 43b9e2	 Bytes: 10
  %loadMem_43b9e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9e2 = call %struct.Memory* @routine_movl__0x0__MINUS0x20f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9e2)
  store %struct.Memory* %call_43b9e2, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x20f4(%rbp)	 RIP: 43b9ec	 Bytes: 10
  %loadMem_43b9ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9ec = call %struct.Memory* @routine_movl__0x0__MINUS0x20f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9ec)
  store %struct.Memory* %call_43b9ec, %struct.Memory** %MEMORY

  ; Code: .L_43b9f6:	 RIP: 43b9f6	 Bytes: 0
  br label %block_.L_43b9f6
block_.L_43b9f6:

  ; Code: movl -0x20f4(%rbp), %eax	 RIP: 43b9f6	 Bytes: 6
  %loadMem_43b9f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9f6 = call %struct.Memory* @routine_movl_MINUS0x20f4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9f6)
  store %struct.Memory* %call_43b9f6, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2064(%rbp), %eax	 RIP: 43b9fc	 Bytes: 6
  %loadMem_43b9fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43b9fc = call %struct.Memory* @routine_cmpl_MINUS0x2064__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43b9fc)
  store %struct.Memory* %call_43b9fc, %struct.Memory** %MEMORY

  ; Code: jge .L_43bb39	 RIP: 43ba02	 Bytes: 6
  %loadMem_43ba02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba02 = call %struct.Memory* @routine_jge_.L_43bb39(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba02, i8* %BRANCH_TAKEN, i64 311, i64 6, i64 6)
  store %struct.Memory* %call_43ba02, %struct.Memory** %MEMORY

  %loadBr_43ba02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ba02 = icmp eq i8 %loadBr_43ba02, 1
  br i1 %cmpBr_43ba02, label %block_.L_43bb39, label %block_43ba08

block_43ba08:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43ba08	 Bytes: 4
  %loadMem_43ba08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba08 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba08)
  store %struct.Memory* %call_43ba08, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43ba0c	 Bytes: 7
  %loadMem_43ba0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba0c = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba0c)
  store %struct.Memory* %call_43ba0c, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43ba13	 Bytes: 4
  %loadMem_43ba13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba13 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba13)
  store %struct.Memory* %call_43ba13, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43ba17	 Bytes: 7
  %loadMem_43ba17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba17 = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba17)
  store %struct.Memory* %call_43ba17, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %edx	 RIP: 43ba1e	 Bytes: 4
  %loadMem_43ba1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba1e = call %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba1e)
  store %struct.Memory* %call_43ba1e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x20, %edx	 RIP: 43ba22	 Bytes: 3
  %loadMem_43ba22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba22 = call %struct.Memory* @routine_cmpl__0x20___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba22)
  store %struct.Memory* %call_43ba22, %struct.Memory** %MEMORY

  ; Code: je .L_43bb20	 RIP: 43ba25	 Bytes: 6
  %loadMem_43ba25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba25 = call %struct.Memory* @routine_je_.L_43bb20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba25, i8* %BRANCH_TAKEN, i64 251, i64 6, i64 6)
  store %struct.Memory* %call_43ba25, %struct.Memory** %MEMORY

  %loadBr_43ba25 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ba25 = icmp eq i8 %loadBr_43ba25, 1
  br i1 %cmpBr_43ba25, label %block_.L_43bb20, label %block_43ba2b

block_43ba2b:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43ba2b	 Bytes: 4
  %loadMem_43ba2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba2b = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba2b)
  store %struct.Memory* %call_43ba2b, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43ba2f	 Bytes: 7
  %loadMem_43ba2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba2f = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba2f)
  store %struct.Memory* %call_43ba2f, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43ba36	 Bytes: 4
  %loadMem_43ba36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba36 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba36)
  store %struct.Memory* %call_43ba36, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43ba3a	 Bytes: 7
  %loadMem_43ba3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba3a = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba3a)
  store %struct.Memory* %call_43ba3a, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %edx	 RIP: 43ba41	 Bytes: 4
  %loadMem_43ba41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba41 = call %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba41)
  store %struct.Memory* %call_43ba41, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2e, %edx	 RIP: 43ba45	 Bytes: 3
  %loadMem_43ba45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba45 = call %struct.Memory* @routine_cmpl__0x2e___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba45)
  store %struct.Memory* %call_43ba45, %struct.Memory** %MEMORY

  ; Code: je .L_43bb20	 RIP: 43ba48	 Bytes: 6
  %loadMem_43ba48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba48 = call %struct.Memory* @routine_je_.L_43bb20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba48, i8* %BRANCH_TAKEN, i64 216, i64 6, i64 6)
  store %struct.Memory* %call_43ba48, %struct.Memory** %MEMORY

  %loadBr_43ba48 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ba48 = icmp eq i8 %loadBr_43ba48, 1
  br i1 %cmpBr_43ba48, label %block_.L_43bb20, label %block_43ba4e

block_43ba4e:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43ba4e	 Bytes: 4
  %loadMem_43ba4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba4e = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba4e)
  store %struct.Memory* %call_43ba4e, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43ba52	 Bytes: 7
  %loadMem_43ba52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba52 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba52)
  store %struct.Memory* %call_43ba52, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43ba59	 Bytes: 4
  %loadMem_43ba59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba59 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba59)
  store %struct.Memory* %call_43ba59, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43ba5d	 Bytes: 7
  %loadMem_43ba5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba5d = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba5d)
  store %struct.Memory* %call_43ba5d, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %edx	 RIP: 43ba64	 Bytes: 4
  %loadMem_43ba64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba64 = call %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba64)
  store %struct.Memory* %call_43ba64, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5f, %edx	 RIP: 43ba68	 Bytes: 3
  %loadMem_43ba68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba68 = call %struct.Memory* @routine_cmpl__0x5f___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba68)
  store %struct.Memory* %call_43ba68, %struct.Memory** %MEMORY

  ; Code: je .L_43bb20	 RIP: 43ba6b	 Bytes: 6
  %loadMem_43ba6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba6b = call %struct.Memory* @routine_je_.L_43bb20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba6b, i8* %BRANCH_TAKEN, i64 181, i64 6, i64 6)
  store %struct.Memory* %call_43ba6b, %struct.Memory** %MEMORY

  %loadBr_43ba6b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ba6b = icmp eq i8 %loadBr_43ba6b, 1
  br i1 %cmpBr_43ba6b, label %block_.L_43bb20, label %block_43ba71

block_43ba71:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43ba71	 Bytes: 4
  %loadMem_43ba71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba71 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba71)
  store %struct.Memory* %call_43ba71, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43ba75	 Bytes: 7
  %loadMem_43ba75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba75 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba75)
  store %struct.Memory* %call_43ba75, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43ba7c	 Bytes: 4
  %loadMem_43ba7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba7c = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba7c)
  store %struct.Memory* %call_43ba7c, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43ba80	 Bytes: 7
  %loadMem_43ba80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba80 = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba80)
  store %struct.Memory* %call_43ba80, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %edx	 RIP: 43ba87	 Bytes: 4
  %loadMem_43ba87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba87 = call %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba87)
  store %struct.Memory* %call_43ba87, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2d, %edx	 RIP: 43ba8b	 Bytes: 3
  %loadMem_43ba8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba8b = call %struct.Memory* @routine_cmpl__0x2d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba8b)
  store %struct.Memory* %call_43ba8b, %struct.Memory** %MEMORY

  ; Code: je .L_43bb20	 RIP: 43ba8e	 Bytes: 6
  %loadMem_43ba8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba8e = call %struct.Memory* @routine_je_.L_43bb20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba8e, i8* %BRANCH_TAKEN, i64 146, i64 6, i64 6)
  store %struct.Memory* %call_43ba8e, %struct.Memory** %MEMORY

  %loadBr_43ba8e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ba8e = icmp eq i8 %loadBr_43ba8e, 1
  br i1 %cmpBr_43ba8e, label %block_.L_43bb20, label %block_43ba94

block_43ba94:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43ba94	 Bytes: 4
  %loadMem_43ba94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba94 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba94)
  store %struct.Memory* %call_43ba94, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43ba98	 Bytes: 7
  %loadMem_43ba98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba98 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba98)
  store %struct.Memory* %call_43ba98, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43ba9f	 Bytes: 4
  %loadMem_43ba9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ba9f = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ba9f)
  store %struct.Memory* %call_43ba9f, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43baa3	 Bytes: 7
  %loadMem_43baa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43baa3 = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43baa3)
  store %struct.Memory* %call_43baa3, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %edx	 RIP: 43baaa	 Bytes: 4
  %loadMem_43baaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43baaa = call %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43baaa)
  store %struct.Memory* %call_43baaa, %struct.Memory** %MEMORY

  ; Code: cmpl $0x7e, %edx	 RIP: 43baae	 Bytes: 3
  %loadMem_43baae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43baae = call %struct.Memory* @routine_cmpl__0x7e___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43baae)
  store %struct.Memory* %call_43baae, %struct.Memory** %MEMORY

  ; Code: je .L_43bb20	 RIP: 43bab1	 Bytes: 6
  %loadMem_43bab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bab1 = call %struct.Memory* @routine_je_.L_43bb20(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bab1, i8* %BRANCH_TAKEN, i64 111, i64 6, i64 6)
  store %struct.Memory* %call_43bab1, %struct.Memory** %MEMORY

  %loadBr_43bab1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bab1 = icmp eq i8 %loadBr_43bab1, 1
  br i1 %cmpBr_43bab1, label %block_.L_43bb20, label %block_43bab7

block_43bab7:
  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43bab7	 Bytes: 7
  %loadMem_43bab7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bab7 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bab7)
  store %struct.Memory* %call_43bab7, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43babe	 Bytes: 4
  %loadMem_43babe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43babe = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43babe)
  store %struct.Memory* %call_43babe, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43bac2	 Bytes: 7
  %loadMem_43bac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bac2 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bac2)
  store %struct.Memory* %call_43bac2, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43bac9	 Bytes: 7
  %loadMem_43bac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bac9 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bac9)
  store %struct.Memory* %call_43bac9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43bad0	 Bytes: 3
  %loadMem_43bad0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bad0 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bad0)
  store %struct.Memory* %call_43bad0, %struct.Memory** %MEMORY

  ; Code: movq 0x160(%rax), %rax	 RIP: 43bad3	 Bytes: 7
  %loadMem_43bad3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bad3 = call %struct.Memory* @routine_movq_0x160__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bad3)
  store %struct.Memory* %call_43bad3, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f4(%rbp), %rcx	 RIP: 43bada	 Bytes: 7
  %loadMem_43bada = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bada = call %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bada)
  store %struct.Memory* %call_43bada, %struct.Memory** %MEMORY

  ; Code: movb (%rax,%rcx,1), %dl	 RIP: 43bae1	 Bytes: 3
  %loadMem_43bae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bae1 = call %struct.Memory* @routine_movb___rax__rcx_1____dl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bae1)
  store %struct.Memory* %call_43bae1, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43bae4	 Bytes: 7
  %loadMem_43bae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bae4 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bae4)
  store %struct.Memory* %call_43bae4, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43baeb	 Bytes: 4
  %loadMem_43baeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43baeb = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43baeb)
  store %struct.Memory* %call_43baeb, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43baef	 Bytes: 7
  %loadMem_43baef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43baef = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43baef)
  store %struct.Memory* %call_43baef, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43baf6	 Bytes: 7
  %loadMem_43baf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43baf6 = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43baf6)
  store %struct.Memory* %call_43baf6, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43bafd	 Bytes: 3
  %loadMem_43bafd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bafd = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bafd)
  store %struct.Memory* %call_43bafd, %struct.Memory** %MEMORY

  ; Code: movq 0x160(%rax), %rax	 RIP: 43bb00	 Bytes: 7
  %loadMem_43bb00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb00 = call %struct.Memory* @routine_movq_0x160__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb00)
  store %struct.Memory* %call_43bb00, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f8(%rbp), %rcx	 RIP: 43bb07	 Bytes: 7
  %loadMem_43bb07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb07 = call %struct.Memory* @routine_movslq_MINUS0x20f8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb07)
  store %struct.Memory* %call_43bb07, %struct.Memory** %MEMORY

  ; Code: movb %dl, (%rax,%rcx,1)	 RIP: 43bb0e	 Bytes: 3
  %loadMem_43bb0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb0e = call %struct.Memory* @routine_movb__dl____rax__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb0e)
  store %struct.Memory* %call_43bb0e, %struct.Memory** %MEMORY

  ; Code: movl -0x20f8(%rbp), %esi	 RIP: 43bb11	 Bytes: 6
  %loadMem_43bb11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb11 = call %struct.Memory* @routine_movl_MINUS0x20f8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb11)
  store %struct.Memory* %call_43bb11, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %esi	 RIP: 43bb17	 Bytes: 3
  %loadMem_43bb17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb17 = call %struct.Memory* @routine_addl__0x1___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb17)
  store %struct.Memory* %call_43bb17, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x20f8(%rbp)	 RIP: 43bb1a	 Bytes: 6
  %loadMem_43bb1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb1a = call %struct.Memory* @routine_movl__esi__MINUS0x20f8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb1a)
  store %struct.Memory* %call_43bb1a, %struct.Memory** %MEMORY

  ; Code: .L_43bb20:	 RIP: 43bb20	 Bytes: 0
  br label %block_.L_43bb20
block_.L_43bb20:

  ; Code: jmpq .L_43bb25	 RIP: 43bb20	 Bytes: 5
  %loadMem_43bb20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb20 = call %struct.Memory* @routine_jmpq_.L_43bb25(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb20, i64 5, i64 5)
  store %struct.Memory* %call_43bb20, %struct.Memory** %MEMORY

  br label %block_.L_43bb25

  ; Code: .L_43bb25:	 RIP: 43bb25	 Bytes: 0
block_.L_43bb25:

  ; Code: movl -0x20f4(%rbp), %eax	 RIP: 43bb25	 Bytes: 6
  %loadMem_43bb25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb25 = call %struct.Memory* @routine_movl_MINUS0x20f4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb25)
  store %struct.Memory* %call_43bb25, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43bb2b	 Bytes: 3
  %loadMem_43bb2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb2b = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb2b)
  store %struct.Memory* %call_43bb2b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x20f4(%rbp)	 RIP: 43bb2e	 Bytes: 6
  %loadMem_43bb2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb2e = call %struct.Memory* @routine_movl__eax__MINUS0x20f4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb2e)
  store %struct.Memory* %call_43bb2e, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b9f6	 RIP: 43bb34	 Bytes: 5
  %loadMem_43bb34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb34 = call %struct.Memory* @routine_jmpq_.L_43b9f6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb34, i64 -318, i64 5)
  store %struct.Memory* %call_43bb34, %struct.Memory** %MEMORY

  br label %block_.L_43b9f6

  ; Code: .L_43bb39:	 RIP: 43bb39	 Bytes: 0
block_.L_43bb39:

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43bb39	 Bytes: 7
  %loadMem_43bb39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb39 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb39)
  store %struct.Memory* %call_43bb39, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rax), %rax	 RIP: 43bb40	 Bytes: 4
  %loadMem_43bb40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb40 = call %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb40)
  store %struct.Memory* %call_43bb40, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43bb44	 Bytes: 7
  %loadMem_43bb44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb44 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb44)
  store %struct.Memory* %call_43bb44, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rcx, %rcx	 RIP: 43bb4b	 Bytes: 7
  %loadMem_43bb4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb4b = call %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb4b)
  store %struct.Memory* %call_43bb4b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43bb52	 Bytes: 3
  %loadMem_43bb52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb52 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb52)
  store %struct.Memory* %call_43bb52, %struct.Memory** %MEMORY

  ; Code: movq 0x160(%rax), %rax	 RIP: 43bb55	 Bytes: 7
  %loadMem_43bb55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb55 = call %struct.Memory* @routine_movq_0x160__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb55)
  store %struct.Memory* %call_43bb55, %struct.Memory** %MEMORY

  ; Code: movslq -0x20f8(%rbp), %rcx	 RIP: 43bb5c	 Bytes: 7
  %loadMem_43bb5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb5c = call %struct.Memory* @routine_movslq_MINUS0x20f8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb5c)
  store %struct.Memory* %call_43bb5c, %struct.Memory** %MEMORY

  ; Code: movb $0x0, (%rax,%rcx,1)	 RIP: 43bb63	 Bytes: 4
  %loadMem_43bb63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb63 = call %struct.Memory* @routine_movb__0x0____rax__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb63)
  store %struct.Memory* %call_43bb63, %struct.Memory** %MEMORY

  ; Code: .L_43bb67:	 RIP: 43bb67	 Bytes: 0
  br label %block_.L_43bb67
block_.L_43bb67:

  ; Code: jmpq .L_43bb6c	 RIP: 43bb67	 Bytes: 5
  %loadMem_43bb67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb67 = call %struct.Memory* @routine_jmpq_.L_43bb6c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb67, i64 5, i64 5)
  store %struct.Memory* %call_43bb67, %struct.Memory** %MEMORY

  br label %block_.L_43bb6c

  ; Code: .L_43bb6c:	 RIP: 43bb6c	 Bytes: 0
block_.L_43bb6c:

  ; Code: movl -0x2060(%rbp), %eax	 RIP: 43bb6c	 Bytes: 6
  %loadMem_43bb6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb6c = call %struct.Memory* @routine_movl_MINUS0x2060__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb6c)
  store %struct.Memory* %call_43bb6c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43bb72	 Bytes: 3
  %loadMem_43bb72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb72 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb72)
  store %struct.Memory* %call_43bb72, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2060(%rbp)	 RIP: 43bb75	 Bytes: 6
  %loadMem_43bb75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb75 = call %struct.Memory* @routine_movl__eax__MINUS0x2060__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb75)
  store %struct.Memory* %call_43bb75, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43b7f4	 RIP: 43bb7b	 Bytes: 5
  %loadMem_43bb7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb7b = call %struct.Memory* @routine_jmpq_.L_43b7f4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb7b, i64 -903, i64 5)
  store %struct.Memory* %call_43bb7b, %struct.Memory** %MEMORY

  br label %block_.L_43b7f4

  ; Code: .L_43bb80:	 RIP: 43bb80	 Bytes: 0
block_.L_43bb80:

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43bb80	 Bytes: 7
  %loadMem_43bb80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb80 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb80)
  store %struct.Memory* %call_43bb80, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0x20(%rax)	 RIP: 43bb87	 Bytes: 5
  %loadMem_43bb87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb87 = call %struct.Memory* @routine_cmpq__0x0__0x20__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb87)
  store %struct.Memory* %call_43bb87, %struct.Memory** %MEMORY

  ; Code: je .L_43bba8	 RIP: 43bb8c	 Bytes: 6
  %loadMem_43bb8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb8c = call %struct.Memory* @routine_je_.L_43bba8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb8c, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_43bb8c, %struct.Memory** %MEMORY

  %loadBr_43bb8c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bb8c = icmp eq i8 %loadBr_43bb8c, 1
  br i1 %cmpBr_43bb8c, label %block_.L_43bba8, label %block_43bb92

block_43bb92:
  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43bb92	 Bytes: 7
  %loadMem_43bb92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb92 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb92)
  store %struct.Memory* %call_43bb92, %struct.Memory** %MEMORY

  ; Code: movq 0x20(%rax), %rax	 RIP: 43bb99	 Bytes: 4
  %loadMem_43bb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb99 = call %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb99)
  store %struct.Memory* %call_43bb99, %struct.Memory** %MEMORY

  ; Code: movslq -0x2064(%rbp), %rcx	 RIP: 43bb9d	 Bytes: 7
  %loadMem_43bb9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bb9d = call %struct.Memory* @routine_movslq_MINUS0x2064__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bb9d)
  store %struct.Memory* %call_43bb9d, %struct.Memory** %MEMORY

  ; Code: movb $0x0, (%rax,%rcx,1)	 RIP: 43bba4	 Bytes: 4
  %loadMem_43bba4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bba4 = call %struct.Memory* @routine_movb__0x0____rax__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bba4)
  store %struct.Memory* %call_43bba4, %struct.Memory** %MEMORY

  ; Code: .L_43bba8:	 RIP: 43bba8	 Bytes: 0
  br label %block_.L_43bba8
block_.L_43bba8:

  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43bba8	 Bytes: 7
  %loadMem_43bba8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bba8 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bba8)
  store %struct.Memory* %call_43bba8, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0x18(%rax)	 RIP: 43bbaf	 Bytes: 5
  %loadMem_43bbaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbaf = call %struct.Memory* @routine_cmpq__0x0__0x18__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbaf)
  store %struct.Memory* %call_43bbaf, %struct.Memory** %MEMORY

  ; Code: je .L_43bbd0	 RIP: 43bbb4	 Bytes: 6
  %loadMem_43bbb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbb4 = call %struct.Memory* @routine_je_.L_43bbd0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbb4, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_43bbb4, %struct.Memory** %MEMORY

  %loadBr_43bbb4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bbb4 = icmp eq i8 %loadBr_43bbb4, 1
  br i1 %cmpBr_43bbb4, label %block_.L_43bbd0, label %block_43bbba

block_43bbba:
  ; Code: movq -0x20f0(%rbp), %rax	 RIP: 43bbba	 Bytes: 7
  %loadMem_43bbba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbba = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbba)
  store %struct.Memory* %call_43bbba, %struct.Memory** %MEMORY

  ; Code: movq 0x18(%rax), %rax	 RIP: 43bbc1	 Bytes: 4
  %loadMem_43bbc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbc1 = call %struct.Memory* @routine_movq_0x18__rax____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbc1)
  store %struct.Memory* %call_43bbc1, %struct.Memory** %MEMORY

  ; Code: movslq -0x2064(%rbp), %rcx	 RIP: 43bbc5	 Bytes: 7
  %loadMem_43bbc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbc5 = call %struct.Memory* @routine_movslq_MINUS0x2064__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbc5)
  store %struct.Memory* %call_43bbc5, %struct.Memory** %MEMORY

  ; Code: movb $0x0, (%rax,%rcx,1)	 RIP: 43bbcc	 Bytes: 4
  %loadMem_43bbcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbcc = call %struct.Memory* @routine_movb__0x0____rax__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbcc)
  store %struct.Memory* %call_43bbcc, %struct.Memory** %MEMORY

  ; Code: .L_43bbd0:	 RIP: 43bbd0	 Bytes: 0
  br label %block_.L_43bbd0
block_.L_43bbd0:

  ; Code: movl $0x0, -0x2060(%rbp)	 RIP: 43bbd0	 Bytes: 10
  %loadMem_43bbd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbd0 = call %struct.Memory* @routine_movl__0x0__MINUS0x2060__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbd0)
  store %struct.Memory* %call_43bbd0, %struct.Memory** %MEMORY

  ; Code: .L_43bbda:	 RIP: 43bbda	 Bytes: 0
  br label %block_.L_43bbda
block_.L_43bbda:

  ; Code: movl -0x2060(%rbp), %eax	 RIP: 43bbda	 Bytes: 6
  %loadMem_43bbda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbda = call %struct.Memory* @routine_movl_MINUS0x2060__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbda)
  store %struct.Memory* %call_43bbda, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %eax	 RIP: 43bbe0	 Bytes: 3
  %loadMem_43bbe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbe0 = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbe0)
  store %struct.Memory* %call_43bbe0, %struct.Memory** %MEMORY

  ; Code: jge .L_43bc17	 RIP: 43bbe3	 Bytes: 6
  %loadMem_43bbe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbe3 = call %struct.Memory* @routine_jge_.L_43bc17(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbe3, i8* %BRANCH_TAKEN, i64 52, i64 6, i64 6)
  store %struct.Memory* %call_43bbe3, %struct.Memory** %MEMORY

  %loadBr_43bbe3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bbe3 = icmp eq i8 %loadBr_43bbe3, 1
  br i1 %cmpBr_43bbe3, label %block_.L_43bc17, label %block_43bbe9

block_43bbe9:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43bbe9	 Bytes: 4
  %loadMem_43bbe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbe9 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbe9)
  store %struct.Memory* %call_43bbe9, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43bbed	 Bytes: 7
  %loadMem_43bbed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbed = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbed)
  store %struct.Memory* %call_43bbed, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43bbf4	 Bytes: 4
  %loadMem_43bbf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbf4 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbf4)
  store %struct.Memory* %call_43bbf4, %struct.Memory** %MEMORY

  ; Code: movslq -0x2064(%rbp), %rcx	 RIP: 43bbf8	 Bytes: 7
  %loadMem_43bbf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbf8 = call %struct.Memory* @routine_movslq_MINUS0x2064__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbf8)
  store %struct.Memory* %call_43bbf8, %struct.Memory** %MEMORY

  ; Code: movb $0x0, (%rax,%rcx,1)	 RIP: 43bbff	 Bytes: 4
  %loadMem_43bbff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bbff = call %struct.Memory* @routine_movb__0x0____rax__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bbff)
  store %struct.Memory* %call_43bbff, %struct.Memory** %MEMORY

  ; Code: movl -0x2060(%rbp), %eax	 RIP: 43bc03	 Bytes: 6
  %loadMem_43bc03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc03 = call %struct.Memory* @routine_movl_MINUS0x2060__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc03)
  store %struct.Memory* %call_43bc03, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43bc09	 Bytes: 3
  %loadMem_43bc09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc09 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc09)
  store %struct.Memory* %call_43bc09, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2060(%rbp)	 RIP: 43bc0c	 Bytes: 6
  %loadMem_43bc0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc0c = call %struct.Memory* @routine_movl__eax__MINUS0x2060__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc0c)
  store %struct.Memory* %call_43bc0c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43bbda	 RIP: 43bc12	 Bytes: 5
  %loadMem_43bc12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc12 = call %struct.Memory* @routine_jmpq_.L_43bbda(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc12, i64 -56, i64 5)
  store %struct.Memory* %call_43bc12, %struct.Memory** %MEMORY

  br label %block_.L_43bbda

  ; Code: .L_43bc17:	 RIP: 43bc17	 Bytes: 0
block_.L_43bc17:

  ; Code: movl $0x0, -0x2060(%rbp)	 RIP: 43bc17	 Bytes: 10
  %loadMem_43bc17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc17 = call %struct.Memory* @routine_movl__0x0__MINUS0x2060__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc17)
  store %struct.Memory* %call_43bc17, %struct.Memory** %MEMORY

  ; Code: .L_43bc21:	 RIP: 43bc21	 Bytes: 0
  br label %block_.L_43bc21
block_.L_43bc21:

  ; Code: movl -0x2060(%rbp), %eax	 RIP: 43bc21	 Bytes: 6
  %loadMem_43bc21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc21 = call %struct.Memory* @routine_movl_MINUS0x2060__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc21)
  store %struct.Memory* %call_43bc21, %struct.Memory** %MEMORY

  ; Code: cmpl -0x2c(%rbp), %eax	 RIP: 43bc27	 Bytes: 3
  %loadMem_43bc27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc27 = call %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc27)
  store %struct.Memory* %call_43bc27, %struct.Memory** %MEMORY

  ; Code: jge .L_43bd4c	 RIP: 43bc2a	 Bytes: 6
  %loadMem_43bc2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc2a = call %struct.Memory* @routine_jge_.L_43bd4c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc2a, i8* %BRANCH_TAKEN, i64 290, i64 6, i64 6)
  store %struct.Memory* %call_43bc2a, %struct.Memory** %MEMORY

  %loadBr_43bc2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bc2a = icmp eq i8 %loadBr_43bc2a, 1
  br i1 %cmpBr_43bc2a, label %block_.L_43bd4c, label %block_43bc30

block_43bc30:
  ; Code: movl $0x0, -0x2074(%rbp)	 RIP: 43bc30	 Bytes: 10
  %loadMem_43bc30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc30 = call %struct.Memory* @routine_movl__0x0__MINUS0x2074__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc30)
  store %struct.Memory* %call_43bc30, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rax	 RIP: 43bc3a	 Bytes: 4
  %loadMem_43bc3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc3a = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc3a)
  store %struct.Memory* %call_43bc3a, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rcx	 RIP: 43bc3e	 Bytes: 7
  %loadMem_43bc3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc3e = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc3e)
  store %struct.Memory* %call_43bc3e, %struct.Memory** %MEMORY

  ; Code: movq (%rax,%rcx,8), %rax	 RIP: 43bc45	 Bytes: 4
  %loadMem_43bc45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc45 = call %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc45)
  store %struct.Memory* %call_43bc45, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43bc49	 Bytes: 7
  %loadMem_43bc49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc49 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc49)
  store %struct.Memory* %call_43bc49, %struct.Memory** %MEMORY

  ; Code: .L_43bc50:	 RIP: 43bc50	 Bytes: 0
  br label %block_.L_43bc50
block_.L_43bc50:

  ; Code: movq -0x2050(%rbp), %rax	 RIP: 43bc50	 Bytes: 7
  %loadMem_43bc50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc50 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc50)
  store %struct.Memory* %call_43bc50, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %ecx	 RIP: 43bc57	 Bytes: 3
  %loadMem_43bc57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc57 = call %struct.Memory* @routine_movsbl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc57)
  store %struct.Memory* %call_43bc57, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 43bc5a	 Bytes: 3
  %loadMem_43bc5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc5a = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc5a)
  store %struct.Memory* %call_43bc5a, %struct.Memory** %MEMORY

  ; Code: je .L_43bced	 RIP: 43bc5d	 Bytes: 6
  %loadMem_43bc5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc5d = call %struct.Memory* @routine_je_.L_43bced(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc5d, i8* %BRANCH_TAKEN, i64 144, i64 6, i64 6)
  store %struct.Memory* %call_43bc5d, %struct.Memory** %MEMORY

  %loadBr_43bc5d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bc5d = icmp eq i8 %loadBr_43bc5d, 1
  br i1 %cmpBr_43bc5d, label %block_.L_43bced, label %block_43bc63

block_43bc63:
  ; Code: movq -0x2050(%rbp), %rax	 RIP: 43bc63	 Bytes: 7
  %loadMem_43bc63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc63 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc63)
  store %struct.Memory* %call_43bc63, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %ecx	 RIP: 43bc6a	 Bytes: 3
  %loadMem_43bc6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc6a = call %struct.Memory* @routine_movsbl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc6a)
  store %struct.Memory* %call_43bc6a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x20, %ecx	 RIP: 43bc6d	 Bytes: 3
  %loadMem_43bc6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc6d = call %struct.Memory* @routine_cmpl__0x20___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc6d)
  store %struct.Memory* %call_43bc6d, %struct.Memory** %MEMORY

  ; Code: je .L_43bcd1	 RIP: 43bc70	 Bytes: 6
  %loadMem_43bc70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc70 = call %struct.Memory* @routine_je_.L_43bcd1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc70, i8* %BRANCH_TAKEN, i64 97, i64 6, i64 6)
  store %struct.Memory* %call_43bc70, %struct.Memory** %MEMORY

  %loadBr_43bc70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bc70 = icmp eq i8 %loadBr_43bc70, 1
  br i1 %cmpBr_43bc70, label %block_.L_43bcd1, label %block_43bc76

block_43bc76:
  ; Code: movq -0x2050(%rbp), %rax	 RIP: 43bc76	 Bytes: 7
  %loadMem_43bc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc76 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc76)
  store %struct.Memory* %call_43bc76, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %ecx	 RIP: 43bc7d	 Bytes: 3
  %loadMem_43bc7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc7d = call %struct.Memory* @routine_movsbl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc7d)
  store %struct.Memory* %call_43bc7d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2e, %ecx	 RIP: 43bc80	 Bytes: 3
  %loadMem_43bc80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc80 = call %struct.Memory* @routine_cmpl__0x2e___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc80)
  store %struct.Memory* %call_43bc80, %struct.Memory** %MEMORY

  ; Code: je .L_43bcd1	 RIP: 43bc83	 Bytes: 6
  %loadMem_43bc83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc83 = call %struct.Memory* @routine_je_.L_43bcd1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc83, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_43bc83, %struct.Memory** %MEMORY

  %loadBr_43bc83 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bc83 = icmp eq i8 %loadBr_43bc83, 1
  br i1 %cmpBr_43bc83, label %block_.L_43bcd1, label %block_43bc89

block_43bc89:
  ; Code: movq -0x2050(%rbp), %rax	 RIP: 43bc89	 Bytes: 7
  %loadMem_43bc89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc89 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc89)
  store %struct.Memory* %call_43bc89, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %ecx	 RIP: 43bc90	 Bytes: 3
  %loadMem_43bc90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc90 = call %struct.Memory* @routine_movsbl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc90)
  store %struct.Memory* %call_43bc90, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5f, %ecx	 RIP: 43bc93	 Bytes: 3
  %loadMem_43bc93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc93 = call %struct.Memory* @routine_cmpl__0x5f___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc93)
  store %struct.Memory* %call_43bc93, %struct.Memory** %MEMORY

  ; Code: je .L_43bcd1	 RIP: 43bc96	 Bytes: 6
  %loadMem_43bc96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc96 = call %struct.Memory* @routine_je_.L_43bcd1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc96, i8* %BRANCH_TAKEN, i64 59, i64 6, i64 6)
  store %struct.Memory* %call_43bc96, %struct.Memory** %MEMORY

  %loadBr_43bc96 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bc96 = icmp eq i8 %loadBr_43bc96, 1
  br i1 %cmpBr_43bc96, label %block_.L_43bcd1, label %block_43bc9c

block_43bc9c:
  ; Code: movq -0x2050(%rbp), %rax	 RIP: 43bc9c	 Bytes: 7
  %loadMem_43bc9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bc9c = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bc9c)
  store %struct.Memory* %call_43bc9c, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %ecx	 RIP: 43bca3	 Bytes: 3
  %loadMem_43bca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bca3 = call %struct.Memory* @routine_movsbl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bca3)
  store %struct.Memory* %call_43bca3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2d, %ecx	 RIP: 43bca6	 Bytes: 3
  %loadMem_43bca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bca6 = call %struct.Memory* @routine_cmpl__0x2d___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bca6)
  store %struct.Memory* %call_43bca6, %struct.Memory** %MEMORY

  ; Code: je .L_43bcd1	 RIP: 43bca9	 Bytes: 6
  %loadMem_43bca9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bca9 = call %struct.Memory* @routine_je_.L_43bcd1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bca9, i8* %BRANCH_TAKEN, i64 40, i64 6, i64 6)
  store %struct.Memory* %call_43bca9, %struct.Memory** %MEMORY

  %loadBr_43bca9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bca9 = icmp eq i8 %loadBr_43bca9, 1
  br i1 %cmpBr_43bca9, label %block_.L_43bcd1, label %block_43bcaf

block_43bcaf:
  ; Code: movq -0x2050(%rbp), %rax	 RIP: 43bcaf	 Bytes: 7
  %loadMem_43bcaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcaf = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcaf)
  store %struct.Memory* %call_43bcaf, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax), %ecx	 RIP: 43bcb6	 Bytes: 3
  %loadMem_43bcb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcb6 = call %struct.Memory* @routine_movsbl___rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcb6)
  store %struct.Memory* %call_43bcb6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x7e, %ecx	 RIP: 43bcb9	 Bytes: 3
  %loadMem_43bcb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcb9 = call %struct.Memory* @routine_cmpl__0x7e___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcb9)
  store %struct.Memory* %call_43bcb9, %struct.Memory** %MEMORY

  ; Code: je .L_43bcd1	 RIP: 43bcbc	 Bytes: 6
  %loadMem_43bcbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcbc = call %struct.Memory* @routine_je_.L_43bcd1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcbc, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_43bcbc, %struct.Memory** %MEMORY

  %loadBr_43bcbc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bcbc = icmp eq i8 %loadBr_43bcbc, 1
  br i1 %cmpBr_43bcbc, label %block_.L_43bcd1, label %block_43bcc2

block_43bcc2:
  ; Code: movl -0x2074(%rbp), %eax	 RIP: 43bcc2	 Bytes: 6
  %loadMem_43bcc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcc2 = call %struct.Memory* @routine_movl_MINUS0x2074__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcc2)
  store %struct.Memory* %call_43bcc2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43bcc8	 Bytes: 3
  %loadMem_43bcc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcc8 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcc8)
  store %struct.Memory* %call_43bcc8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2074(%rbp)	 RIP: 43bccb	 Bytes: 6
  %loadMem_43bccb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bccb = call %struct.Memory* @routine_movl__eax__MINUS0x2074__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bccb)
  store %struct.Memory* %call_43bccb, %struct.Memory** %MEMORY

  ; Code: .L_43bcd1:	 RIP: 43bcd1	 Bytes: 0
  br label %block_.L_43bcd1
block_.L_43bcd1:

  ; Code: jmpq .L_43bcd6	 RIP: 43bcd1	 Bytes: 5
  %loadMem_43bcd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcd1 = call %struct.Memory* @routine_jmpq_.L_43bcd6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcd1, i64 5, i64 5)
  store %struct.Memory* %call_43bcd1, %struct.Memory** %MEMORY

  br label %block_.L_43bcd6

  ; Code: .L_43bcd6:	 RIP: 43bcd6	 Bytes: 0
block_.L_43bcd6:

  ; Code: movq -0x2050(%rbp), %rax	 RIP: 43bcd6	 Bytes: 7
  %loadMem_43bcd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcd6 = call %struct.Memory* @routine_movq_MINUS0x2050__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcd6)
  store %struct.Memory* %call_43bcd6, %struct.Memory** %MEMORY

  ; Code: addq $0x1, %rax	 RIP: 43bcdd	 Bytes: 4
  %loadMem_43bcdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcdd = call %struct.Memory* @routine_addq__0x1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcdd)
  store %struct.Memory* %call_43bcdd, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x2050(%rbp)	 RIP: 43bce1	 Bytes: 7
  %loadMem_43bce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bce1 = call %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bce1)
  store %struct.Memory* %call_43bce1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43bc50	 RIP: 43bce8	 Bytes: 5
  %loadMem_43bce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bce8 = call %struct.Memory* @routine_jmpq_.L_43bc50(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bce8, i64 -152, i64 5)
  store %struct.Memory* %call_43bce8, %struct.Memory** %MEMORY

  br label %block_.L_43bc50

  ; Code: .L_43bced:	 RIP: 43bced	 Bytes: 0
block_.L_43bced:

  ; Code: movl -0x2074(%rbp), %eax	 RIP: 43bced	 Bytes: 6
  %loadMem_43bced = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bced = call %struct.Memory* @routine_movl_MINUS0x2074__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bced)
  store %struct.Memory* %call_43bced, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43bcf3	 Bytes: 7
  %loadMem_43bcf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcf3 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcf3)
  store %struct.Memory* %call_43bcf3, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rcx), %rcx	 RIP: 43bcfa	 Bytes: 4
  %loadMem_43bcfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcfa = call %struct.Memory* @routine_movq_0x28__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcfa)
  store %struct.Memory* %call_43bcfa, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rdx	 RIP: 43bcfe	 Bytes: 7
  %loadMem_43bcfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bcfe = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bcfe)
  store %struct.Memory* %call_43bcfe, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rdx, %rdx	 RIP: 43bd05	 Bytes: 7
  %loadMem_43bd05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd05 = call %struct.Memory* @routine_imulq__0x168___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd05)
  store %struct.Memory* %call_43bd05, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 43bd0c	 Bytes: 3
  %loadMem_43bd0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd0c = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd0c)
  store %struct.Memory* %call_43bd0c, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x144(%rcx)	 RIP: 43bd0f	 Bytes: 6
  %loadMem_43bd0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd0f = call %struct.Memory* @routine_movl__eax__0x144__rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd0f)
  store %struct.Memory* %call_43bd0f, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rcx	 RIP: 43bd15	 Bytes: 7
  %loadMem_43bd15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd15 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd15)
  store %struct.Memory* %call_43bd15, %struct.Memory** %MEMORY

  ; Code: movq 0x28(%rcx), %rcx	 RIP: 43bd1c	 Bytes: 4
  %loadMem_43bd1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd1c = call %struct.Memory* @routine_movq_0x28__rcx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd1c)
  store %struct.Memory* %call_43bd1c, %struct.Memory** %MEMORY

  ; Code: movslq -0x2060(%rbp), %rdx	 RIP: 43bd20	 Bytes: 7
  %loadMem_43bd20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd20 = call %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd20)
  store %struct.Memory* %call_43bd20, %struct.Memory** %MEMORY

  ; Code: imulq $0x168, %rdx, %rdx	 RIP: 43bd27	 Bytes: 7
  %loadMem_43bd27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd27 = call %struct.Memory* @routine_imulq__0x168___rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd27)
  store %struct.Memory* %call_43bd27, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rcx	 RIP: 43bd2e	 Bytes: 3
  %loadMem_43bd2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd2e = call %struct.Memory* @routine_addq__rdx___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd2e)
  store %struct.Memory* %call_43bd2e, %struct.Memory** %MEMORY

  ; Code: movl (%rcx), %eax	 RIP: 43bd31	 Bytes: 2
  %loadMem_43bd31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd31 = call %struct.Memory* @routine_movl___rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd31)
  store %struct.Memory* %call_43bd31, %struct.Memory** %MEMORY

  ; Code: orl $0x40, %eax	 RIP: 43bd33	 Bytes: 3
  %loadMem_43bd33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd33 = call %struct.Memory* @routine_orl__0x40___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd33)
  store %struct.Memory* %call_43bd33, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 43bd36	 Bytes: 2
  %loadMem_43bd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd36 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd36)
  store %struct.Memory* %call_43bd36, %struct.Memory** %MEMORY

  ; Code: movl -0x2060(%rbp), %eax	 RIP: 43bd38	 Bytes: 6
  %loadMem_43bd38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd38 = call %struct.Memory* @routine_movl_MINUS0x2060__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd38)
  store %struct.Memory* %call_43bd38, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43bd3e	 Bytes: 3
  %loadMem_43bd3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd3e = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd3e)
  store %struct.Memory* %call_43bd3e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x2060(%rbp)	 RIP: 43bd41	 Bytes: 6
  %loadMem_43bd41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd41 = call %struct.Memory* @routine_movl__eax__MINUS0x2060__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd41)
  store %struct.Memory* %call_43bd41, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43bc21	 RIP: 43bd47	 Bytes: 5
  %loadMem_43bd47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd47 = call %struct.Memory* @routine_jmpq_.L_43bc21(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd47, i64 -294, i64 5)
  store %struct.Memory* %call_43bd47, %struct.Memory** %MEMORY

  br label %block_.L_43bc21

  ; Code: .L_43bd4c:	 RIP: 43bd4c	 Bytes: 0
block_.L_43bd4c:

  ; Code: movq -0x2038(%rbp), %rax	 RIP: 43bd4c	 Bytes: 7
  %loadMem_43bd4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd4c = call %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd4c)
  store %struct.Memory* %call_43bd4c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 43bd53	 Bytes: 3
  %loadMem_43bd53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd53 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd53)
  store %struct.Memory* %call_43bd53, %struct.Memory** %MEMORY

  ; Code: callq .free_plt	 RIP: 43bd56	 Bytes: 5
  %loadMem1_43bd56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43bd56 = call %struct.Memory* @routine_callq_.free_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43bd56, i64 -240086, i64 5, i64 5)
  store %struct.Memory* %call1_43bd56, %struct.Memory** %MEMORY

  %loadMem2_43bd56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43bd56 = load i64, i64* %3
  %call2_43bd56 = call %struct.Memory* @ext_free(%struct.State* %0, i64  %loadPC_43bd56, %struct.Memory* %loadMem2_43bd56)
  store %struct.Memory* %call2_43bd56, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x2068(%rbp)	 RIP: 43bd5b	 Bytes: 7
  %loadMem_43bd5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd5b = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2068__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd5b)
  store %struct.Memory* %call_43bd5b, %struct.Memory** %MEMORY

  ; Code: je .L_43bd81	 RIP: 43bd62	 Bytes: 6
  %loadMem_43bd62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd62 = call %struct.Memory* @routine_je_.L_43bd81(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd62, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_43bd62, %struct.Memory** %MEMORY

  %loadBr_43bd62 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43bd62 = icmp eq i8 %loadBr_43bd62, 1
  br i1 %cmpBr_43bd62, label %block_.L_43bd81, label %block_43bd68

block_43bd68:
  ; Code: movq $0x459c20, %rdi	 RIP: 43bd68	 Bytes: 10
  %loadMem_43bd68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd68 = call %struct.Memory* @routine_movq__0x459c20___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd68)
  store %struct.Memory* %call_43bd68, %struct.Memory** %MEMORY

  ; Code: movq -0x10(%rbp), %rax	 RIP: 43bd72	 Bytes: 4
  %loadMem_43bd72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd72 = call %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd72)
  store %struct.Memory* %call_43bd72, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rsi	 RIP: 43bd76	 Bytes: 4
  %loadMem_43bd76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd76 = call %struct.Memory* @routine_movq_0x8__rax____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd76)
  store %struct.Memory* %call_43bd76, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43bd7a	 Bytes: 2
  %loadMem_43bd7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd7a = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd7a)
  store %struct.Memory* %call_43bd7a, %struct.Memory** %MEMORY

  ; Code: callq .Warn	 RIP: 43bd7c	 Bytes: 5
  %loadMem1_43bd7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43bd7c = call %struct.Memory* @routine_callq_.Warn(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43bd7c, i64 11876, i64 5, i64 5)
  store %struct.Memory* %call1_43bd7c, %struct.Memory** %MEMORY

  %loadMem2_43bd7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43bd7c = load i64, i64* %3
  %call2_43bd7c = call %struct.Memory* @sub_43ebe0.Warn(%struct.State* %0, i64  %loadPC_43bd7c, %struct.Memory* %loadMem2_43bd7c)
  store %struct.Memory* %call2_43bd7c, %struct.Memory** %MEMORY

  ; Code: .L_43bd81:	 RIP: 43bd81	 Bytes: 0
  br label %block_.L_43bd81
block_.L_43bd81:

  ; Code: movq -0x28(%rbp), %rdi	 RIP: 43bd81	 Bytes: 4
  %loadMem_43bd81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd81 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd81)
  store %struct.Memory* %call_43bd81, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rsi	 RIP: 43bd85	 Bytes: 7
  %loadMem_43bd85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd85 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd85)
  store %struct.Memory* %call_43bd85, %struct.Memory** %MEMORY

  ; Code: callq .MSAFromAINFO	 RIP: 43bd8c	 Bytes: 5
  %loadMem1_43bd8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43bd8c = call %struct.Memory* @routine_callq_.MSAFromAINFO(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43bd8c, i64 -52044, i64 5, i64 5)
  store %struct.Memory* %call1_43bd8c, %struct.Memory** %MEMORY

  %loadMem2_43bd8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43bd8c = load i64, i64* %3
  %call2_43bd8c = call %struct.Memory* @sub_42f240.MSAFromAINFO(%struct.State* %0, i64  %loadPC_43bd8c, %struct.Memory* %loadMem2_43bd8c)
  store %struct.Memory* %call2_43bd8c, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x18(%rbp)	 RIP: 43bd91	 Bytes: 4
  %loadMem_43bd91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd91 = call %struct.Memory* @routine_movq__rax__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd91)
  store %struct.Memory* %call_43bd91, %struct.Memory** %MEMORY

  ; Code: movq -0x18(%rbp), %rdi	 RIP: 43bd95	 Bytes: 4
  %loadMem_43bd95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd95 = call %struct.Memory* @routine_movq_MINUS0x18__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd95)
  store %struct.Memory* %call_43bd95, %struct.Memory** %MEMORY

  ; Code: callq .MSAVerifyParse	 RIP: 43bd99	 Bytes: 5
  %loadMem1_43bd99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43bd99 = call %struct.Memory* @routine_callq_.MSAVerifyParse(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43bd99, i64 -56025, i64 5, i64 5)
  store %struct.Memory* %call1_43bd99, %struct.Memory** %MEMORY

  %loadMem2_43bd99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43bd99 = load i64, i64* %3
  %call2_43bd99 = call %struct.Memory* @sub_42e2c0.MSAVerifyParse(%struct.State* %0, i64  %loadPC_43bd99, %struct.Memory* %loadMem2_43bd99)
  store %struct.Memory* %call2_43bd99, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rdi	 RIP: 43bd9e	 Bytes: 4
  %loadMem_43bd9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bd9e = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bd9e)
  store %struct.Memory* %call_43bd9e, %struct.Memory** %MEMORY

  ; Code: movq -0x20f0(%rbp), %rsi	 RIP: 43bda2	 Bytes: 7
  %loadMem_43bda2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bda2 = call %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bda2)
  store %struct.Memory* %call_43bda2, %struct.Memory** %MEMORY

  ; Code: callq .FreeAlignment	 RIP: 43bda9	 Bytes: 5
  %loadMem1_43bda9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43bda9 = call %struct.Memory* @routine_callq_.FreeAlignment(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43bda9, i64 -233033, i64 5, i64 5)
  store %struct.Memory* %call1_43bda9, %struct.Memory** %MEMORY

  %loadMem2_43bda9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43bda9 = load i64, i64* %3
  %call2_43bda9 = call %struct.Memory* @sub_402f60.FreeAlignment(%struct.State* %0, i64  %loadPC_43bda9, %struct.Memory* %loadMem2_43bda9)
  store %struct.Memory* %call2_43bda9, %struct.Memory** %MEMORY

  ; Code: movq -0x18(%rbp), %rax	 RIP: 43bdae	 Bytes: 4
  %loadMem_43bdae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bdae = call %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bdae)
  store %struct.Memory* %call_43bdae, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x8(%rbp)	 RIP: 43bdb2	 Bytes: 4
  %loadMem_43bdb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bdb2 = call %struct.Memory* @routine_movq__rax__MINUS0x8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bdb2)
  store %struct.Memory* %call_43bdb2, %struct.Memory** %MEMORY

  ; Code: .L_43bdb6:	 RIP: 43bdb6	 Bytes: 0
  br label %block_.L_43bdb6
block_.L_43bdb6:

  ; Code: movq -0x8(%rbp), %rax	 RIP: 43bdb6	 Bytes: 4
  %loadMem_43bdb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bdb6 = call %struct.Memory* @routine_movq_MINUS0x8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bdb6)
  store %struct.Memory* %call_43bdb6, %struct.Memory** %MEMORY

  ; Code: addq $0x2260, %rsp	 RIP: 43bdba	 Bytes: 7
  %loadMem_43bdba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bdba = call %struct.Memory* @routine_addq__0x2260___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bdba)
  store %struct.Memory* %call_43bdba, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 43bdc1	 Bytes: 1
  %loadMem_43bdc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bdc1 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bdc1)
  store %struct.Memory* %call_43bdc1, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 43bdc2	 Bytes: 1
  %loadMem_43bdc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43bdc2 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43bdc2)
  store %struct.Memory* %call_43bdc2, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_43bdc2
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x2260___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 8800)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rdi__MINUS0x10__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 44
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x0__MINUS0x2038__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8248
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 11
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2078__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8312
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x207c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8316
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdi____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.feof_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_439d87(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x0__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_43bdb6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__0x30__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_439da3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x0__0x34__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 52
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_439db4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x4598e4___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4598e4_type* @G__0x4598e4 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.Die(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x20e8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8424
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rcx__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rax__MINUS0x20f0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8432
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.InitAinfo(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x1000___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 4096)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.fgets_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = sub i64 %2, %3
  %6 = icmp ult i64 %2, %3
  %7 = zext i1 %6 to i8
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %7, i8* %8, align 1
  %9 = trunc i64 %5 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i64 %3, %2
  %17 = xor i64 %16, %5
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %5, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %5, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %2, 63
  %29 = lshr i64 %3, 63
  %30 = xor i64 %29, %28
  %31 = xor i64 %25, %28
  %32 = add   i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__0x0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jne_.L_439e10(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2__0x676f80(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x676f80_type* @G_0x676f80 to i64), i64 2)
  ret %struct.Memory* %8
}






define %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.strcpy_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = sext i8 %6 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsbl_MINUS0x1030__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x23___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 35)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rax__MINUS0x2100__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8448
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jne_.L_439ea9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x45992c___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x45992c_type* @G__0x45992c to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.strncmp_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_439e6f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x2078__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8312
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_439ea4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x459931___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x459931_type* @G__0x459931 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_439e9f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x207c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8316
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jmpq_.L_439ea9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_439eae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x45a1f5___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x45a1f5_type* @G__0x45a1f5 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_.strtok_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movb__0x1___cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %CL, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0x2048__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8264
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__cl__MINUS0x2101__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8449
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_je_.L_439f03(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x662bc0___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x662bc0_type* @G__0x662bc0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x2048__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsbl___rax____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_callq_.strchr_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i8* nocapture) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_setne__cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i8* %CL)
  ret %struct.Memory* %12
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  store i8 %6, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb_MINUS0x2101__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8449
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = and i64 %3, %2
  %6 = trunc i64 %5 to i8
  %7 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = trunc i64 %5 to i32
  %9 = and i32 %8, 255
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9) #22
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1
  %15 = icmp eq i8 %6, 0
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %16, i8* %17, align 1
  %18 = lshr i8 %6, 7
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_jne_.L_439dd9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x203c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8252
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2068__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8296
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_MINUS0x20__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}







define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i8
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %8, align 1
  %9 = trunc i64 %6 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i8 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i8 %7, 7
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorb__0xff___cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %CL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWIhE2RnIhE2InIhEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %CL, i64 %11, i64 255)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_testb__0x1___cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %CL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_jne_.L_439f45(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43a559(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x203c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8252
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_439f79(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459936___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459936_type* @G__0x459936 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x97___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 151)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 8)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_.sre_malloc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0x2038__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8248
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_439fbc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x99___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 153)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x2038__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_MINUS0x203c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i6
  switch i6 %6, label %12 [
    i6 0, label %41
    i6 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 1
  %9 = icmp slt i64 %3, 0
  %10 = icmp slt i64 %8, 0
  %11 = xor i1 %9, %10
  br label %19

; <label>:12:                                     ; preds = %5
  %13 = and i64 %4, 63
  %14 = add  i64 %13, -1
  %15 = shl i64 %3, %14
  %16 = icmp slt i64 %15, 0
  %17 = icmp ne i8 0, 0
  %18 = shl i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %12, %7
  %20 = phi i1 [ %9, %7 ], [ %16, %12 ]
  %21 = phi i1 [ %11, %7 ], [ %17, %12 ]
  %22 = phi i64 [ %8, %7 ], [ %18, %12 ]
  store i64 %22, i64* %2, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %24 = zext i1 %20 to i8
  store i8 %24, i8* %23, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %26 = trunc i64 %22 to i32
  %27 = and i32 %26, 254
  %28 = tail call i32 @llvm.ctpop.i32(i32 %27) #22
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  store i8 %31, i8* %25, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %34 = icmp eq i64 %22, 0
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %37 = lshr i64 %22, 63
  %38 = trunc i64 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %40 = zext i1 %21 to i8
  store i8 %40, i8* %39, align 1
  br label %41

; <label>:41:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shlq__0x3___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 3)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdx__MINUS0x2110__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8464
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq_MINUS0x2110__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.sre_realloc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_MINUS0x203c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x1001____rax__rcx_8_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 4097)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__0xffffffff__0x4__rax__rcx_8_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %12, 4
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 -1)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2054__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8276
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i64*
  %6 = load i64, i64* %5
  %7 = sub i64 %6, %3
  %8 = icmp ult i64 %6, %3
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = trunc i64 %7 to i32
  %12 = and i32 %11, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i64 %6, %3
  %19 = xor i64 %18, %7
  %20 = lshr i64 %19, 4
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i64 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %7, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %6, 63
  %31 = lshr i64 %3, 63
  %32 = xor i64 %30, %31
  %33 = xor i64 %27, %30
  %34 = add   i64 %33, %32
  %35 = icmp eq i64 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x2048__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8264
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43a459(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_43a0e1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x2054__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8276
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_43a044(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0xa4___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 164)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x168___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 360)
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__0x28__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 40
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_43a084(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0xa6___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 166)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x28__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x2054__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8276
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sext i64 %3 to i128
  %7 = and i128 %6, -18446744073709551616
  %8 = sext i64 %4 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %3 to i128
  %11 = or i128 %7, %10
  %12 = zext i64 %4 to i128
  %13 = or i128 %9, %12
  %14 = mul  i128 %13, %11
  %15 = trunc i128 %14 to i64
  store i64 %15, i64* %2, align 8
  %16 = sext i64 %15 to i128
  %17 = icmp ne i128 %16, %14
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = trunc i128 %14 to i32
  %21 = and i32 %20, 255
  %22 = tail call i32 @llvm.ctpop.i32(i32 %21) #22
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i64 %15, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %18, i8* %32, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imulq__0x168___rdx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 7
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 360)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__0x28__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 40
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 1)
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movslq_MINUS0x2054__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8276
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x168___rcx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 360)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x0____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq_MINUS0x2048__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_callq_.SetSeqinfoString(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__eax__MINUS0x2114__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8468
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43a128(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}











define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x4___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 4)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_.strcmp_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_43a123(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x2068__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8296
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x2054__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8276
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x2054__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8276
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movq__rax__MINUS0x2050__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8272
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_je_.L_43a26c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x2030__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x2050__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__rax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x203c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq___rax__rdx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = sub i64 %2, %3
  %6 = icmp ult i64 %2, %3
  %7 = zext i1 %6 to i8
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %7, i8* %8, align 1
  %9 = trunc i64 %5 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = xor i64 %3, %2
  %17 = xor i64 %16, %5
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %5, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %5, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %2, 63
  %29 = lshr i64 %3, 63
  %30 = xor i64 %29, %28
  %31 = xor i64 %25, %28
  %32 = add   i64 %31, %30
  %33 = icmp eq i64 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__rax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnImES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_43a1ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__ecx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__edx____rax__rcx_8_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 8
  %18 = add i64 %17, %15
  %19 = load i32, i32* %EDX
  %20 = zext i32 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rax__MINUS0x2120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8480
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.strlen_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x2120__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__rax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdi__MINUS0x2050__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8272
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__0x45a1f5___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x45a1f5_type* @G__0x45a1f5 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x2050__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_43a215(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43a1fe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jmpq_.L_43a1d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movslq_0x4__rax__rdx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 8
  %15 = add i64 %12, 4
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 5
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %16)
  ret %struct.Memory* %19
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_43a267(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movl__edx__0x4__rax__rcx_8_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, 4
  %19 = add i64 %18, %17
  %20 = load i32, i32* %EDX
  %21 = zext i32 %20 to i64
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 4
  store i64 %23, i64* %PC
  %24 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %19, i64 %21)
  ret %struct.Memory* %24
}


define %struct.Memory* @routine_jmpq_.L_43a26c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_43a271(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_43a2a0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x0__MINUS0x2048__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8264
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 11
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_43a454(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4599e3___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4599e3_type* @G__0x4599e3 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_leaq_MINUS0x1030__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 4144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rsi__MINUS0x2128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8488
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rcx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rcx__MINUS0x2130__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8496
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rdx__MINUS0x2138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8504
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_MINUS0x2130__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x2128__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x2138__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x2140__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8512
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_jne_.L_43a336(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}







define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_imulq__0x168___rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 360)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = or i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_orl__0x200___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 512)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__ecx____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_43a400(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x4599e8___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4599e8_type* @G__0x4599e8 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jne_.L_43a38c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_orl__0x400___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1024)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_43a3fb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_43a3c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_43a3f6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_43a3f1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_jne_.L_43a42c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_43a431(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_43a271(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_439ff1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_43a474(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43a499(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 44
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_je_.L_43a494(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x4599ed___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x4599ed_type* @G__0x4599ed to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl_MINUS0x203c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8252
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x203c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8252
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_jne_.L_43a4d7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_43a554(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movq__rax__MINUS0x2148__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8520
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}














define %struct.Memory* @routine_movb__cl__MINUS0x2149__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8521
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_je_.L_43a546(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movb_MINUS0x2149__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8521
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_43a4a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_439f25(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2064__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8292
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2058__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8280
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x2058__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x203c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8252
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_43a5c5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movslq_MINUS0x2058__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x4__rax__rcx_8____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 8
  %18 = add i64 %15, 4
  %19 = add i64 %18, %17
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %19)
  ret %struct.Memory* %22
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl___rax__rcx_8____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 8
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %15, i64 %19)
  ret %struct.Memory* %22
}


define %struct.Memory* @routine_addl__0x1___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_MINUS0x2064__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8292
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x2064__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8292
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax__MINUS0x2058__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8280
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43a56d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_callq_.rewind_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0xf7___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 247)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x3___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 3)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__rax__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x2078__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8312
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43a630(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0xf9___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 249)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x2064__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8292
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq__eax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rcx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_movq__rax__0x18__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 24
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x207c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8316
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43a66f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0xfb___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 251)
  ret %struct.Memory* %11
}
















define %struct.Memory* @routine_movq__rax__0x20__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 32
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x0__MINUS0x205c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8284
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x205c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jge_.L_43a7c5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x101___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 257)
  ret %struct.Memory* %11
}














define %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x205c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax____rcx__rdx_8_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = mul i64 %16, 8
  %18 = add i64 %17, %15
  %19 = load i64, i64* %RAX
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %19)
  ret %struct.Memory* %22
}






define %struct.Memory* @routine_movslq_MINUS0x205c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl___rax____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = and i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_andl__0x200___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 512)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43a735(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x103___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 259)
  ret %struct.Memory* %11
}
















define %struct.Memory* @routine_movq_0x28__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_addq__rdx___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__0x158__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 344
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_movl___rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_andl__0x400___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1024)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43a7ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x105___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 261)
  ret %struct.Memory* %11
}
























define %struct.Memory* @routine_movq__rax__0x160__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 352
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_43a7b1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x205c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8284
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43a679(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x10a___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 266)
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__eax__0x4__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__0x8__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x2c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x2___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 2)
  ret %struct.Memory* %12
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = bitcast i8* %2 to float*
  store float %6, float* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 4
  %9 = bitcast i8* %8 to float*
  store float 0.000000e+00, float* %9, align 1
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to float*
  store float 0.000000e+00, float* %11, align 1
  %12 = getelementptr inbounds i8, i8* %2, i64 12
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss_0x19f1f__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint( %G_0x19f1f__rip__type* @G_0x19f1f__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movq__rax__0x10__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_0x10__rax____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x2c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.FSet(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x206c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8300
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_jne_.L_43a861(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movq__rsi__MINUS0x2158__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8536
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq__rax__MINUS0x2160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8544
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_MINUS0x2160__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x2158__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x2168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8552
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_jne_.L_43a8c2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43a831(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x459a08___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x459a08_type* @G__0x459a08 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_43a91e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x45a1f7___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x45a1f7_type* @G__0x45a1f7 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_je_.L_43a91e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x2050__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.Strdup(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__rax__0x48__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 72
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_43b0db(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x459a0d___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x459a0d_type* @G__0x459a0d to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43a97a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_je_.L_43a97a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movq__rax__0x30__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 48
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_43b0d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x459a12___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x459a12_type* @G__0x459a12 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43a9d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_je_.L_43a9d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movq__rax__0x40__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 64
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_43b0d1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x459a17___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x459a17_type* @G__0x459a17 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43aa32(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_je_.L_43aa32(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movq__rax__0x38__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = add i64 %12, 56
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_43b0cc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x459a1c___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x459a1c_type* @G__0x459a1c to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43ab03(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_43aa83(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459a21___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459a21_type* @G__0x459a21 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_.atof_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}







define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = bitcast i8* %3 to double*
  %11 = load double, double* %10, align 1
  %12 = fptrunc double %11 to float
  %13 = bitcast i8* %2 to float*
  store float %12, float* %13, align 1
  %14 = extractelement <2 x i32> %6, i32 1
  %15 = getelementptr inbounds i8, i8* %2, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 1
  %17 = extractelement <2 x i32> %9, i32 0
  %18 = bitcast i8* %7 to i32*
  store i32 %17, i32* %18, align 1
  %19 = extractelement <2 x i32> %9, i32 1
  %20 = getelementptr inbounds i8, i8* %2, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = inttoptr i64 %2 to float*
  store float %7, float* %8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss__xmm0__0x60__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RCX
  %12 = add i64 %11, 96
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_43aad4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movss__xmm0__0x64__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RDI
  %12 = add i64 %11, 100
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl___rdi____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_orl__0x4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 4)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_jmpq_.L_43b0c7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x459a49___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x459a49_type* @G__0x459a49 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43abd4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_43ab54(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459a4e___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459a4e_type* @G__0x459a4e to i64))
  ret %struct.Memory* %11
}




















define %struct.Memory* @routine_movss__xmm0__0x50__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RCX
  %12 = add i64 %11, 80
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_43aba5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movss__xmm0__0x54__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RDI
  %12 = add i64 %11, 84
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_orl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_43b0c2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x459a76___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x459a76_type* @G__0x459a76 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43aca5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_43ac25(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459a7b___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459a7b_type* @G__0x459a7b to i64))
  ret %struct.Memory* %11
}




















define %struct.Memory* @routine_movss__xmm0__0x58__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RCX
  %12 = add i64 %11, 88
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_43ac76(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_movss__xmm0__0x5c__rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RDI
  %12 = add i64 %11, 92
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_orl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_43b0bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x459aa3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x459aa3_type* @G__0x459aa3 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43b03f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_43acf6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459aa8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459aa8_type* @G__0x459aa8 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_movslq_MINUS0x206c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq__rax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}






define %struct.Memory* @routine_je_.L_43ad38(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jne_.L_43ad6d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_callq_.IsReal(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_43ad93(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459ad0___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459ad0_type* @G__0x459ad0 to i64))
  ret %struct.Memory* %11
}




















define %struct.Memory* @routine_movq_0x10__rcx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = add i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x206c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movss__xmm0____rcx__rdx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %13 to %union.vec128_t*
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %RDX
  %16 = mul i64 %15, 4
  %17 = add i64 %16, %14
  %18 = bitcast %union.vec128_t* %XMM0 to i8*
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %17, i8* %18)
  ret %struct.Memory* %21
}








define %struct.Memory* @routine_jne_.L_43adef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459b10___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459b10_type* @G__0x459b10 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl__0x2___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 2)
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_movq_MINUS0x2050__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8272
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_xorl__edx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x216c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8556
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jne_.L_43ae5a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__0x4___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 4)
  ret %struct.Memory* %11
}






















define %struct.Memory* @routine_movq__0x459b49___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x459b49_type* @G__0x459b49 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x2170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8560
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jne_.L_43aec5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__0x10___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 16)
  ret %struct.Memory* %11
}
























define %struct.Memory* @routine_movl__eax__MINUS0x2174__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8564
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jne_.L_43af30(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__0x20___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 32)
  ret %struct.Memory* %11
}






















define %struct.Memory* @routine_movq__0x459b4c___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x459b4c_type* @G__0x459b4c to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x2178__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8568
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_jne_.L_43af9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__0x100___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 256)
  ret %struct.Memory* %11
}
























define %struct.Memory* @routine_movl__eax__MINUS0x217c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8572
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_je_.L_43b02b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x8___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 8)
  ret %struct.Memory* %11
}


















define %struct.Memory* @routine_movl__eax__MINUS0x2180__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8576
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x206c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x206c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43b0b8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x45992c___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x45992c_type* @G__0x45992c to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43b060(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43b0e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x459931___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x459931_type* @G__0x459931 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43b081(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_43b0a9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_43b0ae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_43b0b3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




















define %struct.Memory* @routine_movl__0x0__MINUS0x2070__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8304
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_jge_.L_43b7ea(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2060__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8288
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_je_.L_43b6c2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_jne_.L_43b1fa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2e___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 46)
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movq_0x18__rdx____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x2070__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8304
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x2048__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdi__MINUS0x2188__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8584
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rdx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__eax__MINUS0x218c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8588
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x2198__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8600
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x219c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8604
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_subq__0x1___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl___rax__rcx_8____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 8
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 4
  store i64 %21, i64* %PC
  %22 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %19)
  ret %struct.Memory* %22
}






define %struct.Memory* @routine_movl_0x4__rax__rcx_8____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R9D to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = mul i64 %17, 8
  %19 = add i64 %16, 4
  %20 = add i64 %19, %18
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 5
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %15, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movq_MINUS0x2188__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8584
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x219c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8604
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x21a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8608
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r10d___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x21a0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8608
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x2198__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8600
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x2e____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 46)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.copy_alignment_line(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_43b1f5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459b50___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459b50_type* @G__0x459b50 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_jmpq_.L_43b5d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_43b2d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movq_0x20__rdx____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq__rdi__MINUS0x21a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8616
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__MINUS0x21ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8620
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x21b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8632
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x21bc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8636
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




















define %struct.Memory* @routine_movq_MINUS0x21a8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8616
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x21bc__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8636
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x21c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8640
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x21c0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8640
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x21b8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8632
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_43b2d1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459b78___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459b78_type* @G__0x459b78 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_jmpq_.L_43b5cb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x4599e3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4599e3_type* @G__0x4599e3 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43b3cf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movq_0x28__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x2060__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq__esi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_imulq__0x168___rdi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %9, i64 360)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdi___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RDI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x158__rdx____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq__rdi__MINUS0x21c8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8648
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__MINUS0x21cc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8652
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x21d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8664
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x21dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8668
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




















define %struct.Memory* @routine_movq_MINUS0x21c8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8648
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x21dc__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8668
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x21e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8672
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x21e0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x21d8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_43b3ca(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459ba0___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459ba0_type* @G__0x459ba0 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_jmpq_.L_43b5c6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x4599e8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4599e8_type* @G__0x4599e8 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_jne_.L_43b4c8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_movq_0x160__rdx____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq__rdi__MINUS0x21e8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8680
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__MINUS0x21ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8684
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x21f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8696
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x21fc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8700
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




















define %struct.Memory* @routine_movq_MINUS0x21e8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8680
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x21fc__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8700
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x2200__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8704
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2200__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x21f8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_43b4c3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459bc8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459bc8_type* @G__0x459bc8 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_jmpq_.L_43b5c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x459bf0___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x459bf0_type* @G__0x459bf0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 2)
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_je_.L_43b5bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq___rdx__rsi_8____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RDX
  %16 = load i64, i64* %RSI
  %17 = mul i64 %16, 8
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 4
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %18)
  ret %struct.Memory* %21
}






define %struct.Memory* @routine_movq__rdi__MINUS0x2208__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8712
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__eax__MINUS0x220c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8716
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rcx__MINUS0x2218__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8728
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x221c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8732
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




















define %struct.Memory* @routine_movq_MINUS0x2208__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x221c__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8732
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__esi__MINUS0x2220__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8736
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x2220__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x2218__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8728
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_43b5ad(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459bf3___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459bf3_type* @G__0x459bf3 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl_MINUS0x2060__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x2060__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8288
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_jmpq_.L_43b5d5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_43b604(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43b6bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movq__rsi__MINUS0x2228__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8744
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq__rax__MINUS0x2230__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8752
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_MINUS0x2230__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8752
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x2228__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8744
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x2238__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8760
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_jne_.L_43b665(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jne_.L_43b690(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_43b6b8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_43b110(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_addl_MINUS0x2070__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 8304
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edx__MINUS0x2070__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8304
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_jne_.L_43b718(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43b7d1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movq__rsi__MINUS0x2240__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8768
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq__rax__MINUS0x2248__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8776
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_MINUS0x2248__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8776
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x2240__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x2250__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8784
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_jne_.L_43b779(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43b6f4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}














define %struct.Memory* @routine_jne_.L_43b7a4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_jne_.L_43b7cc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_43b7d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_43b0f4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jge_.L_43bb80(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_andl__0x200___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 512)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_43b9b5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x20f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8440
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x20f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8436
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x20f4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_MINUS0x2064__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 8292
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jge_.L_43b987(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq___rax__rcx_8____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 8
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x20f4__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8436
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsbl___rax__rcx_1____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %17)
  ret %struct.Memory* %20
}


define %struct.Memory* @routine_cmpl__0x20___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 32)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43b96e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_cmpl__0x2e___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 46)
  ret %struct.Memory* %13
}














define %struct.Memory* @routine_cmpl__0x5f___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 95)
  ret %struct.Memory* %13
}














define %struct.Memory* @routine_cmpl__0x2d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 45)
  ret %struct.Memory* %13
}














define %struct.Memory* @routine_cmpl__0x7e___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 126)
  ret %struct.Memory* %13
}














define %struct.Memory* @routine_movq_0x158__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 344
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movb___rax__rcx_1____dl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 5
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RCX = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = add i64 %17, %16
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %DL, i64 %18)
  ret %struct.Memory* %21
}














define %struct.Memory* @routine_movslq_MINUS0x20f8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movb__dl____rax__rcx_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RAX = bitcast %union.anon* %12 to i64*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 5
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %RCX = bitcast %union.anon* %15 to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %RCX
  %18 = add i64 %17, %16
  %19 = load i8, i8* %DL
  %20 = zext i8 %19 to i64
  %21 = load i64, i64* %PC
  %22 = add i64 %21, 3
  store i64 %22, i64* %PC
  %23 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %18, i64 %20)
  ret %struct.Memory* %23
}


define %struct.Memory* @routine_movl_MINUS0x20f8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x1___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__esi__MINUS0x20f8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8440
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43b973(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x20f4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8436
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43b844(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}















define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x0____rax__rcx_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, %12
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 0)
  ret %struct.Memory* %17
}


















define %struct.Memory* @routine_je_.L_43bb67(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jge_.L_43bb39(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_je_.L_43bb20(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




































































define %struct.Memory* @routine_movq_0x160__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 352
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}




























define %struct.Memory* @routine_jmpq_.L_43bb25(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_43b9f6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_jmpq_.L_43bb6c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_43b7f4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_cmpq__0x0__0x20__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43bba8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movslq_MINUS0x2064__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8292
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_cmpq__0x0__0x18__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43bbd0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x18__rax____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_jge_.L_43bc17(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jmpq_.L_43bbda(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jge_.L_43bd4c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x2074__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8308
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_movsbl___rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43bced(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x20___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 32)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43bcd1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpl__0x2e___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 46)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_cmpl__0x5f___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 95)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_cmpl__0x2d___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 45)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_cmpl__0x7e___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 126)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl_MINUS0x2074__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8308
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x2074__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8308
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43bcd6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_addq__0x1___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_43bc50(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_movslq_MINUS0x2060__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__0x144__rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 324
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}












define %struct.Memory* @routine_movl___rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_orl__0x40___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 64)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_jmpq_.L_43bc21(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_callq_.free_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x2068__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 8296
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43bd81(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x459c20___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x459c20_type* @G__0x459c20 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_0x8__rax____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.Warn(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x20f0__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.MSAFromAINFO(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x18__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.MSAVerifyParse(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_.FreeAlignment(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__0x2260___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 8800)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

