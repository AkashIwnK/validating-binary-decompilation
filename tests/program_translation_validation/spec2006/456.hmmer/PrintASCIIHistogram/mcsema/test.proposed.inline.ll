; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x3b67a__rip__type = type <{ [4 x i8] }>
%G__0x456f7b_type = type <{ [8 x i8] }>
%G__0x456fa9_type = type <{ [8 x i8] }>
%G__0x456faf_type = type <{ [8 x i8] }>
%G__0x456fb3_type = type <{ [8 x i8] }>
%G__0x456fc0_type = type <{ [8 x i8] }>
%G__0x456fc2_type = type <{ [8 x i8] }>
%G__0x456fc4_type = type <{ [8 x i8] }>
%G__0x456fc6_type = type <{ [8 x i8] }>
%G__0x456fd4_type = type <{ [8 x i8] }>
%G__0x456fd9_type = type <{ [8 x i8] }>
%G__0x456fe7_type = type <{ [8 x i8] }>
%G__0x456ff4_type = type <{ [8 x i8] }>
%G__0x457001_type = type <{ [8 x i8] }>
%G__0x457024_type = type <{ [8 x i8] }>
%G__0x457056_type = type <{ [8 x i8] }>
%G__0x457071_type = type <{ [8 x i8] }>
%G__0x45708c_type = type <{ [8 x i8] }>
%G__0x4570a7_type = type <{ [8 x i8] }>
%G__0x4570c2_type = type <{ [8 x i8] }>
%G__0x4570f9_type = type <{ [8 x i8] }>
%G__0x457114_type = type <{ [8 x i8] }>
%G__0x458351_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x3b67a__rip_ = global %G_0x3b67a__rip__type zeroinitializer
@G__0x456f7b = global %G__0x456f7b_type zeroinitializer
@G__0x456fa9 = global %G__0x456fa9_type zeroinitializer
@G__0x456faf = global %G__0x456faf_type zeroinitializer
@G__0x456fb3 = global %G__0x456fb3_type zeroinitializer
@G__0x456fc0 = global %G__0x456fc0_type zeroinitializer
@G__0x456fc2 = global %G__0x456fc2_type zeroinitializer
@G__0x456fc4 = global %G__0x456fc4_type zeroinitializer
@G__0x456fc6 = global %G__0x456fc6_type zeroinitializer
@G__0x456fd4 = global %G__0x456fd4_type zeroinitializer
@G__0x456fd9 = global %G__0x456fd9_type zeroinitializer
@G__0x456fe7 = global %G__0x456fe7_type zeroinitializer
@G__0x456ff4 = global %G__0x456ff4_type zeroinitializer
@G__0x457001 = global %G__0x457001_type zeroinitializer
@G__0x457024 = global %G__0x457024_type zeroinitializer
@G__0x457056 = global %G__0x457056_type zeroinitializer
@G__0x457071 = global %G__0x457071_type zeroinitializer
@G__0x45708c = global %G__0x45708c_type zeroinitializer
@G__0x4570a7 = global %G__0x4570a7_type zeroinitializer
@G__0x4570c2 = global %G__0x4570c2_type zeroinitializer
@G__0x4570f9 = global %G__0x4570f9_type zeroinitializer
@G__0x457114 = global %G__0x457114_type zeroinitializer
@G__0x458351 = global %G__0x458351_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_43ea10.Die(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @PrintASCIIHistogram(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_418a00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_418a00, %struct.Memory** %MEMORY
  %loadMem_418a01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i8 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i9 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i8
  %27 = load i64, i64* %PC.i7
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i7
  store i64 %26, i64* %RBP.i9, align 8
  store %struct.Memory* %loadMem_418a01, %struct.Memory** %MEMORY
  %loadMem_418a04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i22 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i23 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i23
  %36 = load i64, i64* %PC.i22
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i22
  %38 = sub i64 %35, 272
  store i64 %38, i64* %RSP.i23, align 8
  %39 = icmp ult i64 %35, 272
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 272, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_418a04, %struct.Memory** %MEMORY
  %loadMem_418a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 11
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RDI.i42 = bitcast %union.anon* %72 to i64*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 15
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RBP.i43 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RBP.i43
  %77 = sub i64 %76, 8
  %78 = load i64, i64* %RDI.i42
  %79 = load i64, i64* %PC.i41
  %80 = add i64 %79, 4
  store i64 %80, i64* %PC.i41
  %81 = inttoptr i64 %77 to i64*
  store i64 %78, i64* %81
  store %struct.Memory* %loadMem_418a0b, %struct.Memory** %MEMORY
  %loadMem_418a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 33
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %84 to i64*
  %85 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %86 = getelementptr inbounds %struct.GPR, %struct.GPR* %85, i32 0, i32 9
  %87 = getelementptr inbounds %struct.Reg, %struct.Reg* %86, i32 0, i32 0
  %RSI.i62 = bitcast %union.anon* %87 to i64*
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %89 = getelementptr inbounds %struct.GPR, %struct.GPR* %88, i32 0, i32 15
  %90 = getelementptr inbounds %struct.Reg, %struct.Reg* %89, i32 0, i32 0
  %RBP.i63 = bitcast %union.anon* %90 to i64*
  %91 = load i64, i64* %RBP.i63
  %92 = sub i64 %91, 16
  %93 = load i64, i64* %RSI.i62
  %94 = load i64, i64* %PC.i61
  %95 = add i64 %94, 4
  store i64 %95, i64* %PC.i61
  %96 = inttoptr i64 %92 to i64*
  store i64 %93, i64* %96
  store %struct.Memory* %loadMem_418a0f, %struct.Memory** %MEMORY
  %loadMem_418a13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %98 = getelementptr inbounds %struct.GPR, %struct.GPR* %97, i32 0, i32 33
  %99 = getelementptr inbounds %struct.Reg, %struct.Reg* %98, i32 0, i32 0
  %PC.i81 = bitcast %union.anon* %99 to i64*
  %100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %101 = getelementptr inbounds %struct.GPR, %struct.GPR* %100, i32 0, i32 15
  %102 = getelementptr inbounds %struct.Reg, %struct.Reg* %101, i32 0, i32 0
  %RBP.i82 = bitcast %union.anon* %102 to i64*
  %103 = load i64, i64* %RBP.i82
  %104 = sub i64 %103, 152
  %105 = load i64, i64* %PC.i81
  %106 = add i64 %105, 10
  store i64 %106, i64* %PC.i81
  %107 = inttoptr i64 %104 to i32*
  store i32 3, i32* %107
  store %struct.Memory* %loadMem_418a13, %struct.Memory** %MEMORY
  %loadMem_418a1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 33
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %PC.i95 = bitcast %union.anon* %110 to i64*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 15
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %RBP.i96 = bitcast %union.anon* %113 to i64*
  %114 = load i64, i64* %RBP.i96
  %115 = sub i64 %114, 24
  %116 = load i64, i64* %PC.i95
  %117 = add i64 %116, 7
  store i64 %117, i64* %PC.i95
  %118 = inttoptr i64 %115 to i32*
  store i32 0, i32* %118
  store %struct.Memory* %loadMem_418a1d, %struct.Memory** %MEMORY
  %loadMem_418a24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %120 = getelementptr inbounds %struct.GPR, %struct.GPR* %119, i32 0, i32 33
  %121 = getelementptr inbounds %struct.Reg, %struct.Reg* %120, i32 0, i32 0
  %PC.i114 = bitcast %union.anon* %121 to i64*
  %122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %123 = getelementptr inbounds %struct.GPR, %struct.GPR* %122, i32 0, i32 9
  %124 = getelementptr inbounds %struct.Reg, %struct.Reg* %123, i32 0, i32 0
  %RSI.i115 = bitcast %union.anon* %124 to i64*
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %126 = getelementptr inbounds %struct.GPR, %struct.GPR* %125, i32 0, i32 15
  %127 = getelementptr inbounds %struct.Reg, %struct.Reg* %126, i32 0, i32 0
  %RBP.i116 = bitcast %union.anon* %127 to i64*
  %128 = load i64, i64* %RBP.i116
  %129 = sub i64 %128, 16
  %130 = load i64, i64* %PC.i114
  %131 = add i64 %130, 4
  store i64 %131, i64* %PC.i114
  %132 = inttoptr i64 %129 to i64*
  %133 = load i64, i64* %132
  store i64 %133, i64* %RSI.i115, align 8
  store %struct.Memory* %loadMem_418a24, %struct.Memory** %MEMORY
  %loadMem_418a28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 33
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %136 to i64*
  %137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %138 = getelementptr inbounds %struct.GPR, %struct.GPR* %137, i32 0, i32 1
  %139 = getelementptr inbounds %struct.Reg, %struct.Reg* %138, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %139 to i64*
  %140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %141 = getelementptr inbounds %struct.GPR, %struct.GPR* %140, i32 0, i32 9
  %142 = getelementptr inbounds %struct.Reg, %struct.Reg* %141, i32 0, i32 0
  %RSI.i135 = bitcast %union.anon* %142 to i64*
  %143 = load i64, i64* %RSI.i135
  %144 = add i64 %143, 20
  %145 = load i64, i64* %PC.i134
  %146 = add i64 %145, 3
  store i64 %146, i64* %PC.i134
  %147 = inttoptr i64 %144 to i32*
  %148 = load i32, i32* %147
  %149 = zext i32 %148 to i64
  store i64 %149, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_418a28, %struct.Memory** %MEMORY
  %loadMem_418a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 33
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %152 to i64*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 9
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %RSI.i154 = bitcast %union.anon* %155 to i64*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 15
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %RBP.i155 = bitcast %union.anon* %158 to i64*
  %159 = load i64, i64* %RBP.i155
  %160 = sub i64 %159, 16
  %161 = load i64, i64* %PC.i153
  %162 = add i64 %161, 4
  store i64 %162, i64* %PC.i153
  %163 = inttoptr i64 %160 to i64*
  %164 = load i64, i64* %163
  store i64 %164, i64* %RSI.i154, align 8
  store %struct.Memory* %loadMem_418a2b, %struct.Memory** %MEMORY
  %loadMem_418a2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 33
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %167 to i64*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 1
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %RAX.i174 = bitcast %union.anon* %170 to i64*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 9
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %RSI.i175 = bitcast %union.anon* %173 to i64*
  %174 = load i64, i64* %RAX.i174
  %175 = load i64, i64* %RSI.i175
  %176 = add i64 %175, 8
  %177 = load i64, i64* %PC.i173
  %178 = add i64 %177, 3
  store i64 %178, i64* %PC.i173
  %179 = trunc i64 %174 to i32
  %180 = inttoptr i64 %176 to i32*
  %181 = load i32, i32* %180
  %182 = sub i32 %179, %181
  %183 = zext i32 %182 to i64
  store i64 %183, i64* %RAX.i174, align 8
  %184 = icmp ult i32 %179, %181
  %185 = zext i1 %184 to i8
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %185, i8* %186, align 1
  %187 = and i32 %182, 255
  %188 = call i32 @llvm.ctpop.i32(i32 %187)
  %189 = trunc i32 %188 to i8
  %190 = and i8 %189, 1
  %191 = xor i8 %190, 1
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %191, i8* %192, align 1
  %193 = xor i32 %181, %179
  %194 = xor i32 %193, %182
  %195 = lshr i32 %194, 4
  %196 = trunc i32 %195 to i8
  %197 = and i8 %196, 1
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %197, i8* %198, align 1
  %199 = icmp eq i32 %182, 0
  %200 = zext i1 %199 to i8
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %200, i8* %201, align 1
  %202 = lshr i32 %182, 31
  %203 = trunc i32 %202 to i8
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %203, i8* %204, align 1
  %205 = lshr i32 %179, 31
  %206 = lshr i32 %181, 31
  %207 = xor i32 %206, %205
  %208 = xor i32 %202, %205
  %209 = add i32 %208, %207
  %210 = icmp eq i32 %209, 2
  %211 = zext i1 %210 to i8
  %212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %211, i8* %212, align 1
  store %struct.Memory* %loadMem_418a2f, %struct.Memory** %MEMORY
  %loadMem_418a32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 33
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 1
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %EAX.i189 = bitcast %union.anon* %218 to i32*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 15
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %RBP.i190 = bitcast %union.anon* %221 to i64*
  %222 = load i64, i64* %RBP.i190
  %223 = sub i64 %222, 32
  %224 = load i32, i32* %EAX.i189
  %225 = zext i32 %224 to i64
  %226 = load i64, i64* %PC.i188
  %227 = add i64 %226, 3
  store i64 %227, i64* %PC.i188
  %228 = inttoptr i64 %223 to i32*
  store i32 %224, i32* %228
  store %struct.Memory* %loadMem_418a32, %struct.Memory** %MEMORY
  br label %block_.L_418a35

block_.L_418a35:                                  ; preds = %block_.L_418a8b, %entry
  %loadMem_418a35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %230 = getelementptr inbounds %struct.GPR, %struct.GPR* %229, i32 0, i32 33
  %231 = getelementptr inbounds %struct.Reg, %struct.Reg* %230, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %231 to i64*
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %233 = getelementptr inbounds %struct.GPR, %struct.GPR* %232, i32 0, i32 1
  %234 = getelementptr inbounds %struct.Reg, %struct.Reg* %233, i32 0, i32 0
  %RAX.i244 = bitcast %union.anon* %234 to i64*
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %236 = getelementptr inbounds %struct.GPR, %struct.GPR* %235, i32 0, i32 15
  %237 = getelementptr inbounds %struct.Reg, %struct.Reg* %236, i32 0, i32 0
  %RBP.i245 = bitcast %union.anon* %237 to i64*
  %238 = load i64, i64* %RBP.i245
  %239 = sub i64 %238, 32
  %240 = load i64, i64* %PC.i243
  %241 = add i64 %240, 3
  store i64 %241, i64* %PC.i243
  %242 = inttoptr i64 %239 to i32*
  %243 = load i32, i32* %242
  %244 = zext i32 %243 to i64
  store i64 %244, i64* %RAX.i244, align 8
  store %struct.Memory* %loadMem_418a35, %struct.Memory** %MEMORY
  %loadMem_418a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %246 = getelementptr inbounds %struct.GPR, %struct.GPR* %245, i32 0, i32 33
  %247 = getelementptr inbounds %struct.Reg, %struct.Reg* %246, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %247 to i64*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %249 = getelementptr inbounds %struct.GPR, %struct.GPR* %248, i32 0, i32 5
  %250 = getelementptr inbounds %struct.Reg, %struct.Reg* %249, i32 0, i32 0
  %RCX.i272 = bitcast %union.anon* %250 to i64*
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %252 = getelementptr inbounds %struct.GPR, %struct.GPR* %251, i32 0, i32 15
  %253 = getelementptr inbounds %struct.Reg, %struct.Reg* %252, i32 0, i32 0
  %RBP.i273 = bitcast %union.anon* %253 to i64*
  %254 = load i64, i64* %RBP.i273
  %255 = sub i64 %254, 16
  %256 = load i64, i64* %PC.i271
  %257 = add i64 %256, 4
  store i64 %257, i64* %PC.i271
  %258 = inttoptr i64 %255 to i64*
  %259 = load i64, i64* %258
  store i64 %259, i64* %RCX.i272, align 8
  store %struct.Memory* %loadMem_418a38, %struct.Memory** %MEMORY
  %loadMem_418a3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %261 = getelementptr inbounds %struct.GPR, %struct.GPR* %260, i32 0, i32 33
  %262 = getelementptr inbounds %struct.Reg, %struct.Reg* %261, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %262 to i64*
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %264 = getelementptr inbounds %struct.GPR, %struct.GPR* %263, i32 0, i32 5
  %265 = getelementptr inbounds %struct.Reg, %struct.Reg* %264, i32 0, i32 0
  %RCX.i352 = bitcast %union.anon* %265 to i64*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %267 = getelementptr inbounds %struct.GPR, %struct.GPR* %266, i32 0, i32 7
  %268 = getelementptr inbounds %struct.Reg, %struct.Reg* %267, i32 0, i32 0
  %RDX.i353 = bitcast %union.anon* %268 to i64*
  %269 = load i64, i64* %RCX.i352
  %270 = add i64 %269, 16
  %271 = load i64, i64* %PC.i351
  %272 = add i64 %271, 3
  store i64 %272, i64* %PC.i351
  %273 = inttoptr i64 %270 to i32*
  %274 = load i32, i32* %273
  %275 = zext i32 %274 to i64
  store i64 %275, i64* %RDX.i353, align 8
  store %struct.Memory* %loadMem_418a3c, %struct.Memory** %MEMORY
  %loadMem_418a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %277 = getelementptr inbounds %struct.GPR, %struct.GPR* %276, i32 0, i32 33
  %278 = getelementptr inbounds %struct.Reg, %struct.Reg* %277, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %278 to i64*
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %280 = getelementptr inbounds %struct.GPR, %struct.GPR* %279, i32 0, i32 5
  %281 = getelementptr inbounds %struct.Reg, %struct.Reg* %280, i32 0, i32 0
  %RCX.i390 = bitcast %union.anon* %281 to i64*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %283 = getelementptr inbounds %struct.GPR, %struct.GPR* %282, i32 0, i32 15
  %284 = getelementptr inbounds %struct.Reg, %struct.Reg* %283, i32 0, i32 0
  %RBP.i391 = bitcast %union.anon* %284 to i64*
  %285 = load i64, i64* %RBP.i391
  %286 = sub i64 %285, 16
  %287 = load i64, i64* %PC.i389
  %288 = add i64 %287, 4
  store i64 %288, i64* %PC.i389
  %289 = inttoptr i64 %286 to i64*
  %290 = load i64, i64* %289
  store i64 %290, i64* %RCX.i390, align 8
  store %struct.Memory* %loadMem_418a3f, %struct.Memory** %MEMORY
  %loadMem_418a43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %292 = getelementptr inbounds %struct.GPR, %struct.GPR* %291, i32 0, i32 33
  %293 = getelementptr inbounds %struct.Reg, %struct.Reg* %292, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %293 to i64*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 5
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %RCX.i420 = bitcast %union.anon* %296 to i64*
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %298 = getelementptr inbounds %struct.GPR, %struct.GPR* %297, i32 0, i32 7
  %299 = getelementptr inbounds %struct.Reg, %struct.Reg* %298, i32 0, i32 0
  %RDX.i421 = bitcast %union.anon* %299 to i64*
  %300 = load i64, i64* %RDX.i421
  %301 = load i64, i64* %RCX.i420
  %302 = add i64 %301, 8
  %303 = load i64, i64* %PC.i419
  %304 = add i64 %303, 3
  store i64 %304, i64* %PC.i419
  %305 = trunc i64 %300 to i32
  %306 = inttoptr i64 %302 to i32*
  %307 = load i32, i32* %306
  %308 = sub i32 %305, %307
  %309 = zext i32 %308 to i64
  store i64 %309, i64* %RDX.i421, align 8
  %310 = icmp ult i32 %305, %307
  %311 = zext i1 %310 to i8
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %311, i8* %312, align 1
  %313 = and i32 %308, 255
  %314 = call i32 @llvm.ctpop.i32(i32 %313)
  %315 = trunc i32 %314 to i8
  %316 = and i8 %315, 1
  %317 = xor i8 %316, 1
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %317, i8* %318, align 1
  %319 = xor i32 %307, %305
  %320 = xor i32 %319, %308
  %321 = lshr i32 %320, 4
  %322 = trunc i32 %321 to i8
  %323 = and i8 %322, 1
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %323, i8* %324, align 1
  %325 = icmp eq i32 %308, 0
  %326 = zext i1 %325 to i8
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %326, i8* %327, align 1
  %328 = lshr i32 %308, 31
  %329 = trunc i32 %328 to i8
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %329, i8* %330, align 1
  %331 = lshr i32 %305, 31
  %332 = lshr i32 %307, 31
  %333 = xor i32 %332, %331
  %334 = xor i32 %328, %331
  %335 = add i32 %334, %333
  %336 = icmp eq i32 %335, 2
  %337 = zext i1 %336 to i8
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %337, i8* %338, align 1
  store %struct.Memory* %loadMem_418a43, %struct.Memory** %MEMORY
  %loadMem_418a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %340 = getelementptr inbounds %struct.GPR, %struct.GPR* %339, i32 0, i32 33
  %341 = getelementptr inbounds %struct.Reg, %struct.Reg* %340, i32 0, i32 0
  %PC.i468 = bitcast %union.anon* %341 to i64*
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %343 = getelementptr inbounds %struct.GPR, %struct.GPR* %342, i32 0, i32 1
  %344 = getelementptr inbounds %struct.Reg, %struct.Reg* %343, i32 0, i32 0
  %EAX.i469 = bitcast %union.anon* %344 to i32*
  %345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %346 = getelementptr inbounds %struct.GPR, %struct.GPR* %345, i32 0, i32 7
  %347 = getelementptr inbounds %struct.Reg, %struct.Reg* %346, i32 0, i32 0
  %EDX.i470 = bitcast %union.anon* %347 to i32*
  %348 = load i32, i32* %EAX.i469
  %349 = zext i32 %348 to i64
  %350 = load i32, i32* %EDX.i470
  %351 = zext i32 %350 to i64
  %352 = load i64, i64* %PC.i468
  %353 = add i64 %352, 2
  store i64 %353, i64* %PC.i468
  %354 = sub i32 %348, %350
  %355 = icmp ult i32 %348, %350
  %356 = zext i1 %355 to i8
  %357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %356, i8* %357, align 1
  %358 = and i32 %354, 255
  %359 = call i32 @llvm.ctpop.i32(i32 %358)
  %360 = trunc i32 %359 to i8
  %361 = and i8 %360, 1
  %362 = xor i8 %361, 1
  %363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %362, i8* %363, align 1
  %364 = xor i64 %351, %349
  %365 = trunc i64 %364 to i32
  %366 = xor i32 %365, %354
  %367 = lshr i32 %366, 4
  %368 = trunc i32 %367 to i8
  %369 = and i8 %368, 1
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %369, i8* %370, align 1
  %371 = icmp eq i32 %354, 0
  %372 = zext i1 %371 to i8
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %372, i8* %373, align 1
  %374 = lshr i32 %354, 31
  %375 = trunc i32 %374 to i8
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %375, i8* %376, align 1
  %377 = lshr i32 %348, 31
  %378 = lshr i32 %350, 31
  %379 = xor i32 %378, %377
  %380 = xor i32 %374, %377
  %381 = add i32 %380, %379
  %382 = icmp eq i32 %381, 2
  %383 = zext i1 %382 to i8
  %384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %383, i8* %384, align 1
  store %struct.Memory* %loadMem_418a46, %struct.Memory** %MEMORY
  %loadMem_418a48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %386 = getelementptr inbounds %struct.GPR, %struct.GPR* %385, i32 0, i32 33
  %387 = getelementptr inbounds %struct.Reg, %struct.Reg* %386, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %387 to i64*
  %388 = load i64, i64* %PC.i518
  %389 = add i64 %388, 81
  %390 = load i64, i64* %PC.i518
  %391 = add i64 %390, 6
  %392 = load i64, i64* %PC.i518
  %393 = add i64 %392, 6
  store i64 %393, i64* %PC.i518
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %395 = load i8, i8* %394, align 1
  %396 = icmp eq i8 %395, 0
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %398 = load i8, i8* %397, align 1
  %399 = icmp ne i8 %398, 0
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %401 = load i8, i8* %400, align 1
  %402 = icmp ne i8 %401, 0
  %403 = xor i1 %399, %402
  %404 = xor i1 %403, true
  %405 = and i1 %396, %404
  %406 = zext i1 %405 to i8
  store i8 %406, i8* %BRANCH_TAKEN, align 1
  %407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %408 = select i1 %405, i64 %389, i64 %391
  store i64 %408, i64* %407, align 8
  store %struct.Memory* %loadMem_418a48, %struct.Memory** %MEMORY
  %loadBr_418a48 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418a48 = icmp eq i8 %loadBr_418a48, 1
  br i1 %cmpBr_418a48, label %block_.L_418a99, label %block_418a4e

block_418a4e:                                     ; preds = %block_.L_418a35
  %loadMem_418a4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %410 = getelementptr inbounds %struct.GPR, %struct.GPR* %409, i32 0, i32 33
  %411 = getelementptr inbounds %struct.Reg, %struct.Reg* %410, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %411 to i64*
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %413 = getelementptr inbounds %struct.GPR, %struct.GPR* %412, i32 0, i32 1
  %414 = getelementptr inbounds %struct.Reg, %struct.Reg* %413, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %414 to i64*
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %416 = getelementptr inbounds %struct.GPR, %struct.GPR* %415, i32 0, i32 15
  %417 = getelementptr inbounds %struct.Reg, %struct.Reg* %416, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %417 to i64*
  %418 = load i64, i64* %RBP.i533
  %419 = sub i64 %418, 16
  %420 = load i64, i64* %PC.i531
  %421 = add i64 %420, 4
  store i64 %421, i64* %PC.i531
  %422 = inttoptr i64 %419 to i64*
  %423 = load i64, i64* %422
  store i64 %423, i64* %RAX.i532, align 8
  store %struct.Memory* %loadMem_418a4e, %struct.Memory** %MEMORY
  %loadMem_418a52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %425 = getelementptr inbounds %struct.GPR, %struct.GPR* %424, i32 0, i32 33
  %426 = getelementptr inbounds %struct.Reg, %struct.Reg* %425, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %426 to i64*
  %427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %428 = getelementptr inbounds %struct.GPR, %struct.GPR* %427, i32 0, i32 1
  %429 = getelementptr inbounds %struct.Reg, %struct.Reg* %428, i32 0, i32 0
  %RAX.i572 = bitcast %union.anon* %429 to i64*
  %430 = load i64, i64* %RAX.i572
  %431 = load i64, i64* %PC.i571
  %432 = add i64 %431, 3
  store i64 %432, i64* %PC.i571
  %433 = inttoptr i64 %430 to i64*
  %434 = load i64, i64* %433
  store i64 %434, i64* %RAX.i572, align 8
  store %struct.Memory* %loadMem_418a52, %struct.Memory** %MEMORY
  %loadMem_418a55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %436 = getelementptr inbounds %struct.GPR, %struct.GPR* %435, i32 0, i32 33
  %437 = getelementptr inbounds %struct.Reg, %struct.Reg* %436, i32 0, i32 0
  %PC.i628 = bitcast %union.anon* %437 to i64*
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %439 = getelementptr inbounds %struct.GPR, %struct.GPR* %438, i32 0, i32 5
  %440 = getelementptr inbounds %struct.Reg, %struct.Reg* %439, i32 0, i32 0
  %RCX.i629 = bitcast %union.anon* %440 to i64*
  %441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %442 = getelementptr inbounds %struct.GPR, %struct.GPR* %441, i32 0, i32 15
  %443 = getelementptr inbounds %struct.Reg, %struct.Reg* %442, i32 0, i32 0
  %RBP.i630 = bitcast %union.anon* %443 to i64*
  %444 = load i64, i64* %RBP.i630
  %445 = sub i64 %444, 32
  %446 = load i64, i64* %PC.i628
  %447 = add i64 %446, 4
  store i64 %447, i64* %PC.i628
  %448 = inttoptr i64 %445 to i32*
  %449 = load i32, i32* %448
  %450 = sext i32 %449 to i64
  store i64 %450, i64* %RCX.i629, align 8
  store %struct.Memory* %loadMem_418a55, %struct.Memory** %MEMORY
  %loadMem_418a59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %452 = getelementptr inbounds %struct.GPR, %struct.GPR* %451, i32 0, i32 33
  %453 = getelementptr inbounds %struct.Reg, %struct.Reg* %452, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %453 to i64*
  %454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %455 = getelementptr inbounds %struct.GPR, %struct.GPR* %454, i32 0, i32 1
  %456 = getelementptr inbounds %struct.Reg, %struct.Reg* %455, i32 0, i32 0
  %RAX.i644 = bitcast %union.anon* %456 to i64*
  %457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %458 = getelementptr inbounds %struct.GPR, %struct.GPR* %457, i32 0, i32 5
  %459 = getelementptr inbounds %struct.Reg, %struct.Reg* %458, i32 0, i32 0
  %RCX.i645 = bitcast %union.anon* %459 to i64*
  %460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %461 = getelementptr inbounds %struct.GPR, %struct.GPR* %460, i32 0, i32 7
  %462 = getelementptr inbounds %struct.Reg, %struct.Reg* %461, i32 0, i32 0
  %RDX.i646 = bitcast %union.anon* %462 to i64*
  %463 = load i64, i64* %RAX.i644
  %464 = load i64, i64* %RCX.i645
  %465 = mul i64 %464, 4
  %466 = add i64 %465, %463
  %467 = load i64, i64* %PC.i643
  %468 = add i64 %467, 3
  store i64 %468, i64* %PC.i643
  %469 = inttoptr i64 %466 to i32*
  %470 = load i32, i32* %469
  %471 = zext i32 %470 to i64
  store i64 %471, i64* %RDX.i646, align 8
  store %struct.Memory* %loadMem_418a59, %struct.Memory** %MEMORY
  %loadMem_418a5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %473 = getelementptr inbounds %struct.GPR, %struct.GPR* %472, i32 0, i32 33
  %474 = getelementptr inbounds %struct.Reg, %struct.Reg* %473, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %474 to i64*
  %475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %476 = getelementptr inbounds %struct.GPR, %struct.GPR* %475, i32 0, i32 7
  %477 = getelementptr inbounds %struct.Reg, %struct.Reg* %476, i32 0, i32 0
  %EDX.i714 = bitcast %union.anon* %477 to i32*
  %478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %479 = getelementptr inbounds %struct.GPR, %struct.GPR* %478, i32 0, i32 15
  %480 = getelementptr inbounds %struct.Reg, %struct.Reg* %479, i32 0, i32 0
  %RBP.i715 = bitcast %union.anon* %480 to i64*
  %481 = load i32, i32* %EDX.i714
  %482 = zext i32 %481 to i64
  %483 = load i64, i64* %RBP.i715
  %484 = sub i64 %483, 24
  %485 = load i64, i64* %PC.i713
  %486 = add i64 %485, 3
  store i64 %486, i64* %PC.i713
  %487 = inttoptr i64 %484 to i32*
  %488 = load i32, i32* %487
  %489 = sub i32 %481, %488
  %490 = icmp ult i32 %481, %488
  %491 = zext i1 %490 to i8
  %492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %491, i8* %492, align 1
  %493 = and i32 %489, 255
  %494 = call i32 @llvm.ctpop.i32(i32 %493)
  %495 = trunc i32 %494 to i8
  %496 = and i8 %495, 1
  %497 = xor i8 %496, 1
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %497, i8* %498, align 1
  %499 = xor i32 %488, %481
  %500 = xor i32 %499, %489
  %501 = lshr i32 %500, 4
  %502 = trunc i32 %501 to i8
  %503 = and i8 %502, 1
  %504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %503, i8* %504, align 1
  %505 = icmp eq i32 %489, 0
  %506 = zext i1 %505 to i8
  %507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %506, i8* %507, align 1
  %508 = lshr i32 %489, 31
  %509 = trunc i32 %508 to i8
  %510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %509, i8* %510, align 1
  %511 = lshr i32 %481, 31
  %512 = lshr i32 %488, 31
  %513 = xor i32 %512, %511
  %514 = xor i32 %508, %511
  %515 = add i32 %514, %513
  %516 = icmp eq i32 %515, 2
  %517 = zext i1 %516 to i8
  %518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %517, i8* %518, align 1
  store %struct.Memory* %loadMem_418a5c, %struct.Memory** %MEMORY
  %loadMem_418a5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %520 = getelementptr inbounds %struct.GPR, %struct.GPR* %519, i32 0, i32 33
  %521 = getelementptr inbounds %struct.Reg, %struct.Reg* %520, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %521 to i64*
  %522 = load i64, i64* %PC.i752
  %523 = add i64 %522, 39
  %524 = load i64, i64* %PC.i752
  %525 = add i64 %524, 6
  %526 = load i64, i64* %PC.i752
  %527 = add i64 %526, 6
  store i64 %527, i64* %PC.i752
  %528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %529 = load i8, i8* %528, align 1
  %530 = icmp ne i8 %529, 0
  %531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %532 = load i8, i8* %531, align 1
  %533 = icmp ne i8 %532, 0
  %534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %535 = load i8, i8* %534, align 1
  %536 = icmp ne i8 %535, 0
  %537 = xor i1 %533, %536
  %538 = or i1 %530, %537
  %539 = zext i1 %538 to i8
  store i8 %539, i8* %BRANCH_TAKEN, align 1
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %541 = select i1 %538, i64 %523, i64 %525
  store i64 %541, i64* %540, align 8
  store %struct.Memory* %loadMem_418a5f, %struct.Memory** %MEMORY
  %loadBr_418a5f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418a5f = icmp eq i8 %loadBr_418a5f, 1
  br i1 %cmpBr_418a5f, label %block_.L_418a86, label %block_418a65

block_418a65:                                     ; preds = %block_418a4e
  %loadMem_418a65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %543 = getelementptr inbounds %struct.GPR, %struct.GPR* %542, i32 0, i32 33
  %544 = getelementptr inbounds %struct.Reg, %struct.Reg* %543, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %544 to i64*
  %545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %546 = getelementptr inbounds %struct.GPR, %struct.GPR* %545, i32 0, i32 1
  %547 = getelementptr inbounds %struct.Reg, %struct.Reg* %546, i32 0, i32 0
  %RAX.i775 = bitcast %union.anon* %547 to i64*
  %548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %549 = getelementptr inbounds %struct.GPR, %struct.GPR* %548, i32 0, i32 15
  %550 = getelementptr inbounds %struct.Reg, %struct.Reg* %549, i32 0, i32 0
  %RBP.i776 = bitcast %union.anon* %550 to i64*
  %551 = load i64, i64* %RBP.i776
  %552 = sub i64 %551, 16
  %553 = load i64, i64* %PC.i774
  %554 = add i64 %553, 4
  store i64 %554, i64* %PC.i774
  %555 = inttoptr i64 %552 to i64*
  %556 = load i64, i64* %555
  store i64 %556, i64* %RAX.i775, align 8
  store %struct.Memory* %loadMem_418a65, %struct.Memory** %MEMORY
  %loadMem_418a69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %558 = getelementptr inbounds %struct.GPR, %struct.GPR* %557, i32 0, i32 33
  %559 = getelementptr inbounds %struct.Reg, %struct.Reg* %558, i32 0, i32 0
  %PC.i797 = bitcast %union.anon* %559 to i64*
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %561 = getelementptr inbounds %struct.GPR, %struct.GPR* %560, i32 0, i32 1
  %562 = getelementptr inbounds %struct.Reg, %struct.Reg* %561, i32 0, i32 0
  %RAX.i798 = bitcast %union.anon* %562 to i64*
  %563 = load i64, i64* %RAX.i798
  %564 = load i64, i64* %PC.i797
  %565 = add i64 %564, 3
  store i64 %565, i64* %PC.i797
  %566 = inttoptr i64 %563 to i64*
  %567 = load i64, i64* %566
  store i64 %567, i64* %RAX.i798, align 8
  store %struct.Memory* %loadMem_418a69, %struct.Memory** %MEMORY
  %loadMem_418a6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %569 = getelementptr inbounds %struct.GPR, %struct.GPR* %568, i32 0, i32 33
  %570 = getelementptr inbounds %struct.Reg, %struct.Reg* %569, i32 0, i32 0
  %PC.i1153 = bitcast %union.anon* %570 to i64*
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %572 = getelementptr inbounds %struct.GPR, %struct.GPR* %571, i32 0, i32 5
  %573 = getelementptr inbounds %struct.Reg, %struct.Reg* %572, i32 0, i32 0
  %RCX.i1154 = bitcast %union.anon* %573 to i64*
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %575 = getelementptr inbounds %struct.GPR, %struct.GPR* %574, i32 0, i32 15
  %576 = getelementptr inbounds %struct.Reg, %struct.Reg* %575, i32 0, i32 0
  %RBP.i1155 = bitcast %union.anon* %576 to i64*
  %577 = load i64, i64* %RBP.i1155
  %578 = sub i64 %577, 32
  %579 = load i64, i64* %PC.i1153
  %580 = add i64 %579, 4
  store i64 %580, i64* %PC.i1153
  %581 = inttoptr i64 %578 to i32*
  %582 = load i32, i32* %581
  %583 = sext i32 %582 to i64
  store i64 %583, i64* %RCX.i1154, align 8
  store %struct.Memory* %loadMem_418a6c, %struct.Memory** %MEMORY
  %loadMem_418a70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %585 = getelementptr inbounds %struct.GPR, %struct.GPR* %584, i32 0, i32 33
  %586 = getelementptr inbounds %struct.Reg, %struct.Reg* %585, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %586 to i64*
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %588 = getelementptr inbounds %struct.GPR, %struct.GPR* %587, i32 0, i32 1
  %589 = getelementptr inbounds %struct.Reg, %struct.Reg* %588, i32 0, i32 0
  %RAX.i1150 = bitcast %union.anon* %589 to i64*
  %590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %591 = getelementptr inbounds %struct.GPR, %struct.GPR* %590, i32 0, i32 5
  %592 = getelementptr inbounds %struct.Reg, %struct.Reg* %591, i32 0, i32 0
  %RCX.i1151 = bitcast %union.anon* %592 to i64*
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %594 = getelementptr inbounds %struct.GPR, %struct.GPR* %593, i32 0, i32 7
  %595 = getelementptr inbounds %struct.Reg, %struct.Reg* %594, i32 0, i32 0
  %RDX.i1152 = bitcast %union.anon* %595 to i64*
  %596 = load i64, i64* %RAX.i1150
  %597 = load i64, i64* %RCX.i1151
  %598 = mul i64 %597, 4
  %599 = add i64 %598, %596
  %600 = load i64, i64* %PC.i1149
  %601 = add i64 %600, 3
  store i64 %601, i64* %PC.i1149
  %602 = inttoptr i64 %599 to i32*
  %603 = load i32, i32* %602
  %604 = zext i32 %603 to i64
  store i64 %604, i64* %RDX.i1152, align 8
  store %struct.Memory* %loadMem_418a70, %struct.Memory** %MEMORY
  %loadMem_418a73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %606 = getelementptr inbounds %struct.GPR, %struct.GPR* %605, i32 0, i32 33
  %607 = getelementptr inbounds %struct.Reg, %struct.Reg* %606, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %607 to i64*
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %609 = getelementptr inbounds %struct.GPR, %struct.GPR* %608, i32 0, i32 7
  %610 = getelementptr inbounds %struct.Reg, %struct.Reg* %609, i32 0, i32 0
  %EDX.i1147 = bitcast %union.anon* %610 to i32*
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %612 = getelementptr inbounds %struct.GPR, %struct.GPR* %611, i32 0, i32 15
  %613 = getelementptr inbounds %struct.Reg, %struct.Reg* %612, i32 0, i32 0
  %RBP.i1148 = bitcast %union.anon* %613 to i64*
  %614 = load i64, i64* %RBP.i1148
  %615 = sub i64 %614, 24
  %616 = load i32, i32* %EDX.i1147
  %617 = zext i32 %616 to i64
  %618 = load i64, i64* %PC.i1146
  %619 = add i64 %618, 3
  store i64 %619, i64* %PC.i1146
  %620 = inttoptr i64 %615 to i32*
  store i32 %616, i32* %620
  store %struct.Memory* %loadMem_418a73, %struct.Memory** %MEMORY
  %loadMem_418a76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %622 = getelementptr inbounds %struct.GPR, %struct.GPR* %621, i32 0, i32 33
  %623 = getelementptr inbounds %struct.Reg, %struct.Reg* %622, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %623 to i64*
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %625 = getelementptr inbounds %struct.GPR, %struct.GPR* %624, i32 0, i32 7
  %626 = getelementptr inbounds %struct.Reg, %struct.Reg* %625, i32 0, i32 0
  %RDX.i1144 = bitcast %union.anon* %626 to i64*
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %628 = getelementptr inbounds %struct.GPR, %struct.GPR* %627, i32 0, i32 15
  %629 = getelementptr inbounds %struct.Reg, %struct.Reg* %628, i32 0, i32 0
  %RBP.i1145 = bitcast %union.anon* %629 to i64*
  %630 = load i64, i64* %RBP.i1145
  %631 = sub i64 %630, 32
  %632 = load i64, i64* %PC.i1143
  %633 = add i64 %632, 3
  store i64 %633, i64* %PC.i1143
  %634 = inttoptr i64 %631 to i32*
  %635 = load i32, i32* %634
  %636 = zext i32 %635 to i64
  store i64 %636, i64* %RDX.i1144, align 8
  store %struct.Memory* %loadMem_418a76, %struct.Memory** %MEMORY
  %loadMem_418a79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %638 = getelementptr inbounds %struct.GPR, %struct.GPR* %637, i32 0, i32 33
  %639 = getelementptr inbounds %struct.Reg, %struct.Reg* %638, i32 0, i32 0
  %PC.i1140 = bitcast %union.anon* %639 to i64*
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %641 = getelementptr inbounds %struct.GPR, %struct.GPR* %640, i32 0, i32 1
  %642 = getelementptr inbounds %struct.Reg, %struct.Reg* %641, i32 0, i32 0
  %RAX.i1141 = bitcast %union.anon* %642 to i64*
  %643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %644 = getelementptr inbounds %struct.GPR, %struct.GPR* %643, i32 0, i32 15
  %645 = getelementptr inbounds %struct.Reg, %struct.Reg* %644, i32 0, i32 0
  %RBP.i1142 = bitcast %union.anon* %645 to i64*
  %646 = load i64, i64* %RBP.i1142
  %647 = sub i64 %646, 16
  %648 = load i64, i64* %PC.i1140
  %649 = add i64 %648, 4
  store i64 %649, i64* %PC.i1140
  %650 = inttoptr i64 %647 to i64*
  %651 = load i64, i64* %650
  store i64 %651, i64* %RAX.i1141, align 8
  store %struct.Memory* %loadMem_418a79, %struct.Memory** %MEMORY
  %loadMem_418a7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 33
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %654 to i64*
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %656 = getelementptr inbounds %struct.GPR, %struct.GPR* %655, i32 0, i32 1
  %657 = getelementptr inbounds %struct.Reg, %struct.Reg* %656, i32 0, i32 0
  %RAX.i1138 = bitcast %union.anon* %657 to i64*
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %659 = getelementptr inbounds %struct.GPR, %struct.GPR* %658, i32 0, i32 7
  %660 = getelementptr inbounds %struct.Reg, %struct.Reg* %659, i32 0, i32 0
  %RDX.i1139 = bitcast %union.anon* %660 to i64*
  %661 = load i64, i64* %RDX.i1139
  %662 = load i64, i64* %RAX.i1138
  %663 = add i64 %662, 8
  %664 = load i64, i64* %PC.i1137
  %665 = add i64 %664, 3
  store i64 %665, i64* %PC.i1137
  %666 = trunc i64 %661 to i32
  %667 = inttoptr i64 %663 to i32*
  %668 = load i32, i32* %667
  %669 = add i32 %668, %666
  %670 = zext i32 %669 to i64
  store i64 %670, i64* %RDX.i1139, align 8
  %671 = icmp ult i32 %669, %666
  %672 = icmp ult i32 %669, %668
  %673 = or i1 %671, %672
  %674 = zext i1 %673 to i8
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %674, i8* %675, align 1
  %676 = and i32 %669, 255
  %677 = call i32 @llvm.ctpop.i32(i32 %676)
  %678 = trunc i32 %677 to i8
  %679 = and i8 %678, 1
  %680 = xor i8 %679, 1
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %680, i8* %681, align 1
  %682 = xor i32 %668, %666
  %683 = xor i32 %682, %669
  %684 = lshr i32 %683, 4
  %685 = trunc i32 %684 to i8
  %686 = and i8 %685, 1
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %686, i8* %687, align 1
  %688 = icmp eq i32 %669, 0
  %689 = zext i1 %688 to i8
  %690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %689, i8* %690, align 1
  %691 = lshr i32 %669, 31
  %692 = trunc i32 %691 to i8
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %692, i8* %693, align 1
  %694 = lshr i32 %666, 31
  %695 = lshr i32 %668, 31
  %696 = xor i32 %691, %694
  %697 = xor i32 %691, %695
  %698 = add i32 %696, %697
  %699 = icmp eq i32 %698, 2
  %700 = zext i1 %699 to i8
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %700, i8* %701, align 1
  store %struct.Memory* %loadMem_418a7d, %struct.Memory** %MEMORY
  %loadMem_418a80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %703 = getelementptr inbounds %struct.GPR, %struct.GPR* %702, i32 0, i32 33
  %704 = getelementptr inbounds %struct.Reg, %struct.Reg* %703, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %704 to i64*
  %705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %706 = getelementptr inbounds %struct.GPR, %struct.GPR* %705, i32 0, i32 7
  %707 = getelementptr inbounds %struct.Reg, %struct.Reg* %706, i32 0, i32 0
  %EDX.i1135 = bitcast %union.anon* %707 to i32*
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %709 = getelementptr inbounds %struct.GPR, %struct.GPR* %708, i32 0, i32 15
  %710 = getelementptr inbounds %struct.Reg, %struct.Reg* %709, i32 0, i32 0
  %RBP.i1136 = bitcast %union.anon* %710 to i64*
  %711 = load i64, i64* %RBP.i1136
  %712 = sub i64 %711, 136
  %713 = load i32, i32* %EDX.i1135
  %714 = zext i32 %713 to i64
  %715 = load i64, i64* %PC.i1134
  %716 = add i64 %715, 6
  store i64 %716, i64* %PC.i1134
  %717 = inttoptr i64 %712 to i32*
  store i32 %713, i32* %717
  store %struct.Memory* %loadMem_418a80, %struct.Memory** %MEMORY
  br label %block_.L_418a86

block_.L_418a86:                                  ; preds = %block_418a65, %block_418a4e
  %loadMem_418a86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %719 = getelementptr inbounds %struct.GPR, %struct.GPR* %718, i32 0, i32 33
  %720 = getelementptr inbounds %struct.Reg, %struct.Reg* %719, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %720 to i64*
  %721 = load i64, i64* %PC.i1133
  %722 = add i64 %721, 5
  %723 = load i64, i64* %PC.i1133
  %724 = add i64 %723, 5
  store i64 %724, i64* %PC.i1133
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %722, i64* %725, align 8
  store %struct.Memory* %loadMem_418a86, %struct.Memory** %MEMORY
  br label %block_.L_418a8b

block_.L_418a8b:                                  ; preds = %block_.L_418a86
  %loadMem_418a8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 33
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %PC.i1130 = bitcast %union.anon* %728 to i64*
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %730 = getelementptr inbounds %struct.GPR, %struct.GPR* %729, i32 0, i32 1
  %731 = getelementptr inbounds %struct.Reg, %struct.Reg* %730, i32 0, i32 0
  %RAX.i1131 = bitcast %union.anon* %731 to i64*
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %733 = getelementptr inbounds %struct.GPR, %struct.GPR* %732, i32 0, i32 15
  %734 = getelementptr inbounds %struct.Reg, %struct.Reg* %733, i32 0, i32 0
  %RBP.i1132 = bitcast %union.anon* %734 to i64*
  %735 = load i64, i64* %RBP.i1132
  %736 = sub i64 %735, 32
  %737 = load i64, i64* %PC.i1130
  %738 = add i64 %737, 3
  store i64 %738, i64* %PC.i1130
  %739 = inttoptr i64 %736 to i32*
  %740 = load i32, i32* %739
  %741 = zext i32 %740 to i64
  store i64 %741, i64* %RAX.i1131, align 8
  store %struct.Memory* %loadMem_418a8b, %struct.Memory** %MEMORY
  %loadMem_418a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %743 = getelementptr inbounds %struct.GPR, %struct.GPR* %742, i32 0, i32 33
  %744 = getelementptr inbounds %struct.Reg, %struct.Reg* %743, i32 0, i32 0
  %PC.i1128 = bitcast %union.anon* %744 to i64*
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %746 = getelementptr inbounds %struct.GPR, %struct.GPR* %745, i32 0, i32 1
  %747 = getelementptr inbounds %struct.Reg, %struct.Reg* %746, i32 0, i32 0
  %RAX.i1129 = bitcast %union.anon* %747 to i64*
  %748 = load i64, i64* %RAX.i1129
  %749 = load i64, i64* %PC.i1128
  %750 = add i64 %749, 3
  store i64 %750, i64* %PC.i1128
  %751 = trunc i64 %748 to i32
  %752 = add i32 1, %751
  %753 = zext i32 %752 to i64
  store i64 %753, i64* %RAX.i1129, align 8
  %754 = icmp ult i32 %752, %751
  %755 = icmp ult i32 %752, 1
  %756 = or i1 %754, %755
  %757 = zext i1 %756 to i8
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %757, i8* %758, align 1
  %759 = and i32 %752, 255
  %760 = call i32 @llvm.ctpop.i32(i32 %759)
  %761 = trunc i32 %760 to i8
  %762 = and i8 %761, 1
  %763 = xor i8 %762, 1
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %763, i8* %764, align 1
  %765 = xor i64 1, %748
  %766 = trunc i64 %765 to i32
  %767 = xor i32 %766, %752
  %768 = lshr i32 %767, 4
  %769 = trunc i32 %768 to i8
  %770 = and i8 %769, 1
  %771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %770, i8* %771, align 1
  %772 = icmp eq i32 %752, 0
  %773 = zext i1 %772 to i8
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %773, i8* %774, align 1
  %775 = lshr i32 %752, 31
  %776 = trunc i32 %775 to i8
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %776, i8* %777, align 1
  %778 = lshr i32 %751, 31
  %779 = xor i32 %775, %778
  %780 = add i32 %779, %775
  %781 = icmp eq i32 %780, 2
  %782 = zext i1 %781 to i8
  %783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %782, i8* %783, align 1
  store %struct.Memory* %loadMem_418a8e, %struct.Memory** %MEMORY
  %loadMem_418a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %785 = getelementptr inbounds %struct.GPR, %struct.GPR* %784, i32 0, i32 33
  %786 = getelementptr inbounds %struct.Reg, %struct.Reg* %785, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %786 to i64*
  %787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %788 = getelementptr inbounds %struct.GPR, %struct.GPR* %787, i32 0, i32 1
  %789 = getelementptr inbounds %struct.Reg, %struct.Reg* %788, i32 0, i32 0
  %EAX.i1126 = bitcast %union.anon* %789 to i32*
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %791 = getelementptr inbounds %struct.GPR, %struct.GPR* %790, i32 0, i32 15
  %792 = getelementptr inbounds %struct.Reg, %struct.Reg* %791, i32 0, i32 0
  %RBP.i1127 = bitcast %union.anon* %792 to i64*
  %793 = load i64, i64* %RBP.i1127
  %794 = sub i64 %793, 32
  %795 = load i32, i32* %EAX.i1126
  %796 = zext i32 %795 to i64
  %797 = load i64, i64* %PC.i1125
  %798 = add i64 %797, 3
  store i64 %798, i64* %PC.i1125
  %799 = inttoptr i64 %794 to i32*
  store i32 %795, i32* %799
  store %struct.Memory* %loadMem_418a91, %struct.Memory** %MEMORY
  %loadMem_418a94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 33
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %802 to i64*
  %803 = load i64, i64* %PC.i1124
  %804 = add i64 %803, -95
  %805 = load i64, i64* %PC.i1124
  %806 = add i64 %805, 5
  store i64 %806, i64* %PC.i1124
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %804, i64* %807, align 8
  store %struct.Memory* %loadMem_418a94, %struct.Memory** %MEMORY
  br label %block_.L_418a35

block_.L_418a99:                                  ; preds = %block_.L_418a35
  %loadMem_418a99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %809 = getelementptr inbounds %struct.GPR, %struct.GPR* %808, i32 0, i32 33
  %810 = getelementptr inbounds %struct.Reg, %struct.Reg* %809, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %810 to i64*
  %811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %812 = getelementptr inbounds %struct.GPR, %struct.GPR* %811, i32 0, i32 1
  %813 = getelementptr inbounds %struct.Reg, %struct.Reg* %812, i32 0, i32 0
  %RAX.i1122 = bitcast %union.anon* %813 to i64*
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %815 = getelementptr inbounds %struct.GPR, %struct.GPR* %814, i32 0, i32 15
  %816 = getelementptr inbounds %struct.Reg, %struct.Reg* %815, i32 0, i32 0
  %RBP.i1123 = bitcast %union.anon* %816 to i64*
  %817 = load i64, i64* %RBP.i1123
  %818 = sub i64 %817, 136
  %819 = load i64, i64* %PC.i1121
  %820 = add i64 %819, 6
  store i64 %820, i64* %PC.i1121
  %821 = inttoptr i64 %818 to i32*
  %822 = load i32, i32* %821
  %823 = zext i32 %822 to i64
  store i64 %823, i64* %RAX.i1122, align 8
  store %struct.Memory* %loadMem_418a99, %struct.Memory** %MEMORY
  %loadMem_418a9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %825 = getelementptr inbounds %struct.GPR, %struct.GPR* %824, i32 0, i32 33
  %826 = getelementptr inbounds %struct.Reg, %struct.Reg* %825, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %826 to i64*
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 1
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %EAX.i1119 = bitcast %union.anon* %829 to i32*
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %831 = getelementptr inbounds %struct.GPR, %struct.GPR* %830, i32 0, i32 15
  %832 = getelementptr inbounds %struct.Reg, %struct.Reg* %831, i32 0, i32 0
  %RBP.i1120 = bitcast %union.anon* %832 to i64*
  %833 = load i64, i64* %RBP.i1120
  %834 = sub i64 %833, 144
  %835 = load i32, i32* %EAX.i1119
  %836 = zext i32 %835 to i64
  %837 = load i64, i64* %PC.i1118
  %838 = add i64 %837, 6
  store i64 %838, i64* %PC.i1118
  %839 = inttoptr i64 %834 to i32*
  store i32 %835, i32* %839
  store %struct.Memory* %loadMem_418a9f, %struct.Memory** %MEMORY
  %loadMem_418aa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %841 = getelementptr inbounds %struct.GPR, %struct.GPR* %840, i32 0, i32 33
  %842 = getelementptr inbounds %struct.Reg, %struct.Reg* %841, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %842 to i64*
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %844 = getelementptr inbounds %struct.GPR, %struct.GPR* %843, i32 0, i32 15
  %845 = getelementptr inbounds %struct.Reg, %struct.Reg* %844, i32 0, i32 0
  %RBP.i1117 = bitcast %union.anon* %845 to i64*
  %846 = load i64, i64* %RBP.i1117
  %847 = sub i64 %846, 28
  %848 = load i64, i64* %PC.i1116
  %849 = add i64 %848, 7
  store i64 %849, i64* %PC.i1116
  %850 = inttoptr i64 %847 to i32*
  store i32 0, i32* %850
  store %struct.Memory* %loadMem_418aa5, %struct.Memory** %MEMORY
  br label %block_.L_418aac

block_.L_418aac:                                  ; preds = %block_.L_418b21, %block_.L_418a99
  %loadMem_418aac = load %struct.Memory*, %struct.Memory** %MEMORY
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %852 = getelementptr inbounds %struct.GPR, %struct.GPR* %851, i32 0, i32 33
  %853 = getelementptr inbounds %struct.Reg, %struct.Reg* %852, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %853 to i64*
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %855 = getelementptr inbounds %struct.GPR, %struct.GPR* %854, i32 0, i32 1
  %856 = getelementptr inbounds %struct.Reg, %struct.Reg* %855, i32 0, i32 0
  %RAX.i1114 = bitcast %union.anon* %856 to i64*
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %858 = getelementptr inbounds %struct.GPR, %struct.GPR* %857, i32 0, i32 15
  %859 = getelementptr inbounds %struct.Reg, %struct.Reg* %858, i32 0, i32 0
  %RBP.i1115 = bitcast %union.anon* %859 to i64*
  %860 = load i64, i64* %RBP.i1115
  %861 = sub i64 %860, 136
  %862 = load i64, i64* %PC.i1113
  %863 = add i64 %862, 6
  store i64 %863, i64* %PC.i1113
  %864 = inttoptr i64 %861 to i32*
  %865 = load i32, i32* %864
  %866 = zext i32 %865 to i64
  store i64 %866, i64* %RAX.i1114, align 8
  store %struct.Memory* %loadMem_418aac, %struct.Memory** %MEMORY
  %loadMem_418ab2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %868 = getelementptr inbounds %struct.GPR, %struct.GPR* %867, i32 0, i32 33
  %869 = getelementptr inbounds %struct.Reg, %struct.Reg* %868, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %869 to i64*
  %870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %871 = getelementptr inbounds %struct.GPR, %struct.GPR* %870, i32 0, i32 5
  %872 = getelementptr inbounds %struct.Reg, %struct.Reg* %871, i32 0, i32 0
  %RCX.i1111 = bitcast %union.anon* %872 to i64*
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %874 = getelementptr inbounds %struct.GPR, %struct.GPR* %873, i32 0, i32 15
  %875 = getelementptr inbounds %struct.Reg, %struct.Reg* %874, i32 0, i32 0
  %RBP.i1112 = bitcast %union.anon* %875 to i64*
  %876 = load i64, i64* %RBP.i1112
  %877 = sub i64 %876, 16
  %878 = load i64, i64* %PC.i1110
  %879 = add i64 %878, 4
  store i64 %879, i64* %PC.i1110
  %880 = inttoptr i64 %877 to i64*
  %881 = load i64, i64* %880
  store i64 %881, i64* %RCX.i1111, align 8
  store %struct.Memory* %loadMem_418ab2, %struct.Memory** %MEMORY
  %loadMem_418ab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %883 = getelementptr inbounds %struct.GPR, %struct.GPR* %882, i32 0, i32 33
  %884 = getelementptr inbounds %struct.Reg, %struct.Reg* %883, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %884 to i64*
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %886 = getelementptr inbounds %struct.GPR, %struct.GPR* %885, i32 0, i32 1
  %887 = getelementptr inbounds %struct.Reg, %struct.Reg* %886, i32 0, i32 0
  %EAX.i1108 = bitcast %union.anon* %887 to i32*
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %889 = getelementptr inbounds %struct.GPR, %struct.GPR* %888, i32 0, i32 5
  %890 = getelementptr inbounds %struct.Reg, %struct.Reg* %889, i32 0, i32 0
  %RCX.i1109 = bitcast %union.anon* %890 to i64*
  %891 = load i32, i32* %EAX.i1108
  %892 = zext i32 %891 to i64
  %893 = load i64, i64* %RCX.i1109
  %894 = add i64 %893, 20
  %895 = load i64, i64* %PC.i1107
  %896 = add i64 %895, 3
  store i64 %896, i64* %PC.i1107
  %897 = inttoptr i64 %894 to i32*
  %898 = load i32, i32* %897
  %899 = sub i32 %891, %898
  %900 = icmp ult i32 %891, %898
  %901 = zext i1 %900 to i8
  %902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %901, i8* %902, align 1
  %903 = and i32 %899, 255
  %904 = call i32 @llvm.ctpop.i32(i32 %903)
  %905 = trunc i32 %904 to i8
  %906 = and i8 %905, 1
  %907 = xor i8 %906, 1
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %907, i8* %908, align 1
  %909 = xor i32 %898, %891
  %910 = xor i32 %909, %899
  %911 = lshr i32 %910, 4
  %912 = trunc i32 %911 to i8
  %913 = and i8 %912, 1
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %913, i8* %914, align 1
  %915 = icmp eq i32 %899, 0
  %916 = zext i1 %915 to i8
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %916, i8* %917, align 1
  %918 = lshr i32 %899, 31
  %919 = trunc i32 %918 to i8
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %919, i8* %920, align 1
  %921 = lshr i32 %891, 31
  %922 = lshr i32 %898, 31
  %923 = xor i32 %922, %921
  %924 = xor i32 %918, %921
  %925 = add i32 %924, %923
  %926 = icmp eq i32 %925, 2
  %927 = zext i1 %926 to i8
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %927, i8* %928, align 1
  store %struct.Memory* %loadMem_418ab6, %struct.Memory** %MEMORY
  %loadMem_418ab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %930 = getelementptr inbounds %struct.GPR, %struct.GPR* %929, i32 0, i32 33
  %931 = getelementptr inbounds %struct.Reg, %struct.Reg* %930, i32 0, i32 0
  %PC.i1106 = bitcast %union.anon* %931 to i64*
  %932 = load i64, i64* %PC.i1106
  %933 = add i64 %932, 124
  %934 = load i64, i64* %PC.i1106
  %935 = add i64 %934, 6
  %936 = load i64, i64* %PC.i1106
  %937 = add i64 %936, 6
  store i64 %937, i64* %PC.i1106
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %939 = load i8, i8* %938, align 1
  %940 = icmp ne i8 %939, 0
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %942 = load i8, i8* %941, align 1
  %943 = icmp ne i8 %942, 0
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %945 = load i8, i8* %944, align 1
  %946 = icmp ne i8 %945, 0
  %947 = xor i1 %943, %946
  %948 = or i1 %940, %947
  %949 = zext i1 %948 to i8
  store i8 %949, i8* %BRANCH_TAKEN, align 1
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %951 = select i1 %948, i64 %933, i64 %935
  store i64 %951, i64* %950, align 8
  store %struct.Memory* %loadMem_418ab9, %struct.Memory** %MEMORY
  %loadBr_418ab9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418ab9 = icmp eq i8 %loadBr_418ab9, 1
  br i1 %cmpBr_418ab9, label %block_.L_418b35, label %block_418abf

block_418abf:                                     ; preds = %block_.L_418aac
  %loadMem_418abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %953 = getelementptr inbounds %struct.GPR, %struct.GPR* %952, i32 0, i32 33
  %954 = getelementptr inbounds %struct.Reg, %struct.Reg* %953, i32 0, i32 0
  %PC.i1103 = bitcast %union.anon* %954 to i64*
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %956 = getelementptr inbounds %struct.GPR, %struct.GPR* %955, i32 0, i32 1
  %957 = getelementptr inbounds %struct.Reg, %struct.Reg* %956, i32 0, i32 0
  %RAX.i1104 = bitcast %union.anon* %957 to i64*
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %959 = getelementptr inbounds %struct.GPR, %struct.GPR* %958, i32 0, i32 15
  %960 = getelementptr inbounds %struct.Reg, %struct.Reg* %959, i32 0, i32 0
  %RBP.i1105 = bitcast %union.anon* %960 to i64*
  %961 = load i64, i64* %RBP.i1105
  %962 = sub i64 %961, 136
  %963 = load i64, i64* %PC.i1103
  %964 = add i64 %963, 6
  store i64 %964, i64* %PC.i1103
  %965 = inttoptr i64 %962 to i32*
  %966 = load i32, i32* %965
  %967 = zext i32 %966 to i64
  store i64 %967, i64* %RAX.i1104, align 8
  store %struct.Memory* %loadMem_418abf, %struct.Memory** %MEMORY
  %loadMem_418ac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %969 = getelementptr inbounds %struct.GPR, %struct.GPR* %968, i32 0, i32 33
  %970 = getelementptr inbounds %struct.Reg, %struct.Reg* %969, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %970 to i64*
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %972 = getelementptr inbounds %struct.GPR, %struct.GPR* %971, i32 0, i32 5
  %973 = getelementptr inbounds %struct.Reg, %struct.Reg* %972, i32 0, i32 0
  %RCX.i1101 = bitcast %union.anon* %973 to i64*
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %975 = getelementptr inbounds %struct.GPR, %struct.GPR* %974, i32 0, i32 15
  %976 = getelementptr inbounds %struct.Reg, %struct.Reg* %975, i32 0, i32 0
  %RBP.i1102 = bitcast %union.anon* %976 to i64*
  %977 = load i64, i64* %RBP.i1102
  %978 = sub i64 %977, 16
  %979 = load i64, i64* %PC.i1100
  %980 = add i64 %979, 4
  store i64 %980, i64* %PC.i1100
  %981 = inttoptr i64 %978 to i64*
  %982 = load i64, i64* %981
  store i64 %982, i64* %RCX.i1101, align 8
  store %struct.Memory* %loadMem_418ac5, %struct.Memory** %MEMORY
  %loadMem_418ac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %984 = getelementptr inbounds %struct.GPR, %struct.GPR* %983, i32 0, i32 33
  %985 = getelementptr inbounds %struct.Reg, %struct.Reg* %984, i32 0, i32 0
  %PC.i1097 = bitcast %union.anon* %985 to i64*
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %987 = getelementptr inbounds %struct.GPR, %struct.GPR* %986, i32 0, i32 1
  %988 = getelementptr inbounds %struct.Reg, %struct.Reg* %987, i32 0, i32 0
  %RAX.i1098 = bitcast %union.anon* %988 to i64*
  %989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %990 = getelementptr inbounds %struct.GPR, %struct.GPR* %989, i32 0, i32 5
  %991 = getelementptr inbounds %struct.Reg, %struct.Reg* %990, i32 0, i32 0
  %RCX.i1099 = bitcast %union.anon* %991 to i64*
  %992 = load i64, i64* %RAX.i1098
  %993 = load i64, i64* %RCX.i1099
  %994 = add i64 %993, 8
  %995 = load i64, i64* %PC.i1097
  %996 = add i64 %995, 3
  store i64 %996, i64* %PC.i1097
  %997 = trunc i64 %992 to i32
  %998 = inttoptr i64 %994 to i32*
  %999 = load i32, i32* %998
  %1000 = sub i32 %997, %999
  %1001 = zext i32 %1000 to i64
  store i64 %1001, i64* %RAX.i1098, align 8
  %1002 = icmp ult i32 %997, %999
  %1003 = zext i1 %1002 to i8
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1003, i8* %1004, align 1
  %1005 = and i32 %1000, 255
  %1006 = call i32 @llvm.ctpop.i32(i32 %1005)
  %1007 = trunc i32 %1006 to i8
  %1008 = and i8 %1007, 1
  %1009 = xor i8 %1008, 1
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1009, i8* %1010, align 1
  %1011 = xor i32 %999, %997
  %1012 = xor i32 %1011, %1000
  %1013 = lshr i32 %1012, 4
  %1014 = trunc i32 %1013 to i8
  %1015 = and i8 %1014, 1
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1015, i8* %1016, align 1
  %1017 = icmp eq i32 %1000, 0
  %1018 = zext i1 %1017 to i8
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1018, i8* %1019, align 1
  %1020 = lshr i32 %1000, 31
  %1021 = trunc i32 %1020 to i8
  %1022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1021, i8* %1022, align 1
  %1023 = lshr i32 %997, 31
  %1024 = lshr i32 %999, 31
  %1025 = xor i32 %1024, %1023
  %1026 = xor i32 %1020, %1023
  %1027 = add i32 %1026, %1025
  %1028 = icmp eq i32 %1027, 2
  %1029 = zext i1 %1028 to i8
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1029, i8* %1030, align 1
  store %struct.Memory* %loadMem_418ac9, %struct.Memory** %MEMORY
  %loadMem_418acc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1032 = getelementptr inbounds %struct.GPR, %struct.GPR* %1031, i32 0, i32 33
  %1033 = getelementptr inbounds %struct.Reg, %struct.Reg* %1032, i32 0, i32 0
  %PC.i1094 = bitcast %union.anon* %1033 to i64*
  %1034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1035 = getelementptr inbounds %struct.GPR, %struct.GPR* %1034, i32 0, i32 1
  %1036 = getelementptr inbounds %struct.Reg, %struct.Reg* %1035, i32 0, i32 0
  %EAX.i1095 = bitcast %union.anon* %1036 to i32*
  %1037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1038 = getelementptr inbounds %struct.GPR, %struct.GPR* %1037, i32 0, i32 15
  %1039 = getelementptr inbounds %struct.Reg, %struct.Reg* %1038, i32 0, i32 0
  %RBP.i1096 = bitcast %union.anon* %1039 to i64*
  %1040 = load i64, i64* %RBP.i1096
  %1041 = sub i64 %1040, 32
  %1042 = load i32, i32* %EAX.i1095
  %1043 = zext i32 %1042 to i64
  %1044 = load i64, i64* %PC.i1094
  %1045 = add i64 %1044, 3
  store i64 %1045, i64* %PC.i1094
  %1046 = inttoptr i64 %1041 to i32*
  store i32 %1042, i32* %1046
  store %struct.Memory* %loadMem_418acc, %struct.Memory** %MEMORY
  %loadMem_418acf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1048 = getelementptr inbounds %struct.GPR, %struct.GPR* %1047, i32 0, i32 33
  %1049 = getelementptr inbounds %struct.Reg, %struct.Reg* %1048, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %1049 to i64*
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1051 = getelementptr inbounds %struct.GPR, %struct.GPR* %1050, i32 0, i32 5
  %1052 = getelementptr inbounds %struct.Reg, %struct.Reg* %1051, i32 0, i32 0
  %RCX.i1092 = bitcast %union.anon* %1052 to i64*
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1054 = getelementptr inbounds %struct.GPR, %struct.GPR* %1053, i32 0, i32 15
  %1055 = getelementptr inbounds %struct.Reg, %struct.Reg* %1054, i32 0, i32 0
  %RBP.i1093 = bitcast %union.anon* %1055 to i64*
  %1056 = load i64, i64* %RBP.i1093
  %1057 = sub i64 %1056, 16
  %1058 = load i64, i64* %PC.i1091
  %1059 = add i64 %1058, 4
  store i64 %1059, i64* %PC.i1091
  %1060 = inttoptr i64 %1057 to i64*
  %1061 = load i64, i64* %1060
  store i64 %1061, i64* %RCX.i1092, align 8
  store %struct.Memory* %loadMem_418acf, %struct.Memory** %MEMORY
  %loadMem_418ad3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 33
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %1064 to i64*
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1066 = getelementptr inbounds %struct.GPR, %struct.GPR* %1065, i32 0, i32 5
  %1067 = getelementptr inbounds %struct.Reg, %struct.Reg* %1066, i32 0, i32 0
  %RCX.i1090 = bitcast %union.anon* %1067 to i64*
  %1068 = load i64, i64* %RCX.i1090
  %1069 = load i64, i64* %PC.i1089
  %1070 = add i64 %1069, 3
  store i64 %1070, i64* %PC.i1089
  %1071 = inttoptr i64 %1068 to i64*
  %1072 = load i64, i64* %1071
  store i64 %1072, i64* %RCX.i1090, align 8
  store %struct.Memory* %loadMem_418ad3, %struct.Memory** %MEMORY
  %loadMem_418ad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1074 = getelementptr inbounds %struct.GPR, %struct.GPR* %1073, i32 0, i32 33
  %1075 = getelementptr inbounds %struct.Reg, %struct.Reg* %1074, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %1075 to i64*
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1077 = getelementptr inbounds %struct.GPR, %struct.GPR* %1076, i32 0, i32 7
  %1078 = getelementptr inbounds %struct.Reg, %struct.Reg* %1077, i32 0, i32 0
  %RDX.i1087 = bitcast %union.anon* %1078 to i64*
  %1079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1080 = getelementptr inbounds %struct.GPR, %struct.GPR* %1079, i32 0, i32 15
  %1081 = getelementptr inbounds %struct.Reg, %struct.Reg* %1080, i32 0, i32 0
  %RBP.i1088 = bitcast %union.anon* %1081 to i64*
  %1082 = load i64, i64* %RBP.i1088
  %1083 = sub i64 %1082, 32
  %1084 = load i64, i64* %PC.i1086
  %1085 = add i64 %1084, 4
  store i64 %1085, i64* %PC.i1086
  %1086 = inttoptr i64 %1083 to i32*
  %1087 = load i32, i32* %1086
  %1088 = sext i32 %1087 to i64
  store i64 %1088, i64* %RDX.i1087, align 8
  store %struct.Memory* %loadMem_418ad6, %struct.Memory** %MEMORY
  %loadMem_418ada = load %struct.Memory*, %struct.Memory** %MEMORY
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 33
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %1091 to i64*
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 5
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %RCX.i1084 = bitcast %union.anon* %1094 to i64*
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1096 = getelementptr inbounds %struct.GPR, %struct.GPR* %1095, i32 0, i32 7
  %1097 = getelementptr inbounds %struct.Reg, %struct.Reg* %1096, i32 0, i32 0
  %RDX.i1085 = bitcast %union.anon* %1097 to i64*
  %1098 = load i64, i64* %RCX.i1084
  %1099 = load i64, i64* %RDX.i1085
  %1100 = mul i64 %1099, 4
  %1101 = add i64 %1100, %1098
  %1102 = load i64, i64* %PC.i1083
  %1103 = add i64 %1102, 4
  store i64 %1103, i64* %PC.i1083
  %1104 = inttoptr i64 %1101 to i32*
  %1105 = load i32, i32* %1104
  %1106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1106, align 1
  %1107 = and i32 %1105, 255
  %1108 = call i32 @llvm.ctpop.i32(i32 %1107)
  %1109 = trunc i32 %1108 to i8
  %1110 = and i8 %1109, 1
  %1111 = xor i8 %1110, 1
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1111, i8* %1112, align 1
  %1113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1113, align 1
  %1114 = icmp eq i32 %1105, 0
  %1115 = zext i1 %1114 to i8
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1115, i8* %1116, align 1
  %1117 = lshr i32 %1105, 31
  %1118 = trunc i32 %1117 to i8
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1118, i8* %1119, align 1
  %1120 = lshr i32 %1105, 31
  %1121 = xor i32 %1117, %1120
  %1122 = add i32 %1121, %1120
  %1123 = icmp eq i32 %1122, 2
  %1124 = zext i1 %1123 to i8
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1124, i8* %1125, align 1
  store %struct.Memory* %loadMem_418ada, %struct.Memory** %MEMORY
  %loadMem_418ade = load %struct.Memory*, %struct.Memory** %MEMORY
  %1126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1127 = getelementptr inbounds %struct.GPR, %struct.GPR* %1126, i32 0, i32 33
  %1128 = getelementptr inbounds %struct.Reg, %struct.Reg* %1127, i32 0, i32 0
  %PC.i1082 = bitcast %union.anon* %1128 to i64*
  %1129 = load i64, i64* %PC.i1082
  %1130 = add i64 %1129, 18
  %1131 = load i64, i64* %PC.i1082
  %1132 = add i64 %1131, 6
  %1133 = load i64, i64* %PC.i1082
  %1134 = add i64 %1133, 6
  store i64 %1134, i64* %PC.i1082
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1136 = load i8, i8* %1135, align 1
  %1137 = icmp ne i8 %1136, 0
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1139 = load i8, i8* %1138, align 1
  %1140 = icmp ne i8 %1139, 0
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1142 = load i8, i8* %1141, align 1
  %1143 = icmp ne i8 %1142, 0
  %1144 = xor i1 %1140, %1143
  %1145 = or i1 %1137, %1144
  %1146 = zext i1 %1145 to i8
  store i8 %1146, i8* %BRANCH_TAKEN, align 1
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1148 = select i1 %1145, i64 %1130, i64 %1132
  store i64 %1148, i64* %1147, align 8
  store %struct.Memory* %loadMem_418ade, %struct.Memory** %MEMORY
  %loadBr_418ade = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418ade = icmp eq i8 %loadBr_418ade, 1
  br i1 %cmpBr_418ade, label %block_.L_418af0, label %block_418ae4

block_418ae4:                                     ; preds = %block_418abf
  %loadMem_418ae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1150 = getelementptr inbounds %struct.GPR, %struct.GPR* %1149, i32 0, i32 33
  %1151 = getelementptr inbounds %struct.Reg, %struct.Reg* %1150, i32 0, i32 0
  %PC.i1080 = bitcast %union.anon* %1151 to i64*
  %1152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1153 = getelementptr inbounds %struct.GPR, %struct.GPR* %1152, i32 0, i32 15
  %1154 = getelementptr inbounds %struct.Reg, %struct.Reg* %1153, i32 0, i32 0
  %RBP.i1081 = bitcast %union.anon* %1154 to i64*
  %1155 = load i64, i64* %RBP.i1081
  %1156 = sub i64 %1155, 28
  %1157 = load i64, i64* %PC.i1080
  %1158 = add i64 %1157, 7
  store i64 %1158, i64* %PC.i1080
  %1159 = inttoptr i64 %1156 to i32*
  store i32 0, i32* %1159
  store %struct.Memory* %loadMem_418ae4, %struct.Memory** %MEMORY
  %loadMem_418aeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1161 = getelementptr inbounds %struct.GPR, %struct.GPR* %1160, i32 0, i32 33
  %1162 = getelementptr inbounds %struct.Reg, %struct.Reg* %1161, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %1162 to i64*
  %1163 = load i64, i64* %PC.i1079
  %1164 = add i64 %1163, 54
  %1165 = load i64, i64* %PC.i1079
  %1166 = add i64 %1165, 5
  store i64 %1166, i64* %PC.i1079
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1164, i64* %1167, align 8
  store %struct.Memory* %loadMem_418aeb, %struct.Memory** %MEMORY
  br label %block_.L_418b21

block_.L_418af0:                                  ; preds = %block_418abf
  %loadMem_418af0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1169 = getelementptr inbounds %struct.GPR, %struct.GPR* %1168, i32 0, i32 33
  %1170 = getelementptr inbounds %struct.Reg, %struct.Reg* %1169, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %1170 to i64*
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 1
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %RAX.i1077 = bitcast %union.anon* %1173 to i64*
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 15
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %RBP.i1078 = bitcast %union.anon* %1176 to i64*
  %1177 = load i64, i64* %RBP.i1078
  %1178 = sub i64 %1177, 28
  %1179 = load i64, i64* %PC.i1076
  %1180 = add i64 %1179, 3
  store i64 %1180, i64* %PC.i1076
  %1181 = inttoptr i64 %1178 to i32*
  %1182 = load i32, i32* %1181
  %1183 = zext i32 %1182 to i64
  store i64 %1183, i64* %RAX.i1077, align 8
  store %struct.Memory* %loadMem_418af0, %struct.Memory** %MEMORY
  %loadMem_418af3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1185 = getelementptr inbounds %struct.GPR, %struct.GPR* %1184, i32 0, i32 33
  %1186 = getelementptr inbounds %struct.Reg, %struct.Reg* %1185, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %1186 to i64*
  %1187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1188 = getelementptr inbounds %struct.GPR, %struct.GPR* %1187, i32 0, i32 1
  %1189 = getelementptr inbounds %struct.Reg, %struct.Reg* %1188, i32 0, i32 0
  %RAX.i1075 = bitcast %union.anon* %1189 to i64*
  %1190 = load i64, i64* %RAX.i1075
  %1191 = load i64, i64* %PC.i1074
  %1192 = add i64 %1191, 3
  store i64 %1192, i64* %PC.i1074
  %1193 = trunc i64 %1190 to i32
  %1194 = add i32 1, %1193
  %1195 = zext i32 %1194 to i64
  store i64 %1195, i64* %RAX.i1075, align 8
  %1196 = icmp ult i32 %1194, %1193
  %1197 = icmp ult i32 %1194, 1
  %1198 = or i1 %1196, %1197
  %1199 = zext i1 %1198 to i8
  %1200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1199, i8* %1200, align 1
  %1201 = and i32 %1194, 255
  %1202 = call i32 @llvm.ctpop.i32(i32 %1201)
  %1203 = trunc i32 %1202 to i8
  %1204 = and i8 %1203, 1
  %1205 = xor i8 %1204, 1
  %1206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1205, i8* %1206, align 1
  %1207 = xor i64 1, %1190
  %1208 = trunc i64 %1207 to i32
  %1209 = xor i32 %1208, %1194
  %1210 = lshr i32 %1209, 4
  %1211 = trunc i32 %1210 to i8
  %1212 = and i8 %1211, 1
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1212, i8* %1213, align 1
  %1214 = icmp eq i32 %1194, 0
  %1215 = zext i1 %1214 to i8
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1215, i8* %1216, align 1
  %1217 = lshr i32 %1194, 31
  %1218 = trunc i32 %1217 to i8
  %1219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1218, i8* %1219, align 1
  %1220 = lshr i32 %1193, 31
  %1221 = xor i32 %1217, %1220
  %1222 = add i32 %1221, %1217
  %1223 = icmp eq i32 %1222, 2
  %1224 = zext i1 %1223 to i8
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1224, i8* %1225, align 1
  store %struct.Memory* %loadMem_418af3, %struct.Memory** %MEMORY
  %loadMem_418af6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1227 = getelementptr inbounds %struct.GPR, %struct.GPR* %1226, i32 0, i32 33
  %1228 = getelementptr inbounds %struct.Reg, %struct.Reg* %1227, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %1228 to i64*
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 1
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %EAX.i1072 = bitcast %union.anon* %1231 to i32*
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1233 = getelementptr inbounds %struct.GPR, %struct.GPR* %1232, i32 0, i32 15
  %1234 = getelementptr inbounds %struct.Reg, %struct.Reg* %1233, i32 0, i32 0
  %RBP.i1073 = bitcast %union.anon* %1234 to i64*
  %1235 = load i64, i64* %RBP.i1073
  %1236 = sub i64 %1235, 28
  %1237 = load i32, i32* %EAX.i1072
  %1238 = zext i32 %1237 to i64
  %1239 = load i64, i64* %PC.i1071
  %1240 = add i64 %1239, 3
  store i64 %1240, i64* %PC.i1071
  %1241 = inttoptr i64 %1236 to i32*
  store i32 %1237, i32* %1241
  store %struct.Memory* %loadMem_418af6, %struct.Memory** %MEMORY
  %loadMem_418af9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1243 = getelementptr inbounds %struct.GPR, %struct.GPR* %1242, i32 0, i32 33
  %1244 = getelementptr inbounds %struct.Reg, %struct.Reg* %1243, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %1244 to i64*
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1246 = getelementptr inbounds %struct.GPR, %struct.GPR* %1245, i32 0, i32 1
  %1247 = getelementptr inbounds %struct.Reg, %struct.Reg* %1246, i32 0, i32 0
  %EAX.i1069 = bitcast %union.anon* %1247 to i32*
  %1248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1249 = getelementptr inbounds %struct.GPR, %struct.GPR* %1248, i32 0, i32 15
  %1250 = getelementptr inbounds %struct.Reg, %struct.Reg* %1249, i32 0, i32 0
  %RBP.i1070 = bitcast %union.anon* %1250 to i64*
  %1251 = load i32, i32* %EAX.i1069
  %1252 = zext i32 %1251 to i64
  %1253 = load i64, i64* %RBP.i1070
  %1254 = sub i64 %1253, 152
  %1255 = load i64, i64* %PC.i1068
  %1256 = add i64 %1255, 6
  store i64 %1256, i64* %PC.i1068
  %1257 = inttoptr i64 %1254 to i32*
  %1258 = load i32, i32* %1257
  %1259 = sub i32 %1251, %1258
  %1260 = icmp ult i32 %1251, %1258
  %1261 = zext i1 %1260 to i8
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1261, i8* %1262, align 1
  %1263 = and i32 %1259, 255
  %1264 = call i32 @llvm.ctpop.i32(i32 %1263)
  %1265 = trunc i32 %1264 to i8
  %1266 = and i8 %1265, 1
  %1267 = xor i8 %1266, 1
  %1268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1267, i8* %1268, align 1
  %1269 = xor i32 %1258, %1251
  %1270 = xor i32 %1269, %1259
  %1271 = lshr i32 %1270, 4
  %1272 = trunc i32 %1271 to i8
  %1273 = and i8 %1272, 1
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1273, i8* %1274, align 1
  %1275 = icmp eq i32 %1259, 0
  %1276 = zext i1 %1275 to i8
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1276, i8* %1277, align 1
  %1278 = lshr i32 %1259, 31
  %1279 = trunc i32 %1278 to i8
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1279, i8* %1280, align 1
  %1281 = lshr i32 %1251, 31
  %1282 = lshr i32 %1258, 31
  %1283 = xor i32 %1282, %1281
  %1284 = xor i32 %1278, %1281
  %1285 = add i32 %1284, %1283
  %1286 = icmp eq i32 %1285, 2
  %1287 = zext i1 %1286 to i8
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1287, i8* %1288, align 1
  store %struct.Memory* %loadMem_418af9, %struct.Memory** %MEMORY
  %loadMem_418aff = load %struct.Memory*, %struct.Memory** %MEMORY
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1290 = getelementptr inbounds %struct.GPR, %struct.GPR* %1289, i32 0, i32 33
  %1291 = getelementptr inbounds %struct.Reg, %struct.Reg* %1290, i32 0, i32 0
  %PC.i1067 = bitcast %union.anon* %1291 to i64*
  %1292 = load i64, i64* %PC.i1067
  %1293 = add i64 %1292, 29
  %1294 = load i64, i64* %PC.i1067
  %1295 = add i64 %1294, 6
  %1296 = load i64, i64* %PC.i1067
  %1297 = add i64 %1296, 6
  store i64 %1297, i64* %PC.i1067
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1299 = load i8, i8* %1298, align 1
  %1300 = icmp eq i8 %1299, 0
  %1301 = zext i1 %1300 to i8
  store i8 %1301, i8* %BRANCH_TAKEN, align 1
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1303 = select i1 %1300, i64 %1293, i64 %1295
  store i64 %1303, i64* %1302, align 8
  store %struct.Memory* %loadMem_418aff, %struct.Memory** %MEMORY
  %loadBr_418aff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418aff = icmp eq i8 %loadBr_418aff, 1
  br i1 %cmpBr_418aff, label %block_.L_418b1c, label %block_418b05

block_418b05:                                     ; preds = %block_.L_418af0
  %loadMem_418b05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1305 = getelementptr inbounds %struct.GPR, %struct.GPR* %1304, i32 0, i32 33
  %1306 = getelementptr inbounds %struct.Reg, %struct.Reg* %1305, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %1306 to i64*
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1308 = getelementptr inbounds %struct.GPR, %struct.GPR* %1307, i32 0, i32 1
  %1309 = getelementptr inbounds %struct.Reg, %struct.Reg* %1308, i32 0, i32 0
  %RAX.i1065 = bitcast %union.anon* %1309 to i64*
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 15
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %RBP.i1066 = bitcast %union.anon* %1312 to i64*
  %1313 = load i64, i64* %RBP.i1066
  %1314 = sub i64 %1313, 152
  %1315 = load i64, i64* %PC.i1064
  %1316 = add i64 %1315, 6
  store i64 %1316, i64* %PC.i1064
  %1317 = inttoptr i64 %1314 to i32*
  %1318 = load i32, i32* %1317
  %1319 = zext i32 %1318 to i64
  store i64 %1319, i64* %RAX.i1065, align 8
  store %struct.Memory* %loadMem_418b05, %struct.Memory** %MEMORY
  %loadMem_418b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1321 = getelementptr inbounds %struct.GPR, %struct.GPR* %1320, i32 0, i32 33
  %1322 = getelementptr inbounds %struct.Reg, %struct.Reg* %1321, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %1322 to i64*
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1324 = getelementptr inbounds %struct.GPR, %struct.GPR* %1323, i32 0, i32 1
  %1325 = getelementptr inbounds %struct.Reg, %struct.Reg* %1324, i32 0, i32 0
  %RAX.i1062 = bitcast %union.anon* %1325 to i64*
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1327 = getelementptr inbounds %struct.GPR, %struct.GPR* %1326, i32 0, i32 15
  %1328 = getelementptr inbounds %struct.Reg, %struct.Reg* %1327, i32 0, i32 0
  %RBP.i1063 = bitcast %union.anon* %1328 to i64*
  %1329 = load i64, i64* %RAX.i1062
  %1330 = load i64, i64* %RBP.i1063
  %1331 = sub i64 %1330, 136
  %1332 = load i64, i64* %PC.i1061
  %1333 = add i64 %1332, 6
  store i64 %1333, i64* %PC.i1061
  %1334 = trunc i64 %1329 to i32
  %1335 = inttoptr i64 %1331 to i32*
  %1336 = load i32, i32* %1335
  %1337 = add i32 %1336, %1334
  %1338 = zext i32 %1337 to i64
  store i64 %1338, i64* %RAX.i1062, align 8
  %1339 = icmp ult i32 %1337, %1334
  %1340 = icmp ult i32 %1337, %1336
  %1341 = or i1 %1339, %1340
  %1342 = zext i1 %1341 to i8
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1342, i8* %1343, align 1
  %1344 = and i32 %1337, 255
  %1345 = call i32 @llvm.ctpop.i32(i32 %1344)
  %1346 = trunc i32 %1345 to i8
  %1347 = and i8 %1346, 1
  %1348 = xor i8 %1347, 1
  %1349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1348, i8* %1349, align 1
  %1350 = xor i32 %1336, %1334
  %1351 = xor i32 %1350, %1337
  %1352 = lshr i32 %1351, 4
  %1353 = trunc i32 %1352 to i8
  %1354 = and i8 %1353, 1
  %1355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1354, i8* %1355, align 1
  %1356 = icmp eq i32 %1337, 0
  %1357 = zext i1 %1356 to i8
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1357, i8* %1358, align 1
  %1359 = lshr i32 %1337, 31
  %1360 = trunc i32 %1359 to i8
  %1361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1360, i8* %1361, align 1
  %1362 = lshr i32 %1334, 31
  %1363 = lshr i32 %1336, 31
  %1364 = xor i32 %1359, %1362
  %1365 = xor i32 %1359, %1363
  %1366 = add i32 %1364, %1365
  %1367 = icmp eq i32 %1366, 2
  %1368 = zext i1 %1367 to i8
  %1369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1368, i8* %1369, align 1
  store %struct.Memory* %loadMem_418b0b, %struct.Memory** %MEMORY
  %loadMem_418b11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1371 = getelementptr inbounds %struct.GPR, %struct.GPR* %1370, i32 0, i32 33
  %1372 = getelementptr inbounds %struct.Reg, %struct.Reg* %1371, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %1372 to i64*
  %1373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1374 = getelementptr inbounds %struct.GPR, %struct.GPR* %1373, i32 0, i32 1
  %1375 = getelementptr inbounds %struct.Reg, %struct.Reg* %1374, i32 0, i32 0
  %EAX.i1059 = bitcast %union.anon* %1375 to i32*
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1377 = getelementptr inbounds %struct.GPR, %struct.GPR* %1376, i32 0, i32 15
  %1378 = getelementptr inbounds %struct.Reg, %struct.Reg* %1377, i32 0, i32 0
  %RBP.i1060 = bitcast %union.anon* %1378 to i64*
  %1379 = load i64, i64* %RBP.i1060
  %1380 = sub i64 %1379, 136
  %1381 = load i32, i32* %EAX.i1059
  %1382 = zext i32 %1381 to i64
  %1383 = load i64, i64* %PC.i1058
  %1384 = add i64 %1383, 6
  store i64 %1384, i64* %PC.i1058
  %1385 = inttoptr i64 %1380 to i32*
  store i32 %1381, i32* %1385
  store %struct.Memory* %loadMem_418b11, %struct.Memory** %MEMORY
  %loadMem_418b17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1387 = getelementptr inbounds %struct.GPR, %struct.GPR* %1386, i32 0, i32 33
  %1388 = getelementptr inbounds %struct.Reg, %struct.Reg* %1387, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %1388 to i64*
  %1389 = load i64, i64* %PC.i1057
  %1390 = add i64 %1389, 30
  %1391 = load i64, i64* %PC.i1057
  %1392 = add i64 %1391, 5
  store i64 %1392, i64* %PC.i1057
  %1393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1390, i64* %1393, align 8
  store %struct.Memory* %loadMem_418b17, %struct.Memory** %MEMORY
  br label %block_.L_418b35

block_.L_418b1c:                                  ; preds = %block_.L_418af0
  %loadMem_418b1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1395 = getelementptr inbounds %struct.GPR, %struct.GPR* %1394, i32 0, i32 33
  %1396 = getelementptr inbounds %struct.Reg, %struct.Reg* %1395, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %1396 to i64*
  %1397 = load i64, i64* %PC.i1056
  %1398 = add i64 %1397, 5
  %1399 = load i64, i64* %PC.i1056
  %1400 = add i64 %1399, 5
  store i64 %1400, i64* %PC.i1056
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1398, i64* %1401, align 8
  store %struct.Memory* %loadMem_418b1c, %struct.Memory** %MEMORY
  br label %block_.L_418b21

block_.L_418b21:                                  ; preds = %block_.L_418b1c, %block_418ae4
  %loadMem_418b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1403 = getelementptr inbounds %struct.GPR, %struct.GPR* %1402, i32 0, i32 33
  %1404 = getelementptr inbounds %struct.Reg, %struct.Reg* %1403, i32 0, i32 0
  %PC.i1053 = bitcast %union.anon* %1404 to i64*
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1406 = getelementptr inbounds %struct.GPR, %struct.GPR* %1405, i32 0, i32 1
  %1407 = getelementptr inbounds %struct.Reg, %struct.Reg* %1406, i32 0, i32 0
  %RAX.i1054 = bitcast %union.anon* %1407 to i64*
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 15
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %RBP.i1055 = bitcast %union.anon* %1410 to i64*
  %1411 = load i64, i64* %RBP.i1055
  %1412 = sub i64 %1411, 136
  %1413 = load i64, i64* %PC.i1053
  %1414 = add i64 %1413, 6
  store i64 %1414, i64* %PC.i1053
  %1415 = inttoptr i64 %1412 to i32*
  %1416 = load i32, i32* %1415
  %1417 = zext i32 %1416 to i64
  store i64 %1417, i64* %RAX.i1054, align 8
  store %struct.Memory* %loadMem_418b21, %struct.Memory** %MEMORY
  %loadMem_418b27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1419 = getelementptr inbounds %struct.GPR, %struct.GPR* %1418, i32 0, i32 33
  %1420 = getelementptr inbounds %struct.Reg, %struct.Reg* %1419, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %1420 to i64*
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1422 = getelementptr inbounds %struct.GPR, %struct.GPR* %1421, i32 0, i32 1
  %1423 = getelementptr inbounds %struct.Reg, %struct.Reg* %1422, i32 0, i32 0
  %RAX.i1052 = bitcast %union.anon* %1423 to i64*
  %1424 = load i64, i64* %RAX.i1052
  %1425 = load i64, i64* %PC.i1051
  %1426 = add i64 %1425, 3
  store i64 %1426, i64* %PC.i1051
  %1427 = trunc i64 %1424 to i32
  %1428 = add i32 -1, %1427
  %1429 = zext i32 %1428 to i64
  store i64 %1429, i64* %RAX.i1052, align 8
  %1430 = icmp ult i32 %1428, %1427
  %1431 = icmp ult i32 %1428, -1
  %1432 = or i1 %1430, %1431
  %1433 = zext i1 %1432 to i8
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1433, i8* %1434, align 1
  %1435 = and i32 %1428, 255
  %1436 = call i32 @llvm.ctpop.i32(i32 %1435)
  %1437 = trunc i32 %1436 to i8
  %1438 = and i8 %1437, 1
  %1439 = xor i8 %1438, 1
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1439, i8* %1440, align 1
  %1441 = xor i64 -1, %1424
  %1442 = trunc i64 %1441 to i32
  %1443 = xor i32 %1442, %1428
  %1444 = lshr i32 %1443, 4
  %1445 = trunc i32 %1444 to i8
  %1446 = and i8 %1445, 1
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1446, i8* %1447, align 1
  %1448 = icmp eq i32 %1428, 0
  %1449 = zext i1 %1448 to i8
  %1450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1449, i8* %1450, align 1
  %1451 = lshr i32 %1428, 31
  %1452 = trunc i32 %1451 to i8
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1452, i8* %1453, align 1
  %1454 = lshr i32 %1427, 31
  %1455 = xor i32 %1451, %1454
  %1456 = xor i32 %1451, 1
  %1457 = add i32 %1455, %1456
  %1458 = icmp eq i32 %1457, 2
  %1459 = zext i1 %1458 to i8
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1459, i8* %1460, align 1
  store %struct.Memory* %loadMem_418b27, %struct.Memory** %MEMORY
  %loadMem_418b2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1462 = getelementptr inbounds %struct.GPR, %struct.GPR* %1461, i32 0, i32 33
  %1463 = getelementptr inbounds %struct.Reg, %struct.Reg* %1462, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %1463 to i64*
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1465 = getelementptr inbounds %struct.GPR, %struct.GPR* %1464, i32 0, i32 1
  %1466 = getelementptr inbounds %struct.Reg, %struct.Reg* %1465, i32 0, i32 0
  %EAX.i1049 = bitcast %union.anon* %1466 to i32*
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1468 = getelementptr inbounds %struct.GPR, %struct.GPR* %1467, i32 0, i32 15
  %1469 = getelementptr inbounds %struct.Reg, %struct.Reg* %1468, i32 0, i32 0
  %RBP.i1050 = bitcast %union.anon* %1469 to i64*
  %1470 = load i64, i64* %RBP.i1050
  %1471 = sub i64 %1470, 136
  %1472 = load i32, i32* %EAX.i1049
  %1473 = zext i32 %1472 to i64
  %1474 = load i64, i64* %PC.i1048
  %1475 = add i64 %1474, 6
  store i64 %1475, i64* %PC.i1048
  %1476 = inttoptr i64 %1471 to i32*
  store i32 %1472, i32* %1476
  store %struct.Memory* %loadMem_418b2a, %struct.Memory** %MEMORY
  %loadMem_418b30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 33
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %PC.i1047 = bitcast %union.anon* %1479 to i64*
  %1480 = load i64, i64* %PC.i1047
  %1481 = add i64 %1480, -132
  %1482 = load i64, i64* %PC.i1047
  %1483 = add i64 %1482, 5
  store i64 %1483, i64* %PC.i1047
  %1484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1481, i64* %1484, align 8
  store %struct.Memory* %loadMem_418b30, %struct.Memory** %MEMORY
  br label %block_.L_418aac

block_.L_418b35:                                  ; preds = %block_418b05, %block_.L_418aac
  %loadMem_418b35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1486 = getelementptr inbounds %struct.GPR, %struct.GPR* %1485, i32 0, i32 33
  %1487 = getelementptr inbounds %struct.Reg, %struct.Reg* %1486, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %1487 to i64*
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1489 = getelementptr inbounds %struct.GPR, %struct.GPR* %1488, i32 0, i32 15
  %1490 = getelementptr inbounds %struct.Reg, %struct.Reg* %1489, i32 0, i32 0
  %RBP.i1046 = bitcast %union.anon* %1490 to i64*
  %1491 = load i64, i64* %RBP.i1046
  %1492 = sub i64 %1491, 28
  %1493 = load i64, i64* %PC.i1045
  %1494 = add i64 %1493, 7
  store i64 %1494, i64* %PC.i1045
  %1495 = inttoptr i64 %1492 to i32*
  store i32 0, i32* %1495
  store %struct.Memory* %loadMem_418b35, %struct.Memory** %MEMORY
  br label %block_.L_418b3c

block_.L_418b3c:                                  ; preds = %block_.L_418bb3, %block_.L_418b35
  %loadMem_418b3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1497 = getelementptr inbounds %struct.GPR, %struct.GPR* %1496, i32 0, i32 33
  %1498 = getelementptr inbounds %struct.Reg, %struct.Reg* %1497, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %1498 to i64*
  %1499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1500 = getelementptr inbounds %struct.GPR, %struct.GPR* %1499, i32 0, i32 1
  %1501 = getelementptr inbounds %struct.Reg, %struct.Reg* %1500, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %1501 to i64*
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1503 = getelementptr inbounds %struct.GPR, %struct.GPR* %1502, i32 0, i32 15
  %1504 = getelementptr inbounds %struct.Reg, %struct.Reg* %1503, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %1504 to i64*
  %1505 = load i64, i64* %RBP.i1044
  %1506 = sub i64 %1505, 144
  %1507 = load i64, i64* %PC.i1042
  %1508 = add i64 %1507, 6
  store i64 %1508, i64* %PC.i1042
  %1509 = inttoptr i64 %1506 to i32*
  %1510 = load i32, i32* %1509
  %1511 = zext i32 %1510 to i64
  store i64 %1511, i64* %RAX.i1043, align 8
  store %struct.Memory* %loadMem_418b3c, %struct.Memory** %MEMORY
  %loadMem_418b42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1513 = getelementptr inbounds %struct.GPR, %struct.GPR* %1512, i32 0, i32 33
  %1514 = getelementptr inbounds %struct.Reg, %struct.Reg* %1513, i32 0, i32 0
  %PC.i1039 = bitcast %union.anon* %1514 to i64*
  %1515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1516 = getelementptr inbounds %struct.GPR, %struct.GPR* %1515, i32 0, i32 5
  %1517 = getelementptr inbounds %struct.Reg, %struct.Reg* %1516, i32 0, i32 0
  %RCX.i1040 = bitcast %union.anon* %1517 to i64*
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1519 = getelementptr inbounds %struct.GPR, %struct.GPR* %1518, i32 0, i32 15
  %1520 = getelementptr inbounds %struct.Reg, %struct.Reg* %1519, i32 0, i32 0
  %RBP.i1041 = bitcast %union.anon* %1520 to i64*
  %1521 = load i64, i64* %RBP.i1041
  %1522 = sub i64 %1521, 16
  %1523 = load i64, i64* %PC.i1039
  %1524 = add i64 %1523, 4
  store i64 %1524, i64* %PC.i1039
  %1525 = inttoptr i64 %1522 to i64*
  %1526 = load i64, i64* %1525
  store i64 %1526, i64* %RCX.i1040, align 8
  store %struct.Memory* %loadMem_418b42, %struct.Memory** %MEMORY
  %loadMem_418b46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1528 = getelementptr inbounds %struct.GPR, %struct.GPR* %1527, i32 0, i32 33
  %1529 = getelementptr inbounds %struct.Reg, %struct.Reg* %1528, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %1529 to i64*
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1531 = getelementptr inbounds %struct.GPR, %struct.GPR* %1530, i32 0, i32 1
  %1532 = getelementptr inbounds %struct.Reg, %struct.Reg* %1531, i32 0, i32 0
  %EAX.i1037 = bitcast %union.anon* %1532 to i32*
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1534 = getelementptr inbounds %struct.GPR, %struct.GPR* %1533, i32 0, i32 5
  %1535 = getelementptr inbounds %struct.Reg, %struct.Reg* %1534, i32 0, i32 0
  %RCX.i1038 = bitcast %union.anon* %1535 to i64*
  %1536 = load i32, i32* %EAX.i1037
  %1537 = zext i32 %1536 to i64
  %1538 = load i64, i64* %RCX.i1038
  %1539 = add i64 %1538, 16
  %1540 = load i64, i64* %PC.i1036
  %1541 = add i64 %1540, 3
  store i64 %1541, i64* %PC.i1036
  %1542 = inttoptr i64 %1539 to i32*
  %1543 = load i32, i32* %1542
  %1544 = sub i32 %1536, %1543
  %1545 = icmp ult i32 %1536, %1543
  %1546 = zext i1 %1545 to i8
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1546, i8* %1547, align 1
  %1548 = and i32 %1544, 255
  %1549 = call i32 @llvm.ctpop.i32(i32 %1548)
  %1550 = trunc i32 %1549 to i8
  %1551 = and i8 %1550, 1
  %1552 = xor i8 %1551, 1
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1552, i8* %1553, align 1
  %1554 = xor i32 %1543, %1536
  %1555 = xor i32 %1554, %1544
  %1556 = lshr i32 %1555, 4
  %1557 = trunc i32 %1556 to i8
  %1558 = and i8 %1557, 1
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1558, i8* %1559, align 1
  %1560 = icmp eq i32 %1544, 0
  %1561 = zext i1 %1560 to i8
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1561, i8* %1562, align 1
  %1563 = lshr i32 %1544, 31
  %1564 = trunc i32 %1563 to i8
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1564, i8* %1565, align 1
  %1566 = lshr i32 %1536, 31
  %1567 = lshr i32 %1543, 31
  %1568 = xor i32 %1567, %1566
  %1569 = xor i32 %1563, %1566
  %1570 = add i32 %1569, %1568
  %1571 = icmp eq i32 %1570, 2
  %1572 = zext i1 %1571 to i8
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1572, i8* %1573, align 1
  store %struct.Memory* %loadMem_418b46, %struct.Memory** %MEMORY
  %loadMem_418b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1575 = getelementptr inbounds %struct.GPR, %struct.GPR* %1574, i32 0, i32 33
  %1576 = getelementptr inbounds %struct.Reg, %struct.Reg* %1575, i32 0, i32 0
  %PC.i1035 = bitcast %union.anon* %1576 to i64*
  %1577 = load i64, i64* %PC.i1035
  %1578 = add i64 %1577, 126
  %1579 = load i64, i64* %PC.i1035
  %1580 = add i64 %1579, 6
  %1581 = load i64, i64* %PC.i1035
  %1582 = add i64 %1581, 6
  store i64 %1582, i64* %PC.i1035
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1584 = load i8, i8* %1583, align 1
  %1585 = icmp ne i8 %1584, 0
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1587 = load i8, i8* %1586, align 1
  %1588 = icmp ne i8 %1587, 0
  %1589 = xor i1 %1585, %1588
  %1590 = xor i1 %1589, true
  %1591 = zext i1 %1590 to i8
  store i8 %1591, i8* %BRANCH_TAKEN, align 1
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1593 = select i1 %1589, i64 %1580, i64 %1578
  store i64 %1593, i64* %1592, align 8
  store %struct.Memory* %loadMem_418b49, %struct.Memory** %MEMORY
  %loadBr_418b49 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418b49 = icmp eq i8 %loadBr_418b49, 1
  br i1 %cmpBr_418b49, label %block_.L_418bc7, label %block_418b4f

block_418b4f:                                     ; preds = %block_.L_418b3c
  %loadMem_418b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1595 = getelementptr inbounds %struct.GPR, %struct.GPR* %1594, i32 0, i32 33
  %1596 = getelementptr inbounds %struct.Reg, %struct.Reg* %1595, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %1596 to i64*
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1598 = getelementptr inbounds %struct.GPR, %struct.GPR* %1597, i32 0, i32 1
  %1599 = getelementptr inbounds %struct.Reg, %struct.Reg* %1598, i32 0, i32 0
  %RAX.i1033 = bitcast %union.anon* %1599 to i64*
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1601 = getelementptr inbounds %struct.GPR, %struct.GPR* %1600, i32 0, i32 15
  %1602 = getelementptr inbounds %struct.Reg, %struct.Reg* %1601, i32 0, i32 0
  %RBP.i1034 = bitcast %union.anon* %1602 to i64*
  %1603 = load i64, i64* %RBP.i1034
  %1604 = sub i64 %1603, 144
  %1605 = load i64, i64* %PC.i1032
  %1606 = add i64 %1605, 6
  store i64 %1606, i64* %PC.i1032
  %1607 = inttoptr i64 %1604 to i32*
  %1608 = load i32, i32* %1607
  %1609 = zext i32 %1608 to i64
  store i64 %1609, i64* %RAX.i1033, align 8
  store %struct.Memory* %loadMem_418b4f, %struct.Memory** %MEMORY
  %loadMem_418b55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1611 = getelementptr inbounds %struct.GPR, %struct.GPR* %1610, i32 0, i32 33
  %1612 = getelementptr inbounds %struct.Reg, %struct.Reg* %1611, i32 0, i32 0
  %PC.i1029 = bitcast %union.anon* %1612 to i64*
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1614 = getelementptr inbounds %struct.GPR, %struct.GPR* %1613, i32 0, i32 5
  %1615 = getelementptr inbounds %struct.Reg, %struct.Reg* %1614, i32 0, i32 0
  %RCX.i1030 = bitcast %union.anon* %1615 to i64*
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1617 = getelementptr inbounds %struct.GPR, %struct.GPR* %1616, i32 0, i32 15
  %1618 = getelementptr inbounds %struct.Reg, %struct.Reg* %1617, i32 0, i32 0
  %RBP.i1031 = bitcast %union.anon* %1618 to i64*
  %1619 = load i64, i64* %RBP.i1031
  %1620 = sub i64 %1619, 16
  %1621 = load i64, i64* %PC.i1029
  %1622 = add i64 %1621, 4
  store i64 %1622, i64* %PC.i1029
  %1623 = inttoptr i64 %1620 to i64*
  %1624 = load i64, i64* %1623
  store i64 %1624, i64* %RCX.i1030, align 8
  store %struct.Memory* %loadMem_418b55, %struct.Memory** %MEMORY
  %loadMem_418b59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1626 = getelementptr inbounds %struct.GPR, %struct.GPR* %1625, i32 0, i32 33
  %1627 = getelementptr inbounds %struct.Reg, %struct.Reg* %1626, i32 0, i32 0
  %PC.i1026 = bitcast %union.anon* %1627 to i64*
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1629 = getelementptr inbounds %struct.GPR, %struct.GPR* %1628, i32 0, i32 1
  %1630 = getelementptr inbounds %struct.Reg, %struct.Reg* %1629, i32 0, i32 0
  %RAX.i1027 = bitcast %union.anon* %1630 to i64*
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1632 = getelementptr inbounds %struct.GPR, %struct.GPR* %1631, i32 0, i32 5
  %1633 = getelementptr inbounds %struct.Reg, %struct.Reg* %1632, i32 0, i32 0
  %RCX.i1028 = bitcast %union.anon* %1633 to i64*
  %1634 = load i64, i64* %RAX.i1027
  %1635 = load i64, i64* %RCX.i1028
  %1636 = add i64 %1635, 8
  %1637 = load i64, i64* %PC.i1026
  %1638 = add i64 %1637, 3
  store i64 %1638, i64* %PC.i1026
  %1639 = trunc i64 %1634 to i32
  %1640 = inttoptr i64 %1636 to i32*
  %1641 = load i32, i32* %1640
  %1642 = sub i32 %1639, %1641
  %1643 = zext i32 %1642 to i64
  store i64 %1643, i64* %RAX.i1027, align 8
  %1644 = icmp ult i32 %1639, %1641
  %1645 = zext i1 %1644 to i8
  %1646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1645, i8* %1646, align 1
  %1647 = and i32 %1642, 255
  %1648 = call i32 @llvm.ctpop.i32(i32 %1647)
  %1649 = trunc i32 %1648 to i8
  %1650 = and i8 %1649, 1
  %1651 = xor i8 %1650, 1
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1651, i8* %1652, align 1
  %1653 = xor i32 %1641, %1639
  %1654 = xor i32 %1653, %1642
  %1655 = lshr i32 %1654, 4
  %1656 = trunc i32 %1655 to i8
  %1657 = and i8 %1656, 1
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1657, i8* %1658, align 1
  %1659 = icmp eq i32 %1642, 0
  %1660 = zext i1 %1659 to i8
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1660, i8* %1661, align 1
  %1662 = lshr i32 %1642, 31
  %1663 = trunc i32 %1662 to i8
  %1664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1663, i8* %1664, align 1
  %1665 = lshr i32 %1639, 31
  %1666 = lshr i32 %1641, 31
  %1667 = xor i32 %1666, %1665
  %1668 = xor i32 %1662, %1665
  %1669 = add i32 %1668, %1667
  %1670 = icmp eq i32 %1669, 2
  %1671 = zext i1 %1670 to i8
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1671, i8* %1672, align 1
  store %struct.Memory* %loadMem_418b59, %struct.Memory** %MEMORY
  %loadMem_418b5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1674 = getelementptr inbounds %struct.GPR, %struct.GPR* %1673, i32 0, i32 33
  %1675 = getelementptr inbounds %struct.Reg, %struct.Reg* %1674, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %1675 to i64*
  %1676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1677 = getelementptr inbounds %struct.GPR, %struct.GPR* %1676, i32 0, i32 1
  %1678 = getelementptr inbounds %struct.Reg, %struct.Reg* %1677, i32 0, i32 0
  %EAX.i1024 = bitcast %union.anon* %1678 to i32*
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1680 = getelementptr inbounds %struct.GPR, %struct.GPR* %1679, i32 0, i32 15
  %1681 = getelementptr inbounds %struct.Reg, %struct.Reg* %1680, i32 0, i32 0
  %RBP.i1025 = bitcast %union.anon* %1681 to i64*
  %1682 = load i64, i64* %RBP.i1025
  %1683 = sub i64 %1682, 32
  %1684 = load i32, i32* %EAX.i1024
  %1685 = zext i32 %1684 to i64
  %1686 = load i64, i64* %PC.i1023
  %1687 = add i64 %1686, 3
  store i64 %1687, i64* %PC.i1023
  %1688 = inttoptr i64 %1683 to i32*
  store i32 %1684, i32* %1688
  store %struct.Memory* %loadMem_418b5c, %struct.Memory** %MEMORY
  %loadMem_418b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1690 = getelementptr inbounds %struct.GPR, %struct.GPR* %1689, i32 0, i32 33
  %1691 = getelementptr inbounds %struct.Reg, %struct.Reg* %1690, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %1691 to i64*
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1693 = getelementptr inbounds %struct.GPR, %struct.GPR* %1692, i32 0, i32 5
  %1694 = getelementptr inbounds %struct.Reg, %struct.Reg* %1693, i32 0, i32 0
  %RCX.i1021 = bitcast %union.anon* %1694 to i64*
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1696 = getelementptr inbounds %struct.GPR, %struct.GPR* %1695, i32 0, i32 15
  %1697 = getelementptr inbounds %struct.Reg, %struct.Reg* %1696, i32 0, i32 0
  %RBP.i1022 = bitcast %union.anon* %1697 to i64*
  %1698 = load i64, i64* %RBP.i1022
  %1699 = sub i64 %1698, 16
  %1700 = load i64, i64* %PC.i1020
  %1701 = add i64 %1700, 4
  store i64 %1701, i64* %PC.i1020
  %1702 = inttoptr i64 %1699 to i64*
  %1703 = load i64, i64* %1702
  store i64 %1703, i64* %RCX.i1021, align 8
  store %struct.Memory* %loadMem_418b5f, %struct.Memory** %MEMORY
  %loadMem_418b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 33
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %1706 to i64*
  %1707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1708 = getelementptr inbounds %struct.GPR, %struct.GPR* %1707, i32 0, i32 5
  %1709 = getelementptr inbounds %struct.Reg, %struct.Reg* %1708, i32 0, i32 0
  %RCX.i1019 = bitcast %union.anon* %1709 to i64*
  %1710 = load i64, i64* %RCX.i1019
  %1711 = load i64, i64* %PC.i1018
  %1712 = add i64 %1711, 3
  store i64 %1712, i64* %PC.i1018
  %1713 = inttoptr i64 %1710 to i64*
  %1714 = load i64, i64* %1713
  store i64 %1714, i64* %RCX.i1019, align 8
  store %struct.Memory* %loadMem_418b63, %struct.Memory** %MEMORY
  %loadMem_418b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1716 = getelementptr inbounds %struct.GPR, %struct.GPR* %1715, i32 0, i32 33
  %1717 = getelementptr inbounds %struct.Reg, %struct.Reg* %1716, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %1717 to i64*
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1719 = getelementptr inbounds %struct.GPR, %struct.GPR* %1718, i32 0, i32 7
  %1720 = getelementptr inbounds %struct.Reg, %struct.Reg* %1719, i32 0, i32 0
  %RDX.i1016 = bitcast %union.anon* %1720 to i64*
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1722 = getelementptr inbounds %struct.GPR, %struct.GPR* %1721, i32 0, i32 15
  %1723 = getelementptr inbounds %struct.Reg, %struct.Reg* %1722, i32 0, i32 0
  %RBP.i1017 = bitcast %union.anon* %1723 to i64*
  %1724 = load i64, i64* %RBP.i1017
  %1725 = sub i64 %1724, 32
  %1726 = load i64, i64* %PC.i1015
  %1727 = add i64 %1726, 4
  store i64 %1727, i64* %PC.i1015
  %1728 = inttoptr i64 %1725 to i32*
  %1729 = load i32, i32* %1728
  %1730 = sext i32 %1729 to i64
  store i64 %1730, i64* %RDX.i1016, align 8
  store %struct.Memory* %loadMem_418b66, %struct.Memory** %MEMORY
  %loadMem_418b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1732 = getelementptr inbounds %struct.GPR, %struct.GPR* %1731, i32 0, i32 33
  %1733 = getelementptr inbounds %struct.Reg, %struct.Reg* %1732, i32 0, i32 0
  %PC.i1012 = bitcast %union.anon* %1733 to i64*
  %1734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1735 = getelementptr inbounds %struct.GPR, %struct.GPR* %1734, i32 0, i32 5
  %1736 = getelementptr inbounds %struct.Reg, %struct.Reg* %1735, i32 0, i32 0
  %RCX.i1013 = bitcast %union.anon* %1736 to i64*
  %1737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1738 = getelementptr inbounds %struct.GPR, %struct.GPR* %1737, i32 0, i32 7
  %1739 = getelementptr inbounds %struct.Reg, %struct.Reg* %1738, i32 0, i32 0
  %RDX.i1014 = bitcast %union.anon* %1739 to i64*
  %1740 = load i64, i64* %RCX.i1013
  %1741 = load i64, i64* %RDX.i1014
  %1742 = mul i64 %1741, 4
  %1743 = add i64 %1742, %1740
  %1744 = load i64, i64* %PC.i1012
  %1745 = add i64 %1744, 4
  store i64 %1745, i64* %PC.i1012
  %1746 = inttoptr i64 %1743 to i32*
  %1747 = load i32, i32* %1746
  %1748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1748, align 1
  %1749 = and i32 %1747, 255
  %1750 = call i32 @llvm.ctpop.i32(i32 %1749)
  %1751 = trunc i32 %1750 to i8
  %1752 = and i8 %1751, 1
  %1753 = xor i8 %1752, 1
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1753, i8* %1754, align 1
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1755, align 1
  %1756 = icmp eq i32 %1747, 0
  %1757 = zext i1 %1756 to i8
  %1758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1757, i8* %1758, align 1
  %1759 = lshr i32 %1747, 31
  %1760 = trunc i32 %1759 to i8
  %1761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1760, i8* %1761, align 1
  %1762 = lshr i32 %1747, 31
  %1763 = xor i32 %1759, %1762
  %1764 = add i32 %1763, %1762
  %1765 = icmp eq i32 %1764, 2
  %1766 = zext i1 %1765 to i8
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1766, i8* %1767, align 1
  store %struct.Memory* %loadMem_418b6a, %struct.Memory** %MEMORY
  %loadMem_418b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1769 = getelementptr inbounds %struct.GPR, %struct.GPR* %1768, i32 0, i32 33
  %1770 = getelementptr inbounds %struct.Reg, %struct.Reg* %1769, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %1770 to i64*
  %1771 = load i64, i64* %PC.i1011
  %1772 = add i64 %1771, 18
  %1773 = load i64, i64* %PC.i1011
  %1774 = add i64 %1773, 6
  %1775 = load i64, i64* %PC.i1011
  %1776 = add i64 %1775, 6
  store i64 %1776, i64* %PC.i1011
  %1777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1778 = load i8, i8* %1777, align 1
  %1779 = icmp ne i8 %1778, 0
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1781 = load i8, i8* %1780, align 1
  %1782 = icmp ne i8 %1781, 0
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1784 = load i8, i8* %1783, align 1
  %1785 = icmp ne i8 %1784, 0
  %1786 = xor i1 %1782, %1785
  %1787 = or i1 %1779, %1786
  %1788 = zext i1 %1787 to i8
  store i8 %1788, i8* %BRANCH_TAKEN, align 1
  %1789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1790 = select i1 %1787, i64 %1772, i64 %1774
  store i64 %1790, i64* %1789, align 8
  store %struct.Memory* %loadMem_418b6e, %struct.Memory** %MEMORY
  %loadBr_418b6e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418b6e = icmp eq i8 %loadBr_418b6e, 1
  br i1 %cmpBr_418b6e, label %block_.L_418b80, label %block_418b74

block_418b74:                                     ; preds = %block_418b4f
  %loadMem_418b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 33
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %PC.i1009 = bitcast %union.anon* %1793 to i64*
  %1794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1795 = getelementptr inbounds %struct.GPR, %struct.GPR* %1794, i32 0, i32 15
  %1796 = getelementptr inbounds %struct.Reg, %struct.Reg* %1795, i32 0, i32 0
  %RBP.i1010 = bitcast %union.anon* %1796 to i64*
  %1797 = load i64, i64* %RBP.i1010
  %1798 = sub i64 %1797, 28
  %1799 = load i64, i64* %PC.i1009
  %1800 = add i64 %1799, 7
  store i64 %1800, i64* %PC.i1009
  %1801 = inttoptr i64 %1798 to i32*
  store i32 0, i32* %1801
  store %struct.Memory* %loadMem_418b74, %struct.Memory** %MEMORY
  %loadMem_418b7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1803 = getelementptr inbounds %struct.GPR, %struct.GPR* %1802, i32 0, i32 33
  %1804 = getelementptr inbounds %struct.Reg, %struct.Reg* %1803, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %1804 to i64*
  %1805 = load i64, i64* %PC.i1008
  %1806 = add i64 %1805, 56
  %1807 = load i64, i64* %PC.i1008
  %1808 = add i64 %1807, 5
  store i64 %1808, i64* %PC.i1008
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1806, i64* %1809, align 8
  store %struct.Memory* %loadMem_418b7b, %struct.Memory** %MEMORY
  br label %block_.L_418bb3

block_.L_418b80:                                  ; preds = %block_418b4f
  %loadMem_418b80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1811 = getelementptr inbounds %struct.GPR, %struct.GPR* %1810, i32 0, i32 33
  %1812 = getelementptr inbounds %struct.Reg, %struct.Reg* %1811, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %1812 to i64*
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1814 = getelementptr inbounds %struct.GPR, %struct.GPR* %1813, i32 0, i32 1
  %1815 = getelementptr inbounds %struct.Reg, %struct.Reg* %1814, i32 0, i32 0
  %RAX.i1006 = bitcast %union.anon* %1815 to i64*
  %1816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1817 = getelementptr inbounds %struct.GPR, %struct.GPR* %1816, i32 0, i32 15
  %1818 = getelementptr inbounds %struct.Reg, %struct.Reg* %1817, i32 0, i32 0
  %RBP.i1007 = bitcast %union.anon* %1818 to i64*
  %1819 = load i64, i64* %RBP.i1007
  %1820 = sub i64 %1819, 28
  %1821 = load i64, i64* %PC.i1005
  %1822 = add i64 %1821, 3
  store i64 %1822, i64* %PC.i1005
  %1823 = inttoptr i64 %1820 to i32*
  %1824 = load i32, i32* %1823
  %1825 = zext i32 %1824 to i64
  store i64 %1825, i64* %RAX.i1006, align 8
  store %struct.Memory* %loadMem_418b80, %struct.Memory** %MEMORY
  %loadMem_418b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1827 = getelementptr inbounds %struct.GPR, %struct.GPR* %1826, i32 0, i32 33
  %1828 = getelementptr inbounds %struct.Reg, %struct.Reg* %1827, i32 0, i32 0
  %PC.i1003 = bitcast %union.anon* %1828 to i64*
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1830 = getelementptr inbounds %struct.GPR, %struct.GPR* %1829, i32 0, i32 1
  %1831 = getelementptr inbounds %struct.Reg, %struct.Reg* %1830, i32 0, i32 0
  %RAX.i1004 = bitcast %union.anon* %1831 to i64*
  %1832 = load i64, i64* %RAX.i1004
  %1833 = load i64, i64* %PC.i1003
  %1834 = add i64 %1833, 3
  store i64 %1834, i64* %PC.i1003
  %1835 = trunc i64 %1832 to i32
  %1836 = add i32 1, %1835
  %1837 = zext i32 %1836 to i64
  store i64 %1837, i64* %RAX.i1004, align 8
  %1838 = icmp ult i32 %1836, %1835
  %1839 = icmp ult i32 %1836, 1
  %1840 = or i1 %1838, %1839
  %1841 = zext i1 %1840 to i8
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1841, i8* %1842, align 1
  %1843 = and i32 %1836, 255
  %1844 = call i32 @llvm.ctpop.i32(i32 %1843)
  %1845 = trunc i32 %1844 to i8
  %1846 = and i8 %1845, 1
  %1847 = xor i8 %1846, 1
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1847, i8* %1848, align 1
  %1849 = xor i64 1, %1832
  %1850 = trunc i64 %1849 to i32
  %1851 = xor i32 %1850, %1836
  %1852 = lshr i32 %1851, 4
  %1853 = trunc i32 %1852 to i8
  %1854 = and i8 %1853, 1
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1854, i8* %1855, align 1
  %1856 = icmp eq i32 %1836, 0
  %1857 = zext i1 %1856 to i8
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1857, i8* %1858, align 1
  %1859 = lshr i32 %1836, 31
  %1860 = trunc i32 %1859 to i8
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1860, i8* %1861, align 1
  %1862 = lshr i32 %1835, 31
  %1863 = xor i32 %1859, %1862
  %1864 = add i32 %1863, %1859
  %1865 = icmp eq i32 %1864, 2
  %1866 = zext i1 %1865 to i8
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1866, i8* %1867, align 1
  store %struct.Memory* %loadMem_418b83, %struct.Memory** %MEMORY
  %loadMem_418b86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1869 = getelementptr inbounds %struct.GPR, %struct.GPR* %1868, i32 0, i32 33
  %1870 = getelementptr inbounds %struct.Reg, %struct.Reg* %1869, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %1870 to i64*
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1872 = getelementptr inbounds %struct.GPR, %struct.GPR* %1871, i32 0, i32 1
  %1873 = getelementptr inbounds %struct.Reg, %struct.Reg* %1872, i32 0, i32 0
  %EAX.i1001 = bitcast %union.anon* %1873 to i32*
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 15
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %RBP.i1002 = bitcast %union.anon* %1876 to i64*
  %1877 = load i64, i64* %RBP.i1002
  %1878 = sub i64 %1877, 28
  %1879 = load i32, i32* %EAX.i1001
  %1880 = zext i32 %1879 to i64
  %1881 = load i64, i64* %PC.i1000
  %1882 = add i64 %1881, 3
  store i64 %1882, i64* %PC.i1000
  %1883 = inttoptr i64 %1878 to i32*
  store i32 %1879, i32* %1883
  store %struct.Memory* %loadMem_418b86, %struct.Memory** %MEMORY
  %loadMem_418b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1885 = getelementptr inbounds %struct.GPR, %struct.GPR* %1884, i32 0, i32 33
  %1886 = getelementptr inbounds %struct.Reg, %struct.Reg* %1885, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %1886 to i64*
  %1887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1888 = getelementptr inbounds %struct.GPR, %struct.GPR* %1887, i32 0, i32 1
  %1889 = getelementptr inbounds %struct.Reg, %struct.Reg* %1888, i32 0, i32 0
  %EAX.i998 = bitcast %union.anon* %1889 to i32*
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1891 = getelementptr inbounds %struct.GPR, %struct.GPR* %1890, i32 0, i32 15
  %1892 = getelementptr inbounds %struct.Reg, %struct.Reg* %1891, i32 0, i32 0
  %RBP.i999 = bitcast %union.anon* %1892 to i64*
  %1893 = load i32, i32* %EAX.i998
  %1894 = zext i32 %1893 to i64
  %1895 = load i64, i64* %RBP.i999
  %1896 = sub i64 %1895, 152
  %1897 = load i64, i64* %PC.i997
  %1898 = add i64 %1897, 6
  store i64 %1898, i64* %PC.i997
  %1899 = inttoptr i64 %1896 to i32*
  %1900 = load i32, i32* %1899
  %1901 = sub i32 %1893, %1900
  %1902 = icmp ult i32 %1893, %1900
  %1903 = zext i1 %1902 to i8
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1903, i8* %1904, align 1
  %1905 = and i32 %1901, 255
  %1906 = call i32 @llvm.ctpop.i32(i32 %1905)
  %1907 = trunc i32 %1906 to i8
  %1908 = and i8 %1907, 1
  %1909 = xor i8 %1908, 1
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1909, i8* %1910, align 1
  %1911 = xor i32 %1900, %1893
  %1912 = xor i32 %1911, %1901
  %1913 = lshr i32 %1912, 4
  %1914 = trunc i32 %1913 to i8
  %1915 = and i8 %1914, 1
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1915, i8* %1916, align 1
  %1917 = icmp eq i32 %1901, 0
  %1918 = zext i1 %1917 to i8
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1918, i8* %1919, align 1
  %1920 = lshr i32 %1901, 31
  %1921 = trunc i32 %1920 to i8
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1921, i8* %1922, align 1
  %1923 = lshr i32 %1893, 31
  %1924 = lshr i32 %1900, 31
  %1925 = xor i32 %1924, %1923
  %1926 = xor i32 %1920, %1923
  %1927 = add i32 %1926, %1925
  %1928 = icmp eq i32 %1927, 2
  %1929 = zext i1 %1928 to i8
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1929, i8* %1930, align 1
  store %struct.Memory* %loadMem_418b89, %struct.Memory** %MEMORY
  %loadMem_418b8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1932 = getelementptr inbounds %struct.GPR, %struct.GPR* %1931, i32 0, i32 33
  %1933 = getelementptr inbounds %struct.Reg, %struct.Reg* %1932, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %1933 to i64*
  %1934 = load i64, i64* %PC.i996
  %1935 = add i64 %1934, 31
  %1936 = load i64, i64* %PC.i996
  %1937 = add i64 %1936, 6
  %1938 = load i64, i64* %PC.i996
  %1939 = add i64 %1938, 6
  store i64 %1939, i64* %PC.i996
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1941 = load i8, i8* %1940, align 1
  %1942 = icmp eq i8 %1941, 0
  %1943 = zext i1 %1942 to i8
  store i8 %1943, i8* %BRANCH_TAKEN, align 1
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1945 = select i1 %1942, i64 %1935, i64 %1937
  store i64 %1945, i64* %1944, align 8
  store %struct.Memory* %loadMem_418b8f, %struct.Memory** %MEMORY
  %loadBr_418b8f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418b8f = icmp eq i8 %loadBr_418b8f, 1
  br i1 %cmpBr_418b8f, label %block_.L_418bae, label %block_418b95

block_418b95:                                     ; preds = %block_.L_418b80
  %loadMem_418b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1947 = getelementptr inbounds %struct.GPR, %struct.GPR* %1946, i32 0, i32 33
  %1948 = getelementptr inbounds %struct.Reg, %struct.Reg* %1947, i32 0, i32 0
  %PC.i993 = bitcast %union.anon* %1948 to i64*
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1950 = getelementptr inbounds %struct.GPR, %struct.GPR* %1949, i32 0, i32 1
  %1951 = getelementptr inbounds %struct.Reg, %struct.Reg* %1950, i32 0, i32 0
  %RAX.i994 = bitcast %union.anon* %1951 to i64*
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1953 = getelementptr inbounds %struct.GPR, %struct.GPR* %1952, i32 0, i32 15
  %1954 = getelementptr inbounds %struct.Reg, %struct.Reg* %1953, i32 0, i32 0
  %RBP.i995 = bitcast %union.anon* %1954 to i64*
  %1955 = load i64, i64* %RBP.i995
  %1956 = sub i64 %1955, 152
  %1957 = load i64, i64* %PC.i993
  %1958 = add i64 %1957, 6
  store i64 %1958, i64* %PC.i993
  %1959 = inttoptr i64 %1956 to i32*
  %1960 = load i32, i32* %1959
  %1961 = zext i32 %1960 to i64
  store i64 %1961, i64* %RAX.i994, align 8
  store %struct.Memory* %loadMem_418b95, %struct.Memory** %MEMORY
  %loadMem_418b9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1963 = getelementptr inbounds %struct.GPR, %struct.GPR* %1962, i32 0, i32 33
  %1964 = getelementptr inbounds %struct.Reg, %struct.Reg* %1963, i32 0, i32 0
  %PC.i990 = bitcast %union.anon* %1964 to i64*
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1966 = getelementptr inbounds %struct.GPR, %struct.GPR* %1965, i32 0, i32 5
  %1967 = getelementptr inbounds %struct.Reg, %struct.Reg* %1966, i32 0, i32 0
  %RCX.i991 = bitcast %union.anon* %1967 to i64*
  %1968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1969 = getelementptr inbounds %struct.GPR, %struct.GPR* %1968, i32 0, i32 15
  %1970 = getelementptr inbounds %struct.Reg, %struct.Reg* %1969, i32 0, i32 0
  %RBP.i992 = bitcast %union.anon* %1970 to i64*
  %1971 = load i64, i64* %RBP.i992
  %1972 = sub i64 %1971, 144
  %1973 = load i64, i64* %PC.i990
  %1974 = add i64 %1973, 6
  store i64 %1974, i64* %PC.i990
  %1975 = inttoptr i64 %1972 to i32*
  %1976 = load i32, i32* %1975
  %1977 = zext i32 %1976 to i64
  store i64 %1977, i64* %RCX.i991, align 8
  store %struct.Memory* %loadMem_418b9b, %struct.Memory** %MEMORY
  %loadMem_418ba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1979 = getelementptr inbounds %struct.GPR, %struct.GPR* %1978, i32 0, i32 33
  %1980 = getelementptr inbounds %struct.Reg, %struct.Reg* %1979, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %1980 to i64*
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1982 = getelementptr inbounds %struct.GPR, %struct.GPR* %1981, i32 0, i32 1
  %1983 = getelementptr inbounds %struct.Reg, %struct.Reg* %1982, i32 0, i32 0
  %EAX.i988 = bitcast %union.anon* %1983 to i32*
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1985 = getelementptr inbounds %struct.GPR, %struct.GPR* %1984, i32 0, i32 5
  %1986 = getelementptr inbounds %struct.Reg, %struct.Reg* %1985, i32 0, i32 0
  %RCX.i989 = bitcast %union.anon* %1986 to i64*
  %1987 = load i64, i64* %RCX.i989
  %1988 = load i32, i32* %EAX.i988
  %1989 = zext i32 %1988 to i64
  %1990 = load i64, i64* %PC.i987
  %1991 = add i64 %1990, 2
  store i64 %1991, i64* %PC.i987
  %1992 = trunc i64 %1987 to i32
  %1993 = sub i32 %1992, %1988
  %1994 = zext i32 %1993 to i64
  store i64 %1994, i64* %RCX.i989, align 8
  %1995 = icmp ult i32 %1992, %1988
  %1996 = zext i1 %1995 to i8
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1996, i8* %1997, align 1
  %1998 = and i32 %1993, 255
  %1999 = call i32 @llvm.ctpop.i32(i32 %1998)
  %2000 = trunc i32 %1999 to i8
  %2001 = and i8 %2000, 1
  %2002 = xor i8 %2001, 1
  %2003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2002, i8* %2003, align 1
  %2004 = xor i64 %1989, %1987
  %2005 = trunc i64 %2004 to i32
  %2006 = xor i32 %2005, %1993
  %2007 = lshr i32 %2006, 4
  %2008 = trunc i32 %2007 to i8
  %2009 = and i8 %2008, 1
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2009, i8* %2010, align 1
  %2011 = icmp eq i32 %1993, 0
  %2012 = zext i1 %2011 to i8
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2012, i8* %2013, align 1
  %2014 = lshr i32 %1993, 31
  %2015 = trunc i32 %2014 to i8
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2015, i8* %2016, align 1
  %2017 = lshr i32 %1992, 31
  %2018 = lshr i32 %1988, 31
  %2019 = xor i32 %2018, %2017
  %2020 = xor i32 %2014, %2017
  %2021 = add i32 %2020, %2019
  %2022 = icmp eq i32 %2021, 2
  %2023 = zext i1 %2022 to i8
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2023, i8* %2024, align 1
  store %struct.Memory* %loadMem_418ba1, %struct.Memory** %MEMORY
  %loadMem_418ba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2026 = getelementptr inbounds %struct.GPR, %struct.GPR* %2025, i32 0, i32 33
  %2027 = getelementptr inbounds %struct.Reg, %struct.Reg* %2026, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %2027 to i64*
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2029 = getelementptr inbounds %struct.GPR, %struct.GPR* %2028, i32 0, i32 5
  %2030 = getelementptr inbounds %struct.Reg, %struct.Reg* %2029, i32 0, i32 0
  %ECX.i985 = bitcast %union.anon* %2030 to i32*
  %2031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2032 = getelementptr inbounds %struct.GPR, %struct.GPR* %2031, i32 0, i32 15
  %2033 = getelementptr inbounds %struct.Reg, %struct.Reg* %2032, i32 0, i32 0
  %RBP.i986 = bitcast %union.anon* %2033 to i64*
  %2034 = load i64, i64* %RBP.i986
  %2035 = sub i64 %2034, 144
  %2036 = load i32, i32* %ECX.i985
  %2037 = zext i32 %2036 to i64
  %2038 = load i64, i64* %PC.i984
  %2039 = add i64 %2038, 6
  store i64 %2039, i64* %PC.i984
  %2040 = inttoptr i64 %2035 to i32*
  store i32 %2036, i32* %2040
  store %struct.Memory* %loadMem_418ba3, %struct.Memory** %MEMORY
  %loadMem_418ba9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2042 = getelementptr inbounds %struct.GPR, %struct.GPR* %2041, i32 0, i32 33
  %2043 = getelementptr inbounds %struct.Reg, %struct.Reg* %2042, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %2043 to i64*
  %2044 = load i64, i64* %PC.i983
  %2045 = add i64 %2044, 30
  %2046 = load i64, i64* %PC.i983
  %2047 = add i64 %2046, 5
  store i64 %2047, i64* %PC.i983
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2045, i64* %2048, align 8
  store %struct.Memory* %loadMem_418ba9, %struct.Memory** %MEMORY
  br label %block_.L_418bc7

block_.L_418bae:                                  ; preds = %block_.L_418b80
  %loadMem_418bae = load %struct.Memory*, %struct.Memory** %MEMORY
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2050 = getelementptr inbounds %struct.GPR, %struct.GPR* %2049, i32 0, i32 33
  %2051 = getelementptr inbounds %struct.Reg, %struct.Reg* %2050, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %2051 to i64*
  %2052 = load i64, i64* %PC.i982
  %2053 = add i64 %2052, 5
  %2054 = load i64, i64* %PC.i982
  %2055 = add i64 %2054, 5
  store i64 %2055, i64* %PC.i982
  %2056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2053, i64* %2056, align 8
  store %struct.Memory* %loadMem_418bae, %struct.Memory** %MEMORY
  br label %block_.L_418bb3

block_.L_418bb3:                                  ; preds = %block_.L_418bae, %block_418b74
  %loadMem_418bb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2058 = getelementptr inbounds %struct.GPR, %struct.GPR* %2057, i32 0, i32 33
  %2059 = getelementptr inbounds %struct.Reg, %struct.Reg* %2058, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %2059 to i64*
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2061 = getelementptr inbounds %struct.GPR, %struct.GPR* %2060, i32 0, i32 1
  %2062 = getelementptr inbounds %struct.Reg, %struct.Reg* %2061, i32 0, i32 0
  %RAX.i980 = bitcast %union.anon* %2062 to i64*
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2064 = getelementptr inbounds %struct.GPR, %struct.GPR* %2063, i32 0, i32 15
  %2065 = getelementptr inbounds %struct.Reg, %struct.Reg* %2064, i32 0, i32 0
  %RBP.i981 = bitcast %union.anon* %2065 to i64*
  %2066 = load i64, i64* %RBP.i981
  %2067 = sub i64 %2066, 144
  %2068 = load i64, i64* %PC.i979
  %2069 = add i64 %2068, 6
  store i64 %2069, i64* %PC.i979
  %2070 = inttoptr i64 %2067 to i32*
  %2071 = load i32, i32* %2070
  %2072 = zext i32 %2071 to i64
  store i64 %2072, i64* %RAX.i980, align 8
  store %struct.Memory* %loadMem_418bb3, %struct.Memory** %MEMORY
  %loadMem_418bb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2074 = getelementptr inbounds %struct.GPR, %struct.GPR* %2073, i32 0, i32 33
  %2075 = getelementptr inbounds %struct.Reg, %struct.Reg* %2074, i32 0, i32 0
  %PC.i977 = bitcast %union.anon* %2075 to i64*
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2077 = getelementptr inbounds %struct.GPR, %struct.GPR* %2076, i32 0, i32 1
  %2078 = getelementptr inbounds %struct.Reg, %struct.Reg* %2077, i32 0, i32 0
  %RAX.i978 = bitcast %union.anon* %2078 to i64*
  %2079 = load i64, i64* %RAX.i978
  %2080 = load i64, i64* %PC.i977
  %2081 = add i64 %2080, 3
  store i64 %2081, i64* %PC.i977
  %2082 = trunc i64 %2079 to i32
  %2083 = add i32 1, %2082
  %2084 = zext i32 %2083 to i64
  store i64 %2084, i64* %RAX.i978, align 8
  %2085 = icmp ult i32 %2083, %2082
  %2086 = icmp ult i32 %2083, 1
  %2087 = or i1 %2085, %2086
  %2088 = zext i1 %2087 to i8
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2088, i8* %2089, align 1
  %2090 = and i32 %2083, 255
  %2091 = call i32 @llvm.ctpop.i32(i32 %2090)
  %2092 = trunc i32 %2091 to i8
  %2093 = and i8 %2092, 1
  %2094 = xor i8 %2093, 1
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2094, i8* %2095, align 1
  %2096 = xor i64 1, %2079
  %2097 = trunc i64 %2096 to i32
  %2098 = xor i32 %2097, %2083
  %2099 = lshr i32 %2098, 4
  %2100 = trunc i32 %2099 to i8
  %2101 = and i8 %2100, 1
  %2102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2101, i8* %2102, align 1
  %2103 = icmp eq i32 %2083, 0
  %2104 = zext i1 %2103 to i8
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2104, i8* %2105, align 1
  %2106 = lshr i32 %2083, 31
  %2107 = trunc i32 %2106 to i8
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2107, i8* %2108, align 1
  %2109 = lshr i32 %2082, 31
  %2110 = xor i32 %2106, %2109
  %2111 = add i32 %2110, %2106
  %2112 = icmp eq i32 %2111, 2
  %2113 = zext i1 %2112 to i8
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2113, i8* %2114, align 1
  store %struct.Memory* %loadMem_418bb9, %struct.Memory** %MEMORY
  %loadMem_418bbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2116 = getelementptr inbounds %struct.GPR, %struct.GPR* %2115, i32 0, i32 33
  %2117 = getelementptr inbounds %struct.Reg, %struct.Reg* %2116, i32 0, i32 0
  %PC.i974 = bitcast %union.anon* %2117 to i64*
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2119 = getelementptr inbounds %struct.GPR, %struct.GPR* %2118, i32 0, i32 1
  %2120 = getelementptr inbounds %struct.Reg, %struct.Reg* %2119, i32 0, i32 0
  %EAX.i975 = bitcast %union.anon* %2120 to i32*
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2122 = getelementptr inbounds %struct.GPR, %struct.GPR* %2121, i32 0, i32 15
  %2123 = getelementptr inbounds %struct.Reg, %struct.Reg* %2122, i32 0, i32 0
  %RBP.i976 = bitcast %union.anon* %2123 to i64*
  %2124 = load i64, i64* %RBP.i976
  %2125 = sub i64 %2124, 144
  %2126 = load i32, i32* %EAX.i975
  %2127 = zext i32 %2126 to i64
  %2128 = load i64, i64* %PC.i974
  %2129 = add i64 %2128, 6
  store i64 %2129, i64* %PC.i974
  %2130 = inttoptr i64 %2125 to i32*
  store i32 %2126, i32* %2130
  store %struct.Memory* %loadMem_418bbc, %struct.Memory** %MEMORY
  %loadMem_418bc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2132 = getelementptr inbounds %struct.GPR, %struct.GPR* %2131, i32 0, i32 33
  %2133 = getelementptr inbounds %struct.Reg, %struct.Reg* %2132, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %2133 to i64*
  %2134 = load i64, i64* %PC.i973
  %2135 = add i64 %2134, -134
  %2136 = load i64, i64* %PC.i973
  %2137 = add i64 %2136, 5
  store i64 %2137, i64* %PC.i973
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2135, i64* %2138, align 8
  store %struct.Memory* %loadMem_418bc2, %struct.Memory** %MEMORY
  br label %block_.L_418b3c

block_.L_418bc7:                                  ; preds = %block_418b95, %block_.L_418b3c
  %loadMem_418bc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2140 = getelementptr inbounds %struct.GPR, %struct.GPR* %2139, i32 0, i32 33
  %2141 = getelementptr inbounds %struct.Reg, %struct.Reg* %2140, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %2141 to i64*
  %2142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2143 = getelementptr inbounds %struct.GPR, %struct.GPR* %2142, i32 0, i32 15
  %2144 = getelementptr inbounds %struct.Reg, %struct.Reg* %2143, i32 0, i32 0
  %RBP.i972 = bitcast %union.anon* %2144 to i64*
  %2145 = load i64, i64* %RBP.i972
  %2146 = sub i64 %2145, 140
  %2147 = load i64, i64* %PC.i971
  %2148 = add i64 %2147, 10
  store i64 %2148, i64* %PC.i971
  %2149 = inttoptr i64 %2146 to i32*
  store i32 0, i32* %2149
  store %struct.Memory* %loadMem_418bc7, %struct.Memory** %MEMORY
  %loadMem_418bd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2151 = getelementptr inbounds %struct.GPR, %struct.GPR* %2150, i32 0, i32 33
  %2152 = getelementptr inbounds %struct.Reg, %struct.Reg* %2151, i32 0, i32 0
  %PC.i968 = bitcast %union.anon* %2152 to i64*
  %2153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2154 = getelementptr inbounds %struct.GPR, %struct.GPR* %2153, i32 0, i32 1
  %2155 = getelementptr inbounds %struct.Reg, %struct.Reg* %2154, i32 0, i32 0
  %RAX.i969 = bitcast %union.anon* %2155 to i64*
  %2156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2157 = getelementptr inbounds %struct.GPR, %struct.GPR* %2156, i32 0, i32 15
  %2158 = getelementptr inbounds %struct.Reg, %struct.Reg* %2157, i32 0, i32 0
  %RBP.i970 = bitcast %union.anon* %2158 to i64*
  %2159 = load i64, i64* %RBP.i970
  %2160 = sub i64 %2159, 16
  %2161 = load i64, i64* %PC.i968
  %2162 = add i64 %2161, 4
  store i64 %2162, i64* %PC.i968
  %2163 = inttoptr i64 %2160 to i64*
  %2164 = load i64, i64* %2163
  store i64 %2164, i64* %RAX.i969, align 8
  store %struct.Memory* %loadMem_418bd1, %struct.Memory** %MEMORY
  %loadMem_418bd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2166 = getelementptr inbounds %struct.GPR, %struct.GPR* %2165, i32 0, i32 33
  %2167 = getelementptr inbounds %struct.Reg, %struct.Reg* %2166, i32 0, i32 0
  %PC.i965 = bitcast %union.anon* %2167 to i64*
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2169 = getelementptr inbounds %struct.GPR, %struct.GPR* %2168, i32 0, i32 1
  %2170 = getelementptr inbounds %struct.Reg, %struct.Reg* %2169, i32 0, i32 0
  %RAX.i966 = bitcast %union.anon* %2170 to i64*
  %2171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2172 = getelementptr inbounds %struct.GPR, %struct.GPR* %2171, i32 0, i32 5
  %2173 = getelementptr inbounds %struct.Reg, %struct.Reg* %2172, i32 0, i32 0
  %RCX.i967 = bitcast %union.anon* %2173 to i64*
  %2174 = load i64, i64* %RAX.i966
  %2175 = add i64 %2174, 20
  %2176 = load i64, i64* %PC.i965
  %2177 = add i64 %2176, 3
  store i64 %2177, i64* %PC.i965
  %2178 = inttoptr i64 %2175 to i32*
  %2179 = load i32, i32* %2178
  %2180 = zext i32 %2179 to i64
  store i64 %2180, i64* %RCX.i967, align 8
  store %struct.Memory* %loadMem_418bd5, %struct.Memory** %MEMORY
  %loadMem_418bd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2182 = getelementptr inbounds %struct.GPR, %struct.GPR* %2181, i32 0, i32 33
  %2183 = getelementptr inbounds %struct.Reg, %struct.Reg* %2182, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %2183 to i64*
  %2184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2185 = getelementptr inbounds %struct.GPR, %struct.GPR* %2184, i32 0, i32 1
  %2186 = getelementptr inbounds %struct.Reg, %struct.Reg* %2185, i32 0, i32 0
  %RAX.i963 = bitcast %union.anon* %2186 to i64*
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2188 = getelementptr inbounds %struct.GPR, %struct.GPR* %2187, i32 0, i32 15
  %2189 = getelementptr inbounds %struct.Reg, %struct.Reg* %2188, i32 0, i32 0
  %RBP.i964 = bitcast %union.anon* %2189 to i64*
  %2190 = load i64, i64* %RBP.i964
  %2191 = sub i64 %2190, 16
  %2192 = load i64, i64* %PC.i962
  %2193 = add i64 %2192, 4
  store i64 %2193, i64* %PC.i962
  %2194 = inttoptr i64 %2191 to i64*
  %2195 = load i64, i64* %2194
  store i64 %2195, i64* %RAX.i963, align 8
  store %struct.Memory* %loadMem_418bd8, %struct.Memory** %MEMORY
  %loadMem_418bdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %2196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2197 = getelementptr inbounds %struct.GPR, %struct.GPR* %2196, i32 0, i32 33
  %2198 = getelementptr inbounds %struct.Reg, %struct.Reg* %2197, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %2198 to i64*
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2200 = getelementptr inbounds %struct.GPR, %struct.GPR* %2199, i32 0, i32 1
  %2201 = getelementptr inbounds %struct.Reg, %struct.Reg* %2200, i32 0, i32 0
  %RAX.i960 = bitcast %union.anon* %2201 to i64*
  %2202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2203 = getelementptr inbounds %struct.GPR, %struct.GPR* %2202, i32 0, i32 5
  %2204 = getelementptr inbounds %struct.Reg, %struct.Reg* %2203, i32 0, i32 0
  %RCX.i961 = bitcast %union.anon* %2204 to i64*
  %2205 = load i64, i64* %RCX.i961
  %2206 = load i64, i64* %RAX.i960
  %2207 = add i64 %2206, 8
  %2208 = load i64, i64* %PC.i959
  %2209 = add i64 %2208, 3
  store i64 %2209, i64* %PC.i959
  %2210 = trunc i64 %2205 to i32
  %2211 = inttoptr i64 %2207 to i32*
  %2212 = load i32, i32* %2211
  %2213 = sub i32 %2210, %2212
  %2214 = zext i32 %2213 to i64
  store i64 %2214, i64* %RCX.i961, align 8
  %2215 = icmp ult i32 %2210, %2212
  %2216 = zext i1 %2215 to i8
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2216, i8* %2217, align 1
  %2218 = and i32 %2213, 255
  %2219 = call i32 @llvm.ctpop.i32(i32 %2218)
  %2220 = trunc i32 %2219 to i8
  %2221 = and i8 %2220, 1
  %2222 = xor i8 %2221, 1
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2222, i8* %2223, align 1
  %2224 = xor i32 %2212, %2210
  %2225 = xor i32 %2224, %2213
  %2226 = lshr i32 %2225, 4
  %2227 = trunc i32 %2226 to i8
  %2228 = and i8 %2227, 1
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2228, i8* %2229, align 1
  %2230 = icmp eq i32 %2213, 0
  %2231 = zext i1 %2230 to i8
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2231, i8* %2232, align 1
  %2233 = lshr i32 %2213, 31
  %2234 = trunc i32 %2233 to i8
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2234, i8* %2235, align 1
  %2236 = lshr i32 %2210, 31
  %2237 = lshr i32 %2212, 31
  %2238 = xor i32 %2237, %2236
  %2239 = xor i32 %2233, %2236
  %2240 = add i32 %2239, %2238
  %2241 = icmp eq i32 %2240, 2
  %2242 = zext i1 %2241 to i8
  %2243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2242, i8* %2243, align 1
  store %struct.Memory* %loadMem_418bdc, %struct.Memory** %MEMORY
  %loadMem_418bdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2245 = getelementptr inbounds %struct.GPR, %struct.GPR* %2244, i32 0, i32 33
  %2246 = getelementptr inbounds %struct.Reg, %struct.Reg* %2245, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %2246 to i64*
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2248 = getelementptr inbounds %struct.GPR, %struct.GPR* %2247, i32 0, i32 5
  %2249 = getelementptr inbounds %struct.Reg, %struct.Reg* %2248, i32 0, i32 0
  %ECX.i957 = bitcast %union.anon* %2249 to i32*
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2251 = getelementptr inbounds %struct.GPR, %struct.GPR* %2250, i32 0, i32 15
  %2252 = getelementptr inbounds %struct.Reg, %struct.Reg* %2251, i32 0, i32 0
  %RBP.i958 = bitcast %union.anon* %2252 to i64*
  %2253 = load i64, i64* %RBP.i958
  %2254 = sub i64 %2253, 32
  %2255 = load i32, i32* %ECX.i957
  %2256 = zext i32 %2255 to i64
  %2257 = load i64, i64* %PC.i956
  %2258 = add i64 %2257, 3
  store i64 %2258, i64* %PC.i956
  %2259 = inttoptr i64 %2254 to i32*
  store i32 %2255, i32* %2259
  store %struct.Memory* %loadMem_418bdf, %struct.Memory** %MEMORY
  br label %block_.L_418be2

block_.L_418be2:                                  ; preds = %block_418bfa, %block_.L_418bc7
  %loadMem_418be2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2261 = getelementptr inbounds %struct.GPR, %struct.GPR* %2260, i32 0, i32 33
  %2262 = getelementptr inbounds %struct.Reg, %struct.Reg* %2261, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %2262 to i64*
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2264 = getelementptr inbounds %struct.GPR, %struct.GPR* %2263, i32 0, i32 1
  %2265 = getelementptr inbounds %struct.Reg, %struct.Reg* %2264, i32 0, i32 0
  %RAX.i954 = bitcast %union.anon* %2265 to i64*
  %2266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2267 = getelementptr inbounds %struct.GPR, %struct.GPR* %2266, i32 0, i32 15
  %2268 = getelementptr inbounds %struct.Reg, %struct.Reg* %2267, i32 0, i32 0
  %RBP.i955 = bitcast %union.anon* %2268 to i64*
  %2269 = load i64, i64* %RBP.i955
  %2270 = sub i64 %2269, 32
  %2271 = load i64, i64* %PC.i953
  %2272 = add i64 %2271, 3
  store i64 %2272, i64* %PC.i953
  %2273 = inttoptr i64 %2270 to i32*
  %2274 = load i32, i32* %2273
  %2275 = zext i32 %2274 to i64
  store i64 %2275, i64* %RAX.i954, align 8
  store %struct.Memory* %loadMem_418be2, %struct.Memory** %MEMORY
  %loadMem_418be5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2277 = getelementptr inbounds %struct.GPR, %struct.GPR* %2276, i32 0, i32 33
  %2278 = getelementptr inbounds %struct.Reg, %struct.Reg* %2277, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %2278 to i64*
  %2279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2280 = getelementptr inbounds %struct.GPR, %struct.GPR* %2279, i32 0, i32 5
  %2281 = getelementptr inbounds %struct.Reg, %struct.Reg* %2280, i32 0, i32 0
  %RCX.i951 = bitcast %union.anon* %2281 to i64*
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2283 = getelementptr inbounds %struct.GPR, %struct.GPR* %2282, i32 0, i32 15
  %2284 = getelementptr inbounds %struct.Reg, %struct.Reg* %2283, i32 0, i32 0
  %RBP.i952 = bitcast %union.anon* %2284 to i64*
  %2285 = load i64, i64* %RBP.i952
  %2286 = sub i64 %2285, 136
  %2287 = load i64, i64* %PC.i950
  %2288 = add i64 %2287, 6
  store i64 %2288, i64* %PC.i950
  %2289 = inttoptr i64 %2286 to i32*
  %2290 = load i32, i32* %2289
  %2291 = zext i32 %2290 to i64
  store i64 %2291, i64* %RCX.i951, align 8
  store %struct.Memory* %loadMem_418be5, %struct.Memory** %MEMORY
  %loadMem_418beb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2293 = getelementptr inbounds %struct.GPR, %struct.GPR* %2292, i32 0, i32 33
  %2294 = getelementptr inbounds %struct.Reg, %struct.Reg* %2293, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %2294 to i64*
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2296 = getelementptr inbounds %struct.GPR, %struct.GPR* %2295, i32 0, i32 7
  %2297 = getelementptr inbounds %struct.Reg, %struct.Reg* %2296, i32 0, i32 0
  %RDX.i948 = bitcast %union.anon* %2297 to i64*
  %2298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2299 = getelementptr inbounds %struct.GPR, %struct.GPR* %2298, i32 0, i32 15
  %2300 = getelementptr inbounds %struct.Reg, %struct.Reg* %2299, i32 0, i32 0
  %RBP.i949 = bitcast %union.anon* %2300 to i64*
  %2301 = load i64, i64* %RBP.i949
  %2302 = sub i64 %2301, 16
  %2303 = load i64, i64* %PC.i947
  %2304 = add i64 %2303, 4
  store i64 %2304, i64* %PC.i947
  %2305 = inttoptr i64 %2302 to i64*
  %2306 = load i64, i64* %2305
  store i64 %2306, i64* %RDX.i948, align 8
  store %struct.Memory* %loadMem_418beb, %struct.Memory** %MEMORY
  %loadMem_418bef = load %struct.Memory*, %struct.Memory** %MEMORY
  %2307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2308 = getelementptr inbounds %struct.GPR, %struct.GPR* %2307, i32 0, i32 33
  %2309 = getelementptr inbounds %struct.Reg, %struct.Reg* %2308, i32 0, i32 0
  %PC.i944 = bitcast %union.anon* %2309 to i64*
  %2310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2311 = getelementptr inbounds %struct.GPR, %struct.GPR* %2310, i32 0, i32 5
  %2312 = getelementptr inbounds %struct.Reg, %struct.Reg* %2311, i32 0, i32 0
  %RCX.i945 = bitcast %union.anon* %2312 to i64*
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2314 = getelementptr inbounds %struct.GPR, %struct.GPR* %2313, i32 0, i32 7
  %2315 = getelementptr inbounds %struct.Reg, %struct.Reg* %2314, i32 0, i32 0
  %RDX.i946 = bitcast %union.anon* %2315 to i64*
  %2316 = load i64, i64* %RCX.i945
  %2317 = load i64, i64* %RDX.i946
  %2318 = add i64 %2317, 8
  %2319 = load i64, i64* %PC.i944
  %2320 = add i64 %2319, 3
  store i64 %2320, i64* %PC.i944
  %2321 = trunc i64 %2316 to i32
  %2322 = inttoptr i64 %2318 to i32*
  %2323 = load i32, i32* %2322
  %2324 = sub i32 %2321, %2323
  %2325 = zext i32 %2324 to i64
  store i64 %2325, i64* %RCX.i945, align 8
  %2326 = icmp ult i32 %2321, %2323
  %2327 = zext i1 %2326 to i8
  %2328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2327, i8* %2328, align 1
  %2329 = and i32 %2324, 255
  %2330 = call i32 @llvm.ctpop.i32(i32 %2329)
  %2331 = trunc i32 %2330 to i8
  %2332 = and i8 %2331, 1
  %2333 = xor i8 %2332, 1
  %2334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2333, i8* %2334, align 1
  %2335 = xor i32 %2323, %2321
  %2336 = xor i32 %2335, %2324
  %2337 = lshr i32 %2336, 4
  %2338 = trunc i32 %2337 to i8
  %2339 = and i8 %2338, 1
  %2340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2339, i8* %2340, align 1
  %2341 = icmp eq i32 %2324, 0
  %2342 = zext i1 %2341 to i8
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2342, i8* %2343, align 1
  %2344 = lshr i32 %2324, 31
  %2345 = trunc i32 %2344 to i8
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2345, i8* %2346, align 1
  %2347 = lshr i32 %2321, 31
  %2348 = lshr i32 %2323, 31
  %2349 = xor i32 %2348, %2347
  %2350 = xor i32 %2344, %2347
  %2351 = add i32 %2350, %2349
  %2352 = icmp eq i32 %2351, 2
  %2353 = zext i1 %2352 to i8
  %2354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2353, i8* %2354, align 1
  store %struct.Memory* %loadMem_418bef, %struct.Memory** %MEMORY
  %loadMem_418bf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2356 = getelementptr inbounds %struct.GPR, %struct.GPR* %2355, i32 0, i32 33
  %2357 = getelementptr inbounds %struct.Reg, %struct.Reg* %2356, i32 0, i32 0
  %PC.i941 = bitcast %union.anon* %2357 to i64*
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2359 = getelementptr inbounds %struct.GPR, %struct.GPR* %2358, i32 0, i32 1
  %2360 = getelementptr inbounds %struct.Reg, %struct.Reg* %2359, i32 0, i32 0
  %EAX.i942 = bitcast %union.anon* %2360 to i32*
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2362 = getelementptr inbounds %struct.GPR, %struct.GPR* %2361, i32 0, i32 5
  %2363 = getelementptr inbounds %struct.Reg, %struct.Reg* %2362, i32 0, i32 0
  %ECX.i943 = bitcast %union.anon* %2363 to i32*
  %2364 = load i32, i32* %EAX.i942
  %2365 = zext i32 %2364 to i64
  %2366 = load i32, i32* %ECX.i943
  %2367 = zext i32 %2366 to i64
  %2368 = load i64, i64* %PC.i941
  %2369 = add i64 %2368, 2
  store i64 %2369, i64* %PC.i941
  %2370 = sub i32 %2364, %2366
  %2371 = icmp ult i32 %2364, %2366
  %2372 = zext i1 %2371 to i8
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2372, i8* %2373, align 1
  %2374 = and i32 %2370, 255
  %2375 = call i32 @llvm.ctpop.i32(i32 %2374)
  %2376 = trunc i32 %2375 to i8
  %2377 = and i8 %2376, 1
  %2378 = xor i8 %2377, 1
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2378, i8* %2379, align 1
  %2380 = xor i64 %2367, %2365
  %2381 = trunc i64 %2380 to i32
  %2382 = xor i32 %2381, %2370
  %2383 = lshr i32 %2382, 4
  %2384 = trunc i32 %2383 to i8
  %2385 = and i8 %2384, 1
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2385, i8* %2386, align 1
  %2387 = icmp eq i32 %2370, 0
  %2388 = zext i1 %2387 to i8
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2388, i8* %2389, align 1
  %2390 = lshr i32 %2370, 31
  %2391 = trunc i32 %2390 to i8
  %2392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2391, i8* %2392, align 1
  %2393 = lshr i32 %2364, 31
  %2394 = lshr i32 %2366, 31
  %2395 = xor i32 %2394, %2393
  %2396 = xor i32 %2390, %2393
  %2397 = add i32 %2396, %2395
  %2398 = icmp eq i32 %2397, 2
  %2399 = zext i1 %2398 to i8
  %2400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2399, i8* %2400, align 1
  store %struct.Memory* %loadMem_418bf2, %struct.Memory** %MEMORY
  %loadMem_418bf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2402 = getelementptr inbounds %struct.GPR, %struct.GPR* %2401, i32 0, i32 33
  %2403 = getelementptr inbounds %struct.Reg, %struct.Reg* %2402, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %2403 to i64*
  %2404 = load i64, i64* %PC.i940
  %2405 = add i64 %2404, 46
  %2406 = load i64, i64* %PC.i940
  %2407 = add i64 %2406, 6
  %2408 = load i64, i64* %PC.i940
  %2409 = add i64 %2408, 6
  store i64 %2409, i64* %PC.i940
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2411 = load i8, i8* %2410, align 1
  %2412 = icmp eq i8 %2411, 0
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2414 = load i8, i8* %2413, align 1
  %2415 = icmp ne i8 %2414, 0
  %2416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2417 = load i8, i8* %2416, align 1
  %2418 = icmp ne i8 %2417, 0
  %2419 = xor i1 %2415, %2418
  %2420 = xor i1 %2419, true
  %2421 = and i1 %2412, %2420
  %2422 = zext i1 %2421 to i8
  store i8 %2422, i8* %BRANCH_TAKEN, align 1
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2424 = select i1 %2421, i64 %2405, i64 %2407
  store i64 %2424, i64* %2423, align 8
  store %struct.Memory* %loadMem_418bf4, %struct.Memory** %MEMORY
  %loadBr_418bf4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418bf4 = icmp eq i8 %loadBr_418bf4, 1
  br i1 %cmpBr_418bf4, label %block_.L_418c22, label %block_418bfa

block_418bfa:                                     ; preds = %block_.L_418be2
  %loadMem_418bfa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2426 = getelementptr inbounds %struct.GPR, %struct.GPR* %2425, i32 0, i32 33
  %2427 = getelementptr inbounds %struct.Reg, %struct.Reg* %2426, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %2427 to i64*
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2429 = getelementptr inbounds %struct.GPR, %struct.GPR* %2428, i32 0, i32 1
  %2430 = getelementptr inbounds %struct.Reg, %struct.Reg* %2429, i32 0, i32 0
  %RAX.i938 = bitcast %union.anon* %2430 to i64*
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2432 = getelementptr inbounds %struct.GPR, %struct.GPR* %2431, i32 0, i32 15
  %2433 = getelementptr inbounds %struct.Reg, %struct.Reg* %2432, i32 0, i32 0
  %RBP.i939 = bitcast %union.anon* %2433 to i64*
  %2434 = load i64, i64* %RBP.i939
  %2435 = sub i64 %2434, 16
  %2436 = load i64, i64* %PC.i937
  %2437 = add i64 %2436, 4
  store i64 %2437, i64* %PC.i937
  %2438 = inttoptr i64 %2435 to i64*
  %2439 = load i64, i64* %2438
  store i64 %2439, i64* %RAX.i938, align 8
  store %struct.Memory* %loadMem_418bfa, %struct.Memory** %MEMORY
  %loadMem_418bfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 33
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %2442 to i64*
  %2443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2444 = getelementptr inbounds %struct.GPR, %struct.GPR* %2443, i32 0, i32 1
  %2445 = getelementptr inbounds %struct.Reg, %struct.Reg* %2444, i32 0, i32 0
  %RAX.i936 = bitcast %union.anon* %2445 to i64*
  %2446 = load i64, i64* %RAX.i936
  %2447 = load i64, i64* %PC.i935
  %2448 = add i64 %2447, 3
  store i64 %2448, i64* %PC.i935
  %2449 = inttoptr i64 %2446 to i64*
  %2450 = load i64, i64* %2449
  store i64 %2450, i64* %RAX.i936, align 8
  store %struct.Memory* %loadMem_418bfe, %struct.Memory** %MEMORY
  %loadMem_418c01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2452 = getelementptr inbounds %struct.GPR, %struct.GPR* %2451, i32 0, i32 33
  %2453 = getelementptr inbounds %struct.Reg, %struct.Reg* %2452, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %2453 to i64*
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2455 = getelementptr inbounds %struct.GPR, %struct.GPR* %2454, i32 0, i32 5
  %2456 = getelementptr inbounds %struct.Reg, %struct.Reg* %2455, i32 0, i32 0
  %RCX.i933 = bitcast %union.anon* %2456 to i64*
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2458 = getelementptr inbounds %struct.GPR, %struct.GPR* %2457, i32 0, i32 15
  %2459 = getelementptr inbounds %struct.Reg, %struct.Reg* %2458, i32 0, i32 0
  %RBP.i934 = bitcast %union.anon* %2459 to i64*
  %2460 = load i64, i64* %RBP.i934
  %2461 = sub i64 %2460, 32
  %2462 = load i64, i64* %PC.i932
  %2463 = add i64 %2462, 4
  store i64 %2463, i64* %PC.i932
  %2464 = inttoptr i64 %2461 to i32*
  %2465 = load i32, i32* %2464
  %2466 = sext i32 %2465 to i64
  store i64 %2466, i64* %RCX.i933, align 8
  store %struct.Memory* %loadMem_418c01, %struct.Memory** %MEMORY
  %loadMem_418c05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2468 = getelementptr inbounds %struct.GPR, %struct.GPR* %2467, i32 0, i32 33
  %2469 = getelementptr inbounds %struct.Reg, %struct.Reg* %2468, i32 0, i32 0
  %PC.i928 = bitcast %union.anon* %2469 to i64*
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2471 = getelementptr inbounds %struct.GPR, %struct.GPR* %2470, i32 0, i32 1
  %2472 = getelementptr inbounds %struct.Reg, %struct.Reg* %2471, i32 0, i32 0
  %RAX.i929 = bitcast %union.anon* %2472 to i64*
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2474 = getelementptr inbounds %struct.GPR, %struct.GPR* %2473, i32 0, i32 5
  %2475 = getelementptr inbounds %struct.Reg, %struct.Reg* %2474, i32 0, i32 0
  %RCX.i930 = bitcast %union.anon* %2475 to i64*
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2477 = getelementptr inbounds %struct.GPR, %struct.GPR* %2476, i32 0, i32 7
  %2478 = getelementptr inbounds %struct.Reg, %struct.Reg* %2477, i32 0, i32 0
  %RDX.i931 = bitcast %union.anon* %2478 to i64*
  %2479 = load i64, i64* %RAX.i929
  %2480 = load i64, i64* %RCX.i930
  %2481 = mul i64 %2480, 4
  %2482 = add i64 %2481, %2479
  %2483 = load i64, i64* %PC.i928
  %2484 = add i64 %2483, 3
  store i64 %2484, i64* %PC.i928
  %2485 = inttoptr i64 %2482 to i32*
  %2486 = load i32, i32* %2485
  %2487 = zext i32 %2486 to i64
  store i64 %2487, i64* %RDX.i931, align 8
  store %struct.Memory* %loadMem_418c05, %struct.Memory** %MEMORY
  %loadMem_418c08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2489 = getelementptr inbounds %struct.GPR, %struct.GPR* %2488, i32 0, i32 33
  %2490 = getelementptr inbounds %struct.Reg, %struct.Reg* %2489, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %2490 to i64*
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2492 = getelementptr inbounds %struct.GPR, %struct.GPR* %2491, i32 0, i32 7
  %2493 = getelementptr inbounds %struct.Reg, %struct.Reg* %2492, i32 0, i32 0
  %RDX.i926 = bitcast %union.anon* %2493 to i64*
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2495 = getelementptr inbounds %struct.GPR, %struct.GPR* %2494, i32 0, i32 15
  %2496 = getelementptr inbounds %struct.Reg, %struct.Reg* %2495, i32 0, i32 0
  %RBP.i927 = bitcast %union.anon* %2496 to i64*
  %2497 = load i64, i64* %RDX.i926
  %2498 = load i64, i64* %RBP.i927
  %2499 = sub i64 %2498, 140
  %2500 = load i64, i64* %PC.i925
  %2501 = add i64 %2500, 6
  store i64 %2501, i64* %PC.i925
  %2502 = trunc i64 %2497 to i32
  %2503 = inttoptr i64 %2499 to i32*
  %2504 = load i32, i32* %2503
  %2505 = add i32 %2504, %2502
  %2506 = zext i32 %2505 to i64
  store i64 %2506, i64* %RDX.i926, align 8
  %2507 = icmp ult i32 %2505, %2502
  %2508 = icmp ult i32 %2505, %2504
  %2509 = or i1 %2507, %2508
  %2510 = zext i1 %2509 to i8
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2510, i8* %2511, align 1
  %2512 = and i32 %2505, 255
  %2513 = call i32 @llvm.ctpop.i32(i32 %2512)
  %2514 = trunc i32 %2513 to i8
  %2515 = and i8 %2514, 1
  %2516 = xor i8 %2515, 1
  %2517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2516, i8* %2517, align 1
  %2518 = xor i32 %2504, %2502
  %2519 = xor i32 %2518, %2505
  %2520 = lshr i32 %2519, 4
  %2521 = trunc i32 %2520 to i8
  %2522 = and i8 %2521, 1
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2522, i8* %2523, align 1
  %2524 = icmp eq i32 %2505, 0
  %2525 = zext i1 %2524 to i8
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2525, i8* %2526, align 1
  %2527 = lshr i32 %2505, 31
  %2528 = trunc i32 %2527 to i8
  %2529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2528, i8* %2529, align 1
  %2530 = lshr i32 %2502, 31
  %2531 = lshr i32 %2504, 31
  %2532 = xor i32 %2527, %2530
  %2533 = xor i32 %2527, %2531
  %2534 = add i32 %2532, %2533
  %2535 = icmp eq i32 %2534, 2
  %2536 = zext i1 %2535 to i8
  %2537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2536, i8* %2537, align 1
  store %struct.Memory* %loadMem_418c08, %struct.Memory** %MEMORY
  %loadMem_418c0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2539 = getelementptr inbounds %struct.GPR, %struct.GPR* %2538, i32 0, i32 33
  %2540 = getelementptr inbounds %struct.Reg, %struct.Reg* %2539, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %2540 to i64*
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2542 = getelementptr inbounds %struct.GPR, %struct.GPR* %2541, i32 0, i32 7
  %2543 = getelementptr inbounds %struct.Reg, %struct.Reg* %2542, i32 0, i32 0
  %EDX.i923 = bitcast %union.anon* %2543 to i32*
  %2544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2545 = getelementptr inbounds %struct.GPR, %struct.GPR* %2544, i32 0, i32 15
  %2546 = getelementptr inbounds %struct.Reg, %struct.Reg* %2545, i32 0, i32 0
  %RBP.i924 = bitcast %union.anon* %2546 to i64*
  %2547 = load i64, i64* %RBP.i924
  %2548 = sub i64 %2547, 140
  %2549 = load i32, i32* %EDX.i923
  %2550 = zext i32 %2549 to i64
  %2551 = load i64, i64* %PC.i922
  %2552 = add i64 %2551, 6
  store i64 %2552, i64* %PC.i922
  %2553 = inttoptr i64 %2548 to i32*
  store i32 %2549, i32* %2553
  store %struct.Memory* %loadMem_418c0e, %struct.Memory** %MEMORY
  %loadMem_418c14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 33
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %2556 to i64*
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2558 = getelementptr inbounds %struct.GPR, %struct.GPR* %2557, i32 0, i32 1
  %2559 = getelementptr inbounds %struct.Reg, %struct.Reg* %2558, i32 0, i32 0
  %RAX.i920 = bitcast %union.anon* %2559 to i64*
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 15
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %RBP.i921 = bitcast %union.anon* %2562 to i64*
  %2563 = load i64, i64* %RBP.i921
  %2564 = sub i64 %2563, 32
  %2565 = load i64, i64* %PC.i919
  %2566 = add i64 %2565, 3
  store i64 %2566, i64* %PC.i919
  %2567 = inttoptr i64 %2564 to i32*
  %2568 = load i32, i32* %2567
  %2569 = zext i32 %2568 to i64
  store i64 %2569, i64* %RAX.i920, align 8
  store %struct.Memory* %loadMem_418c14, %struct.Memory** %MEMORY
  %loadMem_418c17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2571 = getelementptr inbounds %struct.GPR, %struct.GPR* %2570, i32 0, i32 33
  %2572 = getelementptr inbounds %struct.Reg, %struct.Reg* %2571, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %2572 to i64*
  %2573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2574 = getelementptr inbounds %struct.GPR, %struct.GPR* %2573, i32 0, i32 1
  %2575 = getelementptr inbounds %struct.Reg, %struct.Reg* %2574, i32 0, i32 0
  %RAX.i918 = bitcast %union.anon* %2575 to i64*
  %2576 = load i64, i64* %RAX.i918
  %2577 = load i64, i64* %PC.i917
  %2578 = add i64 %2577, 3
  store i64 %2578, i64* %PC.i917
  %2579 = trunc i64 %2576 to i32
  %2580 = add i32 1, %2579
  %2581 = zext i32 %2580 to i64
  store i64 %2581, i64* %RAX.i918, align 8
  %2582 = icmp ult i32 %2580, %2579
  %2583 = icmp ult i32 %2580, 1
  %2584 = or i1 %2582, %2583
  %2585 = zext i1 %2584 to i8
  %2586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2585, i8* %2586, align 1
  %2587 = and i32 %2580, 255
  %2588 = call i32 @llvm.ctpop.i32(i32 %2587)
  %2589 = trunc i32 %2588 to i8
  %2590 = and i8 %2589, 1
  %2591 = xor i8 %2590, 1
  %2592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2591, i8* %2592, align 1
  %2593 = xor i64 1, %2576
  %2594 = trunc i64 %2593 to i32
  %2595 = xor i32 %2594, %2580
  %2596 = lshr i32 %2595, 4
  %2597 = trunc i32 %2596 to i8
  %2598 = and i8 %2597, 1
  %2599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2598, i8* %2599, align 1
  %2600 = icmp eq i32 %2580, 0
  %2601 = zext i1 %2600 to i8
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2601, i8* %2602, align 1
  %2603 = lshr i32 %2580, 31
  %2604 = trunc i32 %2603 to i8
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2604, i8* %2605, align 1
  %2606 = lshr i32 %2579, 31
  %2607 = xor i32 %2603, %2606
  %2608 = add i32 %2607, %2603
  %2609 = icmp eq i32 %2608, 2
  %2610 = zext i1 %2609 to i8
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2610, i8* %2611, align 1
  store %struct.Memory* %loadMem_418c17, %struct.Memory** %MEMORY
  %loadMem_418c1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2613 = getelementptr inbounds %struct.GPR, %struct.GPR* %2612, i32 0, i32 33
  %2614 = getelementptr inbounds %struct.Reg, %struct.Reg* %2613, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %2614 to i64*
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2616 = getelementptr inbounds %struct.GPR, %struct.GPR* %2615, i32 0, i32 1
  %2617 = getelementptr inbounds %struct.Reg, %struct.Reg* %2616, i32 0, i32 0
  %EAX.i915 = bitcast %union.anon* %2617 to i32*
  %2618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2619 = getelementptr inbounds %struct.GPR, %struct.GPR* %2618, i32 0, i32 15
  %2620 = getelementptr inbounds %struct.Reg, %struct.Reg* %2619, i32 0, i32 0
  %RBP.i916 = bitcast %union.anon* %2620 to i64*
  %2621 = load i64, i64* %RBP.i916
  %2622 = sub i64 %2621, 32
  %2623 = load i32, i32* %EAX.i915
  %2624 = zext i32 %2623 to i64
  %2625 = load i64, i64* %PC.i914
  %2626 = add i64 %2625, 3
  store i64 %2626, i64* %PC.i914
  %2627 = inttoptr i64 %2622 to i32*
  store i32 %2623, i32* %2627
  store %struct.Memory* %loadMem_418c1a, %struct.Memory** %MEMORY
  %loadMem_418c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2629 = getelementptr inbounds %struct.GPR, %struct.GPR* %2628, i32 0, i32 33
  %2630 = getelementptr inbounds %struct.Reg, %struct.Reg* %2629, i32 0, i32 0
  %PC.i913 = bitcast %union.anon* %2630 to i64*
  %2631 = load i64, i64* %PC.i913
  %2632 = add i64 %2631, -59
  %2633 = load i64, i64* %PC.i913
  %2634 = add i64 %2633, 5
  store i64 %2634, i64* %PC.i913
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2632, i64* %2635, align 8
  store %struct.Memory* %loadMem_418c1d, %struct.Memory** %MEMORY
  br label %block_.L_418be2

block_.L_418c22:                                  ; preds = %block_.L_418be2
  %loadMem_418c22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2637 = getelementptr inbounds %struct.GPR, %struct.GPR* %2636, i32 0, i32 33
  %2638 = getelementptr inbounds %struct.Reg, %struct.Reg* %2637, i32 0, i32 0
  %PC.i911 = bitcast %union.anon* %2638 to i64*
  %2639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2640 = getelementptr inbounds %struct.GPR, %struct.GPR* %2639, i32 0, i32 15
  %2641 = getelementptr inbounds %struct.Reg, %struct.Reg* %2640, i32 0, i32 0
  %RBP.i912 = bitcast %union.anon* %2641 to i64*
  %2642 = load i64, i64* %RBP.i912
  %2643 = sub i64 %2642, 148
  %2644 = load i64, i64* %PC.i911
  %2645 = add i64 %2644, 10
  store i64 %2645, i64* %PC.i911
  %2646 = inttoptr i64 %2643 to i32*
  store i32 0, i32* %2646
  store %struct.Memory* %loadMem_418c22, %struct.Memory** %MEMORY
  %loadMem_418c2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2648 = getelementptr inbounds %struct.GPR, %struct.GPR* %2647, i32 0, i32 33
  %2649 = getelementptr inbounds %struct.Reg, %struct.Reg* %2648, i32 0, i32 0
  %PC.i908 = bitcast %union.anon* %2649 to i64*
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2651 = getelementptr inbounds %struct.GPR, %struct.GPR* %2650, i32 0, i32 1
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %RAX.i909 = bitcast %union.anon* %2652 to i64*
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2654 = getelementptr inbounds %struct.GPR, %struct.GPR* %2653, i32 0, i32 15
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %RBP.i910 = bitcast %union.anon* %2655 to i64*
  %2656 = load i64, i64* %RBP.i910
  %2657 = sub i64 %2656, 16
  %2658 = load i64, i64* %PC.i908
  %2659 = add i64 %2658, 4
  store i64 %2659, i64* %PC.i908
  %2660 = inttoptr i64 %2657 to i64*
  %2661 = load i64, i64* %2660
  store i64 %2661, i64* %RAX.i909, align 8
  store %struct.Memory* %loadMem_418c2c, %struct.Memory** %MEMORY
  %loadMem_418c30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2663 = getelementptr inbounds %struct.GPR, %struct.GPR* %2662, i32 0, i32 33
  %2664 = getelementptr inbounds %struct.Reg, %struct.Reg* %2663, i32 0, i32 0
  %PC.i905 = bitcast %union.anon* %2664 to i64*
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2666 = getelementptr inbounds %struct.GPR, %struct.GPR* %2665, i32 0, i32 1
  %2667 = getelementptr inbounds %struct.Reg, %struct.Reg* %2666, i32 0, i32 0
  %RAX.i906 = bitcast %union.anon* %2667 to i64*
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2669 = getelementptr inbounds %struct.GPR, %struct.GPR* %2668, i32 0, i32 5
  %2670 = getelementptr inbounds %struct.Reg, %struct.Reg* %2669, i32 0, i32 0
  %RCX.i907 = bitcast %union.anon* %2670 to i64*
  %2671 = load i64, i64* %RAX.i906
  %2672 = add i64 %2671, 16
  %2673 = load i64, i64* %PC.i905
  %2674 = add i64 %2673, 3
  store i64 %2674, i64* %PC.i905
  %2675 = inttoptr i64 %2672 to i32*
  %2676 = load i32, i32* %2675
  %2677 = zext i32 %2676 to i64
  store i64 %2677, i64* %RCX.i907, align 8
  store %struct.Memory* %loadMem_418c30, %struct.Memory** %MEMORY
  %loadMem_418c33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2679 = getelementptr inbounds %struct.GPR, %struct.GPR* %2678, i32 0, i32 33
  %2680 = getelementptr inbounds %struct.Reg, %struct.Reg* %2679, i32 0, i32 0
  %PC.i902 = bitcast %union.anon* %2680 to i64*
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2682 = getelementptr inbounds %struct.GPR, %struct.GPR* %2681, i32 0, i32 1
  %2683 = getelementptr inbounds %struct.Reg, %struct.Reg* %2682, i32 0, i32 0
  %RAX.i903 = bitcast %union.anon* %2683 to i64*
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2685 = getelementptr inbounds %struct.GPR, %struct.GPR* %2684, i32 0, i32 15
  %2686 = getelementptr inbounds %struct.Reg, %struct.Reg* %2685, i32 0, i32 0
  %RBP.i904 = bitcast %union.anon* %2686 to i64*
  %2687 = load i64, i64* %RBP.i904
  %2688 = sub i64 %2687, 16
  %2689 = load i64, i64* %PC.i902
  %2690 = add i64 %2689, 4
  store i64 %2690, i64* %PC.i902
  %2691 = inttoptr i64 %2688 to i64*
  %2692 = load i64, i64* %2691
  store i64 %2692, i64* %RAX.i903, align 8
  store %struct.Memory* %loadMem_418c33, %struct.Memory** %MEMORY
  %loadMem_418c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2694 = getelementptr inbounds %struct.GPR, %struct.GPR* %2693, i32 0, i32 33
  %2695 = getelementptr inbounds %struct.Reg, %struct.Reg* %2694, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %2695 to i64*
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2697 = getelementptr inbounds %struct.GPR, %struct.GPR* %2696, i32 0, i32 1
  %2698 = getelementptr inbounds %struct.Reg, %struct.Reg* %2697, i32 0, i32 0
  %RAX.i900 = bitcast %union.anon* %2698 to i64*
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 5
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %RCX.i901 = bitcast %union.anon* %2701 to i64*
  %2702 = load i64, i64* %RCX.i901
  %2703 = load i64, i64* %RAX.i900
  %2704 = add i64 %2703, 8
  %2705 = load i64, i64* %PC.i899
  %2706 = add i64 %2705, 3
  store i64 %2706, i64* %PC.i899
  %2707 = trunc i64 %2702 to i32
  %2708 = inttoptr i64 %2704 to i32*
  %2709 = load i32, i32* %2708
  %2710 = sub i32 %2707, %2709
  %2711 = zext i32 %2710 to i64
  store i64 %2711, i64* %RCX.i901, align 8
  %2712 = icmp ult i32 %2707, %2709
  %2713 = zext i1 %2712 to i8
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2713, i8* %2714, align 1
  %2715 = and i32 %2710, 255
  %2716 = call i32 @llvm.ctpop.i32(i32 %2715)
  %2717 = trunc i32 %2716 to i8
  %2718 = and i8 %2717, 1
  %2719 = xor i8 %2718, 1
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2719, i8* %2720, align 1
  %2721 = xor i32 %2709, %2707
  %2722 = xor i32 %2721, %2710
  %2723 = lshr i32 %2722, 4
  %2724 = trunc i32 %2723 to i8
  %2725 = and i8 %2724, 1
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2725, i8* %2726, align 1
  %2727 = icmp eq i32 %2710, 0
  %2728 = zext i1 %2727 to i8
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2728, i8* %2729, align 1
  %2730 = lshr i32 %2710, 31
  %2731 = trunc i32 %2730 to i8
  %2732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2731, i8* %2732, align 1
  %2733 = lshr i32 %2707, 31
  %2734 = lshr i32 %2709, 31
  %2735 = xor i32 %2734, %2733
  %2736 = xor i32 %2730, %2733
  %2737 = add i32 %2736, %2735
  %2738 = icmp eq i32 %2737, 2
  %2739 = zext i1 %2738 to i8
  %2740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2739, i8* %2740, align 1
  store %struct.Memory* %loadMem_418c37, %struct.Memory** %MEMORY
  %loadMem_418c3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2742 = getelementptr inbounds %struct.GPR, %struct.GPR* %2741, i32 0, i32 33
  %2743 = getelementptr inbounds %struct.Reg, %struct.Reg* %2742, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %2743 to i64*
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2745 = getelementptr inbounds %struct.GPR, %struct.GPR* %2744, i32 0, i32 5
  %2746 = getelementptr inbounds %struct.Reg, %struct.Reg* %2745, i32 0, i32 0
  %ECX.i897 = bitcast %union.anon* %2746 to i32*
  %2747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2748 = getelementptr inbounds %struct.GPR, %struct.GPR* %2747, i32 0, i32 15
  %2749 = getelementptr inbounds %struct.Reg, %struct.Reg* %2748, i32 0, i32 0
  %RBP.i898 = bitcast %union.anon* %2749 to i64*
  %2750 = load i64, i64* %RBP.i898
  %2751 = sub i64 %2750, 32
  %2752 = load i32, i32* %ECX.i897
  %2753 = zext i32 %2752 to i64
  %2754 = load i64, i64* %PC.i896
  %2755 = add i64 %2754, 3
  store i64 %2755, i64* %PC.i896
  %2756 = inttoptr i64 %2751 to i32*
  store i32 %2752, i32* %2756
  store %struct.Memory* %loadMem_418c3a, %struct.Memory** %MEMORY
  br label %block_.L_418c3d

block_.L_418c3d:                                  ; preds = %block_418c55, %block_.L_418c22
  %loadMem_418c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2758 = getelementptr inbounds %struct.GPR, %struct.GPR* %2757, i32 0, i32 33
  %2759 = getelementptr inbounds %struct.Reg, %struct.Reg* %2758, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %2759 to i64*
  %2760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2761 = getelementptr inbounds %struct.GPR, %struct.GPR* %2760, i32 0, i32 1
  %2762 = getelementptr inbounds %struct.Reg, %struct.Reg* %2761, i32 0, i32 0
  %RAX.i894 = bitcast %union.anon* %2762 to i64*
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2764 = getelementptr inbounds %struct.GPR, %struct.GPR* %2763, i32 0, i32 15
  %2765 = getelementptr inbounds %struct.Reg, %struct.Reg* %2764, i32 0, i32 0
  %RBP.i895 = bitcast %union.anon* %2765 to i64*
  %2766 = load i64, i64* %RBP.i895
  %2767 = sub i64 %2766, 32
  %2768 = load i64, i64* %PC.i893
  %2769 = add i64 %2768, 3
  store i64 %2769, i64* %PC.i893
  %2770 = inttoptr i64 %2767 to i32*
  %2771 = load i32, i32* %2770
  %2772 = zext i32 %2771 to i64
  store i64 %2772, i64* %RAX.i894, align 8
  store %struct.Memory* %loadMem_418c3d, %struct.Memory** %MEMORY
  %loadMem_418c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2774 = getelementptr inbounds %struct.GPR, %struct.GPR* %2773, i32 0, i32 33
  %2775 = getelementptr inbounds %struct.Reg, %struct.Reg* %2774, i32 0, i32 0
  %PC.i890 = bitcast %union.anon* %2775 to i64*
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2777 = getelementptr inbounds %struct.GPR, %struct.GPR* %2776, i32 0, i32 5
  %2778 = getelementptr inbounds %struct.Reg, %struct.Reg* %2777, i32 0, i32 0
  %RCX.i891 = bitcast %union.anon* %2778 to i64*
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2780 = getelementptr inbounds %struct.GPR, %struct.GPR* %2779, i32 0, i32 15
  %2781 = getelementptr inbounds %struct.Reg, %struct.Reg* %2780, i32 0, i32 0
  %RBP.i892 = bitcast %union.anon* %2781 to i64*
  %2782 = load i64, i64* %RBP.i892
  %2783 = sub i64 %2782, 144
  %2784 = load i64, i64* %PC.i890
  %2785 = add i64 %2784, 6
  store i64 %2785, i64* %PC.i890
  %2786 = inttoptr i64 %2783 to i32*
  %2787 = load i32, i32* %2786
  %2788 = zext i32 %2787 to i64
  store i64 %2788, i64* %RCX.i891, align 8
  store %struct.Memory* %loadMem_418c40, %struct.Memory** %MEMORY
  %loadMem_418c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2790 = getelementptr inbounds %struct.GPR, %struct.GPR* %2789, i32 0, i32 33
  %2791 = getelementptr inbounds %struct.Reg, %struct.Reg* %2790, i32 0, i32 0
  %PC.i887 = bitcast %union.anon* %2791 to i64*
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2793 = getelementptr inbounds %struct.GPR, %struct.GPR* %2792, i32 0, i32 7
  %2794 = getelementptr inbounds %struct.Reg, %struct.Reg* %2793, i32 0, i32 0
  %RDX.i888 = bitcast %union.anon* %2794 to i64*
  %2795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2796 = getelementptr inbounds %struct.GPR, %struct.GPR* %2795, i32 0, i32 15
  %2797 = getelementptr inbounds %struct.Reg, %struct.Reg* %2796, i32 0, i32 0
  %RBP.i889 = bitcast %union.anon* %2797 to i64*
  %2798 = load i64, i64* %RBP.i889
  %2799 = sub i64 %2798, 16
  %2800 = load i64, i64* %PC.i887
  %2801 = add i64 %2800, 4
  store i64 %2801, i64* %PC.i887
  %2802 = inttoptr i64 %2799 to i64*
  %2803 = load i64, i64* %2802
  store i64 %2803, i64* %RDX.i888, align 8
  store %struct.Memory* %loadMem_418c46, %struct.Memory** %MEMORY
  %loadMem_418c4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2805 = getelementptr inbounds %struct.GPR, %struct.GPR* %2804, i32 0, i32 33
  %2806 = getelementptr inbounds %struct.Reg, %struct.Reg* %2805, i32 0, i32 0
  %PC.i884 = bitcast %union.anon* %2806 to i64*
  %2807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2808 = getelementptr inbounds %struct.GPR, %struct.GPR* %2807, i32 0, i32 5
  %2809 = getelementptr inbounds %struct.Reg, %struct.Reg* %2808, i32 0, i32 0
  %RCX.i885 = bitcast %union.anon* %2809 to i64*
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2811 = getelementptr inbounds %struct.GPR, %struct.GPR* %2810, i32 0, i32 7
  %2812 = getelementptr inbounds %struct.Reg, %struct.Reg* %2811, i32 0, i32 0
  %RDX.i886 = bitcast %union.anon* %2812 to i64*
  %2813 = load i64, i64* %RCX.i885
  %2814 = load i64, i64* %RDX.i886
  %2815 = add i64 %2814, 8
  %2816 = load i64, i64* %PC.i884
  %2817 = add i64 %2816, 3
  store i64 %2817, i64* %PC.i884
  %2818 = trunc i64 %2813 to i32
  %2819 = inttoptr i64 %2815 to i32*
  %2820 = load i32, i32* %2819
  %2821 = sub i32 %2818, %2820
  %2822 = zext i32 %2821 to i64
  store i64 %2822, i64* %RCX.i885, align 8
  %2823 = icmp ult i32 %2818, %2820
  %2824 = zext i1 %2823 to i8
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2824, i8* %2825, align 1
  %2826 = and i32 %2821, 255
  %2827 = call i32 @llvm.ctpop.i32(i32 %2826)
  %2828 = trunc i32 %2827 to i8
  %2829 = and i8 %2828, 1
  %2830 = xor i8 %2829, 1
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2830, i8* %2831, align 1
  %2832 = xor i32 %2820, %2818
  %2833 = xor i32 %2832, %2821
  %2834 = lshr i32 %2833, 4
  %2835 = trunc i32 %2834 to i8
  %2836 = and i8 %2835, 1
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2836, i8* %2837, align 1
  %2838 = icmp eq i32 %2821, 0
  %2839 = zext i1 %2838 to i8
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2839, i8* %2840, align 1
  %2841 = lshr i32 %2821, 31
  %2842 = trunc i32 %2841 to i8
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2842, i8* %2843, align 1
  %2844 = lshr i32 %2818, 31
  %2845 = lshr i32 %2820, 31
  %2846 = xor i32 %2845, %2844
  %2847 = xor i32 %2841, %2844
  %2848 = add i32 %2847, %2846
  %2849 = icmp eq i32 %2848, 2
  %2850 = zext i1 %2849 to i8
  %2851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2850, i8* %2851, align 1
  store %struct.Memory* %loadMem_418c4a, %struct.Memory** %MEMORY
  %loadMem_418c4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2853 = getelementptr inbounds %struct.GPR, %struct.GPR* %2852, i32 0, i32 33
  %2854 = getelementptr inbounds %struct.Reg, %struct.Reg* %2853, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %2854 to i64*
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2856 = getelementptr inbounds %struct.GPR, %struct.GPR* %2855, i32 0, i32 1
  %2857 = getelementptr inbounds %struct.Reg, %struct.Reg* %2856, i32 0, i32 0
  %EAX.i882 = bitcast %union.anon* %2857 to i32*
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2859 = getelementptr inbounds %struct.GPR, %struct.GPR* %2858, i32 0, i32 5
  %2860 = getelementptr inbounds %struct.Reg, %struct.Reg* %2859, i32 0, i32 0
  %ECX.i883 = bitcast %union.anon* %2860 to i32*
  %2861 = load i32, i32* %EAX.i882
  %2862 = zext i32 %2861 to i64
  %2863 = load i32, i32* %ECX.i883
  %2864 = zext i32 %2863 to i64
  %2865 = load i64, i64* %PC.i881
  %2866 = add i64 %2865, 2
  store i64 %2866, i64* %PC.i881
  %2867 = sub i32 %2861, %2863
  %2868 = icmp ult i32 %2861, %2863
  %2869 = zext i1 %2868 to i8
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2869, i8* %2870, align 1
  %2871 = and i32 %2867, 255
  %2872 = call i32 @llvm.ctpop.i32(i32 %2871)
  %2873 = trunc i32 %2872 to i8
  %2874 = and i8 %2873, 1
  %2875 = xor i8 %2874, 1
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2875, i8* %2876, align 1
  %2877 = xor i64 %2864, %2862
  %2878 = trunc i64 %2877 to i32
  %2879 = xor i32 %2878, %2867
  %2880 = lshr i32 %2879, 4
  %2881 = trunc i32 %2880 to i8
  %2882 = and i8 %2881, 1
  %2883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2882, i8* %2883, align 1
  %2884 = icmp eq i32 %2867, 0
  %2885 = zext i1 %2884 to i8
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2885, i8* %2886, align 1
  %2887 = lshr i32 %2867, 31
  %2888 = trunc i32 %2887 to i8
  %2889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2888, i8* %2889, align 1
  %2890 = lshr i32 %2861, 31
  %2891 = lshr i32 %2863, 31
  %2892 = xor i32 %2891, %2890
  %2893 = xor i32 %2887, %2890
  %2894 = add i32 %2893, %2892
  %2895 = icmp eq i32 %2894, 2
  %2896 = zext i1 %2895 to i8
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2896, i8* %2897, align 1
  store %struct.Memory* %loadMem_418c4d, %struct.Memory** %MEMORY
  %loadMem_418c4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2899 = getelementptr inbounds %struct.GPR, %struct.GPR* %2898, i32 0, i32 33
  %2900 = getelementptr inbounds %struct.Reg, %struct.Reg* %2899, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %2900 to i64*
  %2901 = load i64, i64* %PC.i880
  %2902 = add i64 %2901, 46
  %2903 = load i64, i64* %PC.i880
  %2904 = add i64 %2903, 6
  %2905 = load i64, i64* %PC.i880
  %2906 = add i64 %2905, 6
  store i64 %2906, i64* %PC.i880
  %2907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2908 = load i8, i8* %2907, align 1
  %2909 = icmp ne i8 %2908, 0
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2911 = load i8, i8* %2910, align 1
  %2912 = icmp ne i8 %2911, 0
  %2913 = xor i1 %2909, %2912
  %2914 = zext i1 %2913 to i8
  store i8 %2914, i8* %BRANCH_TAKEN, align 1
  %2915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2916 = select i1 %2913, i64 %2902, i64 %2904
  store i64 %2916, i64* %2915, align 8
  store %struct.Memory* %loadMem_418c4f, %struct.Memory** %MEMORY
  %loadBr_418c4f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418c4f = icmp eq i8 %loadBr_418c4f, 1
  br i1 %cmpBr_418c4f, label %block_.L_418c7d, label %block_418c55

block_418c55:                                     ; preds = %block_.L_418c3d
  %loadMem_418c55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 33
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %2919 to i64*
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2921 = getelementptr inbounds %struct.GPR, %struct.GPR* %2920, i32 0, i32 1
  %2922 = getelementptr inbounds %struct.Reg, %struct.Reg* %2921, i32 0, i32 0
  %RAX.i878 = bitcast %union.anon* %2922 to i64*
  %2923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2924 = getelementptr inbounds %struct.GPR, %struct.GPR* %2923, i32 0, i32 15
  %2925 = getelementptr inbounds %struct.Reg, %struct.Reg* %2924, i32 0, i32 0
  %RBP.i879 = bitcast %union.anon* %2925 to i64*
  %2926 = load i64, i64* %RBP.i879
  %2927 = sub i64 %2926, 16
  %2928 = load i64, i64* %PC.i877
  %2929 = add i64 %2928, 4
  store i64 %2929, i64* %PC.i877
  %2930 = inttoptr i64 %2927 to i64*
  %2931 = load i64, i64* %2930
  store i64 %2931, i64* %RAX.i878, align 8
  store %struct.Memory* %loadMem_418c55, %struct.Memory** %MEMORY
  %loadMem_418c59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2933 = getelementptr inbounds %struct.GPR, %struct.GPR* %2932, i32 0, i32 33
  %2934 = getelementptr inbounds %struct.Reg, %struct.Reg* %2933, i32 0, i32 0
  %PC.i875 = bitcast %union.anon* %2934 to i64*
  %2935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2936 = getelementptr inbounds %struct.GPR, %struct.GPR* %2935, i32 0, i32 1
  %2937 = getelementptr inbounds %struct.Reg, %struct.Reg* %2936, i32 0, i32 0
  %RAX.i876 = bitcast %union.anon* %2937 to i64*
  %2938 = load i64, i64* %RAX.i876
  %2939 = load i64, i64* %PC.i875
  %2940 = add i64 %2939, 3
  store i64 %2940, i64* %PC.i875
  %2941 = inttoptr i64 %2938 to i64*
  %2942 = load i64, i64* %2941
  store i64 %2942, i64* %RAX.i876, align 8
  store %struct.Memory* %loadMem_418c59, %struct.Memory** %MEMORY
  %loadMem_418c5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2944 = getelementptr inbounds %struct.GPR, %struct.GPR* %2943, i32 0, i32 33
  %2945 = getelementptr inbounds %struct.Reg, %struct.Reg* %2944, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %2945 to i64*
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2947 = getelementptr inbounds %struct.GPR, %struct.GPR* %2946, i32 0, i32 5
  %2948 = getelementptr inbounds %struct.Reg, %struct.Reg* %2947, i32 0, i32 0
  %RCX.i873 = bitcast %union.anon* %2948 to i64*
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 15
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %RBP.i874 = bitcast %union.anon* %2951 to i64*
  %2952 = load i64, i64* %RBP.i874
  %2953 = sub i64 %2952, 32
  %2954 = load i64, i64* %PC.i872
  %2955 = add i64 %2954, 4
  store i64 %2955, i64* %PC.i872
  %2956 = inttoptr i64 %2953 to i32*
  %2957 = load i32, i32* %2956
  %2958 = sext i32 %2957 to i64
  store i64 %2958, i64* %RCX.i873, align 8
  store %struct.Memory* %loadMem_418c5c, %struct.Memory** %MEMORY
  %loadMem_418c60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2960 = getelementptr inbounds %struct.GPR, %struct.GPR* %2959, i32 0, i32 33
  %2961 = getelementptr inbounds %struct.Reg, %struct.Reg* %2960, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %2961 to i64*
  %2962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2963 = getelementptr inbounds %struct.GPR, %struct.GPR* %2962, i32 0, i32 1
  %2964 = getelementptr inbounds %struct.Reg, %struct.Reg* %2963, i32 0, i32 0
  %RAX.i869 = bitcast %union.anon* %2964 to i64*
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 5
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %RCX.i870 = bitcast %union.anon* %2967 to i64*
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2969 = getelementptr inbounds %struct.GPR, %struct.GPR* %2968, i32 0, i32 7
  %2970 = getelementptr inbounds %struct.Reg, %struct.Reg* %2969, i32 0, i32 0
  %RDX.i871 = bitcast %union.anon* %2970 to i64*
  %2971 = load i64, i64* %RAX.i869
  %2972 = load i64, i64* %RCX.i870
  %2973 = mul i64 %2972, 4
  %2974 = add i64 %2973, %2971
  %2975 = load i64, i64* %PC.i868
  %2976 = add i64 %2975, 3
  store i64 %2976, i64* %PC.i868
  %2977 = inttoptr i64 %2974 to i32*
  %2978 = load i32, i32* %2977
  %2979 = zext i32 %2978 to i64
  store i64 %2979, i64* %RDX.i871, align 8
  store %struct.Memory* %loadMem_418c60, %struct.Memory** %MEMORY
  %loadMem_418c63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2981 = getelementptr inbounds %struct.GPR, %struct.GPR* %2980, i32 0, i32 33
  %2982 = getelementptr inbounds %struct.Reg, %struct.Reg* %2981, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %2982 to i64*
  %2983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2984 = getelementptr inbounds %struct.GPR, %struct.GPR* %2983, i32 0, i32 7
  %2985 = getelementptr inbounds %struct.Reg, %struct.Reg* %2984, i32 0, i32 0
  %RDX.i866 = bitcast %union.anon* %2985 to i64*
  %2986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2987 = getelementptr inbounds %struct.GPR, %struct.GPR* %2986, i32 0, i32 15
  %2988 = getelementptr inbounds %struct.Reg, %struct.Reg* %2987, i32 0, i32 0
  %RBP.i867 = bitcast %union.anon* %2988 to i64*
  %2989 = load i64, i64* %RDX.i866
  %2990 = load i64, i64* %RBP.i867
  %2991 = sub i64 %2990, 148
  %2992 = load i64, i64* %PC.i865
  %2993 = add i64 %2992, 6
  store i64 %2993, i64* %PC.i865
  %2994 = trunc i64 %2989 to i32
  %2995 = inttoptr i64 %2991 to i32*
  %2996 = load i32, i32* %2995
  %2997 = add i32 %2996, %2994
  %2998 = zext i32 %2997 to i64
  store i64 %2998, i64* %RDX.i866, align 8
  %2999 = icmp ult i32 %2997, %2994
  %3000 = icmp ult i32 %2997, %2996
  %3001 = or i1 %2999, %3000
  %3002 = zext i1 %3001 to i8
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3002, i8* %3003, align 1
  %3004 = and i32 %2997, 255
  %3005 = call i32 @llvm.ctpop.i32(i32 %3004)
  %3006 = trunc i32 %3005 to i8
  %3007 = and i8 %3006, 1
  %3008 = xor i8 %3007, 1
  %3009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3008, i8* %3009, align 1
  %3010 = xor i32 %2996, %2994
  %3011 = xor i32 %3010, %2997
  %3012 = lshr i32 %3011, 4
  %3013 = trunc i32 %3012 to i8
  %3014 = and i8 %3013, 1
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3014, i8* %3015, align 1
  %3016 = icmp eq i32 %2997, 0
  %3017 = zext i1 %3016 to i8
  %3018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3017, i8* %3018, align 1
  %3019 = lshr i32 %2997, 31
  %3020 = trunc i32 %3019 to i8
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3020, i8* %3021, align 1
  %3022 = lshr i32 %2994, 31
  %3023 = lshr i32 %2996, 31
  %3024 = xor i32 %3019, %3022
  %3025 = xor i32 %3019, %3023
  %3026 = add i32 %3024, %3025
  %3027 = icmp eq i32 %3026, 2
  %3028 = zext i1 %3027 to i8
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3028, i8* %3029, align 1
  store %struct.Memory* %loadMem_418c63, %struct.Memory** %MEMORY
  %loadMem_418c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3031 = getelementptr inbounds %struct.GPR, %struct.GPR* %3030, i32 0, i32 33
  %3032 = getelementptr inbounds %struct.Reg, %struct.Reg* %3031, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %3032 to i64*
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3034 = getelementptr inbounds %struct.GPR, %struct.GPR* %3033, i32 0, i32 7
  %3035 = getelementptr inbounds %struct.Reg, %struct.Reg* %3034, i32 0, i32 0
  %EDX.i863 = bitcast %union.anon* %3035 to i32*
  %3036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3037 = getelementptr inbounds %struct.GPR, %struct.GPR* %3036, i32 0, i32 15
  %3038 = getelementptr inbounds %struct.Reg, %struct.Reg* %3037, i32 0, i32 0
  %RBP.i864 = bitcast %union.anon* %3038 to i64*
  %3039 = load i64, i64* %RBP.i864
  %3040 = sub i64 %3039, 148
  %3041 = load i32, i32* %EDX.i863
  %3042 = zext i32 %3041 to i64
  %3043 = load i64, i64* %PC.i862
  %3044 = add i64 %3043, 6
  store i64 %3044, i64* %PC.i862
  %3045 = inttoptr i64 %3040 to i32*
  store i32 %3041, i32* %3045
  store %struct.Memory* %loadMem_418c69, %struct.Memory** %MEMORY
  %loadMem_418c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3047 = getelementptr inbounds %struct.GPR, %struct.GPR* %3046, i32 0, i32 33
  %3048 = getelementptr inbounds %struct.Reg, %struct.Reg* %3047, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %3048 to i64*
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3050 = getelementptr inbounds %struct.GPR, %struct.GPR* %3049, i32 0, i32 1
  %3051 = getelementptr inbounds %struct.Reg, %struct.Reg* %3050, i32 0, i32 0
  %RAX.i860 = bitcast %union.anon* %3051 to i64*
  %3052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3053 = getelementptr inbounds %struct.GPR, %struct.GPR* %3052, i32 0, i32 15
  %3054 = getelementptr inbounds %struct.Reg, %struct.Reg* %3053, i32 0, i32 0
  %RBP.i861 = bitcast %union.anon* %3054 to i64*
  %3055 = load i64, i64* %RBP.i861
  %3056 = sub i64 %3055, 32
  %3057 = load i64, i64* %PC.i859
  %3058 = add i64 %3057, 3
  store i64 %3058, i64* %PC.i859
  %3059 = inttoptr i64 %3056 to i32*
  %3060 = load i32, i32* %3059
  %3061 = zext i32 %3060 to i64
  store i64 %3061, i64* %RAX.i860, align 8
  store %struct.Memory* %loadMem_418c6f, %struct.Memory** %MEMORY
  %loadMem_418c72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3063 = getelementptr inbounds %struct.GPR, %struct.GPR* %3062, i32 0, i32 33
  %3064 = getelementptr inbounds %struct.Reg, %struct.Reg* %3063, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %3064 to i64*
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3066 = getelementptr inbounds %struct.GPR, %struct.GPR* %3065, i32 0, i32 1
  %3067 = getelementptr inbounds %struct.Reg, %struct.Reg* %3066, i32 0, i32 0
  %RAX.i858 = bitcast %union.anon* %3067 to i64*
  %3068 = load i64, i64* %RAX.i858
  %3069 = load i64, i64* %PC.i857
  %3070 = add i64 %3069, 3
  store i64 %3070, i64* %PC.i857
  %3071 = trunc i64 %3068 to i32
  %3072 = add i32 -1, %3071
  %3073 = zext i32 %3072 to i64
  store i64 %3073, i64* %RAX.i858, align 8
  %3074 = icmp ult i32 %3072, %3071
  %3075 = icmp ult i32 %3072, -1
  %3076 = or i1 %3074, %3075
  %3077 = zext i1 %3076 to i8
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3077, i8* %3078, align 1
  %3079 = and i32 %3072, 255
  %3080 = call i32 @llvm.ctpop.i32(i32 %3079)
  %3081 = trunc i32 %3080 to i8
  %3082 = and i8 %3081, 1
  %3083 = xor i8 %3082, 1
  %3084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3083, i8* %3084, align 1
  %3085 = xor i64 -1, %3068
  %3086 = trunc i64 %3085 to i32
  %3087 = xor i32 %3086, %3072
  %3088 = lshr i32 %3087, 4
  %3089 = trunc i32 %3088 to i8
  %3090 = and i8 %3089, 1
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3090, i8* %3091, align 1
  %3092 = icmp eq i32 %3072, 0
  %3093 = zext i1 %3092 to i8
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3093, i8* %3094, align 1
  %3095 = lshr i32 %3072, 31
  %3096 = trunc i32 %3095 to i8
  %3097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3096, i8* %3097, align 1
  %3098 = lshr i32 %3071, 31
  %3099 = xor i32 %3095, %3098
  %3100 = xor i32 %3095, 1
  %3101 = add i32 %3099, %3100
  %3102 = icmp eq i32 %3101, 2
  %3103 = zext i1 %3102 to i8
  %3104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3103, i8* %3104, align 1
  store %struct.Memory* %loadMem_418c72, %struct.Memory** %MEMORY
  %loadMem_418c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3106 = getelementptr inbounds %struct.GPR, %struct.GPR* %3105, i32 0, i32 33
  %3107 = getelementptr inbounds %struct.Reg, %struct.Reg* %3106, i32 0, i32 0
  %PC.i854 = bitcast %union.anon* %3107 to i64*
  %3108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3109 = getelementptr inbounds %struct.GPR, %struct.GPR* %3108, i32 0, i32 1
  %3110 = getelementptr inbounds %struct.Reg, %struct.Reg* %3109, i32 0, i32 0
  %EAX.i855 = bitcast %union.anon* %3110 to i32*
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3112 = getelementptr inbounds %struct.GPR, %struct.GPR* %3111, i32 0, i32 15
  %3113 = getelementptr inbounds %struct.Reg, %struct.Reg* %3112, i32 0, i32 0
  %RBP.i856 = bitcast %union.anon* %3113 to i64*
  %3114 = load i64, i64* %RBP.i856
  %3115 = sub i64 %3114, 32
  %3116 = load i32, i32* %EAX.i855
  %3117 = zext i32 %3116 to i64
  %3118 = load i64, i64* %PC.i854
  %3119 = add i64 %3118, 3
  store i64 %3119, i64* %PC.i854
  %3120 = inttoptr i64 %3115 to i32*
  store i32 %3116, i32* %3120
  store %struct.Memory* %loadMem_418c75, %struct.Memory** %MEMORY
  %loadMem_418c78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3122 = getelementptr inbounds %struct.GPR, %struct.GPR* %3121, i32 0, i32 33
  %3123 = getelementptr inbounds %struct.Reg, %struct.Reg* %3122, i32 0, i32 0
  %PC.i853 = bitcast %union.anon* %3123 to i64*
  %3124 = load i64, i64* %PC.i853
  %3125 = add i64 %3124, -59
  %3126 = load i64, i64* %PC.i853
  %3127 = add i64 %3126, 5
  store i64 %3127, i64* %PC.i853
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3125, i64* %3128, align 8
  store %struct.Memory* %loadMem_418c78, %struct.Memory** %MEMORY
  br label %block_.L_418c3d

block_.L_418c7d:                                  ; preds = %block_.L_418c3d
  %loadMem_418c7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3130 = getelementptr inbounds %struct.GPR, %struct.GPR* %3129, i32 0, i32 33
  %3131 = getelementptr inbounds %struct.Reg, %struct.Reg* %3130, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %3131 to i64*
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3133 = getelementptr inbounds %struct.GPR, %struct.GPR* %3132, i32 0, i32 1
  %3134 = getelementptr inbounds %struct.Reg, %struct.Reg* %3133, i32 0, i32 0
  %RAX.i851 = bitcast %union.anon* %3134 to i64*
  %3135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3136 = getelementptr inbounds %struct.GPR, %struct.GPR* %3135, i32 0, i32 15
  %3137 = getelementptr inbounds %struct.Reg, %struct.Reg* %3136, i32 0, i32 0
  %RBP.i852 = bitcast %union.anon* %3137 to i64*
  %3138 = load i64, i64* %RBP.i852
  %3139 = sub i64 %3138, 140
  %3140 = load i64, i64* %PC.i850
  %3141 = add i64 %3140, 6
  store i64 %3141, i64* %PC.i850
  %3142 = inttoptr i64 %3139 to i32*
  %3143 = load i32, i32* %3142
  %3144 = zext i32 %3143 to i64
  store i64 %3144, i64* %RAX.i851, align 8
  store %struct.Memory* %loadMem_418c7d, %struct.Memory** %MEMORY
  %loadMem_418c83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3146 = getelementptr inbounds %struct.GPR, %struct.GPR* %3145, i32 0, i32 33
  %3147 = getelementptr inbounds %struct.Reg, %struct.Reg* %3146, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %3147 to i64*
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3149 = getelementptr inbounds %struct.GPR, %struct.GPR* %3148, i32 0, i32 1
  %3150 = getelementptr inbounds %struct.Reg, %struct.Reg* %3149, i32 0, i32 0
  %EAX.i848 = bitcast %union.anon* %3150 to i32*
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 15
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %RBP.i849 = bitcast %union.anon* %3153 to i64*
  %3154 = load i32, i32* %EAX.i848
  %3155 = zext i32 %3154 to i64
  %3156 = load i64, i64* %RBP.i849
  %3157 = sub i64 %3156, 24
  %3158 = load i64, i64* %PC.i847
  %3159 = add i64 %3158, 3
  store i64 %3159, i64* %PC.i847
  %3160 = inttoptr i64 %3157 to i32*
  %3161 = load i32, i32* %3160
  %3162 = sub i32 %3154, %3161
  %3163 = icmp ult i32 %3154, %3161
  %3164 = zext i1 %3163 to i8
  %3165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3164, i8* %3165, align 1
  %3166 = and i32 %3162, 255
  %3167 = call i32 @llvm.ctpop.i32(i32 %3166)
  %3168 = trunc i32 %3167 to i8
  %3169 = and i8 %3168, 1
  %3170 = xor i8 %3169, 1
  %3171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3170, i8* %3171, align 1
  %3172 = xor i32 %3161, %3154
  %3173 = xor i32 %3172, %3162
  %3174 = lshr i32 %3173, 4
  %3175 = trunc i32 %3174 to i8
  %3176 = and i8 %3175, 1
  %3177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3176, i8* %3177, align 1
  %3178 = icmp eq i32 %3162, 0
  %3179 = zext i1 %3178 to i8
  %3180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3179, i8* %3180, align 1
  %3181 = lshr i32 %3162, 31
  %3182 = trunc i32 %3181 to i8
  %3183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3182, i8* %3183, align 1
  %3184 = lshr i32 %3154, 31
  %3185 = lshr i32 %3161, 31
  %3186 = xor i32 %3185, %3184
  %3187 = xor i32 %3181, %3184
  %3188 = add i32 %3187, %3186
  %3189 = icmp eq i32 %3188, 2
  %3190 = zext i1 %3189 to i8
  %3191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3190, i8* %3191, align 1
  store %struct.Memory* %loadMem_418c83, %struct.Memory** %MEMORY
  %loadMem_418c86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3193 = getelementptr inbounds %struct.GPR, %struct.GPR* %3192, i32 0, i32 33
  %3194 = getelementptr inbounds %struct.Reg, %struct.Reg* %3193, i32 0, i32 0
  %PC.i846 = bitcast %union.anon* %3194 to i64*
  %3195 = load i64, i64* %PC.i846
  %3196 = add i64 %3195, 15
  %3197 = load i64, i64* %PC.i846
  %3198 = add i64 %3197, 6
  %3199 = load i64, i64* %PC.i846
  %3200 = add i64 %3199, 6
  store i64 %3200, i64* %PC.i846
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3202 = load i8, i8* %3201, align 1
  %3203 = icmp ne i8 %3202, 0
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3205 = load i8, i8* %3204, align 1
  %3206 = icmp ne i8 %3205, 0
  %3207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3208 = load i8, i8* %3207, align 1
  %3209 = icmp ne i8 %3208, 0
  %3210 = xor i1 %3206, %3209
  %3211 = or i1 %3203, %3210
  %3212 = zext i1 %3211 to i8
  store i8 %3212, i8* %BRANCH_TAKEN, align 1
  %3213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3214 = select i1 %3211, i64 %3196, i64 %3198
  store i64 %3214, i64* %3213, align 8
  store %struct.Memory* %loadMem_418c86, %struct.Memory** %MEMORY
  %loadBr_418c86 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418c86 = icmp eq i8 %loadBr_418c86, 1
  br i1 %cmpBr_418c86, label %block_.L_418c95, label %block_418c8c

block_418c8c:                                     ; preds = %block_.L_418c7d
  %loadMem_418c8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3216 = getelementptr inbounds %struct.GPR, %struct.GPR* %3215, i32 0, i32 33
  %3217 = getelementptr inbounds %struct.Reg, %struct.Reg* %3216, i32 0, i32 0
  %PC.i843 = bitcast %union.anon* %3217 to i64*
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3219 = getelementptr inbounds %struct.GPR, %struct.GPR* %3218, i32 0, i32 1
  %3220 = getelementptr inbounds %struct.Reg, %struct.Reg* %3219, i32 0, i32 0
  %RAX.i844 = bitcast %union.anon* %3220 to i64*
  %3221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3222 = getelementptr inbounds %struct.GPR, %struct.GPR* %3221, i32 0, i32 15
  %3223 = getelementptr inbounds %struct.Reg, %struct.Reg* %3222, i32 0, i32 0
  %RBP.i845 = bitcast %union.anon* %3223 to i64*
  %3224 = load i64, i64* %RBP.i845
  %3225 = sub i64 %3224, 140
  %3226 = load i64, i64* %PC.i843
  %3227 = add i64 %3226, 6
  store i64 %3227, i64* %PC.i843
  %3228 = inttoptr i64 %3225 to i32*
  %3229 = load i32, i32* %3228
  %3230 = zext i32 %3229 to i64
  store i64 %3230, i64* %RAX.i844, align 8
  store %struct.Memory* %loadMem_418c8c, %struct.Memory** %MEMORY
  %loadMem_418c92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3232 = getelementptr inbounds %struct.GPR, %struct.GPR* %3231, i32 0, i32 33
  %3233 = getelementptr inbounds %struct.Reg, %struct.Reg* %3232, i32 0, i32 0
  %PC.i840 = bitcast %union.anon* %3233 to i64*
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3235 = getelementptr inbounds %struct.GPR, %struct.GPR* %3234, i32 0, i32 1
  %3236 = getelementptr inbounds %struct.Reg, %struct.Reg* %3235, i32 0, i32 0
  %EAX.i841 = bitcast %union.anon* %3236 to i32*
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3238 = getelementptr inbounds %struct.GPR, %struct.GPR* %3237, i32 0, i32 15
  %3239 = getelementptr inbounds %struct.Reg, %struct.Reg* %3238, i32 0, i32 0
  %RBP.i842 = bitcast %union.anon* %3239 to i64*
  %3240 = load i64, i64* %RBP.i842
  %3241 = sub i64 %3240, 24
  %3242 = load i32, i32* %EAX.i841
  %3243 = zext i32 %3242 to i64
  %3244 = load i64, i64* %PC.i840
  %3245 = add i64 %3244, 3
  store i64 %3245, i64* %PC.i840
  %3246 = inttoptr i64 %3241 to i32*
  store i32 %3242, i32* %3246
  store %struct.Memory* %loadMem_418c92, %struct.Memory** %MEMORY
  br label %block_.L_418c95

block_.L_418c95:                                  ; preds = %block_418c8c, %block_.L_418c7d
  %loadMem_418c95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3248 = getelementptr inbounds %struct.GPR, %struct.GPR* %3247, i32 0, i32 33
  %3249 = getelementptr inbounds %struct.Reg, %struct.Reg* %3248, i32 0, i32 0
  %PC.i837 = bitcast %union.anon* %3249 to i64*
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3251 = getelementptr inbounds %struct.GPR, %struct.GPR* %3250, i32 0, i32 1
  %3252 = getelementptr inbounds %struct.Reg, %struct.Reg* %3251, i32 0, i32 0
  %RAX.i838 = bitcast %union.anon* %3252 to i64*
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3254 = getelementptr inbounds %struct.GPR, %struct.GPR* %3253, i32 0, i32 15
  %3255 = getelementptr inbounds %struct.Reg, %struct.Reg* %3254, i32 0, i32 0
  %RBP.i839 = bitcast %union.anon* %3255 to i64*
  %3256 = load i64, i64* %RBP.i839
  %3257 = sub i64 %3256, 148
  %3258 = load i64, i64* %PC.i837
  %3259 = add i64 %3258, 6
  store i64 %3259, i64* %PC.i837
  %3260 = inttoptr i64 %3257 to i32*
  %3261 = load i32, i32* %3260
  %3262 = zext i32 %3261 to i64
  store i64 %3262, i64* %RAX.i838, align 8
  store %struct.Memory* %loadMem_418c95, %struct.Memory** %MEMORY
  %loadMem_418c9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3264 = getelementptr inbounds %struct.GPR, %struct.GPR* %3263, i32 0, i32 33
  %3265 = getelementptr inbounds %struct.Reg, %struct.Reg* %3264, i32 0, i32 0
  %PC.i834 = bitcast %union.anon* %3265 to i64*
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3267 = getelementptr inbounds %struct.GPR, %struct.GPR* %3266, i32 0, i32 1
  %3268 = getelementptr inbounds %struct.Reg, %struct.Reg* %3267, i32 0, i32 0
  %EAX.i835 = bitcast %union.anon* %3268 to i32*
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3270 = getelementptr inbounds %struct.GPR, %struct.GPR* %3269, i32 0, i32 15
  %3271 = getelementptr inbounds %struct.Reg, %struct.Reg* %3270, i32 0, i32 0
  %RBP.i836 = bitcast %union.anon* %3271 to i64*
  %3272 = load i32, i32* %EAX.i835
  %3273 = zext i32 %3272 to i64
  %3274 = load i64, i64* %RBP.i836
  %3275 = sub i64 %3274, 24
  %3276 = load i64, i64* %PC.i834
  %3277 = add i64 %3276, 3
  store i64 %3277, i64* %PC.i834
  %3278 = inttoptr i64 %3275 to i32*
  %3279 = load i32, i32* %3278
  %3280 = sub i32 %3272, %3279
  %3281 = icmp ult i32 %3272, %3279
  %3282 = zext i1 %3281 to i8
  %3283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3282, i8* %3283, align 1
  %3284 = and i32 %3280, 255
  %3285 = call i32 @llvm.ctpop.i32(i32 %3284)
  %3286 = trunc i32 %3285 to i8
  %3287 = and i8 %3286, 1
  %3288 = xor i8 %3287, 1
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3288, i8* %3289, align 1
  %3290 = xor i32 %3279, %3272
  %3291 = xor i32 %3290, %3280
  %3292 = lshr i32 %3291, 4
  %3293 = trunc i32 %3292 to i8
  %3294 = and i8 %3293, 1
  %3295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3294, i8* %3295, align 1
  %3296 = icmp eq i32 %3280, 0
  %3297 = zext i1 %3296 to i8
  %3298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3297, i8* %3298, align 1
  %3299 = lshr i32 %3280, 31
  %3300 = trunc i32 %3299 to i8
  %3301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3300, i8* %3301, align 1
  %3302 = lshr i32 %3272, 31
  %3303 = lshr i32 %3279, 31
  %3304 = xor i32 %3303, %3302
  %3305 = xor i32 %3299, %3302
  %3306 = add i32 %3305, %3304
  %3307 = icmp eq i32 %3306, 2
  %3308 = zext i1 %3307 to i8
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3308, i8* %3309, align 1
  store %struct.Memory* %loadMem_418c9b, %struct.Memory** %MEMORY
  %loadMem_418c9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3311 = getelementptr inbounds %struct.GPR, %struct.GPR* %3310, i32 0, i32 33
  %3312 = getelementptr inbounds %struct.Reg, %struct.Reg* %3311, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %3312 to i64*
  %3313 = load i64, i64* %PC.i833
  %3314 = add i64 %3313, 15
  %3315 = load i64, i64* %PC.i833
  %3316 = add i64 %3315, 6
  %3317 = load i64, i64* %PC.i833
  %3318 = add i64 %3317, 6
  store i64 %3318, i64* %PC.i833
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3320 = load i8, i8* %3319, align 1
  %3321 = icmp ne i8 %3320, 0
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3323 = load i8, i8* %3322, align 1
  %3324 = icmp ne i8 %3323, 0
  %3325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3326 = load i8, i8* %3325, align 1
  %3327 = icmp ne i8 %3326, 0
  %3328 = xor i1 %3324, %3327
  %3329 = or i1 %3321, %3328
  %3330 = zext i1 %3329 to i8
  store i8 %3330, i8* %BRANCH_TAKEN, align 1
  %3331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3332 = select i1 %3329, i64 %3314, i64 %3316
  store i64 %3332, i64* %3331, align 8
  store %struct.Memory* %loadMem_418c9e, %struct.Memory** %MEMORY
  %loadBr_418c9e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418c9e = icmp eq i8 %loadBr_418c9e, 1
  br i1 %cmpBr_418c9e, label %block_.L_418cad, label %block_418ca4

block_418ca4:                                     ; preds = %block_.L_418c95
  %loadMem_418ca4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3334 = getelementptr inbounds %struct.GPR, %struct.GPR* %3333, i32 0, i32 33
  %3335 = getelementptr inbounds %struct.Reg, %struct.Reg* %3334, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %3335 to i64*
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3337 = getelementptr inbounds %struct.GPR, %struct.GPR* %3336, i32 0, i32 1
  %3338 = getelementptr inbounds %struct.Reg, %struct.Reg* %3337, i32 0, i32 0
  %RAX.i831 = bitcast %union.anon* %3338 to i64*
  %3339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3340 = getelementptr inbounds %struct.GPR, %struct.GPR* %3339, i32 0, i32 15
  %3341 = getelementptr inbounds %struct.Reg, %struct.Reg* %3340, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %3341 to i64*
  %3342 = load i64, i64* %RBP.i832
  %3343 = sub i64 %3342, 148
  %3344 = load i64, i64* %PC.i830
  %3345 = add i64 %3344, 6
  store i64 %3345, i64* %PC.i830
  %3346 = inttoptr i64 %3343 to i32*
  %3347 = load i32, i32* %3346
  %3348 = zext i32 %3347 to i64
  store i64 %3348, i64* %RAX.i831, align 8
  store %struct.Memory* %loadMem_418ca4, %struct.Memory** %MEMORY
  %loadMem_418caa = load %struct.Memory*, %struct.Memory** %MEMORY
  %3349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3350 = getelementptr inbounds %struct.GPR, %struct.GPR* %3349, i32 0, i32 33
  %3351 = getelementptr inbounds %struct.Reg, %struct.Reg* %3350, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %3351 to i64*
  %3352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3353 = getelementptr inbounds %struct.GPR, %struct.GPR* %3352, i32 0, i32 1
  %3354 = getelementptr inbounds %struct.Reg, %struct.Reg* %3353, i32 0, i32 0
  %EAX.i828 = bitcast %union.anon* %3354 to i32*
  %3355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3356 = getelementptr inbounds %struct.GPR, %struct.GPR* %3355, i32 0, i32 15
  %3357 = getelementptr inbounds %struct.Reg, %struct.Reg* %3356, i32 0, i32 0
  %RBP.i829 = bitcast %union.anon* %3357 to i64*
  %3358 = load i64, i64* %RBP.i829
  %3359 = sub i64 %3358, 24
  %3360 = load i32, i32* %EAX.i828
  %3361 = zext i32 %3360 to i64
  %3362 = load i64, i64* %PC.i827
  %3363 = add i64 %3362, 3
  store i64 %3363, i64* %PC.i827
  %3364 = inttoptr i64 %3359 to i32*
  store i32 %3360, i32* %3364
  store %struct.Memory* %loadMem_418caa, %struct.Memory** %MEMORY
  br label %block_.L_418cad

block_.L_418cad:                                  ; preds = %block_418ca4, %block_.L_418c95
  %loadMem_418cad = load %struct.Memory*, %struct.Memory** %MEMORY
  %3365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3366 = getelementptr inbounds %struct.GPR, %struct.GPR* %3365, i32 0, i32 33
  %3367 = getelementptr inbounds %struct.Reg, %struct.Reg* %3366, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %3367 to i64*
  %3368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3369 = getelementptr inbounds %struct.GPR, %struct.GPR* %3368, i32 0, i32 9
  %3370 = getelementptr inbounds %struct.Reg, %struct.Reg* %3369, i32 0, i32 0
  %RSI.i826 = bitcast %union.anon* %3370 to i64*
  %3371 = load i64, i64* %PC.i825
  %3372 = add i64 %3371, 10
  store i64 %3372, i64* %PC.i825
  store i64 ptrtoint (%G__0x456f7b_type* @G__0x456f7b to i64), i64* %RSI.i826, align 8
  store %struct.Memory* %loadMem_418cad, %struct.Memory** %MEMORY
  %loadMem_418cb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3374 = getelementptr inbounds %struct.GPR, %struct.GPR* %3373, i32 0, i32 33
  %3375 = getelementptr inbounds %struct.Reg, %struct.Reg* %3374, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %3375 to i64*
  %3376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3377 = getelementptr inbounds %struct.GPR, %struct.GPR* %3376, i32 0, i32 7
  %3378 = getelementptr inbounds %struct.Reg, %struct.Reg* %3377, i32 0, i32 0
  %RDX.i824 = bitcast %union.anon* %3378 to i64*
  %3379 = load i64, i64* %PC.i823
  %3380 = add i64 %3379, 10
  store i64 %3380, i64* %PC.i823
  store i64 ptrtoint (%G__0x456fa9_type* @G__0x456fa9 to i64), i64* %RDX.i824, align 8
  store %struct.Memory* %loadMem_418cb7, %struct.Memory** %MEMORY
  %loadMem_418cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3382 = getelementptr inbounds %struct.GPR, %struct.GPR* %3381, i32 0, i32 33
  %3383 = getelementptr inbounds %struct.Reg, %struct.Reg* %3382, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %3383 to i64*
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3385 = getelementptr inbounds %struct.GPR, %struct.GPR* %3384, i32 0, i32 5
  %3386 = getelementptr inbounds %struct.Reg, %struct.Reg* %3385, i32 0, i32 0
  %RCX.i822 = bitcast %union.anon* %3386 to i64*
  %3387 = load i64, i64* %PC.i821
  %3388 = add i64 %3387, 10
  store i64 %3388, i64* %PC.i821
  store i64 ptrtoint (%G__0x456faf_type* @G__0x456faf to i64), i64* %RCX.i822, align 8
  store %struct.Memory* %loadMem_418cc1, %struct.Memory** %MEMORY
  %loadMem_418ccb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3390 = getelementptr inbounds %struct.GPR, %struct.GPR* %3389, i32 0, i32 33
  %3391 = getelementptr inbounds %struct.Reg, %struct.Reg* %3390, i32 0, i32 0
  %PC.i819 = bitcast %union.anon* %3391 to i64*
  %3392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3393 = getelementptr inbounds %struct.GPR, %struct.GPR* %3392, i32 0, i32 17
  %3394 = getelementptr inbounds %struct.Reg, %struct.Reg* %3393, i32 0, i32 0
  %R8.i820 = bitcast %union.anon* %3394 to i64*
  %3395 = load i64, i64* %PC.i819
  %3396 = add i64 %3395, 10
  store i64 %3396, i64* %PC.i819
  store i64 ptrtoint (%G__0x458351_type* @G__0x458351 to i64), i64* %R8.i820, align 8
  store %struct.Memory* %loadMem_418ccb, %struct.Memory** %MEMORY
  %loadMem_418cd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3398 = getelementptr inbounds %struct.GPR, %struct.GPR* %3397, i32 0, i32 33
  %3399 = getelementptr inbounds %struct.Reg, %struct.Reg* %3398, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %3399 to i64*
  %3400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3401 = getelementptr inbounds %struct.GPR, %struct.GPR* %3400, i32 0, i32 1
  %3402 = getelementptr inbounds %struct.Reg, %struct.Reg* %3401, i32 0, i32 0
  %RAX.i818 = bitcast %union.anon* %3402 to i64*
  %3403 = load i64, i64* %PC.i817
  %3404 = add i64 %3403, 5
  store i64 %3404, i64* %PC.i817
  store i64 59, i64* %RAX.i818, align 8
  store %struct.Memory* %loadMem_418cd5, %struct.Memory** %MEMORY
  %loadMem_418cda = load %struct.Memory*, %struct.Memory** %MEMORY
  %3405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3406 = getelementptr inbounds %struct.GPR, %struct.GPR* %3405, i32 0, i32 33
  %3407 = getelementptr inbounds %struct.Reg, %struct.Reg* %3406, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %3407 to i64*
  %3408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3409 = getelementptr inbounds %struct.GPR, %struct.GPR* %3408, i32 0, i32 11
  %3410 = getelementptr inbounds %struct.Reg, %struct.Reg* %3409, i32 0, i32 0
  %RDI.i815 = bitcast %union.anon* %3410 to i64*
  %3411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3412 = getelementptr inbounds %struct.GPR, %struct.GPR* %3411, i32 0, i32 15
  %3413 = getelementptr inbounds %struct.Reg, %struct.Reg* %3412, i32 0, i32 0
  %RBP.i816 = bitcast %union.anon* %3413 to i64*
  %3414 = load i64, i64* %RBP.i816
  %3415 = sub i64 %3414, 24
  %3416 = load i64, i64* %PC.i814
  %3417 = add i64 %3416, 3
  store i64 %3417, i64* %PC.i814
  %3418 = inttoptr i64 %3415 to i32*
  %3419 = load i32, i32* %3418
  %3420 = zext i32 %3419 to i64
  store i64 %3420, i64* %RDI.i815, align 8
  store %struct.Memory* %loadMem_418cda, %struct.Memory** %MEMORY
  %loadMem_418cdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3422 = getelementptr inbounds %struct.GPR, %struct.GPR* %3421, i32 0, i32 33
  %3423 = getelementptr inbounds %struct.Reg, %struct.Reg* %3422, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %3423 to i64*
  %3424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3425 = getelementptr inbounds %struct.GPR, %struct.GPR* %3424, i32 0, i32 11
  %3426 = getelementptr inbounds %struct.Reg, %struct.Reg* %3425, i32 0, i32 0
  %RDI.i813 = bitcast %union.anon* %3426 to i64*
  %3427 = load i64, i64* %RDI.i813
  %3428 = load i64, i64* %PC.i812
  %3429 = add i64 %3428, 3
  store i64 %3429, i64* %PC.i812
  %3430 = trunc i64 %3427 to i32
  %3431 = sub i32 %3430, 1
  %3432 = zext i32 %3431 to i64
  store i64 %3432, i64* %RDI.i813, align 8
  %3433 = icmp ult i32 %3430, 1
  %3434 = zext i1 %3433 to i8
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3434, i8* %3435, align 1
  %3436 = and i32 %3431, 255
  %3437 = call i32 @llvm.ctpop.i32(i32 %3436)
  %3438 = trunc i32 %3437 to i8
  %3439 = and i8 %3438, 1
  %3440 = xor i8 %3439, 1
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3440, i8* %3441, align 1
  %3442 = xor i64 1, %3427
  %3443 = trunc i64 %3442 to i32
  %3444 = xor i32 %3443, %3431
  %3445 = lshr i32 %3444, 4
  %3446 = trunc i32 %3445 to i8
  %3447 = and i8 %3446, 1
  %3448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3447, i8* %3448, align 1
  %3449 = icmp eq i32 %3431, 0
  %3450 = zext i1 %3449 to i8
  %3451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3450, i8* %3451, align 1
  %3452 = lshr i32 %3431, 31
  %3453 = trunc i32 %3452 to i8
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3453, i8* %3454, align 1
  %3455 = lshr i32 %3430, 31
  %3456 = xor i32 %3452, %3455
  %3457 = add i32 %3456, %3455
  %3458 = icmp eq i32 %3457, 2
  %3459 = zext i1 %3458 to i8
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3459, i8* %3460, align 1
  store %struct.Memory* %loadMem_418cdd, %struct.Memory** %MEMORY
  %loadMem_418ce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3462 = getelementptr inbounds %struct.GPR, %struct.GPR* %3461, i32 0, i32 33
  %3463 = getelementptr inbounds %struct.Reg, %struct.Reg* %3462, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %3463 to i64*
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3465 = getelementptr inbounds %struct.GPR, %struct.GPR* %3464, i32 0, i32 1
  %3466 = getelementptr inbounds %struct.Reg, %struct.Reg* %3465, i32 0, i32 0
  %EAX.i810 = bitcast %union.anon* %3466 to i32*
  %3467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3468 = getelementptr inbounds %struct.GPR, %struct.GPR* %3467, i32 0, i32 15
  %3469 = getelementptr inbounds %struct.Reg, %struct.Reg* %3468, i32 0, i32 0
  %RBP.i811 = bitcast %union.anon* %3469 to i64*
  %3470 = load i64, i64* %RBP.i811
  %3471 = sub i64 %3470, 156
  %3472 = load i32, i32* %EAX.i810
  %3473 = zext i32 %3472 to i64
  %3474 = load i64, i64* %PC.i809
  %3475 = add i64 %3474, 6
  store i64 %3475, i64* %PC.i809
  %3476 = inttoptr i64 %3471 to i32*
  store i32 %3472, i32* %3476
  store %struct.Memory* %loadMem_418ce0, %struct.Memory** %MEMORY
  %loadMem_418ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3478 = getelementptr inbounds %struct.GPR, %struct.GPR* %3477, i32 0, i32 33
  %3479 = getelementptr inbounds %struct.Reg, %struct.Reg* %3478, i32 0, i32 0
  %PC.i806 = bitcast %union.anon* %3479 to i64*
  %3480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3481 = getelementptr inbounds %struct.GPR, %struct.GPR* %3480, i32 0, i32 11
  %3482 = getelementptr inbounds %struct.Reg, %struct.Reg* %3481, i32 0, i32 0
  %EDI.i807 = bitcast %union.anon* %3482 to i32*
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3484 = getelementptr inbounds %struct.GPR, %struct.GPR* %3483, i32 0, i32 1
  %3485 = getelementptr inbounds %struct.Reg, %struct.Reg* %3484, i32 0, i32 0
  %RAX.i808 = bitcast %union.anon* %3485 to i64*
  %3486 = load i32, i32* %EDI.i807
  %3487 = zext i32 %3486 to i64
  %3488 = load i64, i64* %PC.i806
  %3489 = add i64 %3488, 2
  store i64 %3489, i64* %PC.i806
  %3490 = and i64 %3487, 4294967295
  store i64 %3490, i64* %RAX.i808, align 8
  store %struct.Memory* %loadMem_418ce6, %struct.Memory** %MEMORY
  %loadMem_418ce8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3492 = getelementptr inbounds %struct.GPR, %struct.GPR* %3491, i32 0, i32 33
  %3493 = getelementptr inbounds %struct.Reg, %struct.Reg* %3492, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %3493 to i64*
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3495 = getelementptr inbounds %struct.GPR, %struct.GPR* %3494, i32 0, i32 7
  %3496 = getelementptr inbounds %struct.Reg, %struct.Reg* %3495, i32 0, i32 0
  %RDX.i804 = bitcast %union.anon* %3496 to i64*
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3498 = getelementptr inbounds %struct.GPR, %struct.GPR* %3497, i32 0, i32 15
  %3499 = getelementptr inbounds %struct.Reg, %struct.Reg* %3498, i32 0, i32 0
  %RBP.i805 = bitcast %union.anon* %3499 to i64*
  %3500 = load i64, i64* %RBP.i805
  %3501 = sub i64 %3500, 168
  %3502 = load i64, i64* %RDX.i804
  %3503 = load i64, i64* %PC.i803
  %3504 = add i64 %3503, 7
  store i64 %3504, i64* %PC.i803
  %3505 = inttoptr i64 %3501 to i64*
  store i64 %3502, i64* %3505
  store %struct.Memory* %loadMem_418ce8, %struct.Memory** %MEMORY
  %loadMem_418cef = load %struct.Memory*, %struct.Memory** %MEMORY
  %3506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3507 = getelementptr inbounds %struct.GPR, %struct.GPR* %3506, i32 0, i32 33
  %3508 = getelementptr inbounds %struct.Reg, %struct.Reg* %3507, i32 0, i32 0
  %PC.i802 = bitcast %union.anon* %3508 to i64*
  %3509 = load i64, i64* %PC.i802
  %3510 = add i64 %3509, 1
  store i64 %3510, i64* %PC.i802
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3513 = bitcast %union.anon* %3512 to i32*
  %3514 = load i32, i32* %3513, align 8
  %3515 = sext i32 %3514 to i64
  %3516 = lshr i64 %3515, 32
  store i64 %3516, i64* %3511, align 8
  store %struct.Memory* %loadMem_418cef, %struct.Memory** %MEMORY
  %loadMem_418cf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3518 = getelementptr inbounds %struct.GPR, %struct.GPR* %3517, i32 0, i32 33
  %3519 = getelementptr inbounds %struct.Reg, %struct.Reg* %3518, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %3519 to i64*
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3521 = getelementptr inbounds %struct.GPR, %struct.GPR* %3520, i32 0, i32 11
  %3522 = getelementptr inbounds %struct.Reg, %struct.Reg* %3521, i32 0, i32 0
  %RDI.i800 = bitcast %union.anon* %3522 to i64*
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3524 = getelementptr inbounds %struct.GPR, %struct.GPR* %3523, i32 0, i32 15
  %3525 = getelementptr inbounds %struct.Reg, %struct.Reg* %3524, i32 0, i32 0
  %RBP.i801 = bitcast %union.anon* %3525 to i64*
  %3526 = load i64, i64* %RBP.i801
  %3527 = sub i64 %3526, 156
  %3528 = load i64, i64* %PC.i799
  %3529 = add i64 %3528, 6
  store i64 %3529, i64* %PC.i799
  %3530 = inttoptr i64 %3527 to i32*
  %3531 = load i32, i32* %3530
  %3532 = zext i32 %3531 to i64
  store i64 %3532, i64* %RDI.i800, align 8
  store %struct.Memory* %loadMem_418cf0, %struct.Memory** %MEMORY
  %loadMem_418cf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 33
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %3535 to i64*
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 11
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %3538 to i32*
  %3539 = load i32, i32* %EDI.i
  %3540 = zext i32 %3539 to i64
  %3541 = load i64, i64* %PC.i796
  %3542 = add i64 %3541, 2
  store i64 %3542, i64* %PC.i796
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %3544 = bitcast %union.anon* %3543 to i32*
  %3545 = load i32, i32* %3544, align 8
  %3546 = zext i32 %3545 to i64
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %3548 = bitcast %union.anon* %3547 to i32*
  %3549 = load i32, i32* %3548, align 8
  %3550 = zext i32 %3549 to i64
  %3551 = shl i64 %3540, 32
  %3552 = ashr exact i64 %3551, 32
  %3553 = shl i64 %3550, 32
  %3554 = or i64 %3553, %3546
  %3555 = sdiv i64 %3554, %3552
  %3556 = shl i64 %3555, 32
  %3557 = ashr exact i64 %3556, 32
  %3558 = icmp eq i64 %3555, %3557
  br i1 %3558, label %3563, label %3559

; <label>:3559:                                   ; preds = %block_.L_418cad
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3561 = load i64, i64* %3560, align 8
  %3562 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3561, %struct.Memory* %loadMem_418cf6)
  br label %routine_idivl__edi.exit

; <label>:3563:                                   ; preds = %block_.L_418cad
  %3564 = srem i64 %3554, %3552
  %3565 = getelementptr inbounds %union.anon, %union.anon* %3543, i64 0, i32 0
  %3566 = and i64 %3555, 4294967295
  store i64 %3566, i64* %3565, align 8
  %3567 = getelementptr inbounds %union.anon, %union.anon* %3547, i64 0, i32 0
  %3568 = and i64 %3564, 4294967295
  store i64 %3568, i64* %3567, align 8
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3569, align 1
  %3570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %3570, align 1
  %3571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3571, align 1
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3572, align 1
  %3573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3573, align 1
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3574, align 1
  br label %routine_idivl__edi.exit

routine_idivl__edi.exit:                          ; preds = %3559, %3563
  %3575 = phi %struct.Memory* [ %3562, %3559 ], [ %loadMem_418cf6, %3563 ]
  store %struct.Memory* %3575, %struct.Memory** %MEMORY
  %loadMem_418cf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3577 = getelementptr inbounds %struct.GPR, %struct.GPR* %3576, i32 0, i32 33
  %3578 = getelementptr inbounds %struct.Reg, %struct.Reg* %3577, i32 0, i32 0
  %PC.i794 = bitcast %union.anon* %3578 to i64*
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3580 = getelementptr inbounds %struct.GPR, %struct.GPR* %3579, i32 0, i32 1
  %3581 = getelementptr inbounds %struct.Reg, %struct.Reg* %3580, i32 0, i32 0
  %RAX.i795 = bitcast %union.anon* %3581 to i64*
  %3582 = load i64, i64* %RAX.i795
  %3583 = load i64, i64* %PC.i794
  %3584 = add i64 %3583, 3
  store i64 %3584, i64* %PC.i794
  %3585 = trunc i64 %3582 to i32
  %3586 = add i32 1, %3585
  %3587 = zext i32 %3586 to i64
  store i64 %3587, i64* %RAX.i795, align 8
  %3588 = icmp ult i32 %3586, %3585
  %3589 = icmp ult i32 %3586, 1
  %3590 = or i1 %3588, %3589
  %3591 = zext i1 %3590 to i8
  %3592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3591, i8* %3592, align 1
  %3593 = and i32 %3586, 255
  %3594 = call i32 @llvm.ctpop.i32(i32 %3593)
  %3595 = trunc i32 %3594 to i8
  %3596 = and i8 %3595, 1
  %3597 = xor i8 %3596, 1
  %3598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3597, i8* %3598, align 1
  %3599 = xor i64 1, %3582
  %3600 = trunc i64 %3599 to i32
  %3601 = xor i32 %3600, %3586
  %3602 = lshr i32 %3601, 4
  %3603 = trunc i32 %3602 to i8
  %3604 = and i8 %3603, 1
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3604, i8* %3605, align 1
  %3606 = icmp eq i32 %3586, 0
  %3607 = zext i1 %3606 to i8
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3607, i8* %3608, align 1
  %3609 = lshr i32 %3586, 31
  %3610 = trunc i32 %3609 to i8
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3610, i8* %3611, align 1
  %3612 = lshr i32 %3585, 31
  %3613 = xor i32 %3609, %3612
  %3614 = add i32 %3613, %3609
  %3615 = icmp eq i32 %3614, 2
  %3616 = zext i1 %3615 to i8
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3616, i8* %3617, align 1
  store %struct.Memory* %loadMem_418cf8, %struct.Memory** %MEMORY
  %loadMem_418cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %3618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3619 = getelementptr inbounds %struct.GPR, %struct.GPR* %3618, i32 0, i32 33
  %3620 = getelementptr inbounds %struct.Reg, %struct.Reg* %3619, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %3620 to i64*
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3622 = getelementptr inbounds %struct.GPR, %struct.GPR* %3621, i32 0, i32 1
  %3623 = getelementptr inbounds %struct.Reg, %struct.Reg* %3622, i32 0, i32 0
  %EAX.i792 = bitcast %union.anon* %3623 to i32*
  %3624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3625 = getelementptr inbounds %struct.GPR, %struct.GPR* %3624, i32 0, i32 15
  %3626 = getelementptr inbounds %struct.Reg, %struct.Reg* %3625, i32 0, i32 0
  %RBP.i793 = bitcast %union.anon* %3626 to i64*
  %3627 = load i64, i64* %RBP.i793
  %3628 = sub i64 %3627, 20
  %3629 = load i32, i32* %EAX.i792
  %3630 = zext i32 %3629 to i64
  %3631 = load i64, i64* %PC.i791
  %3632 = add i64 %3631, 3
  store i64 %3632, i64* %PC.i791
  %3633 = inttoptr i64 %3628 to i32*
  store i32 %3629, i32* %3633
  store %struct.Memory* %loadMem_418cfb, %struct.Memory** %MEMORY
  %loadMem_418cfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3635 = getelementptr inbounds %struct.GPR, %struct.GPR* %3634, i32 0, i32 33
  %3636 = getelementptr inbounds %struct.Reg, %struct.Reg* %3635, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %3636 to i64*
  %3637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3638 = getelementptr inbounds %struct.GPR, %struct.GPR* %3637, i32 0, i32 11
  %3639 = getelementptr inbounds %struct.Reg, %struct.Reg* %3638, i32 0, i32 0
  %RDI.i789 = bitcast %union.anon* %3639 to i64*
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3641 = getelementptr inbounds %struct.GPR, %struct.GPR* %3640, i32 0, i32 15
  %3642 = getelementptr inbounds %struct.Reg, %struct.Reg* %3641, i32 0, i32 0
  %RBP.i790 = bitcast %union.anon* %3642 to i64*
  %3643 = load i64, i64* %RBP.i790
  %3644 = sub i64 %3643, 8
  %3645 = load i64, i64* %PC.i788
  %3646 = add i64 %3645, 4
  store i64 %3646, i64* %PC.i788
  %3647 = inttoptr i64 %3644 to i64*
  %3648 = load i64, i64* %3647
  store i64 %3648, i64* %RDI.i789, align 8
  store %struct.Memory* %loadMem_418cfe, %struct.Memory** %MEMORY
  %loadMem_418d02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3650 = getelementptr inbounds %struct.GPR, %struct.GPR* %3649, i32 0, i32 33
  %3651 = getelementptr inbounds %struct.Reg, %struct.Reg* %3650, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %3651 to i64*
  %3652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3653 = getelementptr inbounds %struct.GPR, %struct.GPR* %3652, i32 0, i32 19
  %3654 = getelementptr inbounds %struct.Reg, %struct.Reg* %3653, i32 0, i32 0
  %R9D.i786 = bitcast %union.anon* %3654 to i32*
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3656 = getelementptr inbounds %struct.GPR, %struct.GPR* %3655, i32 0, i32 15
  %3657 = getelementptr inbounds %struct.Reg, %struct.Reg* %3656, i32 0, i32 0
  %RBP.i787 = bitcast %union.anon* %3657 to i64*
  %3658 = bitcast i32* %R9D.i786 to i64*
  %3659 = load i64, i64* %RBP.i787
  %3660 = sub i64 %3659, 20
  %3661 = load i64, i64* %PC.i785
  %3662 = add i64 %3661, 4
  store i64 %3662, i64* %PC.i785
  %3663 = inttoptr i64 %3660 to i32*
  %3664 = load i32, i32* %3663
  %3665 = zext i32 %3664 to i64
  store i64 %3665, i64* %3658, align 8
  store %struct.Memory* %loadMem_418d02, %struct.Memory** %MEMORY
  %loadMem_418d06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3667 = getelementptr inbounds %struct.GPR, %struct.GPR* %3666, i32 0, i32 33
  %3668 = getelementptr inbounds %struct.Reg, %struct.Reg* %3667, i32 0, i32 0
  %PC.i782 = bitcast %union.anon* %3668 to i64*
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3670 = getelementptr inbounds %struct.GPR, %struct.GPR* %3669, i32 0, i32 15
  %3671 = getelementptr inbounds %struct.Reg, %struct.Reg* %3670, i32 0, i32 0
  %RBP.i783 = bitcast %union.anon* %3671 to i64*
  %3672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3673 = getelementptr inbounds %struct.GPR, %struct.GPR* %3672, i32 0, i32 21
  %3674 = getelementptr inbounds %struct.Reg, %struct.Reg* %3673, i32 0, i32 0
  %R10.i784 = bitcast %union.anon* %3674 to i64*
  %3675 = load i64, i64* %RBP.i783
  %3676 = sub i64 %3675, 168
  %3677 = load i64, i64* %PC.i782
  %3678 = add i64 %3677, 7
  store i64 %3678, i64* %PC.i782
  %3679 = inttoptr i64 %3676 to i64*
  %3680 = load i64, i64* %3679
  store i64 %3680, i64* %R10.i784, align 8
  store %struct.Memory* %loadMem_418d06, %struct.Memory** %MEMORY
  %loadMem_418d0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3682 = getelementptr inbounds %struct.GPR, %struct.GPR* %3681, i32 0, i32 33
  %3683 = getelementptr inbounds %struct.Reg, %struct.Reg* %3682, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %3683 to i64*
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3685 = getelementptr inbounds %struct.GPR, %struct.GPR* %3684, i32 0, i32 7
  %3686 = getelementptr inbounds %struct.Reg, %struct.Reg* %3685, i32 0, i32 0
  %RDX.i781 = bitcast %union.anon* %3686 to i64*
  %3687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3688 = getelementptr inbounds %struct.GPR, %struct.GPR* %3687, i32 0, i32 21
  %3689 = getelementptr inbounds %struct.Reg, %struct.Reg* %3688, i32 0, i32 0
  %R10.i = bitcast %union.anon* %3689 to i64*
  %3690 = load i64, i64* %R10.i
  %3691 = load i64, i64* %PC.i780
  %3692 = add i64 %3691, 3
  store i64 %3692, i64* %PC.i780
  store i64 %3690, i64* %RDX.i781, align 8
  store %struct.Memory* %loadMem_418d0d, %struct.Memory** %MEMORY
  %loadMem_418d10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3694 = getelementptr inbounds %struct.GPR, %struct.GPR* %3693, i32 0, i32 33
  %3695 = getelementptr inbounds %struct.Reg, %struct.Reg* %3694, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %3695 to i64*
  %3696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3697 = getelementptr inbounds %struct.GPR, %struct.GPR* %3696, i32 0, i32 1
  %3698 = getelementptr inbounds %struct.Reg, %struct.Reg* %3697, i32 0, i32 0
  %3699 = bitcast %union.anon* %3698 to %struct.anon.2*
  %AL.i779 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3699, i32 0, i32 0
  %3700 = load i64, i64* %PC.i778
  %3701 = add i64 %3700, 2
  store i64 %3701, i64* %PC.i778
  store i8 0, i8* %AL.i779, align 1
  store %struct.Memory* %loadMem_418d10, %struct.Memory** %MEMORY
  %loadMem1_418d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3703 = getelementptr inbounds %struct.GPR, %struct.GPR* %3702, i32 0, i32 33
  %3704 = getelementptr inbounds %struct.Reg, %struct.Reg* %3703, i32 0, i32 0
  %PC.i777 = bitcast %union.anon* %3704 to i64*
  %3705 = load i64, i64* %PC.i777
  %3706 = add i64 %3705, -96162
  %3707 = load i64, i64* %PC.i777
  %3708 = add i64 %3707, 5
  %3709 = load i64, i64* %PC.i777
  %3710 = add i64 %3709, 5
  store i64 %3710, i64* %PC.i777
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3712 = load i64, i64* %3711, align 8
  %3713 = add i64 %3712, -8
  %3714 = inttoptr i64 %3713 to i64*
  store i64 %3708, i64* %3714
  store i64 %3713, i64* %3711, align 8
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3706, i64* %3715, align 8
  store %struct.Memory* %loadMem1_418d12, %struct.Memory** %MEMORY
  %loadMem2_418d12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_418d12 = load i64, i64* %3
  %3716 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_418d12)
  store %struct.Memory* %3716, %struct.Memory** %MEMORY
  %loadMem_418d17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3718 = getelementptr inbounds %struct.GPR, %struct.GPR* %3717, i32 0, i32 33
  %3719 = getelementptr inbounds %struct.Reg, %struct.Reg* %3718, i32 0, i32 0
  %PC.i772 = bitcast %union.anon* %3719 to i64*
  %3720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3721 = getelementptr inbounds %struct.GPR, %struct.GPR* %3720, i32 0, i32 9
  %3722 = getelementptr inbounds %struct.Reg, %struct.Reg* %3721, i32 0, i32 0
  %RSI.i773 = bitcast %union.anon* %3722 to i64*
  %3723 = load i64, i64* %PC.i772
  %3724 = add i64 %3723, 10
  store i64 %3724, i64* %PC.i772
  store i64 ptrtoint (%G__0x456fb3_type* @G__0x456fb3 to i64), i64* %RSI.i773, align 8
  store %struct.Memory* %loadMem_418d17, %struct.Memory** %MEMORY
  %loadMem_418d21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3726 = getelementptr inbounds %struct.GPR, %struct.GPR* %3725, i32 0, i32 33
  %3727 = getelementptr inbounds %struct.Reg, %struct.Reg* %3726, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %3727 to i64*
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3729 = getelementptr inbounds %struct.GPR, %struct.GPR* %3728, i32 0, i32 7
  %3730 = getelementptr inbounds %struct.Reg, %struct.Reg* %3729, i32 0, i32 0
  %RDX.i771 = bitcast %union.anon* %3730 to i64*
  %3731 = load i64, i64* %PC.i770
  %3732 = add i64 %3731, 10
  store i64 %3732, i64* %PC.i770
  store i64 ptrtoint (%G__0x456fc0_type* @G__0x456fc0 to i64), i64* %RDX.i771, align 8
  store %struct.Memory* %loadMem_418d21, %struct.Memory** %MEMORY
  %loadMem_418d2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3734 = getelementptr inbounds %struct.GPR, %struct.GPR* %3733, i32 0, i32 33
  %3735 = getelementptr inbounds %struct.Reg, %struct.Reg* %3734, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %3735 to i64*
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3737 = getelementptr inbounds %struct.GPR, %struct.GPR* %3736, i32 0, i32 5
  %3738 = getelementptr inbounds %struct.Reg, %struct.Reg* %3737, i32 0, i32 0
  %RCX.i769 = bitcast %union.anon* %3738 to i64*
  %3739 = load i64, i64* %PC.i768
  %3740 = add i64 %3739, 10
  store i64 %3740, i64* %PC.i768
  store i64 ptrtoint (%G__0x456fc2_type* @G__0x456fc2 to i64), i64* %RCX.i769, align 8
  store %struct.Memory* %loadMem_418d2b, %struct.Memory** %MEMORY
  %loadMem_418d35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3742 = getelementptr inbounds %struct.GPR, %struct.GPR* %3741, i32 0, i32 33
  %3743 = getelementptr inbounds %struct.Reg, %struct.Reg* %3742, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %3743 to i64*
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3745 = getelementptr inbounds %struct.GPR, %struct.GPR* %3744, i32 0, i32 11
  %3746 = getelementptr inbounds %struct.Reg, %struct.Reg* %3745, i32 0, i32 0
  %RDI.i766 = bitcast %union.anon* %3746 to i64*
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3748 = getelementptr inbounds %struct.GPR, %struct.GPR* %3747, i32 0, i32 15
  %3749 = getelementptr inbounds %struct.Reg, %struct.Reg* %3748, i32 0, i32 0
  %RBP.i767 = bitcast %union.anon* %3749 to i64*
  %3750 = load i64, i64* %RBP.i767
  %3751 = sub i64 %3750, 8
  %3752 = load i64, i64* %PC.i765
  %3753 = add i64 %3752, 4
  store i64 %3753, i64* %PC.i765
  %3754 = inttoptr i64 %3751 to i64*
  %3755 = load i64, i64* %3754
  store i64 %3755, i64* %RDI.i766, align 8
  store %struct.Memory* %loadMem_418d35, %struct.Memory** %MEMORY
  %loadMem_418d39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3757 = getelementptr inbounds %struct.GPR, %struct.GPR* %3756, i32 0, i32 33
  %3758 = getelementptr inbounds %struct.Reg, %struct.Reg* %3757, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %3758 to i64*
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3760 = getelementptr inbounds %struct.GPR, %struct.GPR* %3759, i32 0, i32 5
  %3761 = getelementptr inbounds %struct.Reg, %struct.Reg* %3760, i32 0, i32 0
  %RCX.i763 = bitcast %union.anon* %3761 to i64*
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3763 = getelementptr inbounds %struct.GPR, %struct.GPR* %3762, i32 0, i32 15
  %3764 = getelementptr inbounds %struct.Reg, %struct.Reg* %3763, i32 0, i32 0
  %RBP.i764 = bitcast %union.anon* %3764 to i64*
  %3765 = load i64, i64* %RBP.i764
  %3766 = sub i64 %3765, 176
  %3767 = load i64, i64* %RCX.i763
  %3768 = load i64, i64* %PC.i762
  %3769 = add i64 %3768, 7
  store i64 %3769, i64* %PC.i762
  %3770 = inttoptr i64 %3766 to i64*
  store i64 %3767, i64* %3770
  store %struct.Memory* %loadMem_418d39, %struct.Memory** %MEMORY
  %loadMem_418d40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3772 = getelementptr inbounds %struct.GPR, %struct.GPR* %3771, i32 0, i32 33
  %3773 = getelementptr inbounds %struct.Reg, %struct.Reg* %3772, i32 0, i32 0
  %PC.i759 = bitcast %union.anon* %3773 to i64*
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3775 = getelementptr inbounds %struct.GPR, %struct.GPR* %3774, i32 0, i32 15
  %3776 = getelementptr inbounds %struct.Reg, %struct.Reg* %3775, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %3776 to i64*
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3778 = getelementptr inbounds %struct.GPR, %struct.GPR* %3777, i32 0, i32 17
  %3779 = getelementptr inbounds %struct.Reg, %struct.Reg* %3778, i32 0, i32 0
  %R8.i761 = bitcast %union.anon* %3779 to i64*
  %3780 = load i64, i64* %RBP.i760
  %3781 = sub i64 %3780, 176
  %3782 = load i64, i64* %PC.i759
  %3783 = add i64 %3782, 7
  store i64 %3783, i64* %PC.i759
  %3784 = inttoptr i64 %3781 to i64*
  %3785 = load i64, i64* %3784
  store i64 %3785, i64* %R8.i761, align 8
  store %struct.Memory* %loadMem_418d40, %struct.Memory** %MEMORY
  %loadMem_418d47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3787 = getelementptr inbounds %struct.GPR, %struct.GPR* %3786, i32 0, i32 33
  %3788 = getelementptr inbounds %struct.Reg, %struct.Reg* %3787, i32 0, i32 0
  %PC.i756 = bitcast %union.anon* %3788 to i64*
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3790 = getelementptr inbounds %struct.GPR, %struct.GPR* %3789, i32 0, i32 1
  %3791 = getelementptr inbounds %struct.Reg, %struct.Reg* %3790, i32 0, i32 0
  %EAX.i757 = bitcast %union.anon* %3791 to i32*
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3793 = getelementptr inbounds %struct.GPR, %struct.GPR* %3792, i32 0, i32 15
  %3794 = getelementptr inbounds %struct.Reg, %struct.Reg* %3793, i32 0, i32 0
  %RBP.i758 = bitcast %union.anon* %3794 to i64*
  %3795 = load i64, i64* %RBP.i758
  %3796 = sub i64 %3795, 180
  %3797 = load i32, i32* %EAX.i757
  %3798 = zext i32 %3797 to i64
  %3799 = load i64, i64* %PC.i756
  %3800 = add i64 %3799, 6
  store i64 %3800, i64* %PC.i756
  %3801 = inttoptr i64 %3796 to i32*
  store i32 %3797, i32* %3801
  store %struct.Memory* %loadMem_418d47, %struct.Memory** %MEMORY
  %loadMem_418d4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3803 = getelementptr inbounds %struct.GPR, %struct.GPR* %3802, i32 0, i32 33
  %3804 = getelementptr inbounds %struct.Reg, %struct.Reg* %3803, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %3804 to i64*
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3806 = getelementptr inbounds %struct.GPR, %struct.GPR* %3805, i32 0, i32 1
  %3807 = getelementptr inbounds %struct.Reg, %struct.Reg* %3806, i32 0, i32 0
  %3808 = bitcast %union.anon* %3807 to %struct.anon.2*
  %AL.i755 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3808, i32 0, i32 0
  %3809 = load i64, i64* %PC.i754
  %3810 = add i64 %3809, 2
  store i64 %3810, i64* %PC.i754
  store i8 0, i8* %AL.i755, align 1
  store %struct.Memory* %loadMem_418d4d, %struct.Memory** %MEMORY
  %loadMem1_418d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3812 = getelementptr inbounds %struct.GPR, %struct.GPR* %3811, i32 0, i32 33
  %3813 = getelementptr inbounds %struct.Reg, %struct.Reg* %3812, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %3813 to i64*
  %3814 = load i64, i64* %PC.i753
  %3815 = add i64 %3814, -96223
  %3816 = load i64, i64* %PC.i753
  %3817 = add i64 %3816, 5
  %3818 = load i64, i64* %PC.i753
  %3819 = add i64 %3818, 5
  store i64 %3819, i64* %PC.i753
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3821 = load i64, i64* %3820, align 8
  %3822 = add i64 %3821, -8
  %3823 = inttoptr i64 %3822 to i64*
  store i64 %3817, i64* %3823
  store i64 %3822, i64* %3820, align 8
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3815, i64* %3824, align 8
  store %struct.Memory* %loadMem1_418d4f, %struct.Memory** %MEMORY
  %loadMem2_418d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_418d4f = load i64, i64* %3
  %3825 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_418d4f)
  store %struct.Memory* %3825, %struct.Memory** %MEMORY
  %loadMem_418d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3827 = getelementptr inbounds %struct.GPR, %struct.GPR* %3826, i32 0, i32 33
  %3828 = getelementptr inbounds %struct.Reg, %struct.Reg* %3827, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %3828 to i64*
  %3829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3830 = getelementptr inbounds %struct.GPR, %struct.GPR* %3829, i32 0, i32 15
  %3831 = getelementptr inbounds %struct.Reg, %struct.Reg* %3830, i32 0, i32 0
  %RBP.i751 = bitcast %union.anon* %3831 to i64*
  %3832 = load i64, i64* %RBP.i751
  %3833 = sub i64 %3832, 48
  %3834 = load i64, i64* %PC.i750
  %3835 = add i64 %3834, 4
  store i64 %3835, i64* %PC.i750
  %3836 = inttoptr i64 %3833 to i8*
  store i8 0, i8* %3836
  store %struct.Memory* %loadMem_418d54, %struct.Memory** %MEMORY
  %loadMem_418d58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3838 = getelementptr inbounds %struct.GPR, %struct.GPR* %3837, i32 0, i32 33
  %3839 = getelementptr inbounds %struct.Reg, %struct.Reg* %3838, i32 0, i32 0
  %PC.i748 = bitcast %union.anon* %3839 to i64*
  %3840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3841 = getelementptr inbounds %struct.GPR, %struct.GPR* %3840, i32 0, i32 15
  %3842 = getelementptr inbounds %struct.Reg, %struct.Reg* %3841, i32 0, i32 0
  %RBP.i749 = bitcast %union.anon* %3842 to i64*
  %3843 = load i64, i64* %RBP.i749
  %3844 = sub i64 %3843, 49
  %3845 = load i64, i64* %PC.i748
  %3846 = add i64 %3845, 4
  store i64 %3846, i64* %PC.i748
  %3847 = inttoptr i64 %3844 to i8*
  store i8 10, i8* %3847
  store %struct.Memory* %loadMem_418d58, %struct.Memory** %MEMORY
  %loadMem_418d5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3849 = getelementptr inbounds %struct.GPR, %struct.GPR* %3848, i32 0, i32 33
  %3850 = getelementptr inbounds %struct.Reg, %struct.Reg* %3849, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %3850 to i64*
  %3851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3852 = getelementptr inbounds %struct.GPR, %struct.GPR* %3851, i32 0, i32 5
  %3853 = getelementptr inbounds %struct.Reg, %struct.Reg* %3852, i32 0, i32 0
  %RCX.i746 = bitcast %union.anon* %3853 to i64*
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3855 = getelementptr inbounds %struct.GPR, %struct.GPR* %3854, i32 0, i32 15
  %3856 = getelementptr inbounds %struct.Reg, %struct.Reg* %3855, i32 0, i32 0
  %RBP.i747 = bitcast %union.anon* %3856 to i64*
  %3857 = load i64, i64* %RBP.i747
  %3858 = sub i64 %3857, 16
  %3859 = load i64, i64* %PC.i745
  %3860 = add i64 %3859, 4
  store i64 %3860, i64* %PC.i745
  %3861 = inttoptr i64 %3858 to i64*
  %3862 = load i64, i64* %3861
  store i64 %3862, i64* %RCX.i746, align 8
  store %struct.Memory* %loadMem_418d5c, %struct.Memory** %MEMORY
  %loadMem_418d60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3864 = getelementptr inbounds %struct.GPR, %struct.GPR* %3863, i32 0, i32 33
  %3865 = getelementptr inbounds %struct.Reg, %struct.Reg* %3864, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %3865 to i64*
  %3866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3867 = getelementptr inbounds %struct.GPR, %struct.GPR* %3866, i32 0, i32 19
  %3868 = getelementptr inbounds %struct.Reg, %struct.Reg* %3867, i32 0, i32 0
  %R9D.i743 = bitcast %union.anon* %3868 to i32*
  %3869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3870 = getelementptr inbounds %struct.GPR, %struct.GPR* %3869, i32 0, i32 5
  %3871 = getelementptr inbounds %struct.Reg, %struct.Reg* %3870, i32 0, i32 0
  %RCX.i744 = bitcast %union.anon* %3871 to i64*
  %3872 = bitcast i32* %R9D.i743 to i64*
  %3873 = load i64, i64* %RCX.i744
  %3874 = add i64 %3873, 20
  %3875 = load i64, i64* %PC.i742
  %3876 = add i64 %3875, 4
  store i64 %3876, i64* %PC.i742
  %3877 = inttoptr i64 %3874 to i32*
  %3878 = load i32, i32* %3877
  %3879 = zext i32 %3878 to i64
  store i64 %3879, i64* %3872, align 8
  store %struct.Memory* %loadMem_418d60, %struct.Memory** %MEMORY
  %loadMem_418d64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3881 = getelementptr inbounds %struct.GPR, %struct.GPR* %3880, i32 0, i32 33
  %3882 = getelementptr inbounds %struct.Reg, %struct.Reg* %3881, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %3882 to i64*
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3884 = getelementptr inbounds %struct.GPR, %struct.GPR* %3883, i32 0, i32 19
  %3885 = getelementptr inbounds %struct.Reg, %struct.Reg* %3884, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %3885 to i32*
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3887 = getelementptr inbounds %struct.GPR, %struct.GPR* %3886, i32 0, i32 15
  %3888 = getelementptr inbounds %struct.Reg, %struct.Reg* %3887, i32 0, i32 0
  %RBP.i741 = bitcast %union.anon* %3888 to i64*
  %3889 = load i64, i64* %RBP.i741
  %3890 = sub i64 %3889, 32
  %3891 = load i32, i32* %R9D.i
  %3892 = zext i32 %3891 to i64
  %3893 = load i64, i64* %PC.i740
  %3894 = add i64 %3893, 4
  store i64 %3894, i64* %PC.i740
  %3895 = inttoptr i64 %3890 to i32*
  store i32 %3891, i32* %3895
  store %struct.Memory* %loadMem_418d64, %struct.Memory** %MEMORY
  %loadMem_418d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3897 = getelementptr inbounds %struct.GPR, %struct.GPR* %3896, i32 0, i32 33
  %3898 = getelementptr inbounds %struct.Reg, %struct.Reg* %3897, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %3898 to i64*
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3900 = getelementptr inbounds %struct.GPR, %struct.GPR* %3899, i32 0, i32 1
  %3901 = getelementptr inbounds %struct.Reg, %struct.Reg* %3900, i32 0, i32 0
  %EAX.i738 = bitcast %union.anon* %3901 to i32*
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3903 = getelementptr inbounds %struct.GPR, %struct.GPR* %3902, i32 0, i32 15
  %3904 = getelementptr inbounds %struct.Reg, %struct.Reg* %3903, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %3904 to i64*
  %3905 = load i64, i64* %RBP.i739
  %3906 = sub i64 %3905, 184
  %3907 = load i32, i32* %EAX.i738
  %3908 = zext i32 %3907 to i64
  %3909 = load i64, i64* %PC.i737
  %3910 = add i64 %3909, 6
  store i64 %3910, i64* %PC.i737
  %3911 = inttoptr i64 %3906 to i32*
  store i32 %3907, i32* %3911
  store %struct.Memory* %loadMem_418d68, %struct.Memory** %MEMORY
  br label %block_.L_418d6e

block_.L_418d6e:                                  ; preds = %block_.L_41910a, %routine_idivl__edi.exit
  %loadMem_418d6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3913 = getelementptr inbounds %struct.GPR, %struct.GPR* %3912, i32 0, i32 33
  %3914 = getelementptr inbounds %struct.Reg, %struct.Reg* %3913, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %3914 to i64*
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3916 = getelementptr inbounds %struct.GPR, %struct.GPR* %3915, i32 0, i32 1
  %3917 = getelementptr inbounds %struct.Reg, %struct.Reg* %3916, i32 0, i32 0
  %RAX.i735 = bitcast %union.anon* %3917 to i64*
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3919 = getelementptr inbounds %struct.GPR, %struct.GPR* %3918, i32 0, i32 15
  %3920 = getelementptr inbounds %struct.Reg, %struct.Reg* %3919, i32 0, i32 0
  %RBP.i736 = bitcast %union.anon* %3920 to i64*
  %3921 = load i64, i64* %RBP.i736
  %3922 = sub i64 %3921, 32
  %3923 = load i64, i64* %PC.i734
  %3924 = add i64 %3923, 3
  store i64 %3924, i64* %PC.i734
  %3925 = inttoptr i64 %3922 to i32*
  %3926 = load i32, i32* %3925
  %3927 = zext i32 %3926 to i64
  store i64 %3927, i64* %RAX.i735, align 8
  store %struct.Memory* %loadMem_418d6e, %struct.Memory** %MEMORY
  %loadMem_418d71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3929 = getelementptr inbounds %struct.GPR, %struct.GPR* %3928, i32 0, i32 33
  %3930 = getelementptr inbounds %struct.Reg, %struct.Reg* %3929, i32 0, i32 0
  %PC.i731 = bitcast %union.anon* %3930 to i64*
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3932 = getelementptr inbounds %struct.GPR, %struct.GPR* %3931, i32 0, i32 5
  %3933 = getelementptr inbounds %struct.Reg, %struct.Reg* %3932, i32 0, i32 0
  %RCX.i732 = bitcast %union.anon* %3933 to i64*
  %3934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3935 = getelementptr inbounds %struct.GPR, %struct.GPR* %3934, i32 0, i32 15
  %3936 = getelementptr inbounds %struct.Reg, %struct.Reg* %3935, i32 0, i32 0
  %RBP.i733 = bitcast %union.anon* %3936 to i64*
  %3937 = load i64, i64* %RBP.i733
  %3938 = sub i64 %3937, 16
  %3939 = load i64, i64* %PC.i731
  %3940 = add i64 %3939, 4
  store i64 %3940, i64* %PC.i731
  %3941 = inttoptr i64 %3938 to i64*
  %3942 = load i64, i64* %3941
  store i64 %3942, i64* %RCX.i732, align 8
  store %struct.Memory* %loadMem_418d71, %struct.Memory** %MEMORY
  %loadMem_418d75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3944 = getelementptr inbounds %struct.GPR, %struct.GPR* %3943, i32 0, i32 33
  %3945 = getelementptr inbounds %struct.Reg, %struct.Reg* %3944, i32 0, i32 0
  %PC.i728 = bitcast %union.anon* %3945 to i64*
  %3946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3947 = getelementptr inbounds %struct.GPR, %struct.GPR* %3946, i32 0, i32 1
  %3948 = getelementptr inbounds %struct.Reg, %struct.Reg* %3947, i32 0, i32 0
  %EAX.i729 = bitcast %union.anon* %3948 to i32*
  %3949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3950 = getelementptr inbounds %struct.GPR, %struct.GPR* %3949, i32 0, i32 5
  %3951 = getelementptr inbounds %struct.Reg, %struct.Reg* %3950, i32 0, i32 0
  %RCX.i730 = bitcast %union.anon* %3951 to i64*
  %3952 = load i32, i32* %EAX.i729
  %3953 = zext i32 %3952 to i64
  %3954 = load i64, i64* %RCX.i730
  %3955 = add i64 %3954, 16
  %3956 = load i64, i64* %PC.i728
  %3957 = add i64 %3956, 3
  store i64 %3957, i64* %PC.i728
  %3958 = inttoptr i64 %3955 to i32*
  %3959 = load i32, i32* %3958
  %3960 = sub i32 %3952, %3959
  %3961 = icmp ult i32 %3952, %3959
  %3962 = zext i1 %3961 to i8
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3962, i8* %3963, align 1
  %3964 = and i32 %3960, 255
  %3965 = call i32 @llvm.ctpop.i32(i32 %3964)
  %3966 = trunc i32 %3965 to i8
  %3967 = and i8 %3966, 1
  %3968 = xor i8 %3967, 1
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3968, i8* %3969, align 1
  %3970 = xor i32 %3959, %3952
  %3971 = xor i32 %3970, %3960
  %3972 = lshr i32 %3971, 4
  %3973 = trunc i32 %3972 to i8
  %3974 = and i8 %3973, 1
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3974, i8* %3975, align 1
  %3976 = icmp eq i32 %3960, 0
  %3977 = zext i1 %3976 to i8
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3977, i8* %3978, align 1
  %3979 = lshr i32 %3960, 31
  %3980 = trunc i32 %3979 to i8
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3980, i8* %3981, align 1
  %3982 = lshr i32 %3952, 31
  %3983 = lshr i32 %3959, 31
  %3984 = xor i32 %3983, %3982
  %3985 = xor i32 %3979, %3982
  %3986 = add i32 %3985, %3984
  %3987 = icmp eq i32 %3986, 2
  %3988 = zext i1 %3987 to i8
  %3989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3988, i8* %3989, align 1
  store %struct.Memory* %loadMem_418d75, %struct.Memory** %MEMORY
  %loadMem_418d78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3991 = getelementptr inbounds %struct.GPR, %struct.GPR* %3990, i32 0, i32 33
  %3992 = getelementptr inbounds %struct.Reg, %struct.Reg* %3991, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %3992 to i64*
  %3993 = load i64, i64* %PC.i727
  %3994 = add i64 %3993, 928
  %3995 = load i64, i64* %PC.i727
  %3996 = add i64 %3995, 6
  %3997 = load i64, i64* %PC.i727
  %3998 = add i64 %3997, 6
  store i64 %3998, i64* %PC.i727
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4000 = load i8, i8* %3999, align 1
  %4001 = icmp eq i8 %4000, 0
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4003 = load i8, i8* %4002, align 1
  %4004 = icmp ne i8 %4003, 0
  %4005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4006 = load i8, i8* %4005, align 1
  %4007 = icmp ne i8 %4006, 0
  %4008 = xor i1 %4004, %4007
  %4009 = xor i1 %4008, true
  %4010 = and i1 %4001, %4009
  %4011 = zext i1 %4010 to i8
  store i8 %4011, i8* %BRANCH_TAKEN, align 1
  %4012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4013 = select i1 %4010, i64 %3994, i64 %3996
  store i64 %4013, i64* %4012, align 8
  store %struct.Memory* %loadMem_418d78, %struct.Memory** %MEMORY
  %loadBr_418d78 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418d78 = icmp eq i8 %loadBr_418d78, 1
  br i1 %cmpBr_418d78, label %block_.L_419118, label %block_418d7e

block_418d7e:                                     ; preds = %block_.L_418d6e
  %loadMem_418d7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4015 = getelementptr inbounds %struct.GPR, %struct.GPR* %4014, i32 0, i32 33
  %4016 = getelementptr inbounds %struct.Reg, %struct.Reg* %4015, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %4016 to i64*
  %4017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4018 = getelementptr inbounds %struct.GPR, %struct.GPR* %4017, i32 0, i32 9
  %4019 = getelementptr inbounds %struct.Reg, %struct.Reg* %4018, i32 0, i32 0
  %RSI.i726 = bitcast %union.anon* %4019 to i64*
  %4020 = load i64, i64* %PC.i725
  %4021 = add i64 %4020, 5
  store i64 %4021, i64* %PC.i725
  store i64 32, i64* %RSI.i726, align 8
  store %struct.Memory* %loadMem_418d7e, %struct.Memory** %MEMORY
  %loadMem_418d83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4023 = getelementptr inbounds %struct.GPR, %struct.GPR* %4022, i32 0, i32 33
  %4024 = getelementptr inbounds %struct.Reg, %struct.Reg* %4023, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %4024 to i64*
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4026 = getelementptr inbounds %struct.GPR, %struct.GPR* %4025, i32 0, i32 1
  %4027 = getelementptr inbounds %struct.Reg, %struct.Reg* %4026, i32 0, i32 0
  %RAX.i724 = bitcast %union.anon* %4027 to i64*
  %4028 = load i64, i64* %PC.i723
  %4029 = add i64 %4028, 5
  store i64 %4029, i64* %PC.i723
  store i64 79, i64* %RAX.i724, align 8
  store %struct.Memory* %loadMem_418d83, %struct.Memory** %MEMORY
  %loadMem_418d88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4031 = getelementptr inbounds %struct.GPR, %struct.GPR* %4030, i32 0, i32 33
  %4032 = getelementptr inbounds %struct.Reg, %struct.Reg* %4031, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %4032 to i64*
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4034 = getelementptr inbounds %struct.GPR, %struct.GPR* %4033, i32 0, i32 1
  %4035 = getelementptr inbounds %struct.Reg, %struct.Reg* %4034, i32 0, i32 0
  %EAX.i721 = bitcast %union.anon* %4035 to i32*
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4037 = getelementptr inbounds %struct.GPR, %struct.GPR* %4036, i32 0, i32 7
  %4038 = getelementptr inbounds %struct.Reg, %struct.Reg* %4037, i32 0, i32 0
  %RDX.i722 = bitcast %union.anon* %4038 to i64*
  %4039 = load i32, i32* %EAX.i721
  %4040 = zext i32 %4039 to i64
  %4041 = load i64, i64* %PC.i720
  %4042 = add i64 %4041, 2
  store i64 %4042, i64* %PC.i720
  %4043 = and i64 %4040, 4294967295
  store i64 %4043, i64* %RDX.i722, align 8
  store %struct.Memory* %loadMem_418d88, %struct.Memory** %MEMORY
  %loadMem_418d8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4045 = getelementptr inbounds %struct.GPR, %struct.GPR* %4044, i32 0, i32 33
  %4046 = getelementptr inbounds %struct.Reg, %struct.Reg* %4045, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %4046 to i64*
  %4047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4048 = getelementptr inbounds %struct.GPR, %struct.GPR* %4047, i32 0, i32 11
  %4049 = getelementptr inbounds %struct.Reg, %struct.Reg* %4048, i32 0, i32 0
  %RDI.i718 = bitcast %union.anon* %4049 to i64*
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4051 = getelementptr inbounds %struct.GPR, %struct.GPR* %4050, i32 0, i32 15
  %4052 = getelementptr inbounds %struct.Reg, %struct.Reg* %4051, i32 0, i32 0
  %RBP.i719 = bitcast %union.anon* %4052 to i64*
  %4053 = load i64, i64* %RBP.i719
  %4054 = sub i64 %4053, 128
  %4055 = load i64, i64* %PC.i717
  %4056 = add i64 %4055, 4
  store i64 %4056, i64* %PC.i717
  store i64 %4054, i64* %RDI.i718, align 8
  store %struct.Memory* %loadMem_418d8a, %struct.Memory** %MEMORY
  %loadMem1_418d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4058 = getelementptr inbounds %struct.GPR, %struct.GPR* %4057, i32 0, i32 33
  %4059 = getelementptr inbounds %struct.Reg, %struct.Reg* %4058, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %4059 to i64*
  %4060 = load i64, i64* %PC.i716
  %4061 = add i64 %4060, -96446
  %4062 = load i64, i64* %PC.i716
  %4063 = add i64 %4062, 5
  %4064 = load i64, i64* %PC.i716
  %4065 = add i64 %4064, 5
  store i64 %4065, i64* %PC.i716
  %4066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4067 = load i64, i64* %4066, align 8
  %4068 = add i64 %4067, -8
  %4069 = inttoptr i64 %4068 to i64*
  store i64 %4063, i64* %4069
  store i64 %4068, i64* %4066, align 8
  %4070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4061, i64* %4070, align 8
  store %struct.Memory* %loadMem1_418d8e, %struct.Memory** %MEMORY
  %loadMem2_418d8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_418d8e = load i64, i64* %3
  %4071 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %loadMem2_418d8e)
  store %struct.Memory* %4071, %struct.Memory** %MEMORY
  %loadMem_418d93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4073 = getelementptr inbounds %struct.GPR, %struct.GPR* %4072, i32 0, i32 33
  %4074 = getelementptr inbounds %struct.Reg, %struct.Reg* %4073, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %4074 to i64*
  %4075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4076 = getelementptr inbounds %struct.GPR, %struct.GPR* %4075, i32 0, i32 1
  %4077 = getelementptr inbounds %struct.Reg, %struct.Reg* %4076, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %4077 to i64*
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4079 = getelementptr inbounds %struct.GPR, %struct.GPR* %4078, i32 0, i32 15
  %4080 = getelementptr inbounds %struct.Reg, %struct.Reg* %4079, i32 0, i32 0
  %RBP.i712 = bitcast %union.anon* %4080 to i64*
  %4081 = load i64, i64* %RBP.i712
  %4082 = sub i64 %4081, 32
  %4083 = load i64, i64* %PC.i710
  %4084 = add i64 %4083, 3
  store i64 %4084, i64* %PC.i710
  %4085 = inttoptr i64 %4082 to i32*
  %4086 = load i32, i32* %4085
  %4087 = zext i32 %4086 to i64
  store i64 %4087, i64* %RAX.i711, align 8
  store %struct.Memory* %loadMem_418d93, %struct.Memory** %MEMORY
  %loadMem_418d96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4089 = getelementptr inbounds %struct.GPR, %struct.GPR* %4088, i32 0, i32 33
  %4090 = getelementptr inbounds %struct.Reg, %struct.Reg* %4089, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %4090 to i64*
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4092 = getelementptr inbounds %struct.GPR, %struct.GPR* %4091, i32 0, i32 7
  %4093 = getelementptr inbounds %struct.Reg, %struct.Reg* %4092, i32 0, i32 0
  %RDX.i708 = bitcast %union.anon* %4093 to i64*
  %4094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4095 = getelementptr inbounds %struct.GPR, %struct.GPR* %4094, i32 0, i32 15
  %4096 = getelementptr inbounds %struct.Reg, %struct.Reg* %4095, i32 0, i32 0
  %RBP.i709 = bitcast %union.anon* %4096 to i64*
  %4097 = load i64, i64* %RBP.i709
  %4098 = sub i64 %4097, 16
  %4099 = load i64, i64* %PC.i707
  %4100 = add i64 %4099, 4
  store i64 %4100, i64* %PC.i707
  %4101 = inttoptr i64 %4098 to i64*
  %4102 = load i64, i64* %4101
  store i64 %4102, i64* %RDX.i708, align 8
  store %struct.Memory* %loadMem_418d96, %struct.Memory** %MEMORY
  %loadMem_418d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4104 = getelementptr inbounds %struct.GPR, %struct.GPR* %4103, i32 0, i32 33
  %4105 = getelementptr inbounds %struct.Reg, %struct.Reg* %4104, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %4105 to i64*
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4107 = getelementptr inbounds %struct.GPR, %struct.GPR* %4106, i32 0, i32 1
  %4108 = getelementptr inbounds %struct.Reg, %struct.Reg* %4107, i32 0, i32 0
  %RAX.i705 = bitcast %union.anon* %4108 to i64*
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4110 = getelementptr inbounds %struct.GPR, %struct.GPR* %4109, i32 0, i32 7
  %4111 = getelementptr inbounds %struct.Reg, %struct.Reg* %4110, i32 0, i32 0
  %RDX.i706 = bitcast %union.anon* %4111 to i64*
  %4112 = load i64, i64* %RAX.i705
  %4113 = load i64, i64* %RDX.i706
  %4114 = add i64 %4113, 8
  %4115 = load i64, i64* %PC.i704
  %4116 = add i64 %4115, 3
  store i64 %4116, i64* %PC.i704
  %4117 = trunc i64 %4112 to i32
  %4118 = inttoptr i64 %4114 to i32*
  %4119 = load i32, i32* %4118
  %4120 = sub i32 %4117, %4119
  %4121 = zext i32 %4120 to i64
  store i64 %4121, i64* %RAX.i705, align 8
  %4122 = icmp ult i32 %4117, %4119
  %4123 = zext i1 %4122 to i8
  %4124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4123, i8* %4124, align 1
  %4125 = and i32 %4120, 255
  %4126 = call i32 @llvm.ctpop.i32(i32 %4125)
  %4127 = trunc i32 %4126 to i8
  %4128 = and i8 %4127, 1
  %4129 = xor i8 %4128, 1
  %4130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4129, i8* %4130, align 1
  %4131 = xor i32 %4119, %4117
  %4132 = xor i32 %4131, %4120
  %4133 = lshr i32 %4132, 4
  %4134 = trunc i32 %4133 to i8
  %4135 = and i8 %4134, 1
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4135, i8* %4136, align 1
  %4137 = icmp eq i32 %4120, 0
  %4138 = zext i1 %4137 to i8
  %4139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4138, i8* %4139, align 1
  %4140 = lshr i32 %4120, 31
  %4141 = trunc i32 %4140 to i8
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4141, i8* %4142, align 1
  %4143 = lshr i32 %4117, 31
  %4144 = lshr i32 %4119, 31
  %4145 = xor i32 %4144, %4143
  %4146 = xor i32 %4140, %4143
  %4147 = add i32 %4146, %4145
  %4148 = icmp eq i32 %4147, 2
  %4149 = zext i1 %4148 to i8
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4149, i8* %4150, align 1
  store %struct.Memory* %loadMem_418d9a, %struct.Memory** %MEMORY
  %loadMem_418d9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4152 = getelementptr inbounds %struct.GPR, %struct.GPR* %4151, i32 0, i32 33
  %4153 = getelementptr inbounds %struct.Reg, %struct.Reg* %4152, i32 0, i32 0
  %PC.i701 = bitcast %union.anon* %4153 to i64*
  %4154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4155 = getelementptr inbounds %struct.GPR, %struct.GPR* %4154, i32 0, i32 1
  %4156 = getelementptr inbounds %struct.Reg, %struct.Reg* %4155, i32 0, i32 0
  %EAX.i702 = bitcast %union.anon* %4156 to i32*
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4158 = getelementptr inbounds %struct.GPR, %struct.GPR* %4157, i32 0, i32 15
  %4159 = getelementptr inbounds %struct.Reg, %struct.Reg* %4158, i32 0, i32 0
  %RBP.i703 = bitcast %union.anon* %4159 to i64*
  %4160 = load i64, i64* %RBP.i703
  %4161 = sub i64 %4160, 36
  %4162 = load i32, i32* %EAX.i702
  %4163 = zext i32 %4162 to i64
  %4164 = load i64, i64* %PC.i701
  %4165 = add i64 %4164, 3
  store i64 %4165, i64* %PC.i701
  %4166 = inttoptr i64 %4161 to i32*
  store i32 %4162, i32* %4166
  store %struct.Memory* %loadMem_418d9d, %struct.Memory** %MEMORY
  %loadMem_418da0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4168 = getelementptr inbounds %struct.GPR, %struct.GPR* %4167, i32 0, i32 33
  %4169 = getelementptr inbounds %struct.Reg, %struct.Reg* %4168, i32 0, i32 0
  %PC.i698 = bitcast %union.anon* %4169 to i64*
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4171 = getelementptr inbounds %struct.GPR, %struct.GPR* %4170, i32 0, i32 1
  %4172 = getelementptr inbounds %struct.Reg, %struct.Reg* %4171, i32 0, i32 0
  %RAX.i699 = bitcast %union.anon* %4172 to i64*
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4174 = getelementptr inbounds %struct.GPR, %struct.GPR* %4173, i32 0, i32 15
  %4175 = getelementptr inbounds %struct.Reg, %struct.Reg* %4174, i32 0, i32 0
  %RBP.i700 = bitcast %union.anon* %4175 to i64*
  %4176 = load i64, i64* %RBP.i700
  %4177 = sub i64 %4176, 32
  %4178 = load i64, i64* %PC.i698
  %4179 = add i64 %4178, 3
  store i64 %4179, i64* %PC.i698
  %4180 = inttoptr i64 %4177 to i32*
  %4181 = load i32, i32* %4180
  %4182 = zext i32 %4181 to i64
  store i64 %4182, i64* %RAX.i699, align 8
  store %struct.Memory* %loadMem_418da0, %struct.Memory** %MEMORY
  %loadMem_418da3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4184 = getelementptr inbounds %struct.GPR, %struct.GPR* %4183, i32 0, i32 33
  %4185 = getelementptr inbounds %struct.Reg, %struct.Reg* %4184, i32 0, i32 0
  %PC.i695 = bitcast %union.anon* %4185 to i64*
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4187 = getelementptr inbounds %struct.GPR, %struct.GPR* %4186, i32 0, i32 1
  %4188 = getelementptr inbounds %struct.Reg, %struct.Reg* %4187, i32 0, i32 0
  %EAX.i696 = bitcast %union.anon* %4188 to i32*
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4190 = getelementptr inbounds %struct.GPR, %struct.GPR* %4189, i32 0, i32 15
  %4191 = getelementptr inbounds %struct.Reg, %struct.Reg* %4190, i32 0, i32 0
  %RBP.i697 = bitcast %union.anon* %4191 to i64*
  %4192 = load i32, i32* %EAX.i696
  %4193 = zext i32 %4192 to i64
  %4194 = load i64, i64* %RBP.i697
  %4195 = sub i64 %4194, 136
  %4196 = load i64, i64* %PC.i695
  %4197 = add i64 %4196, 6
  store i64 %4197, i64* %PC.i695
  %4198 = inttoptr i64 %4195 to i32*
  %4199 = load i32, i32* %4198
  %4200 = sub i32 %4192, %4199
  %4201 = icmp ult i32 %4192, %4199
  %4202 = zext i1 %4201 to i8
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4202, i8* %4203, align 1
  %4204 = and i32 %4200, 255
  %4205 = call i32 @llvm.ctpop.i32(i32 %4204)
  %4206 = trunc i32 %4205 to i8
  %4207 = and i8 %4206, 1
  %4208 = xor i8 %4207, 1
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4208, i8* %4209, align 1
  %4210 = xor i32 %4199, %4192
  %4211 = xor i32 %4210, %4200
  %4212 = lshr i32 %4211, 4
  %4213 = trunc i32 %4212 to i8
  %4214 = and i8 %4213, 1
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4214, i8* %4215, align 1
  %4216 = icmp eq i32 %4200, 0
  %4217 = zext i1 %4216 to i8
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4217, i8* %4218, align 1
  %4219 = lshr i32 %4200, 31
  %4220 = trunc i32 %4219 to i8
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4220, i8* %4221, align 1
  %4222 = lshr i32 %4192, 31
  %4223 = lshr i32 %4199, 31
  %4224 = xor i32 %4223, %4222
  %4225 = xor i32 %4219, %4222
  %4226 = add i32 %4225, %4224
  %4227 = icmp eq i32 %4226, 2
  %4228 = zext i1 %4227 to i8
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4228, i8* %4229, align 1
  store %struct.Memory* %loadMem_418da3, %struct.Memory** %MEMORY
  %loadMem_418da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4231 = getelementptr inbounds %struct.GPR, %struct.GPR* %4230, i32 0, i32 33
  %4232 = getelementptr inbounds %struct.Reg, %struct.Reg* %4231, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %4232 to i64*
  %4233 = load i64, i64* %PC.i694
  %4234 = add i64 %4233, 11
  %4235 = load i64, i64* %PC.i694
  %4236 = add i64 %4235, 6
  %4237 = load i64, i64* %PC.i694
  %4238 = add i64 %4237, 6
  store i64 %4238, i64* %PC.i694
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4240 = load i8, i8* %4239, align 1
  %4241 = icmp ne i8 %4240, 0
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4243 = load i8, i8* %4242, align 1
  %4244 = icmp ne i8 %4243, 0
  %4245 = xor i1 %4241, %4244
  %4246 = xor i1 %4245, true
  %4247 = zext i1 %4246 to i8
  store i8 %4247, i8* %BRANCH_TAKEN, align 1
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4249 = select i1 %4245, i64 %4236, i64 %4234
  store i64 %4249, i64* %4248, align 8
  store %struct.Memory* %loadMem_418da9, %struct.Memory** %MEMORY
  %loadBr_418da9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418da9 = icmp eq i8 %loadBr_418da9, 1
  br i1 %cmpBr_418da9, label %block_.L_418db4, label %block_418daf

block_418daf:                                     ; preds = %block_418d7e
  %loadMem_418daf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4251 = getelementptr inbounds %struct.GPR, %struct.GPR* %4250, i32 0, i32 33
  %4252 = getelementptr inbounds %struct.Reg, %struct.Reg* %4251, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %4252 to i64*
  %4253 = load i64, i64* %PC.i693
  %4254 = add i64 %4253, 859
  %4255 = load i64, i64* %PC.i693
  %4256 = add i64 %4255, 5
  store i64 %4256, i64* %PC.i693
  %4257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4254, i64* %4257, align 8
  store %struct.Memory* %loadMem_418daf, %struct.Memory** %MEMORY
  br label %block_.L_41910a

block_.L_418db4:                                  ; preds = %block_418d7e
  %loadMem_418db4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4259 = getelementptr inbounds %struct.GPR, %struct.GPR* %4258, i32 0, i32 33
  %4260 = getelementptr inbounds %struct.Reg, %struct.Reg* %4259, i32 0, i32 0
  %PC.i690 = bitcast %union.anon* %4260 to i64*
  %4261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4262 = getelementptr inbounds %struct.GPR, %struct.GPR* %4261, i32 0, i32 1
  %4263 = getelementptr inbounds %struct.Reg, %struct.Reg* %4262, i32 0, i32 0
  %RAX.i691 = bitcast %union.anon* %4263 to i64*
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4265 = getelementptr inbounds %struct.GPR, %struct.GPR* %4264, i32 0, i32 15
  %4266 = getelementptr inbounds %struct.Reg, %struct.Reg* %4265, i32 0, i32 0
  %RBP.i692 = bitcast %union.anon* %4266 to i64*
  %4267 = load i64, i64* %RBP.i692
  %4268 = sub i64 %4267, 32
  %4269 = load i64, i64* %PC.i690
  %4270 = add i64 %4269, 3
  store i64 %4270, i64* %PC.i690
  %4271 = inttoptr i64 %4268 to i32*
  %4272 = load i32, i32* %4271
  %4273 = zext i32 %4272 to i64
  store i64 %4273, i64* %RAX.i691, align 8
  store %struct.Memory* %loadMem_418db4, %struct.Memory** %MEMORY
  %loadMem_418db7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4275 = getelementptr inbounds %struct.GPR, %struct.GPR* %4274, i32 0, i32 33
  %4276 = getelementptr inbounds %struct.Reg, %struct.Reg* %4275, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %4276 to i64*
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4278 = getelementptr inbounds %struct.GPR, %struct.GPR* %4277, i32 0, i32 1
  %4279 = getelementptr inbounds %struct.Reg, %struct.Reg* %4278, i32 0, i32 0
  %EAX.i688 = bitcast %union.anon* %4279 to i32*
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4281 = getelementptr inbounds %struct.GPR, %struct.GPR* %4280, i32 0, i32 15
  %4282 = getelementptr inbounds %struct.Reg, %struct.Reg* %4281, i32 0, i32 0
  %RBP.i689 = bitcast %union.anon* %4282 to i64*
  %4283 = load i32, i32* %EAX.i688
  %4284 = zext i32 %4283 to i64
  %4285 = load i64, i64* %RBP.i689
  %4286 = sub i64 %4285, 144
  %4287 = load i64, i64* %PC.i687
  %4288 = add i64 %4287, 6
  store i64 %4288, i64* %PC.i687
  %4289 = inttoptr i64 %4286 to i32*
  %4290 = load i32, i32* %4289
  %4291 = sub i32 %4283, %4290
  %4292 = icmp ult i32 %4283, %4290
  %4293 = zext i1 %4292 to i8
  %4294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4293, i8* %4294, align 1
  %4295 = and i32 %4291, 255
  %4296 = call i32 @llvm.ctpop.i32(i32 %4295)
  %4297 = trunc i32 %4296 to i8
  %4298 = and i8 %4297, 1
  %4299 = xor i8 %4298, 1
  %4300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4299, i8* %4300, align 1
  %4301 = xor i32 %4290, %4283
  %4302 = xor i32 %4301, %4291
  %4303 = lshr i32 %4302, 4
  %4304 = trunc i32 %4303 to i8
  %4305 = and i8 %4304, 1
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4305, i8* %4306, align 1
  %4307 = icmp eq i32 %4291, 0
  %4308 = zext i1 %4307 to i8
  %4309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4308, i8* %4309, align 1
  %4310 = lshr i32 %4291, 31
  %4311 = trunc i32 %4310 to i8
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4311, i8* %4312, align 1
  %4313 = lshr i32 %4283, 31
  %4314 = lshr i32 %4290, 31
  %4315 = xor i32 %4314, %4313
  %4316 = xor i32 %4310, %4313
  %4317 = add i32 %4316, %4315
  %4318 = icmp eq i32 %4317, 2
  %4319 = zext i1 %4318 to i8
  %4320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4319, i8* %4320, align 1
  store %struct.Memory* %loadMem_418db7, %struct.Memory** %MEMORY
  %loadMem_418dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %4321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4322 = getelementptr inbounds %struct.GPR, %struct.GPR* %4321, i32 0, i32 33
  %4323 = getelementptr inbounds %struct.Reg, %struct.Reg* %4322, i32 0, i32 0
  %PC.i686 = bitcast %union.anon* %4323 to i64*
  %4324 = load i64, i64* %PC.i686
  %4325 = add i64 %4324, 11
  %4326 = load i64, i64* %PC.i686
  %4327 = add i64 %4326, 6
  %4328 = load i64, i64* %PC.i686
  %4329 = add i64 %4328, 6
  store i64 %4329, i64* %PC.i686
  %4330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4331 = load i8, i8* %4330, align 1
  %4332 = icmp ne i8 %4331, 0
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4334 = load i8, i8* %4333, align 1
  %4335 = icmp ne i8 %4334, 0
  %4336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4337 = load i8, i8* %4336, align 1
  %4338 = icmp ne i8 %4337, 0
  %4339 = xor i1 %4335, %4338
  %4340 = or i1 %4332, %4339
  %4341 = zext i1 %4340 to i8
  store i8 %4341, i8* %BRANCH_TAKEN, align 1
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4343 = select i1 %4340, i64 %4325, i64 %4327
  store i64 %4343, i64* %4342, align 8
  store %struct.Memory* %loadMem_418dbd, %struct.Memory** %MEMORY
  %loadBr_418dbd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418dbd = icmp eq i8 %loadBr_418dbd, 1
  br i1 %cmpBr_418dbd, label %block_.L_418dc8, label %block_418dc3

block_418dc3:                                     ; preds = %block_.L_418db4
  %loadMem_418dc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4345 = getelementptr inbounds %struct.GPR, %struct.GPR* %4344, i32 0, i32 33
  %4346 = getelementptr inbounds %struct.Reg, %struct.Reg* %4345, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %4346 to i64*
  %4347 = load i64, i64* %PC.i685
  %4348 = add i64 %4347, 839
  %4349 = load i64, i64* %PC.i685
  %4350 = add i64 %4349, 5
  store i64 %4350, i64* %PC.i685
  %4351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4348, i64* %4351, align 8
  store %struct.Memory* %loadMem_418dc3, %struct.Memory** %MEMORY
  br label %block_.L_41910a

block_.L_418dc8:                                  ; preds = %block_.L_418db4
  %loadMem_418dc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4353 = getelementptr inbounds %struct.GPR, %struct.GPR* %4352, i32 0, i32 33
  %4354 = getelementptr inbounds %struct.Reg, %struct.Reg* %4353, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %4354 to i64*
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4356 = getelementptr inbounds %struct.GPR, %struct.GPR* %4355, i32 0, i32 1
  %4357 = getelementptr inbounds %struct.Reg, %struct.Reg* %4356, i32 0, i32 0
  %RAX.i683 = bitcast %union.anon* %4357 to i64*
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4359 = getelementptr inbounds %struct.GPR, %struct.GPR* %4358, i32 0, i32 15
  %4360 = getelementptr inbounds %struct.Reg, %struct.Reg* %4359, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %4360 to i64*
  %4361 = load i64, i64* %RBP.i684
  %4362 = sub i64 %4361, 32
  %4363 = load i64, i64* %PC.i682
  %4364 = add i64 %4363, 3
  store i64 %4364, i64* %PC.i682
  %4365 = inttoptr i64 %4362 to i32*
  %4366 = load i32, i32* %4365
  %4367 = zext i32 %4366 to i64
  store i64 %4367, i64* %RAX.i683, align 8
  store %struct.Memory* %loadMem_418dc8, %struct.Memory** %MEMORY
  %loadMem_418dcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4369 = getelementptr inbounds %struct.GPR, %struct.GPR* %4368, i32 0, i32 33
  %4370 = getelementptr inbounds %struct.Reg, %struct.Reg* %4369, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %4370 to i64*
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4372 = getelementptr inbounds %struct.GPR, %struct.GPR* %4371, i32 0, i32 1
  %4373 = getelementptr inbounds %struct.Reg, %struct.Reg* %4372, i32 0, i32 0
  %EAX.i680 = bitcast %union.anon* %4373 to i32*
  %4374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4375 = getelementptr inbounds %struct.GPR, %struct.GPR* %4374, i32 0, i32 15
  %4376 = getelementptr inbounds %struct.Reg, %struct.Reg* %4375, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %4376 to i64*
  %4377 = load i32, i32* %EAX.i680
  %4378 = zext i32 %4377 to i64
  %4379 = load i64, i64* %RBP.i681
  %4380 = sub i64 %4379, 136
  %4381 = load i64, i64* %PC.i679
  %4382 = add i64 %4381, 6
  store i64 %4382, i64* %PC.i679
  %4383 = inttoptr i64 %4380 to i32*
  %4384 = load i32, i32* %4383
  %4385 = sub i32 %4377, %4384
  %4386 = icmp ult i32 %4377, %4384
  %4387 = zext i1 %4386 to i8
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4387, i8* %4388, align 1
  %4389 = and i32 %4385, 255
  %4390 = call i32 @llvm.ctpop.i32(i32 %4389)
  %4391 = trunc i32 %4390 to i8
  %4392 = and i8 %4391, 1
  %4393 = xor i8 %4392, 1
  %4394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4393, i8* %4394, align 1
  %4395 = xor i32 %4384, %4377
  %4396 = xor i32 %4395, %4385
  %4397 = lshr i32 %4396, 4
  %4398 = trunc i32 %4397 to i8
  %4399 = and i8 %4398, 1
  %4400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4399, i8* %4400, align 1
  %4401 = icmp eq i32 %4385, 0
  %4402 = zext i1 %4401 to i8
  %4403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4402, i8* %4403, align 1
  %4404 = lshr i32 %4385, 31
  %4405 = trunc i32 %4404 to i8
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4405, i8* %4406, align 1
  %4407 = lshr i32 %4377, 31
  %4408 = lshr i32 %4384, 31
  %4409 = xor i32 %4408, %4407
  %4410 = xor i32 %4404, %4407
  %4411 = add i32 %4410, %4409
  %4412 = icmp eq i32 %4411, 2
  %4413 = zext i1 %4412 to i8
  %4414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4413, i8* %4414, align 1
  store %struct.Memory* %loadMem_418dcb, %struct.Memory** %MEMORY
  %loadMem_418dd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4416 = getelementptr inbounds %struct.GPR, %struct.GPR* %4415, i32 0, i32 33
  %4417 = getelementptr inbounds %struct.Reg, %struct.Reg* %4416, i32 0, i32 0
  %PC.i678 = bitcast %union.anon* %4417 to i64*
  %4418 = load i64, i64* %PC.i678
  %4419 = add i64 %4418, 220
  %4420 = load i64, i64* %PC.i678
  %4421 = add i64 %4420, 6
  %4422 = load i64, i64* %PC.i678
  %4423 = add i64 %4422, 6
  store i64 %4423, i64* %PC.i678
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4425 = load i8, i8* %4424, align 1
  %4426 = icmp eq i8 %4425, 0
  %4427 = zext i1 %4426 to i8
  store i8 %4427, i8* %BRANCH_TAKEN, align 1
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4429 = select i1 %4426, i64 %4419, i64 %4421
  store i64 %4429, i64* %4428, align 8
  store %struct.Memory* %loadMem_418dd1, %struct.Memory** %MEMORY
  %loadBr_418dd1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418dd1 = icmp eq i8 %loadBr_418dd1, 1
  br i1 %cmpBr_418dd1, label %block_.L_418ead, label %block_418dd7

block_418dd7:                                     ; preds = %block_.L_418dc8
  %loadMem_418dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4431 = getelementptr inbounds %struct.GPR, %struct.GPR* %4430, i32 0, i32 33
  %4432 = getelementptr inbounds %struct.Reg, %struct.Reg* %4431, i32 0, i32 0
  %PC.i675 = bitcast %union.anon* %4432 to i64*
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4434 = getelementptr inbounds %struct.GPR, %struct.GPR* %4433, i32 0, i32 1
  %4435 = getelementptr inbounds %struct.Reg, %struct.Reg* %4434, i32 0, i32 0
  %RAX.i676 = bitcast %union.anon* %4435 to i64*
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4437 = getelementptr inbounds %struct.GPR, %struct.GPR* %4436, i32 0, i32 15
  %4438 = getelementptr inbounds %struct.Reg, %struct.Reg* %4437, i32 0, i32 0
  %RBP.i677 = bitcast %union.anon* %4438 to i64*
  %4439 = load i64, i64* %RBP.i677
  %4440 = sub i64 %4439, 32
  %4441 = load i64, i64* %PC.i675
  %4442 = add i64 %4441, 3
  store i64 %4442, i64* %PC.i675
  %4443 = inttoptr i64 %4440 to i32*
  %4444 = load i32, i32* %4443
  %4445 = zext i32 %4444 to i64
  store i64 %4445, i64* %RAX.i676, align 8
  store %struct.Memory* %loadMem_418dd7, %struct.Memory** %MEMORY
  %loadMem_418dda = load %struct.Memory*, %struct.Memory** %MEMORY
  %4446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4447 = getelementptr inbounds %struct.GPR, %struct.GPR* %4446, i32 0, i32 33
  %4448 = getelementptr inbounds %struct.Reg, %struct.Reg* %4447, i32 0, i32 0
  %PC.i672 = bitcast %union.anon* %4448 to i64*
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4450 = getelementptr inbounds %struct.GPR, %struct.GPR* %4449, i32 0, i32 5
  %4451 = getelementptr inbounds %struct.Reg, %struct.Reg* %4450, i32 0, i32 0
  %RCX.i673 = bitcast %union.anon* %4451 to i64*
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4453 = getelementptr inbounds %struct.GPR, %struct.GPR* %4452, i32 0, i32 15
  %4454 = getelementptr inbounds %struct.Reg, %struct.Reg* %4453, i32 0, i32 0
  %RBP.i674 = bitcast %union.anon* %4454 to i64*
  %4455 = load i64, i64* %RBP.i674
  %4456 = sub i64 %4455, 16
  %4457 = load i64, i64* %PC.i672
  %4458 = add i64 %4457, 4
  store i64 %4458, i64* %PC.i672
  %4459 = inttoptr i64 %4456 to i64*
  %4460 = load i64, i64* %4459
  store i64 %4460, i64* %RCX.i673, align 8
  store %struct.Memory* %loadMem_418dda, %struct.Memory** %MEMORY
  %loadMem_418dde = load %struct.Memory*, %struct.Memory** %MEMORY
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4462 = getelementptr inbounds %struct.GPR, %struct.GPR* %4461, i32 0, i32 33
  %4463 = getelementptr inbounds %struct.Reg, %struct.Reg* %4462, i32 0, i32 0
  %PC.i669 = bitcast %union.anon* %4463 to i64*
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4465 = getelementptr inbounds %struct.GPR, %struct.GPR* %4464, i32 0, i32 1
  %4466 = getelementptr inbounds %struct.Reg, %struct.Reg* %4465, i32 0, i32 0
  %EAX.i670 = bitcast %union.anon* %4466 to i32*
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4468 = getelementptr inbounds %struct.GPR, %struct.GPR* %4467, i32 0, i32 5
  %4469 = getelementptr inbounds %struct.Reg, %struct.Reg* %4468, i32 0, i32 0
  %RCX.i671 = bitcast %union.anon* %4469 to i64*
  %4470 = load i32, i32* %EAX.i670
  %4471 = zext i32 %4470 to i64
  %4472 = load i64, i64* %RCX.i671
  %4473 = add i64 %4472, 20
  %4474 = load i64, i64* %PC.i669
  %4475 = add i64 %4474, 3
  store i64 %4475, i64* %PC.i669
  %4476 = inttoptr i64 %4473 to i32*
  %4477 = load i32, i32* %4476
  %4478 = sub i32 %4470, %4477
  %4479 = icmp ult i32 %4470, %4477
  %4480 = zext i1 %4479 to i8
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4480, i8* %4481, align 1
  %4482 = and i32 %4478, 255
  %4483 = call i32 @llvm.ctpop.i32(i32 %4482)
  %4484 = trunc i32 %4483 to i8
  %4485 = and i8 %4484, 1
  %4486 = xor i8 %4485, 1
  %4487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4486, i8* %4487, align 1
  %4488 = xor i32 %4477, %4470
  %4489 = xor i32 %4488, %4478
  %4490 = lshr i32 %4489, 4
  %4491 = trunc i32 %4490 to i8
  %4492 = and i8 %4491, 1
  %4493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4492, i8* %4493, align 1
  %4494 = icmp eq i32 %4478, 0
  %4495 = zext i1 %4494 to i8
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4495, i8* %4496, align 1
  %4497 = lshr i32 %4478, 31
  %4498 = trunc i32 %4497 to i8
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4498, i8* %4499, align 1
  %4500 = lshr i32 %4470, 31
  %4501 = lshr i32 %4477, 31
  %4502 = xor i32 %4501, %4500
  %4503 = xor i32 %4497, %4500
  %4504 = add i32 %4503, %4502
  %4505 = icmp eq i32 %4504, 2
  %4506 = zext i1 %4505 to i8
  %4507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4506, i8* %4507, align 1
  store %struct.Memory* %loadMem_418dde, %struct.Memory** %MEMORY
  %loadMem_418de1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4509 = getelementptr inbounds %struct.GPR, %struct.GPR* %4508, i32 0, i32 33
  %4510 = getelementptr inbounds %struct.Reg, %struct.Reg* %4509, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %4510 to i64*
  %4511 = load i64, i64* %PC.i668
  %4512 = add i64 %4511, 204
  %4513 = load i64, i64* %PC.i668
  %4514 = add i64 %4513, 6
  %4515 = load i64, i64* %PC.i668
  %4516 = add i64 %4515, 6
  store i64 %4516, i64* %PC.i668
  %4517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4518 = load i8, i8* %4517, align 1
  store i8 %4518, i8* %BRANCH_TAKEN, align 1
  %4519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4520 = icmp ne i8 %4518, 0
  %4521 = select i1 %4520, i64 %4512, i64 %4514
  store i64 %4521, i64* %4519, align 8
  store %struct.Memory* %loadMem_418de1, %struct.Memory** %MEMORY
  %loadBr_418de1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418de1 = icmp eq i8 %loadBr_418de1, 1
  br i1 %cmpBr_418de1, label %block_.L_418ead, label %block_418de7

block_418de7:                                     ; preds = %block_418dd7
  %loadMem_418de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4523 = getelementptr inbounds %struct.GPR, %struct.GPR* %4522, i32 0, i32 33
  %4524 = getelementptr inbounds %struct.Reg, %struct.Reg* %4523, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %4524 to i64*
  %4525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4526 = getelementptr inbounds %struct.GPR, %struct.GPR* %4525, i32 0, i32 9
  %4527 = getelementptr inbounds %struct.Reg, %struct.Reg* %4526, i32 0, i32 0
  %RSI.i667 = bitcast %union.anon* %4527 to i64*
  %4528 = load i64, i64* %PC.i666
  %4529 = add i64 %4528, 10
  store i64 %4529, i64* %PC.i666
  store i64 ptrtoint (%G__0x456fc6_type* @G__0x456fc6 to i64), i64* %RSI.i667, align 8
  store %struct.Memory* %loadMem_418de7, %struct.Memory** %MEMORY
  %loadMem_418df1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4531 = getelementptr inbounds %struct.GPR, %struct.GPR* %4530, i32 0, i32 33
  %4532 = getelementptr inbounds %struct.Reg, %struct.Reg* %4531, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %4532 to i64*
  %4533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4534 = getelementptr inbounds %struct.GPR, %struct.GPR* %4533, i32 0, i32 17
  %4535 = getelementptr inbounds %struct.Reg, %struct.Reg* %4534, i32 0, i32 0
  %R8.i665 = bitcast %union.anon* %4535 to i64*
  %4536 = load i64, i64* %PC.i664
  %4537 = add i64 %4536, 10
  store i64 %4537, i64* %PC.i664
  store i64 ptrtoint (%G__0x456fc4_type* @G__0x456fc4 to i64), i64* %R8.i665, align 8
  store %struct.Memory* %loadMem_418df1, %struct.Memory** %MEMORY
  %loadMem_418dfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4539 = getelementptr inbounds %struct.GPR, %struct.GPR* %4538, i32 0, i32 33
  %4540 = getelementptr inbounds %struct.Reg, %struct.Reg* %4539, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %4540 to i64*
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4542 = getelementptr inbounds %struct.GPR, %struct.GPR* %4541, i32 0, i32 11
  %4543 = getelementptr inbounds %struct.Reg, %struct.Reg* %4542, i32 0, i32 0
  %RDI.i662 = bitcast %union.anon* %4543 to i64*
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4545 = getelementptr inbounds %struct.GPR, %struct.GPR* %4544, i32 0, i32 15
  %4546 = getelementptr inbounds %struct.Reg, %struct.Reg* %4545, i32 0, i32 0
  %RBP.i663 = bitcast %union.anon* %4546 to i64*
  %4547 = load i64, i64* %RBP.i663
  %4548 = sub i64 %4547, 128
  %4549 = load i64, i64* %PC.i661
  %4550 = add i64 %4549, 4
  store i64 %4550, i64* %PC.i661
  store i64 %4548, i64* %RDI.i662, align 8
  store %struct.Memory* %loadMem_418dfb, %struct.Memory** %MEMORY
  %loadMem_418dff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4552 = getelementptr inbounds %struct.GPR, %struct.GPR* %4551, i32 0, i32 33
  %4553 = getelementptr inbounds %struct.Reg, %struct.Reg* %4552, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %4553 to i64*
  %4554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4555 = getelementptr inbounds %struct.GPR, %struct.GPR* %4554, i32 0, i32 1
  %4556 = getelementptr inbounds %struct.Reg, %struct.Reg* %4555, i32 0, i32 0
  %RAX.i659 = bitcast %union.anon* %4556 to i64*
  %4557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4558 = getelementptr inbounds %struct.GPR, %struct.GPR* %4557, i32 0, i32 15
  %4559 = getelementptr inbounds %struct.Reg, %struct.Reg* %4558, i32 0, i32 0
  %RBP.i660 = bitcast %union.anon* %4559 to i64*
  %4560 = load i64, i64* %RBP.i660
  %4561 = sub i64 %4560, 32
  %4562 = load i64, i64* %PC.i658
  %4563 = add i64 %4562, 3
  store i64 %4563, i64* %PC.i658
  %4564 = inttoptr i64 %4561 to i32*
  %4565 = load i32, i32* %4564
  %4566 = zext i32 %4565 to i64
  store i64 %4566, i64* %RAX.i659, align 8
  store %struct.Memory* %loadMem_418dff, %struct.Memory** %MEMORY
  %loadMem_418e02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4568 = getelementptr inbounds %struct.GPR, %struct.GPR* %4567, i32 0, i32 33
  %4569 = getelementptr inbounds %struct.Reg, %struct.Reg* %4568, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %4569 to i64*
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4571 = getelementptr inbounds %struct.GPR, %struct.GPR* %4570, i32 0, i32 1
  %4572 = getelementptr inbounds %struct.Reg, %struct.Reg* %4571, i32 0, i32 0
  %RAX.i657 = bitcast %union.anon* %4572 to i64*
  %4573 = load i64, i64* %RAX.i657
  %4574 = load i64, i64* %PC.i656
  %4575 = add i64 %4574, 3
  store i64 %4575, i64* %PC.i656
  %4576 = trunc i64 %4573 to i32
  %4577 = add i32 1, %4576
  %4578 = zext i32 %4577 to i64
  store i64 %4578, i64* %RAX.i657, align 8
  %4579 = icmp ult i32 %4577, %4576
  %4580 = icmp ult i32 %4577, 1
  %4581 = or i1 %4579, %4580
  %4582 = zext i1 %4581 to i8
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4582, i8* %4583, align 1
  %4584 = and i32 %4577, 255
  %4585 = call i32 @llvm.ctpop.i32(i32 %4584)
  %4586 = trunc i32 %4585 to i8
  %4587 = and i8 %4586, 1
  %4588 = xor i8 %4587, 1
  %4589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4588, i8* %4589, align 1
  %4590 = xor i64 1, %4573
  %4591 = trunc i64 %4590 to i32
  %4592 = xor i32 %4591, %4577
  %4593 = lshr i32 %4592, 4
  %4594 = trunc i32 %4593 to i8
  %4595 = and i8 %4594, 1
  %4596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4595, i8* %4596, align 1
  %4597 = icmp eq i32 %4577, 0
  %4598 = zext i1 %4597 to i8
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4598, i8* %4599, align 1
  %4600 = lshr i32 %4577, 31
  %4601 = trunc i32 %4600 to i8
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4601, i8* %4602, align 1
  %4603 = lshr i32 %4576, 31
  %4604 = xor i32 %4600, %4603
  %4605 = add i32 %4604, %4600
  %4606 = icmp eq i32 %4605, 2
  %4607 = zext i1 %4606 to i8
  %4608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4607, i8* %4608, align 1
  store %struct.Memory* %loadMem_418e02, %struct.Memory** %MEMORY
  %loadMem_418e05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4610 = getelementptr inbounds %struct.GPR, %struct.GPR* %4609, i32 0, i32 33
  %4611 = getelementptr inbounds %struct.Reg, %struct.Reg* %4610, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %4611 to i64*
  %4612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4613 = getelementptr inbounds %struct.GPR, %struct.GPR* %4612, i32 0, i32 5
  %4614 = getelementptr inbounds %struct.Reg, %struct.Reg* %4613, i32 0, i32 0
  %RCX.i654 = bitcast %union.anon* %4614 to i64*
  %4615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4616 = getelementptr inbounds %struct.GPR, %struct.GPR* %4615, i32 0, i32 15
  %4617 = getelementptr inbounds %struct.Reg, %struct.Reg* %4616, i32 0, i32 0
  %RBP.i655 = bitcast %union.anon* %4617 to i64*
  %4618 = load i64, i64* %RBP.i655
  %4619 = sub i64 %4618, 140
  %4620 = load i64, i64* %PC.i653
  %4621 = add i64 %4620, 6
  store i64 %4621, i64* %PC.i653
  %4622 = inttoptr i64 %4619 to i32*
  %4623 = load i32, i32* %4622
  %4624 = zext i32 %4623 to i64
  store i64 %4624, i64* %RCX.i654, align 8
  store %struct.Memory* %loadMem_418e05, %struct.Memory** %MEMORY
  %loadMem_418e0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4626 = getelementptr inbounds %struct.GPR, %struct.GPR* %4625, i32 0, i32 33
  %4627 = getelementptr inbounds %struct.Reg, %struct.Reg* %4626, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %4627 to i64*
  %4628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4629 = getelementptr inbounds %struct.GPR, %struct.GPR* %4628, i32 0, i32 1
  %4630 = getelementptr inbounds %struct.Reg, %struct.Reg* %4629, i32 0, i32 0
  %EAX.i651 = bitcast %union.anon* %4630 to i32*
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4632 = getelementptr inbounds %struct.GPR, %struct.GPR* %4631, i32 0, i32 7
  %4633 = getelementptr inbounds %struct.Reg, %struct.Reg* %4632, i32 0, i32 0
  %RDX.i652 = bitcast %union.anon* %4633 to i64*
  %4634 = load i32, i32* %EAX.i651
  %4635 = zext i32 %4634 to i64
  %4636 = load i64, i64* %PC.i650
  %4637 = add i64 %4636, 2
  store i64 %4637, i64* %PC.i650
  %4638 = and i64 %4635, 4294967295
  store i64 %4638, i64* %RDX.i652, align 8
  store %struct.Memory* %loadMem_418e0b, %struct.Memory** %MEMORY
  %loadMem_418e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4640 = getelementptr inbounds %struct.GPR, %struct.GPR* %4639, i32 0, i32 33
  %4641 = getelementptr inbounds %struct.Reg, %struct.Reg* %4640, i32 0, i32 0
  %PC.i648 = bitcast %union.anon* %4641 to i64*
  %4642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4643 = getelementptr inbounds %struct.GPR, %struct.GPR* %4642, i32 0, i32 1
  %4644 = getelementptr inbounds %struct.Reg, %struct.Reg* %4643, i32 0, i32 0
  %4645 = bitcast %union.anon* %4644 to %struct.anon.2*
  %AL.i649 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4645, i32 0, i32 0
  %4646 = load i64, i64* %PC.i648
  %4647 = add i64 %4646, 2
  store i64 %4647, i64* %PC.i648
  store i8 0, i8* %AL.i649, align 1
  store %struct.Memory* %loadMem_418e0d, %struct.Memory** %MEMORY
  %loadMem1_418e0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4649 = getelementptr inbounds %struct.GPR, %struct.GPR* %4648, i32 0, i32 33
  %4650 = getelementptr inbounds %struct.Reg, %struct.Reg* %4649, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %4650 to i64*
  %4651 = load i64, i64* %PC.i647
  %4652 = add i64 %4651, -96079
  %4653 = load i64, i64* %PC.i647
  %4654 = add i64 %4653, 5
  %4655 = load i64, i64* %PC.i647
  %4656 = add i64 %4655, 5
  store i64 %4656, i64* %PC.i647
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4658 = load i64, i64* %4657, align 8
  %4659 = add i64 %4658, -8
  %4660 = inttoptr i64 %4659 to i64*
  store i64 %4654, i64* %4660
  store i64 %4659, i64* %4657, align 8
  %4661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4652, i64* %4661, align 8
  store %struct.Memory* %loadMem1_418e0f, %struct.Memory** %MEMORY
  %loadMem2_418e0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_418e0f = load i64, i64* %3
  %4662 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %loadMem2_418e0f)
  store %struct.Memory* %4662, %struct.Memory** %MEMORY
  %loadMem_418e14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4664 = getelementptr inbounds %struct.GPR, %struct.GPR* %4663, i32 0, i32 33
  %4665 = getelementptr inbounds %struct.Reg, %struct.Reg* %4664, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %4665 to i64*
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4667 = getelementptr inbounds %struct.GPR, %struct.GPR* %4666, i32 0, i32 15
  %4668 = getelementptr inbounds %struct.Reg, %struct.Reg* %4667, i32 0, i32 0
  %RBP.i642 = bitcast %union.anon* %4668 to i64*
  %4669 = load i64, i64* %RBP.i642
  %4670 = sub i64 %4669, 140
  %4671 = load i64, i64* %PC.i641
  %4672 = add i64 %4671, 7
  store i64 %4672, i64* %PC.i641
  %4673 = inttoptr i64 %4670 to i32*
  %4674 = load i32, i32* %4673
  %4675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4675, align 1
  %4676 = and i32 %4674, 255
  %4677 = call i32 @llvm.ctpop.i32(i32 %4676)
  %4678 = trunc i32 %4677 to i8
  %4679 = and i8 %4678, 1
  %4680 = xor i8 %4679, 1
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4680, i8* %4681, align 1
  %4682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4682, align 1
  %4683 = icmp eq i32 %4674, 0
  %4684 = zext i1 %4683 to i8
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4684, i8* %4685, align 1
  %4686 = lshr i32 %4674, 31
  %4687 = trunc i32 %4686 to i8
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4687, i8* %4688, align 1
  %4689 = lshr i32 %4674, 31
  %4690 = xor i32 %4686, %4689
  %4691 = add i32 %4690, %4689
  %4692 = icmp eq i32 %4691, 2
  %4693 = zext i1 %4692 to i8
  %4694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4693, i8* %4694, align 1
  store %struct.Memory* %loadMem_418e14, %struct.Memory** %MEMORY
  %loadMem_418e1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4696 = getelementptr inbounds %struct.GPR, %struct.GPR* %4695, i32 0, i32 33
  %4697 = getelementptr inbounds %struct.Reg, %struct.Reg* %4696, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %4697 to i64*
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4699 = getelementptr inbounds %struct.GPR, %struct.GPR* %4698, i32 0, i32 1
  %4700 = getelementptr inbounds %struct.Reg, %struct.Reg* %4699, i32 0, i32 0
  %EAX.i639 = bitcast %union.anon* %4700 to i32*
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4702 = getelementptr inbounds %struct.GPR, %struct.GPR* %4701, i32 0, i32 15
  %4703 = getelementptr inbounds %struct.Reg, %struct.Reg* %4702, i32 0, i32 0
  %RBP.i640 = bitcast %union.anon* %4703 to i64*
  %4704 = load i64, i64* %RBP.i640
  %4705 = sub i64 %4704, 188
  %4706 = load i32, i32* %EAX.i639
  %4707 = zext i32 %4706 to i64
  %4708 = load i64, i64* %PC.i638
  %4709 = add i64 %4708, 6
  store i64 %4709, i64* %PC.i638
  %4710 = inttoptr i64 %4705 to i32*
  store i32 %4706, i32* %4710
  store %struct.Memory* %loadMem_418e1b, %struct.Memory** %MEMORY
  %loadMem_418e21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4712 = getelementptr inbounds %struct.GPR, %struct.GPR* %4711, i32 0, i32 33
  %4713 = getelementptr inbounds %struct.Reg, %struct.Reg* %4712, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %4713 to i64*
  %4714 = load i64, i64* %PC.i637
  %4715 = add i64 %4714, 116
  %4716 = load i64, i64* %PC.i637
  %4717 = add i64 %4716, 6
  %4718 = load i64, i64* %PC.i637
  %4719 = add i64 %4718, 6
  store i64 %4719, i64* %PC.i637
  %4720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4721 = load i8, i8* %4720, align 1
  %4722 = icmp ne i8 %4721, 0
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4724 = load i8, i8* %4723, align 1
  %4725 = icmp ne i8 %4724, 0
  %4726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4727 = load i8, i8* %4726, align 1
  %4728 = icmp ne i8 %4727, 0
  %4729 = xor i1 %4725, %4728
  %4730 = or i1 %4722, %4729
  %4731 = zext i1 %4730 to i8
  store i8 %4731, i8* %BRANCH_TAKEN, align 1
  %4732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4733 = select i1 %4730, i64 %4715, i64 %4717
  store i64 %4733, i64* %4732, align 8
  store %struct.Memory* %loadMem_418e21, %struct.Memory** %MEMORY
  %loadBr_418e21 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418e21 = icmp eq i8 %loadBr_418e21, 1
  br i1 %cmpBr_418e21, label %block_.L_418e95, label %block_418e27

block_418e27:                                     ; preds = %block_418de7
  %loadMem_418e27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4735 = getelementptr inbounds %struct.GPR, %struct.GPR* %4734, i32 0, i32 33
  %4736 = getelementptr inbounds %struct.Reg, %struct.Reg* %4735, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %4736 to i64*
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4738 = getelementptr inbounds %struct.GPR, %struct.GPR* %4737, i32 0, i32 1
  %4739 = getelementptr inbounds %struct.Reg, %struct.Reg* %4738, i32 0, i32 0
  %RAX.i635 = bitcast %union.anon* %4739 to i64*
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4741 = getelementptr inbounds %struct.GPR, %struct.GPR* %4740, i32 0, i32 15
  %4742 = getelementptr inbounds %struct.Reg, %struct.Reg* %4741, i32 0, i32 0
  %RBP.i636 = bitcast %union.anon* %4742 to i64*
  %4743 = load i64, i64* %RBP.i636
  %4744 = sub i64 %4743, 140
  %4745 = load i64, i64* %PC.i634
  %4746 = add i64 %4745, 6
  store i64 %4746, i64* %PC.i634
  %4747 = inttoptr i64 %4744 to i32*
  %4748 = load i32, i32* %4747
  %4749 = zext i32 %4748 to i64
  store i64 %4749, i64* %RAX.i635, align 8
  store %struct.Memory* %loadMem_418e27, %struct.Memory** %MEMORY
  %loadMem_418e2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4751 = getelementptr inbounds %struct.GPR, %struct.GPR* %4750, i32 0, i32 33
  %4752 = getelementptr inbounds %struct.Reg, %struct.Reg* %4751, i32 0, i32 0
  %PC.i632 = bitcast %union.anon* %4752 to i64*
  %4753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4754 = getelementptr inbounds %struct.GPR, %struct.GPR* %4753, i32 0, i32 1
  %4755 = getelementptr inbounds %struct.Reg, %struct.Reg* %4754, i32 0, i32 0
  %RAX.i633 = bitcast %union.anon* %4755 to i64*
  %4756 = load i64, i64* %RAX.i633
  %4757 = load i64, i64* %PC.i632
  %4758 = add i64 %4757, 3
  store i64 %4758, i64* %PC.i632
  %4759 = trunc i64 %4756 to i32
  %4760 = sub i32 %4759, 1
  %4761 = zext i32 %4760 to i64
  store i64 %4761, i64* %RAX.i633, align 8
  %4762 = icmp ult i32 %4759, 1
  %4763 = zext i1 %4762 to i8
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4763, i8* %4764, align 1
  %4765 = and i32 %4760, 255
  %4766 = call i32 @llvm.ctpop.i32(i32 %4765)
  %4767 = trunc i32 %4766 to i8
  %4768 = and i8 %4767, 1
  %4769 = xor i8 %4768, 1
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4769, i8* %4770, align 1
  %4771 = xor i64 1, %4756
  %4772 = trunc i64 %4771 to i32
  %4773 = xor i32 %4772, %4760
  %4774 = lshr i32 %4773, 4
  %4775 = trunc i32 %4774 to i8
  %4776 = and i8 %4775, 1
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4776, i8* %4777, align 1
  %4778 = icmp eq i32 %4760, 0
  %4779 = zext i1 %4778 to i8
  %4780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4779, i8* %4780, align 1
  %4781 = lshr i32 %4760, 31
  %4782 = trunc i32 %4781 to i8
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4782, i8* %4783, align 1
  %4784 = lshr i32 %4759, 31
  %4785 = xor i32 %4781, %4784
  %4786 = add i32 %4785, %4784
  %4787 = icmp eq i32 %4786, 2
  %4788 = zext i1 %4787 to i8
  %4789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4788, i8* %4789, align 1
  store %struct.Memory* %loadMem_418e2d, %struct.Memory** %MEMORY
  %loadMem_418e30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4791 = getelementptr inbounds %struct.GPR, %struct.GPR* %4790, i32 0, i32 33
  %4792 = getelementptr inbounds %struct.Reg, %struct.Reg* %4791, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %4792 to i64*
  %4793 = load i64, i64* %PC.i631
  %4794 = add i64 %4793, 1
  store i64 %4794, i64* %PC.i631
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %4797 = bitcast %union.anon* %4796 to i32*
  %4798 = load i32, i32* %4797, align 8
  %4799 = sext i32 %4798 to i64
  %4800 = lshr i64 %4799, 32
  store i64 %4800, i64* %4795, align 8
  store %struct.Memory* %loadMem_418e30, %struct.Memory** %MEMORY
  %loadMem_418e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4802 = getelementptr inbounds %struct.GPR, %struct.GPR* %4801, i32 0, i32 33
  %4803 = getelementptr inbounds %struct.Reg, %struct.Reg* %4802, i32 0, i32 0
  %PC.i625 = bitcast %union.anon* %4803 to i64*
  %4804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4805 = getelementptr inbounds %struct.GPR, %struct.GPR* %4804, i32 0, i32 15
  %4806 = getelementptr inbounds %struct.Reg, %struct.Reg* %4805, i32 0, i32 0
  %RBP.i626 = bitcast %union.anon* %4806 to i64*
  %4807 = load i64, i64* %RBP.i626
  %4808 = sub i64 %4807, 20
  %4809 = load i64, i64* %PC.i625
  %4810 = add i64 %4809, 3
  store i64 %4810, i64* %PC.i625
  %4811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %4812 = bitcast %union.anon* %4811 to i32*
  %4813 = load i32, i32* %4812, align 8
  %4814 = zext i32 %4813 to i64
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %4816 = bitcast %union.anon* %4815 to i32*
  %4817 = load i32, i32* %4816, align 8
  %4818 = zext i32 %4817 to i64
  %4819 = inttoptr i64 %4808 to i32*
  %4820 = load i32, i32* %4819
  %4821 = sext i32 %4820 to i64
  %4822 = shl i64 %4818, 32
  %4823 = or i64 %4822, %4814
  %4824 = sdiv i64 %4823, %4821
  %4825 = shl i64 %4824, 32
  %4826 = ashr exact i64 %4825, 32
  %4827 = icmp eq i64 %4824, %4826
  br i1 %4827, label %4832, label %4828

; <label>:4828:                                   ; preds = %block_418e27
  %4829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4830 = load i64, i64* %4829, align 8
  %4831 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4830, %struct.Memory* %loadMem_418e31)
  br label %routine_idivl_MINUS0x14__rbp_.exit627

; <label>:4832:                                   ; preds = %block_418e27
  %4833 = srem i64 %4823, %4821
  %4834 = getelementptr inbounds %union.anon, %union.anon* %4811, i64 0, i32 0
  %4835 = and i64 %4824, 4294967295
  store i64 %4835, i64* %4834, align 8
  %4836 = getelementptr inbounds %union.anon, %union.anon* %4815, i64 0, i32 0
  %4837 = and i64 %4833, 4294967295
  store i64 %4837, i64* %4836, align 8
  %4838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4838, align 1
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %4839, align 1
  %4840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4840, align 1
  %4841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4841, align 1
  %4842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %4842, align 1
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4843, align 1
  br label %routine_idivl_MINUS0x14__rbp_.exit627

routine_idivl_MINUS0x14__rbp_.exit627:            ; preds = %4828, %4832
  %4844 = phi %struct.Memory* [ %4831, %4828 ], [ %loadMem_418e31, %4832 ]
  store %struct.Memory* %4844, %struct.Memory** %MEMORY
  %loadMem_418e34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4846 = getelementptr inbounds %struct.GPR, %struct.GPR* %4845, i32 0, i32 33
  %4847 = getelementptr inbounds %struct.Reg, %struct.Reg* %4846, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %4847 to i64*
  %4848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4849 = getelementptr inbounds %struct.GPR, %struct.GPR* %4848, i32 0, i32 1
  %4850 = getelementptr inbounds %struct.Reg, %struct.Reg* %4849, i32 0, i32 0
  %RAX.i624 = bitcast %union.anon* %4850 to i64*
  %4851 = load i64, i64* %RAX.i624
  %4852 = load i64, i64* %PC.i623
  %4853 = add i64 %4852, 3
  store i64 %4853, i64* %PC.i623
  %4854 = trunc i64 %4851 to i32
  %4855 = add i32 1, %4854
  %4856 = zext i32 %4855 to i64
  store i64 %4856, i64* %RAX.i624, align 8
  %4857 = icmp ult i32 %4855, %4854
  %4858 = icmp ult i32 %4855, 1
  %4859 = or i1 %4857, %4858
  %4860 = zext i1 %4859 to i8
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4860, i8* %4861, align 1
  %4862 = and i32 %4855, 255
  %4863 = call i32 @llvm.ctpop.i32(i32 %4862)
  %4864 = trunc i32 %4863 to i8
  %4865 = and i8 %4864, 1
  %4866 = xor i8 %4865, 1
  %4867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4866, i8* %4867, align 1
  %4868 = xor i64 1, %4851
  %4869 = trunc i64 %4868 to i32
  %4870 = xor i32 %4869, %4855
  %4871 = lshr i32 %4870, 4
  %4872 = trunc i32 %4871 to i8
  %4873 = and i8 %4872, 1
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4873, i8* %4874, align 1
  %4875 = icmp eq i32 %4855, 0
  %4876 = zext i1 %4875 to i8
  %4877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4876, i8* %4877, align 1
  %4878 = lshr i32 %4855, 31
  %4879 = trunc i32 %4878 to i8
  %4880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4879, i8* %4880, align 1
  %4881 = lshr i32 %4854, 31
  %4882 = xor i32 %4878, %4881
  %4883 = add i32 %4882, %4878
  %4884 = icmp eq i32 %4883, 2
  %4885 = zext i1 %4884 to i8
  %4886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4885, i8* %4886, align 1
  store %struct.Memory* %loadMem_418e34, %struct.Memory** %MEMORY
  %loadMem_418e37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4888 = getelementptr inbounds %struct.GPR, %struct.GPR* %4887, i32 0, i32 33
  %4889 = getelementptr inbounds %struct.Reg, %struct.Reg* %4888, i32 0, i32 0
  %PC.i620 = bitcast %union.anon* %4889 to i64*
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4891 = getelementptr inbounds %struct.GPR, %struct.GPR* %4890, i32 0, i32 1
  %4892 = getelementptr inbounds %struct.Reg, %struct.Reg* %4891, i32 0, i32 0
  %EAX.i621 = bitcast %union.anon* %4892 to i32*
  %4893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4894 = getelementptr inbounds %struct.GPR, %struct.GPR* %4893, i32 0, i32 15
  %4895 = getelementptr inbounds %struct.Reg, %struct.Reg* %4894, i32 0, i32 0
  %RBP.i622 = bitcast %union.anon* %4895 to i64*
  %4896 = load i64, i64* %RBP.i622
  %4897 = sub i64 %4896, 28
  %4898 = load i32, i32* %EAX.i621
  %4899 = zext i32 %4898 to i64
  %4900 = load i64, i64* %PC.i620
  %4901 = add i64 %4900, 3
  store i64 %4901, i64* %PC.i620
  %4902 = inttoptr i64 %4897 to i32*
  store i32 %4898, i32* %4902
  store %struct.Memory* %loadMem_418e37, %struct.Memory** %MEMORY
  %loadMem_418e3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4904 = getelementptr inbounds %struct.GPR, %struct.GPR* %4903, i32 0, i32 33
  %4905 = getelementptr inbounds %struct.Reg, %struct.Reg* %4904, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %4905 to i64*
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4907 = getelementptr inbounds %struct.GPR, %struct.GPR* %4906, i32 0, i32 15
  %4908 = getelementptr inbounds %struct.Reg, %struct.Reg* %4907, i32 0, i32 0
  %RBP.i619 = bitcast %union.anon* %4908 to i64*
  %4909 = load i64, i64* %RBP.i619
  %4910 = sub i64 %4909, 28
  %4911 = load i64, i64* %PC.i618
  %4912 = add i64 %4911, 4
  store i64 %4912, i64* %PC.i618
  %4913 = inttoptr i64 %4910 to i32*
  %4914 = load i32, i32* %4913
  %4915 = sub i32 %4914, 60
  %4916 = icmp ult i32 %4914, 60
  %4917 = zext i1 %4916 to i8
  %4918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4917, i8* %4918, align 1
  %4919 = and i32 %4915, 255
  %4920 = call i32 @llvm.ctpop.i32(i32 %4919)
  %4921 = trunc i32 %4920 to i8
  %4922 = and i8 %4921, 1
  %4923 = xor i8 %4922, 1
  %4924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4923, i8* %4924, align 1
  %4925 = xor i32 %4914, 60
  %4926 = xor i32 %4925, %4915
  %4927 = lshr i32 %4926, 4
  %4928 = trunc i32 %4927 to i8
  %4929 = and i8 %4928, 1
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4929, i8* %4930, align 1
  %4931 = icmp eq i32 %4915, 0
  %4932 = zext i1 %4931 to i8
  %4933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4932, i8* %4933, align 1
  %4934 = lshr i32 %4915, 31
  %4935 = trunc i32 %4934 to i8
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4935, i8* %4936, align 1
  %4937 = lshr i32 %4914, 31
  %4938 = xor i32 %4934, %4937
  %4939 = add i32 %4938, %4937
  %4940 = icmp eq i32 %4939, 2
  %4941 = zext i1 %4940 to i8
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4941, i8* %4942, align 1
  store %struct.Memory* %loadMem_418e3a, %struct.Memory** %MEMORY
  %loadMem_418e3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4944 = getelementptr inbounds %struct.GPR, %struct.GPR* %4943, i32 0, i32 33
  %4945 = getelementptr inbounds %struct.Reg, %struct.Reg* %4944, i32 0, i32 0
  %PC.i617 = bitcast %union.anon* %4945 to i64*
  %4946 = load i64, i64* %PC.i617
  %4947 = add i64 %4946, 23
  %4948 = load i64, i64* %PC.i617
  %4949 = add i64 %4948, 6
  %4950 = load i64, i64* %PC.i617
  %4951 = add i64 %4950, 6
  store i64 %4951, i64* %PC.i617
  %4952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4953 = load i8, i8* %4952, align 1
  %4954 = icmp ne i8 %4953, 0
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4956 = load i8, i8* %4955, align 1
  %4957 = icmp ne i8 %4956, 0
  %4958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4959 = load i8, i8* %4958, align 1
  %4960 = icmp ne i8 %4959, 0
  %4961 = xor i1 %4957, %4960
  %4962 = or i1 %4954, %4961
  %4963 = zext i1 %4962 to i8
  store i8 %4963, i8* %BRANCH_TAKEN, align 1
  %4964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4965 = select i1 %4962, i64 %4947, i64 %4949
  store i64 %4965, i64* %4964, align 8
  store %struct.Memory* %loadMem_418e3e, %struct.Memory** %MEMORY
  %loadBr_418e3e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418e3e = icmp eq i8 %loadBr_418e3e, 1
  br i1 %cmpBr_418e3e, label %block_.L_418e55, label %block_418e44

block_418e44:                                     ; preds = %routine_idivl_MINUS0x14__rbp_.exit627
  %loadMem_418e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4967 = getelementptr inbounds %struct.GPR, %struct.GPR* %4966, i32 0, i32 33
  %4968 = getelementptr inbounds %struct.Reg, %struct.Reg* %4967, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %4968 to i64*
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4970 = getelementptr inbounds %struct.GPR, %struct.GPR* %4969, i32 0, i32 11
  %4971 = getelementptr inbounds %struct.Reg, %struct.Reg* %4970, i32 0, i32 0
  %RDI.i616 = bitcast %union.anon* %4971 to i64*
  %4972 = load i64, i64* %PC.i615
  %4973 = add i64 %4972, 10
  store i64 %4973, i64* %PC.i615
  store i64 ptrtoint (%G__0x456fd4_type* @G__0x456fd4 to i64), i64* %RDI.i616, align 8
  store %struct.Memory* %loadMem_418e44, %struct.Memory** %MEMORY
  %loadMem_418e4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4975 = getelementptr inbounds %struct.GPR, %struct.GPR* %4974, i32 0, i32 33
  %4976 = getelementptr inbounds %struct.Reg, %struct.Reg* %4975, i32 0, i32 0
  %PC.i613 = bitcast %union.anon* %4976 to i64*
  %4977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4978 = getelementptr inbounds %struct.GPR, %struct.GPR* %4977, i32 0, i32 1
  %4979 = getelementptr inbounds %struct.Reg, %struct.Reg* %4978, i32 0, i32 0
  %4980 = bitcast %union.anon* %4979 to %struct.anon.2*
  %AL.i614 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4980, i32 0, i32 0
  %4981 = load i64, i64* %PC.i613
  %4982 = add i64 %4981, 2
  store i64 %4982, i64* %PC.i613
  store i8 0, i8* %AL.i614, align 1
  store %struct.Memory* %loadMem_418e4e, %struct.Memory** %MEMORY
  %loadMem1_418e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4984 = getelementptr inbounds %struct.GPR, %struct.GPR* %4983, i32 0, i32 33
  %4985 = getelementptr inbounds %struct.Reg, %struct.Reg* %4984, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %4985 to i64*
  %4986 = load i64, i64* %PC.i612
  %4987 = add i64 %4986, 154560
  %4988 = load i64, i64* %PC.i612
  %4989 = add i64 %4988, 5
  %4990 = load i64, i64* %PC.i612
  %4991 = add i64 %4990, 5
  store i64 %4991, i64* %PC.i612
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4993 = load i64, i64* %4992, align 8
  %4994 = add i64 %4993, -8
  %4995 = inttoptr i64 %4994 to i64*
  store i64 %4989, i64* %4995
  store i64 %4994, i64* %4992, align 8
  %4996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4987, i64* %4996, align 8
  store %struct.Memory* %loadMem1_418e50, %struct.Memory** %MEMORY
  %loadMem2_418e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_418e50 = load i64, i64* %3
  %call2_418e50 = call %struct.Memory* @sub_43ea10.Die(%struct.State* %0, i64 %loadPC_418e50, %struct.Memory* %loadMem2_418e50)
  store %struct.Memory* %call2_418e50, %struct.Memory** %MEMORY
  br label %block_.L_418e55

block_.L_418e55:                                  ; preds = %block_418e44, %routine_idivl_MINUS0x14__rbp_.exit627
  %loadMem_418e55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4998 = getelementptr inbounds %struct.GPR, %struct.GPR* %4997, i32 0, i32 33
  %4999 = getelementptr inbounds %struct.Reg, %struct.Reg* %4998, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %4999 to i64*
  %5000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5001 = getelementptr inbounds %struct.GPR, %struct.GPR* %5000, i32 0, i32 15
  %5002 = getelementptr inbounds %struct.Reg, %struct.Reg* %5001, i32 0, i32 0
  %RBP.i611 = bitcast %union.anon* %5002 to i64*
  %5003 = load i64, i64* %RBP.i611
  %5004 = sub i64 %5003, 132
  %5005 = load i64, i64* %PC.i610
  %5006 = add i64 %5005, 10
  store i64 %5006, i64* %PC.i610
  %5007 = inttoptr i64 %5004 to i32*
  store i32 20, i32* %5007
  store %struct.Memory* %loadMem_418e55, %struct.Memory** %MEMORY
  br label %block_.L_418e5f

block_.L_418e5f:                                  ; preds = %block_418e69, %block_.L_418e55
  %loadMem_418e5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5009 = getelementptr inbounds %struct.GPR, %struct.GPR* %5008, i32 0, i32 33
  %5010 = getelementptr inbounds %struct.Reg, %struct.Reg* %5009, i32 0, i32 0
  %PC.i608 = bitcast %union.anon* %5010 to i64*
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5012 = getelementptr inbounds %struct.GPR, %struct.GPR* %5011, i32 0, i32 15
  %5013 = getelementptr inbounds %struct.Reg, %struct.Reg* %5012, i32 0, i32 0
  %RBP.i609 = bitcast %union.anon* %5013 to i64*
  %5014 = load i64, i64* %RBP.i609
  %5015 = sub i64 %5014, 28
  %5016 = load i64, i64* %PC.i608
  %5017 = add i64 %5016, 4
  store i64 %5017, i64* %PC.i608
  %5018 = inttoptr i64 %5015 to i32*
  %5019 = load i32, i32* %5018
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5020, align 1
  %5021 = and i32 %5019, 255
  %5022 = call i32 @llvm.ctpop.i32(i32 %5021)
  %5023 = trunc i32 %5022 to i8
  %5024 = and i8 %5023, 1
  %5025 = xor i8 %5024, 1
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5025, i8* %5026, align 1
  %5027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5027, align 1
  %5028 = icmp eq i32 %5019, 0
  %5029 = zext i1 %5028 to i8
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5029, i8* %5030, align 1
  %5031 = lshr i32 %5019, 31
  %5032 = trunc i32 %5031 to i8
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5032, i8* %5033, align 1
  %5034 = lshr i32 %5019, 31
  %5035 = xor i32 %5031, %5034
  %5036 = add i32 %5035, %5034
  %5037 = icmp eq i32 %5036, 2
  %5038 = zext i1 %5037 to i8
  %5039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5038, i8* %5039, align 1
  store %struct.Memory* %loadMem_418e5f, %struct.Memory** %MEMORY
  %loadMem_418e63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5041 = getelementptr inbounds %struct.GPR, %struct.GPR* %5040, i32 0, i32 33
  %5042 = getelementptr inbounds %struct.Reg, %struct.Reg* %5041, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %5042 to i64*
  %5043 = load i64, i64* %PC.i607
  %5044 = add i64 %5043, 45
  %5045 = load i64, i64* %PC.i607
  %5046 = add i64 %5045, 6
  %5047 = load i64, i64* %PC.i607
  %5048 = add i64 %5047, 6
  store i64 %5048, i64* %PC.i607
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5050 = load i8, i8* %5049, align 1
  %5051 = icmp ne i8 %5050, 0
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5053 = load i8, i8* %5052, align 1
  %5054 = icmp ne i8 %5053, 0
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5056 = load i8, i8* %5055, align 1
  %5057 = icmp ne i8 %5056, 0
  %5058 = xor i1 %5054, %5057
  %5059 = or i1 %5051, %5058
  %5060 = zext i1 %5059 to i8
  store i8 %5060, i8* %BRANCH_TAKEN, align 1
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5062 = select i1 %5059, i64 %5044, i64 %5046
  store i64 %5062, i64* %5061, align 8
  store %struct.Memory* %loadMem_418e63, %struct.Memory** %MEMORY
  %loadBr_418e63 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418e63 = icmp eq i8 %loadBr_418e63, 1
  br i1 %cmpBr_418e63, label %block_.L_418e90, label %block_418e69

block_418e69:                                     ; preds = %block_.L_418e5f
  %loadMem_418e69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5064 = getelementptr inbounds %struct.GPR, %struct.GPR* %5063, i32 0, i32 33
  %5065 = getelementptr inbounds %struct.Reg, %struct.Reg* %5064, i32 0, i32 0
  %PC.i604 = bitcast %union.anon* %5065 to i64*
  %5066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5067 = getelementptr inbounds %struct.GPR, %struct.GPR* %5066, i32 0, i32 1
  %5068 = getelementptr inbounds %struct.Reg, %struct.Reg* %5067, i32 0, i32 0
  %RAX.i605 = bitcast %union.anon* %5068 to i64*
  %5069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5070 = getelementptr inbounds %struct.GPR, %struct.GPR* %5069, i32 0, i32 15
  %5071 = getelementptr inbounds %struct.Reg, %struct.Reg* %5070, i32 0, i32 0
  %RBP.i606 = bitcast %union.anon* %5071 to i64*
  %5072 = load i64, i64* %RBP.i606
  %5073 = sub i64 %5072, 132
  %5074 = load i64, i64* %PC.i604
  %5075 = add i64 %5074, 6
  store i64 %5075, i64* %PC.i604
  %5076 = inttoptr i64 %5073 to i32*
  %5077 = load i32, i32* %5076
  %5078 = zext i32 %5077 to i64
  store i64 %5078, i64* %RAX.i605, align 8
  store %struct.Memory* %loadMem_418e69, %struct.Memory** %MEMORY
  %loadMem_418e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5080 = getelementptr inbounds %struct.GPR, %struct.GPR* %5079, i32 0, i32 33
  %5081 = getelementptr inbounds %struct.Reg, %struct.Reg* %5080, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %5081 to i64*
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5083 = getelementptr inbounds %struct.GPR, %struct.GPR* %5082, i32 0, i32 1
  %5084 = getelementptr inbounds %struct.Reg, %struct.Reg* %5083, i32 0, i32 0
  %EAX.i602 = bitcast %union.anon* %5084 to i32*
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5086 = getelementptr inbounds %struct.GPR, %struct.GPR* %5085, i32 0, i32 5
  %5087 = getelementptr inbounds %struct.Reg, %struct.Reg* %5086, i32 0, i32 0
  %RCX.i603 = bitcast %union.anon* %5087 to i64*
  %5088 = load i32, i32* %EAX.i602
  %5089 = zext i32 %5088 to i64
  %5090 = load i64, i64* %PC.i601
  %5091 = add i64 %5090, 2
  store i64 %5091, i64* %PC.i601
  %5092 = and i64 %5089, 4294967295
  store i64 %5092, i64* %RCX.i603, align 8
  store %struct.Memory* %loadMem_418e6f, %struct.Memory** %MEMORY
  %loadMem_418e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5094 = getelementptr inbounds %struct.GPR, %struct.GPR* %5093, i32 0, i32 33
  %5095 = getelementptr inbounds %struct.Reg, %struct.Reg* %5094, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %5095 to i64*
  %5096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5097 = getelementptr inbounds %struct.GPR, %struct.GPR* %5096, i32 0, i32 5
  %5098 = getelementptr inbounds %struct.Reg, %struct.Reg* %5097, i32 0, i32 0
  %RCX.i600 = bitcast %union.anon* %5098 to i64*
  %5099 = load i64, i64* %RCX.i600
  %5100 = load i64, i64* %PC.i599
  %5101 = add i64 %5100, 3
  store i64 %5101, i64* %PC.i599
  %5102 = trunc i64 %5099 to i32
  %5103 = add i32 1, %5102
  %5104 = zext i32 %5103 to i64
  store i64 %5104, i64* %RCX.i600, align 8
  %5105 = icmp ult i32 %5103, %5102
  %5106 = icmp ult i32 %5103, 1
  %5107 = or i1 %5105, %5106
  %5108 = zext i1 %5107 to i8
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5108, i8* %5109, align 1
  %5110 = and i32 %5103, 255
  %5111 = call i32 @llvm.ctpop.i32(i32 %5110)
  %5112 = trunc i32 %5111 to i8
  %5113 = and i8 %5112, 1
  %5114 = xor i8 %5113, 1
  %5115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5114, i8* %5115, align 1
  %5116 = xor i64 1, %5099
  %5117 = trunc i64 %5116 to i32
  %5118 = xor i32 %5117, %5103
  %5119 = lshr i32 %5118, 4
  %5120 = trunc i32 %5119 to i8
  %5121 = and i8 %5120, 1
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5121, i8* %5122, align 1
  %5123 = icmp eq i32 %5103, 0
  %5124 = zext i1 %5123 to i8
  %5125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5124, i8* %5125, align 1
  %5126 = lshr i32 %5103, 31
  %5127 = trunc i32 %5126 to i8
  %5128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5127, i8* %5128, align 1
  %5129 = lshr i32 %5102, 31
  %5130 = xor i32 %5126, %5129
  %5131 = add i32 %5130, %5126
  %5132 = icmp eq i32 %5131, 2
  %5133 = zext i1 %5132 to i8
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5133, i8* %5134, align 1
  store %struct.Memory* %loadMem_418e71, %struct.Memory** %MEMORY
  %loadMem_418e74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5136 = getelementptr inbounds %struct.GPR, %struct.GPR* %5135, i32 0, i32 33
  %5137 = getelementptr inbounds %struct.Reg, %struct.Reg* %5136, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %5137 to i64*
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5139 = getelementptr inbounds %struct.GPR, %struct.GPR* %5138, i32 0, i32 5
  %5140 = getelementptr inbounds %struct.Reg, %struct.Reg* %5139, i32 0, i32 0
  %ECX.i597 = bitcast %union.anon* %5140 to i32*
  %5141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5142 = getelementptr inbounds %struct.GPR, %struct.GPR* %5141, i32 0, i32 15
  %5143 = getelementptr inbounds %struct.Reg, %struct.Reg* %5142, i32 0, i32 0
  %RBP.i598 = bitcast %union.anon* %5143 to i64*
  %5144 = load i64, i64* %RBP.i598
  %5145 = sub i64 %5144, 132
  %5146 = load i32, i32* %ECX.i597
  %5147 = zext i32 %5146 to i64
  %5148 = load i64, i64* %PC.i596
  %5149 = add i64 %5148, 6
  store i64 %5149, i64* %PC.i596
  %5150 = inttoptr i64 %5145 to i32*
  store i32 %5146, i32* %5150
  store %struct.Memory* %loadMem_418e74, %struct.Memory** %MEMORY
  %loadMem_418e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5152 = getelementptr inbounds %struct.GPR, %struct.GPR* %5151, i32 0, i32 33
  %5153 = getelementptr inbounds %struct.Reg, %struct.Reg* %5152, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %5153 to i64*
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5155 = getelementptr inbounds %struct.GPR, %struct.GPR* %5154, i32 0, i32 1
  %5156 = getelementptr inbounds %struct.Reg, %struct.Reg* %5155, i32 0, i32 0
  %EAX.i594 = bitcast %union.anon* %5156 to i32*
  %5157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5158 = getelementptr inbounds %struct.GPR, %struct.GPR* %5157, i32 0, i32 7
  %5159 = getelementptr inbounds %struct.Reg, %struct.Reg* %5158, i32 0, i32 0
  %RDX.i595 = bitcast %union.anon* %5159 to i64*
  %5160 = load i32, i32* %EAX.i594
  %5161 = zext i32 %5160 to i64
  %5162 = load i64, i64* %PC.i593
  %5163 = add i64 %5162, 3
  store i64 %5163, i64* %PC.i593
  %5164 = shl i64 %5161, 32
  %5165 = ashr exact i64 %5164, 32
  store i64 %5165, i64* %RDX.i595, align 8
  store %struct.Memory* %loadMem_418e7a, %struct.Memory** %MEMORY
  %loadMem_418e7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5167 = getelementptr inbounds %struct.GPR, %struct.GPR* %5166, i32 0, i32 33
  %5168 = getelementptr inbounds %struct.Reg, %struct.Reg* %5167, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %5168 to i64*
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5170 = getelementptr inbounds %struct.GPR, %struct.GPR* %5169, i32 0, i32 7
  %5171 = getelementptr inbounds %struct.Reg, %struct.Reg* %5170, i32 0, i32 0
  %RDX.i591 = bitcast %union.anon* %5171 to i64*
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5173 = getelementptr inbounds %struct.GPR, %struct.GPR* %5172, i32 0, i32 15
  %5174 = getelementptr inbounds %struct.Reg, %struct.Reg* %5173, i32 0, i32 0
  %RBP.i592 = bitcast %union.anon* %5174 to i64*
  %5175 = load i64, i64* %RBP.i592
  %5176 = load i64, i64* %RDX.i591
  %5177 = add i64 %5175, -128
  %5178 = add i64 %5177, %5176
  %5179 = load i64, i64* %PC.i590
  %5180 = add i64 %5179, 5
  store i64 %5180, i64* %PC.i590
  %5181 = inttoptr i64 %5178 to i8*
  store i8 61, i8* %5181
  store %struct.Memory* %loadMem_418e7d, %struct.Memory** %MEMORY
  %loadMem_418e82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5183 = getelementptr inbounds %struct.GPR, %struct.GPR* %5182, i32 0, i32 33
  %5184 = getelementptr inbounds %struct.Reg, %struct.Reg* %5183, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %5184 to i64*
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 1
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %RAX.i588 = bitcast %union.anon* %5187 to i64*
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5189 = getelementptr inbounds %struct.GPR, %struct.GPR* %5188, i32 0, i32 15
  %5190 = getelementptr inbounds %struct.Reg, %struct.Reg* %5189, i32 0, i32 0
  %RBP.i589 = bitcast %union.anon* %5190 to i64*
  %5191 = load i64, i64* %RBP.i589
  %5192 = sub i64 %5191, 28
  %5193 = load i64, i64* %PC.i587
  %5194 = add i64 %5193, 3
  store i64 %5194, i64* %PC.i587
  %5195 = inttoptr i64 %5192 to i32*
  %5196 = load i32, i32* %5195
  %5197 = zext i32 %5196 to i64
  store i64 %5197, i64* %RAX.i588, align 8
  store %struct.Memory* %loadMem_418e82, %struct.Memory** %MEMORY
  %loadMem_418e85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5199 = getelementptr inbounds %struct.GPR, %struct.GPR* %5198, i32 0, i32 33
  %5200 = getelementptr inbounds %struct.Reg, %struct.Reg* %5199, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %5200 to i64*
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5202 = getelementptr inbounds %struct.GPR, %struct.GPR* %5201, i32 0, i32 1
  %5203 = getelementptr inbounds %struct.Reg, %struct.Reg* %5202, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %5203 to i64*
  %5204 = load i64, i64* %RAX.i586
  %5205 = load i64, i64* %PC.i585
  %5206 = add i64 %5205, 3
  store i64 %5206, i64* %PC.i585
  %5207 = trunc i64 %5204 to i32
  %5208 = add i32 -1, %5207
  %5209 = zext i32 %5208 to i64
  store i64 %5209, i64* %RAX.i586, align 8
  %5210 = icmp ult i32 %5208, %5207
  %5211 = icmp ult i32 %5208, -1
  %5212 = or i1 %5210, %5211
  %5213 = zext i1 %5212 to i8
  %5214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5213, i8* %5214, align 1
  %5215 = and i32 %5208, 255
  %5216 = call i32 @llvm.ctpop.i32(i32 %5215)
  %5217 = trunc i32 %5216 to i8
  %5218 = and i8 %5217, 1
  %5219 = xor i8 %5218, 1
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5219, i8* %5220, align 1
  %5221 = xor i64 -1, %5204
  %5222 = trunc i64 %5221 to i32
  %5223 = xor i32 %5222, %5208
  %5224 = lshr i32 %5223, 4
  %5225 = trunc i32 %5224 to i8
  %5226 = and i8 %5225, 1
  %5227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5226, i8* %5227, align 1
  %5228 = icmp eq i32 %5208, 0
  %5229 = zext i1 %5228 to i8
  %5230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5229, i8* %5230, align 1
  %5231 = lshr i32 %5208, 31
  %5232 = trunc i32 %5231 to i8
  %5233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5232, i8* %5233, align 1
  %5234 = lshr i32 %5207, 31
  %5235 = xor i32 %5231, %5234
  %5236 = xor i32 %5231, 1
  %5237 = add i32 %5235, %5236
  %5238 = icmp eq i32 %5237, 2
  %5239 = zext i1 %5238 to i8
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5239, i8* %5240, align 1
  store %struct.Memory* %loadMem_418e85, %struct.Memory** %MEMORY
  %loadMem_418e88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5242 = getelementptr inbounds %struct.GPR, %struct.GPR* %5241, i32 0, i32 33
  %5243 = getelementptr inbounds %struct.Reg, %struct.Reg* %5242, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %5243 to i64*
  %5244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5245 = getelementptr inbounds %struct.GPR, %struct.GPR* %5244, i32 0, i32 1
  %5246 = getelementptr inbounds %struct.Reg, %struct.Reg* %5245, i32 0, i32 0
  %EAX.i583 = bitcast %union.anon* %5246 to i32*
  %5247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5248 = getelementptr inbounds %struct.GPR, %struct.GPR* %5247, i32 0, i32 15
  %5249 = getelementptr inbounds %struct.Reg, %struct.Reg* %5248, i32 0, i32 0
  %RBP.i584 = bitcast %union.anon* %5249 to i64*
  %5250 = load i64, i64* %RBP.i584
  %5251 = sub i64 %5250, 28
  %5252 = load i32, i32* %EAX.i583
  %5253 = zext i32 %5252 to i64
  %5254 = load i64, i64* %PC.i582
  %5255 = add i64 %5254, 3
  store i64 %5255, i64* %PC.i582
  %5256 = inttoptr i64 %5251 to i32*
  store i32 %5252, i32* %5256
  store %struct.Memory* %loadMem_418e88, %struct.Memory** %MEMORY
  %loadMem_418e8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5258 = getelementptr inbounds %struct.GPR, %struct.GPR* %5257, i32 0, i32 33
  %5259 = getelementptr inbounds %struct.Reg, %struct.Reg* %5258, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %5259 to i64*
  %5260 = load i64, i64* %PC.i581
  %5261 = add i64 %5260, -44
  %5262 = load i64, i64* %PC.i581
  %5263 = add i64 %5262, 5
  store i64 %5263, i64* %PC.i581
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5261, i64* %5264, align 8
  store %struct.Memory* %loadMem_418e8b, %struct.Memory** %MEMORY
  br label %block_.L_418e5f

block_.L_418e90:                                  ; preds = %block_.L_418e5f
  %loadMem_418e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5266 = getelementptr inbounds %struct.GPR, %struct.GPR* %5265, i32 0, i32 33
  %5267 = getelementptr inbounds %struct.Reg, %struct.Reg* %5266, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %5267 to i64*
  %5268 = load i64, i64* %PC.i580
  %5269 = add i64 %5268, 5
  %5270 = load i64, i64* %PC.i580
  %5271 = add i64 %5270, 5
  store i64 %5271, i64* %PC.i580
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5269, i64* %5272, align 8
  store %struct.Memory* %loadMem_418e90, %struct.Memory** %MEMORY
  br label %block_.L_418e95

block_.L_418e95:                                  ; preds = %block_.L_418e90, %block_418de7
  %loadMem_418e95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5274 = getelementptr inbounds %struct.GPR, %struct.GPR* %5273, i32 0, i32 33
  %5275 = getelementptr inbounds %struct.Reg, %struct.Reg* %5274, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %5275 to i64*
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5277 = getelementptr inbounds %struct.GPR, %struct.GPR* %5276, i32 0, i32 11
  %5278 = getelementptr inbounds %struct.Reg, %struct.Reg* %5277, i32 0, i32 0
  %RDI.i578 = bitcast %union.anon* %5278 to i64*
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5280 = getelementptr inbounds %struct.GPR, %struct.GPR* %5279, i32 0, i32 15
  %5281 = getelementptr inbounds %struct.Reg, %struct.Reg* %5280, i32 0, i32 0
  %RBP.i579 = bitcast %union.anon* %5281 to i64*
  %5282 = load i64, i64* %RBP.i579
  %5283 = sub i64 %5282, 128
  %5284 = load i64, i64* %PC.i577
  %5285 = add i64 %5284, 4
  store i64 %5285, i64* %PC.i577
  store i64 %5283, i64* %RDI.i578, align 8
  store %struct.Memory* %loadMem_418e95, %struct.Memory** %MEMORY
  %loadMem_418e99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5287 = getelementptr inbounds %struct.GPR, %struct.GPR* %5286, i32 0, i32 33
  %5288 = getelementptr inbounds %struct.Reg, %struct.Reg* %5287, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %5288 to i64*
  %5289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5290 = getelementptr inbounds %struct.GPR, %struct.GPR* %5289, i32 0, i32 9
  %5291 = getelementptr inbounds %struct.Reg, %struct.Reg* %5290, i32 0, i32 0
  %RSI.i575 = bitcast %union.anon* %5291 to i64*
  %5292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5293 = getelementptr inbounds %struct.GPR, %struct.GPR* %5292, i32 0, i32 15
  %5294 = getelementptr inbounds %struct.Reg, %struct.Reg* %5293, i32 0, i32 0
  %RBP.i576 = bitcast %union.anon* %5294 to i64*
  %5295 = load i64, i64* %RBP.i576
  %5296 = sub i64 %5295, 8
  %5297 = load i64, i64* %PC.i574
  %5298 = add i64 %5297, 4
  store i64 %5298, i64* %PC.i574
  %5299 = inttoptr i64 %5296 to i64*
  %5300 = load i64, i64* %5299
  store i64 %5300, i64* %RSI.i575, align 8
  store %struct.Memory* %loadMem_418e99, %struct.Memory** %MEMORY
  %loadMem1_418e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5302 = getelementptr inbounds %struct.GPR, %struct.GPR* %5301, i32 0, i32 33
  %5303 = getelementptr inbounds %struct.Reg, %struct.Reg* %5302, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %5303 to i64*
  %5304 = load i64, i64* %PC.i573
  %5305 = add i64 %5304, -96733
  %5306 = load i64, i64* %PC.i573
  %5307 = add i64 %5306, 5
  %5308 = load i64, i64* %PC.i573
  %5309 = add i64 %5308, 5
  store i64 %5309, i64* %PC.i573
  %5310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5311 = load i64, i64* %5310, align 8
  %5312 = add i64 %5311, -8
  %5313 = inttoptr i64 %5312 to i64*
  store i64 %5307, i64* %5313
  store i64 %5312, i64* %5310, align 8
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5305, i64* %5314, align 8
  store %struct.Memory* %loadMem1_418e9d, %struct.Memory** %MEMORY
  %loadMem2_418e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_418e9d = load i64, i64* %3
  %5315 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %loadMem2_418e9d)
  store %struct.Memory* %5315, %struct.Memory** %MEMORY
  %loadMem_418ea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5317 = getelementptr inbounds %struct.GPR, %struct.GPR* %5316, i32 0, i32 33
  %5318 = getelementptr inbounds %struct.Reg, %struct.Reg* %5317, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %5318 to i64*
  %5319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5320 = getelementptr inbounds %struct.GPR, %struct.GPR* %5319, i32 0, i32 1
  %5321 = getelementptr inbounds %struct.Reg, %struct.Reg* %5320, i32 0, i32 0
  %EAX.i569 = bitcast %union.anon* %5321 to i32*
  %5322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5323 = getelementptr inbounds %struct.GPR, %struct.GPR* %5322, i32 0, i32 15
  %5324 = getelementptr inbounds %struct.Reg, %struct.Reg* %5323, i32 0, i32 0
  %RBP.i570 = bitcast %union.anon* %5324 to i64*
  %5325 = load i64, i64* %RBP.i570
  %5326 = sub i64 %5325, 192
  %5327 = load i32, i32* %EAX.i569
  %5328 = zext i32 %5327 to i64
  %5329 = load i64, i64* %PC.i568
  %5330 = add i64 %5329, 6
  store i64 %5330, i64* %PC.i568
  %5331 = inttoptr i64 %5326 to i32*
  store i32 %5327, i32* %5331
  store %struct.Memory* %loadMem_418ea2, %struct.Memory** %MEMORY
  %loadMem_418ea8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5333 = getelementptr inbounds %struct.GPR, %struct.GPR* %5332, i32 0, i32 33
  %5334 = getelementptr inbounds %struct.Reg, %struct.Reg* %5333, i32 0, i32 0
  %PC.i567 = bitcast %union.anon* %5334 to i64*
  %5335 = load i64, i64* %PC.i567
  %5336 = add i64 %5335, 610
  %5337 = load i64, i64* %PC.i567
  %5338 = add i64 %5337, 5
  store i64 %5338, i64* %PC.i567
  %5339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5336, i64* %5339, align 8
  store %struct.Memory* %loadMem_418ea8, %struct.Memory** %MEMORY
  br label %block_.L_41910a

block_.L_418ead:                                  ; preds = %block_418dd7, %block_.L_418dc8
  %loadMem_418ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %5340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5341 = getelementptr inbounds %struct.GPR, %struct.GPR* %5340, i32 0, i32 33
  %5342 = getelementptr inbounds %struct.Reg, %struct.Reg* %5341, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %5342 to i64*
  %5343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5344 = getelementptr inbounds %struct.GPR, %struct.GPR* %5343, i32 0, i32 1
  %5345 = getelementptr inbounds %struct.Reg, %struct.Reg* %5344, i32 0, i32 0
  %RAX.i565 = bitcast %union.anon* %5345 to i64*
  %5346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5347 = getelementptr inbounds %struct.GPR, %struct.GPR* %5346, i32 0, i32 15
  %5348 = getelementptr inbounds %struct.Reg, %struct.Reg* %5347, i32 0, i32 0
  %RBP.i566 = bitcast %union.anon* %5348 to i64*
  %5349 = load i64, i64* %RBP.i566
  %5350 = sub i64 %5349, 32
  %5351 = load i64, i64* %PC.i564
  %5352 = add i64 %5351, 3
  store i64 %5352, i64* %PC.i564
  %5353 = inttoptr i64 %5350 to i32*
  %5354 = load i32, i32* %5353
  %5355 = zext i32 %5354 to i64
  store i64 %5355, i64* %RAX.i565, align 8
  store %struct.Memory* %loadMem_418ead, %struct.Memory** %MEMORY
  %loadMem_418eb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5357 = getelementptr inbounds %struct.GPR, %struct.GPR* %5356, i32 0, i32 33
  %5358 = getelementptr inbounds %struct.Reg, %struct.Reg* %5357, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %5358 to i64*
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5360 = getelementptr inbounds %struct.GPR, %struct.GPR* %5359, i32 0, i32 1
  %5361 = getelementptr inbounds %struct.Reg, %struct.Reg* %5360, i32 0, i32 0
  %EAX.i562 = bitcast %union.anon* %5361 to i32*
  %5362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5363 = getelementptr inbounds %struct.GPR, %struct.GPR* %5362, i32 0, i32 15
  %5364 = getelementptr inbounds %struct.Reg, %struct.Reg* %5363, i32 0, i32 0
  %RBP.i563 = bitcast %union.anon* %5364 to i64*
  %5365 = load i32, i32* %EAX.i562
  %5366 = zext i32 %5365 to i64
  %5367 = load i64, i64* %RBP.i563
  %5368 = sub i64 %5367, 144
  %5369 = load i64, i64* %PC.i561
  %5370 = add i64 %5369, 6
  store i64 %5370, i64* %PC.i561
  %5371 = inttoptr i64 %5368 to i32*
  %5372 = load i32, i32* %5371
  %5373 = sub i32 %5365, %5372
  %5374 = icmp ult i32 %5365, %5372
  %5375 = zext i1 %5374 to i8
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5375, i8* %5376, align 1
  %5377 = and i32 %5373, 255
  %5378 = call i32 @llvm.ctpop.i32(i32 %5377)
  %5379 = trunc i32 %5378 to i8
  %5380 = and i8 %5379, 1
  %5381 = xor i8 %5380, 1
  %5382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5381, i8* %5382, align 1
  %5383 = xor i32 %5372, %5365
  %5384 = xor i32 %5383, %5373
  %5385 = lshr i32 %5384, 4
  %5386 = trunc i32 %5385 to i8
  %5387 = and i8 %5386, 1
  %5388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5387, i8* %5388, align 1
  %5389 = icmp eq i32 %5373, 0
  %5390 = zext i1 %5389 to i8
  %5391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5390, i8* %5391, align 1
  %5392 = lshr i32 %5373, 31
  %5393 = trunc i32 %5392 to i8
  %5394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5393, i8* %5394, align 1
  %5395 = lshr i32 %5365, 31
  %5396 = lshr i32 %5372, 31
  %5397 = xor i32 %5396, %5395
  %5398 = xor i32 %5392, %5395
  %5399 = add i32 %5398, %5397
  %5400 = icmp eq i32 %5399, 2
  %5401 = zext i1 %5400 to i8
  %5402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5401, i8* %5402, align 1
  store %struct.Memory* %loadMem_418eb0, %struct.Memory** %MEMORY
  %loadMem_418eb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5404 = getelementptr inbounds %struct.GPR, %struct.GPR* %5403, i32 0, i32 33
  %5405 = getelementptr inbounds %struct.Reg, %struct.Reg* %5404, i32 0, i32 0
  %PC.i560 = bitcast %union.anon* %5405 to i64*
  %5406 = load i64, i64* %PC.i560
  %5407 = add i64 %5406, 188
  %5408 = load i64, i64* %PC.i560
  %5409 = add i64 %5408, 6
  %5410 = load i64, i64* %PC.i560
  %5411 = add i64 %5410, 6
  store i64 %5411, i64* %PC.i560
  %5412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5413 = load i8, i8* %5412, align 1
  %5414 = icmp eq i8 %5413, 0
  %5415 = zext i1 %5414 to i8
  store i8 %5415, i8* %BRANCH_TAKEN, align 1
  %5416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5417 = select i1 %5414, i64 %5407, i64 %5409
  store i64 %5417, i64* %5416, align 8
  store %struct.Memory* %loadMem_418eb6, %struct.Memory** %MEMORY
  %loadBr_418eb6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418eb6 = icmp eq i8 %loadBr_418eb6, 1
  br i1 %cmpBr_418eb6, label %block_.L_418f72, label %block_418ebc

block_418ebc:                                     ; preds = %block_.L_418ead
  %loadMem_418ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5419 = getelementptr inbounds %struct.GPR, %struct.GPR* %5418, i32 0, i32 33
  %5420 = getelementptr inbounds %struct.Reg, %struct.Reg* %5419, i32 0, i32 0
  %PC.i557 = bitcast %union.anon* %5420 to i64*
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5422 = getelementptr inbounds %struct.GPR, %struct.GPR* %5421, i32 0, i32 1
  %5423 = getelementptr inbounds %struct.Reg, %struct.Reg* %5422, i32 0, i32 0
  %RAX.i558 = bitcast %union.anon* %5423 to i64*
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5425 = getelementptr inbounds %struct.GPR, %struct.GPR* %5424, i32 0, i32 15
  %5426 = getelementptr inbounds %struct.Reg, %struct.Reg* %5425, i32 0, i32 0
  %RBP.i559 = bitcast %union.anon* %5426 to i64*
  %5427 = load i64, i64* %RBP.i559
  %5428 = sub i64 %5427, 32
  %5429 = load i64, i64* %PC.i557
  %5430 = add i64 %5429, 3
  store i64 %5430, i64* %PC.i557
  %5431 = inttoptr i64 %5428 to i32*
  %5432 = load i32, i32* %5431
  %5433 = zext i32 %5432 to i64
  store i64 %5433, i64* %RAX.i558, align 8
  store %struct.Memory* %loadMem_418ebc, %struct.Memory** %MEMORY
  %loadMem_418ebf = load %struct.Memory*, %struct.Memory** %MEMORY
  %5434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5435 = getelementptr inbounds %struct.GPR, %struct.GPR* %5434, i32 0, i32 33
  %5436 = getelementptr inbounds %struct.Reg, %struct.Reg* %5435, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %5436 to i64*
  %5437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5438 = getelementptr inbounds %struct.GPR, %struct.GPR* %5437, i32 0, i32 5
  %5439 = getelementptr inbounds %struct.Reg, %struct.Reg* %5438, i32 0, i32 0
  %RCX.i555 = bitcast %union.anon* %5439 to i64*
  %5440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5441 = getelementptr inbounds %struct.GPR, %struct.GPR* %5440, i32 0, i32 15
  %5442 = getelementptr inbounds %struct.Reg, %struct.Reg* %5441, i32 0, i32 0
  %RBP.i556 = bitcast %union.anon* %5442 to i64*
  %5443 = load i64, i64* %RBP.i556
  %5444 = sub i64 %5443, 16
  %5445 = load i64, i64* %PC.i554
  %5446 = add i64 %5445, 4
  store i64 %5446, i64* %PC.i554
  %5447 = inttoptr i64 %5444 to i64*
  %5448 = load i64, i64* %5447
  store i64 %5448, i64* %RCX.i555, align 8
  store %struct.Memory* %loadMem_418ebf, %struct.Memory** %MEMORY
  %loadMem_418ec3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5450 = getelementptr inbounds %struct.GPR, %struct.GPR* %5449, i32 0, i32 33
  %5451 = getelementptr inbounds %struct.Reg, %struct.Reg* %5450, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %5451 to i64*
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5453 = getelementptr inbounds %struct.GPR, %struct.GPR* %5452, i32 0, i32 1
  %5454 = getelementptr inbounds %struct.Reg, %struct.Reg* %5453, i32 0, i32 0
  %EAX.i552 = bitcast %union.anon* %5454 to i32*
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5456 = getelementptr inbounds %struct.GPR, %struct.GPR* %5455, i32 0, i32 5
  %5457 = getelementptr inbounds %struct.Reg, %struct.Reg* %5456, i32 0, i32 0
  %RCX.i553 = bitcast %union.anon* %5457 to i64*
  %5458 = load i32, i32* %EAX.i552
  %5459 = zext i32 %5458 to i64
  %5460 = load i64, i64* %RCX.i553
  %5461 = add i64 %5460, 16
  %5462 = load i64, i64* %PC.i551
  %5463 = add i64 %5462, 3
  store i64 %5463, i64* %PC.i551
  %5464 = inttoptr i64 %5461 to i32*
  %5465 = load i32, i32* %5464
  %5466 = sub i32 %5458, %5465
  %5467 = icmp ult i32 %5458, %5465
  %5468 = zext i1 %5467 to i8
  %5469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5468, i8* %5469, align 1
  %5470 = and i32 %5466, 255
  %5471 = call i32 @llvm.ctpop.i32(i32 %5470)
  %5472 = trunc i32 %5471 to i8
  %5473 = and i8 %5472, 1
  %5474 = xor i8 %5473, 1
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5474, i8* %5475, align 1
  %5476 = xor i32 %5465, %5458
  %5477 = xor i32 %5476, %5466
  %5478 = lshr i32 %5477, 4
  %5479 = trunc i32 %5478 to i8
  %5480 = and i8 %5479, 1
  %5481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5480, i8* %5481, align 1
  %5482 = icmp eq i32 %5466, 0
  %5483 = zext i1 %5482 to i8
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5483, i8* %5484, align 1
  %5485 = lshr i32 %5466, 31
  %5486 = trunc i32 %5485 to i8
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5486, i8* %5487, align 1
  %5488 = lshr i32 %5458, 31
  %5489 = lshr i32 %5465, 31
  %5490 = xor i32 %5489, %5488
  %5491 = xor i32 %5485, %5488
  %5492 = add i32 %5491, %5490
  %5493 = icmp eq i32 %5492, 2
  %5494 = zext i1 %5493 to i8
  %5495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5494, i8* %5495, align 1
  store %struct.Memory* %loadMem_418ec3, %struct.Memory** %MEMORY
  %loadMem_418ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5497 = getelementptr inbounds %struct.GPR, %struct.GPR* %5496, i32 0, i32 33
  %5498 = getelementptr inbounds %struct.Reg, %struct.Reg* %5497, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %5498 to i64*
  %5499 = load i64, i64* %PC.i550
  %5500 = add i64 %5499, 172
  %5501 = load i64, i64* %PC.i550
  %5502 = add i64 %5501, 6
  %5503 = load i64, i64* %PC.i550
  %5504 = add i64 %5503, 6
  store i64 %5504, i64* %PC.i550
  %5505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5506 = load i8, i8* %5505, align 1
  store i8 %5506, i8* %BRANCH_TAKEN, align 1
  %5507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5508 = icmp ne i8 %5506, 0
  %5509 = select i1 %5508, i64 %5500, i64 %5502
  store i64 %5509, i64* %5507, align 8
  store %struct.Memory* %loadMem_418ec6, %struct.Memory** %MEMORY
  %loadBr_418ec6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418ec6 = icmp eq i8 %loadBr_418ec6, 1
  br i1 %cmpBr_418ec6, label %block_.L_418f72, label %block_418ecc

block_418ecc:                                     ; preds = %block_418ebc
  %loadMem_418ecc = load %struct.Memory*, %struct.Memory** %MEMORY
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5511 = getelementptr inbounds %struct.GPR, %struct.GPR* %5510, i32 0, i32 33
  %5512 = getelementptr inbounds %struct.Reg, %struct.Reg* %5511, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %5512 to i64*
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5514 = getelementptr inbounds %struct.GPR, %struct.GPR* %5513, i32 0, i32 9
  %5515 = getelementptr inbounds %struct.Reg, %struct.Reg* %5514, i32 0, i32 0
  %RSI.i549 = bitcast %union.anon* %5515 to i64*
  %5516 = load i64, i64* %PC.i548
  %5517 = add i64 %5516, 10
  store i64 %5517, i64* %PC.i548
  store i64 ptrtoint (%G__0x456fd9_type* @G__0x456fd9 to i64), i64* %RSI.i549, align 8
  store %struct.Memory* %loadMem_418ecc, %struct.Memory** %MEMORY
  %loadMem_418ed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5519 = getelementptr inbounds %struct.GPR, %struct.GPR* %5518, i32 0, i32 33
  %5520 = getelementptr inbounds %struct.Reg, %struct.Reg* %5519, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %5520 to i64*
  %5521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5522 = getelementptr inbounds %struct.GPR, %struct.GPR* %5521, i32 0, i32 17
  %5523 = getelementptr inbounds %struct.Reg, %struct.Reg* %5522, i32 0, i32 0
  %R8.i547 = bitcast %union.anon* %5523 to i64*
  %5524 = load i64, i64* %PC.i546
  %5525 = add i64 %5524, 10
  store i64 %5525, i64* %PC.i546
  store i64 ptrtoint (%G__0x456fc4_type* @G__0x456fc4 to i64), i64* %R8.i547, align 8
  store %struct.Memory* %loadMem_418ed6, %struct.Memory** %MEMORY
  %loadMem_418ee0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5527 = getelementptr inbounds %struct.GPR, %struct.GPR* %5526, i32 0, i32 33
  %5528 = getelementptr inbounds %struct.Reg, %struct.Reg* %5527, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %5528 to i64*
  %5529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5530 = getelementptr inbounds %struct.GPR, %struct.GPR* %5529, i32 0, i32 11
  %5531 = getelementptr inbounds %struct.Reg, %struct.Reg* %5530, i32 0, i32 0
  %RDI.i544 = bitcast %union.anon* %5531 to i64*
  %5532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5533 = getelementptr inbounds %struct.GPR, %struct.GPR* %5532, i32 0, i32 15
  %5534 = getelementptr inbounds %struct.Reg, %struct.Reg* %5533, i32 0, i32 0
  %RBP.i545 = bitcast %union.anon* %5534 to i64*
  %5535 = load i64, i64* %RBP.i545
  %5536 = sub i64 %5535, 128
  %5537 = load i64, i64* %PC.i543
  %5538 = add i64 %5537, 4
  store i64 %5538, i64* %PC.i543
  store i64 %5536, i64* %RDI.i544, align 8
  store %struct.Memory* %loadMem_418ee0, %struct.Memory** %MEMORY
  %loadMem_418ee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5540 = getelementptr inbounds %struct.GPR, %struct.GPR* %5539, i32 0, i32 33
  %5541 = getelementptr inbounds %struct.Reg, %struct.Reg* %5540, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %5541 to i64*
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5543 = getelementptr inbounds %struct.GPR, %struct.GPR* %5542, i32 0, i32 7
  %5544 = getelementptr inbounds %struct.Reg, %struct.Reg* %5543, i32 0, i32 0
  %RDX.i541 = bitcast %union.anon* %5544 to i64*
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5546 = getelementptr inbounds %struct.GPR, %struct.GPR* %5545, i32 0, i32 15
  %5547 = getelementptr inbounds %struct.Reg, %struct.Reg* %5546, i32 0, i32 0
  %RBP.i542 = bitcast %union.anon* %5547 to i64*
  %5548 = load i64, i64* %RBP.i542
  %5549 = sub i64 %5548, 32
  %5550 = load i64, i64* %PC.i540
  %5551 = add i64 %5550, 3
  store i64 %5551, i64* %PC.i540
  %5552 = inttoptr i64 %5549 to i32*
  %5553 = load i32, i32* %5552
  %5554 = zext i32 %5553 to i64
  store i64 %5554, i64* %RDX.i541, align 8
  store %struct.Memory* %loadMem_418ee4, %struct.Memory** %MEMORY
  %loadMem_418ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5556 = getelementptr inbounds %struct.GPR, %struct.GPR* %5555, i32 0, i32 33
  %5557 = getelementptr inbounds %struct.Reg, %struct.Reg* %5556, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %5557 to i64*
  %5558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5559 = getelementptr inbounds %struct.GPR, %struct.GPR* %5558, i32 0, i32 5
  %5560 = getelementptr inbounds %struct.Reg, %struct.Reg* %5559, i32 0, i32 0
  %RCX.i538 = bitcast %union.anon* %5560 to i64*
  %5561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5562 = getelementptr inbounds %struct.GPR, %struct.GPR* %5561, i32 0, i32 15
  %5563 = getelementptr inbounds %struct.Reg, %struct.Reg* %5562, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %5563 to i64*
  %5564 = load i64, i64* %RBP.i539
  %5565 = sub i64 %5564, 148
  %5566 = load i64, i64* %PC.i537
  %5567 = add i64 %5566, 6
  store i64 %5567, i64* %PC.i537
  %5568 = inttoptr i64 %5565 to i32*
  %5569 = load i32, i32* %5568
  %5570 = zext i32 %5569 to i64
  store i64 %5570, i64* %RCX.i538, align 8
  store %struct.Memory* %loadMem_418ee7, %struct.Memory** %MEMORY
  %loadMem_418eed = load %struct.Memory*, %struct.Memory** %MEMORY
  %5571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5572 = getelementptr inbounds %struct.GPR, %struct.GPR* %5571, i32 0, i32 33
  %5573 = getelementptr inbounds %struct.Reg, %struct.Reg* %5572, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %5573 to i64*
  %5574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5575 = getelementptr inbounds %struct.GPR, %struct.GPR* %5574, i32 0, i32 1
  %5576 = getelementptr inbounds %struct.Reg, %struct.Reg* %5575, i32 0, i32 0
  %5577 = bitcast %union.anon* %5576 to %struct.anon.2*
  %AL.i536 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5577, i32 0, i32 0
  %5578 = load i64, i64* %PC.i535
  %5579 = add i64 %5578, 2
  store i64 %5579, i64* %PC.i535
  store i8 0, i8* %AL.i536, align 1
  store %struct.Memory* %loadMem_418eed, %struct.Memory** %MEMORY
  %loadMem1_418eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %5580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5581 = getelementptr inbounds %struct.GPR, %struct.GPR* %5580, i32 0, i32 33
  %5582 = getelementptr inbounds %struct.Reg, %struct.Reg* %5581, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %5582 to i64*
  %5583 = load i64, i64* %PC.i534
  %5584 = add i64 %5583, -96303
  %5585 = load i64, i64* %PC.i534
  %5586 = add i64 %5585, 5
  %5587 = load i64, i64* %PC.i534
  %5588 = add i64 %5587, 5
  store i64 %5588, i64* %PC.i534
  %5589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5590 = load i64, i64* %5589, align 8
  %5591 = add i64 %5590, -8
  %5592 = inttoptr i64 %5591 to i64*
  store i64 %5586, i64* %5592
  store i64 %5591, i64* %5589, align 8
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5584, i64* %5593, align 8
  store %struct.Memory* %loadMem1_418eef, %struct.Memory** %MEMORY
  %loadMem2_418eef = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_418eef = load i64, i64* %3
  %5594 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %loadMem2_418eef)
  store %struct.Memory* %5594, %struct.Memory** %MEMORY
  %loadMem_418ef4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5596 = getelementptr inbounds %struct.GPR, %struct.GPR* %5595, i32 0, i32 33
  %5597 = getelementptr inbounds %struct.Reg, %struct.Reg* %5596, i32 0, i32 0
  %PC.i529 = bitcast %union.anon* %5597 to i64*
  %5598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5599 = getelementptr inbounds %struct.GPR, %struct.GPR* %5598, i32 0, i32 15
  %5600 = getelementptr inbounds %struct.Reg, %struct.Reg* %5599, i32 0, i32 0
  %RBP.i530 = bitcast %union.anon* %5600 to i64*
  %5601 = load i64, i64* %RBP.i530
  %5602 = sub i64 %5601, 148
  %5603 = load i64, i64* %PC.i529
  %5604 = add i64 %5603, 7
  store i64 %5604, i64* %PC.i529
  %5605 = inttoptr i64 %5602 to i32*
  %5606 = load i32, i32* %5605
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5607, align 1
  %5608 = and i32 %5606, 255
  %5609 = call i32 @llvm.ctpop.i32(i32 %5608)
  %5610 = trunc i32 %5609 to i8
  %5611 = and i8 %5610, 1
  %5612 = xor i8 %5611, 1
  %5613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5612, i8* %5613, align 1
  %5614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5614, align 1
  %5615 = icmp eq i32 %5606, 0
  %5616 = zext i1 %5615 to i8
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5616, i8* %5617, align 1
  %5618 = lshr i32 %5606, 31
  %5619 = trunc i32 %5618 to i8
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5619, i8* %5620, align 1
  %5621 = lshr i32 %5606, 31
  %5622 = xor i32 %5618, %5621
  %5623 = add i32 %5622, %5621
  %5624 = icmp eq i32 %5623, 2
  %5625 = zext i1 %5624 to i8
  %5626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5625, i8* %5626, align 1
  store %struct.Memory* %loadMem_418ef4, %struct.Memory** %MEMORY
  %loadMem_418efb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5628 = getelementptr inbounds %struct.GPR, %struct.GPR* %5627, i32 0, i32 33
  %5629 = getelementptr inbounds %struct.Reg, %struct.Reg* %5628, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %5629 to i64*
  %5630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5631 = getelementptr inbounds %struct.GPR, %struct.GPR* %5630, i32 0, i32 1
  %5632 = getelementptr inbounds %struct.Reg, %struct.Reg* %5631, i32 0, i32 0
  %EAX.i527 = bitcast %union.anon* %5632 to i32*
  %5633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5634 = getelementptr inbounds %struct.GPR, %struct.GPR* %5633, i32 0, i32 15
  %5635 = getelementptr inbounds %struct.Reg, %struct.Reg* %5634, i32 0, i32 0
  %RBP.i528 = bitcast %union.anon* %5635 to i64*
  %5636 = load i64, i64* %RBP.i528
  %5637 = sub i64 %5636, 196
  %5638 = load i32, i32* %EAX.i527
  %5639 = zext i32 %5638 to i64
  %5640 = load i64, i64* %PC.i526
  %5641 = add i64 %5640, 6
  store i64 %5641, i64* %PC.i526
  %5642 = inttoptr i64 %5637 to i32*
  store i32 %5638, i32* %5642
  store %struct.Memory* %loadMem_418efb, %struct.Memory** %MEMORY
  %loadMem_418f01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5644 = getelementptr inbounds %struct.GPR, %struct.GPR* %5643, i32 0, i32 33
  %5645 = getelementptr inbounds %struct.Reg, %struct.Reg* %5644, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %5645 to i64*
  %5646 = load i64, i64* %PC.i525
  %5647 = add i64 %5646, 89
  %5648 = load i64, i64* %PC.i525
  %5649 = add i64 %5648, 6
  %5650 = load i64, i64* %PC.i525
  %5651 = add i64 %5650, 6
  store i64 %5651, i64* %PC.i525
  %5652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5653 = load i8, i8* %5652, align 1
  %5654 = icmp ne i8 %5653, 0
  %5655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5656 = load i8, i8* %5655, align 1
  %5657 = icmp ne i8 %5656, 0
  %5658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5659 = load i8, i8* %5658, align 1
  %5660 = icmp ne i8 %5659, 0
  %5661 = xor i1 %5657, %5660
  %5662 = or i1 %5654, %5661
  %5663 = zext i1 %5662 to i8
  store i8 %5663, i8* %BRANCH_TAKEN, align 1
  %5664 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5665 = select i1 %5662, i64 %5647, i64 %5649
  store i64 %5665, i64* %5664, align 8
  store %struct.Memory* %loadMem_418f01, %struct.Memory** %MEMORY
  %loadBr_418f01 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418f01 = icmp eq i8 %loadBr_418f01, 1
  br i1 %cmpBr_418f01, label %block_.L_418f5a, label %block_418f07

block_418f07:                                     ; preds = %block_418ecc
  %loadMem_418f07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5667 = getelementptr inbounds %struct.GPR, %struct.GPR* %5666, i32 0, i32 33
  %5668 = getelementptr inbounds %struct.Reg, %struct.Reg* %5667, i32 0, i32 0
  %PC.i522 = bitcast %union.anon* %5668 to i64*
  %5669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5670 = getelementptr inbounds %struct.GPR, %struct.GPR* %5669, i32 0, i32 1
  %5671 = getelementptr inbounds %struct.Reg, %struct.Reg* %5670, i32 0, i32 0
  %RAX.i523 = bitcast %union.anon* %5671 to i64*
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5673 = getelementptr inbounds %struct.GPR, %struct.GPR* %5672, i32 0, i32 15
  %5674 = getelementptr inbounds %struct.Reg, %struct.Reg* %5673, i32 0, i32 0
  %RBP.i524 = bitcast %union.anon* %5674 to i64*
  %5675 = load i64, i64* %RBP.i524
  %5676 = sub i64 %5675, 148
  %5677 = load i64, i64* %PC.i522
  %5678 = add i64 %5677, 6
  store i64 %5678, i64* %PC.i522
  %5679 = inttoptr i64 %5676 to i32*
  %5680 = load i32, i32* %5679
  %5681 = zext i32 %5680 to i64
  store i64 %5681, i64* %RAX.i523, align 8
  store %struct.Memory* %loadMem_418f07, %struct.Memory** %MEMORY
  %loadMem_418f0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5683 = getelementptr inbounds %struct.GPR, %struct.GPR* %5682, i32 0, i32 33
  %5684 = getelementptr inbounds %struct.Reg, %struct.Reg* %5683, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %5684 to i64*
  %5685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5686 = getelementptr inbounds %struct.GPR, %struct.GPR* %5685, i32 0, i32 1
  %5687 = getelementptr inbounds %struct.Reg, %struct.Reg* %5686, i32 0, i32 0
  %RAX.i521 = bitcast %union.anon* %5687 to i64*
  %5688 = load i64, i64* %RAX.i521
  %5689 = load i64, i64* %PC.i520
  %5690 = add i64 %5689, 3
  store i64 %5690, i64* %PC.i520
  %5691 = trunc i64 %5688 to i32
  %5692 = sub i32 %5691, 1
  %5693 = zext i32 %5692 to i64
  store i64 %5693, i64* %RAX.i521, align 8
  %5694 = icmp ult i32 %5691, 1
  %5695 = zext i1 %5694 to i8
  %5696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5695, i8* %5696, align 1
  %5697 = and i32 %5692, 255
  %5698 = call i32 @llvm.ctpop.i32(i32 %5697)
  %5699 = trunc i32 %5698 to i8
  %5700 = and i8 %5699, 1
  %5701 = xor i8 %5700, 1
  %5702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5701, i8* %5702, align 1
  %5703 = xor i64 1, %5688
  %5704 = trunc i64 %5703 to i32
  %5705 = xor i32 %5704, %5692
  %5706 = lshr i32 %5705, 4
  %5707 = trunc i32 %5706 to i8
  %5708 = and i8 %5707, 1
  %5709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5708, i8* %5709, align 1
  %5710 = icmp eq i32 %5692, 0
  %5711 = zext i1 %5710 to i8
  %5712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5711, i8* %5712, align 1
  %5713 = lshr i32 %5692, 31
  %5714 = trunc i32 %5713 to i8
  %5715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5714, i8* %5715, align 1
  %5716 = lshr i32 %5691, 31
  %5717 = xor i32 %5713, %5716
  %5718 = add i32 %5717, %5716
  %5719 = icmp eq i32 %5718, 2
  %5720 = zext i1 %5719 to i8
  %5721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5720, i8* %5721, align 1
  store %struct.Memory* %loadMem_418f0d, %struct.Memory** %MEMORY
  %loadMem_418f10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5723 = getelementptr inbounds %struct.GPR, %struct.GPR* %5722, i32 0, i32 33
  %5724 = getelementptr inbounds %struct.Reg, %struct.Reg* %5723, i32 0, i32 0
  %PC.i519 = bitcast %union.anon* %5724 to i64*
  %5725 = load i64, i64* %PC.i519
  %5726 = add i64 %5725, 1
  store i64 %5726, i64* %PC.i519
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %5728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5729 = bitcast %union.anon* %5728 to i32*
  %5730 = load i32, i32* %5729, align 8
  %5731 = sext i32 %5730 to i64
  %5732 = lshr i64 %5731, 32
  store i64 %5732, i64* %5727, align 8
  store %struct.Memory* %loadMem_418f10, %struct.Memory** %MEMORY
  %loadMem_418f11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5734 = getelementptr inbounds %struct.GPR, %struct.GPR* %5733, i32 0, i32 33
  %5735 = getelementptr inbounds %struct.Reg, %struct.Reg* %5734, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %5735 to i64*
  %5736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5737 = getelementptr inbounds %struct.GPR, %struct.GPR* %5736, i32 0, i32 15
  %5738 = getelementptr inbounds %struct.Reg, %struct.Reg* %5737, i32 0, i32 0
  %RBP.i516 = bitcast %union.anon* %5738 to i64*
  %5739 = load i64, i64* %RBP.i516
  %5740 = sub i64 %5739, 20
  %5741 = load i64, i64* %PC.i515
  %5742 = add i64 %5741, 3
  store i64 %5742, i64* %PC.i515
  %5743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %5744 = bitcast %union.anon* %5743 to i32*
  %5745 = load i32, i32* %5744, align 8
  %5746 = zext i32 %5745 to i64
  %5747 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %5748 = bitcast %union.anon* %5747 to i32*
  %5749 = load i32, i32* %5748, align 8
  %5750 = zext i32 %5749 to i64
  %5751 = inttoptr i64 %5740 to i32*
  %5752 = load i32, i32* %5751
  %5753 = sext i32 %5752 to i64
  %5754 = shl i64 %5750, 32
  %5755 = or i64 %5754, %5746
  %5756 = sdiv i64 %5755, %5753
  %5757 = shl i64 %5756, 32
  %5758 = ashr exact i64 %5757, 32
  %5759 = icmp eq i64 %5756, %5758
  br i1 %5759, label %5764, label %5760

; <label>:5760:                                   ; preds = %block_418f07
  %5761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5762 = load i64, i64* %5761, align 8
  %5763 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5762, %struct.Memory* %loadMem_418f11)
  br label %routine_idivl_MINUS0x14__rbp_.exit517

; <label>:5764:                                   ; preds = %block_418f07
  %5765 = srem i64 %5755, %5753
  %5766 = getelementptr inbounds %union.anon, %union.anon* %5743, i64 0, i32 0
  %5767 = and i64 %5756, 4294967295
  store i64 %5767, i64* %5766, align 8
  %5768 = getelementptr inbounds %union.anon, %union.anon* %5747, i64 0, i32 0
  %5769 = and i64 %5765, 4294967295
  store i64 %5769, i64* %5768, align 8
  %5770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5770, align 1
  %5771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %5771, align 1
  %5772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5772, align 1
  %5773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5773, align 1
  %5774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %5774, align 1
  %5775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5775, align 1
  br label %routine_idivl_MINUS0x14__rbp_.exit517

routine_idivl_MINUS0x14__rbp_.exit517:            ; preds = %5760, %5764
  %5776 = phi %struct.Memory* [ %5763, %5760 ], [ %loadMem_418f11, %5764 ]
  store %struct.Memory* %5776, %struct.Memory** %MEMORY
  %loadMem_418f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5778 = getelementptr inbounds %struct.GPR, %struct.GPR* %5777, i32 0, i32 33
  %5779 = getelementptr inbounds %struct.Reg, %struct.Reg* %5778, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %5779 to i64*
  %5780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5781 = getelementptr inbounds %struct.GPR, %struct.GPR* %5780, i32 0, i32 1
  %5782 = getelementptr inbounds %struct.Reg, %struct.Reg* %5781, i32 0, i32 0
  %RAX.i514 = bitcast %union.anon* %5782 to i64*
  %5783 = load i64, i64* %RAX.i514
  %5784 = load i64, i64* %PC.i513
  %5785 = add i64 %5784, 3
  store i64 %5785, i64* %PC.i513
  %5786 = trunc i64 %5783 to i32
  %5787 = add i32 1, %5786
  %5788 = zext i32 %5787 to i64
  store i64 %5788, i64* %RAX.i514, align 8
  %5789 = icmp ult i32 %5787, %5786
  %5790 = icmp ult i32 %5787, 1
  %5791 = or i1 %5789, %5790
  %5792 = zext i1 %5791 to i8
  %5793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5792, i8* %5793, align 1
  %5794 = and i32 %5787, 255
  %5795 = call i32 @llvm.ctpop.i32(i32 %5794)
  %5796 = trunc i32 %5795 to i8
  %5797 = and i8 %5796, 1
  %5798 = xor i8 %5797, 1
  %5799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5798, i8* %5799, align 1
  %5800 = xor i64 1, %5783
  %5801 = trunc i64 %5800 to i32
  %5802 = xor i32 %5801, %5787
  %5803 = lshr i32 %5802, 4
  %5804 = trunc i32 %5803 to i8
  %5805 = and i8 %5804, 1
  %5806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5805, i8* %5806, align 1
  %5807 = icmp eq i32 %5787, 0
  %5808 = zext i1 %5807 to i8
  %5809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5808, i8* %5809, align 1
  %5810 = lshr i32 %5787, 31
  %5811 = trunc i32 %5810 to i8
  %5812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5811, i8* %5812, align 1
  %5813 = lshr i32 %5786, 31
  %5814 = xor i32 %5810, %5813
  %5815 = add i32 %5814, %5810
  %5816 = icmp eq i32 %5815, 2
  %5817 = zext i1 %5816 to i8
  %5818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5817, i8* %5818, align 1
  store %struct.Memory* %loadMem_418f14, %struct.Memory** %MEMORY
  %loadMem_418f17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5820 = getelementptr inbounds %struct.GPR, %struct.GPR* %5819, i32 0, i32 33
  %5821 = getelementptr inbounds %struct.Reg, %struct.Reg* %5820, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %5821 to i64*
  %5822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5823 = getelementptr inbounds %struct.GPR, %struct.GPR* %5822, i32 0, i32 1
  %5824 = getelementptr inbounds %struct.Reg, %struct.Reg* %5823, i32 0, i32 0
  %EAX.i511 = bitcast %union.anon* %5824 to i32*
  %5825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5826 = getelementptr inbounds %struct.GPR, %struct.GPR* %5825, i32 0, i32 15
  %5827 = getelementptr inbounds %struct.Reg, %struct.Reg* %5826, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %5827 to i64*
  %5828 = load i64, i64* %RBP.i512
  %5829 = sub i64 %5828, 28
  %5830 = load i32, i32* %EAX.i511
  %5831 = zext i32 %5830 to i64
  %5832 = load i64, i64* %PC.i510
  %5833 = add i64 %5832, 3
  store i64 %5833, i64* %PC.i510
  %5834 = inttoptr i64 %5829 to i32*
  store i32 %5830, i32* %5834
  store %struct.Memory* %loadMem_418f17, %struct.Memory** %MEMORY
  %loadMem_418f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5836 = getelementptr inbounds %struct.GPR, %struct.GPR* %5835, i32 0, i32 33
  %5837 = getelementptr inbounds %struct.Reg, %struct.Reg* %5836, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %5837 to i64*
  %5838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5839 = getelementptr inbounds %struct.GPR, %struct.GPR* %5838, i32 0, i32 15
  %5840 = getelementptr inbounds %struct.Reg, %struct.Reg* %5839, i32 0, i32 0
  %RBP.i509 = bitcast %union.anon* %5840 to i64*
  %5841 = load i64, i64* %RBP.i509
  %5842 = sub i64 %5841, 132
  %5843 = load i64, i64* %PC.i508
  %5844 = add i64 %5843, 10
  store i64 %5844, i64* %PC.i508
  %5845 = inttoptr i64 %5842 to i32*
  store i32 20, i32* %5845
  store %struct.Memory* %loadMem_418f1a, %struct.Memory** %MEMORY
  br label %block_.L_418f24

block_.L_418f24:                                  ; preds = %block_418f2e, %routine_idivl_MINUS0x14__rbp_.exit517
  %loadMem_418f24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5847 = getelementptr inbounds %struct.GPR, %struct.GPR* %5846, i32 0, i32 33
  %5848 = getelementptr inbounds %struct.Reg, %struct.Reg* %5847, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %5848 to i64*
  %5849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5850 = getelementptr inbounds %struct.GPR, %struct.GPR* %5849, i32 0, i32 15
  %5851 = getelementptr inbounds %struct.Reg, %struct.Reg* %5850, i32 0, i32 0
  %RBP.i507 = bitcast %union.anon* %5851 to i64*
  %5852 = load i64, i64* %RBP.i507
  %5853 = sub i64 %5852, 28
  %5854 = load i64, i64* %PC.i506
  %5855 = add i64 %5854, 4
  store i64 %5855, i64* %PC.i506
  %5856 = inttoptr i64 %5853 to i32*
  %5857 = load i32, i32* %5856
  %5858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5858, align 1
  %5859 = and i32 %5857, 255
  %5860 = call i32 @llvm.ctpop.i32(i32 %5859)
  %5861 = trunc i32 %5860 to i8
  %5862 = and i8 %5861, 1
  %5863 = xor i8 %5862, 1
  %5864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5863, i8* %5864, align 1
  %5865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5865, align 1
  %5866 = icmp eq i32 %5857, 0
  %5867 = zext i1 %5866 to i8
  %5868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5867, i8* %5868, align 1
  %5869 = lshr i32 %5857, 31
  %5870 = trunc i32 %5869 to i8
  %5871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5870, i8* %5871, align 1
  %5872 = lshr i32 %5857, 31
  %5873 = xor i32 %5869, %5872
  %5874 = add i32 %5873, %5872
  %5875 = icmp eq i32 %5874, 2
  %5876 = zext i1 %5875 to i8
  %5877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5876, i8* %5877, align 1
  store %struct.Memory* %loadMem_418f24, %struct.Memory** %MEMORY
  %loadMem_418f28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5879 = getelementptr inbounds %struct.GPR, %struct.GPR* %5878, i32 0, i32 33
  %5880 = getelementptr inbounds %struct.Reg, %struct.Reg* %5879, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %5880 to i64*
  %5881 = load i64, i64* %PC.i505
  %5882 = add i64 %5881, 45
  %5883 = load i64, i64* %PC.i505
  %5884 = add i64 %5883, 6
  %5885 = load i64, i64* %PC.i505
  %5886 = add i64 %5885, 6
  store i64 %5886, i64* %PC.i505
  %5887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5888 = load i8, i8* %5887, align 1
  %5889 = icmp ne i8 %5888, 0
  %5890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5891 = load i8, i8* %5890, align 1
  %5892 = icmp ne i8 %5891, 0
  %5893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5894 = load i8, i8* %5893, align 1
  %5895 = icmp ne i8 %5894, 0
  %5896 = xor i1 %5892, %5895
  %5897 = or i1 %5889, %5896
  %5898 = zext i1 %5897 to i8
  store i8 %5898, i8* %BRANCH_TAKEN, align 1
  %5899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5900 = select i1 %5897, i64 %5882, i64 %5884
  store i64 %5900, i64* %5899, align 8
  store %struct.Memory* %loadMem_418f28, %struct.Memory** %MEMORY
  %loadBr_418f28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418f28 = icmp eq i8 %loadBr_418f28, 1
  br i1 %cmpBr_418f28, label %block_.L_418f55, label %block_418f2e

block_418f2e:                                     ; preds = %block_.L_418f24
  %loadMem_418f2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5902 = getelementptr inbounds %struct.GPR, %struct.GPR* %5901, i32 0, i32 33
  %5903 = getelementptr inbounds %struct.Reg, %struct.Reg* %5902, i32 0, i32 0
  %PC.i502 = bitcast %union.anon* %5903 to i64*
  %5904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5905 = getelementptr inbounds %struct.GPR, %struct.GPR* %5904, i32 0, i32 1
  %5906 = getelementptr inbounds %struct.Reg, %struct.Reg* %5905, i32 0, i32 0
  %RAX.i503 = bitcast %union.anon* %5906 to i64*
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5908 = getelementptr inbounds %struct.GPR, %struct.GPR* %5907, i32 0, i32 15
  %5909 = getelementptr inbounds %struct.Reg, %struct.Reg* %5908, i32 0, i32 0
  %RBP.i504 = bitcast %union.anon* %5909 to i64*
  %5910 = load i64, i64* %RBP.i504
  %5911 = sub i64 %5910, 132
  %5912 = load i64, i64* %PC.i502
  %5913 = add i64 %5912, 6
  store i64 %5913, i64* %PC.i502
  %5914 = inttoptr i64 %5911 to i32*
  %5915 = load i32, i32* %5914
  %5916 = zext i32 %5915 to i64
  store i64 %5916, i64* %RAX.i503, align 8
  store %struct.Memory* %loadMem_418f2e, %struct.Memory** %MEMORY
  %loadMem_418f34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5918 = getelementptr inbounds %struct.GPR, %struct.GPR* %5917, i32 0, i32 33
  %5919 = getelementptr inbounds %struct.Reg, %struct.Reg* %5918, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %5919 to i64*
  %5920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5921 = getelementptr inbounds %struct.GPR, %struct.GPR* %5920, i32 0, i32 1
  %5922 = getelementptr inbounds %struct.Reg, %struct.Reg* %5921, i32 0, i32 0
  %EAX.i500 = bitcast %union.anon* %5922 to i32*
  %5923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5924 = getelementptr inbounds %struct.GPR, %struct.GPR* %5923, i32 0, i32 5
  %5925 = getelementptr inbounds %struct.Reg, %struct.Reg* %5924, i32 0, i32 0
  %RCX.i501 = bitcast %union.anon* %5925 to i64*
  %5926 = load i32, i32* %EAX.i500
  %5927 = zext i32 %5926 to i64
  %5928 = load i64, i64* %PC.i499
  %5929 = add i64 %5928, 2
  store i64 %5929, i64* %PC.i499
  %5930 = and i64 %5927, 4294967295
  store i64 %5930, i64* %RCX.i501, align 8
  store %struct.Memory* %loadMem_418f34, %struct.Memory** %MEMORY
  %loadMem_418f36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5932 = getelementptr inbounds %struct.GPR, %struct.GPR* %5931, i32 0, i32 33
  %5933 = getelementptr inbounds %struct.Reg, %struct.Reg* %5932, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %5933 to i64*
  %5934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5935 = getelementptr inbounds %struct.GPR, %struct.GPR* %5934, i32 0, i32 5
  %5936 = getelementptr inbounds %struct.Reg, %struct.Reg* %5935, i32 0, i32 0
  %RCX.i498 = bitcast %union.anon* %5936 to i64*
  %5937 = load i64, i64* %RCX.i498
  %5938 = load i64, i64* %PC.i497
  %5939 = add i64 %5938, 3
  store i64 %5939, i64* %PC.i497
  %5940 = trunc i64 %5937 to i32
  %5941 = add i32 1, %5940
  %5942 = zext i32 %5941 to i64
  store i64 %5942, i64* %RCX.i498, align 8
  %5943 = icmp ult i32 %5941, %5940
  %5944 = icmp ult i32 %5941, 1
  %5945 = or i1 %5943, %5944
  %5946 = zext i1 %5945 to i8
  %5947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5946, i8* %5947, align 1
  %5948 = and i32 %5941, 255
  %5949 = call i32 @llvm.ctpop.i32(i32 %5948)
  %5950 = trunc i32 %5949 to i8
  %5951 = and i8 %5950, 1
  %5952 = xor i8 %5951, 1
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5952, i8* %5953, align 1
  %5954 = xor i64 1, %5937
  %5955 = trunc i64 %5954 to i32
  %5956 = xor i32 %5955, %5941
  %5957 = lshr i32 %5956, 4
  %5958 = trunc i32 %5957 to i8
  %5959 = and i8 %5958, 1
  %5960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5959, i8* %5960, align 1
  %5961 = icmp eq i32 %5941, 0
  %5962 = zext i1 %5961 to i8
  %5963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5962, i8* %5963, align 1
  %5964 = lshr i32 %5941, 31
  %5965 = trunc i32 %5964 to i8
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5965, i8* %5966, align 1
  %5967 = lshr i32 %5940, 31
  %5968 = xor i32 %5964, %5967
  %5969 = add i32 %5968, %5964
  %5970 = icmp eq i32 %5969, 2
  %5971 = zext i1 %5970 to i8
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5971, i8* %5972, align 1
  store %struct.Memory* %loadMem_418f36, %struct.Memory** %MEMORY
  %loadMem_418f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5974 = getelementptr inbounds %struct.GPR, %struct.GPR* %5973, i32 0, i32 33
  %5975 = getelementptr inbounds %struct.Reg, %struct.Reg* %5974, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %5975 to i64*
  %5976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5977 = getelementptr inbounds %struct.GPR, %struct.GPR* %5976, i32 0, i32 5
  %5978 = getelementptr inbounds %struct.Reg, %struct.Reg* %5977, i32 0, i32 0
  %ECX.i495 = bitcast %union.anon* %5978 to i32*
  %5979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5980 = getelementptr inbounds %struct.GPR, %struct.GPR* %5979, i32 0, i32 15
  %5981 = getelementptr inbounds %struct.Reg, %struct.Reg* %5980, i32 0, i32 0
  %RBP.i496 = bitcast %union.anon* %5981 to i64*
  %5982 = load i64, i64* %RBP.i496
  %5983 = sub i64 %5982, 132
  %5984 = load i32, i32* %ECX.i495
  %5985 = zext i32 %5984 to i64
  %5986 = load i64, i64* %PC.i494
  %5987 = add i64 %5986, 6
  store i64 %5987, i64* %PC.i494
  %5988 = inttoptr i64 %5983 to i32*
  store i32 %5984, i32* %5988
  store %struct.Memory* %loadMem_418f39, %struct.Memory** %MEMORY
  %loadMem_418f3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5990 = getelementptr inbounds %struct.GPR, %struct.GPR* %5989, i32 0, i32 33
  %5991 = getelementptr inbounds %struct.Reg, %struct.Reg* %5990, i32 0, i32 0
  %PC.i491 = bitcast %union.anon* %5991 to i64*
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5993 = getelementptr inbounds %struct.GPR, %struct.GPR* %5992, i32 0, i32 1
  %5994 = getelementptr inbounds %struct.Reg, %struct.Reg* %5993, i32 0, i32 0
  %EAX.i492 = bitcast %union.anon* %5994 to i32*
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5996 = getelementptr inbounds %struct.GPR, %struct.GPR* %5995, i32 0, i32 7
  %5997 = getelementptr inbounds %struct.Reg, %struct.Reg* %5996, i32 0, i32 0
  %RDX.i493 = bitcast %union.anon* %5997 to i64*
  %5998 = load i32, i32* %EAX.i492
  %5999 = zext i32 %5998 to i64
  %6000 = load i64, i64* %PC.i491
  %6001 = add i64 %6000, 3
  store i64 %6001, i64* %PC.i491
  %6002 = shl i64 %5999, 32
  %6003 = ashr exact i64 %6002, 32
  store i64 %6003, i64* %RDX.i493, align 8
  store %struct.Memory* %loadMem_418f3f, %struct.Memory** %MEMORY
  %loadMem_418f42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6005 = getelementptr inbounds %struct.GPR, %struct.GPR* %6004, i32 0, i32 33
  %6006 = getelementptr inbounds %struct.Reg, %struct.Reg* %6005, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %6006 to i64*
  %6007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6008 = getelementptr inbounds %struct.GPR, %struct.GPR* %6007, i32 0, i32 7
  %6009 = getelementptr inbounds %struct.Reg, %struct.Reg* %6008, i32 0, i32 0
  %RDX.i489 = bitcast %union.anon* %6009 to i64*
  %6010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6011 = getelementptr inbounds %struct.GPR, %struct.GPR* %6010, i32 0, i32 15
  %6012 = getelementptr inbounds %struct.Reg, %struct.Reg* %6011, i32 0, i32 0
  %RBP.i490 = bitcast %union.anon* %6012 to i64*
  %6013 = load i64, i64* %RBP.i490
  %6014 = load i64, i64* %RDX.i489
  %6015 = add i64 %6013, -128
  %6016 = add i64 %6015, %6014
  %6017 = load i64, i64* %PC.i488
  %6018 = add i64 %6017, 5
  store i64 %6018, i64* %PC.i488
  %6019 = inttoptr i64 %6016 to i8*
  store i8 61, i8* %6019
  store %struct.Memory* %loadMem_418f42, %struct.Memory** %MEMORY
  %loadMem_418f47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6021 = getelementptr inbounds %struct.GPR, %struct.GPR* %6020, i32 0, i32 33
  %6022 = getelementptr inbounds %struct.Reg, %struct.Reg* %6021, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %6022 to i64*
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6024 = getelementptr inbounds %struct.GPR, %struct.GPR* %6023, i32 0, i32 1
  %6025 = getelementptr inbounds %struct.Reg, %struct.Reg* %6024, i32 0, i32 0
  %RAX.i486 = bitcast %union.anon* %6025 to i64*
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 15
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %RBP.i487 = bitcast %union.anon* %6028 to i64*
  %6029 = load i64, i64* %RBP.i487
  %6030 = sub i64 %6029, 28
  %6031 = load i64, i64* %PC.i485
  %6032 = add i64 %6031, 3
  store i64 %6032, i64* %PC.i485
  %6033 = inttoptr i64 %6030 to i32*
  %6034 = load i32, i32* %6033
  %6035 = zext i32 %6034 to i64
  store i64 %6035, i64* %RAX.i486, align 8
  store %struct.Memory* %loadMem_418f47, %struct.Memory** %MEMORY
  %loadMem_418f4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6037 = getelementptr inbounds %struct.GPR, %struct.GPR* %6036, i32 0, i32 33
  %6038 = getelementptr inbounds %struct.Reg, %struct.Reg* %6037, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %6038 to i64*
  %6039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6040 = getelementptr inbounds %struct.GPR, %struct.GPR* %6039, i32 0, i32 1
  %6041 = getelementptr inbounds %struct.Reg, %struct.Reg* %6040, i32 0, i32 0
  %RAX.i484 = bitcast %union.anon* %6041 to i64*
  %6042 = load i64, i64* %RAX.i484
  %6043 = load i64, i64* %PC.i483
  %6044 = add i64 %6043, 3
  store i64 %6044, i64* %PC.i483
  %6045 = trunc i64 %6042 to i32
  %6046 = add i32 -1, %6045
  %6047 = zext i32 %6046 to i64
  store i64 %6047, i64* %RAX.i484, align 8
  %6048 = icmp ult i32 %6046, %6045
  %6049 = icmp ult i32 %6046, -1
  %6050 = or i1 %6048, %6049
  %6051 = zext i1 %6050 to i8
  %6052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6051, i8* %6052, align 1
  %6053 = and i32 %6046, 255
  %6054 = call i32 @llvm.ctpop.i32(i32 %6053)
  %6055 = trunc i32 %6054 to i8
  %6056 = and i8 %6055, 1
  %6057 = xor i8 %6056, 1
  %6058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6057, i8* %6058, align 1
  %6059 = xor i64 -1, %6042
  %6060 = trunc i64 %6059 to i32
  %6061 = xor i32 %6060, %6046
  %6062 = lshr i32 %6061, 4
  %6063 = trunc i32 %6062 to i8
  %6064 = and i8 %6063, 1
  %6065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6064, i8* %6065, align 1
  %6066 = icmp eq i32 %6046, 0
  %6067 = zext i1 %6066 to i8
  %6068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6067, i8* %6068, align 1
  %6069 = lshr i32 %6046, 31
  %6070 = trunc i32 %6069 to i8
  %6071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6070, i8* %6071, align 1
  %6072 = lshr i32 %6045, 31
  %6073 = xor i32 %6069, %6072
  %6074 = xor i32 %6069, 1
  %6075 = add i32 %6073, %6074
  %6076 = icmp eq i32 %6075, 2
  %6077 = zext i1 %6076 to i8
  %6078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6077, i8* %6078, align 1
  store %struct.Memory* %loadMem_418f4a, %struct.Memory** %MEMORY
  %loadMem_418f4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6080 = getelementptr inbounds %struct.GPR, %struct.GPR* %6079, i32 0, i32 33
  %6081 = getelementptr inbounds %struct.Reg, %struct.Reg* %6080, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %6081 to i64*
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 1
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %EAX.i481 = bitcast %union.anon* %6084 to i32*
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6086 = getelementptr inbounds %struct.GPR, %struct.GPR* %6085, i32 0, i32 15
  %6087 = getelementptr inbounds %struct.Reg, %struct.Reg* %6086, i32 0, i32 0
  %RBP.i482 = bitcast %union.anon* %6087 to i64*
  %6088 = load i64, i64* %RBP.i482
  %6089 = sub i64 %6088, 28
  %6090 = load i32, i32* %EAX.i481
  %6091 = zext i32 %6090 to i64
  %6092 = load i64, i64* %PC.i480
  %6093 = add i64 %6092, 3
  store i64 %6093, i64* %PC.i480
  %6094 = inttoptr i64 %6089 to i32*
  store i32 %6090, i32* %6094
  store %struct.Memory* %loadMem_418f4d, %struct.Memory** %MEMORY
  %loadMem_418f50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6096 = getelementptr inbounds %struct.GPR, %struct.GPR* %6095, i32 0, i32 33
  %6097 = getelementptr inbounds %struct.Reg, %struct.Reg* %6096, i32 0, i32 0
  %PC.i479 = bitcast %union.anon* %6097 to i64*
  %6098 = load i64, i64* %PC.i479
  %6099 = add i64 %6098, -44
  %6100 = load i64, i64* %PC.i479
  %6101 = add i64 %6100, 5
  store i64 %6101, i64* %PC.i479
  %6102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6099, i64* %6102, align 8
  store %struct.Memory* %loadMem_418f50, %struct.Memory** %MEMORY
  br label %block_.L_418f24

block_.L_418f55:                                  ; preds = %block_.L_418f24
  %loadMem_418f55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6104 = getelementptr inbounds %struct.GPR, %struct.GPR* %6103, i32 0, i32 33
  %6105 = getelementptr inbounds %struct.Reg, %struct.Reg* %6104, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %6105 to i64*
  %6106 = load i64, i64* %PC.i478
  %6107 = add i64 %6106, 5
  %6108 = load i64, i64* %PC.i478
  %6109 = add i64 %6108, 5
  store i64 %6109, i64* %PC.i478
  %6110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6107, i64* %6110, align 8
  store %struct.Memory* %loadMem_418f55, %struct.Memory** %MEMORY
  br label %block_.L_418f5a

block_.L_418f5a:                                  ; preds = %block_.L_418f55, %block_418ecc
  %loadMem_418f5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6112 = getelementptr inbounds %struct.GPR, %struct.GPR* %6111, i32 0, i32 33
  %6113 = getelementptr inbounds %struct.Reg, %struct.Reg* %6112, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %6113 to i64*
  %6114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6115 = getelementptr inbounds %struct.GPR, %struct.GPR* %6114, i32 0, i32 11
  %6116 = getelementptr inbounds %struct.Reg, %struct.Reg* %6115, i32 0, i32 0
  %RDI.i476 = bitcast %union.anon* %6116 to i64*
  %6117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6118 = getelementptr inbounds %struct.GPR, %struct.GPR* %6117, i32 0, i32 15
  %6119 = getelementptr inbounds %struct.Reg, %struct.Reg* %6118, i32 0, i32 0
  %RBP.i477 = bitcast %union.anon* %6119 to i64*
  %6120 = load i64, i64* %RBP.i477
  %6121 = sub i64 %6120, 128
  %6122 = load i64, i64* %PC.i475
  %6123 = add i64 %6122, 4
  store i64 %6123, i64* %PC.i475
  store i64 %6121, i64* %RDI.i476, align 8
  store %struct.Memory* %loadMem_418f5a, %struct.Memory** %MEMORY
  %loadMem_418f5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6125 = getelementptr inbounds %struct.GPR, %struct.GPR* %6124, i32 0, i32 33
  %6126 = getelementptr inbounds %struct.Reg, %struct.Reg* %6125, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %6126 to i64*
  %6127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6128 = getelementptr inbounds %struct.GPR, %struct.GPR* %6127, i32 0, i32 9
  %6129 = getelementptr inbounds %struct.Reg, %struct.Reg* %6128, i32 0, i32 0
  %RSI.i473 = bitcast %union.anon* %6129 to i64*
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6131 = getelementptr inbounds %struct.GPR, %struct.GPR* %6130, i32 0, i32 15
  %6132 = getelementptr inbounds %struct.Reg, %struct.Reg* %6131, i32 0, i32 0
  %RBP.i474 = bitcast %union.anon* %6132 to i64*
  %6133 = load i64, i64* %RBP.i474
  %6134 = sub i64 %6133, 8
  %6135 = load i64, i64* %PC.i472
  %6136 = add i64 %6135, 4
  store i64 %6136, i64* %PC.i472
  %6137 = inttoptr i64 %6134 to i64*
  %6138 = load i64, i64* %6137
  store i64 %6138, i64* %RSI.i473, align 8
  store %struct.Memory* %loadMem_418f5e, %struct.Memory** %MEMORY
  %loadMem1_418f62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6140 = getelementptr inbounds %struct.GPR, %struct.GPR* %6139, i32 0, i32 33
  %6141 = getelementptr inbounds %struct.Reg, %struct.Reg* %6140, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %6141 to i64*
  %6142 = load i64, i64* %PC.i471
  %6143 = add i64 %6142, -96930
  %6144 = load i64, i64* %PC.i471
  %6145 = add i64 %6144, 5
  %6146 = load i64, i64* %PC.i471
  %6147 = add i64 %6146, 5
  store i64 %6147, i64* %PC.i471
  %6148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6149 = load i64, i64* %6148, align 8
  %6150 = add i64 %6149, -8
  %6151 = inttoptr i64 %6150 to i64*
  store i64 %6145, i64* %6151
  store i64 %6150, i64* %6148, align 8
  %6152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6143, i64* %6152, align 8
  store %struct.Memory* %loadMem1_418f62, %struct.Memory** %MEMORY
  %loadMem2_418f62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_418f62 = load i64, i64* %3
  %6153 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %loadMem2_418f62)
  store %struct.Memory* %6153, %struct.Memory** %MEMORY
  %loadMem_418f67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6155 = getelementptr inbounds %struct.GPR, %struct.GPR* %6154, i32 0, i32 33
  %6156 = getelementptr inbounds %struct.Reg, %struct.Reg* %6155, i32 0, i32 0
  %PC.i465 = bitcast %union.anon* %6156 to i64*
  %6157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6158 = getelementptr inbounds %struct.GPR, %struct.GPR* %6157, i32 0, i32 1
  %6159 = getelementptr inbounds %struct.Reg, %struct.Reg* %6158, i32 0, i32 0
  %EAX.i466 = bitcast %union.anon* %6159 to i32*
  %6160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6161 = getelementptr inbounds %struct.GPR, %struct.GPR* %6160, i32 0, i32 15
  %6162 = getelementptr inbounds %struct.Reg, %struct.Reg* %6161, i32 0, i32 0
  %RBP.i467 = bitcast %union.anon* %6162 to i64*
  %6163 = load i64, i64* %RBP.i467
  %6164 = sub i64 %6163, 200
  %6165 = load i32, i32* %EAX.i466
  %6166 = zext i32 %6165 to i64
  %6167 = load i64, i64* %PC.i465
  %6168 = add i64 %6167, 6
  store i64 %6168, i64* %PC.i465
  %6169 = inttoptr i64 %6164 to i32*
  store i32 %6165, i32* %6169
  store %struct.Memory* %loadMem_418f67, %struct.Memory** %MEMORY
  %loadMem_418f6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6171 = getelementptr inbounds %struct.GPR, %struct.GPR* %6170, i32 0, i32 33
  %6172 = getelementptr inbounds %struct.Reg, %struct.Reg* %6171, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %6172 to i64*
  %6173 = load i64, i64* %PC.i464
  %6174 = add i64 %6173, 413
  %6175 = load i64, i64* %PC.i464
  %6176 = add i64 %6175, 5
  store i64 %6176, i64* %PC.i464
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6174, i64* %6177, align 8
  store %struct.Memory* %loadMem_418f6d, %struct.Memory** %MEMORY
  br label %block_.L_41910a

block_.L_418f72:                                  ; preds = %block_418ebc, %block_.L_418ead
  %loadMem_418f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6179 = getelementptr inbounds %struct.GPR, %struct.GPR* %6178, i32 0, i32 33
  %6180 = getelementptr inbounds %struct.Reg, %struct.Reg* %6179, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %6180 to i64*
  %6181 = load i64, i64* %PC.i463
  %6182 = add i64 %6181, 5
  %6183 = load i64, i64* %PC.i463
  %6184 = add i64 %6183, 5
  store i64 %6184, i64* %PC.i463
  %6185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6182, i64* %6185, align 8
  store %struct.Memory* %loadMem_418f72, %struct.Memory** %MEMORY
  br label %block_.L_418f77

block_.L_418f77:                                  ; preds = %block_.L_418f72
  %loadMem_418f77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6187 = getelementptr inbounds %struct.GPR, %struct.GPR* %6186, i32 0, i32 33
  %6188 = getelementptr inbounds %struct.Reg, %struct.Reg* %6187, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %6188 to i64*
  %6189 = load i64, i64* %PC.i462
  %6190 = add i64 %6189, 5
  %6191 = load i64, i64* %PC.i462
  %6192 = add i64 %6191, 5
  store i64 %6192, i64* %PC.i462
  %6193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6190, i64* %6193, align 8
  store %struct.Memory* %loadMem_418f77, %struct.Memory** %MEMORY
  br label %block_.L_418f7c

block_.L_418f7c:                                  ; preds = %block_.L_418f77
  %loadMem_418f7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6195 = getelementptr inbounds %struct.GPR, %struct.GPR* %6194, i32 0, i32 33
  %6196 = getelementptr inbounds %struct.Reg, %struct.Reg* %6195, i32 0, i32 0
  %PC.i461 = bitcast %union.anon* %6196 to i64*
  %6197 = load i64, i64* %PC.i461
  %6198 = add i64 %6197, 5
  %6199 = load i64, i64* %PC.i461
  %6200 = add i64 %6199, 5
  store i64 %6200, i64* %PC.i461
  %6201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6198, i64* %6201, align 8
  store %struct.Memory* %loadMem_418f7c, %struct.Memory** %MEMORY
  br label %block_.L_418f81

block_.L_418f81:                                  ; preds = %block_.L_418f7c
  %loadMem_418f81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6203 = getelementptr inbounds %struct.GPR, %struct.GPR* %6202, i32 0, i32 33
  %6204 = getelementptr inbounds %struct.Reg, %struct.Reg* %6203, i32 0, i32 0
  %PC.i458 = bitcast %union.anon* %6204 to i64*
  %6205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6206 = getelementptr inbounds %struct.GPR, %struct.GPR* %6205, i32 0, i32 1
  %6207 = getelementptr inbounds %struct.Reg, %struct.Reg* %6206, i32 0, i32 0
  %RAX.i459 = bitcast %union.anon* %6207 to i64*
  %6208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6209 = getelementptr inbounds %struct.GPR, %struct.GPR* %6208, i32 0, i32 15
  %6210 = getelementptr inbounds %struct.Reg, %struct.Reg* %6209, i32 0, i32 0
  %RBP.i460 = bitcast %union.anon* %6210 to i64*
  %6211 = load i64, i64* %RBP.i460
  %6212 = sub i64 %6211, 16
  %6213 = load i64, i64* %PC.i458
  %6214 = add i64 %6213, 4
  store i64 %6214, i64* %PC.i458
  %6215 = inttoptr i64 %6212 to i64*
  %6216 = load i64, i64* %6215
  store i64 %6216, i64* %RAX.i459, align 8
  store %struct.Memory* %loadMem_418f81, %struct.Memory** %MEMORY
  %loadMem_418f85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6218 = getelementptr inbounds %struct.GPR, %struct.GPR* %6217, i32 0, i32 33
  %6219 = getelementptr inbounds %struct.Reg, %struct.Reg* %6218, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %6219 to i64*
  %6220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6221 = getelementptr inbounds %struct.GPR, %struct.GPR* %6220, i32 0, i32 1
  %6222 = getelementptr inbounds %struct.Reg, %struct.Reg* %6221, i32 0, i32 0
  %RAX.i457 = bitcast %union.anon* %6222 to i64*
  %6223 = load i64, i64* %RAX.i457
  %6224 = add i64 %6223, 40
  %6225 = load i64, i64* %PC.i456
  %6226 = add i64 %6225, 4
  store i64 %6226, i64* %PC.i456
  %6227 = inttoptr i64 %6224 to i32*
  %6228 = load i32, i32* %6227
  %6229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6229, align 1
  %6230 = and i32 %6228, 255
  %6231 = call i32 @llvm.ctpop.i32(i32 %6230)
  %6232 = trunc i32 %6231 to i8
  %6233 = and i8 %6232, 1
  %6234 = xor i8 %6233, 1
  %6235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6234, i8* %6235, align 1
  %6236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6236, align 1
  %6237 = icmp eq i32 %6228, 0
  %6238 = zext i1 %6237 to i8
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6238, i8* %6239, align 1
  %6240 = lshr i32 %6228, 31
  %6241 = trunc i32 %6240 to i8
  %6242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6241, i8* %6242, align 1
  %6243 = lshr i32 %6228, 31
  %6244 = xor i32 %6240, %6243
  %6245 = add i32 %6244, %6243
  %6246 = icmp eq i32 %6245, 2
  %6247 = zext i1 %6246 to i8
  %6248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6247, i8* %6248, align 1
  store %struct.Memory* %loadMem_418f85, %struct.Memory** %MEMORY
  %loadMem_418f89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6250 = getelementptr inbounds %struct.GPR, %struct.GPR* %6249, i32 0, i32 33
  %6251 = getelementptr inbounds %struct.Reg, %struct.Reg* %6250, i32 0, i32 0
  %PC.i455 = bitcast %union.anon* %6251 to i64*
  %6252 = load i64, i64* %PC.i455
  %6253 = add i64 %6252, 73
  %6254 = load i64, i64* %PC.i455
  %6255 = add i64 %6254, 6
  %6256 = load i64, i64* %PC.i455
  %6257 = add i64 %6256, 6
  store i64 %6257, i64* %PC.i455
  %6258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6259 = load i8, i8* %6258, align 1
  store i8 %6259, i8* %BRANCH_TAKEN, align 1
  %6260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6261 = icmp ne i8 %6259, 0
  %6262 = select i1 %6261, i64 %6253, i64 %6255
  store i64 %6262, i64* %6260, align 8
  store %struct.Memory* %loadMem_418f89, %struct.Memory** %MEMORY
  %loadBr_418f89 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_418f89 = icmp eq i8 %loadBr_418f89, 1
  br i1 %cmpBr_418f89, label %block_.L_418fd2, label %block_418f8f

block_418f8f:                                     ; preds = %block_.L_418f81
  %loadMem_418f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6264 = getelementptr inbounds %struct.GPR, %struct.GPR* %6263, i32 0, i32 33
  %6265 = getelementptr inbounds %struct.Reg, %struct.Reg* %6264, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %6265 to i64*
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6267 = getelementptr inbounds %struct.GPR, %struct.GPR* %6266, i32 0, i32 9
  %6268 = getelementptr inbounds %struct.Reg, %struct.Reg* %6267, i32 0, i32 0
  %RSI.i454 = bitcast %union.anon* %6268 to i64*
  %6269 = load i64, i64* %PC.i453
  %6270 = add i64 %6269, 10
  store i64 %6270, i64* %PC.i453
  store i64 ptrtoint (%G__0x456fe7_type* @G__0x456fe7 to i64), i64* %RSI.i454, align 8
  store %struct.Memory* %loadMem_418f8f, %struct.Memory** %MEMORY
  %loadMem_418f99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6272 = getelementptr inbounds %struct.GPR, %struct.GPR* %6271, i32 0, i32 33
  %6273 = getelementptr inbounds %struct.Reg, %struct.Reg* %6272, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %6273 to i64*
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6275 = getelementptr inbounds %struct.GPR, %struct.GPR* %6274, i32 0, i32 11
  %6276 = getelementptr inbounds %struct.Reg, %struct.Reg* %6275, i32 0, i32 0
  %RDI.i451 = bitcast %union.anon* %6276 to i64*
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6278 = getelementptr inbounds %struct.GPR, %struct.GPR* %6277, i32 0, i32 15
  %6279 = getelementptr inbounds %struct.Reg, %struct.Reg* %6278, i32 0, i32 0
  %RBP.i452 = bitcast %union.anon* %6279 to i64*
  %6280 = load i64, i64* %RBP.i452
  %6281 = sub i64 %6280, 128
  %6282 = load i64, i64* %PC.i450
  %6283 = add i64 %6282, 4
  store i64 %6283, i64* %PC.i450
  store i64 %6281, i64* %RDI.i451, align 8
  store %struct.Memory* %loadMem_418f99, %struct.Memory** %MEMORY
  %loadMem_418f9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6285 = getelementptr inbounds %struct.GPR, %struct.GPR* %6284, i32 0, i32 33
  %6286 = getelementptr inbounds %struct.Reg, %struct.Reg* %6285, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %6286 to i64*
  %6287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6288 = getelementptr inbounds %struct.GPR, %struct.GPR* %6287, i32 0, i32 7
  %6289 = getelementptr inbounds %struct.Reg, %struct.Reg* %6288, i32 0, i32 0
  %RDX.i448 = bitcast %union.anon* %6289 to i64*
  %6290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6291 = getelementptr inbounds %struct.GPR, %struct.GPR* %6290, i32 0, i32 15
  %6292 = getelementptr inbounds %struct.Reg, %struct.Reg* %6291, i32 0, i32 0
  %RBP.i449 = bitcast %union.anon* %6292 to i64*
  %6293 = load i64, i64* %RBP.i449
  %6294 = sub i64 %6293, 32
  %6295 = load i64, i64* %PC.i447
  %6296 = add i64 %6295, 3
  store i64 %6296, i64* %PC.i447
  %6297 = inttoptr i64 %6294 to i32*
  %6298 = load i32, i32* %6297
  %6299 = zext i32 %6298 to i64
  store i64 %6299, i64* %RDX.i448, align 8
  store %struct.Memory* %loadMem_418f9d, %struct.Memory** %MEMORY
  %loadMem_418fa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6301 = getelementptr inbounds %struct.GPR, %struct.GPR* %6300, i32 0, i32 33
  %6302 = getelementptr inbounds %struct.Reg, %struct.Reg* %6301, i32 0, i32 0
  %PC.i444 = bitcast %union.anon* %6302 to i64*
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6304 = getelementptr inbounds %struct.GPR, %struct.GPR* %6303, i32 0, i32 1
  %6305 = getelementptr inbounds %struct.Reg, %struct.Reg* %6304, i32 0, i32 0
  %RAX.i445 = bitcast %union.anon* %6305 to i64*
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6307 = getelementptr inbounds %struct.GPR, %struct.GPR* %6306, i32 0, i32 15
  %6308 = getelementptr inbounds %struct.Reg, %struct.Reg* %6307, i32 0, i32 0
  %RBP.i446 = bitcast %union.anon* %6308 to i64*
  %6309 = load i64, i64* %RBP.i446
  %6310 = sub i64 %6309, 16
  %6311 = load i64, i64* %PC.i444
  %6312 = add i64 %6311, 4
  store i64 %6312, i64* %PC.i444
  %6313 = inttoptr i64 %6310 to i64*
  %6314 = load i64, i64* %6313
  store i64 %6314, i64* %RAX.i445, align 8
  store %struct.Memory* %loadMem_418fa0, %struct.Memory** %MEMORY
  %loadMem_418fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6316 = getelementptr inbounds %struct.GPR, %struct.GPR* %6315, i32 0, i32 33
  %6317 = getelementptr inbounds %struct.Reg, %struct.Reg* %6316, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %6317 to i64*
  %6318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6319 = getelementptr inbounds %struct.GPR, %struct.GPR* %6318, i32 0, i32 1
  %6320 = getelementptr inbounds %struct.Reg, %struct.Reg* %6319, i32 0, i32 0
  %RAX.i443 = bitcast %union.anon* %6320 to i64*
  %6321 = load i64, i64* %RAX.i443
  %6322 = load i64, i64* %PC.i442
  %6323 = add i64 %6322, 3
  store i64 %6323, i64* %PC.i442
  %6324 = inttoptr i64 %6321 to i64*
  %6325 = load i64, i64* %6324
  store i64 %6325, i64* %RAX.i443, align 8
  store %struct.Memory* %loadMem_418fa4, %struct.Memory** %MEMORY
  %loadMem_418fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6327 = getelementptr inbounds %struct.GPR, %struct.GPR* %6326, i32 0, i32 33
  %6328 = getelementptr inbounds %struct.Reg, %struct.Reg* %6327, i32 0, i32 0
  %PC.i439 = bitcast %union.anon* %6328 to i64*
  %6329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6330 = getelementptr inbounds %struct.GPR, %struct.GPR* %6329, i32 0, i32 5
  %6331 = getelementptr inbounds %struct.Reg, %struct.Reg* %6330, i32 0, i32 0
  %RCX.i440 = bitcast %union.anon* %6331 to i64*
  %6332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6333 = getelementptr inbounds %struct.GPR, %struct.GPR* %6332, i32 0, i32 15
  %6334 = getelementptr inbounds %struct.Reg, %struct.Reg* %6333, i32 0, i32 0
  %RBP.i441 = bitcast %union.anon* %6334 to i64*
  %6335 = load i64, i64* %RBP.i441
  %6336 = sub i64 %6335, 36
  %6337 = load i64, i64* %PC.i439
  %6338 = add i64 %6337, 4
  store i64 %6338, i64* %PC.i439
  %6339 = inttoptr i64 %6336 to i32*
  %6340 = load i32, i32* %6339
  %6341 = sext i32 %6340 to i64
  store i64 %6341, i64* %RCX.i440, align 8
  store %struct.Memory* %loadMem_418fa7, %struct.Memory** %MEMORY
  %loadMem_418fab = load %struct.Memory*, %struct.Memory** %MEMORY
  %6342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6343 = getelementptr inbounds %struct.GPR, %struct.GPR* %6342, i32 0, i32 33
  %6344 = getelementptr inbounds %struct.Reg, %struct.Reg* %6343, i32 0, i32 0
  %PC.i436 = bitcast %union.anon* %6344 to i64*
  %6345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6346 = getelementptr inbounds %struct.GPR, %struct.GPR* %6345, i32 0, i32 1
  %6347 = getelementptr inbounds %struct.Reg, %struct.Reg* %6346, i32 0, i32 0
  %RAX.i437 = bitcast %union.anon* %6347 to i64*
  %6348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6349 = getelementptr inbounds %struct.GPR, %struct.GPR* %6348, i32 0, i32 5
  %6350 = getelementptr inbounds %struct.Reg, %struct.Reg* %6349, i32 0, i32 0
  %RCX.i438 = bitcast %union.anon* %6350 to i64*
  %6351 = load i64, i64* %RAX.i437
  %6352 = load i64, i64* %RCX.i438
  %6353 = mul i64 %6352, 4
  %6354 = add i64 %6353, %6351
  %6355 = load i64, i64* %PC.i436
  %6356 = add i64 %6355, 3
  store i64 %6356, i64* %PC.i436
  %6357 = inttoptr i64 %6354 to i32*
  %6358 = load i32, i32* %6357
  %6359 = zext i32 %6358 to i64
  store i64 %6359, i64* %RCX.i438, align 8
  store %struct.Memory* %loadMem_418fab, %struct.Memory** %MEMORY
  %loadMem_418fae = load %struct.Memory*, %struct.Memory** %MEMORY
  %6360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6361 = getelementptr inbounds %struct.GPR, %struct.GPR* %6360, i32 0, i32 33
  %6362 = getelementptr inbounds %struct.Reg, %struct.Reg* %6361, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %6362 to i64*
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6364 = getelementptr inbounds %struct.GPR, %struct.GPR* %6363, i32 0, i32 1
  %6365 = getelementptr inbounds %struct.Reg, %struct.Reg* %6364, i32 0, i32 0
  %RAX.i434 = bitcast %union.anon* %6365 to i64*
  %6366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6367 = getelementptr inbounds %struct.GPR, %struct.GPR* %6366, i32 0, i32 15
  %6368 = getelementptr inbounds %struct.Reg, %struct.Reg* %6367, i32 0, i32 0
  %RBP.i435 = bitcast %union.anon* %6368 to i64*
  %6369 = load i64, i64* %RBP.i435
  %6370 = sub i64 %6369, 16
  %6371 = load i64, i64* %PC.i433
  %6372 = add i64 %6371, 4
  store i64 %6372, i64* %PC.i433
  %6373 = inttoptr i64 %6370 to i64*
  %6374 = load i64, i64* %6373
  store i64 %6374, i64* %RAX.i434, align 8
  store %struct.Memory* %loadMem_418fae, %struct.Memory** %MEMORY
  %loadMem_418fb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6376 = getelementptr inbounds %struct.GPR, %struct.GPR* %6375, i32 0, i32 33
  %6377 = getelementptr inbounds %struct.Reg, %struct.Reg* %6376, i32 0, i32 0
  %PC.i431 = bitcast %union.anon* %6377 to i64*
  %6378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6379 = getelementptr inbounds %struct.GPR, %struct.GPR* %6378, i32 0, i32 1
  %6380 = getelementptr inbounds %struct.Reg, %struct.Reg* %6379, i32 0, i32 0
  %RAX.i432 = bitcast %union.anon* %6380 to i64*
  %6381 = load i64, i64* %RAX.i432
  %6382 = add i64 %6381, 32
  %6383 = load i64, i64* %PC.i431
  %6384 = add i64 %6383, 4
  store i64 %6384, i64* %PC.i431
  %6385 = inttoptr i64 %6382 to i64*
  %6386 = load i64, i64* %6385
  store i64 %6386, i64* %RAX.i432, align 8
  store %struct.Memory* %loadMem_418fb2, %struct.Memory** %MEMORY
  %loadMem_418fb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6388 = getelementptr inbounds %struct.GPR, %struct.GPR* %6387, i32 0, i32 33
  %6389 = getelementptr inbounds %struct.Reg, %struct.Reg* %6388, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %6389 to i64*
  %6390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6391 = getelementptr inbounds %struct.GPR, %struct.GPR* %6390, i32 0, i32 15
  %6392 = getelementptr inbounds %struct.Reg, %struct.Reg* %6391, i32 0, i32 0
  %RBP.i429 = bitcast %union.anon* %6392 to i64*
  %6393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6394 = getelementptr inbounds %struct.GPR, %struct.GPR* %6393, i32 0, i32 17
  %6395 = getelementptr inbounds %struct.Reg, %struct.Reg* %6394, i32 0, i32 0
  %R8.i430 = bitcast %union.anon* %6395 to i64*
  %6396 = load i64, i64* %RBP.i429
  %6397 = sub i64 %6396, 36
  %6398 = load i64, i64* %PC.i428
  %6399 = add i64 %6398, 4
  store i64 %6399, i64* %PC.i428
  %6400 = inttoptr i64 %6397 to i32*
  %6401 = load i32, i32* %6400
  %6402 = sext i32 %6401 to i64
  store i64 %6402, i64* %R8.i430, align 8
  store %struct.Memory* %loadMem_418fb6, %struct.Memory** %MEMORY
  %loadMem_418fba = load %struct.Memory*, %struct.Memory** %MEMORY
  %6403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6404 = getelementptr inbounds %struct.GPR, %struct.GPR* %6403, i32 0, i32 33
  %6405 = getelementptr inbounds %struct.Reg, %struct.Reg* %6404, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %6405 to i64*
  %6406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6407 = getelementptr inbounds %struct.GPR, %struct.GPR* %6406, i32 0, i32 17
  %6408 = getelementptr inbounds %struct.Reg, %struct.Reg* %6407, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %6408 to i32*
  %6409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6410 = getelementptr inbounds %struct.GPR, %struct.GPR* %6409, i32 0, i32 1
  %6411 = getelementptr inbounds %struct.Reg, %struct.Reg* %6410, i32 0, i32 0
  %RAX.i426 = bitcast %union.anon* %6411 to i64*
  %6412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6413 = getelementptr inbounds %struct.GPR, %struct.GPR* %6412, i32 0, i32 17
  %6414 = getelementptr inbounds %struct.Reg, %struct.Reg* %6413, i32 0, i32 0
  %R8.i427 = bitcast %union.anon* %6414 to i64*
  %6415 = bitcast i32* %R8D.i to i64*
  %6416 = load i64, i64* %RAX.i426
  %6417 = load i64, i64* %R8.i427
  %6418 = mul i64 %6417, 4
  %6419 = add i64 %6418, %6416
  %6420 = load i64, i64* %PC.i425
  %6421 = add i64 %6420, 6
  store i64 %6421, i64* %PC.i425
  %6422 = inttoptr i64 %6419 to float*
  %6423 = load float, float* %6422
  %6424 = call float @llvm.trunc.f32(float %6423)
  %6425 = call float @llvm.fabs.f32(float %6424)
  %6426 = fcmp ogt float %6425, 0x41E0000000000000
  %6427 = fptosi float %6424 to i32
  %6428 = zext i32 %6427 to i64
  %6429 = select i1 %6426, i64 2147483648, i64 %6428
  store i64 %6429, i64* %6415, align 8
  store %struct.Memory* %loadMem_418fba, %struct.Memory** %MEMORY
  %loadMem_418fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6431 = getelementptr inbounds %struct.GPR, %struct.GPR* %6430, i32 0, i32 33
  %6432 = getelementptr inbounds %struct.Reg, %struct.Reg* %6431, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %6432 to i64*
  %6433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6434 = getelementptr inbounds %struct.GPR, %struct.GPR* %6433, i32 0, i32 1
  %6435 = getelementptr inbounds %struct.Reg, %struct.Reg* %6434, i32 0, i32 0
  %6436 = bitcast %union.anon* %6435 to %struct.anon.2*
  %AL.i424 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6436, i32 0, i32 0
  %6437 = load i64, i64* %PC.i423
  %6438 = add i64 %6437, 2
  store i64 %6438, i64* %PC.i423
  store i8 0, i8* %AL.i424, align 1
  store %struct.Memory* %loadMem_418fc0, %struct.Memory** %MEMORY
  %loadMem1_418fc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6440 = getelementptr inbounds %struct.GPR, %struct.GPR* %6439, i32 0, i32 33
  %6441 = getelementptr inbounds %struct.Reg, %struct.Reg* %6440, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %6441 to i64*
  %6442 = load i64, i64* %PC.i422
  %6443 = add i64 %6442, -96514
  %6444 = load i64, i64* %PC.i422
  %6445 = add i64 %6444, 5
  %6446 = load i64, i64* %PC.i422
  %6447 = add i64 %6446, 5
  store i64 %6447, i64* %PC.i422
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6449 = load i64, i64* %6448, align 8
  %6450 = add i64 %6449, -8
  %6451 = inttoptr i64 %6450 to i64*
  store i64 %6445, i64* %6451
  store i64 %6450, i64* %6448, align 8
  %6452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6443, i64* %6452, align 8
  store %struct.Memory* %loadMem1_418fc2, %struct.Memory** %MEMORY
  %loadMem2_418fc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_418fc2 = load i64, i64* %3
  %6453 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %loadMem2_418fc2)
  store %struct.Memory* %6453, %struct.Memory** %MEMORY
  %loadMem_418fc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6455 = getelementptr inbounds %struct.GPR, %struct.GPR* %6454, i32 0, i32 33
  %6456 = getelementptr inbounds %struct.Reg, %struct.Reg* %6455, i32 0, i32 0
  %PC.i416 = bitcast %union.anon* %6456 to i64*
  %6457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6458 = getelementptr inbounds %struct.GPR, %struct.GPR* %6457, i32 0, i32 1
  %6459 = getelementptr inbounds %struct.Reg, %struct.Reg* %6458, i32 0, i32 0
  %EAX.i417 = bitcast %union.anon* %6459 to i32*
  %6460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6461 = getelementptr inbounds %struct.GPR, %struct.GPR* %6460, i32 0, i32 15
  %6462 = getelementptr inbounds %struct.Reg, %struct.Reg* %6461, i32 0, i32 0
  %RBP.i418 = bitcast %union.anon* %6462 to i64*
  %6463 = load i64, i64* %RBP.i418
  %6464 = sub i64 %6463, 204
  %6465 = load i32, i32* %EAX.i417
  %6466 = zext i32 %6465 to i64
  %6467 = load i64, i64* %PC.i416
  %6468 = add i64 %6467, 6
  store i64 %6468, i64* %PC.i416
  %6469 = inttoptr i64 %6464 to i32*
  store i32 %6465, i32* %6469
  store %struct.Memory* %loadMem_418fc7, %struct.Memory** %MEMORY
  %loadMem_418fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6471 = getelementptr inbounds %struct.GPR, %struct.GPR* %6470, i32 0, i32 33
  %6472 = getelementptr inbounds %struct.Reg, %struct.Reg* %6471, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %6472 to i64*
  %6473 = load i64, i64* %PC.i415
  %6474 = add i64 %6473, 59
  %6475 = load i64, i64* %PC.i415
  %6476 = add i64 %6475, 5
  store i64 %6476, i64* %PC.i415
  %6477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6474, i64* %6477, align 8
  store %struct.Memory* %loadMem_418fcd, %struct.Memory** %MEMORY
  br label %block_.L_419008

block_.L_418fd2:                                  ; preds = %block_.L_418f81
  %loadMem_418fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6479 = getelementptr inbounds %struct.GPR, %struct.GPR* %6478, i32 0, i32 33
  %6480 = getelementptr inbounds %struct.Reg, %struct.Reg* %6479, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %6480 to i64*
  %6481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6482 = getelementptr inbounds %struct.GPR, %struct.GPR* %6481, i32 0, i32 9
  %6483 = getelementptr inbounds %struct.Reg, %struct.Reg* %6482, i32 0, i32 0
  %RSI.i414 = bitcast %union.anon* %6483 to i64*
  %6484 = load i64, i64* %PC.i413
  %6485 = add i64 %6484, 10
  store i64 %6485, i64* %PC.i413
  store i64 ptrtoint (%G__0x456ff4_type* @G__0x456ff4 to i64), i64* %RSI.i414, align 8
  store %struct.Memory* %loadMem_418fd2, %struct.Memory** %MEMORY
  %loadMem_418fdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6487 = getelementptr inbounds %struct.GPR, %struct.GPR* %6486, i32 0, i32 33
  %6488 = getelementptr inbounds %struct.Reg, %struct.Reg* %6487, i32 0, i32 0
  %PC.i412 = bitcast %union.anon* %6488 to i64*
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6490 = getelementptr inbounds %struct.GPR, %struct.GPR* %6489, i32 0, i32 17
  %6491 = getelementptr inbounds %struct.Reg, %struct.Reg* %6490, i32 0, i32 0
  %R8.i = bitcast %union.anon* %6491 to i64*
  %6492 = load i64, i64* %PC.i412
  %6493 = add i64 %6492, 10
  store i64 %6493, i64* %PC.i412
  store i64 ptrtoint (%G__0x456fc4_type* @G__0x456fc4 to i64), i64* %R8.i, align 8
  store %struct.Memory* %loadMem_418fdc, %struct.Memory** %MEMORY
  %loadMem_418fe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6495 = getelementptr inbounds %struct.GPR, %struct.GPR* %6494, i32 0, i32 33
  %6496 = getelementptr inbounds %struct.Reg, %struct.Reg* %6495, i32 0, i32 0
  %PC.i409 = bitcast %union.anon* %6496 to i64*
  %6497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6498 = getelementptr inbounds %struct.GPR, %struct.GPR* %6497, i32 0, i32 11
  %6499 = getelementptr inbounds %struct.Reg, %struct.Reg* %6498, i32 0, i32 0
  %RDI.i410 = bitcast %union.anon* %6499 to i64*
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6501 = getelementptr inbounds %struct.GPR, %struct.GPR* %6500, i32 0, i32 15
  %6502 = getelementptr inbounds %struct.Reg, %struct.Reg* %6501, i32 0, i32 0
  %RBP.i411 = bitcast %union.anon* %6502 to i64*
  %6503 = load i64, i64* %RBP.i411
  %6504 = sub i64 %6503, 128
  %6505 = load i64, i64* %PC.i409
  %6506 = add i64 %6505, 4
  store i64 %6506, i64* %PC.i409
  store i64 %6504, i64* %RDI.i410, align 8
  store %struct.Memory* %loadMem_418fe6, %struct.Memory** %MEMORY
  %loadMem_418fea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6508 = getelementptr inbounds %struct.GPR, %struct.GPR* %6507, i32 0, i32 33
  %6509 = getelementptr inbounds %struct.Reg, %struct.Reg* %6508, i32 0, i32 0
  %PC.i406 = bitcast %union.anon* %6509 to i64*
  %6510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6511 = getelementptr inbounds %struct.GPR, %struct.GPR* %6510, i32 0, i32 7
  %6512 = getelementptr inbounds %struct.Reg, %struct.Reg* %6511, i32 0, i32 0
  %RDX.i407 = bitcast %union.anon* %6512 to i64*
  %6513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6514 = getelementptr inbounds %struct.GPR, %struct.GPR* %6513, i32 0, i32 15
  %6515 = getelementptr inbounds %struct.Reg, %struct.Reg* %6514, i32 0, i32 0
  %RBP.i408 = bitcast %union.anon* %6515 to i64*
  %6516 = load i64, i64* %RBP.i408
  %6517 = sub i64 %6516, 32
  %6518 = load i64, i64* %PC.i406
  %6519 = add i64 %6518, 3
  store i64 %6519, i64* %PC.i406
  %6520 = inttoptr i64 %6517 to i32*
  %6521 = load i32, i32* %6520
  %6522 = zext i32 %6521 to i64
  store i64 %6522, i64* %RDX.i407, align 8
  store %struct.Memory* %loadMem_418fea, %struct.Memory** %MEMORY
  %loadMem_418fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6524 = getelementptr inbounds %struct.GPR, %struct.GPR* %6523, i32 0, i32 33
  %6525 = getelementptr inbounds %struct.Reg, %struct.Reg* %6524, i32 0, i32 0
  %PC.i403 = bitcast %union.anon* %6525 to i64*
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6527 = getelementptr inbounds %struct.GPR, %struct.GPR* %6526, i32 0, i32 1
  %6528 = getelementptr inbounds %struct.Reg, %struct.Reg* %6527, i32 0, i32 0
  %RAX.i404 = bitcast %union.anon* %6528 to i64*
  %6529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6530 = getelementptr inbounds %struct.GPR, %struct.GPR* %6529, i32 0, i32 15
  %6531 = getelementptr inbounds %struct.Reg, %struct.Reg* %6530, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %6531 to i64*
  %6532 = load i64, i64* %RBP.i405
  %6533 = sub i64 %6532, 16
  %6534 = load i64, i64* %PC.i403
  %6535 = add i64 %6534, 4
  store i64 %6535, i64* %PC.i403
  %6536 = inttoptr i64 %6533 to i64*
  %6537 = load i64, i64* %6536
  store i64 %6537, i64* %RAX.i404, align 8
  store %struct.Memory* %loadMem_418fed, %struct.Memory** %MEMORY
  %loadMem_418ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6539 = getelementptr inbounds %struct.GPR, %struct.GPR* %6538, i32 0, i32 33
  %6540 = getelementptr inbounds %struct.Reg, %struct.Reg* %6539, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %6540 to i64*
  %6541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6542 = getelementptr inbounds %struct.GPR, %struct.GPR* %6541, i32 0, i32 1
  %6543 = getelementptr inbounds %struct.Reg, %struct.Reg* %6542, i32 0, i32 0
  %RAX.i402 = bitcast %union.anon* %6543 to i64*
  %6544 = load i64, i64* %RAX.i402
  %6545 = load i64, i64* %PC.i401
  %6546 = add i64 %6545, 3
  store i64 %6546, i64* %PC.i401
  %6547 = inttoptr i64 %6544 to i64*
  %6548 = load i64, i64* %6547
  store i64 %6548, i64* %RAX.i402, align 8
  store %struct.Memory* %loadMem_418ff1, %struct.Memory** %MEMORY
  %loadMem_418ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6550 = getelementptr inbounds %struct.GPR, %struct.GPR* %6549, i32 0, i32 33
  %6551 = getelementptr inbounds %struct.Reg, %struct.Reg* %6550, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %6551 to i64*
  %6552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6553 = getelementptr inbounds %struct.GPR, %struct.GPR* %6552, i32 0, i32 5
  %6554 = getelementptr inbounds %struct.Reg, %struct.Reg* %6553, i32 0, i32 0
  %RCX.i399 = bitcast %union.anon* %6554 to i64*
  %6555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6556 = getelementptr inbounds %struct.GPR, %struct.GPR* %6555, i32 0, i32 15
  %6557 = getelementptr inbounds %struct.Reg, %struct.Reg* %6556, i32 0, i32 0
  %RBP.i400 = bitcast %union.anon* %6557 to i64*
  %6558 = load i64, i64* %RBP.i400
  %6559 = sub i64 %6558, 36
  %6560 = load i64, i64* %PC.i398
  %6561 = add i64 %6560, 4
  store i64 %6561, i64* %PC.i398
  %6562 = inttoptr i64 %6559 to i32*
  %6563 = load i32, i32* %6562
  %6564 = sext i32 %6563 to i64
  store i64 %6564, i64* %RCX.i399, align 8
  store %struct.Memory* %loadMem_418ff4, %struct.Memory** %MEMORY
  %loadMem_418ff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6566 = getelementptr inbounds %struct.GPR, %struct.GPR* %6565, i32 0, i32 33
  %6567 = getelementptr inbounds %struct.Reg, %struct.Reg* %6566, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %6567 to i64*
  %6568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6569 = getelementptr inbounds %struct.GPR, %struct.GPR* %6568, i32 0, i32 1
  %6570 = getelementptr inbounds %struct.Reg, %struct.Reg* %6569, i32 0, i32 0
  %RAX.i396 = bitcast %union.anon* %6570 to i64*
  %6571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6572 = getelementptr inbounds %struct.GPR, %struct.GPR* %6571, i32 0, i32 5
  %6573 = getelementptr inbounds %struct.Reg, %struct.Reg* %6572, i32 0, i32 0
  %RCX.i397 = bitcast %union.anon* %6573 to i64*
  %6574 = load i64, i64* %RAX.i396
  %6575 = load i64, i64* %RCX.i397
  %6576 = mul i64 %6575, 4
  %6577 = add i64 %6576, %6574
  %6578 = load i64, i64* %PC.i395
  %6579 = add i64 %6578, 3
  store i64 %6579, i64* %PC.i395
  %6580 = inttoptr i64 %6577 to i32*
  %6581 = load i32, i32* %6580
  %6582 = zext i32 %6581 to i64
  store i64 %6582, i64* %RCX.i397, align 8
  store %struct.Memory* %loadMem_418ff8, %struct.Memory** %MEMORY
  %loadMem_418ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6584 = getelementptr inbounds %struct.GPR, %struct.GPR* %6583, i32 0, i32 33
  %6585 = getelementptr inbounds %struct.Reg, %struct.Reg* %6584, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %6585 to i64*
  %6586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6587 = getelementptr inbounds %struct.GPR, %struct.GPR* %6586, i32 0, i32 1
  %6588 = getelementptr inbounds %struct.Reg, %struct.Reg* %6587, i32 0, i32 0
  %6589 = bitcast %union.anon* %6588 to %struct.anon.2*
  %AL.i394 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %6589, i32 0, i32 0
  %6590 = load i64, i64* %PC.i393
  %6591 = add i64 %6590, 2
  store i64 %6591, i64* %PC.i393
  store i8 0, i8* %AL.i394, align 1
  store %struct.Memory* %loadMem_418ffb, %struct.Memory** %MEMORY
  %loadMem1_418ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6593 = getelementptr inbounds %struct.GPR, %struct.GPR* %6592, i32 0, i32 33
  %6594 = getelementptr inbounds %struct.Reg, %struct.Reg* %6593, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %6594 to i64*
  %6595 = load i64, i64* %PC.i392
  %6596 = add i64 %6595, -96573
  %6597 = load i64, i64* %PC.i392
  %6598 = add i64 %6597, 5
  %6599 = load i64, i64* %PC.i392
  %6600 = add i64 %6599, 5
  store i64 %6600, i64* %PC.i392
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6602 = load i64, i64* %6601, align 8
  %6603 = add i64 %6602, -8
  %6604 = inttoptr i64 %6603 to i64*
  store i64 %6598, i64* %6604
  store i64 %6603, i64* %6601, align 8
  %6605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6596, i64* %6605, align 8
  store %struct.Memory* %loadMem1_418ffd, %struct.Memory** %MEMORY
  %loadMem2_418ffd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_418ffd = load i64, i64* %3
  %6606 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %loadMem2_418ffd)
  store %struct.Memory* %6606, %struct.Memory** %MEMORY
  %loadMem_419002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6608 = getelementptr inbounds %struct.GPR, %struct.GPR* %6607, i32 0, i32 33
  %6609 = getelementptr inbounds %struct.Reg, %struct.Reg* %6608, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %6609 to i64*
  %6610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6611 = getelementptr inbounds %struct.GPR, %struct.GPR* %6610, i32 0, i32 1
  %6612 = getelementptr inbounds %struct.Reg, %struct.Reg* %6611, i32 0, i32 0
  %EAX.i387 = bitcast %union.anon* %6612 to i32*
  %6613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6614 = getelementptr inbounds %struct.GPR, %struct.GPR* %6613, i32 0, i32 15
  %6615 = getelementptr inbounds %struct.Reg, %struct.Reg* %6614, i32 0, i32 0
  %RBP.i388 = bitcast %union.anon* %6615 to i64*
  %6616 = load i64, i64* %RBP.i388
  %6617 = sub i64 %6616, 208
  %6618 = load i32, i32* %EAX.i387
  %6619 = zext i32 %6618 to i64
  %6620 = load i64, i64* %PC.i386
  %6621 = add i64 %6620, 6
  store i64 %6621, i64* %PC.i386
  %6622 = inttoptr i64 %6617 to i32*
  store i32 %6618, i32* %6622
  store %struct.Memory* %loadMem_419002, %struct.Memory** %MEMORY
  br label %block_.L_419008

block_.L_419008:                                  ; preds = %block_.L_418fd2, %block_418f8f
  %loadMem_419008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6624 = getelementptr inbounds %struct.GPR, %struct.GPR* %6623, i32 0, i32 33
  %6625 = getelementptr inbounds %struct.Reg, %struct.Reg* %6624, i32 0, i32 0
  %PC.i384 = bitcast %union.anon* %6625 to i64*
  %6626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6627 = getelementptr inbounds %struct.GPR, %struct.GPR* %6626, i32 0, i32 15
  %6628 = getelementptr inbounds %struct.Reg, %struct.Reg* %6627, i32 0, i32 0
  %RBP.i385 = bitcast %union.anon* %6628 to i64*
  %6629 = load i64, i64* %RBP.i385
  %6630 = sub i64 %6629, 108
  %6631 = load i64, i64* %PC.i384
  %6632 = add i64 %6631, 4
  store i64 %6632, i64* %PC.i384
  %6633 = inttoptr i64 %6630 to i8*
  store i8 32, i8* %6633
  store %struct.Memory* %loadMem_419008, %struct.Memory** %MEMORY
  %loadMem_41900c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6635 = getelementptr inbounds %struct.GPR, %struct.GPR* %6634, i32 0, i32 33
  %6636 = getelementptr inbounds %struct.Reg, %struct.Reg* %6635, i32 0, i32 0
  %PC.i381 = bitcast %union.anon* %6636 to i64*
  %6637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6638 = getelementptr inbounds %struct.GPR, %struct.GPR* %6637, i32 0, i32 1
  %6639 = getelementptr inbounds %struct.Reg, %struct.Reg* %6638, i32 0, i32 0
  %RAX.i382 = bitcast %union.anon* %6639 to i64*
  %6640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6641 = getelementptr inbounds %struct.GPR, %struct.GPR* %6640, i32 0, i32 15
  %6642 = getelementptr inbounds %struct.Reg, %struct.Reg* %6641, i32 0, i32 0
  %RBP.i383 = bitcast %union.anon* %6642 to i64*
  %6643 = load i64, i64* %RBP.i383
  %6644 = sub i64 %6643, 16
  %6645 = load i64, i64* %PC.i381
  %6646 = add i64 %6645, 4
  store i64 %6646, i64* %PC.i381
  %6647 = inttoptr i64 %6644 to i64*
  %6648 = load i64, i64* %6647
  store i64 %6648, i64* %RAX.i382, align 8
  store %struct.Memory* %loadMem_41900c, %struct.Memory** %MEMORY
  %loadMem_419010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 33
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %6651 to i64*
  %6652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6653 = getelementptr inbounds %struct.GPR, %struct.GPR* %6652, i32 0, i32 1
  %6654 = getelementptr inbounds %struct.Reg, %struct.Reg* %6653, i32 0, i32 0
  %RAX.i380 = bitcast %union.anon* %6654 to i64*
  %6655 = load i64, i64* %RAX.i380
  %6656 = load i64, i64* %PC.i379
  %6657 = add i64 %6656, 3
  store i64 %6657, i64* %PC.i379
  %6658 = inttoptr i64 %6655 to i64*
  %6659 = load i64, i64* %6658
  store i64 %6659, i64* %RAX.i380, align 8
  store %struct.Memory* %loadMem_419010, %struct.Memory** %MEMORY
  %loadMem_419013 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6661 = getelementptr inbounds %struct.GPR, %struct.GPR* %6660, i32 0, i32 33
  %6662 = getelementptr inbounds %struct.Reg, %struct.Reg* %6661, i32 0, i32 0
  %PC.i376 = bitcast %union.anon* %6662 to i64*
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6664 = getelementptr inbounds %struct.GPR, %struct.GPR* %6663, i32 0, i32 5
  %6665 = getelementptr inbounds %struct.Reg, %struct.Reg* %6664, i32 0, i32 0
  %RCX.i377 = bitcast %union.anon* %6665 to i64*
  %6666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6667 = getelementptr inbounds %struct.GPR, %struct.GPR* %6666, i32 0, i32 15
  %6668 = getelementptr inbounds %struct.Reg, %struct.Reg* %6667, i32 0, i32 0
  %RBP.i378 = bitcast %union.anon* %6668 to i64*
  %6669 = load i64, i64* %RBP.i378
  %6670 = sub i64 %6669, 36
  %6671 = load i64, i64* %PC.i376
  %6672 = add i64 %6671, 4
  store i64 %6672, i64* %PC.i376
  %6673 = inttoptr i64 %6670 to i32*
  %6674 = load i32, i32* %6673
  %6675 = sext i32 %6674 to i64
  store i64 %6675, i64* %RCX.i377, align 8
  store %struct.Memory* %loadMem_419013, %struct.Memory** %MEMORY
  %loadMem_419017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6677 = getelementptr inbounds %struct.GPR, %struct.GPR* %6676, i32 0, i32 33
  %6678 = getelementptr inbounds %struct.Reg, %struct.Reg* %6677, i32 0, i32 0
  %PC.i373 = bitcast %union.anon* %6678 to i64*
  %6679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6680 = getelementptr inbounds %struct.GPR, %struct.GPR* %6679, i32 0, i32 1
  %6681 = getelementptr inbounds %struct.Reg, %struct.Reg* %6680, i32 0, i32 0
  %RAX.i374 = bitcast %union.anon* %6681 to i64*
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6683 = getelementptr inbounds %struct.GPR, %struct.GPR* %6682, i32 0, i32 5
  %6684 = getelementptr inbounds %struct.Reg, %struct.Reg* %6683, i32 0, i32 0
  %RCX.i375 = bitcast %union.anon* %6684 to i64*
  %6685 = load i64, i64* %RAX.i374
  %6686 = load i64, i64* %RCX.i375
  %6687 = mul i64 %6686, 4
  %6688 = add i64 %6687, %6685
  %6689 = load i64, i64* %PC.i373
  %6690 = add i64 %6689, 4
  store i64 %6690, i64* %PC.i373
  %6691 = inttoptr i64 %6688 to i32*
  %6692 = load i32, i32* %6691
  %6693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6693, align 1
  %6694 = and i32 %6692, 255
  %6695 = call i32 @llvm.ctpop.i32(i32 %6694)
  %6696 = trunc i32 %6695 to i8
  %6697 = and i8 %6696, 1
  %6698 = xor i8 %6697, 1
  %6699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6698, i8* %6699, align 1
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6700, align 1
  %6701 = icmp eq i32 %6692, 0
  %6702 = zext i1 %6701 to i8
  %6703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6702, i8* %6703, align 1
  %6704 = lshr i32 %6692, 31
  %6705 = trunc i32 %6704 to i8
  %6706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6705, i8* %6706, align 1
  %6707 = lshr i32 %6692, 31
  %6708 = xor i32 %6704, %6707
  %6709 = add i32 %6708, %6707
  %6710 = icmp eq i32 %6709, 2
  %6711 = zext i1 %6710 to i8
  %6712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6711, i8* %6712, align 1
  store %struct.Memory* %loadMem_419017, %struct.Memory** %MEMORY
  %loadMem_41901b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6714 = getelementptr inbounds %struct.GPR, %struct.GPR* %6713, i32 0, i32 33
  %6715 = getelementptr inbounds %struct.Reg, %struct.Reg* %6714, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %6715 to i64*
  %6716 = load i64, i64* %PC.i372
  %6717 = add i64 %6716, 99
  %6718 = load i64, i64* %PC.i372
  %6719 = add i64 %6718, 6
  %6720 = load i64, i64* %PC.i372
  %6721 = add i64 %6720, 6
  store i64 %6721, i64* %PC.i372
  %6722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6723 = load i8, i8* %6722, align 1
  %6724 = icmp ne i8 %6723, 0
  %6725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6726 = load i8, i8* %6725, align 1
  %6727 = icmp ne i8 %6726, 0
  %6728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6729 = load i8, i8* %6728, align 1
  %6730 = icmp ne i8 %6729, 0
  %6731 = xor i1 %6727, %6730
  %6732 = or i1 %6724, %6731
  %6733 = zext i1 %6732 to i8
  store i8 %6733, i8* %BRANCH_TAKEN, align 1
  %6734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6735 = select i1 %6732, i64 %6717, i64 %6719
  store i64 %6735, i64* %6734, align 8
  store %struct.Memory* %loadMem_41901b, %struct.Memory** %MEMORY
  %loadBr_41901b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41901b = icmp eq i8 %loadBr_41901b, 1
  br i1 %cmpBr_41901b, label %block_.L_41907e, label %block_419021

block_419021:                                     ; preds = %block_.L_419008
  %loadMem_419021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6737 = getelementptr inbounds %struct.GPR, %struct.GPR* %6736, i32 0, i32 33
  %6738 = getelementptr inbounds %struct.Reg, %struct.Reg* %6737, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %6738 to i64*
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6740 = getelementptr inbounds %struct.GPR, %struct.GPR* %6739, i32 0, i32 1
  %6741 = getelementptr inbounds %struct.Reg, %struct.Reg* %6740, i32 0, i32 0
  %RAX.i370 = bitcast %union.anon* %6741 to i64*
  %6742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6743 = getelementptr inbounds %struct.GPR, %struct.GPR* %6742, i32 0, i32 15
  %6744 = getelementptr inbounds %struct.Reg, %struct.Reg* %6743, i32 0, i32 0
  %RBP.i371 = bitcast %union.anon* %6744 to i64*
  %6745 = load i64, i64* %RBP.i371
  %6746 = sub i64 %6745, 16
  %6747 = load i64, i64* %PC.i369
  %6748 = add i64 %6747, 4
  store i64 %6748, i64* %PC.i369
  %6749 = inttoptr i64 %6746 to i64*
  %6750 = load i64, i64* %6749
  store i64 %6750, i64* %RAX.i370, align 8
  store %struct.Memory* %loadMem_419021, %struct.Memory** %MEMORY
  %loadMem_419025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6752 = getelementptr inbounds %struct.GPR, %struct.GPR* %6751, i32 0, i32 33
  %6753 = getelementptr inbounds %struct.Reg, %struct.Reg* %6752, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %6753 to i64*
  %6754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6755 = getelementptr inbounds %struct.GPR, %struct.GPR* %6754, i32 0, i32 1
  %6756 = getelementptr inbounds %struct.Reg, %struct.Reg* %6755, i32 0, i32 0
  %RAX.i368 = bitcast %union.anon* %6756 to i64*
  %6757 = load i64, i64* %RAX.i368
  %6758 = load i64, i64* %PC.i367
  %6759 = add i64 %6758, 3
  store i64 %6759, i64* %PC.i367
  %6760 = inttoptr i64 %6757 to i64*
  %6761 = load i64, i64* %6760
  store i64 %6761, i64* %RAX.i368, align 8
  store %struct.Memory* %loadMem_419025, %struct.Memory** %MEMORY
  %loadMem_419028 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6763 = getelementptr inbounds %struct.GPR, %struct.GPR* %6762, i32 0, i32 33
  %6764 = getelementptr inbounds %struct.Reg, %struct.Reg* %6763, i32 0, i32 0
  %PC.i364 = bitcast %union.anon* %6764 to i64*
  %6765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6766 = getelementptr inbounds %struct.GPR, %struct.GPR* %6765, i32 0, i32 5
  %6767 = getelementptr inbounds %struct.Reg, %struct.Reg* %6766, i32 0, i32 0
  %RCX.i365 = bitcast %union.anon* %6767 to i64*
  %6768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6769 = getelementptr inbounds %struct.GPR, %struct.GPR* %6768, i32 0, i32 15
  %6770 = getelementptr inbounds %struct.Reg, %struct.Reg* %6769, i32 0, i32 0
  %RBP.i366 = bitcast %union.anon* %6770 to i64*
  %6771 = load i64, i64* %RBP.i366
  %6772 = sub i64 %6771, 36
  %6773 = load i64, i64* %PC.i364
  %6774 = add i64 %6773, 4
  store i64 %6774, i64* %PC.i364
  %6775 = inttoptr i64 %6772 to i32*
  %6776 = load i32, i32* %6775
  %6777 = sext i32 %6776 to i64
  store i64 %6777, i64* %RCX.i365, align 8
  store %struct.Memory* %loadMem_419028, %struct.Memory** %MEMORY
  %loadMem_41902c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6779 = getelementptr inbounds %struct.GPR, %struct.GPR* %6778, i32 0, i32 33
  %6780 = getelementptr inbounds %struct.Reg, %struct.Reg* %6779, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %6780 to i64*
  %6781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6782 = getelementptr inbounds %struct.GPR, %struct.GPR* %6781, i32 0, i32 1
  %6783 = getelementptr inbounds %struct.Reg, %struct.Reg* %6782, i32 0, i32 0
  %RAX.i361 = bitcast %union.anon* %6783 to i64*
  %6784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6785 = getelementptr inbounds %struct.GPR, %struct.GPR* %6784, i32 0, i32 5
  %6786 = getelementptr inbounds %struct.Reg, %struct.Reg* %6785, i32 0, i32 0
  %RCX.i362 = bitcast %union.anon* %6786 to i64*
  %6787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6788 = getelementptr inbounds %struct.GPR, %struct.GPR* %6787, i32 0, i32 7
  %6789 = getelementptr inbounds %struct.Reg, %struct.Reg* %6788, i32 0, i32 0
  %RDX.i363 = bitcast %union.anon* %6789 to i64*
  %6790 = load i64, i64* %RAX.i361
  %6791 = load i64, i64* %RCX.i362
  %6792 = mul i64 %6791, 4
  %6793 = add i64 %6792, %6790
  %6794 = load i64, i64* %PC.i360
  %6795 = add i64 %6794, 3
  store i64 %6795, i64* %PC.i360
  %6796 = inttoptr i64 %6793 to i32*
  %6797 = load i32, i32* %6796
  %6798 = zext i32 %6797 to i64
  store i64 %6798, i64* %RDX.i363, align 8
  store %struct.Memory* %loadMem_41902c, %struct.Memory** %MEMORY
  %loadMem_41902f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6800 = getelementptr inbounds %struct.GPR, %struct.GPR* %6799, i32 0, i32 33
  %6801 = getelementptr inbounds %struct.Reg, %struct.Reg* %6800, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %6801 to i64*
  %6802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6803 = getelementptr inbounds %struct.GPR, %struct.GPR* %6802, i32 0, i32 7
  %6804 = getelementptr inbounds %struct.Reg, %struct.Reg* %6803, i32 0, i32 0
  %RDX.i359 = bitcast %union.anon* %6804 to i64*
  %6805 = load i64, i64* %RDX.i359
  %6806 = load i64, i64* %PC.i358
  %6807 = add i64 %6806, 3
  store i64 %6807, i64* %PC.i358
  %6808 = trunc i64 %6805 to i32
  %6809 = sub i32 %6808, 1
  %6810 = zext i32 %6809 to i64
  store i64 %6810, i64* %RDX.i359, align 8
  %6811 = icmp ult i32 %6808, 1
  %6812 = zext i1 %6811 to i8
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6812, i8* %6813, align 1
  %6814 = and i32 %6809, 255
  %6815 = call i32 @llvm.ctpop.i32(i32 %6814)
  %6816 = trunc i32 %6815 to i8
  %6817 = and i8 %6816, 1
  %6818 = xor i8 %6817, 1
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6818, i8* %6819, align 1
  %6820 = xor i64 1, %6805
  %6821 = trunc i64 %6820 to i32
  %6822 = xor i32 %6821, %6809
  %6823 = lshr i32 %6822, 4
  %6824 = trunc i32 %6823 to i8
  %6825 = and i8 %6824, 1
  %6826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6825, i8* %6826, align 1
  %6827 = icmp eq i32 %6809, 0
  %6828 = zext i1 %6827 to i8
  %6829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6828, i8* %6829, align 1
  %6830 = lshr i32 %6809, 31
  %6831 = trunc i32 %6830 to i8
  %6832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6831, i8* %6832, align 1
  %6833 = lshr i32 %6808, 31
  %6834 = xor i32 %6830, %6833
  %6835 = add i32 %6834, %6833
  %6836 = icmp eq i32 %6835, 2
  %6837 = zext i1 %6836 to i8
  %6838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6837, i8* %6838, align 1
  store %struct.Memory* %loadMem_41902f, %struct.Memory** %MEMORY
  %loadMem_419032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6840 = getelementptr inbounds %struct.GPR, %struct.GPR* %6839, i32 0, i32 33
  %6841 = getelementptr inbounds %struct.Reg, %struct.Reg* %6840, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %6841 to i64*
  %6842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6843 = getelementptr inbounds %struct.GPR, %struct.GPR* %6842, i32 0, i32 7
  %6844 = getelementptr inbounds %struct.Reg, %struct.Reg* %6843, i32 0, i32 0
  %EDX.i356 = bitcast %union.anon* %6844 to i32*
  %6845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6846 = getelementptr inbounds %struct.GPR, %struct.GPR* %6845, i32 0, i32 1
  %6847 = getelementptr inbounds %struct.Reg, %struct.Reg* %6846, i32 0, i32 0
  %RAX.i357 = bitcast %union.anon* %6847 to i64*
  %6848 = load i32, i32* %EDX.i356
  %6849 = zext i32 %6848 to i64
  %6850 = load i64, i64* %PC.i355
  %6851 = add i64 %6850, 2
  store i64 %6851, i64* %PC.i355
  %6852 = and i64 %6849, 4294967295
  store i64 %6852, i64* %RAX.i357, align 8
  store %struct.Memory* %loadMem_419032, %struct.Memory** %MEMORY
  %loadMem_419034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6854 = getelementptr inbounds %struct.GPR, %struct.GPR* %6853, i32 0, i32 33
  %6855 = getelementptr inbounds %struct.Reg, %struct.Reg* %6854, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %6855 to i64*
  %6856 = load i64, i64* %PC.i354
  %6857 = add i64 %6856, 1
  store i64 %6857, i64* %PC.i354
  %6858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %6859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %6860 = bitcast %union.anon* %6859 to i32*
  %6861 = load i32, i32* %6860, align 8
  %6862 = sext i32 %6861 to i64
  %6863 = lshr i64 %6862, 32
  store i64 %6863, i64* %6858, align 8
  store %struct.Memory* %loadMem_419034, %struct.Memory** %MEMORY
  %loadMem_419035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6865 = getelementptr inbounds %struct.GPR, %struct.GPR* %6864, i32 0, i32 33
  %6866 = getelementptr inbounds %struct.Reg, %struct.Reg* %6865, i32 0, i32 0
  %PC.i348 = bitcast %union.anon* %6866 to i64*
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6868 = getelementptr inbounds %struct.GPR, %struct.GPR* %6867, i32 0, i32 15
  %6869 = getelementptr inbounds %struct.Reg, %struct.Reg* %6868, i32 0, i32 0
  %RBP.i349 = bitcast %union.anon* %6869 to i64*
  %6870 = load i64, i64* %RBP.i349
  %6871 = sub i64 %6870, 20
  %6872 = load i64, i64* %PC.i348
  %6873 = add i64 %6872, 3
  store i64 %6873, i64* %PC.i348
  %6874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %6875 = bitcast %union.anon* %6874 to i32*
  %6876 = load i32, i32* %6875, align 8
  %6877 = zext i32 %6876 to i64
  %6878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %6879 = bitcast %union.anon* %6878 to i32*
  %6880 = load i32, i32* %6879, align 8
  %6881 = zext i32 %6880 to i64
  %6882 = inttoptr i64 %6871 to i32*
  %6883 = load i32, i32* %6882
  %6884 = sext i32 %6883 to i64
  %6885 = shl i64 %6881, 32
  %6886 = or i64 %6885, %6877
  %6887 = sdiv i64 %6886, %6884
  %6888 = shl i64 %6887, 32
  %6889 = ashr exact i64 %6888, 32
  %6890 = icmp eq i64 %6887, %6889
  br i1 %6890, label %6895, label %6891

; <label>:6891:                                   ; preds = %block_419021
  %6892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6893 = load i64, i64* %6892, align 8
  %6894 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6893, %struct.Memory* %loadMem_419035)
  br label %routine_idivl_MINUS0x14__rbp_.exit350

; <label>:6895:                                   ; preds = %block_419021
  %6896 = srem i64 %6886, %6884
  %6897 = getelementptr inbounds %union.anon, %union.anon* %6874, i64 0, i32 0
  %6898 = and i64 %6887, 4294967295
  store i64 %6898, i64* %6897, align 8
  %6899 = getelementptr inbounds %union.anon, %union.anon* %6878, i64 0, i32 0
  %6900 = and i64 %6896, 4294967295
  store i64 %6900, i64* %6899, align 8
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6901, align 1
  %6902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %6902, align 1
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6903, align 1
  %6904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6904, align 1
  %6905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6905, align 1
  %6906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6906, align 1
  br label %routine_idivl_MINUS0x14__rbp_.exit350

routine_idivl_MINUS0x14__rbp_.exit350:            ; preds = %6891, %6895
  %6907 = phi %struct.Memory* [ %6894, %6891 ], [ %loadMem_419035, %6895 ]
  store %struct.Memory* %6907, %struct.Memory** %MEMORY
  %loadMem_419038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6909 = getelementptr inbounds %struct.GPR, %struct.GPR* %6908, i32 0, i32 33
  %6910 = getelementptr inbounds %struct.Reg, %struct.Reg* %6909, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %6910 to i64*
  %6911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6912 = getelementptr inbounds %struct.GPR, %struct.GPR* %6911, i32 0, i32 1
  %6913 = getelementptr inbounds %struct.Reg, %struct.Reg* %6912, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %6913 to i64*
  %6914 = load i64, i64* %RAX.i347
  %6915 = load i64, i64* %PC.i346
  %6916 = add i64 %6915, 3
  store i64 %6916, i64* %PC.i346
  %6917 = trunc i64 %6914 to i32
  %6918 = add i32 1, %6917
  %6919 = zext i32 %6918 to i64
  store i64 %6919, i64* %RAX.i347, align 8
  %6920 = icmp ult i32 %6918, %6917
  %6921 = icmp ult i32 %6918, 1
  %6922 = or i1 %6920, %6921
  %6923 = zext i1 %6922 to i8
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6923, i8* %6924, align 1
  %6925 = and i32 %6918, 255
  %6926 = call i32 @llvm.ctpop.i32(i32 %6925)
  %6927 = trunc i32 %6926 to i8
  %6928 = and i8 %6927, 1
  %6929 = xor i8 %6928, 1
  %6930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6929, i8* %6930, align 1
  %6931 = xor i64 1, %6914
  %6932 = trunc i64 %6931 to i32
  %6933 = xor i32 %6932, %6918
  %6934 = lshr i32 %6933, 4
  %6935 = trunc i32 %6934 to i8
  %6936 = and i8 %6935, 1
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6936, i8* %6937, align 1
  %6938 = icmp eq i32 %6918, 0
  %6939 = zext i1 %6938 to i8
  %6940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6939, i8* %6940, align 1
  %6941 = lshr i32 %6918, 31
  %6942 = trunc i32 %6941 to i8
  %6943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6942, i8* %6943, align 1
  %6944 = lshr i32 %6917, 31
  %6945 = xor i32 %6941, %6944
  %6946 = add i32 %6945, %6941
  %6947 = icmp eq i32 %6946, 2
  %6948 = zext i1 %6947 to i8
  %6949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6948, i8* %6949, align 1
  store %struct.Memory* %loadMem_419038, %struct.Memory** %MEMORY
  %loadMem_41903b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6951 = getelementptr inbounds %struct.GPR, %struct.GPR* %6950, i32 0, i32 33
  %6952 = getelementptr inbounds %struct.Reg, %struct.Reg* %6951, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %6952 to i64*
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6954 = getelementptr inbounds %struct.GPR, %struct.GPR* %6953, i32 0, i32 1
  %6955 = getelementptr inbounds %struct.Reg, %struct.Reg* %6954, i32 0, i32 0
  %EAX.i344 = bitcast %union.anon* %6955 to i32*
  %6956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6957 = getelementptr inbounds %struct.GPR, %struct.GPR* %6956, i32 0, i32 15
  %6958 = getelementptr inbounds %struct.Reg, %struct.Reg* %6957, i32 0, i32 0
  %RBP.i345 = bitcast %union.anon* %6958 to i64*
  %6959 = load i64, i64* %RBP.i345
  %6960 = sub i64 %6959, 28
  %6961 = load i32, i32* %EAX.i344
  %6962 = zext i32 %6961 to i64
  %6963 = load i64, i64* %PC.i343
  %6964 = add i64 %6963, 3
  store i64 %6964, i64* %PC.i343
  %6965 = inttoptr i64 %6960 to i32*
  store i32 %6961, i32* %6965
  store %struct.Memory* %loadMem_41903b, %struct.Memory** %MEMORY
  %loadMem_41903e = load %struct.Memory*, %struct.Memory** %MEMORY
  %6966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6967 = getelementptr inbounds %struct.GPR, %struct.GPR* %6966, i32 0, i32 33
  %6968 = getelementptr inbounds %struct.Reg, %struct.Reg* %6967, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %6968 to i64*
  %6969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6970 = getelementptr inbounds %struct.GPR, %struct.GPR* %6969, i32 0, i32 15
  %6971 = getelementptr inbounds %struct.Reg, %struct.Reg* %6970, i32 0, i32 0
  %RBP.i342 = bitcast %union.anon* %6971 to i64*
  %6972 = load i64, i64* %RBP.i342
  %6973 = sub i64 %6972, 132
  %6974 = load i64, i64* %PC.i341
  %6975 = add i64 %6974, 10
  store i64 %6975, i64* %PC.i341
  %6976 = inttoptr i64 %6973 to i32*
  store i32 20, i32* %6976
  store %struct.Memory* %loadMem_41903e, %struct.Memory** %MEMORY
  br label %block_.L_419048

block_.L_419048:                                  ; preds = %block_419052, %routine_idivl_MINUS0x14__rbp_.exit350
  %loadMem_419048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6978 = getelementptr inbounds %struct.GPR, %struct.GPR* %6977, i32 0, i32 33
  %6979 = getelementptr inbounds %struct.Reg, %struct.Reg* %6978, i32 0, i32 0
  %PC.i339 = bitcast %union.anon* %6979 to i64*
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6981 = getelementptr inbounds %struct.GPR, %struct.GPR* %6980, i32 0, i32 15
  %6982 = getelementptr inbounds %struct.Reg, %struct.Reg* %6981, i32 0, i32 0
  %RBP.i340 = bitcast %union.anon* %6982 to i64*
  %6983 = load i64, i64* %RBP.i340
  %6984 = sub i64 %6983, 28
  %6985 = load i64, i64* %PC.i339
  %6986 = add i64 %6985, 4
  store i64 %6986, i64* %PC.i339
  %6987 = inttoptr i64 %6984 to i32*
  %6988 = load i32, i32* %6987
  %6989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6989, align 1
  %6990 = and i32 %6988, 255
  %6991 = call i32 @llvm.ctpop.i32(i32 %6990)
  %6992 = trunc i32 %6991 to i8
  %6993 = and i8 %6992, 1
  %6994 = xor i8 %6993, 1
  %6995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6994, i8* %6995, align 1
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6996, align 1
  %6997 = icmp eq i32 %6988, 0
  %6998 = zext i1 %6997 to i8
  %6999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6998, i8* %6999, align 1
  %7000 = lshr i32 %6988, 31
  %7001 = trunc i32 %7000 to i8
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7001, i8* %7002, align 1
  %7003 = lshr i32 %6988, 31
  %7004 = xor i32 %7000, %7003
  %7005 = add i32 %7004, %7003
  %7006 = icmp eq i32 %7005, 2
  %7007 = zext i1 %7006 to i8
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7007, i8* %7008, align 1
  store %struct.Memory* %loadMem_419048, %struct.Memory** %MEMORY
  %loadMem_41904c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7010 = getelementptr inbounds %struct.GPR, %struct.GPR* %7009, i32 0, i32 33
  %7011 = getelementptr inbounds %struct.Reg, %struct.Reg* %7010, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %7011 to i64*
  %7012 = load i64, i64* %PC.i338
  %7013 = add i64 %7012, 45
  %7014 = load i64, i64* %PC.i338
  %7015 = add i64 %7014, 6
  %7016 = load i64, i64* %PC.i338
  %7017 = add i64 %7016, 6
  store i64 %7017, i64* %PC.i338
  %7018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7019 = load i8, i8* %7018, align 1
  %7020 = icmp ne i8 %7019, 0
  %7021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7022 = load i8, i8* %7021, align 1
  %7023 = icmp ne i8 %7022, 0
  %7024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7025 = load i8, i8* %7024, align 1
  %7026 = icmp ne i8 %7025, 0
  %7027 = xor i1 %7023, %7026
  %7028 = or i1 %7020, %7027
  %7029 = zext i1 %7028 to i8
  store i8 %7029, i8* %BRANCH_TAKEN, align 1
  %7030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7031 = select i1 %7028, i64 %7013, i64 %7015
  store i64 %7031, i64* %7030, align 8
  store %struct.Memory* %loadMem_41904c, %struct.Memory** %MEMORY
  %loadBr_41904c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41904c = icmp eq i8 %loadBr_41904c, 1
  br i1 %cmpBr_41904c, label %block_.L_419079, label %block_419052

block_419052:                                     ; preds = %block_.L_419048
  %loadMem_419052 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7033 = getelementptr inbounds %struct.GPR, %struct.GPR* %7032, i32 0, i32 33
  %7034 = getelementptr inbounds %struct.Reg, %struct.Reg* %7033, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %7034 to i64*
  %7035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7036 = getelementptr inbounds %struct.GPR, %struct.GPR* %7035, i32 0, i32 1
  %7037 = getelementptr inbounds %struct.Reg, %struct.Reg* %7036, i32 0, i32 0
  %RAX.i336 = bitcast %union.anon* %7037 to i64*
  %7038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7039 = getelementptr inbounds %struct.GPR, %struct.GPR* %7038, i32 0, i32 15
  %7040 = getelementptr inbounds %struct.Reg, %struct.Reg* %7039, i32 0, i32 0
  %RBP.i337 = bitcast %union.anon* %7040 to i64*
  %7041 = load i64, i64* %RBP.i337
  %7042 = sub i64 %7041, 132
  %7043 = load i64, i64* %PC.i335
  %7044 = add i64 %7043, 6
  store i64 %7044, i64* %PC.i335
  %7045 = inttoptr i64 %7042 to i32*
  %7046 = load i32, i32* %7045
  %7047 = zext i32 %7046 to i64
  store i64 %7047, i64* %RAX.i336, align 8
  store %struct.Memory* %loadMem_419052, %struct.Memory** %MEMORY
  %loadMem_419058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7049 = getelementptr inbounds %struct.GPR, %struct.GPR* %7048, i32 0, i32 33
  %7050 = getelementptr inbounds %struct.Reg, %struct.Reg* %7049, i32 0, i32 0
  %PC.i332 = bitcast %union.anon* %7050 to i64*
  %7051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7052 = getelementptr inbounds %struct.GPR, %struct.GPR* %7051, i32 0, i32 1
  %7053 = getelementptr inbounds %struct.Reg, %struct.Reg* %7052, i32 0, i32 0
  %EAX.i333 = bitcast %union.anon* %7053 to i32*
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7055 = getelementptr inbounds %struct.GPR, %struct.GPR* %7054, i32 0, i32 5
  %7056 = getelementptr inbounds %struct.Reg, %struct.Reg* %7055, i32 0, i32 0
  %RCX.i334 = bitcast %union.anon* %7056 to i64*
  %7057 = load i32, i32* %EAX.i333
  %7058 = zext i32 %7057 to i64
  %7059 = load i64, i64* %PC.i332
  %7060 = add i64 %7059, 2
  store i64 %7060, i64* %PC.i332
  %7061 = and i64 %7058, 4294967295
  store i64 %7061, i64* %RCX.i334, align 8
  store %struct.Memory* %loadMem_419058, %struct.Memory** %MEMORY
  %loadMem_41905a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7063 = getelementptr inbounds %struct.GPR, %struct.GPR* %7062, i32 0, i32 33
  %7064 = getelementptr inbounds %struct.Reg, %struct.Reg* %7063, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %7064 to i64*
  %7065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7066 = getelementptr inbounds %struct.GPR, %struct.GPR* %7065, i32 0, i32 5
  %7067 = getelementptr inbounds %struct.Reg, %struct.Reg* %7066, i32 0, i32 0
  %RCX.i331 = bitcast %union.anon* %7067 to i64*
  %7068 = load i64, i64* %RCX.i331
  %7069 = load i64, i64* %PC.i330
  %7070 = add i64 %7069, 3
  store i64 %7070, i64* %PC.i330
  %7071 = trunc i64 %7068 to i32
  %7072 = add i32 1, %7071
  %7073 = zext i32 %7072 to i64
  store i64 %7073, i64* %RCX.i331, align 8
  %7074 = icmp ult i32 %7072, %7071
  %7075 = icmp ult i32 %7072, 1
  %7076 = or i1 %7074, %7075
  %7077 = zext i1 %7076 to i8
  %7078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7077, i8* %7078, align 1
  %7079 = and i32 %7072, 255
  %7080 = call i32 @llvm.ctpop.i32(i32 %7079)
  %7081 = trunc i32 %7080 to i8
  %7082 = and i8 %7081, 1
  %7083 = xor i8 %7082, 1
  %7084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7083, i8* %7084, align 1
  %7085 = xor i64 1, %7068
  %7086 = trunc i64 %7085 to i32
  %7087 = xor i32 %7086, %7072
  %7088 = lshr i32 %7087, 4
  %7089 = trunc i32 %7088 to i8
  %7090 = and i8 %7089, 1
  %7091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7090, i8* %7091, align 1
  %7092 = icmp eq i32 %7072, 0
  %7093 = zext i1 %7092 to i8
  %7094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7093, i8* %7094, align 1
  %7095 = lshr i32 %7072, 31
  %7096 = trunc i32 %7095 to i8
  %7097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7096, i8* %7097, align 1
  %7098 = lshr i32 %7071, 31
  %7099 = xor i32 %7095, %7098
  %7100 = add i32 %7099, %7095
  %7101 = icmp eq i32 %7100, 2
  %7102 = zext i1 %7101 to i8
  %7103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7102, i8* %7103, align 1
  store %struct.Memory* %loadMem_41905a, %struct.Memory** %MEMORY
  %loadMem_41905d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7105 = getelementptr inbounds %struct.GPR, %struct.GPR* %7104, i32 0, i32 33
  %7106 = getelementptr inbounds %struct.Reg, %struct.Reg* %7105, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %7106 to i64*
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7108 = getelementptr inbounds %struct.GPR, %struct.GPR* %7107, i32 0, i32 5
  %7109 = getelementptr inbounds %struct.Reg, %struct.Reg* %7108, i32 0, i32 0
  %ECX.i328 = bitcast %union.anon* %7109 to i32*
  %7110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7111 = getelementptr inbounds %struct.GPR, %struct.GPR* %7110, i32 0, i32 15
  %7112 = getelementptr inbounds %struct.Reg, %struct.Reg* %7111, i32 0, i32 0
  %RBP.i329 = bitcast %union.anon* %7112 to i64*
  %7113 = load i64, i64* %RBP.i329
  %7114 = sub i64 %7113, 132
  %7115 = load i32, i32* %ECX.i328
  %7116 = zext i32 %7115 to i64
  %7117 = load i64, i64* %PC.i327
  %7118 = add i64 %7117, 6
  store i64 %7118, i64* %PC.i327
  %7119 = inttoptr i64 %7114 to i32*
  store i32 %7115, i32* %7119
  store %struct.Memory* %loadMem_41905d, %struct.Memory** %MEMORY
  %loadMem_419063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7121 = getelementptr inbounds %struct.GPR, %struct.GPR* %7120, i32 0, i32 33
  %7122 = getelementptr inbounds %struct.Reg, %struct.Reg* %7121, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %7122 to i64*
  %7123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7124 = getelementptr inbounds %struct.GPR, %struct.GPR* %7123, i32 0, i32 1
  %7125 = getelementptr inbounds %struct.Reg, %struct.Reg* %7124, i32 0, i32 0
  %EAX.i325 = bitcast %union.anon* %7125 to i32*
  %7126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7127 = getelementptr inbounds %struct.GPR, %struct.GPR* %7126, i32 0, i32 7
  %7128 = getelementptr inbounds %struct.Reg, %struct.Reg* %7127, i32 0, i32 0
  %RDX.i326 = bitcast %union.anon* %7128 to i64*
  %7129 = load i32, i32* %EAX.i325
  %7130 = zext i32 %7129 to i64
  %7131 = load i64, i64* %PC.i324
  %7132 = add i64 %7131, 3
  store i64 %7132, i64* %PC.i324
  %7133 = shl i64 %7130, 32
  %7134 = ashr exact i64 %7133, 32
  store i64 %7134, i64* %RDX.i326, align 8
  store %struct.Memory* %loadMem_419063, %struct.Memory** %MEMORY
  %loadMem_419066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7136 = getelementptr inbounds %struct.GPR, %struct.GPR* %7135, i32 0, i32 33
  %7137 = getelementptr inbounds %struct.Reg, %struct.Reg* %7136, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %7137 to i64*
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7139 = getelementptr inbounds %struct.GPR, %struct.GPR* %7138, i32 0, i32 7
  %7140 = getelementptr inbounds %struct.Reg, %struct.Reg* %7139, i32 0, i32 0
  %RDX.i322 = bitcast %union.anon* %7140 to i64*
  %7141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7142 = getelementptr inbounds %struct.GPR, %struct.GPR* %7141, i32 0, i32 15
  %7143 = getelementptr inbounds %struct.Reg, %struct.Reg* %7142, i32 0, i32 0
  %RBP.i323 = bitcast %union.anon* %7143 to i64*
  %7144 = load i64, i64* %RBP.i323
  %7145 = load i64, i64* %RDX.i322
  %7146 = add i64 %7144, -128
  %7147 = add i64 %7146, %7145
  %7148 = load i64, i64* %PC.i321
  %7149 = add i64 %7148, 5
  store i64 %7149, i64* %PC.i321
  %7150 = inttoptr i64 %7147 to i8*
  store i8 61, i8* %7150
  store %struct.Memory* %loadMem_419066, %struct.Memory** %MEMORY
  %loadMem_41906b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7152 = getelementptr inbounds %struct.GPR, %struct.GPR* %7151, i32 0, i32 33
  %7153 = getelementptr inbounds %struct.Reg, %struct.Reg* %7152, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %7153 to i64*
  %7154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7155 = getelementptr inbounds %struct.GPR, %struct.GPR* %7154, i32 0, i32 1
  %7156 = getelementptr inbounds %struct.Reg, %struct.Reg* %7155, i32 0, i32 0
  %RAX.i319 = bitcast %union.anon* %7156 to i64*
  %7157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7158 = getelementptr inbounds %struct.GPR, %struct.GPR* %7157, i32 0, i32 15
  %7159 = getelementptr inbounds %struct.Reg, %struct.Reg* %7158, i32 0, i32 0
  %RBP.i320 = bitcast %union.anon* %7159 to i64*
  %7160 = load i64, i64* %RBP.i320
  %7161 = sub i64 %7160, 28
  %7162 = load i64, i64* %PC.i318
  %7163 = add i64 %7162, 3
  store i64 %7163, i64* %PC.i318
  %7164 = inttoptr i64 %7161 to i32*
  %7165 = load i32, i32* %7164
  %7166 = zext i32 %7165 to i64
  store i64 %7166, i64* %RAX.i319, align 8
  store %struct.Memory* %loadMem_41906b, %struct.Memory** %MEMORY
  %loadMem_41906e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7168 = getelementptr inbounds %struct.GPR, %struct.GPR* %7167, i32 0, i32 33
  %7169 = getelementptr inbounds %struct.Reg, %struct.Reg* %7168, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %7169 to i64*
  %7170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7171 = getelementptr inbounds %struct.GPR, %struct.GPR* %7170, i32 0, i32 1
  %7172 = getelementptr inbounds %struct.Reg, %struct.Reg* %7171, i32 0, i32 0
  %RAX.i317 = bitcast %union.anon* %7172 to i64*
  %7173 = load i64, i64* %RAX.i317
  %7174 = load i64, i64* %PC.i316
  %7175 = add i64 %7174, 3
  store i64 %7175, i64* %PC.i316
  %7176 = trunc i64 %7173 to i32
  %7177 = add i32 -1, %7176
  %7178 = zext i32 %7177 to i64
  store i64 %7178, i64* %RAX.i317, align 8
  %7179 = icmp ult i32 %7177, %7176
  %7180 = icmp ult i32 %7177, -1
  %7181 = or i1 %7179, %7180
  %7182 = zext i1 %7181 to i8
  %7183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7182, i8* %7183, align 1
  %7184 = and i32 %7177, 255
  %7185 = call i32 @llvm.ctpop.i32(i32 %7184)
  %7186 = trunc i32 %7185 to i8
  %7187 = and i8 %7186, 1
  %7188 = xor i8 %7187, 1
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7188, i8* %7189, align 1
  %7190 = xor i64 -1, %7173
  %7191 = trunc i64 %7190 to i32
  %7192 = xor i32 %7191, %7177
  %7193 = lshr i32 %7192, 4
  %7194 = trunc i32 %7193 to i8
  %7195 = and i8 %7194, 1
  %7196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7195, i8* %7196, align 1
  %7197 = icmp eq i32 %7177, 0
  %7198 = zext i1 %7197 to i8
  %7199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7198, i8* %7199, align 1
  %7200 = lshr i32 %7177, 31
  %7201 = trunc i32 %7200 to i8
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7201, i8* %7202, align 1
  %7203 = lshr i32 %7176, 31
  %7204 = xor i32 %7200, %7203
  %7205 = xor i32 %7200, 1
  %7206 = add i32 %7204, %7205
  %7207 = icmp eq i32 %7206, 2
  %7208 = zext i1 %7207 to i8
  %7209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7208, i8* %7209, align 1
  store %struct.Memory* %loadMem_41906e, %struct.Memory** %MEMORY
  %loadMem_419071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7211 = getelementptr inbounds %struct.GPR, %struct.GPR* %7210, i32 0, i32 33
  %7212 = getelementptr inbounds %struct.Reg, %struct.Reg* %7211, i32 0, i32 0
  %PC.i313 = bitcast %union.anon* %7212 to i64*
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7214 = getelementptr inbounds %struct.GPR, %struct.GPR* %7213, i32 0, i32 1
  %7215 = getelementptr inbounds %struct.Reg, %struct.Reg* %7214, i32 0, i32 0
  %EAX.i314 = bitcast %union.anon* %7215 to i32*
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7217 = getelementptr inbounds %struct.GPR, %struct.GPR* %7216, i32 0, i32 15
  %7218 = getelementptr inbounds %struct.Reg, %struct.Reg* %7217, i32 0, i32 0
  %RBP.i315 = bitcast %union.anon* %7218 to i64*
  %7219 = load i64, i64* %RBP.i315
  %7220 = sub i64 %7219, 28
  %7221 = load i32, i32* %EAX.i314
  %7222 = zext i32 %7221 to i64
  %7223 = load i64, i64* %PC.i313
  %7224 = add i64 %7223, 3
  store i64 %7224, i64* %PC.i313
  %7225 = inttoptr i64 %7220 to i32*
  store i32 %7221, i32* %7225
  store %struct.Memory* %loadMem_419071, %struct.Memory** %MEMORY
  %loadMem_419074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7227 = getelementptr inbounds %struct.GPR, %struct.GPR* %7226, i32 0, i32 33
  %7228 = getelementptr inbounds %struct.Reg, %struct.Reg* %7227, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %7228 to i64*
  %7229 = load i64, i64* %PC.i312
  %7230 = add i64 %7229, -44
  %7231 = load i64, i64* %PC.i312
  %7232 = add i64 %7231, 5
  store i64 %7232, i64* %PC.i312
  %7233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7230, i64* %7233, align 8
  store %struct.Memory* %loadMem_419074, %struct.Memory** %MEMORY
  br label %block_.L_419048

block_.L_419079:                                  ; preds = %block_.L_419048
  %loadMem_419079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7235 = getelementptr inbounds %struct.GPR, %struct.GPR* %7234, i32 0, i32 33
  %7236 = getelementptr inbounds %struct.Reg, %struct.Reg* %7235, i32 0, i32 0
  %PC.i311 = bitcast %union.anon* %7236 to i64*
  %7237 = load i64, i64* %PC.i311
  %7238 = add i64 %7237, 5
  %7239 = load i64, i64* %PC.i311
  %7240 = add i64 %7239, 5
  store i64 %7240, i64* %PC.i311
  %7241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7238, i64* %7241, align 8
  store %struct.Memory* %loadMem_419079, %struct.Memory** %MEMORY
  br label %block_.L_41907e

block_.L_41907e:                                  ; preds = %block_.L_419079, %block_.L_419008
  %loadMem_41907e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7243 = getelementptr inbounds %struct.GPR, %struct.GPR* %7242, i32 0, i32 33
  %7244 = getelementptr inbounds %struct.Reg, %struct.Reg* %7243, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %7244 to i64*
  %7245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7246 = getelementptr inbounds %struct.GPR, %struct.GPR* %7245, i32 0, i32 1
  %7247 = getelementptr inbounds %struct.Reg, %struct.Reg* %7246, i32 0, i32 0
  %RAX.i309 = bitcast %union.anon* %7247 to i64*
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7249 = getelementptr inbounds %struct.GPR, %struct.GPR* %7248, i32 0, i32 15
  %7250 = getelementptr inbounds %struct.Reg, %struct.Reg* %7249, i32 0, i32 0
  %RBP.i310 = bitcast %union.anon* %7250 to i64*
  %7251 = load i64, i64* %RBP.i310
  %7252 = sub i64 %7251, 16
  %7253 = load i64, i64* %PC.i308
  %7254 = add i64 %7253, 4
  store i64 %7254, i64* %PC.i308
  %7255 = inttoptr i64 %7252 to i64*
  %7256 = load i64, i64* %7255
  store i64 %7256, i64* %RAX.i309, align 8
  store %struct.Memory* %loadMem_41907e, %struct.Memory** %MEMORY
  %loadMem_419082 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7258 = getelementptr inbounds %struct.GPR, %struct.GPR* %7257, i32 0, i32 33
  %7259 = getelementptr inbounds %struct.Reg, %struct.Reg* %7258, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %7259 to i64*
  %7260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7261 = getelementptr inbounds %struct.GPR, %struct.GPR* %7260, i32 0, i32 1
  %7262 = getelementptr inbounds %struct.Reg, %struct.Reg* %7261, i32 0, i32 0
  %RAX.i307 = bitcast %union.anon* %7262 to i64*
  %7263 = load i64, i64* %RAX.i307
  %7264 = add i64 %7263, 40
  %7265 = load i64, i64* %PC.i306
  %7266 = add i64 %7265, 4
  store i64 %7266, i64* %PC.i306
  %7267 = inttoptr i64 %7264 to i32*
  %7268 = load i32, i32* %7267
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7269, align 1
  %7270 = and i32 %7268, 255
  %7271 = call i32 @llvm.ctpop.i32(i32 %7270)
  %7272 = trunc i32 %7271 to i8
  %7273 = and i8 %7272, 1
  %7274 = xor i8 %7273, 1
  %7275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7274, i8* %7275, align 1
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7276, align 1
  %7277 = icmp eq i32 %7268, 0
  %7278 = zext i1 %7277 to i8
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7278, i8* %7279, align 1
  %7280 = lshr i32 %7268, 31
  %7281 = trunc i32 %7280 to i8
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7281, i8* %7282, align 1
  %7283 = lshr i32 %7268, 31
  %7284 = xor i32 %7280, %7283
  %7285 = add i32 %7284, %7283
  %7286 = icmp eq i32 %7285, 2
  %7287 = zext i1 %7286 to i8
  %7288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7287, i8* %7288, align 1
  store %struct.Memory* %loadMem_419082, %struct.Memory** %MEMORY
  %loadMem_419086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7290 = getelementptr inbounds %struct.GPR, %struct.GPR* %7289, i32 0, i32 33
  %7291 = getelementptr inbounds %struct.Reg, %struct.Reg* %7290, i32 0, i32 0
  %PC.i305 = bitcast %union.anon* %7291 to i64*
  %7292 = load i64, i64* %PC.i305
  %7293 = add i64 %7292, 113
  %7294 = load i64, i64* %PC.i305
  %7295 = add i64 %7294, 6
  %7296 = load i64, i64* %PC.i305
  %7297 = add i64 %7296, 6
  store i64 %7297, i64* %PC.i305
  %7298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7299 = load i8, i8* %7298, align 1
  store i8 %7299, i8* %BRANCH_TAKEN, align 1
  %7300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7301 = icmp ne i8 %7299, 0
  %7302 = select i1 %7301, i64 %7293, i64 %7295
  store i64 %7302, i64* %7300, align 8
  store %struct.Memory* %loadMem_419086, %struct.Memory** %MEMORY
  %loadBr_419086 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_419086 = icmp eq i8 %loadBr_419086, 1
  br i1 %cmpBr_419086, label %block_.L_4190f7, label %block_41908c

block_41908c:                                     ; preds = %block_.L_41907e
  %loadMem_41908c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7304 = getelementptr inbounds %struct.GPR, %struct.GPR* %7303, i32 0, i32 33
  %7305 = getelementptr inbounds %struct.Reg, %struct.Reg* %7304, i32 0, i32 0
  %PC.i302 = bitcast %union.anon* %7305 to i64*
  %7306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7307 = getelementptr inbounds %struct.GPR, %struct.GPR* %7306, i32 0, i32 1
  %7308 = getelementptr inbounds %struct.Reg, %struct.Reg* %7307, i32 0, i32 0
  %RAX.i303 = bitcast %union.anon* %7308 to i64*
  %7309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7310 = getelementptr inbounds %struct.GPR, %struct.GPR* %7309, i32 0, i32 15
  %7311 = getelementptr inbounds %struct.Reg, %struct.Reg* %7310, i32 0, i32 0
  %RBP.i304 = bitcast %union.anon* %7311 to i64*
  %7312 = load i64, i64* %RBP.i304
  %7313 = sub i64 %7312, 16
  %7314 = load i64, i64* %PC.i302
  %7315 = add i64 %7314, 4
  store i64 %7315, i64* %PC.i302
  %7316 = inttoptr i64 %7313 to i64*
  %7317 = load i64, i64* %7316
  store i64 %7317, i64* %RAX.i303, align 8
  store %struct.Memory* %loadMem_41908c, %struct.Memory** %MEMORY
  %loadMem_419090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7319 = getelementptr inbounds %struct.GPR, %struct.GPR* %7318, i32 0, i32 33
  %7320 = getelementptr inbounds %struct.Reg, %struct.Reg* %7319, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %7320 to i64*
  %7321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7322 = getelementptr inbounds %struct.GPR, %struct.GPR* %7321, i32 0, i32 1
  %7323 = getelementptr inbounds %struct.Reg, %struct.Reg* %7322, i32 0, i32 0
  %RAX.i301 = bitcast %union.anon* %7323 to i64*
  %7324 = load i64, i64* %RAX.i301
  %7325 = add i64 %7324, 32
  %7326 = load i64, i64* %PC.i300
  %7327 = add i64 %7326, 4
  store i64 %7327, i64* %PC.i300
  %7328 = inttoptr i64 %7325 to i64*
  %7329 = load i64, i64* %7328
  store i64 %7329, i64* %RAX.i301, align 8
  store %struct.Memory* %loadMem_419090, %struct.Memory** %MEMORY
  %loadMem_419094 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7331 = getelementptr inbounds %struct.GPR, %struct.GPR* %7330, i32 0, i32 33
  %7332 = getelementptr inbounds %struct.Reg, %struct.Reg* %7331, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %7332 to i64*
  %7333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7334 = getelementptr inbounds %struct.GPR, %struct.GPR* %7333, i32 0, i32 5
  %7335 = getelementptr inbounds %struct.Reg, %struct.Reg* %7334, i32 0, i32 0
  %RCX.i298 = bitcast %union.anon* %7335 to i64*
  %7336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7337 = getelementptr inbounds %struct.GPR, %struct.GPR* %7336, i32 0, i32 15
  %7338 = getelementptr inbounds %struct.Reg, %struct.Reg* %7337, i32 0, i32 0
  %RBP.i299 = bitcast %union.anon* %7338 to i64*
  %7339 = load i64, i64* %RBP.i299
  %7340 = sub i64 %7339, 36
  %7341 = load i64, i64* %PC.i297
  %7342 = add i64 %7341, 4
  store i64 %7342, i64* %PC.i297
  %7343 = inttoptr i64 %7340 to i32*
  %7344 = load i32, i32* %7343
  %7345 = sext i32 %7344 to i64
  store i64 %7345, i64* %RCX.i298, align 8
  store %struct.Memory* %loadMem_419094, %struct.Memory** %MEMORY
  %loadMem_419098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7347 = getelementptr inbounds %struct.GPR, %struct.GPR* %7346, i32 0, i32 33
  %7348 = getelementptr inbounds %struct.Reg, %struct.Reg* %7347, i32 0, i32 0
  %PC.i294 = bitcast %union.anon* %7348 to i64*
  %7349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7350 = getelementptr inbounds %struct.GPR, %struct.GPR* %7349, i32 0, i32 1
  %7351 = getelementptr inbounds %struct.Reg, %struct.Reg* %7350, i32 0, i32 0
  %RAX.i295 = bitcast %union.anon* %7351 to i64*
  %7352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7353 = getelementptr inbounds %struct.GPR, %struct.GPR* %7352, i32 0, i32 5
  %7354 = getelementptr inbounds %struct.Reg, %struct.Reg* %7353, i32 0, i32 0
  %RCX.i296 = bitcast %union.anon* %7354 to i64*
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7356 = getelementptr inbounds %struct.GPR, %struct.GPR* %7355, i32 0, i32 7
  %7357 = getelementptr inbounds %struct.Reg, %struct.Reg* %7356, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %7357 to i64*
  %7358 = load i64, i64* %RAX.i295
  %7359 = load i64, i64* %RCX.i296
  %7360 = mul i64 %7359, 4
  %7361 = add i64 %7360, %7358
  %7362 = load i64, i64* %PC.i294
  %7363 = add i64 %7362, 5
  store i64 %7363, i64* %PC.i294
  %7364 = inttoptr i64 %7361 to float*
  %7365 = load float, float* %7364
  %7366 = call float @llvm.trunc.f32(float %7365)
  %7367 = call float @llvm.fabs.f32(float %7366)
  %7368 = fcmp ogt float %7367, 0x41E0000000000000
  %7369 = fptosi float %7366 to i32
  %7370 = zext i32 %7369 to i64
  %7371 = select i1 %7368, i64 2147483648, i64 %7370
  store i64 %7371, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_419098, %struct.Memory** %MEMORY
  %loadMem_41909d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7373 = getelementptr inbounds %struct.GPR, %struct.GPR* %7372, i32 0, i32 33
  %7374 = getelementptr inbounds %struct.Reg, %struct.Reg* %7373, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %7374 to i64*
  %7375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7376 = getelementptr inbounds %struct.GPR, %struct.GPR* %7375, i32 0, i32 7
  %7377 = getelementptr inbounds %struct.Reg, %struct.Reg* %7376, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %7377 to i32*
  %7378 = load i32, i32* %EDX.i
  %7379 = zext i32 %7378 to i64
  %7380 = load i64, i64* %PC.i293
  %7381 = add i64 %7380, 3
  store i64 %7381, i64* %PC.i293
  %7382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7382, align 1
  %7383 = and i32 %7378, 255
  %7384 = call i32 @llvm.ctpop.i32(i32 %7383)
  %7385 = trunc i32 %7384 to i8
  %7386 = and i8 %7385, 1
  %7387 = xor i8 %7386, 1
  %7388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7387, i8* %7388, align 1
  %7389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7389, align 1
  %7390 = icmp eq i32 %7378, 0
  %7391 = zext i1 %7390 to i8
  %7392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7391, i8* %7392, align 1
  %7393 = lshr i32 %7378, 31
  %7394 = trunc i32 %7393 to i8
  %7395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7394, i8* %7395, align 1
  %7396 = lshr i32 %7378, 31
  %7397 = xor i32 %7393, %7396
  %7398 = add i32 %7397, %7396
  %7399 = icmp eq i32 %7398, 2
  %7400 = zext i1 %7399 to i8
  %7401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7400, i8* %7401, align 1
  store %struct.Memory* %loadMem_41909d, %struct.Memory** %MEMORY
  %loadMem_4190a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7403 = getelementptr inbounds %struct.GPR, %struct.GPR* %7402, i32 0, i32 33
  %7404 = getelementptr inbounds %struct.Reg, %struct.Reg* %7403, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %7404 to i64*
  %7405 = load i64, i64* %PC.i292
  %7406 = add i64 %7405, 87
  %7407 = load i64, i64* %PC.i292
  %7408 = add i64 %7407, 6
  %7409 = load i64, i64* %PC.i292
  %7410 = add i64 %7409, 6
  store i64 %7410, i64* %PC.i292
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7412 = load i8, i8* %7411, align 1
  %7413 = icmp ne i8 %7412, 0
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7415 = load i8, i8* %7414, align 1
  %7416 = icmp ne i8 %7415, 0
  %7417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7418 = load i8, i8* %7417, align 1
  %7419 = icmp ne i8 %7418, 0
  %7420 = xor i1 %7416, %7419
  %7421 = or i1 %7413, %7420
  %7422 = zext i1 %7421 to i8
  store i8 %7422, i8* %BRANCH_TAKEN, align 1
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7424 = select i1 %7421, i64 %7406, i64 %7408
  store i64 %7424, i64* %7423, align 8
  store %struct.Memory* %loadMem_4190a0, %struct.Memory** %MEMORY
  %loadBr_4190a0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4190a0 = icmp eq i8 %loadBr_4190a0, 1
  br i1 %cmpBr_4190a0, label %block_.L_4190f7, label %block_4190a6

block_4190a6:                                     ; preds = %block_41908c
  %loadMem_4190a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7426 = getelementptr inbounds %struct.GPR, %struct.GPR* %7425, i32 0, i32 33
  %7427 = getelementptr inbounds %struct.Reg, %struct.Reg* %7426, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %7427 to i64*
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7429 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7428, i64 0, i64 0
  %YMM0.i291 = bitcast %union.VectorReg* %7429 to %"class.std::bitset"*
  %7430 = bitcast %"class.std::bitset"* %YMM0.i291 to i8*
  %7431 = load i64, i64* %PC.i290
  %7432 = add i64 %7431, ptrtoint (%G_0x3b67a__rip__type* @G_0x3b67a__rip_ to i64)
  %7433 = load i64, i64* %PC.i290
  %7434 = add i64 %7433, 8
  store i64 %7434, i64* %PC.i290
  %7435 = inttoptr i64 %7432 to float*
  %7436 = load float, float* %7435
  %7437 = bitcast i8* %7430 to float*
  store float %7436, float* %7437, align 1
  %7438 = getelementptr inbounds i8, i8* %7430, i64 4
  %7439 = bitcast i8* %7438 to float*
  store float 0.000000e+00, float* %7439, align 1
  %7440 = getelementptr inbounds i8, i8* %7430, i64 8
  %7441 = bitcast i8* %7440 to float*
  store float 0.000000e+00, float* %7441, align 1
  %7442 = getelementptr inbounds i8, i8* %7430, i64 12
  %7443 = bitcast i8* %7442 to float*
  store float 0.000000e+00, float* %7443, align 1
  store %struct.Memory* %loadMem_4190a6, %struct.Memory** %MEMORY
  %loadMem_4190ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %7444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7445 = getelementptr inbounds %struct.GPR, %struct.GPR* %7444, i32 0, i32 33
  %7446 = getelementptr inbounds %struct.Reg, %struct.Reg* %7445, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %7446 to i64*
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7448 = getelementptr inbounds %struct.GPR, %struct.GPR* %7447, i32 0, i32 1
  %7449 = getelementptr inbounds %struct.Reg, %struct.Reg* %7448, i32 0, i32 0
  %RAX.i288 = bitcast %union.anon* %7449 to i64*
  %7450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7451 = getelementptr inbounds %struct.GPR, %struct.GPR* %7450, i32 0, i32 15
  %7452 = getelementptr inbounds %struct.Reg, %struct.Reg* %7451, i32 0, i32 0
  %RBP.i289 = bitcast %union.anon* %7452 to i64*
  %7453 = load i64, i64* %RBP.i289
  %7454 = sub i64 %7453, 16
  %7455 = load i64, i64* %PC.i287
  %7456 = add i64 %7455, 4
  store i64 %7456, i64* %PC.i287
  %7457 = inttoptr i64 %7454 to i64*
  %7458 = load i64, i64* %7457
  store i64 %7458, i64* %RAX.i288, align 8
  store %struct.Memory* %loadMem_4190ae, %struct.Memory** %MEMORY
  %loadMem_4190b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7460 = getelementptr inbounds %struct.GPR, %struct.GPR* %7459, i32 0, i32 33
  %7461 = getelementptr inbounds %struct.Reg, %struct.Reg* %7460, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %7461 to i64*
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7463 = getelementptr inbounds %struct.GPR, %struct.GPR* %7462, i32 0, i32 1
  %7464 = getelementptr inbounds %struct.Reg, %struct.Reg* %7463, i32 0, i32 0
  %RAX.i286 = bitcast %union.anon* %7464 to i64*
  %7465 = load i64, i64* %RAX.i286
  %7466 = add i64 %7465, 32
  %7467 = load i64, i64* %PC.i285
  %7468 = add i64 %7467, 4
  store i64 %7468, i64* %PC.i285
  %7469 = inttoptr i64 %7466 to i64*
  %7470 = load i64, i64* %7469
  store i64 %7470, i64* %RAX.i286, align 8
  store %struct.Memory* %loadMem_4190b2, %struct.Memory** %MEMORY
  %loadMem_4190b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7472 = getelementptr inbounds %struct.GPR, %struct.GPR* %7471, i32 0, i32 33
  %7473 = getelementptr inbounds %struct.Reg, %struct.Reg* %7472, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %7473 to i64*
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7475 = getelementptr inbounds %struct.GPR, %struct.GPR* %7474, i32 0, i32 5
  %7476 = getelementptr inbounds %struct.Reg, %struct.Reg* %7475, i32 0, i32 0
  %RCX.i283 = bitcast %union.anon* %7476 to i64*
  %7477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7478 = getelementptr inbounds %struct.GPR, %struct.GPR* %7477, i32 0, i32 15
  %7479 = getelementptr inbounds %struct.Reg, %struct.Reg* %7478, i32 0, i32 0
  %RBP.i284 = bitcast %union.anon* %7479 to i64*
  %7480 = load i64, i64* %RBP.i284
  %7481 = sub i64 %7480, 36
  %7482 = load i64, i64* %PC.i282
  %7483 = add i64 %7482, 4
  store i64 %7483, i64* %PC.i282
  %7484 = inttoptr i64 %7481 to i32*
  %7485 = load i32, i32* %7484
  %7486 = sext i32 %7485 to i64
  store i64 %7486, i64* %RCX.i283, align 8
  store %struct.Memory* %loadMem_4190b6, %struct.Memory** %MEMORY
  %loadMem_4190ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %7487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7488 = getelementptr inbounds %struct.GPR, %struct.GPR* %7487, i32 0, i32 33
  %7489 = getelementptr inbounds %struct.Reg, %struct.Reg* %7488, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %7489 to i64*
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7491 = getelementptr inbounds %struct.GPR, %struct.GPR* %7490, i32 0, i32 1
  %7492 = getelementptr inbounds %struct.Reg, %struct.Reg* %7491, i32 0, i32 0
  %RAX.i279 = bitcast %union.anon* %7492 to i64*
  %7493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7494 = getelementptr inbounds %struct.GPR, %struct.GPR* %7493, i32 0, i32 5
  %7495 = getelementptr inbounds %struct.Reg, %struct.Reg* %7494, i32 0, i32 0
  %RCX.i280 = bitcast %union.anon* %7495 to i64*
  %7496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7497 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7496, i64 0, i64 1
  %YMM1.i281 = bitcast %union.VectorReg* %7497 to %"class.std::bitset"*
  %7498 = bitcast %"class.std::bitset"* %YMM1.i281 to i8*
  %7499 = load i64, i64* %RAX.i279
  %7500 = load i64, i64* %RCX.i280
  %7501 = mul i64 %7500, 4
  %7502 = add i64 %7501, %7499
  %7503 = load i64, i64* %PC.i278
  %7504 = add i64 %7503, 5
  store i64 %7504, i64* %PC.i278
  %7505 = inttoptr i64 %7502 to float*
  %7506 = load float, float* %7505
  %7507 = bitcast i8* %7498 to float*
  store float %7506, float* %7507, align 1
  %7508 = getelementptr inbounds i8, i8* %7498, i64 4
  %7509 = bitcast i8* %7508 to float*
  store float 0.000000e+00, float* %7509, align 1
  %7510 = getelementptr inbounds i8, i8* %7498, i64 8
  %7511 = bitcast i8* %7510 to float*
  store float 0.000000e+00, float* %7511, align 1
  %7512 = getelementptr inbounds i8, i8* %7498, i64 12
  %7513 = bitcast i8* %7512 to float*
  store float 0.000000e+00, float* %7513, align 1
  store %struct.Memory* %loadMem_4190ba, %struct.Memory** %MEMORY
  %loadMem_4190bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7515 = getelementptr inbounds %struct.GPR, %struct.GPR* %7514, i32 0, i32 33
  %7516 = getelementptr inbounds %struct.Reg, %struct.Reg* %7515, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %7516 to i64*
  %7517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7518 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7517, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %7518 to %"class.std::bitset"*
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7520 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7519, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %7520 to %union.vec128_t*
  %7521 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %7522 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %7523 = bitcast %union.vec128_t* %XMM0.i to i8*
  %7524 = load i64, i64* %PC.i277
  %7525 = add i64 %7524, 4
  store i64 %7525, i64* %PC.i277
  %7526 = bitcast i8* %7522 to <2 x float>*
  %7527 = load <2 x float>, <2 x float>* %7526, align 1
  %7528 = getelementptr inbounds i8, i8* %7522, i64 8
  %7529 = bitcast i8* %7528 to <2 x i32>*
  %7530 = load <2 x i32>, <2 x i32>* %7529, align 1
  %7531 = bitcast i8* %7523 to <2 x float>*
  %7532 = load <2 x float>, <2 x float>* %7531, align 1
  %7533 = extractelement <2 x float> %7527, i32 0
  %7534 = extractelement <2 x float> %7532, i32 0
  %7535 = fsub float %7533, %7534
  %7536 = bitcast i8* %7521 to float*
  store float %7535, float* %7536, align 1
  %7537 = bitcast <2 x float> %7527 to <2 x i32>
  %7538 = extractelement <2 x i32> %7537, i32 1
  %7539 = getelementptr inbounds i8, i8* %7521, i64 4
  %7540 = bitcast i8* %7539 to i32*
  store i32 %7538, i32* %7540, align 1
  %7541 = extractelement <2 x i32> %7530, i32 0
  %7542 = getelementptr inbounds i8, i8* %7521, i64 8
  %7543 = bitcast i8* %7542 to i32*
  store i32 %7541, i32* %7543, align 1
  %7544 = extractelement <2 x i32> %7530, i32 1
  %7545 = getelementptr inbounds i8, i8* %7521, i64 12
  %7546 = bitcast i8* %7545 to i32*
  store i32 %7544, i32* %7546, align 1
  store %struct.Memory* %loadMem_4190bf, %struct.Memory** %MEMORY
  %loadMem_4190c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7548 = getelementptr inbounds %struct.GPR, %struct.GPR* %7547, i32 0, i32 33
  %7549 = getelementptr inbounds %struct.Reg, %struct.Reg* %7548, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %7549 to i64*
  %7550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7551 = getelementptr inbounds %struct.GPR, %struct.GPR* %7550, i32 0, i32 1
  %7552 = getelementptr inbounds %struct.Reg, %struct.Reg* %7551, i32 0, i32 0
  %RAX.i276 = bitcast %union.anon* %7552 to i64*
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7554 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %7553, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %7554 to %union.vec128_t*
  %7555 = bitcast %union.vec128_t* %XMM1.i to i8*
  %7556 = load i64, i64* %PC.i275
  %7557 = add i64 %7556, 4
  store i64 %7557, i64* %PC.i275
  %7558 = bitcast i8* %7555 to <2 x float>*
  %7559 = load <2 x float>, <2 x float>* %7558, align 1
  %7560 = extractelement <2 x float> %7559, i32 0
  %7561 = call float @llvm.trunc.f32(float %7560)
  %7562 = call float @llvm.fabs.f32(float %7561)
  %7563 = fcmp ogt float %7562, 0x41E0000000000000
  %7564 = fptosi float %7561 to i32
  %7565 = zext i32 %7564 to i64
  %7566 = select i1 %7563, i64 2147483648, i64 %7565
  store i64 %7566, i64* %RAX.i276, align 8
  store %struct.Memory* %loadMem_4190c3, %struct.Memory** %MEMORY
  %loadMem_4190c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7568 = getelementptr inbounds %struct.GPR, %struct.GPR* %7567, i32 0, i32 33
  %7569 = getelementptr inbounds %struct.Reg, %struct.Reg* %7568, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %7569 to i64*
  %7570 = load i64, i64* %PC.i274
  %7571 = add i64 %7570, 1
  store i64 %7571, i64* %PC.i274
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %7573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7574 = bitcast %union.anon* %7573 to i32*
  %7575 = load i32, i32* %7574, align 8
  %7576 = sext i32 %7575 to i64
  %7577 = lshr i64 %7576, 32
  store i64 %7577, i64* %7572, align 8
  store %struct.Memory* %loadMem_4190c7, %struct.Memory** %MEMORY
  %loadMem_4190c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7579 = getelementptr inbounds %struct.GPR, %struct.GPR* %7578, i32 0, i32 33
  %7580 = getelementptr inbounds %struct.Reg, %struct.Reg* %7579, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %7580 to i64*
  %7581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7582 = getelementptr inbounds %struct.GPR, %struct.GPR* %7581, i32 0, i32 15
  %7583 = getelementptr inbounds %struct.Reg, %struct.Reg* %7582, i32 0, i32 0
  %RBP.i270 = bitcast %union.anon* %7583 to i64*
  %7584 = load i64, i64* %RBP.i270
  %7585 = sub i64 %7584, 20
  %7586 = load i64, i64* %PC.i269
  %7587 = add i64 %7586, 3
  store i64 %7587, i64* %PC.i269
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7589 = bitcast %union.anon* %7588 to i32*
  %7590 = load i32, i32* %7589, align 8
  %7591 = zext i32 %7590 to i64
  %7592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %7593 = bitcast %union.anon* %7592 to i32*
  %7594 = load i32, i32* %7593, align 8
  %7595 = zext i32 %7594 to i64
  %7596 = inttoptr i64 %7585 to i32*
  %7597 = load i32, i32* %7596
  %7598 = sext i32 %7597 to i64
  %7599 = shl i64 %7595, 32
  %7600 = or i64 %7599, %7591
  %7601 = sdiv i64 %7600, %7598
  %7602 = shl i64 %7601, 32
  %7603 = ashr exact i64 %7602, 32
  %7604 = icmp eq i64 %7601, %7603
  br i1 %7604, label %7609, label %7605

; <label>:7605:                                   ; preds = %block_4190a6
  %7606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7607 = load i64, i64* %7606, align 8
  %7608 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7607, %struct.Memory* %loadMem_4190c8)
  br label %routine_idivl_MINUS0x14__rbp_.exit

; <label>:7609:                                   ; preds = %block_4190a6
  %7610 = srem i64 %7600, %7598
  %7611 = getelementptr inbounds %union.anon, %union.anon* %7588, i64 0, i32 0
  %7612 = and i64 %7601, 4294967295
  store i64 %7612, i64* %7611, align 8
  %7613 = getelementptr inbounds %union.anon, %union.anon* %7592, i64 0, i32 0
  %7614 = and i64 %7610, 4294967295
  store i64 %7614, i64* %7613, align 8
  %7615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7615, align 1
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %7616, align 1
  %7617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7617, align 1
  %7618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %7618, align 1
  %7619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %7619, align 1
  %7620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7620, align 1
  br label %routine_idivl_MINUS0x14__rbp_.exit

routine_idivl_MINUS0x14__rbp_.exit:               ; preds = %7605, %7609
  %7621 = phi %struct.Memory* [ %7608, %7605 ], [ %loadMem_4190c8, %7609 ]
  store %struct.Memory* %7621, %struct.Memory** %MEMORY
  %loadMem_4190cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7623 = getelementptr inbounds %struct.GPR, %struct.GPR* %7622, i32 0, i32 33
  %7624 = getelementptr inbounds %struct.Reg, %struct.Reg* %7623, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %7624 to i64*
  %7625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7626 = getelementptr inbounds %struct.GPR, %struct.GPR* %7625, i32 0, i32 1
  %7627 = getelementptr inbounds %struct.Reg, %struct.Reg* %7626, i32 0, i32 0
  %RAX.i268 = bitcast %union.anon* %7627 to i64*
  %7628 = load i64, i64* %RAX.i268
  %7629 = load i64, i64* %PC.i267
  %7630 = add i64 %7629, 3
  store i64 %7630, i64* %PC.i267
  %7631 = trunc i64 %7628 to i32
  %7632 = add i32 20, %7631
  %7633 = zext i32 %7632 to i64
  store i64 %7633, i64* %RAX.i268, align 8
  %7634 = icmp ult i32 %7632, %7631
  %7635 = icmp ult i32 %7632, 20
  %7636 = or i1 %7634, %7635
  %7637 = zext i1 %7636 to i8
  %7638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7637, i8* %7638, align 1
  %7639 = and i32 %7632, 255
  %7640 = call i32 @llvm.ctpop.i32(i32 %7639)
  %7641 = trunc i32 %7640 to i8
  %7642 = and i8 %7641, 1
  %7643 = xor i8 %7642, 1
  %7644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7643, i8* %7644, align 1
  %7645 = xor i64 20, %7628
  %7646 = trunc i64 %7645 to i32
  %7647 = xor i32 %7646, %7632
  %7648 = lshr i32 %7647, 4
  %7649 = trunc i32 %7648 to i8
  %7650 = and i8 %7649, 1
  %7651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7650, i8* %7651, align 1
  %7652 = icmp eq i32 %7632, 0
  %7653 = zext i1 %7652 to i8
  %7654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7653, i8* %7654, align 1
  %7655 = lshr i32 %7632, 31
  %7656 = trunc i32 %7655 to i8
  %7657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7656, i8* %7657, align 1
  %7658 = lshr i32 %7631, 31
  %7659 = xor i32 %7655, %7658
  %7660 = add i32 %7659, %7655
  %7661 = icmp eq i32 %7660, 2
  %7662 = zext i1 %7661 to i8
  %7663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7662, i8* %7663, align 1
  store %struct.Memory* %loadMem_4190cb, %struct.Memory** %MEMORY
  %loadMem_4190ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7665 = getelementptr inbounds %struct.GPR, %struct.GPR* %7664, i32 0, i32 33
  %7666 = getelementptr inbounds %struct.Reg, %struct.Reg* %7665, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %7666 to i64*
  %7667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7668 = getelementptr inbounds %struct.GPR, %struct.GPR* %7667, i32 0, i32 1
  %7669 = getelementptr inbounds %struct.Reg, %struct.Reg* %7668, i32 0, i32 0
  %EAX.i265 = bitcast %union.anon* %7669 to i32*
  %7670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7671 = getelementptr inbounds %struct.GPR, %struct.GPR* %7670, i32 0, i32 15
  %7672 = getelementptr inbounds %struct.Reg, %struct.Reg* %7671, i32 0, i32 0
  %RBP.i266 = bitcast %union.anon* %7672 to i64*
  %7673 = load i64, i64* %RBP.i266
  %7674 = sub i64 %7673, 132
  %7675 = load i32, i32* %EAX.i265
  %7676 = zext i32 %7675 to i64
  %7677 = load i64, i64* %PC.i264
  %7678 = add i64 %7677, 6
  store i64 %7678, i64* %PC.i264
  %7679 = inttoptr i64 %7674 to i32*
  store i32 %7675, i32* %7679
  store %struct.Memory* %loadMem_4190ce, %struct.Memory** %MEMORY
  %loadMem_4190d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7681 = getelementptr inbounds %struct.GPR, %struct.GPR* %7680, i32 0, i32 33
  %7682 = getelementptr inbounds %struct.Reg, %struct.Reg* %7681, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %7682 to i64*
  %7683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7684 = getelementptr inbounds %struct.GPR, %struct.GPR* %7683, i32 0, i32 15
  %7685 = getelementptr inbounds %struct.Reg, %struct.Reg* %7684, i32 0, i32 0
  %RBP.i263 = bitcast %union.anon* %7685 to i64*
  %7686 = load i64, i64* %RBP.i263
  %7687 = sub i64 %7686, 132
  %7688 = load i64, i64* %PC.i262
  %7689 = add i64 %7688, 7
  store i64 %7689, i64* %PC.i262
  %7690 = inttoptr i64 %7687 to i32*
  %7691 = load i32, i32* %7690
  %7692 = sub i32 %7691, 78
  %7693 = icmp ult i32 %7691, 78
  %7694 = zext i1 %7693 to i8
  %7695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7694, i8* %7695, align 1
  %7696 = and i32 %7692, 255
  %7697 = call i32 @llvm.ctpop.i32(i32 %7696)
  %7698 = trunc i32 %7697 to i8
  %7699 = and i8 %7698, 1
  %7700 = xor i8 %7699, 1
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7700, i8* %7701, align 1
  %7702 = xor i32 %7691, 78
  %7703 = xor i32 %7702, %7692
  %7704 = lshr i32 %7703, 4
  %7705 = trunc i32 %7704 to i8
  %7706 = and i8 %7705, 1
  %7707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7706, i8* %7707, align 1
  %7708 = icmp eq i32 %7692, 0
  %7709 = zext i1 %7708 to i8
  %7710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7709, i8* %7710, align 1
  %7711 = lshr i32 %7692, 31
  %7712 = trunc i32 %7711 to i8
  %7713 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7712, i8* %7713, align 1
  %7714 = lshr i32 %7691, 31
  %7715 = xor i32 %7711, %7714
  %7716 = add i32 %7715, %7714
  %7717 = icmp eq i32 %7716, 2
  %7718 = zext i1 %7717 to i8
  %7719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7718, i8* %7719, align 1
  store %struct.Memory* %loadMem_4190d4, %struct.Memory** %MEMORY
  %loadMem_4190db = load %struct.Memory*, %struct.Memory** %MEMORY
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7721 = getelementptr inbounds %struct.GPR, %struct.GPR* %7720, i32 0, i32 33
  %7722 = getelementptr inbounds %struct.Reg, %struct.Reg* %7721, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %7722 to i64*
  %7723 = load i64, i64* %PC.i261
  %7724 = add i64 %7723, 16
  %7725 = load i64, i64* %PC.i261
  %7726 = add i64 %7725, 6
  %7727 = load i64, i64* %PC.i261
  %7728 = add i64 %7727, 6
  store i64 %7728, i64* %PC.i261
  %7729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7730 = load i8, i8* %7729, align 1
  %7731 = icmp ne i8 %7730, 0
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7733 = load i8, i8* %7732, align 1
  %7734 = icmp ne i8 %7733, 0
  %7735 = xor i1 %7731, %7734
  %7736 = zext i1 %7735 to i8
  store i8 %7736, i8* %BRANCH_TAKEN, align 1
  %7737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7738 = select i1 %7735, i64 %7724, i64 %7726
  store i64 %7738, i64* %7737, align 8
  store %struct.Memory* %loadMem_4190db, %struct.Memory** %MEMORY
  %loadBr_4190db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4190db = icmp eq i8 %loadBr_4190db, 1
  br i1 %cmpBr_4190db, label %block_.L_4190eb, label %block_4190e1

block_4190e1:                                     ; preds = %routine_idivl_MINUS0x14__rbp_.exit
  %loadMem_4190e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7740 = getelementptr inbounds %struct.GPR, %struct.GPR* %7739, i32 0, i32 33
  %7741 = getelementptr inbounds %struct.Reg, %struct.Reg* %7740, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %7741 to i64*
  %7742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7743 = getelementptr inbounds %struct.GPR, %struct.GPR* %7742, i32 0, i32 15
  %7744 = getelementptr inbounds %struct.Reg, %struct.Reg* %7743, i32 0, i32 0
  %RBP.i260 = bitcast %union.anon* %7744 to i64*
  %7745 = load i64, i64* %RBP.i260
  %7746 = sub i64 %7745, 132
  %7747 = load i64, i64* %PC.i259
  %7748 = add i64 %7747, 10
  store i64 %7748, i64* %PC.i259
  %7749 = inttoptr i64 %7746 to i32*
  store i32 78, i32* %7749
  store %struct.Memory* %loadMem_4190e1, %struct.Memory** %MEMORY
  br label %block_.L_4190eb

block_.L_4190eb:                                  ; preds = %block_4190e1, %routine_idivl_MINUS0x14__rbp_.exit
  %loadMem_4190eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7751 = getelementptr inbounds %struct.GPR, %struct.GPR* %7750, i32 0, i32 33
  %7752 = getelementptr inbounds %struct.Reg, %struct.Reg* %7751, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %7752 to i64*
  %7753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7754 = getelementptr inbounds %struct.GPR, %struct.GPR* %7753, i32 0, i32 1
  %7755 = getelementptr inbounds %struct.Reg, %struct.Reg* %7754, i32 0, i32 0
  %RAX.i257 = bitcast %union.anon* %7755 to i64*
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7757 = getelementptr inbounds %struct.GPR, %struct.GPR* %7756, i32 0, i32 15
  %7758 = getelementptr inbounds %struct.Reg, %struct.Reg* %7757, i32 0, i32 0
  %RBP.i258 = bitcast %union.anon* %7758 to i64*
  %7759 = load i64, i64* %RBP.i258
  %7760 = sub i64 %7759, 132
  %7761 = load i64, i64* %PC.i256
  %7762 = add i64 %7761, 7
  store i64 %7762, i64* %PC.i256
  %7763 = inttoptr i64 %7760 to i32*
  %7764 = load i32, i32* %7763
  %7765 = sext i32 %7764 to i64
  store i64 %7765, i64* %RAX.i257, align 8
  store %struct.Memory* %loadMem_4190eb, %struct.Memory** %MEMORY
  %loadMem_4190f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7767 = getelementptr inbounds %struct.GPR, %struct.GPR* %7766, i32 0, i32 33
  %7768 = getelementptr inbounds %struct.Reg, %struct.Reg* %7767, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %7768 to i64*
  %7769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7770 = getelementptr inbounds %struct.GPR, %struct.GPR* %7769, i32 0, i32 1
  %7771 = getelementptr inbounds %struct.Reg, %struct.Reg* %7770, i32 0, i32 0
  %RAX.i254 = bitcast %union.anon* %7771 to i64*
  %7772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7773 = getelementptr inbounds %struct.GPR, %struct.GPR* %7772, i32 0, i32 15
  %7774 = getelementptr inbounds %struct.Reg, %struct.Reg* %7773, i32 0, i32 0
  %RBP.i255 = bitcast %union.anon* %7774 to i64*
  %7775 = load i64, i64* %RBP.i255
  %7776 = load i64, i64* %RAX.i254
  %7777 = add i64 %7775, -128
  %7778 = add i64 %7777, %7776
  %7779 = load i64, i64* %PC.i253
  %7780 = add i64 %7779, 5
  store i64 %7780, i64* %PC.i253
  %7781 = inttoptr i64 %7778 to i8*
  store i8 42, i8* %7781
  store %struct.Memory* %loadMem_4190f2, %struct.Memory** %MEMORY
  br label %block_.L_4190f7

block_.L_4190f7:                                  ; preds = %block_.L_4190eb, %block_41908c, %block_.L_41907e
  %loadMem_4190f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7783 = getelementptr inbounds %struct.GPR, %struct.GPR* %7782, i32 0, i32 33
  %7784 = getelementptr inbounds %struct.Reg, %struct.Reg* %7783, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %7784 to i64*
  %7785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7786 = getelementptr inbounds %struct.GPR, %struct.GPR* %7785, i32 0, i32 11
  %7787 = getelementptr inbounds %struct.Reg, %struct.Reg* %7786, i32 0, i32 0
  %RDI.i251 = bitcast %union.anon* %7787 to i64*
  %7788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7789 = getelementptr inbounds %struct.GPR, %struct.GPR* %7788, i32 0, i32 15
  %7790 = getelementptr inbounds %struct.Reg, %struct.Reg* %7789, i32 0, i32 0
  %RBP.i252 = bitcast %union.anon* %7790 to i64*
  %7791 = load i64, i64* %RBP.i252
  %7792 = sub i64 %7791, 128
  %7793 = load i64, i64* %PC.i250
  %7794 = add i64 %7793, 4
  store i64 %7794, i64* %PC.i250
  store i64 %7792, i64* %RDI.i251, align 8
  store %struct.Memory* %loadMem_4190f7, %struct.Memory** %MEMORY
  %loadMem_4190fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %7795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7796 = getelementptr inbounds %struct.GPR, %struct.GPR* %7795, i32 0, i32 33
  %7797 = getelementptr inbounds %struct.Reg, %struct.Reg* %7796, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %7797 to i64*
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7799 = getelementptr inbounds %struct.GPR, %struct.GPR* %7798, i32 0, i32 9
  %7800 = getelementptr inbounds %struct.Reg, %struct.Reg* %7799, i32 0, i32 0
  %RSI.i248 = bitcast %union.anon* %7800 to i64*
  %7801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7802 = getelementptr inbounds %struct.GPR, %struct.GPR* %7801, i32 0, i32 15
  %7803 = getelementptr inbounds %struct.Reg, %struct.Reg* %7802, i32 0, i32 0
  %RBP.i249 = bitcast %union.anon* %7803 to i64*
  %7804 = load i64, i64* %RBP.i249
  %7805 = sub i64 %7804, 8
  %7806 = load i64, i64* %PC.i247
  %7807 = add i64 %7806, 4
  store i64 %7807, i64* %PC.i247
  %7808 = inttoptr i64 %7805 to i64*
  %7809 = load i64, i64* %7808
  store i64 %7809, i64* %RSI.i248, align 8
  store %struct.Memory* %loadMem_4190fb, %struct.Memory** %MEMORY
  %loadMem1_4190ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7811 = getelementptr inbounds %struct.GPR, %struct.GPR* %7810, i32 0, i32 33
  %7812 = getelementptr inbounds %struct.Reg, %struct.Reg* %7811, i32 0, i32 0
  %PC.i246 = bitcast %union.anon* %7812 to i64*
  %7813 = load i64, i64* %PC.i246
  %7814 = add i64 %7813, -97343
  %7815 = load i64, i64* %PC.i246
  %7816 = add i64 %7815, 5
  %7817 = load i64, i64* %PC.i246
  %7818 = add i64 %7817, 5
  store i64 %7818, i64* %PC.i246
  %7819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7820 = load i64, i64* %7819, align 8
  %7821 = add i64 %7820, -8
  %7822 = inttoptr i64 %7821 to i64*
  store i64 %7816, i64* %7822
  store i64 %7821, i64* %7819, align 8
  %7823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7814, i64* %7823, align 8
  store %struct.Memory* %loadMem1_4190ff, %struct.Memory** %MEMORY
  %loadMem2_4190ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4190ff = load i64, i64* %3
  %7824 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %loadMem2_4190ff)
  store %struct.Memory* %7824, %struct.Memory** %MEMORY
  %loadMem_419104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7826 = getelementptr inbounds %struct.GPR, %struct.GPR* %7825, i32 0, i32 33
  %7827 = getelementptr inbounds %struct.Reg, %struct.Reg* %7826, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %7827 to i64*
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7829 = getelementptr inbounds %struct.GPR, %struct.GPR* %7828, i32 0, i32 1
  %7830 = getelementptr inbounds %struct.Reg, %struct.Reg* %7829, i32 0, i32 0
  %EAX.i241 = bitcast %union.anon* %7830 to i32*
  %7831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7832 = getelementptr inbounds %struct.GPR, %struct.GPR* %7831, i32 0, i32 15
  %7833 = getelementptr inbounds %struct.Reg, %struct.Reg* %7832, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %7833 to i64*
  %7834 = load i64, i64* %RBP.i242
  %7835 = sub i64 %7834, 212
  %7836 = load i32, i32* %EAX.i241
  %7837 = zext i32 %7836 to i64
  %7838 = load i64, i64* %PC.i240
  %7839 = add i64 %7838, 6
  store i64 %7839, i64* %PC.i240
  %7840 = inttoptr i64 %7835 to i32*
  store i32 %7836, i32* %7840
  store %struct.Memory* %loadMem_419104, %struct.Memory** %MEMORY
  br label %block_.L_41910a

block_.L_41910a:                                  ; preds = %block_.L_4190f7, %block_.L_418f5a, %block_.L_418e95, %block_418dc3, %block_418daf
  %loadMem_41910a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7842 = getelementptr inbounds %struct.GPR, %struct.GPR* %7841, i32 0, i32 33
  %7843 = getelementptr inbounds %struct.Reg, %struct.Reg* %7842, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %7843 to i64*
  %7844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7845 = getelementptr inbounds %struct.GPR, %struct.GPR* %7844, i32 0, i32 1
  %7846 = getelementptr inbounds %struct.Reg, %struct.Reg* %7845, i32 0, i32 0
  %RAX.i238 = bitcast %union.anon* %7846 to i64*
  %7847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7848 = getelementptr inbounds %struct.GPR, %struct.GPR* %7847, i32 0, i32 15
  %7849 = getelementptr inbounds %struct.Reg, %struct.Reg* %7848, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %7849 to i64*
  %7850 = load i64, i64* %RBP.i239
  %7851 = sub i64 %7850, 32
  %7852 = load i64, i64* %PC.i237
  %7853 = add i64 %7852, 3
  store i64 %7853, i64* %PC.i237
  %7854 = inttoptr i64 %7851 to i32*
  %7855 = load i32, i32* %7854
  %7856 = zext i32 %7855 to i64
  store i64 %7856, i64* %RAX.i238, align 8
  store %struct.Memory* %loadMem_41910a, %struct.Memory** %MEMORY
  %loadMem_41910d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7858 = getelementptr inbounds %struct.GPR, %struct.GPR* %7857, i32 0, i32 33
  %7859 = getelementptr inbounds %struct.Reg, %struct.Reg* %7858, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %7859 to i64*
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7861 = getelementptr inbounds %struct.GPR, %struct.GPR* %7860, i32 0, i32 1
  %7862 = getelementptr inbounds %struct.Reg, %struct.Reg* %7861, i32 0, i32 0
  %RAX.i236 = bitcast %union.anon* %7862 to i64*
  %7863 = load i64, i64* %RAX.i236
  %7864 = load i64, i64* %PC.i235
  %7865 = add i64 %7864, 3
  store i64 %7865, i64* %PC.i235
  %7866 = trunc i64 %7863 to i32
  %7867 = add i32 1, %7866
  %7868 = zext i32 %7867 to i64
  store i64 %7868, i64* %RAX.i236, align 8
  %7869 = icmp ult i32 %7867, %7866
  %7870 = icmp ult i32 %7867, 1
  %7871 = or i1 %7869, %7870
  %7872 = zext i1 %7871 to i8
  %7873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7872, i8* %7873, align 1
  %7874 = and i32 %7867, 255
  %7875 = call i32 @llvm.ctpop.i32(i32 %7874)
  %7876 = trunc i32 %7875 to i8
  %7877 = and i8 %7876, 1
  %7878 = xor i8 %7877, 1
  %7879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7878, i8* %7879, align 1
  %7880 = xor i64 1, %7863
  %7881 = trunc i64 %7880 to i32
  %7882 = xor i32 %7881, %7867
  %7883 = lshr i32 %7882, 4
  %7884 = trunc i32 %7883 to i8
  %7885 = and i8 %7884, 1
  %7886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7885, i8* %7886, align 1
  %7887 = icmp eq i32 %7867, 0
  %7888 = zext i1 %7887 to i8
  %7889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7888, i8* %7889, align 1
  %7890 = lshr i32 %7867, 31
  %7891 = trunc i32 %7890 to i8
  %7892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7891, i8* %7892, align 1
  %7893 = lshr i32 %7866, 31
  %7894 = xor i32 %7890, %7893
  %7895 = add i32 %7894, %7890
  %7896 = icmp eq i32 %7895, 2
  %7897 = zext i1 %7896 to i8
  %7898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7897, i8* %7898, align 1
  store %struct.Memory* %loadMem_41910d, %struct.Memory** %MEMORY
  %loadMem_419110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7900 = getelementptr inbounds %struct.GPR, %struct.GPR* %7899, i32 0, i32 33
  %7901 = getelementptr inbounds %struct.Reg, %struct.Reg* %7900, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %7901 to i64*
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 1
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %EAX.i233 = bitcast %union.anon* %7904 to i32*
  %7905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7906 = getelementptr inbounds %struct.GPR, %struct.GPR* %7905, i32 0, i32 15
  %7907 = getelementptr inbounds %struct.Reg, %struct.Reg* %7906, i32 0, i32 0
  %RBP.i234 = bitcast %union.anon* %7907 to i64*
  %7908 = load i64, i64* %RBP.i234
  %7909 = sub i64 %7908, 32
  %7910 = load i32, i32* %EAX.i233
  %7911 = zext i32 %7910 to i64
  %7912 = load i64, i64* %PC.i232
  %7913 = add i64 %7912, 3
  store i64 %7913, i64* %PC.i232
  %7914 = inttoptr i64 %7909 to i32*
  store i32 %7910, i32* %7914
  store %struct.Memory* %loadMem_419110, %struct.Memory** %MEMORY
  %loadMem_419113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 33
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %PC.i231 = bitcast %union.anon* %7917 to i64*
  %7918 = load i64, i64* %PC.i231
  %7919 = add i64 %7918, -933
  %7920 = load i64, i64* %PC.i231
  %7921 = add i64 %7920, 5
  store i64 %7921, i64* %PC.i231
  %7922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7919, i64* %7922, align 8
  store %struct.Memory* %loadMem_419113, %struct.Memory** %MEMORY
  br label %block_.L_418d6e

block_.L_419118:                                  ; preds = %block_.L_418d6e
  %loadMem_419118 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7924 = getelementptr inbounds %struct.GPR, %struct.GPR* %7923, i32 0, i32 33
  %7925 = getelementptr inbounds %struct.Reg, %struct.Reg* %7924, i32 0, i32 0
  %PC.i228 = bitcast %union.anon* %7925 to i64*
  %7926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7927 = getelementptr inbounds %struct.GPR, %struct.GPR* %7926, i32 0, i32 1
  %7928 = getelementptr inbounds %struct.Reg, %struct.Reg* %7927, i32 0, i32 0
  %RAX.i229 = bitcast %union.anon* %7928 to i64*
  %7929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7930 = getelementptr inbounds %struct.GPR, %struct.GPR* %7929, i32 0, i32 15
  %7931 = getelementptr inbounds %struct.Reg, %struct.Reg* %7930, i32 0, i32 0
  %RBP.i230 = bitcast %union.anon* %7931 to i64*
  %7932 = load i64, i64* %RBP.i230
  %7933 = sub i64 %7932, 16
  %7934 = load i64, i64* %PC.i228
  %7935 = add i64 %7934, 4
  store i64 %7935, i64* %PC.i228
  %7936 = inttoptr i64 %7933 to i64*
  %7937 = load i64, i64* %7936
  store i64 %7937, i64* %RAX.i229, align 8
  store %struct.Memory* %loadMem_419118, %struct.Memory** %MEMORY
  %loadMem_41911c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7939 = getelementptr inbounds %struct.GPR, %struct.GPR* %7938, i32 0, i32 33
  %7940 = getelementptr inbounds %struct.Reg, %struct.Reg* %7939, i32 0, i32 0
  %PC.i225 = bitcast %union.anon* %7940 to i64*
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7942 = getelementptr inbounds %struct.GPR, %struct.GPR* %7941, i32 0, i32 1
  %7943 = getelementptr inbounds %struct.Reg, %struct.Reg* %7942, i32 0, i32 0
  %RAX.i226 = bitcast %union.anon* %7943 to i64*
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7945 = getelementptr inbounds %struct.GPR, %struct.GPR* %7944, i32 0, i32 5
  %7946 = getelementptr inbounds %struct.Reg, %struct.Reg* %7945, i32 0, i32 0
  %RCX.i227 = bitcast %union.anon* %7946 to i64*
  %7947 = load i64, i64* %RAX.i226
  %7948 = add i64 %7947, 40
  %7949 = load i64, i64* %PC.i225
  %7950 = add i64 %7949, 3
  store i64 %7950, i64* %PC.i225
  %7951 = inttoptr i64 %7948 to i32*
  %7952 = load i32, i32* %7951
  %7953 = zext i32 %7952 to i64
  store i64 %7953, i64* %RCX.i227, align 8
  store %struct.Memory* %loadMem_41911c, %struct.Memory** %MEMORY
  %loadMem_41911f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7955 = getelementptr inbounds %struct.GPR, %struct.GPR* %7954, i32 0, i32 33
  %7956 = getelementptr inbounds %struct.Reg, %struct.Reg* %7955, i32 0, i32 0
  %PC.i223 = bitcast %union.anon* %7956 to i64*
  %7957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7958 = getelementptr inbounds %struct.GPR, %struct.GPR* %7957, i32 0, i32 5
  %7959 = getelementptr inbounds %struct.Reg, %struct.Reg* %7958, i32 0, i32 0
  %ECX.i224 = bitcast %union.anon* %7959 to i32*
  %7960 = load i32, i32* %ECX.i224
  %7961 = zext i32 %7960 to i64
  %7962 = load i32, i32* %ECX.i224
  %7963 = zext i32 %7962 to i64
  %7964 = load i64, i64* %PC.i223
  %7965 = add i64 %7964, 2
  store i64 %7965, i64* %PC.i223
  %7966 = and i64 %7963, %7961
  %7967 = trunc i64 %7966 to i32
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7968, align 1
  %7969 = and i32 %7967, 255
  %7970 = call i32 @llvm.ctpop.i32(i32 %7969)
  %7971 = trunc i32 %7970 to i8
  %7972 = and i8 %7971, 1
  %7973 = xor i8 %7972, 1
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7973, i8* %7974, align 1
  %7975 = icmp eq i32 %7967, 0
  %7976 = zext i1 %7975 to i8
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7976, i8* %7977, align 1
  %7978 = lshr i32 %7967, 31
  %7979 = trunc i32 %7978 to i8
  %7980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7979, i8* %7980, align 1
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %7981, align 1
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7982, align 1
  store %struct.Memory* %loadMem_41911f, %struct.Memory** %MEMORY
  %loadMem_419121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7984 = getelementptr inbounds %struct.GPR, %struct.GPR* %7983, i32 0, i32 33
  %7985 = getelementptr inbounds %struct.Reg, %struct.Reg* %7984, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %7985 to i64*
  %7986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7987 = getelementptr inbounds %struct.GPR, %struct.GPR* %7986, i32 0, i32 5
  %7988 = getelementptr inbounds %struct.Reg, %struct.Reg* %7987, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %7988 to i32*
  %7989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7990 = getelementptr inbounds %struct.GPR, %struct.GPR* %7989, i32 0, i32 15
  %7991 = getelementptr inbounds %struct.Reg, %struct.Reg* %7990, i32 0, i32 0
  %RBP.i222 = bitcast %union.anon* %7991 to i64*
  %7992 = load i64, i64* %RBP.i222
  %7993 = sub i64 %7992, 216
  %7994 = load i32, i32* %ECX.i
  %7995 = zext i32 %7994 to i64
  %7996 = load i64, i64* %PC.i221
  %7997 = add i64 %7996, 6
  store i64 %7997, i64* %PC.i221
  %7998 = inttoptr i64 %7993 to i32*
  store i32 %7994, i32* %7998
  store %struct.Memory* %loadMem_419121, %struct.Memory** %MEMORY
  %loadMem_419127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8000 = getelementptr inbounds %struct.GPR, %struct.GPR* %7999, i32 0, i32 33
  %8001 = getelementptr inbounds %struct.Reg, %struct.Reg* %8000, i32 0, i32 0
  %PC.i220 = bitcast %union.anon* %8001 to i64*
  %8002 = load i64, i64* %PC.i220
  %8003 = add i64 %8002, 63
  %8004 = load i64, i64* %PC.i220
  %8005 = add i64 %8004, 6
  %8006 = load i64, i64* %PC.i220
  %8007 = add i64 %8006, 6
  store i64 %8007, i64* %PC.i220
  %8008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8009 = load i8, i8* %8008, align 1
  store i8 %8009, i8* %BRANCH_TAKEN, align 1
  %8010 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8011 = icmp ne i8 %8009, 0
  %8012 = select i1 %8011, i64 %8003, i64 %8005
  store i64 %8012, i64* %8010, align 8
  store %struct.Memory* %loadMem_419127, %struct.Memory** %MEMORY
  %loadBr_419127 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_419127 = icmp eq i8 %loadBr_419127, 1
  br i1 %cmpBr_419127, label %block_.L_419166, label %block_41912d

block_41912d:                                     ; preds = %block_.L_419118
  %loadMem_41912d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8014 = getelementptr inbounds %struct.GPR, %struct.GPR* %8013, i32 0, i32 33
  %8015 = getelementptr inbounds %struct.Reg, %struct.Reg* %8014, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %8015 to i64*
  %8016 = load i64, i64* %PC.i219
  %8017 = add i64 %8016, 5
  %8018 = load i64, i64* %PC.i219
  %8019 = add i64 %8018, 5
  store i64 %8019, i64* %PC.i219
  %8020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8017, i64* %8020, align 8
  store %struct.Memory* %loadMem_41912d, %struct.Memory** %MEMORY
  br label %block_.L_419132

block_.L_419132:                                  ; preds = %block_41912d
  %loadMem_419132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8022 = getelementptr inbounds %struct.GPR, %struct.GPR* %8021, i32 0, i32 33
  %8023 = getelementptr inbounds %struct.Reg, %struct.Reg* %8022, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %8023 to i64*
  %8024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8025 = getelementptr inbounds %struct.GPR, %struct.GPR* %8024, i32 0, i32 1
  %8026 = getelementptr inbounds %struct.Reg, %struct.Reg* %8025, i32 0, i32 0
  %RAX.i217 = bitcast %union.anon* %8026 to i64*
  %8027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8028 = getelementptr inbounds %struct.GPR, %struct.GPR* %8027, i32 0, i32 15
  %8029 = getelementptr inbounds %struct.Reg, %struct.Reg* %8028, i32 0, i32 0
  %RBP.i218 = bitcast %union.anon* %8029 to i64*
  %8030 = load i64, i64* %RBP.i218
  %8031 = sub i64 %8030, 216
  %8032 = load i64, i64* %PC.i216
  %8033 = add i64 %8032, 6
  store i64 %8033, i64* %PC.i216
  %8034 = inttoptr i64 %8031 to i32*
  %8035 = load i32, i32* %8034
  %8036 = zext i32 %8035 to i64
  store i64 %8036, i64* %RAX.i217, align 8
  store %struct.Memory* %loadMem_419132, %struct.Memory** %MEMORY
  %loadMem_419138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8038 = getelementptr inbounds %struct.GPR, %struct.GPR* %8037, i32 0, i32 33
  %8039 = getelementptr inbounds %struct.Reg, %struct.Reg* %8038, i32 0, i32 0
  %PC.i214 = bitcast %union.anon* %8039 to i64*
  %8040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8041 = getelementptr inbounds %struct.GPR, %struct.GPR* %8040, i32 0, i32 1
  %8042 = getelementptr inbounds %struct.Reg, %struct.Reg* %8041, i32 0, i32 0
  %RAX.i215 = bitcast %union.anon* %8042 to i64*
  %8043 = load i64, i64* %RAX.i215
  %8044 = load i64, i64* %PC.i214
  %8045 = add i64 %8044, 3
  store i64 %8045, i64* %PC.i214
  %8046 = trunc i64 %8043 to i32
  %8047 = sub i32 %8046, 1
  %8048 = zext i32 %8047 to i64
  store i64 %8048, i64* %RAX.i215, align 8
  %8049 = icmp ult i32 %8046, 1
  %8050 = zext i1 %8049 to i8
  %8051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8050, i8* %8051, align 1
  %8052 = and i32 %8047, 255
  %8053 = call i32 @llvm.ctpop.i32(i32 %8052)
  %8054 = trunc i32 %8053 to i8
  %8055 = and i8 %8054, 1
  %8056 = xor i8 %8055, 1
  %8057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8056, i8* %8057, align 1
  %8058 = xor i64 1, %8043
  %8059 = trunc i64 %8058 to i32
  %8060 = xor i32 %8059, %8047
  %8061 = lshr i32 %8060, 4
  %8062 = trunc i32 %8061 to i8
  %8063 = and i8 %8062, 1
  %8064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8063, i8* %8064, align 1
  %8065 = icmp eq i32 %8047, 0
  %8066 = zext i1 %8065 to i8
  %8067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8066, i8* %8067, align 1
  %8068 = lshr i32 %8047, 31
  %8069 = trunc i32 %8068 to i8
  %8070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8069, i8* %8070, align 1
  %8071 = lshr i32 %8046, 31
  %8072 = xor i32 %8068, %8071
  %8073 = add i32 %8072, %8071
  %8074 = icmp eq i32 %8073, 2
  %8075 = zext i1 %8074 to i8
  %8076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8075, i8* %8076, align 1
  store %struct.Memory* %loadMem_419138, %struct.Memory** %MEMORY
  %loadMem_41913b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8078 = getelementptr inbounds %struct.GPR, %struct.GPR* %8077, i32 0, i32 33
  %8079 = getelementptr inbounds %struct.Reg, %struct.Reg* %8078, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %8079 to i64*
  %8080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8081 = getelementptr inbounds %struct.GPR, %struct.GPR* %8080, i32 0, i32 1
  %8082 = getelementptr inbounds %struct.Reg, %struct.Reg* %8081, i32 0, i32 0
  %EAX.i212 = bitcast %union.anon* %8082 to i32*
  %8083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8084 = getelementptr inbounds %struct.GPR, %struct.GPR* %8083, i32 0, i32 15
  %8085 = getelementptr inbounds %struct.Reg, %struct.Reg* %8084, i32 0, i32 0
  %RBP.i213 = bitcast %union.anon* %8085 to i64*
  %8086 = load i64, i64* %RBP.i213
  %8087 = sub i64 %8086, 220
  %8088 = load i32, i32* %EAX.i212
  %8089 = zext i32 %8088 to i64
  %8090 = load i64, i64* %PC.i211
  %8091 = add i64 %8090, 6
  store i64 %8091, i64* %PC.i211
  %8092 = inttoptr i64 %8087 to i32*
  store i32 %8088, i32* %8092
  store %struct.Memory* %loadMem_41913b, %struct.Memory** %MEMORY
  %loadMem_419141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8094 = getelementptr inbounds %struct.GPR, %struct.GPR* %8093, i32 0, i32 33
  %8095 = getelementptr inbounds %struct.Reg, %struct.Reg* %8094, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %8095 to i64*
  %8096 = load i64, i64* %PC.i210
  %8097 = add i64 %8096, 69
  %8098 = load i64, i64* %PC.i210
  %8099 = add i64 %8098, 6
  %8100 = load i64, i64* %PC.i210
  %8101 = add i64 %8100, 6
  store i64 %8101, i64* %PC.i210
  %8102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8103 = load i8, i8* %8102, align 1
  store i8 %8103, i8* %BRANCH_TAKEN, align 1
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8105 = icmp ne i8 %8103, 0
  %8106 = select i1 %8105, i64 %8097, i64 %8099
  store i64 %8106, i64* %8104, align 8
  store %struct.Memory* %loadMem_419141, %struct.Memory** %MEMORY
  %loadBr_419141 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_419141 = icmp eq i8 %loadBr_419141, 1
  br i1 %cmpBr_419141, label %block_.L_419186, label %block_419147

block_419147:                                     ; preds = %block_.L_419132
  %loadMem_419147 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8108 = getelementptr inbounds %struct.GPR, %struct.GPR* %8107, i32 0, i32 33
  %8109 = getelementptr inbounds %struct.Reg, %struct.Reg* %8108, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %8109 to i64*
  %8110 = load i64, i64* %PC.i209
  %8111 = add i64 %8110, 5
  %8112 = load i64, i64* %PC.i209
  %8113 = add i64 %8112, 5
  store i64 %8113, i64* %PC.i209
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8111, i64* %8114, align 8
  store %struct.Memory* %loadMem_419147, %struct.Memory** %MEMORY
  br label %block_.L_41914c

block_.L_41914c:                                  ; preds = %block_419147
  %loadMem_41914c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8116 = getelementptr inbounds %struct.GPR, %struct.GPR* %8115, i32 0, i32 33
  %8117 = getelementptr inbounds %struct.Reg, %struct.Reg* %8116, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %8117 to i64*
  %8118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8119 = getelementptr inbounds %struct.GPR, %struct.GPR* %8118, i32 0, i32 1
  %8120 = getelementptr inbounds %struct.Reg, %struct.Reg* %8119, i32 0, i32 0
  %RAX.i207 = bitcast %union.anon* %8120 to i64*
  %8121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8122 = getelementptr inbounds %struct.GPR, %struct.GPR* %8121, i32 0, i32 15
  %8123 = getelementptr inbounds %struct.Reg, %struct.Reg* %8122, i32 0, i32 0
  %RBP.i208 = bitcast %union.anon* %8123 to i64*
  %8124 = load i64, i64* %RBP.i208
  %8125 = sub i64 %8124, 216
  %8126 = load i64, i64* %PC.i206
  %8127 = add i64 %8126, 6
  store i64 %8127, i64* %PC.i206
  %8128 = inttoptr i64 %8125 to i32*
  %8129 = load i32, i32* %8128
  %8130 = zext i32 %8129 to i64
  store i64 %8130, i64* %RAX.i207, align 8
  store %struct.Memory* %loadMem_41914c, %struct.Memory** %MEMORY
  %loadMem_419152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8132 = getelementptr inbounds %struct.GPR, %struct.GPR* %8131, i32 0, i32 33
  %8133 = getelementptr inbounds %struct.Reg, %struct.Reg* %8132, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %8133 to i64*
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8135 = getelementptr inbounds %struct.GPR, %struct.GPR* %8134, i32 0, i32 1
  %8136 = getelementptr inbounds %struct.Reg, %struct.Reg* %8135, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %8136 to i64*
  %8137 = load i64, i64* %RAX.i205
  %8138 = load i64, i64* %PC.i204
  %8139 = add i64 %8138, 3
  store i64 %8139, i64* %PC.i204
  %8140 = trunc i64 %8137 to i32
  %8141 = sub i32 %8140, 2
  %8142 = zext i32 %8141 to i64
  store i64 %8142, i64* %RAX.i205, align 8
  %8143 = icmp ult i32 %8140, 2
  %8144 = zext i1 %8143 to i8
  %8145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8144, i8* %8145, align 1
  %8146 = and i32 %8141, 255
  %8147 = call i32 @llvm.ctpop.i32(i32 %8146)
  %8148 = trunc i32 %8147 to i8
  %8149 = and i8 %8148, 1
  %8150 = xor i8 %8149, 1
  %8151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8150, i8* %8151, align 1
  %8152 = xor i64 2, %8137
  %8153 = trunc i64 %8152 to i32
  %8154 = xor i32 %8153, %8141
  %8155 = lshr i32 %8154, 4
  %8156 = trunc i32 %8155 to i8
  %8157 = and i8 %8156, 1
  %8158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8157, i8* %8158, align 1
  %8159 = icmp eq i32 %8141, 0
  %8160 = zext i1 %8159 to i8
  %8161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8160, i8* %8161, align 1
  %8162 = lshr i32 %8141, 31
  %8163 = trunc i32 %8162 to i8
  %8164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8163, i8* %8164, align 1
  %8165 = lshr i32 %8140, 31
  %8166 = xor i32 %8162, %8165
  %8167 = add i32 %8166, %8165
  %8168 = icmp eq i32 %8167, 2
  %8169 = zext i1 %8168 to i8
  %8170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8169, i8* %8170, align 1
  store %struct.Memory* %loadMem_419152, %struct.Memory** %MEMORY
  %loadMem_419155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8172 = getelementptr inbounds %struct.GPR, %struct.GPR* %8171, i32 0, i32 33
  %8173 = getelementptr inbounds %struct.Reg, %struct.Reg* %8172, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %8173 to i64*
  %8174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8175 = getelementptr inbounds %struct.GPR, %struct.GPR* %8174, i32 0, i32 1
  %8176 = getelementptr inbounds %struct.Reg, %struct.Reg* %8175, i32 0, i32 0
  %EAX.i202 = bitcast %union.anon* %8176 to i32*
  %8177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8178 = getelementptr inbounds %struct.GPR, %struct.GPR* %8177, i32 0, i32 15
  %8179 = getelementptr inbounds %struct.Reg, %struct.Reg* %8178, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %8179 to i64*
  %8180 = load i64, i64* %RBP.i203
  %8181 = sub i64 %8180, 224
  %8182 = load i32, i32* %EAX.i202
  %8183 = zext i32 %8182 to i64
  %8184 = load i64, i64* %PC.i201
  %8185 = add i64 %8184, 6
  store i64 %8185, i64* %PC.i201
  %8186 = inttoptr i64 %8181 to i32*
  store i32 %8182, i32* %8186
  store %struct.Memory* %loadMem_419155, %struct.Memory** %MEMORY
  %loadMem_41915b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8188 = getelementptr inbounds %struct.GPR, %struct.GPR* %8187, i32 0, i32 33
  %8189 = getelementptr inbounds %struct.Reg, %struct.Reg* %8188, i32 0, i32 0
  %PC.i200 = bitcast %union.anon* %8189 to i64*
  %8190 = load i64, i64* %PC.i200
  %8191 = add i64 %8190, 219
  %8192 = load i64, i64* %PC.i200
  %8193 = add i64 %8192, 6
  %8194 = load i64, i64* %PC.i200
  %8195 = add i64 %8194, 6
  store i64 %8195, i64* %PC.i200
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8197 = load i8, i8* %8196, align 1
  store i8 %8197, i8* %BRANCH_TAKEN, align 1
  %8198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8199 = icmp ne i8 %8197, 0
  %8200 = select i1 %8199, i64 %8191, i64 %8193
  store i64 %8200, i64* %8198, align 8
  store %struct.Memory* %loadMem_41915b, %struct.Memory** %MEMORY
  %loadBr_41915b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41915b = icmp eq i8 %loadBr_41915b, 1
  br i1 %cmpBr_41915b, label %block_.L_419236, label %block_419161

block_419161:                                     ; preds = %block_.L_41914c
  %loadMem_419161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8202 = getelementptr inbounds %struct.GPR, %struct.GPR* %8201, i32 0, i32 33
  %8203 = getelementptr inbounds %struct.Reg, %struct.Reg* %8202, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %8203 to i64*
  %8204 = load i64, i64* %PC.i199
  %8205 = add i64 %8204, 384
  %8206 = load i64, i64* %PC.i199
  %8207 = add i64 %8206, 5
  store i64 %8207, i64* %PC.i199
  %8208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8205, i64* %8208, align 8
  store %struct.Memory* %loadMem_419161, %struct.Memory** %MEMORY
  br label %block_.L_4192e1

block_.L_419166:                                  ; preds = %block_.L_419118
  %loadMem_419166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8210 = getelementptr inbounds %struct.GPR, %struct.GPR* %8209, i32 0, i32 33
  %8211 = getelementptr inbounds %struct.Reg, %struct.Reg* %8210, i32 0, i32 0
  %PC.i197 = bitcast %union.anon* %8211 to i64*
  %8212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8213 = getelementptr inbounds %struct.GPR, %struct.GPR* %8212, i32 0, i32 9
  %8214 = getelementptr inbounds %struct.Reg, %struct.Reg* %8213, i32 0, i32 0
  %RSI.i198 = bitcast %union.anon* %8214 to i64*
  %8215 = load i64, i64* %PC.i197
  %8216 = add i64 %8215, 10
  store i64 %8216, i64* %PC.i197
  store i64 ptrtoint (%G__0x457001_type* @G__0x457001 to i64), i64* %RSI.i198, align 8
  store %struct.Memory* %loadMem_419166, %struct.Memory** %MEMORY
  %loadMem_419170 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8218 = getelementptr inbounds %struct.GPR, %struct.GPR* %8217, i32 0, i32 33
  %8219 = getelementptr inbounds %struct.Reg, %struct.Reg* %8218, i32 0, i32 0
  %PC.i194 = bitcast %union.anon* %8219 to i64*
  %8220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8221 = getelementptr inbounds %struct.GPR, %struct.GPR* %8220, i32 0, i32 11
  %8222 = getelementptr inbounds %struct.Reg, %struct.Reg* %8221, i32 0, i32 0
  %RDI.i195 = bitcast %union.anon* %8222 to i64*
  %8223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8224 = getelementptr inbounds %struct.GPR, %struct.GPR* %8223, i32 0, i32 15
  %8225 = getelementptr inbounds %struct.Reg, %struct.Reg* %8224, i32 0, i32 0
  %RBP.i196 = bitcast %union.anon* %8225 to i64*
  %8226 = load i64, i64* %RBP.i196
  %8227 = sub i64 %8226, 8
  %8228 = load i64, i64* %PC.i194
  %8229 = add i64 %8228, 4
  store i64 %8229, i64* %PC.i194
  %8230 = inttoptr i64 %8227 to i64*
  %8231 = load i64, i64* %8230
  store i64 %8231, i64* %RDI.i195, align 8
  store %struct.Memory* %loadMem_419170, %struct.Memory** %MEMORY
  %loadMem_419174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8233 = getelementptr inbounds %struct.GPR, %struct.GPR* %8232, i32 0, i32 33
  %8234 = getelementptr inbounds %struct.Reg, %struct.Reg* %8233, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %8234 to i64*
  %8235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8236 = getelementptr inbounds %struct.GPR, %struct.GPR* %8235, i32 0, i32 1
  %8237 = getelementptr inbounds %struct.Reg, %struct.Reg* %8236, i32 0, i32 0
  %8238 = bitcast %union.anon* %8237 to %struct.anon.2*
  %AL.i193 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8238, i32 0, i32 0
  %8239 = load i64, i64* %PC.i192
  %8240 = add i64 %8239, 2
  store i64 %8240, i64* %PC.i192
  store i8 0, i8* %AL.i193, align 1
  store %struct.Memory* %loadMem_419174, %struct.Memory** %MEMORY
  %loadMem1_419176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8242 = getelementptr inbounds %struct.GPR, %struct.GPR* %8241, i32 0, i32 33
  %8243 = getelementptr inbounds %struct.Reg, %struct.Reg* %8242, i32 0, i32 0
  %PC.i191 = bitcast %union.anon* %8243 to i64*
  %8244 = load i64, i64* %PC.i191
  %8245 = add i64 %8244, -97286
  %8246 = load i64, i64* %PC.i191
  %8247 = add i64 %8246, 5
  %8248 = load i64, i64* %PC.i191
  %8249 = add i64 %8248, 5
  store i64 %8249, i64* %PC.i191
  %8250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8251 = load i64, i64* %8250, align 8
  %8252 = add i64 %8251, -8
  %8253 = inttoptr i64 %8252 to i64*
  store i64 %8247, i64* %8253
  store i64 %8252, i64* %8250, align 8
  %8254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8245, i64* %8254, align 8
  store %struct.Memory* %loadMem1_419176, %struct.Memory** %MEMORY
  %loadMem2_419176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_419176 = load i64, i64* %3
  %8255 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_419176)
  store %struct.Memory* %8255, %struct.Memory** %MEMORY
  %loadMem_41917b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8257 = getelementptr inbounds %struct.GPR, %struct.GPR* %8256, i32 0, i32 33
  %8258 = getelementptr inbounds %struct.Reg, %struct.Reg* %8257, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %8258 to i64*
  %8259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8260 = getelementptr inbounds %struct.GPR, %struct.GPR* %8259, i32 0, i32 1
  %8261 = getelementptr inbounds %struct.Reg, %struct.Reg* %8260, i32 0, i32 0
  %EAX.i186 = bitcast %union.anon* %8261 to i32*
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8263 = getelementptr inbounds %struct.GPR, %struct.GPR* %8262, i32 0, i32 15
  %8264 = getelementptr inbounds %struct.Reg, %struct.Reg* %8263, i32 0, i32 0
  %RBP.i187 = bitcast %union.anon* %8264 to i64*
  %8265 = load i64, i64* %RBP.i187
  %8266 = sub i64 %8265, 228
  %8267 = load i32, i32* %EAX.i186
  %8268 = zext i32 %8267 to i64
  %8269 = load i64, i64* %PC.i185
  %8270 = add i64 %8269, 6
  store i64 %8270, i64* %PC.i185
  %8271 = inttoptr i64 %8266 to i32*
  store i32 %8267, i32* %8271
  store %struct.Memory* %loadMem_41917b, %struct.Memory** %MEMORY
  %loadMem_419181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8273 = getelementptr inbounds %struct.GPR, %struct.GPR* %8272, i32 0, i32 33
  %8274 = getelementptr inbounds %struct.Reg, %struct.Reg* %8273, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %8274 to i64*
  %8275 = load i64, i64* %PC.i184
  %8276 = add i64 %8275, 352
  %8277 = load i64, i64* %PC.i184
  %8278 = add i64 %8277, 5
  store i64 %8278, i64* %PC.i184
  %8279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8276, i64* %8279, align 8
  store %struct.Memory* %loadMem_419181, %struct.Memory** %MEMORY
  br label %block_.L_4192e1

block_.L_419186:                                  ; preds = %block_.L_419132
  %loadMem_419186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8281 = getelementptr inbounds %struct.GPR, %struct.GPR* %8280, i32 0, i32 33
  %8282 = getelementptr inbounds %struct.Reg, %struct.Reg* %8281, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %8282 to i64*
  %8283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8284 = getelementptr inbounds %struct.GPR, %struct.GPR* %8283, i32 0, i32 9
  %8285 = getelementptr inbounds %struct.Reg, %struct.Reg* %8284, i32 0, i32 0
  %RSI.i183 = bitcast %union.anon* %8285 to i64*
  %8286 = load i64, i64* %PC.i182
  %8287 = add i64 %8286, 10
  store i64 %8287, i64* %PC.i182
  store i64 ptrtoint (%G__0x457024_type* @G__0x457024 to i64), i64* %RSI.i183, align 8
  store %struct.Memory* %loadMem_419186, %struct.Memory** %MEMORY
  %loadMem_419190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8289 = getelementptr inbounds %struct.GPR, %struct.GPR* %8288, i32 0, i32 33
  %8290 = getelementptr inbounds %struct.Reg, %struct.Reg* %8289, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %8290 to i64*
  %8291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8292 = getelementptr inbounds %struct.GPR, %struct.GPR* %8291, i32 0, i32 11
  %8293 = getelementptr inbounds %struct.Reg, %struct.Reg* %8292, i32 0, i32 0
  %RDI.i180 = bitcast %union.anon* %8293 to i64*
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8295 = getelementptr inbounds %struct.GPR, %struct.GPR* %8294, i32 0, i32 15
  %8296 = getelementptr inbounds %struct.Reg, %struct.Reg* %8295, i32 0, i32 0
  %RBP.i181 = bitcast %union.anon* %8296 to i64*
  %8297 = load i64, i64* %RBP.i181
  %8298 = sub i64 %8297, 8
  %8299 = load i64, i64* %PC.i179
  %8300 = add i64 %8299, 4
  store i64 %8300, i64* %PC.i179
  %8301 = inttoptr i64 %8298 to i64*
  %8302 = load i64, i64* %8301
  store i64 %8302, i64* %RDI.i180, align 8
  store %struct.Memory* %loadMem_419190, %struct.Memory** %MEMORY
  %loadMem_419194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8304 = getelementptr inbounds %struct.GPR, %struct.GPR* %8303, i32 0, i32 33
  %8305 = getelementptr inbounds %struct.Reg, %struct.Reg* %8304, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %8305 to i64*
  %8306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8307 = getelementptr inbounds %struct.GPR, %struct.GPR* %8306, i32 0, i32 1
  %8308 = getelementptr inbounds %struct.Reg, %struct.Reg* %8307, i32 0, i32 0
  %8309 = bitcast %union.anon* %8308 to %struct.anon.2*
  %AL.i178 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8309, i32 0, i32 0
  %8310 = load i64, i64* %PC.i177
  %8311 = add i64 %8310, 2
  store i64 %8311, i64* %PC.i177
  store i8 0, i8* %AL.i178, align 1
  store %struct.Memory* %loadMem_419194, %struct.Memory** %MEMORY
  %loadMem1_419196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8313 = getelementptr inbounds %struct.GPR, %struct.GPR* %8312, i32 0, i32 33
  %8314 = getelementptr inbounds %struct.Reg, %struct.Reg* %8313, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %8314 to i64*
  %8315 = load i64, i64* %PC.i176
  %8316 = add i64 %8315, -97318
  %8317 = load i64, i64* %PC.i176
  %8318 = add i64 %8317, 5
  %8319 = load i64, i64* %PC.i176
  %8320 = add i64 %8319, 5
  store i64 %8320, i64* %PC.i176
  %8321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8322 = load i64, i64* %8321, align 8
  %8323 = add i64 %8322, -8
  %8324 = inttoptr i64 %8323 to i64*
  store i64 %8318, i64* %8324
  store i64 %8323, i64* %8321, align 8
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8316, i64* %8325, align 8
  store %struct.Memory* %loadMem1_419196, %struct.Memory** %MEMORY
  %loadMem2_419196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_419196 = load i64, i64* %3
  %8326 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_419196)
  store %struct.Memory* %8326, %struct.Memory** %MEMORY
  %loadMem_41919b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8328 = getelementptr inbounds %struct.GPR, %struct.GPR* %8327, i32 0, i32 33
  %8329 = getelementptr inbounds %struct.Reg, %struct.Reg* %8328, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %8329 to i64*
  %8330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8331 = getelementptr inbounds %struct.GPR, %struct.GPR* %8330, i32 0, i32 9
  %8332 = getelementptr inbounds %struct.Reg, %struct.Reg* %8331, i32 0, i32 0
  %RSI.i172 = bitcast %union.anon* %8332 to i64*
  %8333 = load i64, i64* %PC.i171
  %8334 = add i64 %8333, 10
  store i64 %8334, i64* %PC.i171
  store i64 ptrtoint (%G__0x457056_type* @G__0x457056 to i64), i64* %RSI.i172, align 8
  store %struct.Memory* %loadMem_41919b, %struct.Memory** %MEMORY
  %loadMem_4191a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8336 = getelementptr inbounds %struct.GPR, %struct.GPR* %8335, i32 0, i32 33
  %8337 = getelementptr inbounds %struct.Reg, %struct.Reg* %8336, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %8337 to i64*
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8339 = getelementptr inbounds %struct.GPR, %struct.GPR* %8338, i32 0, i32 11
  %8340 = getelementptr inbounds %struct.Reg, %struct.Reg* %8339, i32 0, i32 0
  %RDI.i169 = bitcast %union.anon* %8340 to i64*
  %8341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8342 = getelementptr inbounds %struct.GPR, %struct.GPR* %8341, i32 0, i32 15
  %8343 = getelementptr inbounds %struct.Reg, %struct.Reg* %8342, i32 0, i32 0
  %RBP.i170 = bitcast %union.anon* %8343 to i64*
  %8344 = load i64, i64* %RBP.i170
  %8345 = sub i64 %8344, 8
  %8346 = load i64, i64* %PC.i168
  %8347 = add i64 %8346, 4
  store i64 %8347, i64* %PC.i168
  %8348 = inttoptr i64 %8345 to i64*
  %8349 = load i64, i64* %8348
  store i64 %8349, i64* %RDI.i169, align 8
  store %struct.Memory* %loadMem_4191a5, %struct.Memory** %MEMORY
  %loadMem_4191a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8351 = getelementptr inbounds %struct.GPR, %struct.GPR* %8350, i32 0, i32 33
  %8352 = getelementptr inbounds %struct.Reg, %struct.Reg* %8351, i32 0, i32 0
  %PC.i165 = bitcast %union.anon* %8352 to i64*
  %8353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8354 = getelementptr inbounds %struct.GPR, %struct.GPR* %8353, i32 0, i32 5
  %8355 = getelementptr inbounds %struct.Reg, %struct.Reg* %8354, i32 0, i32 0
  %RCX.i166 = bitcast %union.anon* %8355 to i64*
  %8356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8357 = getelementptr inbounds %struct.GPR, %struct.GPR* %8356, i32 0, i32 15
  %8358 = getelementptr inbounds %struct.Reg, %struct.Reg* %8357, i32 0, i32 0
  %RBP.i167 = bitcast %union.anon* %8358 to i64*
  %8359 = load i64, i64* %RBP.i167
  %8360 = sub i64 %8359, 16
  %8361 = load i64, i64* %PC.i165
  %8362 = add i64 %8361, 4
  store i64 %8362, i64* %PC.i165
  %8363 = inttoptr i64 %8360 to i64*
  %8364 = load i64, i64* %8363
  store i64 %8364, i64* %RCX.i166, align 8
  store %struct.Memory* %loadMem_4191a9, %struct.Memory** %MEMORY
  %loadMem_4191ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %8365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8366 = getelementptr inbounds %struct.GPR, %struct.GPR* %8365, i32 0, i32 33
  %8367 = getelementptr inbounds %struct.Reg, %struct.Reg* %8366, i32 0, i32 0
  %PC.i162 = bitcast %union.anon* %8367 to i64*
  %8368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8369 = getelementptr inbounds %struct.GPR, %struct.GPR* %8368, i32 0, i32 5
  %8370 = getelementptr inbounds %struct.Reg, %struct.Reg* %8369, i32 0, i32 0
  %RCX.i163 = bitcast %union.anon* %8370 to i64*
  %8371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8372 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8371, i64 0, i64 0
  %YMM0.i164 = bitcast %union.VectorReg* %8372 to %"class.std::bitset"*
  %8373 = bitcast %"class.std::bitset"* %YMM0.i164 to i8*
  %8374 = load i64, i64* %RCX.i163
  %8375 = add i64 %8374, 44
  %8376 = load i64, i64* %PC.i162
  %8377 = add i64 %8376, 5
  store i64 %8377, i64* %PC.i162
  %8378 = inttoptr i64 %8375 to float*
  %8379 = load float, float* %8378
  %8380 = fpext float %8379 to double
  %8381 = bitcast i8* %8373 to double*
  store double %8380, double* %8381, align 1
  store %struct.Memory* %loadMem_4191ad, %struct.Memory** %MEMORY
  %loadMem_4191b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8383 = getelementptr inbounds %struct.GPR, %struct.GPR* %8382, i32 0, i32 33
  %8384 = getelementptr inbounds %struct.Reg, %struct.Reg* %8383, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %8384 to i64*
  %8385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8386 = getelementptr inbounds %struct.GPR, %struct.GPR* %8385, i32 0, i32 1
  %8387 = getelementptr inbounds %struct.Reg, %struct.Reg* %8386, i32 0, i32 0
  %EAX.i160 = bitcast %union.anon* %8387 to i32*
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8389 = getelementptr inbounds %struct.GPR, %struct.GPR* %8388, i32 0, i32 15
  %8390 = getelementptr inbounds %struct.Reg, %struct.Reg* %8389, i32 0, i32 0
  %RBP.i161 = bitcast %union.anon* %8390 to i64*
  %8391 = load i64, i64* %RBP.i161
  %8392 = sub i64 %8391, 232
  %8393 = load i32, i32* %EAX.i160
  %8394 = zext i32 %8393 to i64
  %8395 = load i64, i64* %PC.i159
  %8396 = add i64 %8395, 6
  store i64 %8396, i64* %PC.i159
  %8397 = inttoptr i64 %8392 to i32*
  store i32 %8393, i32* %8397
  store %struct.Memory* %loadMem_4191b2, %struct.Memory** %MEMORY
  %loadMem_4191b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8399 = getelementptr inbounds %struct.GPR, %struct.GPR* %8398, i32 0, i32 33
  %8400 = getelementptr inbounds %struct.Reg, %struct.Reg* %8399, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %8400 to i64*
  %8401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8402 = getelementptr inbounds %struct.GPR, %struct.GPR* %8401, i32 0, i32 1
  %8403 = getelementptr inbounds %struct.Reg, %struct.Reg* %8402, i32 0, i32 0
  %8404 = bitcast %union.anon* %8403 to %struct.anon.2*
  %AL.i158 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8404, i32 0, i32 0
  %8405 = load i64, i64* %PC.i157
  %8406 = add i64 %8405, 2
  store i64 %8406, i64* %PC.i157
  store i8 1, i8* %AL.i158, align 1
  store %struct.Memory* %loadMem_4191b8, %struct.Memory** %MEMORY
  %loadMem1_4191ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %8407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8408 = getelementptr inbounds %struct.GPR, %struct.GPR* %8407, i32 0, i32 33
  %8409 = getelementptr inbounds %struct.Reg, %struct.Reg* %8408, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %8409 to i64*
  %8410 = load i64, i64* %PC.i156
  %8411 = add i64 %8410, -97354
  %8412 = load i64, i64* %PC.i156
  %8413 = add i64 %8412, 5
  %8414 = load i64, i64* %PC.i156
  %8415 = add i64 %8414, 5
  store i64 %8415, i64* %PC.i156
  %8416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8417 = load i64, i64* %8416, align 8
  %8418 = add i64 %8417, -8
  %8419 = inttoptr i64 %8418 to i64*
  store i64 %8413, i64* %8419
  store i64 %8418, i64* %8416, align 8
  %8420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8411, i64* %8420, align 8
  store %struct.Memory* %loadMem1_4191ba, %struct.Memory** %MEMORY
  %loadMem2_4191ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4191ba = load i64, i64* %3
  %8421 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4191ba)
  store %struct.Memory* %8421, %struct.Memory** %MEMORY
  %loadMem_4191bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 33
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %8424 to i64*
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 9
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %RSI.i152 = bitcast %union.anon* %8427 to i64*
  %8428 = load i64, i64* %PC.i151
  %8429 = add i64 %8428, 10
  store i64 %8429, i64* %PC.i151
  store i64 ptrtoint (%G__0x457071_type* @G__0x457071 to i64), i64* %RSI.i152, align 8
  store %struct.Memory* %loadMem_4191bf, %struct.Memory** %MEMORY
  %loadMem_4191c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8431 = getelementptr inbounds %struct.GPR, %struct.GPR* %8430, i32 0, i32 33
  %8432 = getelementptr inbounds %struct.Reg, %struct.Reg* %8431, i32 0, i32 0
  %PC.i148 = bitcast %union.anon* %8432 to i64*
  %8433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8434 = getelementptr inbounds %struct.GPR, %struct.GPR* %8433, i32 0, i32 11
  %8435 = getelementptr inbounds %struct.Reg, %struct.Reg* %8434, i32 0, i32 0
  %RDI.i149 = bitcast %union.anon* %8435 to i64*
  %8436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8437 = getelementptr inbounds %struct.GPR, %struct.GPR* %8436, i32 0, i32 15
  %8438 = getelementptr inbounds %struct.Reg, %struct.Reg* %8437, i32 0, i32 0
  %RBP.i150 = bitcast %union.anon* %8438 to i64*
  %8439 = load i64, i64* %RBP.i150
  %8440 = sub i64 %8439, 8
  %8441 = load i64, i64* %PC.i148
  %8442 = add i64 %8441, 4
  store i64 %8442, i64* %PC.i148
  %8443 = inttoptr i64 %8440 to i64*
  %8444 = load i64, i64* %8443
  store i64 %8444, i64* %RDI.i149, align 8
  store %struct.Memory* %loadMem_4191c9, %struct.Memory** %MEMORY
  %loadMem_4191cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8446 = getelementptr inbounds %struct.GPR, %struct.GPR* %8445, i32 0, i32 33
  %8447 = getelementptr inbounds %struct.Reg, %struct.Reg* %8446, i32 0, i32 0
  %PC.i145 = bitcast %union.anon* %8447 to i64*
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8449 = getelementptr inbounds %struct.GPR, %struct.GPR* %8448, i32 0, i32 5
  %8450 = getelementptr inbounds %struct.Reg, %struct.Reg* %8449, i32 0, i32 0
  %RCX.i146 = bitcast %union.anon* %8450 to i64*
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8452 = getelementptr inbounds %struct.GPR, %struct.GPR* %8451, i32 0, i32 15
  %8453 = getelementptr inbounds %struct.Reg, %struct.Reg* %8452, i32 0, i32 0
  %RBP.i147 = bitcast %union.anon* %8453 to i64*
  %8454 = load i64, i64* %RBP.i147
  %8455 = sub i64 %8454, 16
  %8456 = load i64, i64* %PC.i145
  %8457 = add i64 %8456, 4
  store i64 %8457, i64* %PC.i145
  %8458 = inttoptr i64 %8455 to i64*
  %8459 = load i64, i64* %8458
  store i64 %8459, i64* %RCX.i146, align 8
  store %struct.Memory* %loadMem_4191cd, %struct.Memory** %MEMORY
  %loadMem_4191d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8461 = getelementptr inbounds %struct.GPR, %struct.GPR* %8460, i32 0, i32 33
  %8462 = getelementptr inbounds %struct.Reg, %struct.Reg* %8461, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %8462 to i64*
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8464 = getelementptr inbounds %struct.GPR, %struct.GPR* %8463, i32 0, i32 5
  %8465 = getelementptr inbounds %struct.Reg, %struct.Reg* %8464, i32 0, i32 0
  %RCX.i143 = bitcast %union.anon* %8465 to i64*
  %8466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8467 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8466, i64 0, i64 0
  %YMM0.i144 = bitcast %union.VectorReg* %8467 to %"class.std::bitset"*
  %8468 = bitcast %"class.std::bitset"* %YMM0.i144 to i8*
  %8469 = load i64, i64* %RCX.i143
  %8470 = add i64 %8469, 48
  %8471 = load i64, i64* %PC.i142
  %8472 = add i64 %8471, 5
  store i64 %8472, i64* %PC.i142
  %8473 = inttoptr i64 %8470 to float*
  %8474 = load float, float* %8473
  %8475 = fpext float %8474 to double
  %8476 = bitcast i8* %8468 to double*
  store double %8475, double* %8476, align 1
  store %struct.Memory* %loadMem_4191d1, %struct.Memory** %MEMORY
  %loadMem_4191d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8478 = getelementptr inbounds %struct.GPR, %struct.GPR* %8477, i32 0, i32 33
  %8479 = getelementptr inbounds %struct.Reg, %struct.Reg* %8478, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %8479 to i64*
  %8480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8481 = getelementptr inbounds %struct.GPR, %struct.GPR* %8480, i32 0, i32 1
  %8482 = getelementptr inbounds %struct.Reg, %struct.Reg* %8481, i32 0, i32 0
  %EAX.i140 = bitcast %union.anon* %8482 to i32*
  %8483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8484 = getelementptr inbounds %struct.GPR, %struct.GPR* %8483, i32 0, i32 15
  %8485 = getelementptr inbounds %struct.Reg, %struct.Reg* %8484, i32 0, i32 0
  %RBP.i141 = bitcast %union.anon* %8485 to i64*
  %8486 = load i64, i64* %RBP.i141
  %8487 = sub i64 %8486, 236
  %8488 = load i32, i32* %EAX.i140
  %8489 = zext i32 %8488 to i64
  %8490 = load i64, i64* %PC.i139
  %8491 = add i64 %8490, 6
  store i64 %8491, i64* %PC.i139
  %8492 = inttoptr i64 %8487 to i32*
  store i32 %8488, i32* %8492
  store %struct.Memory* %loadMem_4191d6, %struct.Memory** %MEMORY
  %loadMem_4191dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8494 = getelementptr inbounds %struct.GPR, %struct.GPR* %8493, i32 0, i32 33
  %8495 = getelementptr inbounds %struct.Reg, %struct.Reg* %8494, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %8495 to i64*
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 1
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %8499 = bitcast %union.anon* %8498 to %struct.anon.2*
  %AL.i138 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8499, i32 0, i32 0
  %8500 = load i64, i64* %PC.i137
  %8501 = add i64 %8500, 2
  store i64 %8501, i64* %PC.i137
  store i8 1, i8* %AL.i138, align 1
  store %struct.Memory* %loadMem_4191dc, %struct.Memory** %MEMORY
  %loadMem1_4191de = load %struct.Memory*, %struct.Memory** %MEMORY
  %8502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8503 = getelementptr inbounds %struct.GPR, %struct.GPR* %8502, i32 0, i32 33
  %8504 = getelementptr inbounds %struct.Reg, %struct.Reg* %8503, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %8504 to i64*
  %8505 = load i64, i64* %PC.i136
  %8506 = add i64 %8505, -97390
  %8507 = load i64, i64* %PC.i136
  %8508 = add i64 %8507, 5
  %8509 = load i64, i64* %PC.i136
  %8510 = add i64 %8509, 5
  store i64 %8510, i64* %PC.i136
  %8511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8512 = load i64, i64* %8511, align 8
  %8513 = add i64 %8512, -8
  %8514 = inttoptr i64 %8513 to i64*
  store i64 %8508, i64* %8514
  store i64 %8513, i64* %8511, align 8
  %8515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8506, i64* %8515, align 8
  store %struct.Memory* %loadMem1_4191de, %struct.Memory** %MEMORY
  %loadMem2_4191de = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4191de = load i64, i64* %3
  %8516 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4191de)
  store %struct.Memory* %8516, %struct.Memory** %MEMORY
  %loadMem_4191e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8518 = getelementptr inbounds %struct.GPR, %struct.GPR* %8517, i32 0, i32 33
  %8519 = getelementptr inbounds %struct.Reg, %struct.Reg* %8518, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %8519 to i64*
  %8520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8521 = getelementptr inbounds %struct.GPR, %struct.GPR* %8520, i32 0, i32 9
  %8522 = getelementptr inbounds %struct.Reg, %struct.Reg* %8521, i32 0, i32 0
  %RSI.i133 = bitcast %union.anon* %8522 to i64*
  %8523 = load i64, i64* %PC.i132
  %8524 = add i64 %8523, 10
  store i64 %8524, i64* %PC.i132
  store i64 ptrtoint (%G__0x45708c_type* @G__0x45708c to i64), i64* %RSI.i133, align 8
  store %struct.Memory* %loadMem_4191e3, %struct.Memory** %MEMORY
  %loadMem_4191ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8526 = getelementptr inbounds %struct.GPR, %struct.GPR* %8525, i32 0, i32 33
  %8527 = getelementptr inbounds %struct.Reg, %struct.Reg* %8526, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %8527 to i64*
  %8528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8529 = getelementptr inbounds %struct.GPR, %struct.GPR* %8528, i32 0, i32 11
  %8530 = getelementptr inbounds %struct.Reg, %struct.Reg* %8529, i32 0, i32 0
  %RDI.i130 = bitcast %union.anon* %8530 to i64*
  %8531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8532 = getelementptr inbounds %struct.GPR, %struct.GPR* %8531, i32 0, i32 15
  %8533 = getelementptr inbounds %struct.Reg, %struct.Reg* %8532, i32 0, i32 0
  %RBP.i131 = bitcast %union.anon* %8533 to i64*
  %8534 = load i64, i64* %RBP.i131
  %8535 = sub i64 %8534, 8
  %8536 = load i64, i64* %PC.i129
  %8537 = add i64 %8536, 4
  store i64 %8537, i64* %PC.i129
  %8538 = inttoptr i64 %8535 to i64*
  %8539 = load i64, i64* %8538
  store i64 %8539, i64* %RDI.i130, align 8
  store %struct.Memory* %loadMem_4191ed, %struct.Memory** %MEMORY
  %loadMem_4191f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8541 = getelementptr inbounds %struct.GPR, %struct.GPR* %8540, i32 0, i32 33
  %8542 = getelementptr inbounds %struct.Reg, %struct.Reg* %8541, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %8542 to i64*
  %8543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8544 = getelementptr inbounds %struct.GPR, %struct.GPR* %8543, i32 0, i32 5
  %8545 = getelementptr inbounds %struct.Reg, %struct.Reg* %8544, i32 0, i32 0
  %RCX.i127 = bitcast %union.anon* %8545 to i64*
  %8546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8547 = getelementptr inbounds %struct.GPR, %struct.GPR* %8546, i32 0, i32 15
  %8548 = getelementptr inbounds %struct.Reg, %struct.Reg* %8547, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %8548 to i64*
  %8549 = load i64, i64* %RBP.i128
  %8550 = sub i64 %8549, 16
  %8551 = load i64, i64* %PC.i126
  %8552 = add i64 %8551, 4
  store i64 %8552, i64* %PC.i126
  %8553 = inttoptr i64 %8550 to i64*
  %8554 = load i64, i64* %8553
  store i64 %8554, i64* %RCX.i127, align 8
  store %struct.Memory* %loadMem_4191f1, %struct.Memory** %MEMORY
  %loadMem_4191f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8556 = getelementptr inbounds %struct.GPR, %struct.GPR* %8555, i32 0, i32 33
  %8557 = getelementptr inbounds %struct.Reg, %struct.Reg* %8556, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %8557 to i64*
  %8558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8559 = getelementptr inbounds %struct.GPR, %struct.GPR* %8558, i32 0, i32 5
  %8560 = getelementptr inbounds %struct.Reg, %struct.Reg* %8559, i32 0, i32 0
  %RCX.i124 = bitcast %union.anon* %8560 to i64*
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8562 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8561, i64 0, i64 0
  %YMM0.i125 = bitcast %union.VectorReg* %8562 to %"class.std::bitset"*
  %8563 = bitcast %"class.std::bitset"* %YMM0.i125 to i8*
  %8564 = load i64, i64* %RCX.i124
  %8565 = add i64 %8564, 56
  %8566 = load i64, i64* %PC.i123
  %8567 = add i64 %8566, 5
  store i64 %8567, i64* %PC.i123
  %8568 = inttoptr i64 %8565 to float*
  %8569 = load float, float* %8568
  %8570 = fpext float %8569 to double
  %8571 = bitcast i8* %8563 to double*
  store double %8570, double* %8571, align 1
  store %struct.Memory* %loadMem_4191f5, %struct.Memory** %MEMORY
  %loadMem_4191fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8573 = getelementptr inbounds %struct.GPR, %struct.GPR* %8572, i32 0, i32 33
  %8574 = getelementptr inbounds %struct.Reg, %struct.Reg* %8573, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %8574 to i64*
  %8575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8576 = getelementptr inbounds %struct.GPR, %struct.GPR* %8575, i32 0, i32 1
  %8577 = getelementptr inbounds %struct.Reg, %struct.Reg* %8576, i32 0, i32 0
  %EAX.i121 = bitcast %union.anon* %8577 to i32*
  %8578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8579 = getelementptr inbounds %struct.GPR, %struct.GPR* %8578, i32 0, i32 15
  %8580 = getelementptr inbounds %struct.Reg, %struct.Reg* %8579, i32 0, i32 0
  %RBP.i122 = bitcast %union.anon* %8580 to i64*
  %8581 = load i64, i64* %RBP.i122
  %8582 = sub i64 %8581, 240
  %8583 = load i32, i32* %EAX.i121
  %8584 = zext i32 %8583 to i64
  %8585 = load i64, i64* %PC.i120
  %8586 = add i64 %8585, 6
  store i64 %8586, i64* %PC.i120
  %8587 = inttoptr i64 %8582 to i32*
  store i32 %8583, i32* %8587
  store %struct.Memory* %loadMem_4191fa, %struct.Memory** %MEMORY
  %loadMem_419200 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8589 = getelementptr inbounds %struct.GPR, %struct.GPR* %8588, i32 0, i32 33
  %8590 = getelementptr inbounds %struct.Reg, %struct.Reg* %8589, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %8590 to i64*
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8592 = getelementptr inbounds %struct.GPR, %struct.GPR* %8591, i32 0, i32 1
  %8593 = getelementptr inbounds %struct.Reg, %struct.Reg* %8592, i32 0, i32 0
  %8594 = bitcast %union.anon* %8593 to %struct.anon.2*
  %AL.i119 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8594, i32 0, i32 0
  %8595 = load i64, i64* %PC.i118
  %8596 = add i64 %8595, 2
  store i64 %8596, i64* %PC.i118
  store i8 1, i8* %AL.i119, align 1
  store %struct.Memory* %loadMem_419200, %struct.Memory** %MEMORY
  %loadMem1_419202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8598 = getelementptr inbounds %struct.GPR, %struct.GPR* %8597, i32 0, i32 33
  %8599 = getelementptr inbounds %struct.Reg, %struct.Reg* %8598, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %8599 to i64*
  %8600 = load i64, i64* %PC.i117
  %8601 = add i64 %8600, -97426
  %8602 = load i64, i64* %PC.i117
  %8603 = add i64 %8602, 5
  %8604 = load i64, i64* %PC.i117
  %8605 = add i64 %8604, 5
  store i64 %8605, i64* %PC.i117
  %8606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8607 = load i64, i64* %8606, align 8
  %8608 = add i64 %8607, -8
  %8609 = inttoptr i64 %8608 to i64*
  store i64 %8603, i64* %8609
  store i64 %8608, i64* %8606, align 8
  %8610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8601, i64* %8610, align 8
  store %struct.Memory* %loadMem1_419202, %struct.Memory** %MEMORY
  %loadMem2_419202 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_419202 = load i64, i64* %3
  %8611 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_419202)
  store %struct.Memory* %8611, %struct.Memory** %MEMORY
  %loadMem_419207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8613 = getelementptr inbounds %struct.GPR, %struct.GPR* %8612, i32 0, i32 33
  %8614 = getelementptr inbounds %struct.Reg, %struct.Reg* %8613, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %8614 to i64*
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8616 = getelementptr inbounds %struct.GPR, %struct.GPR* %8615, i32 0, i32 9
  %8617 = getelementptr inbounds %struct.Reg, %struct.Reg* %8616, i32 0, i32 0
  %RSI.i113 = bitcast %union.anon* %8617 to i64*
  %8618 = load i64, i64* %PC.i112
  %8619 = add i64 %8618, 10
  store i64 %8619, i64* %PC.i112
  store i64 ptrtoint (%G__0x4570a7_type* @G__0x4570a7 to i64), i64* %RSI.i113, align 8
  store %struct.Memory* %loadMem_419207, %struct.Memory** %MEMORY
  %loadMem_419211 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8621 = getelementptr inbounds %struct.GPR, %struct.GPR* %8620, i32 0, i32 33
  %8622 = getelementptr inbounds %struct.Reg, %struct.Reg* %8621, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %8622 to i64*
  %8623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8624 = getelementptr inbounds %struct.GPR, %struct.GPR* %8623, i32 0, i32 11
  %8625 = getelementptr inbounds %struct.Reg, %struct.Reg* %8624, i32 0, i32 0
  %RDI.i110 = bitcast %union.anon* %8625 to i64*
  %8626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8627 = getelementptr inbounds %struct.GPR, %struct.GPR* %8626, i32 0, i32 15
  %8628 = getelementptr inbounds %struct.Reg, %struct.Reg* %8627, i32 0, i32 0
  %RBP.i111 = bitcast %union.anon* %8628 to i64*
  %8629 = load i64, i64* %RBP.i111
  %8630 = sub i64 %8629, 8
  %8631 = load i64, i64* %PC.i109
  %8632 = add i64 %8631, 4
  store i64 %8632, i64* %PC.i109
  %8633 = inttoptr i64 %8630 to i64*
  %8634 = load i64, i64* %8633
  store i64 %8634, i64* %RDI.i110, align 8
  store %struct.Memory* %loadMem_419211, %struct.Memory** %MEMORY
  %loadMem_419215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8636 = getelementptr inbounds %struct.GPR, %struct.GPR* %8635, i32 0, i32 33
  %8637 = getelementptr inbounds %struct.Reg, %struct.Reg* %8636, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %8637 to i64*
  %8638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8639 = getelementptr inbounds %struct.GPR, %struct.GPR* %8638, i32 0, i32 5
  %8640 = getelementptr inbounds %struct.Reg, %struct.Reg* %8639, i32 0, i32 0
  %RCX.i107 = bitcast %union.anon* %8640 to i64*
  %8641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8642 = getelementptr inbounds %struct.GPR, %struct.GPR* %8641, i32 0, i32 15
  %8643 = getelementptr inbounds %struct.Reg, %struct.Reg* %8642, i32 0, i32 0
  %RBP.i108 = bitcast %union.anon* %8643 to i64*
  %8644 = load i64, i64* %RBP.i108
  %8645 = sub i64 %8644, 16
  %8646 = load i64, i64* %PC.i106
  %8647 = add i64 %8646, 4
  store i64 %8647, i64* %PC.i106
  %8648 = inttoptr i64 %8645 to i64*
  %8649 = load i64, i64* %8648
  store i64 %8649, i64* %RCX.i107, align 8
  store %struct.Memory* %loadMem_419215, %struct.Memory** %MEMORY
  %loadMem_419219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8651 = getelementptr inbounds %struct.GPR, %struct.GPR* %8650, i32 0, i32 33
  %8652 = getelementptr inbounds %struct.Reg, %struct.Reg* %8651, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %8652 to i64*
  %8653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8654 = getelementptr inbounds %struct.GPR, %struct.GPR* %8653, i32 0, i32 5
  %8655 = getelementptr inbounds %struct.Reg, %struct.Reg* %8654, i32 0, i32 0
  %RCX.i104 = bitcast %union.anon* %8655 to i64*
  %8656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8657 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8656, i64 0, i64 0
  %YMM0.i105 = bitcast %union.VectorReg* %8657 to %"class.std::bitset"*
  %8658 = bitcast %"class.std::bitset"* %YMM0.i105 to i8*
  %8659 = load i64, i64* %RCX.i104
  %8660 = add i64 %8659, 60
  %8661 = load i64, i64* %PC.i103
  %8662 = add i64 %8661, 5
  store i64 %8662, i64* %PC.i103
  %8663 = inttoptr i64 %8660 to float*
  %8664 = load float, float* %8663
  %8665 = fpext float %8664 to double
  %8666 = bitcast i8* %8658 to double*
  store double %8665, double* %8666, align 1
  store %struct.Memory* %loadMem_419219, %struct.Memory** %MEMORY
  %loadMem_41921e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8668 = getelementptr inbounds %struct.GPR, %struct.GPR* %8667, i32 0, i32 33
  %8669 = getelementptr inbounds %struct.Reg, %struct.Reg* %8668, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %8669 to i64*
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8671 = getelementptr inbounds %struct.GPR, %struct.GPR* %8670, i32 0, i32 1
  %8672 = getelementptr inbounds %struct.Reg, %struct.Reg* %8671, i32 0, i32 0
  %EAX.i101 = bitcast %union.anon* %8672 to i32*
  %8673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8674 = getelementptr inbounds %struct.GPR, %struct.GPR* %8673, i32 0, i32 15
  %8675 = getelementptr inbounds %struct.Reg, %struct.Reg* %8674, i32 0, i32 0
  %RBP.i102 = bitcast %union.anon* %8675 to i64*
  %8676 = load i64, i64* %RBP.i102
  %8677 = sub i64 %8676, 244
  %8678 = load i32, i32* %EAX.i101
  %8679 = zext i32 %8678 to i64
  %8680 = load i64, i64* %PC.i100
  %8681 = add i64 %8680, 6
  store i64 %8681, i64* %PC.i100
  %8682 = inttoptr i64 %8677 to i32*
  store i32 %8678, i32* %8682
  store %struct.Memory* %loadMem_41921e, %struct.Memory** %MEMORY
  %loadMem_419224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8684 = getelementptr inbounds %struct.GPR, %struct.GPR* %8683, i32 0, i32 33
  %8685 = getelementptr inbounds %struct.Reg, %struct.Reg* %8684, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %8685 to i64*
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8687 = getelementptr inbounds %struct.GPR, %struct.GPR* %8686, i32 0, i32 1
  %8688 = getelementptr inbounds %struct.Reg, %struct.Reg* %8687, i32 0, i32 0
  %8689 = bitcast %union.anon* %8688 to %struct.anon.2*
  %AL.i99 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8689, i32 0, i32 0
  %8690 = load i64, i64* %PC.i98
  %8691 = add i64 %8690, 2
  store i64 %8691, i64* %PC.i98
  store i8 1, i8* %AL.i99, align 1
  store %struct.Memory* %loadMem_419224, %struct.Memory** %MEMORY
  %loadMem1_419226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8693 = getelementptr inbounds %struct.GPR, %struct.GPR* %8692, i32 0, i32 33
  %8694 = getelementptr inbounds %struct.Reg, %struct.Reg* %8693, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %8694 to i64*
  %8695 = load i64, i64* %PC.i97
  %8696 = add i64 %8695, -97462
  %8697 = load i64, i64* %PC.i97
  %8698 = add i64 %8697, 5
  %8699 = load i64, i64* %PC.i97
  %8700 = add i64 %8699, 5
  store i64 %8700, i64* %PC.i97
  %8701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8702 = load i64, i64* %8701, align 8
  %8703 = add i64 %8702, -8
  %8704 = inttoptr i64 %8703 to i64*
  store i64 %8698, i64* %8704
  store i64 %8703, i64* %8701, align 8
  %8705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8696, i64* %8705, align 8
  store %struct.Memory* %loadMem1_419226, %struct.Memory** %MEMORY
  %loadMem2_419226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_419226 = load i64, i64* %3
  %8706 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_419226)
  store %struct.Memory* %8706, %struct.Memory** %MEMORY
  %loadMem_41922b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8708 = getelementptr inbounds %struct.GPR, %struct.GPR* %8707, i32 0, i32 33
  %8709 = getelementptr inbounds %struct.Reg, %struct.Reg* %8708, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %8709 to i64*
  %8710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8711 = getelementptr inbounds %struct.GPR, %struct.GPR* %8710, i32 0, i32 1
  %8712 = getelementptr inbounds %struct.Reg, %struct.Reg* %8711, i32 0, i32 0
  %EAX.i93 = bitcast %union.anon* %8712 to i32*
  %8713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8714 = getelementptr inbounds %struct.GPR, %struct.GPR* %8713, i32 0, i32 15
  %8715 = getelementptr inbounds %struct.Reg, %struct.Reg* %8714, i32 0, i32 0
  %RBP.i94 = bitcast %union.anon* %8715 to i64*
  %8716 = load i64, i64* %RBP.i94
  %8717 = sub i64 %8716, 248
  %8718 = load i32, i32* %EAX.i93
  %8719 = zext i32 %8718 to i64
  %8720 = load i64, i64* %PC.i92
  %8721 = add i64 %8720, 6
  store i64 %8721, i64* %PC.i92
  %8722 = inttoptr i64 %8717 to i32*
  store i32 %8718, i32* %8722
  store %struct.Memory* %loadMem_41922b, %struct.Memory** %MEMORY
  %loadMem_419231 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 33
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %PC.i91 = bitcast %union.anon* %8725 to i64*
  %8726 = load i64, i64* %PC.i91
  %8727 = add i64 %8726, 176
  %8728 = load i64, i64* %PC.i91
  %8729 = add i64 %8728, 5
  store i64 %8729, i64* %PC.i91
  %8730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8727, i64* %8730, align 8
  store %struct.Memory* %loadMem_419231, %struct.Memory** %MEMORY
  br label %block_.L_4192e1

block_.L_419236:                                  ; preds = %block_.L_41914c
  %loadMem_419236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8732 = getelementptr inbounds %struct.GPR, %struct.GPR* %8731, i32 0, i32 33
  %8733 = getelementptr inbounds %struct.Reg, %struct.Reg* %8732, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %8733 to i64*
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8735 = getelementptr inbounds %struct.GPR, %struct.GPR* %8734, i32 0, i32 9
  %8736 = getelementptr inbounds %struct.Reg, %struct.Reg* %8735, i32 0, i32 0
  %RSI.i90 = bitcast %union.anon* %8736 to i64*
  %8737 = load i64, i64* %PC.i89
  %8738 = add i64 %8737, 10
  store i64 %8738, i64* %PC.i89
  store i64 ptrtoint (%G__0x4570c2_type* @G__0x4570c2 to i64), i64* %RSI.i90, align 8
  store %struct.Memory* %loadMem_419236, %struct.Memory** %MEMORY
  %loadMem_419240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8740 = getelementptr inbounds %struct.GPR, %struct.GPR* %8739, i32 0, i32 33
  %8741 = getelementptr inbounds %struct.Reg, %struct.Reg* %8740, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %8741 to i64*
  %8742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8743 = getelementptr inbounds %struct.GPR, %struct.GPR* %8742, i32 0, i32 11
  %8744 = getelementptr inbounds %struct.Reg, %struct.Reg* %8743, i32 0, i32 0
  %RDI.i87 = bitcast %union.anon* %8744 to i64*
  %8745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8746 = getelementptr inbounds %struct.GPR, %struct.GPR* %8745, i32 0, i32 15
  %8747 = getelementptr inbounds %struct.Reg, %struct.Reg* %8746, i32 0, i32 0
  %RBP.i88 = bitcast %union.anon* %8747 to i64*
  %8748 = load i64, i64* %RBP.i88
  %8749 = sub i64 %8748, 8
  %8750 = load i64, i64* %PC.i86
  %8751 = add i64 %8750, 4
  store i64 %8751, i64* %PC.i86
  %8752 = inttoptr i64 %8749 to i64*
  %8753 = load i64, i64* %8752
  store i64 %8753, i64* %RDI.i87, align 8
  store %struct.Memory* %loadMem_419240, %struct.Memory** %MEMORY
  %loadMem_419244 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8755 = getelementptr inbounds %struct.GPR, %struct.GPR* %8754, i32 0, i32 33
  %8756 = getelementptr inbounds %struct.Reg, %struct.Reg* %8755, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %8756 to i64*
  %8757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8758 = getelementptr inbounds %struct.GPR, %struct.GPR* %8757, i32 0, i32 1
  %8759 = getelementptr inbounds %struct.Reg, %struct.Reg* %8758, i32 0, i32 0
  %8760 = bitcast %union.anon* %8759 to %struct.anon.2*
  %AL.i85 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8760, i32 0, i32 0
  %8761 = load i64, i64* %PC.i84
  %8762 = add i64 %8761, 2
  store i64 %8762, i64* %PC.i84
  store i8 0, i8* %AL.i85, align 1
  store %struct.Memory* %loadMem_419244, %struct.Memory** %MEMORY
  %loadMem1_419246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8764 = getelementptr inbounds %struct.GPR, %struct.GPR* %8763, i32 0, i32 33
  %8765 = getelementptr inbounds %struct.Reg, %struct.Reg* %8764, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %8765 to i64*
  %8766 = load i64, i64* %PC.i83
  %8767 = add i64 %8766, -97494
  %8768 = load i64, i64* %PC.i83
  %8769 = add i64 %8768, 5
  %8770 = load i64, i64* %PC.i83
  %8771 = add i64 %8770, 5
  store i64 %8771, i64* %PC.i83
  %8772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8773 = load i64, i64* %8772, align 8
  %8774 = add i64 %8773, -8
  %8775 = inttoptr i64 %8774 to i64*
  store i64 %8769, i64* %8775
  store i64 %8774, i64* %8772, align 8
  %8776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8767, i64* %8776, align 8
  store %struct.Memory* %loadMem1_419246, %struct.Memory** %MEMORY
  %loadMem2_419246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_419246 = load i64, i64* %3
  %8777 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_419246)
  store %struct.Memory* %8777, %struct.Memory** %MEMORY
  %loadMem_41924b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8779 = getelementptr inbounds %struct.GPR, %struct.GPR* %8778, i32 0, i32 33
  %8780 = getelementptr inbounds %struct.Reg, %struct.Reg* %8779, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %8780 to i64*
  %8781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8782 = getelementptr inbounds %struct.GPR, %struct.GPR* %8781, i32 0, i32 9
  %8783 = getelementptr inbounds %struct.Reg, %struct.Reg* %8782, i32 0, i32 0
  %RSI.i80 = bitcast %union.anon* %8783 to i64*
  %8784 = load i64, i64* %PC.i79
  %8785 = add i64 %8784, 10
  store i64 %8785, i64* %PC.i79
  store i64 ptrtoint (%G__0x4570f9_type* @G__0x4570f9 to i64), i64* %RSI.i80, align 8
  store %struct.Memory* %loadMem_41924b, %struct.Memory** %MEMORY
  %loadMem_419255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8787 = getelementptr inbounds %struct.GPR, %struct.GPR* %8786, i32 0, i32 33
  %8788 = getelementptr inbounds %struct.Reg, %struct.Reg* %8787, i32 0, i32 0
  %PC.i76 = bitcast %union.anon* %8788 to i64*
  %8789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8790 = getelementptr inbounds %struct.GPR, %struct.GPR* %8789, i32 0, i32 11
  %8791 = getelementptr inbounds %struct.Reg, %struct.Reg* %8790, i32 0, i32 0
  %RDI.i77 = bitcast %union.anon* %8791 to i64*
  %8792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8793 = getelementptr inbounds %struct.GPR, %struct.GPR* %8792, i32 0, i32 15
  %8794 = getelementptr inbounds %struct.Reg, %struct.Reg* %8793, i32 0, i32 0
  %RBP.i78 = bitcast %union.anon* %8794 to i64*
  %8795 = load i64, i64* %RBP.i78
  %8796 = sub i64 %8795, 8
  %8797 = load i64, i64* %PC.i76
  %8798 = add i64 %8797, 4
  store i64 %8798, i64* %PC.i76
  %8799 = inttoptr i64 %8796 to i64*
  %8800 = load i64, i64* %8799
  store i64 %8800, i64* %RDI.i77, align 8
  store %struct.Memory* %loadMem_419255, %struct.Memory** %MEMORY
  %loadMem_419259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8802 = getelementptr inbounds %struct.GPR, %struct.GPR* %8801, i32 0, i32 33
  %8803 = getelementptr inbounds %struct.Reg, %struct.Reg* %8802, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %8803 to i64*
  %8804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8805 = getelementptr inbounds %struct.GPR, %struct.GPR* %8804, i32 0, i32 5
  %8806 = getelementptr inbounds %struct.Reg, %struct.Reg* %8805, i32 0, i32 0
  %RCX.i74 = bitcast %union.anon* %8806 to i64*
  %8807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8808 = getelementptr inbounds %struct.GPR, %struct.GPR* %8807, i32 0, i32 15
  %8809 = getelementptr inbounds %struct.Reg, %struct.Reg* %8808, i32 0, i32 0
  %RBP.i75 = bitcast %union.anon* %8809 to i64*
  %8810 = load i64, i64* %RBP.i75
  %8811 = sub i64 %8810, 16
  %8812 = load i64, i64* %PC.i73
  %8813 = add i64 %8812, 4
  store i64 %8813, i64* %PC.i73
  %8814 = inttoptr i64 %8811 to i64*
  %8815 = load i64, i64* %8814
  store i64 %8815, i64* %RCX.i74, align 8
  store %struct.Memory* %loadMem_419259, %struct.Memory** %MEMORY
  %loadMem_41925d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8817 = getelementptr inbounds %struct.GPR, %struct.GPR* %8816, i32 0, i32 33
  %8818 = getelementptr inbounds %struct.Reg, %struct.Reg* %8817, i32 0, i32 0
  %PC.i70 = bitcast %union.anon* %8818 to i64*
  %8819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8820 = getelementptr inbounds %struct.GPR, %struct.GPR* %8819, i32 0, i32 5
  %8821 = getelementptr inbounds %struct.Reg, %struct.Reg* %8820, i32 0, i32 0
  %RCX.i71 = bitcast %union.anon* %8821 to i64*
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8823 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8822, i64 0, i64 0
  %YMM0.i72 = bitcast %union.VectorReg* %8823 to %"class.std::bitset"*
  %8824 = bitcast %"class.std::bitset"* %YMM0.i72 to i8*
  %8825 = load i64, i64* %RCX.i71
  %8826 = add i64 %8825, 44
  %8827 = load i64, i64* %PC.i70
  %8828 = add i64 %8827, 5
  store i64 %8828, i64* %PC.i70
  %8829 = inttoptr i64 %8826 to float*
  %8830 = load float, float* %8829
  %8831 = fpext float %8830 to double
  %8832 = bitcast i8* %8824 to double*
  store double %8831, double* %8832, align 1
  store %struct.Memory* %loadMem_41925d, %struct.Memory** %MEMORY
  %loadMem_419262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8834 = getelementptr inbounds %struct.GPR, %struct.GPR* %8833, i32 0, i32 33
  %8835 = getelementptr inbounds %struct.Reg, %struct.Reg* %8834, i32 0, i32 0
  %PC.i67 = bitcast %union.anon* %8835 to i64*
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8837 = getelementptr inbounds %struct.GPR, %struct.GPR* %8836, i32 0, i32 1
  %8838 = getelementptr inbounds %struct.Reg, %struct.Reg* %8837, i32 0, i32 0
  %EAX.i68 = bitcast %union.anon* %8838 to i32*
  %8839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8840 = getelementptr inbounds %struct.GPR, %struct.GPR* %8839, i32 0, i32 15
  %8841 = getelementptr inbounds %struct.Reg, %struct.Reg* %8840, i32 0, i32 0
  %RBP.i69 = bitcast %union.anon* %8841 to i64*
  %8842 = load i64, i64* %RBP.i69
  %8843 = sub i64 %8842, 252
  %8844 = load i32, i32* %EAX.i68
  %8845 = zext i32 %8844 to i64
  %8846 = load i64, i64* %PC.i67
  %8847 = add i64 %8846, 6
  store i64 %8847, i64* %PC.i67
  %8848 = inttoptr i64 %8843 to i32*
  store i32 %8844, i32* %8848
  store %struct.Memory* %loadMem_419262, %struct.Memory** %MEMORY
  %loadMem_419268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8850 = getelementptr inbounds %struct.GPR, %struct.GPR* %8849, i32 0, i32 33
  %8851 = getelementptr inbounds %struct.Reg, %struct.Reg* %8850, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %8851 to i64*
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8853 = getelementptr inbounds %struct.GPR, %struct.GPR* %8852, i32 0, i32 1
  %8854 = getelementptr inbounds %struct.Reg, %struct.Reg* %8853, i32 0, i32 0
  %8855 = bitcast %union.anon* %8854 to %struct.anon.2*
  %AL.i66 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8855, i32 0, i32 0
  %8856 = load i64, i64* %PC.i65
  %8857 = add i64 %8856, 2
  store i64 %8857, i64* %PC.i65
  store i8 1, i8* %AL.i66, align 1
  store %struct.Memory* %loadMem_419268, %struct.Memory** %MEMORY
  %loadMem1_41926a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8859 = getelementptr inbounds %struct.GPR, %struct.GPR* %8858, i32 0, i32 33
  %8860 = getelementptr inbounds %struct.Reg, %struct.Reg* %8859, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %8860 to i64*
  %8861 = load i64, i64* %PC.i64
  %8862 = add i64 %8861, -97530
  %8863 = load i64, i64* %PC.i64
  %8864 = add i64 %8863, 5
  %8865 = load i64, i64* %PC.i64
  %8866 = add i64 %8865, 5
  store i64 %8866, i64* %PC.i64
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8868 = load i64, i64* %8867, align 8
  %8869 = add i64 %8868, -8
  %8870 = inttoptr i64 %8869 to i64*
  store i64 %8864, i64* %8870
  store i64 %8869, i64* %8867, align 8
  %8871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8862, i64* %8871, align 8
  store %struct.Memory* %loadMem1_41926a, %struct.Memory** %MEMORY
  %loadMem2_41926a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41926a = load i64, i64* %3
  %8872 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_41926a)
  store %struct.Memory* %8872, %struct.Memory** %MEMORY
  %loadMem_41926f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8874 = getelementptr inbounds %struct.GPR, %struct.GPR* %8873, i32 0, i32 33
  %8875 = getelementptr inbounds %struct.Reg, %struct.Reg* %8874, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %8875 to i64*
  %8876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8877 = getelementptr inbounds %struct.GPR, %struct.GPR* %8876, i32 0, i32 9
  %8878 = getelementptr inbounds %struct.Reg, %struct.Reg* %8877, i32 0, i32 0
  %RSI.i60 = bitcast %union.anon* %8878 to i64*
  %8879 = load i64, i64* %PC.i59
  %8880 = add i64 %8879, 10
  store i64 %8880, i64* %PC.i59
  store i64 ptrtoint (%G__0x457114_type* @G__0x457114 to i64), i64* %RSI.i60, align 8
  store %struct.Memory* %loadMem_41926f, %struct.Memory** %MEMORY
  %loadMem_419279 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8882 = getelementptr inbounds %struct.GPR, %struct.GPR* %8881, i32 0, i32 33
  %8883 = getelementptr inbounds %struct.Reg, %struct.Reg* %8882, i32 0, i32 0
  %PC.i56 = bitcast %union.anon* %8883 to i64*
  %8884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8885 = getelementptr inbounds %struct.GPR, %struct.GPR* %8884, i32 0, i32 11
  %8886 = getelementptr inbounds %struct.Reg, %struct.Reg* %8885, i32 0, i32 0
  %RDI.i57 = bitcast %union.anon* %8886 to i64*
  %8887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8888 = getelementptr inbounds %struct.GPR, %struct.GPR* %8887, i32 0, i32 15
  %8889 = getelementptr inbounds %struct.Reg, %struct.Reg* %8888, i32 0, i32 0
  %RBP.i58 = bitcast %union.anon* %8889 to i64*
  %8890 = load i64, i64* %RBP.i58
  %8891 = sub i64 %8890, 8
  %8892 = load i64, i64* %PC.i56
  %8893 = add i64 %8892, 4
  store i64 %8893, i64* %PC.i56
  %8894 = inttoptr i64 %8891 to i64*
  %8895 = load i64, i64* %8894
  store i64 %8895, i64* %RDI.i57, align 8
  store %struct.Memory* %loadMem_419279, %struct.Memory** %MEMORY
  %loadMem_41927d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8897 = getelementptr inbounds %struct.GPR, %struct.GPR* %8896, i32 0, i32 33
  %8898 = getelementptr inbounds %struct.Reg, %struct.Reg* %8897, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %8898 to i64*
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8900 = getelementptr inbounds %struct.GPR, %struct.GPR* %8899, i32 0, i32 5
  %8901 = getelementptr inbounds %struct.Reg, %struct.Reg* %8900, i32 0, i32 0
  %RCX.i54 = bitcast %union.anon* %8901 to i64*
  %8902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8903 = getelementptr inbounds %struct.GPR, %struct.GPR* %8902, i32 0, i32 15
  %8904 = getelementptr inbounds %struct.Reg, %struct.Reg* %8903, i32 0, i32 0
  %RBP.i55 = bitcast %union.anon* %8904 to i64*
  %8905 = load i64, i64* %RBP.i55
  %8906 = sub i64 %8905, 16
  %8907 = load i64, i64* %PC.i53
  %8908 = add i64 %8907, 4
  store i64 %8908, i64* %PC.i53
  %8909 = inttoptr i64 %8906 to i64*
  %8910 = load i64, i64* %8909
  store i64 %8910, i64* %RCX.i54, align 8
  store %struct.Memory* %loadMem_41927d, %struct.Memory** %MEMORY
  %loadMem_419281 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8912 = getelementptr inbounds %struct.GPR, %struct.GPR* %8911, i32 0, i32 33
  %8913 = getelementptr inbounds %struct.Reg, %struct.Reg* %8912, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %8913 to i64*
  %8914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8915 = getelementptr inbounds %struct.GPR, %struct.GPR* %8914, i32 0, i32 5
  %8916 = getelementptr inbounds %struct.Reg, %struct.Reg* %8915, i32 0, i32 0
  %RCX.i51 = bitcast %union.anon* %8916 to i64*
  %8917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %8918 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8917, i64 0, i64 0
  %YMM0.i52 = bitcast %union.VectorReg* %8918 to %"class.std::bitset"*
  %8919 = bitcast %"class.std::bitset"* %YMM0.i52 to i8*
  %8920 = load i64, i64* %RCX.i51
  %8921 = add i64 %8920, 48
  %8922 = load i64, i64* %PC.i50
  %8923 = add i64 %8922, 5
  store i64 %8923, i64* %PC.i50
  %8924 = inttoptr i64 %8921 to float*
  %8925 = load float, float* %8924
  %8926 = fpext float %8925 to double
  %8927 = bitcast i8* %8919 to double*
  store double %8926, double* %8927, align 1
  store %struct.Memory* %loadMem_419281, %struct.Memory** %MEMORY
  %loadMem_419286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8929 = getelementptr inbounds %struct.GPR, %struct.GPR* %8928, i32 0, i32 33
  %8930 = getelementptr inbounds %struct.Reg, %struct.Reg* %8929, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %8930 to i64*
  %8931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8932 = getelementptr inbounds %struct.GPR, %struct.GPR* %8931, i32 0, i32 1
  %8933 = getelementptr inbounds %struct.Reg, %struct.Reg* %8932, i32 0, i32 0
  %EAX.i48 = bitcast %union.anon* %8933 to i32*
  %8934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8935 = getelementptr inbounds %struct.GPR, %struct.GPR* %8934, i32 0, i32 15
  %8936 = getelementptr inbounds %struct.Reg, %struct.Reg* %8935, i32 0, i32 0
  %RBP.i49 = bitcast %union.anon* %8936 to i64*
  %8937 = load i64, i64* %RBP.i49
  %8938 = sub i64 %8937, 256
  %8939 = load i32, i32* %EAX.i48
  %8940 = zext i32 %8939 to i64
  %8941 = load i64, i64* %PC.i47
  %8942 = add i64 %8941, 6
  store i64 %8942, i64* %PC.i47
  %8943 = inttoptr i64 %8938 to i32*
  store i32 %8939, i32* %8943
  store %struct.Memory* %loadMem_419286, %struct.Memory** %MEMORY
  %loadMem_41928c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8945 = getelementptr inbounds %struct.GPR, %struct.GPR* %8944, i32 0, i32 33
  %8946 = getelementptr inbounds %struct.Reg, %struct.Reg* %8945, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %8946 to i64*
  %8947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8948 = getelementptr inbounds %struct.GPR, %struct.GPR* %8947, i32 0, i32 1
  %8949 = getelementptr inbounds %struct.Reg, %struct.Reg* %8948, i32 0, i32 0
  %8950 = bitcast %union.anon* %8949 to %struct.anon.2*
  %AL.i46 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8950, i32 0, i32 0
  %8951 = load i64, i64* %PC.i45
  %8952 = add i64 %8951, 2
  store i64 %8952, i64* %PC.i45
  store i8 1, i8* %AL.i46, align 1
  store %struct.Memory* %loadMem_41928c, %struct.Memory** %MEMORY
  %loadMem1_41928e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8954 = getelementptr inbounds %struct.GPR, %struct.GPR* %8953, i32 0, i32 33
  %8955 = getelementptr inbounds %struct.Reg, %struct.Reg* %8954, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %8955 to i64*
  %8956 = load i64, i64* %PC.i44
  %8957 = add i64 %8956, -97566
  %8958 = load i64, i64* %PC.i44
  %8959 = add i64 %8958, 5
  %8960 = load i64, i64* %PC.i44
  %8961 = add i64 %8960, 5
  store i64 %8961, i64* %PC.i44
  %8962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8963 = load i64, i64* %8962, align 8
  %8964 = add i64 %8963, -8
  %8965 = inttoptr i64 %8964 to i64*
  store i64 %8959, i64* %8965
  store i64 %8964, i64* %8962, align 8
  %8966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8957, i64* %8966, align 8
  store %struct.Memory* %loadMem1_41928e, %struct.Memory** %MEMORY
  %loadMem2_41928e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41928e = load i64, i64* %3
  %8967 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_41928e)
  store %struct.Memory* %8967, %struct.Memory** %MEMORY
  %loadMem_419293 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8969 = getelementptr inbounds %struct.GPR, %struct.GPR* %8968, i32 0, i32 33
  %8970 = getelementptr inbounds %struct.Reg, %struct.Reg* %8969, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %8970 to i64*
  %8971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8972 = getelementptr inbounds %struct.GPR, %struct.GPR* %8971, i32 0, i32 9
  %8973 = getelementptr inbounds %struct.Reg, %struct.Reg* %8972, i32 0, i32 0
  %RSI.i40 = bitcast %union.anon* %8973 to i64*
  %8974 = load i64, i64* %PC.i39
  %8975 = add i64 %8974, 10
  store i64 %8975, i64* %PC.i39
  store i64 ptrtoint (%G__0x45708c_type* @G__0x45708c to i64), i64* %RSI.i40, align 8
  store %struct.Memory* %loadMem_419293, %struct.Memory** %MEMORY
  %loadMem_41929d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8977 = getelementptr inbounds %struct.GPR, %struct.GPR* %8976, i32 0, i32 33
  %8978 = getelementptr inbounds %struct.Reg, %struct.Reg* %8977, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %8978 to i64*
  %8979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8980 = getelementptr inbounds %struct.GPR, %struct.GPR* %8979, i32 0, i32 11
  %8981 = getelementptr inbounds %struct.Reg, %struct.Reg* %8980, i32 0, i32 0
  %RDI.i37 = bitcast %union.anon* %8981 to i64*
  %8982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8983 = getelementptr inbounds %struct.GPR, %struct.GPR* %8982, i32 0, i32 15
  %8984 = getelementptr inbounds %struct.Reg, %struct.Reg* %8983, i32 0, i32 0
  %RBP.i38 = bitcast %union.anon* %8984 to i64*
  %8985 = load i64, i64* %RBP.i38
  %8986 = sub i64 %8985, 8
  %8987 = load i64, i64* %PC.i36
  %8988 = add i64 %8987, 4
  store i64 %8988, i64* %PC.i36
  %8989 = inttoptr i64 %8986 to i64*
  %8990 = load i64, i64* %8989
  store i64 %8990, i64* %RDI.i37, align 8
  store %struct.Memory* %loadMem_41929d, %struct.Memory** %MEMORY
  %loadMem_4192a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8992 = getelementptr inbounds %struct.GPR, %struct.GPR* %8991, i32 0, i32 33
  %8993 = getelementptr inbounds %struct.Reg, %struct.Reg* %8992, i32 0, i32 0
  %PC.i33 = bitcast %union.anon* %8993 to i64*
  %8994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8995 = getelementptr inbounds %struct.GPR, %struct.GPR* %8994, i32 0, i32 5
  %8996 = getelementptr inbounds %struct.Reg, %struct.Reg* %8995, i32 0, i32 0
  %RCX.i34 = bitcast %union.anon* %8996 to i64*
  %8997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8998 = getelementptr inbounds %struct.GPR, %struct.GPR* %8997, i32 0, i32 15
  %8999 = getelementptr inbounds %struct.Reg, %struct.Reg* %8998, i32 0, i32 0
  %RBP.i35 = bitcast %union.anon* %8999 to i64*
  %9000 = load i64, i64* %RBP.i35
  %9001 = sub i64 %9000, 16
  %9002 = load i64, i64* %PC.i33
  %9003 = add i64 %9002, 4
  store i64 %9003, i64* %PC.i33
  %9004 = inttoptr i64 %9001 to i64*
  %9005 = load i64, i64* %9004
  store i64 %9005, i64* %RCX.i34, align 8
  store %struct.Memory* %loadMem_4192a1, %struct.Memory** %MEMORY
  %loadMem_4192a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9007 = getelementptr inbounds %struct.GPR, %struct.GPR* %9006, i32 0, i32 33
  %9008 = getelementptr inbounds %struct.Reg, %struct.Reg* %9007, i32 0, i32 0
  %PC.i30 = bitcast %union.anon* %9008 to i64*
  %9009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9010 = getelementptr inbounds %struct.GPR, %struct.GPR* %9009, i32 0, i32 5
  %9011 = getelementptr inbounds %struct.Reg, %struct.Reg* %9010, i32 0, i32 0
  %RCX.i31 = bitcast %union.anon* %9011 to i64*
  %9012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9013 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9012, i64 0, i64 0
  %YMM0.i32 = bitcast %union.VectorReg* %9013 to %"class.std::bitset"*
  %9014 = bitcast %"class.std::bitset"* %YMM0.i32 to i8*
  %9015 = load i64, i64* %RCX.i31
  %9016 = add i64 %9015, 56
  %9017 = load i64, i64* %PC.i30
  %9018 = add i64 %9017, 5
  store i64 %9018, i64* %PC.i30
  %9019 = inttoptr i64 %9016 to float*
  %9020 = load float, float* %9019
  %9021 = fpext float %9020 to double
  %9022 = bitcast i8* %9014 to double*
  store double %9021, double* %9022, align 1
  store %struct.Memory* %loadMem_4192a5, %struct.Memory** %MEMORY
  %loadMem_4192aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9024 = getelementptr inbounds %struct.GPR, %struct.GPR* %9023, i32 0, i32 33
  %9025 = getelementptr inbounds %struct.Reg, %struct.Reg* %9024, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %9025 to i64*
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 1
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %EAX.i28 = bitcast %union.anon* %9028 to i32*
  %9029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9030 = getelementptr inbounds %struct.GPR, %struct.GPR* %9029, i32 0, i32 15
  %9031 = getelementptr inbounds %struct.Reg, %struct.Reg* %9030, i32 0, i32 0
  %RBP.i29 = bitcast %union.anon* %9031 to i64*
  %9032 = load i64, i64* %RBP.i29
  %9033 = sub i64 %9032, 260
  %9034 = load i32, i32* %EAX.i28
  %9035 = zext i32 %9034 to i64
  %9036 = load i64, i64* %PC.i27
  %9037 = add i64 %9036, 6
  store i64 %9037, i64* %PC.i27
  %9038 = inttoptr i64 %9033 to i32*
  store i32 %9034, i32* %9038
  store %struct.Memory* %loadMem_4192aa, %struct.Memory** %MEMORY
  %loadMem_4192b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9040 = getelementptr inbounds %struct.GPR, %struct.GPR* %9039, i32 0, i32 33
  %9041 = getelementptr inbounds %struct.Reg, %struct.Reg* %9040, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %9041 to i64*
  %9042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9043 = getelementptr inbounds %struct.GPR, %struct.GPR* %9042, i32 0, i32 1
  %9044 = getelementptr inbounds %struct.Reg, %struct.Reg* %9043, i32 0, i32 0
  %9045 = bitcast %union.anon* %9044 to %struct.anon.2*
  %AL.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9045, i32 0, i32 0
  %9046 = load i64, i64* %PC.i25
  %9047 = add i64 %9046, 2
  store i64 %9047, i64* %PC.i25
  store i8 1, i8* %AL.i26, align 1
  store %struct.Memory* %loadMem_4192b0, %struct.Memory** %MEMORY
  %loadMem1_4192b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9049 = getelementptr inbounds %struct.GPR, %struct.GPR* %9048, i32 0, i32 33
  %9050 = getelementptr inbounds %struct.Reg, %struct.Reg* %9049, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %9050 to i64*
  %9051 = load i64, i64* %PC.i24
  %9052 = add i64 %9051, -97602
  %9053 = load i64, i64* %PC.i24
  %9054 = add i64 %9053, 5
  %9055 = load i64, i64* %PC.i24
  %9056 = add i64 %9055, 5
  store i64 %9056, i64* %PC.i24
  %9057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9058 = load i64, i64* %9057, align 8
  %9059 = add i64 %9058, -8
  %9060 = inttoptr i64 %9059 to i64*
  store i64 %9054, i64* %9060
  store i64 %9059, i64* %9057, align 8
  %9061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9052, i64* %9061, align 8
  store %struct.Memory* %loadMem1_4192b2, %struct.Memory** %MEMORY
  %loadMem2_4192b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4192b2 = load i64, i64* %3
  %9062 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4192b2)
  store %struct.Memory* %9062, %struct.Memory** %MEMORY
  %loadMem_4192b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9064 = getelementptr inbounds %struct.GPR, %struct.GPR* %9063, i32 0, i32 33
  %9065 = getelementptr inbounds %struct.Reg, %struct.Reg* %9064, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %9065 to i64*
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9067 = getelementptr inbounds %struct.GPR, %struct.GPR* %9066, i32 0, i32 9
  %9068 = getelementptr inbounds %struct.Reg, %struct.Reg* %9067, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %9068 to i64*
  %9069 = load i64, i64* %PC.i21
  %9070 = add i64 %9069, 10
  store i64 %9070, i64* %PC.i21
  store i64 ptrtoint (%G__0x4570a7_type* @G__0x4570a7 to i64), i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_4192b7, %struct.Memory** %MEMORY
  %loadMem_4192c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9072 = getelementptr inbounds %struct.GPR, %struct.GPR* %9071, i32 0, i32 33
  %9073 = getelementptr inbounds %struct.Reg, %struct.Reg* %9072, i32 0, i32 0
  %PC.i19 = bitcast %union.anon* %9073 to i64*
  %9074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9075 = getelementptr inbounds %struct.GPR, %struct.GPR* %9074, i32 0, i32 11
  %9076 = getelementptr inbounds %struct.Reg, %struct.Reg* %9075, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %9076 to i64*
  %9077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9078 = getelementptr inbounds %struct.GPR, %struct.GPR* %9077, i32 0, i32 15
  %9079 = getelementptr inbounds %struct.Reg, %struct.Reg* %9078, i32 0, i32 0
  %RBP.i20 = bitcast %union.anon* %9079 to i64*
  %9080 = load i64, i64* %RBP.i20
  %9081 = sub i64 %9080, 8
  %9082 = load i64, i64* %PC.i19
  %9083 = add i64 %9082, 4
  store i64 %9083, i64* %PC.i19
  %9084 = inttoptr i64 %9081 to i64*
  %9085 = load i64, i64* %9084
  store i64 %9085, i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_4192c1, %struct.Memory** %MEMORY
  %loadMem_4192c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9087 = getelementptr inbounds %struct.GPR, %struct.GPR* %9086, i32 0, i32 33
  %9088 = getelementptr inbounds %struct.Reg, %struct.Reg* %9087, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %9088 to i64*
  %9089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9090 = getelementptr inbounds %struct.GPR, %struct.GPR* %9089, i32 0, i32 5
  %9091 = getelementptr inbounds %struct.Reg, %struct.Reg* %9090, i32 0, i32 0
  %RCX.i17 = bitcast %union.anon* %9091 to i64*
  %9092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9093 = getelementptr inbounds %struct.GPR, %struct.GPR* %9092, i32 0, i32 15
  %9094 = getelementptr inbounds %struct.Reg, %struct.Reg* %9093, i32 0, i32 0
  %RBP.i18 = bitcast %union.anon* %9094 to i64*
  %9095 = load i64, i64* %RBP.i18
  %9096 = sub i64 %9095, 16
  %9097 = load i64, i64* %PC.i16
  %9098 = add i64 %9097, 4
  store i64 %9098, i64* %PC.i16
  %9099 = inttoptr i64 %9096 to i64*
  %9100 = load i64, i64* %9099
  store i64 %9100, i64* %RCX.i17, align 8
  store %struct.Memory* %loadMem_4192c5, %struct.Memory** %MEMORY
  %loadMem_4192c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9102 = getelementptr inbounds %struct.GPR, %struct.GPR* %9101, i32 0, i32 33
  %9103 = getelementptr inbounds %struct.Reg, %struct.Reg* %9102, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %9103 to i64*
  %9104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9105 = getelementptr inbounds %struct.GPR, %struct.GPR* %9104, i32 0, i32 5
  %9106 = getelementptr inbounds %struct.Reg, %struct.Reg* %9105, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %9106 to i64*
  %9107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9108 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9107, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %9108 to %"class.std::bitset"*
  %9109 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %9110 = load i64, i64* %RCX.i
  %9111 = add i64 %9110, 60
  %9112 = load i64, i64* %PC.i15
  %9113 = add i64 %9112, 5
  store i64 %9113, i64* %PC.i15
  %9114 = inttoptr i64 %9111 to float*
  %9115 = load float, float* %9114
  %9116 = fpext float %9115 to double
  %9117 = bitcast i8* %9109 to double*
  store double %9116, double* %9117, align 1
  store %struct.Memory* %loadMem_4192c9, %struct.Memory** %MEMORY
  %loadMem_4192ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %9118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9119 = getelementptr inbounds %struct.GPR, %struct.GPR* %9118, i32 0, i32 33
  %9120 = getelementptr inbounds %struct.Reg, %struct.Reg* %9119, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %9120 to i64*
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9122 = getelementptr inbounds %struct.GPR, %struct.GPR* %9121, i32 0, i32 1
  %9123 = getelementptr inbounds %struct.Reg, %struct.Reg* %9122, i32 0, i32 0
  %EAX.i13 = bitcast %union.anon* %9123 to i32*
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9125 = getelementptr inbounds %struct.GPR, %struct.GPR* %9124, i32 0, i32 15
  %9126 = getelementptr inbounds %struct.Reg, %struct.Reg* %9125, i32 0, i32 0
  %RBP.i14 = bitcast %union.anon* %9126 to i64*
  %9127 = load i64, i64* %RBP.i14
  %9128 = sub i64 %9127, 264
  %9129 = load i32, i32* %EAX.i13
  %9130 = zext i32 %9129 to i64
  %9131 = load i64, i64* %PC.i12
  %9132 = add i64 %9131, 6
  store i64 %9132, i64* %PC.i12
  %9133 = inttoptr i64 %9128 to i32*
  store i32 %9129, i32* %9133
  store %struct.Memory* %loadMem_4192ce, %struct.Memory** %MEMORY
  %loadMem_4192d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 33
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %9136 to i64*
  %9137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9138 = getelementptr inbounds %struct.GPR, %struct.GPR* %9137, i32 0, i32 1
  %9139 = getelementptr inbounds %struct.Reg, %struct.Reg* %9138, i32 0, i32 0
  %9140 = bitcast %union.anon* %9139 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9140, i32 0, i32 0
  %9141 = load i64, i64* %PC.i11
  %9142 = add i64 %9141, 2
  store i64 %9142, i64* %PC.i11
  store i8 1, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_4192d4, %struct.Memory** %MEMORY
  %loadMem1_4192d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9144 = getelementptr inbounds %struct.GPR, %struct.GPR* %9143, i32 0, i32 33
  %9145 = getelementptr inbounds %struct.Reg, %struct.Reg* %9144, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %9145 to i64*
  %9146 = load i64, i64* %PC.i10
  %9147 = add i64 %9146, -97638
  %9148 = load i64, i64* %PC.i10
  %9149 = add i64 %9148, 5
  %9150 = load i64, i64* %PC.i10
  %9151 = add i64 %9150, 5
  store i64 %9151, i64* %PC.i10
  %9152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9153 = load i64, i64* %9152, align 8
  %9154 = add i64 %9153, -8
  %9155 = inttoptr i64 %9154 to i64*
  store i64 %9149, i64* %9155
  store i64 %9154, i64* %9152, align 8
  %9156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9147, i64* %9156, align 8
  store %struct.Memory* %loadMem1_4192d6, %struct.Memory** %MEMORY
  %loadMem2_4192d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4192d6 = load i64, i64* %3
  %9157 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %loadMem2_4192d6)
  store %struct.Memory* %9157, %struct.Memory** %MEMORY
  %loadMem_4192db = load %struct.Memory*, %struct.Memory** %MEMORY
  %9158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9159 = getelementptr inbounds %struct.GPR, %struct.GPR* %9158, i32 0, i32 33
  %9160 = getelementptr inbounds %struct.Reg, %struct.Reg* %9159, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %9160 to i64*
  %9161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9162 = getelementptr inbounds %struct.GPR, %struct.GPR* %9161, i32 0, i32 1
  %9163 = getelementptr inbounds %struct.Reg, %struct.Reg* %9162, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %9163 to i32*
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9165 = getelementptr inbounds %struct.GPR, %struct.GPR* %9164, i32 0, i32 15
  %9166 = getelementptr inbounds %struct.Reg, %struct.Reg* %9165, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %9166 to i64*
  %9167 = load i64, i64* %RBP.i6
  %9168 = sub i64 %9167, 268
  %9169 = load i32, i32* %EAX.i
  %9170 = zext i32 %9169 to i64
  %9171 = load i64, i64* %PC.i5
  %9172 = add i64 %9171, 6
  store i64 %9172, i64* %PC.i5
  %9173 = inttoptr i64 %9168 to i32*
  store i32 %9169, i32* %9173
  store %struct.Memory* %loadMem_4192db, %struct.Memory** %MEMORY
  br label %block_.L_4192e1

block_.L_4192e1:                                  ; preds = %block_.L_419236, %block_.L_419186, %block_.L_419166, %block_419161
  %loadMem_4192e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9175 = getelementptr inbounds %struct.GPR, %struct.GPR* %9174, i32 0, i32 33
  %9176 = getelementptr inbounds %struct.Reg, %struct.Reg* %9175, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %9176 to i64*
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9178 = getelementptr inbounds %struct.GPR, %struct.GPR* %9177, i32 0, i32 13
  %9179 = getelementptr inbounds %struct.Reg, %struct.Reg* %9178, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %9179 to i64*
  %9180 = load i64, i64* %RSP.i
  %9181 = load i64, i64* %PC.i4
  %9182 = add i64 %9181, 7
  store i64 %9182, i64* %PC.i4
  %9183 = add i64 272, %9180
  store i64 %9183, i64* %RSP.i, align 8
  %9184 = icmp ult i64 %9183, %9180
  %9185 = icmp ult i64 %9183, 272
  %9186 = or i1 %9184, %9185
  %9187 = zext i1 %9186 to i8
  %9188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9187, i8* %9188, align 1
  %9189 = trunc i64 %9183 to i32
  %9190 = and i32 %9189, 255
  %9191 = call i32 @llvm.ctpop.i32(i32 %9190)
  %9192 = trunc i32 %9191 to i8
  %9193 = and i8 %9192, 1
  %9194 = xor i8 %9193, 1
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9194, i8* %9195, align 1
  %9196 = xor i64 272, %9180
  %9197 = xor i64 %9196, %9183
  %9198 = lshr i64 %9197, 4
  %9199 = trunc i64 %9198 to i8
  %9200 = and i8 %9199, 1
  %9201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9200, i8* %9201, align 1
  %9202 = icmp eq i64 %9183, 0
  %9203 = zext i1 %9202 to i8
  %9204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9203, i8* %9204, align 1
  %9205 = lshr i64 %9183, 63
  %9206 = trunc i64 %9205 to i8
  %9207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9206, i8* %9207, align 1
  %9208 = lshr i64 %9180, 63
  %9209 = xor i64 %9205, %9208
  %9210 = add i64 %9209, %9205
  %9211 = icmp eq i64 %9210, 2
  %9212 = zext i1 %9211 to i8
  %9213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9212, i8* %9213, align 1
  store %struct.Memory* %loadMem_4192e1, %struct.Memory** %MEMORY
  %loadMem_4192e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9215 = getelementptr inbounds %struct.GPR, %struct.GPR* %9214, i32 0, i32 33
  %9216 = getelementptr inbounds %struct.Reg, %struct.Reg* %9215, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %9216 to i64*
  %9217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9218 = getelementptr inbounds %struct.GPR, %struct.GPR* %9217, i32 0, i32 15
  %9219 = getelementptr inbounds %struct.Reg, %struct.Reg* %9218, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %9219 to i64*
  %9220 = load i64, i64* %PC.i2
  %9221 = add i64 %9220, 1
  store i64 %9221, i64* %PC.i2
  %9222 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9223 = load i64, i64* %9222, align 8
  %9224 = add i64 %9223, 8
  %9225 = inttoptr i64 %9223 to i64*
  %9226 = load i64, i64* %9225
  store i64 %9226, i64* %RBP.i3, align 8
  store i64 %9224, i64* %9222, align 8
  store %struct.Memory* %loadMem_4192e8, %struct.Memory** %MEMORY
  %loadMem_4192e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9228 = getelementptr inbounds %struct.GPR, %struct.GPR* %9227, i32 0, i32 33
  %9229 = getelementptr inbounds %struct.Reg, %struct.Reg* %9228, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %9229 to i64*
  %9230 = load i64, i64* %PC.i1
  %9231 = add i64 %9230, 1
  store i64 %9231, i64* %PC.i1
  %9232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9234 = load i64, i64* %9233, align 8
  %9235 = inttoptr i64 %9234 to i64*
  %9236 = load i64, i64* %9235
  store i64 %9236, i64* %9232, align 8
  %9237 = add i64 %9234, 8
  store i64 %9237, i64* %9233, align 8
  store %struct.Memory* %loadMem_4192e9, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_4192e9
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x110___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 272
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 272
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 272, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 152
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 3, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x8__rsi____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RSI
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x8__rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_418a99(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 3
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to i32*
  %22 = load i32, i32* %21
  %23 = zext i32 %22 to i64
  store i64 %23, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x18__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 24
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418a86(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x8__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418a8b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418a35(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x14__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 20
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418b35(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x8__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rcx____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i64*
  %13 = load i64, i64* %12
  store i64 %13, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rcx__rdx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %19, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = xor i32 %31, %34
  %36 = add i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418af0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418b21(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x98__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 152
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_418b1c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x88__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 136
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418b35(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0xffffffff___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 -1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, -1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 -1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = xor i32 %36, 1
  %42 = add i32 %40, %41
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %44, i8* %45, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418aac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x90__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x10__rcx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 16
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_418bc7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418b80(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418bb3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_418bae(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x90__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418bc7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418b3c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x8__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x8__rdx____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = sub i32 %12, %14
  %19 = icmp ult i32 %12, %14
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = and i32 %18, 255
  %23 = call i32 @llvm.ctpop.i32(i32 %22)
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %26, i8* %27, align 1
  %28 = xor i64 %15, %13
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, %18
  %31 = lshr i32 %30, 4
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %18, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i32 %18, 31
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %12, 31
  %42 = lshr i32 %14, 31
  %43 = xor i32 %42, %41
  %44 = xor i32 %38, %41
  %45 = add i32 %44, %43
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_418c22(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x8c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 140
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418be2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x10__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_418c7d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_MINUS0x94__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 148
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = add i32 %19, %17
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RDX, align 8
  %22 = icmp ult i32 %20, %17
  %23 = icmp ult i32 %20, %19
  %24 = or i1 %22, %23
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = and i32 %20, 255
  %28 = call i32 @llvm.ctpop.i32(i32 %27)
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %31, i8* %32, align 1
  %33 = xor i32 %19, %17
  %34 = xor i32 %33, %20
  %35 = lshr i32 %34, 4
  %36 = trunc i32 %35 to i8
  %37 = and i8 %36, 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %37, i8* %38, align 1
  %39 = icmp eq i32 %20, 0
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %20, 31
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %43, i8* %44, align 1
  %45 = lshr i32 %17, 31
  %46 = lshr i32 %19, 31
  %47 = xor i32 %42, %45
  %48 = xor i32 %42, %46
  %49 = add i32 %47, %48
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i8
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %51, i8* %52, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418c3d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 24
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418c95(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418cad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456f7b___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456f7b_type* @G__0x456f7b to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456fa9___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456fa9_type* @G__0x456fa9 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456faf___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456faf_type* @G__0x456faf to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x458351___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x458351_type* @G__0x458351 to i64), i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3b___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 59, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x18__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x9c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__MINUS0xa8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x9c__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 156
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa8__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r10___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.fprintf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456fb3___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456fb3_type* @G__0x456fb3 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456fc0___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456fc0_type* @G__0x456fc0 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456fc2___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456fc2_type* @G__0x456fc2 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0xb0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xb0__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 180
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 48
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i8*
  store i8 0, i8* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0xa__MINUS0x31__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 49
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i8*
  store i8 10, i8* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x14__rcx____r9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RCX
  %14 = add i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__r9d__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %R9D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xb8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_419118(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x20___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 32, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4f___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 79, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x80__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.memset_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x8__rdx____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x24__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x88__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 136
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_418db4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41910a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x90__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 144
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418dc8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_418ead(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_418ead(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456fc6___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456fc6_type* @G__0x456fc6 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456fc4___r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456fc4_type* @G__0x456fc4 to i64), i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x8c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 140
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.sprintf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x8c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 140
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xbc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 188
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418e95(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl_MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %10 to i32*
  %22 = load i32, i32* %21
  %23 = sext i32 %22 to i64
  %24 = shl i64 %20, 32
  %25 = or i64 %24, %16
  %26 = sdiv i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %34, label %30

; <label>:30:                                     ; preds = %block_400488
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %32, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:34:                                     ; preds = %block_400488
  %35 = srem i64 %25, %23
  %36 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %37 = and i64 %26, 4294967295
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %39 = and i64 %35, 4294967295
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2MnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %30, %34
  %46 = phi %struct.Memory* [ %33, %30 ], [ %2, %34 ]
  ret %struct.Memory* %46
}

define %struct.Memory* @routine_cmpl__0x3c__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 60
  %16 = icmp ult i32 %14, 60
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 60
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418e55(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456fd4___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456fd4_type* @G__0x456fd4 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.Die(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 20, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 28
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418e90(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x84__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x3d__MINUS0x80__rbp__rdx_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RDX
  %14 = add i64 %12, -128
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 61, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418e5f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418e95(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.fputs_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_418f72(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_418f72(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456fd9___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456fd9_type* @G__0x456fd9 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x94__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 148
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 196
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418f5a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_418f55(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418f24(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418f5a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xc8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418f77(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418f7c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418f81(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x28__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 40
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_418fd2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456fe7___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456fe7_type* @G__0x456fe7 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax__rcx_4____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x20__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 32
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x24__rbp____r8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 36
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %R8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttss2si___rax__r8_4____r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 17
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %R8 = bitcast %union.anon* %14 to i64*
  %15 = bitcast i32* %R8D to i64*
  %16 = load i64, i64* %RAX
  %17 = load i64, i64* %R8
  %18 = mul i64 %17, 4
  %19 = add i64 %18, %16
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 6
  store i64 %21, i64* %PC
  %22 = inttoptr i64 %19 to float*
  %23 = load float, float* %22
  %24 = call float @llvm.trunc.f32(float %23)
  %25 = call float @llvm.fabs.f32(float %24)
  %26 = fcmp ogt float %25, 0x41E0000000000000
  %27 = fptosi float %24 to i32
  %28 = zext i32 %27 to i64
  %29 = select i1 %26, i64 2147483648, i64 %28
  store i64 %29, i64* %15, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xcc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 204
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_419008(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x456ff4___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x456ff4_type* @G__0x456ff4 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x20__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 108
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i8*
  store i8 32, i8* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0____rax__rcx_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %14, %12
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %19, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = icmp eq i32 %19, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %19, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %19, 31
  %35 = xor i32 %31, %34
  %36 = add i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_41907e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_419079(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_419048(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41907e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4190f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttss2si___rax__rcx_4____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to float*
  %22 = load float, float* %21
  %23 = call float @llvm.trunc.f32(float %22)
  %24 = call float @llvm.fabs.f32(float %23)
  %25 = fcmp ogt float %24, 0x41E0000000000000
  %26 = fptosi float %23 to i32
  %27 = zext i32 %26 to i64
  %28 = select i1 %25, i64 2147483648, i64 %27
  store i64 %28, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_4190f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0x3b67a__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x3b67a__rip__type* @G_0x3b67a__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss___rax__rcx_4____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %13 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %12, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %13 to %"class.std::bitset"*
  %14 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = mul i64 %16, 4
  %18 = add i64 %17, %15
  %19 = load i64, i64* %PC
  %20 = add i64 %19, 5
  store i64 %20, i64* %PC
  %21 = inttoptr i64 %18 to float*
  %22 = load float, float* %21
  %23 = bitcast i8* %14 to float*
  store float %22, float* %23, align 1
  %24 = getelementptr inbounds i8, i8* %14, i64 4
  %25 = bitcast i8* %24 to float*
  store float 0.000000e+00, float* %25, align 1
  %26 = getelementptr inbounds i8, i8* %14, i64 8
  %27 = bitcast i8* %26 to float*
  store float 0.000000e+00, float* %27, align 1
  %28 = getelementptr inbounds i8, i8* %14, i64 12
  %29 = bitcast i8* %28 to float*
  store float 0.000000e+00, float* %29, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subss__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fsub float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttss2si__xmm1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = call float @llvm.trunc.f32(float %16)
  %18 = call float @llvm.fabs.f32(float %17)
  %19 = fcmp ogt float %18, 0x41E0000000000000
  %20 = fptosi float %17 to i32
  %21 = zext i32 %20 to i64
  %22 = select i1 %19, i64 2147483648, i64 %21
  store i64 %22, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4e__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 78
  %16 = icmp ult i32 %14, 78
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 78
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_4190eb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4e__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 132
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 78, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x84__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x2a__MINUS0x80__rbp__rax_1_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -128
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i8*
  store i8 42, i8* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xd4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 212
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_418d6e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x28__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testl__ecx___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %ECX
  %12 = zext i32 %11 to i64
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = and i64 %12, %10
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17, align 1
  %18 = and i32 %16, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %16, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %16, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0xd8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_419166(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_419132(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0xd8__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xdc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_419186(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41914c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 2
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 2
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 2, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xe0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 224
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_419236(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4192e1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x457001___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x457001_type* @G__0x457001 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xe4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 228
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x457024___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x457024_type* @G__0x457024 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x457056___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x457056_type* @G__0x457056 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x2c__rcx____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 44
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xe8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x1___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 1, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x457071___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x457071_type* @G__0x457071 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x30__rcx____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xec__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 236
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x45708c___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x45708c_type* @G__0x45708c to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x38__rcx____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xf0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4570a7___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4570a7_type* @G__0x4570a7 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd_0x3c__rcx____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to float*
  %17 = load float, float* %16
  %18 = fpext float %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xf4__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xf8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4570c2___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4570c2_type* @G__0x4570c2 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4570f9___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4570f9_type* @G__0x4570f9 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0xfc__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 252
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x457114___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x457114_type* @G__0x457114 to i64), i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x100__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x104__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x108__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x10c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x110___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 272, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 272
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 272, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
