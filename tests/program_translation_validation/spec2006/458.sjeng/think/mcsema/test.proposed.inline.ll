; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x46bd08__rip__type = type <{ [4 x i8] }>
%G_0x62db08_type = type <{ [8 x i8] }>
%G_0x62db0c_type = type <{ [4 x i8] }>
%G_0x62db10_type = type <{ [8 x i8] }>
%G_0x62db18_type = type <{ [8 x i8] }>
%G_0x62e4f0_type = type <{ [4 x i8] }>
%G_0x62e4f8_type = type <{ [4 x i8] }>
%G_0x62e514_type = type <{ [1 x i8] }>
%G_0x62e51c_type = type <{ [4 x i8] }>
%G_0x62e9e0_type = type <{ [4 x i8] }>
%G_0x62e9e4_type = type <{ [4 x i8] }>
%G_0x62e9f4_type = type <{ [4 x i8] }>
%G_0x62e9f8_type = type <{ [4 x i8] }>
%G_0x62e9fc_type = type <{ [4 x i8] }>
%G_0x62ea10_type = type <{ [4 x i8] }>
%G_0x62ea14_type = type <{ [4 x i8] }>
%G_0x62ea18_type = type <{ [4 x i8] }>
%G_0x62ea1c_type = type <{ [4 x i8] }>
%G_0x62ea20_type = type <{ [8 x i8] }>
%G_0x62ea24_type = type <{ [4 x i8] }>
%G_0x62ea28_type = type <{ [8 x i8] }>
%G_0x62ea30_type = type <{ [8 x i8] }>
%G_0x633b44_type = type <{ [4 x i8] }>
%G_0x633b50_type = type <{ [4 x i8] }>
%G_0x63ae44_type = type <{ [4 x i8] }>
%G_0x63ae48_type = type <{ [1 x i8] }>
%G_0x85f150_type = type <{ [4 x i8] }>
%G_0x85f154_type = type <{ [1 x i8] }>
%G_0x85f164_type = type <{ [4 x i8] }>
%G_0x85f168_type = type <{ [4 x i8] }>
%G_0x8644f4_type = type <{ [4 x i8] }>
%G_0x864500_type = type <{ [4 x i8] }>
%G_0x864504_type = type <{ [4 x i8] }>
%G_0x864508_type = type <{ [4 x i8] }>
%G_0x86450c_type = type <{ [4 x i8] }>
%G_0x8661bc_type = type <{ [1 x i8] }>
%G_0x8661d8_type = type <{ [1 x i8] }>
%G_0x8661dc_type = type <{ [1 x i8] }>
%G_0x8662e0_type = type <{ [4 x i8] }>
%G_0x8662e8_type = type <{ [8 x i8] }>
%G_0x866530_type = type <{ [4 x i8] }>
%G_0x866538_type = type <{ [4 x i8] }>
%G_0x866780_type = type <{ [4 x i8] }>
%G_0x866788_type = type <{ [1 x i8] }>
%G_0x86678c_type = type <{ [1 x i8] }>
%G_0x86679c_type = type <{ [1 x i8] }>
%G_0x8667a4_type = type <{ [4 x i8] }>
%G_0x86bd6c_type = type <{ [4 x i8] }>
%G_0x86bd78_type = type <{ [1 x i8] }>
%G_0x86bd84_type = type <{ [4 x i8] }>
%G_0x86bd88_type = type <{ [4 x i8] }>
%G_0x86bd90_type = type <{ [4 x i8] }>
%G_0x880b10_type = type <{ [4 x i8] }>
%G_0x880b18_type = type <{ [4 x i8] }>
%G_0x881df0_type = type <{ [4 x i8] }>
%G_0x8825f8_type = type <{ [4 x i8] }>
%G_0x886a60_type = type <{ [1 x i8] }>
%G_0x886a68_type = type <{ [4 x i8] }>
%G_0x886b80_type = type <{ [4 x i8] }>
%G_0x886bbc_type = type <{ [1 x i8] }>
%G_0x886bc0_type = type <{ [4 x i8] }>
%G_0x8870a0_type = type <{ [4 x i8] }>
%G_0x8870a4_type = type <{ [4 x i8] }>
%G_0x8a05b4_type = type <{ [4 x i8] }>
%G_0x8a0a70_type = type <{ [4 x i8] }>
%G_0x8a0a74_type = type <{ [4 x i8] }>
%G_0x8a0a78_type = type <{ [4 x i8] }>
%G_0x8a2a04_type = type <{ [1 x i8] }>
%G_0xd0f3__rip__type = type <{ [8 x i8] }>
%G_0xd420__rip__type = type <{ [8 x i8] }>
%G_0xd430__rip__type = type <{ [8 x i8] }>
%G_0xd4f7__rip__type = type <{ [4 x i8] }>
%G_0xd50b__rip__type = type <{ [8 x i8] }>
%G__0x429086_type = type <{ [8 x i8] }>
%G__0x429096_type = type <{ [8 x i8] }>
%G__0x4290a9_type = type <{ [8 x i8] }>
%G__0x4290b9_type = type <{ [8 x i8] }>
%G__0x4290cd_type = type <{ [8 x i8] }>
%G__0x4290fe_type = type <{ [8 x i8] }>
%G__0x429119_type = type <{ [8 x i8] }>
%G__0x42914d_type = type <{ [8 x i8] }>
%G__0x429172_type = type <{ [8 x i8] }>
%G__0x42918b_type = type <{ [8 x i8] }>
%G__0x4291bc_type = type <{ [8 x i8] }>
%G__0x4291cc_type = type <{ [8 x i8] }>
%G__0x42921d_type = type <{ [8 x i8] }>
%G__0x639220_type = type <{ [8 x i8] }>
%G__0x63ae50_type = type <{ [8 x i8] }>
%G__0x85f1f0_type = type <{ [8 x i8] }>
%G__0x86bda0_type = type <{ [8 x i8] }>
%G__0x8822b0_type = type <{ [8 x i8] }>
%G__0x882600_type = type <{ [8 x i8] }>
%G__0x884320_type = type <{ [8 x i8] }>
%G__0x884b20_type = type <{ [8 x i8] }>
%G__0x886bf0_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x46bd08__rip_ = global %G_0x46bd08__rip__type zeroinitializer
@G_0x62db08 = global %G_0x62db08_type zeroinitializer
@G_0x62db0c = global %G_0x62db0c_type zeroinitializer
@G_0x62db10 = global %G_0x62db10_type zeroinitializer
@G_0x62db18 = global %G_0x62db18_type zeroinitializer
@G_0x62e4f0 = global %G_0x62e4f0_type zeroinitializer
@G_0x62e4f8 = global %G_0x62e4f8_type zeroinitializer
@G_0x62e514 = global %G_0x62e514_type zeroinitializer
@G_0x62e51c = global %G_0x62e51c_type zeroinitializer
@G_0x62e9e0 = global %G_0x62e9e0_type zeroinitializer
@G_0x62e9e4 = global %G_0x62e9e4_type zeroinitializer
@G_0x62e9f4 = global %G_0x62e9f4_type zeroinitializer
@G_0x62e9f8 = global %G_0x62e9f8_type zeroinitializer
@G_0x62e9fc = global %G_0x62e9fc_type zeroinitializer
@G_0x62ea10 = global %G_0x62ea10_type zeroinitializer
@G_0x62ea14 = global %G_0x62ea14_type zeroinitializer
@G_0x62ea18 = global %G_0x62ea18_type zeroinitializer
@G_0x62ea1c = global %G_0x62ea1c_type zeroinitializer
@G_0x62ea20 = global %G_0x62ea20_type zeroinitializer
@G_0x62ea24 = global %G_0x62ea24_type zeroinitializer
@G_0x62ea28 = global %G_0x62ea28_type zeroinitializer
@G_0x62ea30 = global %G_0x62ea30_type zeroinitializer
@G_0x633b44 = global %G_0x633b44_type zeroinitializer
@G_0x633b50 = global %G_0x633b50_type zeroinitializer
@G_0x63ae44 = global %G_0x63ae44_type zeroinitializer
@G_0x63ae48 = global %G_0x63ae48_type zeroinitializer
@G_0x85f150 = global %G_0x85f150_type zeroinitializer
@G_0x85f154 = global %G_0x85f154_type zeroinitializer
@G_0x85f164 = global %G_0x85f164_type zeroinitializer
@G_0x85f168 = global %G_0x85f168_type zeroinitializer
@G_0x8644f4 = global %G_0x8644f4_type zeroinitializer
@G_0x864500 = global %G_0x864500_type zeroinitializer
@G_0x864504 = global %G_0x864504_type zeroinitializer
@G_0x864508 = global %G_0x864508_type zeroinitializer
@G_0x86450c = global %G_0x86450c_type zeroinitializer
@G_0x8661bc = global %G_0x8661bc_type zeroinitializer
@G_0x8661d8 = global %G_0x8661d8_type zeroinitializer
@G_0x8661dc = global %G_0x8661dc_type zeroinitializer
@G_0x8662e0 = global %G_0x8662e0_type zeroinitializer
@G_0x8662e8 = global %G_0x8662e8_type zeroinitializer
@G_0x866530 = global %G_0x866530_type zeroinitializer
@G_0x866538 = global %G_0x866538_type zeroinitializer
@G_0x866780 = global %G_0x866780_type zeroinitializer
@G_0x866788 = global %G_0x866788_type zeroinitializer
@G_0x86678c = global %G_0x86678c_type zeroinitializer
@G_0x86679c = global %G_0x86679c_type zeroinitializer
@G_0x8667a4 = global %G_0x8667a4_type zeroinitializer
@G_0x86bd6c = global %G_0x86bd6c_type zeroinitializer
@G_0x86bd78 = global %G_0x86bd78_type zeroinitializer
@G_0x86bd84 = global %G_0x86bd84_type zeroinitializer
@G_0x86bd88 = global %G_0x86bd88_type zeroinitializer
@G_0x86bd90 = global %G_0x86bd90_type zeroinitializer
@G_0x880b10 = global %G_0x880b10_type zeroinitializer
@G_0x880b18 = global %G_0x880b18_type zeroinitializer
@G_0x881df0 = global %G_0x881df0_type zeroinitializer
@G_0x8825f8 = global %G_0x8825f8_type zeroinitializer
@G_0x886a60 = global %G_0x886a60_type zeroinitializer
@G_0x886a68 = global %G_0x886a68_type zeroinitializer
@G_0x886b80 = global %G_0x886b80_type zeroinitializer
@G_0x886bbc = global %G_0x886bbc_type zeroinitializer
@G_0x886bc0 = global %G_0x886bc0_type zeroinitializer
@G_0x8870a0 = global %G_0x8870a0_type zeroinitializer
@G_0x8870a4 = global %G_0x8870a4_type zeroinitializer
@G_0x8a05b4 = global %G_0x8a05b4_type zeroinitializer
@G_0x8a0a70 = global %G_0x8a0a70_type zeroinitializer
@G_0x8a0a74 = global %G_0x8a0a74_type zeroinitializer
@G_0x8a0a78 = global %G_0x8a0a78_type zeroinitializer
@G_0x8a2a04 = global %G_0x8a2a04_type zeroinitializer
@G_0xd0f3__rip_ = global %G_0xd0f3__rip__type zeroinitializer
@G_0xd420__rip_ = global %G_0xd420__rip__type zeroinitializer
@G_0xd430__rip_ = global %G_0xd430__rip__type zeroinitializer
@G_0xd4f7__rip_ = global %G_0xd4f7__rip__type zeroinitializer
@G_0xd50b__rip_ = global %G_0xd50b__rip__type zeroinitializer
@G__0x429086 = global %G__0x429086_type zeroinitializer
@G__0x429096 = global %G__0x429096_type zeroinitializer
@G__0x4290a9 = global %G__0x4290a9_type zeroinitializer
@G__0x4290b9 = global %G__0x4290b9_type zeroinitializer
@G__0x4290cd = global %G__0x4290cd_type zeroinitializer
@G__0x4290fe = global %G__0x4290fe_type zeroinitializer
@G__0x429119 = global %G__0x429119_type zeroinitializer
@G__0x42914d = global %G__0x42914d_type zeroinitializer
@G__0x429172 = global %G__0x429172_type zeroinitializer
@G__0x42918b = global %G__0x42918b_type zeroinitializer
@G__0x4291bc = global %G__0x4291bc_type zeroinitializer
@G__0x4291cc = global %G__0x4291cc_type zeroinitializer
@G__0x42921d = global %G__0x42921d_type zeroinitializer
@G__0x639220 = global %G__0x639220_type zeroinitializer
@G__0x63ae50 = global %G__0x63ae50_type zeroinitializer
@G__0x85f1f0 = global %G__0x85f1f0_type zeroinitializer
@G__0x86bda0 = global %G__0x86bda0_type zeroinitializer
@G__0x8822b0 = global %G__0x8822b0_type zeroinitializer
@G__0x882600 = global %G__0x882600_type zeroinitializer
@G__0x884320 = global %G__0x884320_type zeroinitializer
@G__0x884b20 = global %G__0x884b20_type zeroinitializer
@G__0x886bf0 = global %G__0x886bf0_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @sub_4243e0.interrupt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_423760.rtime(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_407e30.gen(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4098e0.in_check(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40b730.make(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_406680.check_legal(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40c7a0.unmake(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_40d610.check_phase(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4214c0.allocate_time(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4204c0.clear_tt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_402c10.reset_ecache(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_414310.proofnumberscan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_423770.rdifftime(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4193f0.search_root(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4232b0.stringize_pv(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_423410.post_thinking(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4159f0.proofnumbercheck(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_421970.comp_to_san(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401be0.ProcessHoldings(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Function Attrs: alwaysinline
define %struct.Memory* @think(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_41a940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_41a940, %struct.Memory** %MEMORY
  %loadMem_41a941 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i32 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i33 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i32
  %27 = load i64, i64* %PC.i31
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i31
  store i64 %26, i64* %RBP.i33, align 8
  store %struct.Memory* %loadMem_41a941, %struct.Memory** %MEMORY
  %loadMem_41a944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i58 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 13
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %RSP.i59 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %RSP.i59
  %36 = load i64, i64* %PC.i58
  %37 = add i64 %36, 7
  store i64 %37, i64* %PC.i58
  %38 = sub i64 %35, 12640
  store i64 %38, i64* %RSP.i59, align 8
  %39 = icmp ult i64 %35, 12640
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %41, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 255
  %44 = call i32 @llvm.ctpop.i32(i32 %43)
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = xor i8 %46, 1
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %47, i8* %48, align 1
  %49 = xor i64 12640, %35
  %50 = xor i64 %49, %38
  %51 = lshr i64 %50, 4
  %52 = trunc i64 %51 to i8
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %53, i8* %54, align 1
  %55 = icmp eq i64 %38, 0
  %56 = zext i1 %55 to i8
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %56, i8* %57, align 1
  %58 = lshr i64 %38, 63
  %59 = trunc i64 %58 to i8
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %59, i8* %60, align 1
  %61 = lshr i64 %35, 63
  %62 = xor i64 %58, %61
  %63 = add i64 %62, %61
  %64 = icmp eq i64 %63, 2
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %65, i8* %66, align 1
  store %struct.Memory* %loadMem_41a944, %struct.Memory** %MEMORY
  %loadMem_41a94b = load %struct.Memory*, %struct.Memory** %MEMORY
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 33
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %69 to i64*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.GPR, %struct.GPR* %70, i32 0, i32 1
  %72 = getelementptr inbounds %struct.Reg, %struct.Reg* %71, i32 0, i32 0
  %RAX.i70 = bitcast %union.anon* %72 to i64*
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %74 = getelementptr inbounds %struct.GPR, %struct.GPR* %73, i32 0, i32 11
  %75 = getelementptr inbounds %struct.Reg, %struct.Reg* %74, i32 0, i32 0
  %RDI.i71 = bitcast %union.anon* %75 to i64*
  %76 = load i64, i64* %RDI.i71
  %77 = load i64, i64* %PC.i69
  %78 = add i64 %77, 3
  store i64 %78, i64* %PC.i69
  store i64 %76, i64* %RAX.i70, align 8
  store %struct.Memory* %loadMem_41a94b, %struct.Memory** %MEMORY
  %loadMem_41a94e = load %struct.Memory*, %struct.Memory** %MEMORY
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 33
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %PC.i80 = bitcast %union.anon* %81 to i64*
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %83 = getelementptr inbounds %struct.GPR, %struct.GPR* %82, i32 0, i32 15
  %84 = getelementptr inbounds %struct.Reg, %struct.Reg* %83, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %84 to i64*
  %85 = load i64, i64* %RBP.i81
  %86 = sub i64 %85, 84
  %87 = load i64, i64* %PC.i80
  %88 = add i64 %87, 7
  store i64 %88, i64* %PC.i80
  %89 = inttoptr i64 %86 to i32*
  store i32 0, i32* %89
  store %struct.Memory* %loadMem_41a94e, %struct.Memory** %MEMORY
  %loadMem_41a955 = load %struct.Memory*, %struct.Memory** %MEMORY
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 33
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %PC.i96 = bitcast %union.anon* %92 to i64*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 15
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %RBP.i97 = bitcast %union.anon* %95 to i64*
  %96 = load i64, i64* %RBP.i97
  %97 = sub i64 %96, 92
  %98 = load i64, i64* %PC.i96
  %99 = add i64 %98, 7
  store i64 %99, i64* %PC.i96
  %100 = inttoptr i64 %97 to i32*
  store i32 0, i32* %100
  store %struct.Memory* %loadMem_41a955, %struct.Memory** %MEMORY
  %loadMem_41a95c = load %struct.Memory*, %struct.Memory** %MEMORY
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %102 = getelementptr inbounds %struct.GPR, %struct.GPR* %101, i32 0, i32 33
  %103 = getelementptr inbounds %struct.Reg, %struct.Reg* %102, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %103 to i64*
  %104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %105 = getelementptr inbounds %struct.GPR, %struct.GPR* %104, i32 0, i32 15
  %106 = getelementptr inbounds %struct.Reg, %struct.Reg* %105, i32 0, i32 0
  %RBP.i127 = bitcast %union.anon* %106 to i64*
  %107 = load i64, i64* %RBP.i127
  %108 = sub i64 %107, 12408
  %109 = load i64, i64* %PC.i126
  %110 = add i64 %109, 10
  store i64 %110, i64* %PC.i126
  %111 = inttoptr i64 %108 to i32*
  store i32 0, i32* %111
  store %struct.Memory* %loadMem_41a95c, %struct.Memory** %MEMORY
  %loadMem_41a966 = load %struct.Memory*, %struct.Memory** %MEMORY
  %112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %113 = getelementptr inbounds %struct.GPR, %struct.GPR* %112, i32 0, i32 33
  %114 = getelementptr inbounds %struct.Reg, %struct.Reg* %113, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %114 to i64*
  %115 = load i64, i64* %PC.i183
  %116 = add i64 %115, 11
  store i64 %116, i64* %PC.i183
  store i32 0, i32* bitcast (%G_0x86bd84_type* @G_0x86bd84 to i32*)
  store %struct.Memory* %loadMem_41a966, %struct.Memory** %MEMORY
  %loadMem_41a971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 33
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %119 to i64*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 15
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %RBP.i191 = bitcast %union.anon* %122 to i64*
  %123 = load i64, i64* %RBP.i191
  %124 = sub i64 %123, 12416
  %125 = load i64, i64* %PC.i190
  %126 = add i64 %125, 10
  store i64 %126, i64* %PC.i190
  %127 = inttoptr i64 %124 to i32*
  store i32 0, i32* %127
  store %struct.Memory* %loadMem_41a971, %struct.Memory** %MEMORY
  %loadMem_41a97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %129 = getelementptr inbounds %struct.GPR, %struct.GPR* %128, i32 0, i32 33
  %130 = getelementptr inbounds %struct.Reg, %struct.Reg* %129, i32 0, i32 0
  %PC.i215 = bitcast %union.anon* %130 to i64*
  %131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %132 = getelementptr inbounds %struct.GPR, %struct.GPR* %131, i32 0, i32 1
  %133 = getelementptr inbounds %struct.Reg, %struct.Reg* %132, i32 0, i32 0
  %RAX.i216 = bitcast %union.anon* %133 to i64*
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %135 = getelementptr inbounds %struct.GPR, %struct.GPR* %134, i32 0, i32 15
  %136 = getelementptr inbounds %struct.Reg, %struct.Reg* %135, i32 0, i32 0
  %RBP.i217 = bitcast %union.anon* %136 to i64*
  %137 = load i64, i64* %RBP.i217
  %138 = sub i64 %137, 12536
  %139 = load i64, i64* %RAX.i216
  %140 = load i64, i64* %PC.i215
  %141 = add i64 %140, 7
  store i64 %141, i64* %PC.i215
  %142 = inttoptr i64 %138 to i64*
  store i64 %139, i64* %142
  store %struct.Memory* %loadMem_41a97b, %struct.Memory** %MEMORY
  %loadMem_41a982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %144 = getelementptr inbounds %struct.GPR, %struct.GPR* %143, i32 0, i32 33
  %145 = getelementptr inbounds %struct.Reg, %struct.Reg* %144, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %145 to i64*
  %146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %147 = getelementptr inbounds %struct.GPR, %struct.GPR* %146, i32 0, i32 11
  %148 = getelementptr inbounds %struct.Reg, %struct.Reg* %147, i32 0, i32 0
  %RDI.i228 = bitcast %union.anon* %148 to i64*
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %150 = getelementptr inbounds %struct.GPR, %struct.GPR* %149, i32 0, i32 15
  %151 = getelementptr inbounds %struct.Reg, %struct.Reg* %150, i32 0, i32 0
  %RBP.i229 = bitcast %union.anon* %151 to i64*
  %152 = load i64, i64* %RBP.i229
  %153 = sub i64 %152, 12544
  %154 = load i64, i64* %RDI.i228
  %155 = load i64, i64* %PC.i227
  %156 = add i64 %155, 7
  store i64 %156, i64* %PC.i227
  %157 = inttoptr i64 %153 to i64*
  store i64 %154, i64* %157
  store %struct.Memory* %loadMem_41a982, %struct.Memory** %MEMORY
  br label %block_.L_41a989

block_.L_41a989:                                  ; preds = %block_.L_41bcbc, %block_.L_41b8b2, %entry
  %loadMem_41a989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %159 = getelementptr inbounds %struct.GPR, %struct.GPR* %158, i32 0, i32 33
  %160 = getelementptr inbounds %struct.Reg, %struct.Reg* %159, i32 0, i32 0
  %PC.i334 = bitcast %union.anon* %160 to i64*
  %161 = load i64, i64* %PC.i334
  %162 = add i64 %161, 11
  store i64 %162, i64* %PC.i334
  store i32 0, i32* bitcast (%G_0x864500_type* @G_0x864500 to i32*)
  store %struct.Memory* %loadMem_41a989, %struct.Memory** %MEMORY
  %loadMem_41a994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %164 = getelementptr inbounds %struct.GPR, %struct.GPR* %163, i32 0, i32 33
  %165 = getelementptr inbounds %struct.Reg, %struct.Reg* %164, i32 0, i32 0
  %PC.i950 = bitcast %union.anon* %165 to i64*
  %166 = load i64, i64* %PC.i950
  %167 = add i64 %166, 11
  store i64 %167, i64* %PC.i950
  store i32 0, i32* bitcast (%G_0x63ae44_type* @G_0x63ae44 to i32*)
  store %struct.Memory* %loadMem_41a994, %struct.Memory** %MEMORY
  %loadMem_41a99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 33
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %170 to i64*
  %171 = load i64, i64* %PC.i981
  %172 = add i64 %171, 11
  store i64 %172, i64* %PC.i981
  store i32 1, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  store %struct.Memory* %loadMem_41a99f, %struct.Memory** %MEMORY
  %loadMem_41a9aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %174 = getelementptr inbounds %struct.GPR, %struct.GPR* %173, i32 0, i32 33
  %175 = getelementptr inbounds %struct.Reg, %struct.Reg* %174, i32 0, i32 0
  %PC.i1100 = bitcast %union.anon* %175 to i64*
  %176 = load i64, i64* %PC.i1100
  %177 = add i64 %176, 11
  store i64 %177, i64* %PC.i1100
  store i32 0, i32* bitcast (%G_0x880b10_type* @G_0x880b10 to i32*)
  store %struct.Memory* %loadMem_41a9aa, %struct.Memory** %MEMORY
  %loadMem_41a9b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %179 = getelementptr inbounds %struct.GPR, %struct.GPR* %178, i32 0, i32 33
  %180 = getelementptr inbounds %struct.Reg, %struct.Reg* %179, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %180 to i64*
  %181 = load i64, i64* %PC.i1281
  %182 = add i64 %181, 11
  store i64 %182, i64* %PC.i1281
  store i32 0, i32* bitcast (%G_0x62e4f0_type* @G_0x62e4f0 to i32*)
  store %struct.Memory* %loadMem_41a9b5, %struct.Memory** %MEMORY
  %loadMem_41a9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 33
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %185 to i64*
  %186 = load i64, i64* %PC.i1304
  %187 = add i64 %186, 11
  store i64 %187, i64* %PC.i1304
  store i32 0, i32* bitcast (%G_0x62ea14_type* @G_0x62ea14 to i32*)
  store %struct.Memory* %loadMem_41a9c0, %struct.Memory** %MEMORY
  %loadMem_41a9cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %189 = getelementptr inbounds %struct.GPR, %struct.GPR* %188, i32 0, i32 33
  %190 = getelementptr inbounds %struct.Reg, %struct.Reg* %189, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %190 to i64*
  %191 = load i64, i64* %PC.i1378
  %192 = add i64 %191, 11
  store i64 %192, i64* %PC.i1378
  store i32 0, i32* bitcast (%G_0x8667a4_type* @G_0x8667a4 to i32*)
  store %struct.Memory* %loadMem_41a9cb, %struct.Memory** %MEMORY
  %loadMem_41a9d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %194 = getelementptr inbounds %struct.GPR, %struct.GPR* %193, i32 0, i32 33
  %195 = getelementptr inbounds %struct.Reg, %struct.Reg* %194, i32 0, i32 0
  %PC.i1388 = bitcast %union.anon* %195 to i64*
  %196 = load i64, i64* %PC.i1388
  %197 = add i64 %196, 11
  store i64 %197, i64* %PC.i1388
  store i32 0, i32* bitcast (%G_0x864508_type* @G_0x864508 to i32*)
  store %struct.Memory* %loadMem_41a9d6, %struct.Memory** %MEMORY
  %loadMem_41a9e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 33
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %200 to i64*
  %201 = load i64, i64* %PC.i1398
  %202 = add i64 %201, 11
  store i64 %202, i64* %PC.i1398
  store i32 0, i32* bitcast (%G_0x86bd6c_type* @G_0x86bd6c to i32*)
  store %struct.Memory* %loadMem_41a9e1, %struct.Memory** %MEMORY
  %loadMem_41a9ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %204 = getelementptr inbounds %struct.GPR, %struct.GPR* %203, i32 0, i32 33
  %205 = getelementptr inbounds %struct.Reg, %struct.Reg* %204, i32 0, i32 0
  %PC.i1676 = bitcast %union.anon* %205 to i64*
  %206 = load i64, i64* %PC.i1676
  %207 = add i64 %206, 11
  store i64 %207, i64* %PC.i1676
  store i32 0, i32* bitcast (%G_0x8870a4_type* @G_0x8870a4 to i32*)
  store %struct.Memory* %loadMem_41a9ec, %struct.Memory** %MEMORY
  %loadMem_41a9f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %209 = getelementptr inbounds %struct.GPR, %struct.GPR* %208, i32 0, i32 33
  %210 = getelementptr inbounds %struct.Reg, %struct.Reg* %209, i32 0, i32 0
  %PC.i1675 = bitcast %union.anon* %210 to i64*
  %211 = load i64, i64* %PC.i1675
  %212 = add i64 %211, 11
  store i64 %212, i64* %PC.i1675
  store i32 0, i32* bitcast (%G_0x886a68_type* @G_0x886a68 to i32*)
  store %struct.Memory* %loadMem_41a9f7, %struct.Memory** %MEMORY
  %loadMem_41aa02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 33
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %PC.i1674 = bitcast %union.anon* %215 to i64*
  %216 = load i64, i64* %PC.i1674
  %217 = add i64 %216, 11
  store i64 %217, i64* %PC.i1674
  store i32 0, i32* bitcast (%G_0x8a0a70_type* @G_0x8a0a70 to i32*)
  store %struct.Memory* %loadMem_41aa02, %struct.Memory** %MEMORY
  %loadMem_41aa0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %219 = getelementptr inbounds %struct.GPR, %struct.GPR* %218, i32 0, i32 33
  %220 = getelementptr inbounds %struct.Reg, %struct.Reg* %219, i32 0, i32 0
  %PC.i1673 = bitcast %union.anon* %220 to i64*
  %221 = load i64, i64* %PC.i1673
  %222 = add i64 %221, 11
  store i64 %222, i64* %PC.i1673
  store i32 0, i32* bitcast (%G_0x8662e0_type* @G_0x8662e0 to i32*)
  store %struct.Memory* %loadMem_41aa0d, %struct.Memory** %MEMORY
  %loadMem_41aa18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %224 = getelementptr inbounds %struct.GPR, %struct.GPR* %223, i32 0, i32 33
  %225 = getelementptr inbounds %struct.Reg, %struct.Reg* %224, i32 0, i32 0
  %PC.i1672 = bitcast %union.anon* %225 to i64*
  %226 = load i64, i64* %PC.i1672
  %227 = add i64 %226, 11
  store i64 %227, i64* %PC.i1672
  store i32 0, i32* bitcast (%G_0x62e9fc_type* @G_0x62e9fc to i32*)
  store %struct.Memory* %loadMem_41aa18, %struct.Memory** %MEMORY
  %loadMem_41aa23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 33
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %PC.i1671 = bitcast %union.anon* %230 to i64*
  %231 = load i64, i64* %PC.i1671
  %232 = add i64 %231, 11
  store i64 %232, i64* %PC.i1671
  store i32 0, i32* bitcast (%G_0x866538_type* @G_0x866538 to i32*)
  store %struct.Memory* %loadMem_41aa23, %struct.Memory** %MEMORY
  %loadMem_41aa2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %234 = getelementptr inbounds %struct.GPR, %struct.GPR* %233, i32 0, i32 33
  %235 = getelementptr inbounds %struct.Reg, %struct.Reg* %234, i32 0, i32 0
  %PC.i1670 = bitcast %union.anon* %235 to i64*
  %236 = load i64, i64* %PC.i1670
  %237 = add i64 %236, 11
  store i64 %237, i64* %PC.i1670
  store i32 0, i32* bitcast (%G_0x881df0_type* @G_0x881df0 to i32*)
  store %struct.Memory* %loadMem_41aa2e, %struct.Memory** %MEMORY
  %loadMem_41aa39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %239 = getelementptr inbounds %struct.GPR, %struct.GPR* %238, i32 0, i32 33
  %240 = getelementptr inbounds %struct.Reg, %struct.Reg* %239, i32 0, i32 0
  %PC.i1669 = bitcast %union.anon* %240 to i64*
  %241 = load i64, i64* %PC.i1669
  %242 = add i64 %241, 11
  store i64 %242, i64* %PC.i1669
  store i32 0, i32* bitcast (%G_0x62e9f8_type* @G_0x62e9f8 to i32*)
  store %struct.Memory* %loadMem_41aa39, %struct.Memory** %MEMORY
  %loadMem_41aa44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %244 = getelementptr inbounds %struct.GPR, %struct.GPR* %243, i32 0, i32 33
  %245 = getelementptr inbounds %struct.Reg, %struct.Reg* %244, i32 0, i32 0
  %PC.i1668 = bitcast %union.anon* %245 to i64*
  %246 = load i64, i64* %PC.i1668
  %247 = add i64 %246, 11
  store i64 %247, i64* %PC.i1668
  store i32 0, i32* bitcast (%G_0x866780_type* @G_0x866780 to i32*)
  store %struct.Memory* %loadMem_41aa44, %struct.Memory** %MEMORY
  %loadMem_41aa4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %249 = getelementptr inbounds %struct.GPR, %struct.GPR* %248, i32 0, i32 33
  %250 = getelementptr inbounds %struct.Reg, %struct.Reg* %249, i32 0, i32 0
  %PC.i1667 = bitcast %union.anon* %250 to i64*
  %251 = load i64, i64* %PC.i1667
  %252 = add i64 %251, 11
  store i64 %252, i64* %PC.i1667
  store i32 0, i32* bitcast (%G_0x62e9f4_type* @G_0x62e9f4 to i32*)
  store %struct.Memory* %loadMem_41aa4f, %struct.Memory** %MEMORY
  %loadMem_41aa5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %254 = getelementptr inbounds %struct.GPR, %struct.GPR* %253, i32 0, i32 33
  %255 = getelementptr inbounds %struct.Reg, %struct.Reg* %254, i32 0, i32 0
  %PC.i1666 = bitcast %union.anon* %255 to i64*
  %256 = load i64, i64* %PC.i1666
  %257 = add i64 %256, 11
  store i64 %257, i64* %PC.i1666
  store i32 0, i32* bitcast (%G_0x864504_type* @G_0x864504 to i32*)
  store %struct.Memory* %loadMem_41aa5a, %struct.Memory** %MEMORY
  %loadMem_41aa65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %259 = getelementptr inbounds %struct.GPR, %struct.GPR* %258, i32 0, i32 33
  %260 = getelementptr inbounds %struct.Reg, %struct.Reg* %259, i32 0, i32 0
  %PC.i1665 = bitcast %union.anon* %260 to i64*
  %261 = load i64, i64* %PC.i1665
  %262 = add i64 %261, 11
  store i64 %262, i64* %PC.i1665
  store i32 0, i32* bitcast (%G_0x8870a0_type* @G_0x8870a0 to i32*)
  store %struct.Memory* %loadMem_41aa65, %struct.Memory** %MEMORY
  %loadMem_41aa70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %264 = getelementptr inbounds %struct.GPR, %struct.GPR* %263, i32 0, i32 33
  %265 = getelementptr inbounds %struct.Reg, %struct.Reg* %264, i32 0, i32 0
  %PC.i1664 = bitcast %union.anon* %265 to i64*
  %266 = load i64, i64* %PC.i1664
  %267 = add i64 %266, 11
  store i64 %267, i64* %PC.i1664
  store i32 0, i32* bitcast (%G_0x8a0a74_type* @G_0x8a0a74 to i32*)
  store %struct.Memory* %loadMem_41aa70, %struct.Memory** %MEMORY
  %loadMem_41aa7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %269 = getelementptr inbounds %struct.GPR, %struct.GPR* %268, i32 0, i32 33
  %270 = getelementptr inbounds %struct.Reg, %struct.Reg* %269, i32 0, i32 0
  %PC.i1662 = bitcast %union.anon* %270 to i64*
  %271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %272 = getelementptr inbounds %struct.GPR, %struct.GPR* %271, i32 0, i32 15
  %273 = getelementptr inbounds %struct.Reg, %struct.Reg* %272, i32 0, i32 0
  %RBP.i1663 = bitcast %union.anon* %273 to i64*
  %274 = load i64, i64* %RBP.i1663
  %275 = sub i64 %274, 112
  %276 = load i64, i64* %PC.i1662
  %277 = add i64 %276, 7
  store i64 %277, i64* %PC.i1662
  %278 = inttoptr i64 %275 to i32*
  store i32 0, i32* %278
  store %struct.Memory* %loadMem_41aa7b, %struct.Memory** %MEMORY
  %loadMem_41aa82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %280 = getelementptr inbounds %struct.GPR, %struct.GPR* %279, i32 0, i32 33
  %281 = getelementptr inbounds %struct.Reg, %struct.Reg* %280, i32 0, i32 0
  %PC.i1661 = bitcast %union.anon* %281 to i64*
  %282 = load i64, i64* %PC.i1661
  %283 = add i64 %282, 11
  store i64 %283, i64* %PC.i1661
  store i32 0, i32* bitcast (%G_0x62ea1c_type* @G_0x62ea1c to i32*)
  store %struct.Memory* %loadMem_41aa82, %struct.Memory** %MEMORY
  %loadMem_41aa8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %285 = getelementptr inbounds %struct.GPR, %struct.GPR* %284, i32 0, i32 33
  %286 = getelementptr inbounds %struct.Reg, %struct.Reg* %285, i32 0, i32 0
  %PC.i1660 = bitcast %union.anon* %286 to i64*
  %287 = load i64, i64* %PC.i1660
  %288 = add i64 %287, 11
  store i64 %288, i64* %PC.i1660
  store i32 0, i32* bitcast (%G_0x62e4f8_type* @G_0x62e4f8 to i32*)
  store %struct.Memory* %loadMem_41aa8d, %struct.Memory** %MEMORY
  %loadMem_41aa98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %290 = getelementptr inbounds %struct.GPR, %struct.GPR* %289, i32 0, i32 33
  %291 = getelementptr inbounds %struct.Reg, %struct.Reg* %290, i32 0, i32 0
  %PC.i1659 = bitcast %union.anon* %291 to i64*
  %292 = load i64, i64* %PC.i1659
  %293 = add i64 %292, 11
  store i64 %293, i64* %PC.i1659
  store i32 200, i32* bitcast (%G_0x62ea18_type* @G_0x62ea18 to i32*)
  store %struct.Memory* %loadMem_41aa98, %struct.Memory** %MEMORY
  %loadMem_41aaa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 33
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %PC.i1658 = bitcast %union.anon* %296 to i64*
  %297 = load i64, i64* %PC.i1658
  %298 = add i64 %297, 8
  store i64 %298, i64* %PC.i1658
  store i8 0, i8* getelementptr inbounds (%G_0x86678c_type, %G_0x86678c_type* @G_0x86678c, i32 0, i32 0, i32 0)
  store %struct.Memory* %loadMem_41aaa3, %struct.Memory** %MEMORY
  %loadMem_41aaab = load %struct.Memory*, %struct.Memory** %MEMORY
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %300 = getelementptr inbounds %struct.GPR, %struct.GPR* %299, i32 0, i32 33
  %301 = getelementptr inbounds %struct.Reg, %struct.Reg* %300, i32 0, i32 0
  %PC.i1657 = bitcast %union.anon* %301 to i64*
  %302 = load i64, i64* %PC.i1657
  %303 = add i64 %302, 11
  store i64 %303, i64* %PC.i1657
  store i32 -1, i32* bitcast (%G_0x8825f8_type* @G_0x8825f8 to i32*)
  store %struct.Memory* %loadMem_41aaab, %struct.Memory** %MEMORY
  %loadMem1_41aab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %305 = getelementptr inbounds %struct.GPR, %struct.GPR* %304, i32 0, i32 33
  %306 = getelementptr inbounds %struct.Reg, %struct.Reg* %305, i32 0, i32 0
  %PC.i1656 = bitcast %union.anon* %306 to i64*
  %307 = load i64, i64* %PC.i1656
  %308 = add i64 %307, 39210
  %309 = load i64, i64* %PC.i1656
  %310 = add i64 %309, 5
  %311 = load i64, i64* %PC.i1656
  %312 = add i64 %311, 5
  store i64 %312, i64* %PC.i1656
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %314 = load i64, i64* %313, align 8
  %315 = add i64 %314, -8
  %316 = inttoptr i64 %315 to i64*
  store i64 %310, i64* %316
  store i64 %315, i64* %313, align 8
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %308, i64* %317, align 8
  store %struct.Memory* %loadMem1_41aab6, %struct.Memory** %MEMORY
  %loadMem2_41aab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41aab6 = load i64, i64* %3
  %call2_41aab6 = call %struct.Memory* @sub_4243e0.interrupt(%struct.State* %0, i64 %loadPC_41aab6, %struct.Memory* %loadMem2_41aab6)
  store %struct.Memory* %call2_41aab6, %struct.Memory** %MEMORY
  %loadMem_41aabb = load %struct.Memory*, %struct.Memory** %MEMORY
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %319 = getelementptr inbounds %struct.GPR, %struct.GPR* %318, i32 0, i32 33
  %320 = getelementptr inbounds %struct.Reg, %struct.Reg* %319, i32 0, i32 0
  %PC.i1654 = bitcast %union.anon* %320 to i64*
  %321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %322 = getelementptr inbounds %struct.GPR, %struct.GPR* %321, i32 0, i32 1
  %323 = getelementptr inbounds %struct.Reg, %struct.Reg* %322, i32 0, i32 0
  %EAX.i1655 = bitcast %union.anon* %323 to i32*
  %324 = load i32, i32* %EAX.i1655
  %325 = zext i32 %324 to i64
  %326 = load i64, i64* %PC.i1654
  %327 = add i64 %326, 3
  store i64 %327, i64* %PC.i1654
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %328, align 1
  %329 = and i32 %324, 255
  %330 = call i32 @llvm.ctpop.i32(i32 %329)
  %331 = trunc i32 %330 to i8
  %332 = and i8 %331, 1
  %333 = xor i8 %332, 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %333, i8* %334, align 1
  %335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %335, align 1
  %336 = icmp eq i32 %324, 0
  %337 = zext i1 %336 to i8
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %337, i8* %338, align 1
  %339 = lshr i32 %324, 31
  %340 = trunc i32 %339 to i8
  %341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %340, i8* %341, align 1
  %342 = lshr i32 %324, 31
  %343 = xor i32 %339, %342
  %344 = add i32 %343, %342
  %345 = icmp eq i32 %344, 2
  %346 = zext i1 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %346, i8* %347, align 1
  store %struct.Memory* %loadMem_41aabb, %struct.Memory** %MEMORY
  %loadMem_41aabe = load %struct.Memory*, %struct.Memory** %MEMORY
  %348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %349 = getelementptr inbounds %struct.GPR, %struct.GPR* %348, i32 0, i32 33
  %350 = getelementptr inbounds %struct.Reg, %struct.Reg* %349, i32 0, i32 0
  %PC.i1653 = bitcast %union.anon* %350 to i64*
  %351 = load i64, i64* %PC.i1653
  %352 = add i64 %351, 81
  %353 = load i64, i64* %PC.i1653
  %354 = add i64 %353, 6
  %355 = load i64, i64* %PC.i1653
  %356 = add i64 %355, 6
  store i64 %356, i64* %PC.i1653
  %357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %358 = load i8, i8* %357, align 1
  store i8 %358, i8* %BRANCH_TAKEN, align 1
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %360 = icmp ne i8 %358, 0
  %361 = select i1 %360, i64 %352, i64 %354
  store i64 %361, i64* %359, align 8
  store %struct.Memory* %loadMem_41aabe, %struct.Memory** %MEMORY
  %loadBr_41aabe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41aabe = icmp eq i8 %loadBr_41aabe, 1
  br i1 %cmpBr_41aabe, label %block_.L_41ab0f, label %block_41aac4

block_41aac4:                                     ; preds = %block_.L_41a989
  %loadMem_41aac4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %363 = getelementptr inbounds %struct.GPR, %struct.GPR* %362, i32 0, i32 33
  %364 = getelementptr inbounds %struct.Reg, %struct.Reg* %363, i32 0, i32 0
  %PC.i1652 = bitcast %union.anon* %364 to i64*
  %365 = load i64, i64* %PC.i1652
  %366 = add i64 %365, 8
  store i64 %366, i64* %PC.i1652
  %367 = load i32, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*)
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %368, align 1
  %369 = and i32 %367, 255
  %370 = call i32 @llvm.ctpop.i32(i32 %369)
  %371 = trunc i32 %370 to i8
  %372 = and i8 %371, 1
  %373 = xor i8 %372, 1
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %373, i8* %374, align 1
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %375, align 1
  %376 = icmp eq i32 %367, 0
  %377 = zext i1 %376 to i8
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %377, i8* %378, align 1
  %379 = lshr i32 %367, 31
  %380 = trunc i32 %379 to i8
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %380, i8* %381, align 1
  %382 = lshr i32 %367, 31
  %383 = xor i32 %379, %382
  %384 = add i32 %383, %382
  %385 = icmp eq i32 %384, 2
  %386 = zext i1 %385 to i8
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %386, i8* %387, align 1
  store %struct.Memory* %loadMem_41aac4, %struct.Memory** %MEMORY
  %loadMem_41aacc = load %struct.Memory*, %struct.Memory** %MEMORY
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %389 = getelementptr inbounds %struct.GPR, %struct.GPR* %388, i32 0, i32 33
  %390 = getelementptr inbounds %struct.Reg, %struct.Reg* %389, i32 0, i32 0
  %PC.i1651 = bitcast %union.anon* %390 to i64*
  %391 = load i64, i64* %PC.i1651
  %392 = add i64 %391, 20
  %393 = load i64, i64* %PC.i1651
  %394 = add i64 %393, 6
  %395 = load i64, i64* %PC.i1651
  %396 = add i64 %395, 6
  store i64 %396, i64* %PC.i1651
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %398 = load i8, i8* %397, align 1
  %399 = icmp eq i8 %398, 0
  %400 = zext i1 %399 to i8
  store i8 %400, i8* %BRANCH_TAKEN, align 1
  %401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %402 = select i1 %399, i64 %392, i64 %394
  store i64 %402, i64* %401, align 8
  store %struct.Memory* %loadMem_41aacc, %struct.Memory** %MEMORY
  %loadBr_41aacc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41aacc = icmp eq i8 %loadBr_41aacc, 1
  br i1 %cmpBr_41aacc, label %block_.L_41aae0, label %block_41aad2

block_41aad2:                                     ; preds = %block_41aac4
  %loadMem_41aad2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %404 = getelementptr inbounds %struct.GPR, %struct.GPR* %403, i32 0, i32 33
  %405 = getelementptr inbounds %struct.Reg, %struct.Reg* %404, i32 0, i32 0
  %PC.i1650 = bitcast %union.anon* %405 to i64*
  %406 = load i64, i64* %PC.i1650
  %407 = add i64 %406, 8
  store i64 %407, i64* %PC.i1650
  %408 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %409, align 1
  %410 = and i32 %408, 255
  %411 = call i32 @llvm.ctpop.i32(i32 %410)
  %412 = trunc i32 %411 to i8
  %413 = and i8 %412, 1
  %414 = xor i8 %413, 1
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %414, i8* %415, align 1
  %416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %416, align 1
  %417 = icmp eq i32 %408, 0
  %418 = zext i1 %417 to i8
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %418, i8* %419, align 1
  %420 = lshr i32 %408, 31
  %421 = trunc i32 %420 to i8
  %422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %421, i8* %422, align 1
  %423 = lshr i32 %408, 31
  %424 = xor i32 %420, %423
  %425 = add i32 %424, %423
  %426 = icmp eq i32 %425, 2
  %427 = zext i1 %426 to i8
  %428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %427, i8* %428, align 1
  store %struct.Memory* %loadMem_41aad2, %struct.Memory** %MEMORY
  %loadMem_41aada = load %struct.Memory*, %struct.Memory** %MEMORY
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %430 = getelementptr inbounds %struct.GPR, %struct.GPR* %429, i32 0, i32 33
  %431 = getelementptr inbounds %struct.Reg, %struct.Reg* %430, i32 0, i32 0
  %PC.i1649 = bitcast %union.anon* %431 to i64*
  %432 = load i64, i64* %PC.i1649
  %433 = add i64 %432, 53
  %434 = load i64, i64* %PC.i1649
  %435 = add i64 %434, 6
  %436 = load i64, i64* %PC.i1649
  %437 = add i64 %436, 6
  store i64 %437, i64* %PC.i1649
  %438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %439 = load i8, i8* %438, align 1
  store i8 %439, i8* %BRANCH_TAKEN, align 1
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %441 = icmp ne i8 %439, 0
  %442 = select i1 %441, i64 %433, i64 %435
  store i64 %442, i64* %440, align 8
  store %struct.Memory* %loadMem_41aada, %struct.Memory** %MEMORY
  %loadBr_41aada = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41aada = icmp eq i8 %loadBr_41aada, 1
  br i1 %cmpBr_41aada, label %block_.L_41ab0f, label %block_.L_41aae0

block_.L_41aae0:                                  ; preds = %block_41aad2, %block_41aac4
  %loadMem_41aae0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %444 = getelementptr inbounds %struct.GPR, %struct.GPR* %443, i32 0, i32 33
  %445 = getelementptr inbounds %struct.Reg, %struct.Reg* %444, i32 0, i32 0
  %PC.i1647 = bitcast %union.anon* %445 to i64*
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %447 = getelementptr inbounds %struct.GPR, %struct.GPR* %446, i32 0, i32 1
  %448 = getelementptr inbounds %struct.Reg, %struct.Reg* %447, i32 0, i32 0
  %RAX.i1648 = bitcast %union.anon* %448 to i64*
  %449 = load i64, i64* %PC.i1647
  %450 = add i64 %449, 8
  store i64 %450, i64* %PC.i1647
  %451 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %451, i64* %RAX.i1648, align 8
  store %struct.Memory* %loadMem_41aae0, %struct.Memory** %MEMORY
  %loadMem_41aae8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %453 = getelementptr inbounds %struct.GPR, %struct.GPR* %452, i32 0, i32 33
  %454 = getelementptr inbounds %struct.Reg, %struct.Reg* %453, i32 0, i32 0
  %PC.i1644 = bitcast %union.anon* %454 to i64*
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %456 = getelementptr inbounds %struct.GPR, %struct.GPR* %455, i32 0, i32 5
  %457 = getelementptr inbounds %struct.Reg, %struct.Reg* %456, i32 0, i32 0
  %RCX.i1645 = bitcast %union.anon* %457 to i64*
  %458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %459 = getelementptr inbounds %struct.GPR, %struct.GPR* %458, i32 0, i32 15
  %460 = getelementptr inbounds %struct.Reg, %struct.Reg* %459, i32 0, i32 0
  %RBP.i1646 = bitcast %union.anon* %460 to i64*
  %461 = load i64, i64* %RBP.i1646
  %462 = sub i64 %461, 12544
  %463 = load i64, i64* %PC.i1644
  %464 = add i64 %463, 7
  store i64 %464, i64* %PC.i1644
  %465 = inttoptr i64 %462 to i64*
  %466 = load i64, i64* %465
  store i64 %466, i64* %RCX.i1645, align 8
  store %struct.Memory* %loadMem_41aae8, %struct.Memory** %MEMORY
  %loadMem_41aaef = load %struct.Memory*, %struct.Memory** %MEMORY
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %468 = getelementptr inbounds %struct.GPR, %struct.GPR* %467, i32 0, i32 33
  %469 = getelementptr inbounds %struct.Reg, %struct.Reg* %468, i32 0, i32 0
  %PC.i1641 = bitcast %union.anon* %469 to i64*
  %470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %471 = getelementptr inbounds %struct.GPR, %struct.GPR* %470, i32 0, i32 1
  %472 = getelementptr inbounds %struct.Reg, %struct.Reg* %471, i32 0, i32 0
  %RAX.i1642 = bitcast %union.anon* %472 to i64*
  %473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %474 = getelementptr inbounds %struct.GPR, %struct.GPR* %473, i32 0, i32 5
  %475 = getelementptr inbounds %struct.Reg, %struct.Reg* %474, i32 0, i32 0
  %RCX.i1643 = bitcast %union.anon* %475 to i64*
  %476 = load i64, i64* %RCX.i1643
  %477 = load i64, i64* %RAX.i1642
  %478 = load i64, i64* %PC.i1641
  %479 = add i64 %478, 3
  store i64 %479, i64* %PC.i1641
  %480 = inttoptr i64 %476 to i64*
  store i64 %477, i64* %480
  store %struct.Memory* %loadMem_41aaef, %struct.Memory** %MEMORY
  %loadMem_41aaf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %482 = getelementptr inbounds %struct.GPR, %struct.GPR* %481, i32 0, i32 33
  %483 = getelementptr inbounds %struct.Reg, %struct.Reg* %482, i32 0, i32 0
  %PC.i1639 = bitcast %union.anon* %483 to i64*
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %485 = getelementptr inbounds %struct.GPR, %struct.GPR* %484, i32 0, i32 1
  %486 = getelementptr inbounds %struct.Reg, %struct.Reg* %485, i32 0, i32 0
  %RAX.i1640 = bitcast %union.anon* %486 to i64*
  %487 = load i64, i64* %PC.i1639
  %488 = add i64 %487, 8
  store i64 %488, i64* %PC.i1639
  %489 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %489, i64* %RAX.i1640, align 8
  store %struct.Memory* %loadMem_41aaf2, %struct.Memory** %MEMORY
  %loadMem_41aafa = load %struct.Memory*, %struct.Memory** %MEMORY
  %490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %491 = getelementptr inbounds %struct.GPR, %struct.GPR* %490, i32 0, i32 33
  %492 = getelementptr inbounds %struct.Reg, %struct.Reg* %491, i32 0, i32 0
  %PC.i1636 = bitcast %union.anon* %492 to i64*
  %493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %494 = getelementptr inbounds %struct.GPR, %struct.GPR* %493, i32 0, i32 1
  %495 = getelementptr inbounds %struct.Reg, %struct.Reg* %494, i32 0, i32 0
  %RAX.i1637 = bitcast %union.anon* %495 to i64*
  %496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %497 = getelementptr inbounds %struct.GPR, %struct.GPR* %496, i32 0, i32 5
  %498 = getelementptr inbounds %struct.Reg, %struct.Reg* %497, i32 0, i32 0
  %RCX.i1638 = bitcast %union.anon* %498 to i64*
  %499 = load i64, i64* %RCX.i1638
  %500 = add i64 %499, 8
  %501 = load i64, i64* %RAX.i1637
  %502 = load i64, i64* %PC.i1636
  %503 = add i64 %502, 4
  store i64 %503, i64* %PC.i1636
  %504 = inttoptr i64 %500 to i64*
  store i64 %501, i64* %504
  store %struct.Memory* %loadMem_41aafa, %struct.Memory** %MEMORY
  %loadMem_41aafe = load %struct.Memory*, %struct.Memory** %MEMORY
  %505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %506 = getelementptr inbounds %struct.GPR, %struct.GPR* %505, i32 0, i32 33
  %507 = getelementptr inbounds %struct.Reg, %struct.Reg* %506, i32 0, i32 0
  %PC.i1634 = bitcast %union.anon* %507 to i64*
  %508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %509 = getelementptr inbounds %struct.GPR, %struct.GPR* %508, i32 0, i32 1
  %510 = getelementptr inbounds %struct.Reg, %struct.Reg* %509, i32 0, i32 0
  %RAX.i1635 = bitcast %union.anon* %510 to i64*
  %511 = load i64, i64* %PC.i1634
  %512 = add i64 %511, 8
  store i64 %512, i64* %PC.i1634
  %513 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %513, i64* %RAX.i1635, align 8
  store %struct.Memory* %loadMem_41aafe, %struct.Memory** %MEMORY
  %loadMem_41ab06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %515 = getelementptr inbounds %struct.GPR, %struct.GPR* %514, i32 0, i32 33
  %516 = getelementptr inbounds %struct.Reg, %struct.Reg* %515, i32 0, i32 0
  %PC.i1631 = bitcast %union.anon* %516 to i64*
  %517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %518 = getelementptr inbounds %struct.GPR, %struct.GPR* %517, i32 0, i32 1
  %519 = getelementptr inbounds %struct.Reg, %struct.Reg* %518, i32 0, i32 0
  %RAX.i1632 = bitcast %union.anon* %519 to i64*
  %520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %521 = getelementptr inbounds %struct.GPR, %struct.GPR* %520, i32 0, i32 5
  %522 = getelementptr inbounds %struct.Reg, %struct.Reg* %521, i32 0, i32 0
  %RCX.i1633 = bitcast %union.anon* %522 to i64*
  %523 = load i64, i64* %RCX.i1633
  %524 = add i64 %523, 16
  %525 = load i64, i64* %RAX.i1632
  %526 = load i64, i64* %PC.i1631
  %527 = add i64 %526, 4
  store i64 %527, i64* %PC.i1631
  %528 = inttoptr i64 %524 to i64*
  store i64 %525, i64* %528
  store %struct.Memory* %loadMem_41ab06, %struct.Memory** %MEMORY
  %loadMem_41ab0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %530 = getelementptr inbounds %struct.GPR, %struct.GPR* %529, i32 0, i32 33
  %531 = getelementptr inbounds %struct.Reg, %struct.Reg* %530, i32 0, i32 0
  %PC.i1630 = bitcast %union.anon* %531 to i64*
  %532 = load i64, i64* %PC.i1630
  %533 = add i64 %532, 4854
  %534 = load i64, i64* %PC.i1630
  %535 = add i64 %534, 5
  store i64 %535, i64* %PC.i1630
  %536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %533, i64* %536, align 8
  store %struct.Memory* %loadMem_41ab0a, %struct.Memory** %MEMORY
  br label %block_.L_41be00

block_.L_41ab0f:                                  ; preds = %block_41aad2, %block_.L_41a989
  %loadMem1_41ab0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %538 = getelementptr inbounds %struct.GPR, %struct.GPR* %537, i32 0, i32 33
  %539 = getelementptr inbounds %struct.Reg, %struct.Reg* %538, i32 0, i32 0
  %PC.i1629 = bitcast %union.anon* %539 to i64*
  %540 = load i64, i64* %PC.i1629
  %541 = add i64 %540, 35921
  %542 = load i64, i64* %PC.i1629
  %543 = add i64 %542, 5
  %544 = load i64, i64* %PC.i1629
  %545 = add i64 %544, 5
  store i64 %545, i64* %PC.i1629
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %547 = load i64, i64* %546, align 8
  %548 = add i64 %547, -8
  %549 = inttoptr i64 %548 to i64*
  store i64 %543, i64* %549
  store i64 %548, i64* %546, align 8
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %541, i64* %550, align 8
  store %struct.Memory* %loadMem1_41ab0f, %struct.Memory** %MEMORY
  %loadMem2_41ab0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ab0f = load i64, i64* %3
  %call2_41ab0f = call %struct.Memory* @sub_423760.rtime(%struct.State* %0, i64 %loadPC_41ab0f, %struct.Memory* %loadMem2_41ab0f)
  store %struct.Memory* %call2_41ab0f, %struct.Memory** %MEMORY
  %loadMem_41ab14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %552 = getelementptr inbounds %struct.GPR, %struct.GPR* %551, i32 0, i32 33
  %553 = getelementptr inbounds %struct.Reg, %struct.Reg* %552, i32 0, i32 0
  %PC.i1627 = bitcast %union.anon* %553 to i64*
  %554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %555 = getelementptr inbounds %struct.GPR, %struct.GPR* %554, i32 0, i32 1
  %556 = getelementptr inbounds %struct.Reg, %struct.Reg* %555, i32 0, i32 0
  %RAX.i1628 = bitcast %union.anon* %556 to i64*
  %557 = load i64, i64* %RAX.i1628
  %558 = load i64, i64* %PC.i1627
  %559 = add i64 %558, 8
  store i64 %559, i64* %PC.i1627
  store i64 %557, i64* bitcast (%G_0x8662e8_type* @G_0x8662e8 to i64*)
  store %struct.Memory* %loadMem_41ab14, %struct.Memory** %MEMORY
  %loadMem_41ab1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %561 = getelementptr inbounds %struct.GPR, %struct.GPR* %560, i32 0, i32 33
  %562 = getelementptr inbounds %struct.Reg, %struct.Reg* %561, i32 0, i32 0
  %PC.i1626 = bitcast %union.anon* %562 to i64*
  %563 = load i64, i64* %PC.i1626
  %564 = add i64 %563, 11
  store i64 %564, i64* %PC.i1626
  store i32 0, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  store %struct.Memory* %loadMem_41ab1c, %struct.Memory** %MEMORY
  %loadMem_41ab27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %566 = getelementptr inbounds %struct.GPR, %struct.GPR* %565, i32 0, i32 33
  %567 = getelementptr inbounds %struct.Reg, %struct.Reg* %566, i32 0, i32 0
  %PC.i1625 = bitcast %union.anon* %567 to i64*
  %568 = load i64, i64* %PC.i1625
  %569 = add i64 %568, 8
  store i64 %569, i64* %PC.i1625
  %570 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %571 = sub i32 %570, 4
  %572 = icmp ult i32 %570, 4
  %573 = zext i1 %572 to i8
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %573, i8* %574, align 1
  %575 = and i32 %571, 255
  %576 = call i32 @llvm.ctpop.i32(i32 %575)
  %577 = trunc i32 %576 to i8
  %578 = and i8 %577, 1
  %579 = xor i8 %578, 1
  %580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %579, i8* %580, align 1
  %581 = xor i32 %570, 4
  %582 = xor i32 %581, %571
  %583 = lshr i32 %582, 4
  %584 = trunc i32 %583 to i8
  %585 = and i8 %584, 1
  %586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %585, i8* %586, align 1
  %587 = icmp eq i32 %571, 0
  %588 = zext i1 %587 to i8
  %589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %588, i8* %589, align 1
  %590 = lshr i32 %571, 31
  %591 = trunc i32 %590 to i8
  %592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %591, i8* %592, align 1
  %593 = lshr i32 %570, 31
  %594 = xor i32 %590, %593
  %595 = add i32 %594, %593
  %596 = icmp eq i32 %595, 2
  %597 = zext i1 %596 to i8
  %598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %597, i8* %598, align 1
  store %struct.Memory* %loadMem_41ab27, %struct.Memory** %MEMORY
  %loadMem_41ab2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %600 = getelementptr inbounds %struct.GPR, %struct.GPR* %599, i32 0, i32 33
  %601 = getelementptr inbounds %struct.Reg, %struct.Reg* %600, i32 0, i32 0
  %PC.i1624 = bitcast %union.anon* %601 to i64*
  %602 = load i64, i64* %PC.i1624
  %603 = add i64 %602, 22
  %604 = load i64, i64* %PC.i1624
  %605 = add i64 %604, 6
  %606 = load i64, i64* %PC.i1624
  %607 = add i64 %606, 6
  store i64 %607, i64* %PC.i1624
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %609 = load i8, i8* %608, align 1
  %610 = icmp eq i8 %609, 0
  %611 = zext i1 %610 to i8
  store i8 %611, i8* %BRANCH_TAKEN, align 1
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %613 = select i1 %610, i64 %603, i64 %605
  store i64 %613, i64* %612, align 8
  store %struct.Memory* %loadMem_41ab2f, %struct.Memory** %MEMORY
  %loadBr_41ab2f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ab2f = icmp eq i8 %loadBr_41ab2f, 1
  br i1 %cmpBr_41ab2f, label %block_.L_41ab45, label %block_41ab35

block_41ab35:                                     ; preds = %block_.L_41ab0f
  %loadMem_41ab35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %615 = getelementptr inbounds %struct.GPR, %struct.GPR* %614, i32 0, i32 33
  %616 = getelementptr inbounds %struct.Reg, %struct.Reg* %615, i32 0, i32 0
  %PC.i1623 = bitcast %union.anon* %616 to i64*
  %617 = load i64, i64* %PC.i1623
  %618 = add i64 %617, 11
  store i64 %618, i64* %PC.i1623
  store i32 1, i32* bitcast (%G_0x85f164_type* @G_0x85f164 to i32*)
  store %struct.Memory* %loadMem_41ab35, %struct.Memory** %MEMORY
  %loadMem_41ab40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %620 = getelementptr inbounds %struct.GPR, %struct.GPR* %619, i32 0, i32 33
  %621 = getelementptr inbounds %struct.Reg, %struct.Reg* %620, i32 0, i32 0
  %PC.i1622 = bitcast %union.anon* %621 to i64*
  %622 = load i64, i64* %PC.i1622
  %623 = add i64 %622, 16
  %624 = load i64, i64* %PC.i1622
  %625 = add i64 %624, 5
  store i64 %625, i64* %PC.i1622
  %626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %623, i64* %626, align 8
  store %struct.Memory* %loadMem_41ab40, %struct.Memory** %MEMORY
  br label %block_.L_41ab50

block_.L_41ab45:                                  ; preds = %block_.L_41ab0f
  %loadMem_41ab45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %628 = getelementptr inbounds %struct.GPR, %struct.GPR* %627, i32 0, i32 33
  %629 = getelementptr inbounds %struct.Reg, %struct.Reg* %628, i32 0, i32 0
  %PC.i1621 = bitcast %union.anon* %629 to i64*
  %630 = load i64, i64* %PC.i1621
  %631 = add i64 %630, 11
  store i64 %631, i64* %PC.i1621
  store i32 0, i32* bitcast (%G_0x85f164_type* @G_0x85f164 to i32*)
  store %struct.Memory* %loadMem_41ab45, %struct.Memory** %MEMORY
  br label %block_.L_41ab50

block_.L_41ab50:                                  ; preds = %block_.L_41ab45, %block_41ab35
  %loadMem_41ab50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %633 = getelementptr inbounds %struct.GPR, %struct.GPR* %632, i32 0, i32 33
  %634 = getelementptr inbounds %struct.Reg, %struct.Reg* %633, i32 0, i32 0
  %PC.i1618 = bitcast %union.anon* %634 to i64*
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %636 = getelementptr inbounds %struct.GPR, %struct.GPR* %635, i32 0, i32 11
  %637 = getelementptr inbounds %struct.Reg, %struct.Reg* %636, i32 0, i32 0
  %RDI.i1619 = bitcast %union.anon* %637 to i64*
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %639 = getelementptr inbounds %struct.GPR, %struct.GPR* %638, i32 0, i32 15
  %640 = getelementptr inbounds %struct.Reg, %struct.Reg* %639, i32 0, i32 0
  %RBP.i1620 = bitcast %union.anon* %640 to i64*
  %641 = load i64, i64* %RBP.i1620
  %642 = sub i64 %641, 12400
  %643 = load i64, i64* %PC.i1618
  %644 = add i64 %643, 7
  store i64 %644, i64* %PC.i1618
  store i64 %642, i64* %RDI.i1619, align 8
  store %struct.Memory* %loadMem_41ab50, %struct.Memory** %MEMORY
  %loadMem1_41ab57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %646 = getelementptr inbounds %struct.GPR, %struct.GPR* %645, i32 0, i32 33
  %647 = getelementptr inbounds %struct.Reg, %struct.Reg* %646, i32 0, i32 0
  %PC.i1617 = bitcast %union.anon* %647 to i64*
  %648 = load i64, i64* %PC.i1617
  %649 = add i64 %648, -77095
  %650 = load i64, i64* %PC.i1617
  %651 = add i64 %650, 5
  %652 = load i64, i64* %PC.i1617
  %653 = add i64 %652, 5
  store i64 %653, i64* %PC.i1617
  %654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %655 = load i64, i64* %654, align 8
  %656 = add i64 %655, -8
  %657 = inttoptr i64 %656 to i64*
  store i64 %651, i64* %657
  store i64 %656, i64* %654, align 8
  %658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %649, i64* %658, align 8
  store %struct.Memory* %loadMem1_41ab57, %struct.Memory** %MEMORY
  %loadMem2_41ab57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ab57 = load i64, i64* %3
  %call2_41ab57 = call %struct.Memory* @sub_407e30.gen(%struct.State* %0, i64 %loadPC_41ab57, %struct.Memory* %loadMem2_41ab57)
  store %struct.Memory* %call2_41ab57, %struct.Memory** %MEMORY
  %loadMem_41ab5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %660 = getelementptr inbounds %struct.GPR, %struct.GPR* %659, i32 0, i32 33
  %661 = getelementptr inbounds %struct.Reg, %struct.Reg* %660, i32 0, i32 0
  %PC.i1615 = bitcast %union.anon* %661 to i64*
  %662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %663 = getelementptr inbounds %struct.GPR, %struct.GPR* %662, i32 0, i32 1
  %664 = getelementptr inbounds %struct.Reg, %struct.Reg* %663, i32 0, i32 0
  %RAX.i1616 = bitcast %union.anon* %664 to i64*
  %665 = load i64, i64* %PC.i1615
  %666 = add i64 %665, 7
  store i64 %666, i64* %PC.i1615
  %667 = load i32, i32* bitcast (%G_0x85f150_type* @G_0x85f150 to i32*)
  %668 = zext i32 %667 to i64
  store i64 %668, i64* %RAX.i1616, align 8
  store %struct.Memory* %loadMem_41ab5c, %struct.Memory** %MEMORY
  %loadMem_41ab63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %670 = getelementptr inbounds %struct.GPR, %struct.GPR* %669, i32 0, i32 33
  %671 = getelementptr inbounds %struct.Reg, %struct.Reg* %670, i32 0, i32 0
  %PC.i1612 = bitcast %union.anon* %671 to i64*
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %673 = getelementptr inbounds %struct.GPR, %struct.GPR* %672, i32 0, i32 1
  %674 = getelementptr inbounds %struct.Reg, %struct.Reg* %673, i32 0, i32 0
  %EAX.i1613 = bitcast %union.anon* %674 to i32*
  %675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %676 = getelementptr inbounds %struct.GPR, %struct.GPR* %675, i32 0, i32 15
  %677 = getelementptr inbounds %struct.Reg, %struct.Reg* %676, i32 0, i32 0
  %RBP.i1614 = bitcast %union.anon* %677 to i64*
  %678 = load i64, i64* %RBP.i1614
  %679 = sub i64 %678, 12420
  %680 = load i32, i32* %EAX.i1613
  %681 = zext i32 %680 to i64
  %682 = load i64, i64* %PC.i1612
  %683 = add i64 %682, 6
  store i64 %683, i64* %PC.i1612
  %684 = inttoptr i64 %679 to i32*
  store i32 %680, i32* %684
  store %struct.Memory* %loadMem_41ab63, %struct.Memory** %MEMORY
  %loadMem1_41ab69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %686 = getelementptr inbounds %struct.GPR, %struct.GPR* %685, i32 0, i32 33
  %687 = getelementptr inbounds %struct.Reg, %struct.Reg* %686, i32 0, i32 0
  %PC.i1611 = bitcast %union.anon* %687 to i64*
  %688 = load i64, i64* %PC.i1611
  %689 = add i64 %688, -70281
  %690 = load i64, i64* %PC.i1611
  %691 = add i64 %690, 5
  %692 = load i64, i64* %PC.i1611
  %693 = add i64 %692, 5
  store i64 %693, i64* %PC.i1611
  %694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %695 = load i64, i64* %694, align 8
  %696 = add i64 %695, -8
  %697 = inttoptr i64 %696 to i64*
  store i64 %691, i64* %697
  store i64 %696, i64* %694, align 8
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %689, i64* %698, align 8
  store %struct.Memory* %loadMem1_41ab69, %struct.Memory** %MEMORY
  %loadMem2_41ab69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ab69 = load i64, i64* %3
  %call2_41ab69 = call %struct.Memory* @sub_4098e0.in_check(%struct.State* %0, i64 %loadPC_41ab69, %struct.Memory* %loadMem2_41ab69)
  store %struct.Memory* %call2_41ab69, %struct.Memory** %MEMORY
  %loadMem_41ab6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %700 = getelementptr inbounds %struct.GPR, %struct.GPR* %699, i32 0, i32 33
  %701 = getelementptr inbounds %struct.Reg, %struct.Reg* %700, i32 0, i32 0
  %PC.i1608 = bitcast %union.anon* %701 to i64*
  %702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %703 = getelementptr inbounds %struct.GPR, %struct.GPR* %702, i32 0, i32 1
  %704 = getelementptr inbounds %struct.Reg, %struct.Reg* %703, i32 0, i32 0
  %EAX.i1609 = bitcast %union.anon* %704 to i32*
  %705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %706 = getelementptr inbounds %struct.GPR, %struct.GPR* %705, i32 0, i32 15
  %707 = getelementptr inbounds %struct.Reg, %struct.Reg* %706, i32 0, i32 0
  %RBP.i1610 = bitcast %union.anon* %707 to i64*
  %708 = load i64, i64* %RBP.i1610
  %709 = sub i64 %708, 12412
  %710 = load i32, i32* %EAX.i1609
  %711 = zext i32 %710 to i64
  %712 = load i64, i64* %PC.i1608
  %713 = add i64 %712, 6
  store i64 %713, i64* %PC.i1608
  %714 = inttoptr i64 %709 to i32*
  store i32 %710, i32* %714
  store %struct.Memory* %loadMem_41ab6e, %struct.Memory** %MEMORY
  %loadMem_41ab74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 33
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %PC.i1606 = bitcast %union.anon* %717 to i64*
  %718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %719 = getelementptr inbounds %struct.GPR, %struct.GPR* %718, i32 0, i32 15
  %720 = getelementptr inbounds %struct.Reg, %struct.Reg* %719, i32 0, i32 0
  %RBP.i1607 = bitcast %union.anon* %720 to i64*
  %721 = load i64, i64* %RBP.i1607
  %722 = sub i64 %721, 12404
  %723 = load i64, i64* %PC.i1606
  %724 = add i64 %723, 10
  store i64 %724, i64* %PC.i1606
  %725 = inttoptr i64 %722 to i32*
  store i32 0, i32* %725
  store %struct.Memory* %loadMem_41ab74, %struct.Memory** %MEMORY
  br label %block_.L_41ab7e

block_.L_41ab7e:                                  ; preds = %block_.L_41abe1, %block_.L_41ab50
  %loadMem_41ab7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 33
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %PC.i1603 = bitcast %union.anon* %728 to i64*
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %730 = getelementptr inbounds %struct.GPR, %struct.GPR* %729, i32 0, i32 1
  %731 = getelementptr inbounds %struct.Reg, %struct.Reg* %730, i32 0, i32 0
  %RAX.i1604 = bitcast %union.anon* %731 to i64*
  %732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %733 = getelementptr inbounds %struct.GPR, %struct.GPR* %732, i32 0, i32 15
  %734 = getelementptr inbounds %struct.Reg, %struct.Reg* %733, i32 0, i32 0
  %RBP.i1605 = bitcast %union.anon* %734 to i64*
  %735 = load i64, i64* %RBP.i1605
  %736 = sub i64 %735, 12404
  %737 = load i64, i64* %PC.i1603
  %738 = add i64 %737, 6
  store i64 %738, i64* %PC.i1603
  %739 = inttoptr i64 %736 to i32*
  %740 = load i32, i32* %739
  %741 = zext i32 %740 to i64
  store i64 %741, i64* %RAX.i1604, align 8
  store %struct.Memory* %loadMem_41ab7e, %struct.Memory** %MEMORY
  %loadMem_41ab84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %743 = getelementptr inbounds %struct.GPR, %struct.GPR* %742, i32 0, i32 33
  %744 = getelementptr inbounds %struct.Reg, %struct.Reg* %743, i32 0, i32 0
  %PC.i1601 = bitcast %union.anon* %744 to i64*
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %746 = getelementptr inbounds %struct.GPR, %struct.GPR* %745, i32 0, i32 1
  %747 = getelementptr inbounds %struct.Reg, %struct.Reg* %746, i32 0, i32 0
  %EAX.i1602 = bitcast %union.anon* %747 to i32*
  %748 = load i32, i32* %EAX.i1602
  %749 = zext i32 %748 to i64
  %750 = load i64, i64* %PC.i1601
  %751 = add i64 %750, 7
  store i64 %751, i64* %PC.i1601
  %752 = load i32, i32* bitcast (%G_0x85f150_type* @G_0x85f150 to i32*)
  %753 = sub i32 %748, %752
  %754 = icmp ult i32 %748, %752
  %755 = zext i1 %754 to i8
  %756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %755, i8* %756, align 1
  %757 = and i32 %753, 255
  %758 = call i32 @llvm.ctpop.i32(i32 %757)
  %759 = trunc i32 %758 to i8
  %760 = and i8 %759, 1
  %761 = xor i8 %760, 1
  %762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %761, i8* %762, align 1
  %763 = xor i32 %752, %748
  %764 = xor i32 %763, %753
  %765 = lshr i32 %764, 4
  %766 = trunc i32 %765 to i8
  %767 = and i8 %766, 1
  %768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %767, i8* %768, align 1
  %769 = icmp eq i32 %753, 0
  %770 = zext i1 %769 to i8
  %771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %770, i8* %771, align 1
  %772 = lshr i32 %753, 31
  %773 = trunc i32 %772 to i8
  %774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %773, i8* %774, align 1
  %775 = lshr i32 %748, 31
  %776 = lshr i32 %752, 31
  %777 = xor i32 %776, %775
  %778 = xor i32 %772, %775
  %779 = add i32 %778, %777
  %780 = icmp eq i32 %779, 2
  %781 = zext i1 %780 to i8
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %781, i8* %782, align 1
  store %struct.Memory* %loadMem_41ab84, %struct.Memory** %MEMORY
  %loadMem_41ab8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %784 = getelementptr inbounds %struct.GPR, %struct.GPR* %783, i32 0, i32 33
  %785 = getelementptr inbounds %struct.Reg, %struct.Reg* %784, i32 0, i32 0
  %PC.i1600 = bitcast %union.anon* %785 to i64*
  %786 = load i64, i64* %PC.i1600
  %787 = add i64 %786, 124
  %788 = load i64, i64* %PC.i1600
  %789 = add i64 %788, 6
  %790 = load i64, i64* %PC.i1600
  %791 = add i64 %790, 6
  store i64 %791, i64* %PC.i1600
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %793 = load i8, i8* %792, align 1
  %794 = icmp ne i8 %793, 0
  %795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %796 = load i8, i8* %795, align 1
  %797 = icmp ne i8 %796, 0
  %798 = xor i1 %794, %797
  %799 = xor i1 %798, true
  %800 = zext i1 %799 to i8
  store i8 %800, i8* %BRANCH_TAKEN, align 1
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %802 = select i1 %798, i64 %789, i64 %787
  store i64 %802, i64* %801, align 8
  store %struct.Memory* %loadMem_41ab8b, %struct.Memory** %MEMORY
  %loadBr_41ab8b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ab8b = icmp eq i8 %loadBr_41ab8b, 1
  br i1 %cmpBr_41ab8b, label %block_.L_41ac07, label %block_41ab91

block_41ab91:                                     ; preds = %block_.L_41ab7e
  %loadMem_41ab91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %804 = getelementptr inbounds %struct.GPR, %struct.GPR* %803, i32 0, i32 33
  %805 = getelementptr inbounds %struct.Reg, %struct.Reg* %804, i32 0, i32 0
  %PC.i1597 = bitcast %union.anon* %805 to i64*
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %807 = getelementptr inbounds %struct.GPR, %struct.GPR* %806, i32 0, i32 11
  %808 = getelementptr inbounds %struct.Reg, %struct.Reg* %807, i32 0, i32 0
  %RDI.i1598 = bitcast %union.anon* %808 to i64*
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 15
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %RBP.i1599 = bitcast %union.anon* %811 to i64*
  %812 = load i64, i64* %RBP.i1599
  %813 = sub i64 %812, 12400
  %814 = load i64, i64* %PC.i1597
  %815 = add i64 %814, 7
  store i64 %815, i64* %PC.i1597
  store i64 %813, i64* %RDI.i1598, align 8
  store %struct.Memory* %loadMem_41ab91, %struct.Memory** %MEMORY
  %loadMem_41ab98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %817 = getelementptr inbounds %struct.GPR, %struct.GPR* %816, i32 0, i32 33
  %818 = getelementptr inbounds %struct.Reg, %struct.Reg* %817, i32 0, i32 0
  %PC.i1594 = bitcast %union.anon* %818 to i64*
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %820 = getelementptr inbounds %struct.GPR, %struct.GPR* %819, i32 0, i32 9
  %821 = getelementptr inbounds %struct.Reg, %struct.Reg* %820, i32 0, i32 0
  %RSI.i1595 = bitcast %union.anon* %821 to i64*
  %822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %823 = getelementptr inbounds %struct.GPR, %struct.GPR* %822, i32 0, i32 15
  %824 = getelementptr inbounds %struct.Reg, %struct.Reg* %823, i32 0, i32 0
  %RBP.i1596 = bitcast %union.anon* %824 to i64*
  %825 = load i64, i64* %RBP.i1596
  %826 = sub i64 %825, 12404
  %827 = load i64, i64* %PC.i1594
  %828 = add i64 %827, 6
  store i64 %828, i64* %PC.i1594
  %829 = inttoptr i64 %826 to i32*
  %830 = load i32, i32* %829
  %831 = zext i32 %830 to i64
  store i64 %831, i64* %RSI.i1595, align 8
  store %struct.Memory* %loadMem_41ab98, %struct.Memory** %MEMORY
  %loadMem1_41ab9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %833 = getelementptr inbounds %struct.GPR, %struct.GPR* %832, i32 0, i32 33
  %834 = getelementptr inbounds %struct.Reg, %struct.Reg* %833, i32 0, i32 0
  %PC.i1593 = bitcast %union.anon* %834 to i64*
  %835 = load i64, i64* %PC.i1593
  %836 = add i64 %835, -62574
  %837 = load i64, i64* %PC.i1593
  %838 = add i64 %837, 5
  %839 = load i64, i64* %PC.i1593
  %840 = add i64 %839, 5
  store i64 %840, i64* %PC.i1593
  %841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %842 = load i64, i64* %841, align 8
  %843 = add i64 %842, -8
  %844 = inttoptr i64 %843 to i64*
  store i64 %838, i64* %844
  store i64 %843, i64* %841, align 8
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %836, i64* %845, align 8
  store %struct.Memory* %loadMem1_41ab9e, %struct.Memory** %MEMORY
  %loadMem2_41ab9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ab9e = load i64, i64* %3
  %call2_41ab9e = call %struct.Memory* @sub_40b730.make(%struct.State* %0, i64 %loadPC_41ab9e, %struct.Memory* %loadMem2_41ab9e)
  store %struct.Memory* %call2_41ab9e, %struct.Memory** %MEMORY
  %loadMem_41aba3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %847 = getelementptr inbounds %struct.GPR, %struct.GPR* %846, i32 0, i32 33
  %848 = getelementptr inbounds %struct.Reg, %struct.Reg* %847, i32 0, i32 0
  %PC.i1590 = bitcast %union.anon* %848 to i64*
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 11
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %RDI.i1591 = bitcast %union.anon* %851 to i64*
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 15
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %RBP.i1592 = bitcast %union.anon* %854 to i64*
  %855 = load i64, i64* %RBP.i1592
  %856 = sub i64 %855, 12400
  %857 = load i64, i64* %PC.i1590
  %858 = add i64 %857, 7
  store i64 %858, i64* %PC.i1590
  store i64 %856, i64* %RDI.i1591, align 8
  store %struct.Memory* %loadMem_41aba3, %struct.Memory** %MEMORY
  %loadMem_41abaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %860 = getelementptr inbounds %struct.GPR, %struct.GPR* %859, i32 0, i32 33
  %861 = getelementptr inbounds %struct.Reg, %struct.Reg* %860, i32 0, i32 0
  %PC.i1587 = bitcast %union.anon* %861 to i64*
  %862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %863 = getelementptr inbounds %struct.GPR, %struct.GPR* %862, i32 0, i32 9
  %864 = getelementptr inbounds %struct.Reg, %struct.Reg* %863, i32 0, i32 0
  %RSI.i1588 = bitcast %union.anon* %864 to i64*
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 15
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %RBP.i1589 = bitcast %union.anon* %867 to i64*
  %868 = load i64, i64* %RBP.i1589
  %869 = sub i64 %868, 12404
  %870 = load i64, i64* %PC.i1587
  %871 = add i64 %870, 6
  store i64 %871, i64* %PC.i1587
  %872 = inttoptr i64 %869 to i32*
  %873 = load i32, i32* %872
  %874 = zext i32 %873 to i64
  store i64 %874, i64* %RSI.i1588, align 8
  store %struct.Memory* %loadMem_41abaa, %struct.Memory** %MEMORY
  %loadMem_41abb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %876 = getelementptr inbounds %struct.GPR, %struct.GPR* %875, i32 0, i32 33
  %877 = getelementptr inbounds %struct.Reg, %struct.Reg* %876, i32 0, i32 0
  %PC.i1584 = bitcast %union.anon* %877 to i64*
  %878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %879 = getelementptr inbounds %struct.GPR, %struct.GPR* %878, i32 0, i32 7
  %880 = getelementptr inbounds %struct.Reg, %struct.Reg* %879, i32 0, i32 0
  %RDX.i1585 = bitcast %union.anon* %880 to i64*
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %882 = getelementptr inbounds %struct.GPR, %struct.GPR* %881, i32 0, i32 15
  %883 = getelementptr inbounds %struct.Reg, %struct.Reg* %882, i32 0, i32 0
  %RBP.i1586 = bitcast %union.anon* %883 to i64*
  %884 = load i64, i64* %RBP.i1586
  %885 = sub i64 %884, 12412
  %886 = load i64, i64* %PC.i1584
  %887 = add i64 %886, 6
  store i64 %887, i64* %PC.i1584
  %888 = inttoptr i64 %885 to i32*
  %889 = load i32, i32* %888
  %890 = zext i32 %889 to i64
  store i64 %890, i64* %RDX.i1585, align 8
  store %struct.Memory* %loadMem_41abb0, %struct.Memory** %MEMORY
  %loadMem1_41abb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %892 = getelementptr inbounds %struct.GPR, %struct.GPR* %891, i32 0, i32 33
  %893 = getelementptr inbounds %struct.Reg, %struct.Reg* %892, i32 0, i32 0
  %PC.i1583 = bitcast %union.anon* %893 to i64*
  %894 = load i64, i64* %PC.i1583
  %895 = add i64 %894, -83254
  %896 = load i64, i64* %PC.i1583
  %897 = add i64 %896, 5
  %898 = load i64, i64* %PC.i1583
  %899 = add i64 %898, 5
  store i64 %899, i64* %PC.i1583
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %901 = load i64, i64* %900, align 8
  %902 = add i64 %901, -8
  %903 = inttoptr i64 %902 to i64*
  store i64 %897, i64* %903
  store i64 %902, i64* %900, align 8
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %895, i64* %904, align 8
  store %struct.Memory* %loadMem1_41abb6, %struct.Memory** %MEMORY
  %loadMem2_41abb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41abb6 = load i64, i64* %3
  %call2_41abb6 = call %struct.Memory* @sub_406680.check_legal(%struct.State* %0, i64 %loadPC_41abb6, %struct.Memory* %loadMem2_41abb6)
  store %struct.Memory* %call2_41abb6, %struct.Memory** %MEMORY
  %loadMem_41abbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %906 = getelementptr inbounds %struct.GPR, %struct.GPR* %905, i32 0, i32 33
  %907 = getelementptr inbounds %struct.Reg, %struct.Reg* %906, i32 0, i32 0
  %PC.i1581 = bitcast %union.anon* %907 to i64*
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 1
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %EAX.i1582 = bitcast %union.anon* %910 to i32*
  %911 = load i32, i32* %EAX.i1582
  %912 = zext i32 %911 to i64
  %913 = load i64, i64* %PC.i1581
  %914 = add i64 %913, 3
  store i64 %914, i64* %PC.i1581
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %915, align 1
  %916 = and i32 %911, 255
  %917 = call i32 @llvm.ctpop.i32(i32 %916)
  %918 = trunc i32 %917 to i8
  %919 = and i8 %918, 1
  %920 = xor i8 %919, 1
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %920, i8* %921, align 1
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %922, align 1
  %923 = icmp eq i32 %911, 0
  %924 = zext i1 %923 to i8
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %924, i8* %925, align 1
  %926 = lshr i32 %911, 31
  %927 = trunc i32 %926 to i8
  %928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %927, i8* %928, align 1
  %929 = lshr i32 %911, 31
  %930 = xor i32 %926, %929
  %931 = add i32 %930, %929
  %932 = icmp eq i32 %931, 2
  %933 = zext i1 %932 to i8
  %934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %933, i8* %934, align 1
  store %struct.Memory* %loadMem_41abbb, %struct.Memory** %MEMORY
  %loadMem_41abbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 33
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %PC.i1580 = bitcast %union.anon* %937 to i64*
  %938 = load i64, i64* %PC.i1580
  %939 = add i64 %938, 35
  %940 = load i64, i64* %PC.i1580
  %941 = add i64 %940, 6
  %942 = load i64, i64* %PC.i1580
  %943 = add i64 %942, 6
  store i64 %943, i64* %PC.i1580
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %945 = load i8, i8* %944, align 1
  store i8 %945, i8* %BRANCH_TAKEN, align 1
  %946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %947 = icmp ne i8 %945, 0
  %948 = select i1 %947, i64 %939, i64 %941
  store i64 %948, i64* %946, align 8
  store %struct.Memory* %loadMem_41abbe, %struct.Memory** %MEMORY
  %loadBr_41abbe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41abbe = icmp eq i8 %loadBr_41abbe, 1
  br i1 %cmpBr_41abbe, label %block_.L_41abe1, label %block_41abc4

block_41abc4:                                     ; preds = %block_41ab91
  %loadMem_41abc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %950 = getelementptr inbounds %struct.GPR, %struct.GPR* %949, i32 0, i32 33
  %951 = getelementptr inbounds %struct.Reg, %struct.Reg* %950, i32 0, i32 0
  %PC.i1578 = bitcast %union.anon* %951 to i64*
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %953 = getelementptr inbounds %struct.GPR, %struct.GPR* %952, i32 0, i32 1
  %954 = getelementptr inbounds %struct.Reg, %struct.Reg* %953, i32 0, i32 0
  %RAX.i1579 = bitcast %union.anon* %954 to i64*
  %955 = load i64, i64* %PC.i1578
  %956 = add i64 %955, 7
  store i64 %956, i64* %PC.i1578
  %957 = load i32, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  %958 = zext i32 %957 to i64
  store i64 %958, i64* %RAX.i1579, align 8
  store %struct.Memory* %loadMem_41abc4, %struct.Memory** %MEMORY
  %loadMem_41abcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %960 = getelementptr inbounds %struct.GPR, %struct.GPR* %959, i32 0, i32 33
  %961 = getelementptr inbounds %struct.Reg, %struct.Reg* %960, i32 0, i32 0
  %PC.i1576 = bitcast %union.anon* %961 to i64*
  %962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %963 = getelementptr inbounds %struct.GPR, %struct.GPR* %962, i32 0, i32 1
  %964 = getelementptr inbounds %struct.Reg, %struct.Reg* %963, i32 0, i32 0
  %RAX.i1577 = bitcast %union.anon* %964 to i64*
  %965 = load i64, i64* %RAX.i1577
  %966 = load i64, i64* %PC.i1576
  %967 = add i64 %966, 3
  store i64 %967, i64* %PC.i1576
  %968 = trunc i64 %965 to i32
  %969 = add i32 1, %968
  %970 = zext i32 %969 to i64
  store i64 %970, i64* %RAX.i1577, align 8
  %971 = icmp ult i32 %969, %968
  %972 = icmp ult i32 %969, 1
  %973 = or i1 %971, %972
  %974 = zext i1 %973 to i8
  %975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %974, i8* %975, align 1
  %976 = and i32 %969, 255
  %977 = call i32 @llvm.ctpop.i32(i32 %976)
  %978 = trunc i32 %977 to i8
  %979 = and i8 %978, 1
  %980 = xor i8 %979, 1
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %980, i8* %981, align 1
  %982 = xor i64 1, %965
  %983 = trunc i64 %982 to i32
  %984 = xor i32 %983, %969
  %985 = lshr i32 %984, 4
  %986 = trunc i32 %985 to i8
  %987 = and i8 %986, 1
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %987, i8* %988, align 1
  %989 = icmp eq i32 %969, 0
  %990 = zext i1 %989 to i8
  %991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %990, i8* %991, align 1
  %992 = lshr i32 %969, 31
  %993 = trunc i32 %992 to i8
  %994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %993, i8* %994, align 1
  %995 = lshr i32 %968, 31
  %996 = xor i32 %992, %995
  %997 = add i32 %996, %992
  %998 = icmp eq i32 %997, 2
  %999 = zext i1 %998 to i8
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %999, i8* %1000, align 1
  store %struct.Memory* %loadMem_41abcb, %struct.Memory** %MEMORY
  %loadMem_41abce = load %struct.Memory*, %struct.Memory** %MEMORY
  %1001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1002 = getelementptr inbounds %struct.GPR, %struct.GPR* %1001, i32 0, i32 33
  %1003 = getelementptr inbounds %struct.Reg, %struct.Reg* %1002, i32 0, i32 0
  %PC.i1574 = bitcast %union.anon* %1003 to i64*
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1005 = getelementptr inbounds %struct.GPR, %struct.GPR* %1004, i32 0, i32 1
  %1006 = getelementptr inbounds %struct.Reg, %struct.Reg* %1005, i32 0, i32 0
  %EAX.i1575 = bitcast %union.anon* %1006 to i32*
  %1007 = load i32, i32* %EAX.i1575
  %1008 = zext i32 %1007 to i64
  %1009 = load i64, i64* %PC.i1574
  %1010 = add i64 %1009, 7
  store i64 %1010, i64* %PC.i1574
  store i32 %1007, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  store %struct.Memory* %loadMem_41abce, %struct.Memory** %MEMORY
  %loadMem_41abd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1012 = getelementptr inbounds %struct.GPR, %struct.GPR* %1011, i32 0, i32 33
  %1013 = getelementptr inbounds %struct.Reg, %struct.Reg* %1012, i32 0, i32 0
  %PC.i1571 = bitcast %union.anon* %1013 to i64*
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1015 = getelementptr inbounds %struct.GPR, %struct.GPR* %1014, i32 0, i32 1
  %1016 = getelementptr inbounds %struct.Reg, %struct.Reg* %1015, i32 0, i32 0
  %RAX.i1572 = bitcast %union.anon* %1016 to i64*
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1018 = getelementptr inbounds %struct.GPR, %struct.GPR* %1017, i32 0, i32 15
  %1019 = getelementptr inbounds %struct.Reg, %struct.Reg* %1018, i32 0, i32 0
  %RBP.i1573 = bitcast %union.anon* %1019 to i64*
  %1020 = load i64, i64* %RBP.i1573
  %1021 = sub i64 %1020, 12404
  %1022 = load i64, i64* %PC.i1571
  %1023 = add i64 %1022, 6
  store i64 %1023, i64* %PC.i1571
  %1024 = inttoptr i64 %1021 to i32*
  %1025 = load i32, i32* %1024
  %1026 = zext i32 %1025 to i64
  store i64 %1026, i64* %RAX.i1572, align 8
  store %struct.Memory* %loadMem_41abd5, %struct.Memory** %MEMORY
  %loadMem_41abdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1028 = getelementptr inbounds %struct.GPR, %struct.GPR* %1027, i32 0, i32 33
  %1029 = getelementptr inbounds %struct.Reg, %struct.Reg* %1028, i32 0, i32 0
  %PC.i1568 = bitcast %union.anon* %1029 to i64*
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1031 = getelementptr inbounds %struct.GPR, %struct.GPR* %1030, i32 0, i32 1
  %1032 = getelementptr inbounds %struct.Reg, %struct.Reg* %1031, i32 0, i32 0
  %EAX.i1569 = bitcast %union.anon* %1032 to i32*
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1034 = getelementptr inbounds %struct.GPR, %struct.GPR* %1033, i32 0, i32 15
  %1035 = getelementptr inbounds %struct.Reg, %struct.Reg* %1034, i32 0, i32 0
  %RBP.i1570 = bitcast %union.anon* %1035 to i64*
  %1036 = load i64, i64* %RBP.i1570
  %1037 = sub i64 %1036, 12408
  %1038 = load i32, i32* %EAX.i1569
  %1039 = zext i32 %1038 to i64
  %1040 = load i64, i64* %PC.i1568
  %1041 = add i64 %1040, 6
  store i64 %1041, i64* %PC.i1568
  %1042 = inttoptr i64 %1037 to i32*
  store i32 %1038, i32* %1042
  store %struct.Memory* %loadMem_41abdb, %struct.Memory** %MEMORY
  br label %block_.L_41abe1

block_.L_41abe1:                                  ; preds = %block_41abc4, %block_41ab91
  %loadMem_41abe1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1044 = getelementptr inbounds %struct.GPR, %struct.GPR* %1043, i32 0, i32 33
  %1045 = getelementptr inbounds %struct.Reg, %struct.Reg* %1044, i32 0, i32 0
  %PC.i1565 = bitcast %union.anon* %1045 to i64*
  %1046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1047 = getelementptr inbounds %struct.GPR, %struct.GPR* %1046, i32 0, i32 11
  %1048 = getelementptr inbounds %struct.Reg, %struct.Reg* %1047, i32 0, i32 0
  %RDI.i1566 = bitcast %union.anon* %1048 to i64*
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1050 = getelementptr inbounds %struct.GPR, %struct.GPR* %1049, i32 0, i32 15
  %1051 = getelementptr inbounds %struct.Reg, %struct.Reg* %1050, i32 0, i32 0
  %RBP.i1567 = bitcast %union.anon* %1051 to i64*
  %1052 = load i64, i64* %RBP.i1567
  %1053 = sub i64 %1052, 12400
  %1054 = load i64, i64* %PC.i1565
  %1055 = add i64 %1054, 7
  store i64 %1055, i64* %PC.i1565
  store i64 %1053, i64* %RDI.i1566, align 8
  store %struct.Memory* %loadMem_41abe1, %struct.Memory** %MEMORY
  %loadMem_41abe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1057 = getelementptr inbounds %struct.GPR, %struct.GPR* %1056, i32 0, i32 33
  %1058 = getelementptr inbounds %struct.Reg, %struct.Reg* %1057, i32 0, i32 0
  %PC.i1562 = bitcast %union.anon* %1058 to i64*
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1060 = getelementptr inbounds %struct.GPR, %struct.GPR* %1059, i32 0, i32 9
  %1061 = getelementptr inbounds %struct.Reg, %struct.Reg* %1060, i32 0, i32 0
  %RSI.i1563 = bitcast %union.anon* %1061 to i64*
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1063 = getelementptr inbounds %struct.GPR, %struct.GPR* %1062, i32 0, i32 15
  %1064 = getelementptr inbounds %struct.Reg, %struct.Reg* %1063, i32 0, i32 0
  %RBP.i1564 = bitcast %union.anon* %1064 to i64*
  %1065 = load i64, i64* %RBP.i1564
  %1066 = sub i64 %1065, 12404
  %1067 = load i64, i64* %PC.i1562
  %1068 = add i64 %1067, 6
  store i64 %1068, i64* %PC.i1562
  %1069 = inttoptr i64 %1066 to i32*
  %1070 = load i32, i32* %1069
  %1071 = zext i32 %1070 to i64
  store i64 %1071, i64* %RSI.i1563, align 8
  store %struct.Memory* %loadMem_41abe8, %struct.Memory** %MEMORY
  %loadMem1_41abee = load %struct.Memory*, %struct.Memory** %MEMORY
  %1072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1073 = getelementptr inbounds %struct.GPR, %struct.GPR* %1072, i32 0, i32 33
  %1074 = getelementptr inbounds %struct.Reg, %struct.Reg* %1073, i32 0, i32 0
  %PC.i1561 = bitcast %union.anon* %1074 to i64*
  %1075 = load i64, i64* %PC.i1561
  %1076 = add i64 %1075, -58446
  %1077 = load i64, i64* %PC.i1561
  %1078 = add i64 %1077, 5
  %1079 = load i64, i64* %PC.i1561
  %1080 = add i64 %1079, 5
  store i64 %1080, i64* %PC.i1561
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1082 = load i64, i64* %1081, align 8
  %1083 = add i64 %1082, -8
  %1084 = inttoptr i64 %1083 to i64*
  store i64 %1078, i64* %1084
  store i64 %1083, i64* %1081, align 8
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1076, i64* %1085, align 8
  store %struct.Memory* %loadMem1_41abee, %struct.Memory** %MEMORY
  %loadMem2_41abee = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41abee = load i64, i64* %3
  %call2_41abee = call %struct.Memory* @sub_40c7a0.unmake(%struct.State* %0, i64 %loadPC_41abee, %struct.Memory* %loadMem2_41abee)
  store %struct.Memory* %call2_41abee, %struct.Memory** %MEMORY
  %loadMem_41abf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1087 = getelementptr inbounds %struct.GPR, %struct.GPR* %1086, i32 0, i32 33
  %1088 = getelementptr inbounds %struct.Reg, %struct.Reg* %1087, i32 0, i32 0
  %PC.i1558 = bitcast %union.anon* %1088 to i64*
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1090 = getelementptr inbounds %struct.GPR, %struct.GPR* %1089, i32 0, i32 1
  %1091 = getelementptr inbounds %struct.Reg, %struct.Reg* %1090, i32 0, i32 0
  %RAX.i1559 = bitcast %union.anon* %1091 to i64*
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1093 = getelementptr inbounds %struct.GPR, %struct.GPR* %1092, i32 0, i32 15
  %1094 = getelementptr inbounds %struct.Reg, %struct.Reg* %1093, i32 0, i32 0
  %RBP.i1560 = bitcast %union.anon* %1094 to i64*
  %1095 = load i64, i64* %RBP.i1560
  %1096 = sub i64 %1095, 12404
  %1097 = load i64, i64* %PC.i1558
  %1098 = add i64 %1097, 6
  store i64 %1098, i64* %PC.i1558
  %1099 = inttoptr i64 %1096 to i32*
  %1100 = load i32, i32* %1099
  %1101 = zext i32 %1100 to i64
  store i64 %1101, i64* %RAX.i1559, align 8
  store %struct.Memory* %loadMem_41abf3, %struct.Memory** %MEMORY
  %loadMem_41abf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 33
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %PC.i1556 = bitcast %union.anon* %1104 to i64*
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1106 = getelementptr inbounds %struct.GPR, %struct.GPR* %1105, i32 0, i32 1
  %1107 = getelementptr inbounds %struct.Reg, %struct.Reg* %1106, i32 0, i32 0
  %RAX.i1557 = bitcast %union.anon* %1107 to i64*
  %1108 = load i64, i64* %RAX.i1557
  %1109 = load i64, i64* %PC.i1556
  %1110 = add i64 %1109, 3
  store i64 %1110, i64* %PC.i1556
  %1111 = trunc i64 %1108 to i32
  %1112 = add i32 1, %1111
  %1113 = zext i32 %1112 to i64
  store i64 %1113, i64* %RAX.i1557, align 8
  %1114 = icmp ult i32 %1112, %1111
  %1115 = icmp ult i32 %1112, 1
  %1116 = or i1 %1114, %1115
  %1117 = zext i1 %1116 to i8
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1117, i8* %1118, align 1
  %1119 = and i32 %1112, 255
  %1120 = call i32 @llvm.ctpop.i32(i32 %1119)
  %1121 = trunc i32 %1120 to i8
  %1122 = and i8 %1121, 1
  %1123 = xor i8 %1122, 1
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1123, i8* %1124, align 1
  %1125 = xor i64 1, %1108
  %1126 = trunc i64 %1125 to i32
  %1127 = xor i32 %1126, %1112
  %1128 = lshr i32 %1127, 4
  %1129 = trunc i32 %1128 to i8
  %1130 = and i8 %1129, 1
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1130, i8* %1131, align 1
  %1132 = icmp eq i32 %1112, 0
  %1133 = zext i1 %1132 to i8
  %1134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1133, i8* %1134, align 1
  %1135 = lshr i32 %1112, 31
  %1136 = trunc i32 %1135 to i8
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1136, i8* %1137, align 1
  %1138 = lshr i32 %1111, 31
  %1139 = xor i32 %1135, %1138
  %1140 = add i32 %1139, %1135
  %1141 = icmp eq i32 %1140, 2
  %1142 = zext i1 %1141 to i8
  %1143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1142, i8* %1143, align 1
  store %struct.Memory* %loadMem_41abf9, %struct.Memory** %MEMORY
  %loadMem_41abfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1145 = getelementptr inbounds %struct.GPR, %struct.GPR* %1144, i32 0, i32 33
  %1146 = getelementptr inbounds %struct.Reg, %struct.Reg* %1145, i32 0, i32 0
  %PC.i1553 = bitcast %union.anon* %1146 to i64*
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 1
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %EAX.i1554 = bitcast %union.anon* %1149 to i32*
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1151 = getelementptr inbounds %struct.GPR, %struct.GPR* %1150, i32 0, i32 15
  %1152 = getelementptr inbounds %struct.Reg, %struct.Reg* %1151, i32 0, i32 0
  %RBP.i1555 = bitcast %union.anon* %1152 to i64*
  %1153 = load i64, i64* %RBP.i1555
  %1154 = sub i64 %1153, 12404
  %1155 = load i32, i32* %EAX.i1554
  %1156 = zext i32 %1155 to i64
  %1157 = load i64, i64* %PC.i1553
  %1158 = add i64 %1157, 6
  store i64 %1158, i64* %PC.i1553
  %1159 = inttoptr i64 %1154 to i32*
  store i32 %1155, i32* %1159
  store %struct.Memory* %loadMem_41abfc, %struct.Memory** %MEMORY
  %loadMem_41ac02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1161 = getelementptr inbounds %struct.GPR, %struct.GPR* %1160, i32 0, i32 33
  %1162 = getelementptr inbounds %struct.Reg, %struct.Reg* %1161, i32 0, i32 0
  %PC.i1552 = bitcast %union.anon* %1162 to i64*
  %1163 = load i64, i64* %PC.i1552
  %1164 = add i64 %1163, -132
  %1165 = load i64, i64* %PC.i1552
  %1166 = add i64 %1165, 5
  store i64 %1166, i64* %PC.i1552
  %1167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1164, i64* %1167, align 8
  store %struct.Memory* %loadMem_41ac02, %struct.Memory** %MEMORY
  br label %block_.L_41ab7e

block_.L_41ac07:                                  ; preds = %block_.L_41ab7e
  %loadMem_41ac07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1169 = getelementptr inbounds %struct.GPR, %struct.GPR* %1168, i32 0, i32 33
  %1170 = getelementptr inbounds %struct.Reg, %struct.Reg* %1169, i32 0, i32 0
  %PC.i1551 = bitcast %union.anon* %1170 to i64*
  %1171 = load i64, i64* %PC.i1551
  %1172 = add i64 %1171, 8
  store i64 %1172, i64* %PC.i1551
  %1173 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %1174 = sub i32 %1173, 4
  %1175 = icmp ult i32 %1173, 4
  %1176 = zext i1 %1175 to i8
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1176, i8* %1177, align 1
  %1178 = and i32 %1174, 255
  %1179 = call i32 @llvm.ctpop.i32(i32 %1178)
  %1180 = trunc i32 %1179 to i8
  %1181 = and i8 %1180, 1
  %1182 = xor i8 %1181, 1
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1182, i8* %1183, align 1
  %1184 = xor i32 %1173, 4
  %1185 = xor i32 %1184, %1174
  %1186 = lshr i32 %1185, 4
  %1187 = trunc i32 %1186 to i8
  %1188 = and i8 %1187, 1
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1188, i8* %1189, align 1
  %1190 = icmp eq i32 %1174, 0
  %1191 = zext i1 %1190 to i8
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1191, i8* %1192, align 1
  %1193 = lshr i32 %1174, 31
  %1194 = trunc i32 %1193 to i8
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1194, i8* %1195, align 1
  %1196 = lshr i32 %1173, 31
  %1197 = xor i32 %1193, %1196
  %1198 = add i32 %1197, %1196
  %1199 = icmp eq i32 %1198, 2
  %1200 = zext i1 %1199 to i8
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1200, i8* %1201, align 1
  store %struct.Memory* %loadMem_41ac07, %struct.Memory** %MEMORY
  %loadMem_41ac0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1203 = getelementptr inbounds %struct.GPR, %struct.GPR* %1202, i32 0, i32 33
  %1204 = getelementptr inbounds %struct.Reg, %struct.Reg* %1203, i32 0, i32 0
  %PC.i1550 = bitcast %union.anon* %1204 to i64*
  %1205 = load i64, i64* %PC.i1550
  %1206 = add i64 %1205, 218
  %1207 = load i64, i64* %PC.i1550
  %1208 = add i64 %1207, 6
  %1209 = load i64, i64* %PC.i1550
  %1210 = add i64 %1209, 6
  store i64 %1210, i64* %PC.i1550
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1212 = load i8, i8* %1211, align 1
  %1213 = icmp eq i8 %1212, 0
  %1214 = zext i1 %1213 to i8
  store i8 %1214, i8* %BRANCH_TAKEN, align 1
  %1215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1216 = select i1 %1213, i64 %1206, i64 %1208
  store i64 %1216, i64* %1215, align 8
  store %struct.Memory* %loadMem_41ac0f, %struct.Memory** %MEMORY
  %loadBr_41ac0f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ac0f = icmp eq i8 %loadBr_41ac0f, 1
  br i1 %cmpBr_41ac0f, label %block_.L_41ace9, label %block_41ac15

block_41ac15:                                     ; preds = %block_.L_41ac07
  %loadMem_41ac15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1218 = getelementptr inbounds %struct.GPR, %struct.GPR* %1217, i32 0, i32 33
  %1219 = getelementptr inbounds %struct.Reg, %struct.Reg* %1218, i32 0, i32 0
  %PC.i1549 = bitcast %union.anon* %1219 to i64*
  %1220 = load i64, i64* %PC.i1549
  %1221 = add i64 %1220, 8
  store i64 %1221, i64* %PC.i1549
  %1222 = load i32, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  %1223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1223, align 1
  %1224 = and i32 %1222, 255
  %1225 = call i32 @llvm.ctpop.i32(i32 %1224)
  %1226 = trunc i32 %1225 to i8
  %1227 = and i8 %1226, 1
  %1228 = xor i8 %1227, 1
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1228, i8* %1229, align 1
  %1230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1230, align 1
  %1231 = icmp eq i32 %1222, 0
  %1232 = zext i1 %1231 to i8
  %1233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1232, i8* %1233, align 1
  %1234 = lshr i32 %1222, 31
  %1235 = trunc i32 %1234 to i8
  %1236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1235, i8* %1236, align 1
  %1237 = lshr i32 %1222, 31
  %1238 = xor i32 %1234, %1237
  %1239 = add i32 %1238, %1237
  %1240 = icmp eq i32 %1239, 2
  %1241 = zext i1 %1240 to i8
  %1242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1241, i8* %1242, align 1
  store %struct.Memory* %loadMem_41ac15, %struct.Memory** %MEMORY
  %loadMem_41ac1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1244 = getelementptr inbounds %struct.GPR, %struct.GPR* %1243, i32 0, i32 33
  %1245 = getelementptr inbounds %struct.Reg, %struct.Reg* %1244, i32 0, i32 0
  %PC.i1548 = bitcast %union.anon* %1245 to i64*
  %1246 = load i64, i64* %PC.i1548
  %1247 = add i64 %1246, 204
  %1248 = load i64, i64* %PC.i1548
  %1249 = add i64 %1248, 6
  %1250 = load i64, i64* %PC.i1548
  %1251 = add i64 %1250, 6
  store i64 %1251, i64* %PC.i1548
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1253 = load i8, i8* %1252, align 1
  %1254 = icmp eq i8 %1253, 0
  %1255 = zext i1 %1254 to i8
  store i8 %1255, i8* %BRANCH_TAKEN, align 1
  %1256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1257 = select i1 %1254, i64 %1247, i64 %1249
  store i64 %1257, i64* %1256, align 8
  store %struct.Memory* %loadMem_41ac1d, %struct.Memory** %MEMORY
  %loadBr_41ac1d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ac1d = icmp eq i8 %loadBr_41ac1d, 1
  br i1 %cmpBr_41ac1d, label %block_.L_41ace9, label %block_41ac23

block_41ac23:                                     ; preds = %block_41ac15
  %loadMem_41ac23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1259 = getelementptr inbounds %struct.GPR, %struct.GPR* %1258, i32 0, i32 33
  %1260 = getelementptr inbounds %struct.Reg, %struct.Reg* %1259, i32 0, i32 0
  %PC.i1545 = bitcast %union.anon* %1260 to i64*
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 11
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %RDI.i1546 = bitcast %union.anon* %1263 to i64*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1265 = getelementptr inbounds %struct.GPR, %struct.GPR* %1264, i32 0, i32 15
  %1266 = getelementptr inbounds %struct.Reg, %struct.Reg* %1265, i32 0, i32 0
  %RBP.i1547 = bitcast %union.anon* %1266 to i64*
  %1267 = load i64, i64* %RBP.i1547
  %1268 = sub i64 %1267, 12400
  %1269 = load i64, i64* %PC.i1545
  %1270 = add i64 %1269, 7
  store i64 %1270, i64* %PC.i1545
  store i64 %1268, i64* %RDI.i1546, align 8
  store %struct.Memory* %loadMem_41ac23, %struct.Memory** %MEMORY
  %loadMem_41ac2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1272 = getelementptr inbounds %struct.GPR, %struct.GPR* %1271, i32 0, i32 33
  %1273 = getelementptr inbounds %struct.Reg, %struct.Reg* %1272, i32 0, i32 0
  %PC.i1544 = bitcast %union.anon* %1273 to i64*
  %1274 = load i64, i64* %PC.i1544
  %1275 = add i64 %1274, 11
  store i64 %1275, i64* %PC.i1544
  store i32 0, i32* bitcast (%G_0x85f164_type* @G_0x85f164 to i32*)
  store %struct.Memory* %loadMem_41ac2a, %struct.Memory** %MEMORY
  %loadMem_41ac35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1277 = getelementptr inbounds %struct.GPR, %struct.GPR* %1276, i32 0, i32 33
  %1278 = getelementptr inbounds %struct.Reg, %struct.Reg* %1277, i32 0, i32 0
  %PC.i1542 = bitcast %union.anon* %1278 to i64*
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1280 = getelementptr inbounds %struct.GPR, %struct.GPR* %1279, i32 0, i32 15
  %1281 = getelementptr inbounds %struct.Reg, %struct.Reg* %1280, i32 0, i32 0
  %RBP.i1543 = bitcast %union.anon* %1281 to i64*
  %1282 = load i64, i64* %RBP.i1543
  %1283 = sub i64 %1282, 12420
  %1284 = load i64, i64* %PC.i1542
  %1285 = add i64 %1284, 10
  store i64 %1285, i64* %PC.i1542
  %1286 = inttoptr i64 %1283 to i32*
  store i32 0, i32* %1286
  store %struct.Memory* %loadMem_41ac35, %struct.Memory** %MEMORY
  %loadMem1_41ac3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %1287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1288 = getelementptr inbounds %struct.GPR, %struct.GPR* %1287, i32 0, i32 33
  %1289 = getelementptr inbounds %struct.Reg, %struct.Reg* %1288, i32 0, i32 0
  %PC.i1541 = bitcast %union.anon* %1289 to i64*
  %1290 = load i64, i64* %PC.i1541
  %1291 = add i64 %1290, -77327
  %1292 = load i64, i64* %PC.i1541
  %1293 = add i64 %1292, 5
  %1294 = load i64, i64* %PC.i1541
  %1295 = add i64 %1294, 5
  store i64 %1295, i64* %PC.i1541
  %1296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1297 = load i64, i64* %1296, align 8
  %1298 = add i64 %1297, -8
  %1299 = inttoptr i64 %1298 to i64*
  store i64 %1293, i64* %1299
  store i64 %1298, i64* %1296, align 8
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1291, i64* %1300, align 8
  store %struct.Memory* %loadMem1_41ac3f, %struct.Memory** %MEMORY
  %loadMem2_41ac3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ac3f = load i64, i64* %3
  %call2_41ac3f = call %struct.Memory* @sub_407e30.gen(%struct.State* %0, i64 %loadPC_41ac3f, %struct.Memory* %loadMem2_41ac3f)
  store %struct.Memory* %call2_41ac3f, %struct.Memory** %MEMORY
  %loadMem_41ac44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1302 = getelementptr inbounds %struct.GPR, %struct.GPR* %1301, i32 0, i32 33
  %1303 = getelementptr inbounds %struct.Reg, %struct.Reg* %1302, i32 0, i32 0
  %PC.i1539 = bitcast %union.anon* %1303 to i64*
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1305 = getelementptr inbounds %struct.GPR, %struct.GPR* %1304, i32 0, i32 1
  %1306 = getelementptr inbounds %struct.Reg, %struct.Reg* %1305, i32 0, i32 0
  %RAX.i1540 = bitcast %union.anon* %1306 to i64*
  %1307 = load i64, i64* %PC.i1539
  %1308 = add i64 %1307, 7
  store i64 %1308, i64* %PC.i1539
  %1309 = load i32, i32* bitcast (%G_0x85f150_type* @G_0x85f150 to i32*)
  %1310 = zext i32 %1309 to i64
  store i64 %1310, i64* %RAX.i1540, align 8
  store %struct.Memory* %loadMem_41ac44, %struct.Memory** %MEMORY
  %loadMem_41ac4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1312 = getelementptr inbounds %struct.GPR, %struct.GPR* %1311, i32 0, i32 33
  %1313 = getelementptr inbounds %struct.Reg, %struct.Reg* %1312, i32 0, i32 0
  %PC.i1536 = bitcast %union.anon* %1313 to i64*
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1315 = getelementptr inbounds %struct.GPR, %struct.GPR* %1314, i32 0, i32 1
  %1316 = getelementptr inbounds %struct.Reg, %struct.Reg* %1315, i32 0, i32 0
  %EAX.i1537 = bitcast %union.anon* %1316 to i32*
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 15
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %RBP.i1538 = bitcast %union.anon* %1319 to i64*
  %1320 = load i64, i64* %RBP.i1538
  %1321 = sub i64 %1320, 12420
  %1322 = load i32, i32* %EAX.i1537
  %1323 = zext i32 %1322 to i64
  %1324 = load i64, i64* %PC.i1536
  %1325 = add i64 %1324, 6
  store i64 %1325, i64* %PC.i1536
  %1326 = inttoptr i64 %1321 to i32*
  store i32 %1322, i32* %1326
  store %struct.Memory* %loadMem_41ac4b, %struct.Memory** %MEMORY
  %loadMem_41ac51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 33
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %PC.i1534 = bitcast %union.anon* %1329 to i64*
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 15
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %RBP.i1535 = bitcast %union.anon* %1332 to i64*
  %1333 = load i64, i64* %RBP.i1535
  %1334 = sub i64 %1333, 12404
  %1335 = load i64, i64* %PC.i1534
  %1336 = add i64 %1335, 10
  store i64 %1336, i64* %PC.i1534
  %1337 = inttoptr i64 %1334 to i32*
  store i32 0, i32* %1337
  store %struct.Memory* %loadMem_41ac51, %struct.Memory** %MEMORY
  br label %block_.L_41ac5b

block_.L_41ac5b:                                  ; preds = %block_.L_41acbe, %block_41ac23
  %loadMem_41ac5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1339 = getelementptr inbounds %struct.GPR, %struct.GPR* %1338, i32 0, i32 33
  %1340 = getelementptr inbounds %struct.Reg, %struct.Reg* %1339, i32 0, i32 0
  %PC.i1531 = bitcast %union.anon* %1340 to i64*
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1342 = getelementptr inbounds %struct.GPR, %struct.GPR* %1341, i32 0, i32 1
  %1343 = getelementptr inbounds %struct.Reg, %struct.Reg* %1342, i32 0, i32 0
  %RAX.i1532 = bitcast %union.anon* %1343 to i64*
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1345 = getelementptr inbounds %struct.GPR, %struct.GPR* %1344, i32 0, i32 15
  %1346 = getelementptr inbounds %struct.Reg, %struct.Reg* %1345, i32 0, i32 0
  %RBP.i1533 = bitcast %union.anon* %1346 to i64*
  %1347 = load i64, i64* %RBP.i1533
  %1348 = sub i64 %1347, 12404
  %1349 = load i64, i64* %PC.i1531
  %1350 = add i64 %1349, 6
  store i64 %1350, i64* %PC.i1531
  %1351 = inttoptr i64 %1348 to i32*
  %1352 = load i32, i32* %1351
  %1353 = zext i32 %1352 to i64
  store i64 %1353, i64* %RAX.i1532, align 8
  store %struct.Memory* %loadMem_41ac5b, %struct.Memory** %MEMORY
  %loadMem_41ac61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1355 = getelementptr inbounds %struct.GPR, %struct.GPR* %1354, i32 0, i32 33
  %1356 = getelementptr inbounds %struct.Reg, %struct.Reg* %1355, i32 0, i32 0
  %PC.i1529 = bitcast %union.anon* %1356 to i64*
  %1357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1358 = getelementptr inbounds %struct.GPR, %struct.GPR* %1357, i32 0, i32 1
  %1359 = getelementptr inbounds %struct.Reg, %struct.Reg* %1358, i32 0, i32 0
  %EAX.i1530 = bitcast %union.anon* %1359 to i32*
  %1360 = load i32, i32* %EAX.i1530
  %1361 = zext i32 %1360 to i64
  %1362 = load i64, i64* %PC.i1529
  %1363 = add i64 %1362, 7
  store i64 %1363, i64* %PC.i1529
  %1364 = load i32, i32* bitcast (%G_0x85f150_type* @G_0x85f150 to i32*)
  %1365 = sub i32 %1360, %1364
  %1366 = icmp ult i32 %1360, %1364
  %1367 = zext i1 %1366 to i8
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1367, i8* %1368, align 1
  %1369 = and i32 %1365, 255
  %1370 = call i32 @llvm.ctpop.i32(i32 %1369)
  %1371 = trunc i32 %1370 to i8
  %1372 = and i8 %1371, 1
  %1373 = xor i8 %1372, 1
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1373, i8* %1374, align 1
  %1375 = xor i32 %1364, %1360
  %1376 = xor i32 %1375, %1365
  %1377 = lshr i32 %1376, 4
  %1378 = trunc i32 %1377 to i8
  %1379 = and i8 %1378, 1
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1379, i8* %1380, align 1
  %1381 = icmp eq i32 %1365, 0
  %1382 = zext i1 %1381 to i8
  %1383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1382, i8* %1383, align 1
  %1384 = lshr i32 %1365, 31
  %1385 = trunc i32 %1384 to i8
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1385, i8* %1386, align 1
  %1387 = lshr i32 %1360, 31
  %1388 = lshr i32 %1364, 31
  %1389 = xor i32 %1388, %1387
  %1390 = xor i32 %1384, %1387
  %1391 = add i32 %1390, %1389
  %1392 = icmp eq i32 %1391, 2
  %1393 = zext i1 %1392 to i8
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1393, i8* %1394, align 1
  store %struct.Memory* %loadMem_41ac61, %struct.Memory** %MEMORY
  %loadMem_41ac68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1396 = getelementptr inbounds %struct.GPR, %struct.GPR* %1395, i32 0, i32 33
  %1397 = getelementptr inbounds %struct.Reg, %struct.Reg* %1396, i32 0, i32 0
  %PC.i1528 = bitcast %union.anon* %1397 to i64*
  %1398 = load i64, i64* %PC.i1528
  %1399 = add i64 %1398, 124
  %1400 = load i64, i64* %PC.i1528
  %1401 = add i64 %1400, 6
  %1402 = load i64, i64* %PC.i1528
  %1403 = add i64 %1402, 6
  store i64 %1403, i64* %PC.i1528
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1405 = load i8, i8* %1404, align 1
  %1406 = icmp ne i8 %1405, 0
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1408 = load i8, i8* %1407, align 1
  %1409 = icmp ne i8 %1408, 0
  %1410 = xor i1 %1406, %1409
  %1411 = xor i1 %1410, true
  %1412 = zext i1 %1411 to i8
  store i8 %1412, i8* %BRANCH_TAKEN, align 1
  %1413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1414 = select i1 %1410, i64 %1401, i64 %1399
  store i64 %1414, i64* %1413, align 8
  store %struct.Memory* %loadMem_41ac68, %struct.Memory** %MEMORY
  %loadBr_41ac68 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ac68 = icmp eq i8 %loadBr_41ac68, 1
  br i1 %cmpBr_41ac68, label %block_.L_41ace4, label %block_41ac6e

block_41ac6e:                                     ; preds = %block_.L_41ac5b
  %loadMem_41ac6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1416 = getelementptr inbounds %struct.GPR, %struct.GPR* %1415, i32 0, i32 33
  %1417 = getelementptr inbounds %struct.Reg, %struct.Reg* %1416, i32 0, i32 0
  %PC.i1525 = bitcast %union.anon* %1417 to i64*
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1419 = getelementptr inbounds %struct.GPR, %struct.GPR* %1418, i32 0, i32 11
  %1420 = getelementptr inbounds %struct.Reg, %struct.Reg* %1419, i32 0, i32 0
  %RDI.i1526 = bitcast %union.anon* %1420 to i64*
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1422 = getelementptr inbounds %struct.GPR, %struct.GPR* %1421, i32 0, i32 15
  %1423 = getelementptr inbounds %struct.Reg, %struct.Reg* %1422, i32 0, i32 0
  %RBP.i1527 = bitcast %union.anon* %1423 to i64*
  %1424 = load i64, i64* %RBP.i1527
  %1425 = sub i64 %1424, 12400
  %1426 = load i64, i64* %PC.i1525
  %1427 = add i64 %1426, 7
  store i64 %1427, i64* %PC.i1525
  store i64 %1425, i64* %RDI.i1526, align 8
  store %struct.Memory* %loadMem_41ac6e, %struct.Memory** %MEMORY
  %loadMem_41ac75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1429 = getelementptr inbounds %struct.GPR, %struct.GPR* %1428, i32 0, i32 33
  %1430 = getelementptr inbounds %struct.Reg, %struct.Reg* %1429, i32 0, i32 0
  %PC.i1522 = bitcast %union.anon* %1430 to i64*
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1432 = getelementptr inbounds %struct.GPR, %struct.GPR* %1431, i32 0, i32 9
  %1433 = getelementptr inbounds %struct.Reg, %struct.Reg* %1432, i32 0, i32 0
  %RSI.i1523 = bitcast %union.anon* %1433 to i64*
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1435 = getelementptr inbounds %struct.GPR, %struct.GPR* %1434, i32 0, i32 15
  %1436 = getelementptr inbounds %struct.Reg, %struct.Reg* %1435, i32 0, i32 0
  %RBP.i1524 = bitcast %union.anon* %1436 to i64*
  %1437 = load i64, i64* %RBP.i1524
  %1438 = sub i64 %1437, 12404
  %1439 = load i64, i64* %PC.i1522
  %1440 = add i64 %1439, 6
  store i64 %1440, i64* %PC.i1522
  %1441 = inttoptr i64 %1438 to i32*
  %1442 = load i32, i32* %1441
  %1443 = zext i32 %1442 to i64
  store i64 %1443, i64* %RSI.i1523, align 8
  store %struct.Memory* %loadMem_41ac75, %struct.Memory** %MEMORY
  %loadMem1_41ac7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1445 = getelementptr inbounds %struct.GPR, %struct.GPR* %1444, i32 0, i32 33
  %1446 = getelementptr inbounds %struct.Reg, %struct.Reg* %1445, i32 0, i32 0
  %PC.i1521 = bitcast %union.anon* %1446 to i64*
  %1447 = load i64, i64* %PC.i1521
  %1448 = add i64 %1447, -62795
  %1449 = load i64, i64* %PC.i1521
  %1450 = add i64 %1449, 5
  %1451 = load i64, i64* %PC.i1521
  %1452 = add i64 %1451, 5
  store i64 %1452, i64* %PC.i1521
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1454 = load i64, i64* %1453, align 8
  %1455 = add i64 %1454, -8
  %1456 = inttoptr i64 %1455 to i64*
  store i64 %1450, i64* %1456
  store i64 %1455, i64* %1453, align 8
  %1457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1448, i64* %1457, align 8
  store %struct.Memory* %loadMem1_41ac7b, %struct.Memory** %MEMORY
  %loadMem2_41ac7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ac7b = load i64, i64* %3
  %call2_41ac7b = call %struct.Memory* @sub_40b730.make(%struct.State* %0, i64 %loadPC_41ac7b, %struct.Memory* %loadMem2_41ac7b)
  store %struct.Memory* %call2_41ac7b, %struct.Memory** %MEMORY
  %loadMem_41ac80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1459 = getelementptr inbounds %struct.GPR, %struct.GPR* %1458, i32 0, i32 33
  %1460 = getelementptr inbounds %struct.Reg, %struct.Reg* %1459, i32 0, i32 0
  %PC.i1518 = bitcast %union.anon* %1460 to i64*
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1462 = getelementptr inbounds %struct.GPR, %struct.GPR* %1461, i32 0, i32 11
  %1463 = getelementptr inbounds %struct.Reg, %struct.Reg* %1462, i32 0, i32 0
  %RDI.i1519 = bitcast %union.anon* %1463 to i64*
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1465 = getelementptr inbounds %struct.GPR, %struct.GPR* %1464, i32 0, i32 15
  %1466 = getelementptr inbounds %struct.Reg, %struct.Reg* %1465, i32 0, i32 0
  %RBP.i1520 = bitcast %union.anon* %1466 to i64*
  %1467 = load i64, i64* %RBP.i1520
  %1468 = sub i64 %1467, 12400
  %1469 = load i64, i64* %PC.i1518
  %1470 = add i64 %1469, 7
  store i64 %1470, i64* %PC.i1518
  store i64 %1468, i64* %RDI.i1519, align 8
  store %struct.Memory* %loadMem_41ac80, %struct.Memory** %MEMORY
  %loadMem_41ac87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1472 = getelementptr inbounds %struct.GPR, %struct.GPR* %1471, i32 0, i32 33
  %1473 = getelementptr inbounds %struct.Reg, %struct.Reg* %1472, i32 0, i32 0
  %PC.i1515 = bitcast %union.anon* %1473 to i64*
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1475 = getelementptr inbounds %struct.GPR, %struct.GPR* %1474, i32 0, i32 9
  %1476 = getelementptr inbounds %struct.Reg, %struct.Reg* %1475, i32 0, i32 0
  %RSI.i1516 = bitcast %union.anon* %1476 to i64*
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 15
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %RBP.i1517 = bitcast %union.anon* %1479 to i64*
  %1480 = load i64, i64* %RBP.i1517
  %1481 = sub i64 %1480, 12404
  %1482 = load i64, i64* %PC.i1515
  %1483 = add i64 %1482, 6
  store i64 %1483, i64* %PC.i1515
  %1484 = inttoptr i64 %1481 to i32*
  %1485 = load i32, i32* %1484
  %1486 = zext i32 %1485 to i64
  store i64 %1486, i64* %RSI.i1516, align 8
  store %struct.Memory* %loadMem_41ac87, %struct.Memory** %MEMORY
  %loadMem_41ac8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1488 = getelementptr inbounds %struct.GPR, %struct.GPR* %1487, i32 0, i32 33
  %1489 = getelementptr inbounds %struct.Reg, %struct.Reg* %1488, i32 0, i32 0
  %PC.i1512 = bitcast %union.anon* %1489 to i64*
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1491 = getelementptr inbounds %struct.GPR, %struct.GPR* %1490, i32 0, i32 7
  %1492 = getelementptr inbounds %struct.Reg, %struct.Reg* %1491, i32 0, i32 0
  %RDX.i1513 = bitcast %union.anon* %1492 to i64*
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1494 = getelementptr inbounds %struct.GPR, %struct.GPR* %1493, i32 0, i32 15
  %1495 = getelementptr inbounds %struct.Reg, %struct.Reg* %1494, i32 0, i32 0
  %RBP.i1514 = bitcast %union.anon* %1495 to i64*
  %1496 = load i64, i64* %RBP.i1514
  %1497 = sub i64 %1496, 12412
  %1498 = load i64, i64* %PC.i1512
  %1499 = add i64 %1498, 6
  store i64 %1499, i64* %PC.i1512
  %1500 = inttoptr i64 %1497 to i32*
  %1501 = load i32, i32* %1500
  %1502 = zext i32 %1501 to i64
  store i64 %1502, i64* %RDX.i1513, align 8
  store %struct.Memory* %loadMem_41ac8d, %struct.Memory** %MEMORY
  %loadMem1_41ac93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1504 = getelementptr inbounds %struct.GPR, %struct.GPR* %1503, i32 0, i32 33
  %1505 = getelementptr inbounds %struct.Reg, %struct.Reg* %1504, i32 0, i32 0
  %PC.i1511 = bitcast %union.anon* %1505 to i64*
  %1506 = load i64, i64* %PC.i1511
  %1507 = add i64 %1506, -83475
  %1508 = load i64, i64* %PC.i1511
  %1509 = add i64 %1508, 5
  %1510 = load i64, i64* %PC.i1511
  %1511 = add i64 %1510, 5
  store i64 %1511, i64* %PC.i1511
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1513 = load i64, i64* %1512, align 8
  %1514 = add i64 %1513, -8
  %1515 = inttoptr i64 %1514 to i64*
  store i64 %1509, i64* %1515
  store i64 %1514, i64* %1512, align 8
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1507, i64* %1516, align 8
  store %struct.Memory* %loadMem1_41ac93, %struct.Memory** %MEMORY
  %loadMem2_41ac93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ac93 = load i64, i64* %3
  %call2_41ac93 = call %struct.Memory* @sub_406680.check_legal(%struct.State* %0, i64 %loadPC_41ac93, %struct.Memory* %loadMem2_41ac93)
  store %struct.Memory* %call2_41ac93, %struct.Memory** %MEMORY
  %loadMem_41ac98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1518 = getelementptr inbounds %struct.GPR, %struct.GPR* %1517, i32 0, i32 33
  %1519 = getelementptr inbounds %struct.Reg, %struct.Reg* %1518, i32 0, i32 0
  %PC.i1509 = bitcast %union.anon* %1519 to i64*
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1521 = getelementptr inbounds %struct.GPR, %struct.GPR* %1520, i32 0, i32 1
  %1522 = getelementptr inbounds %struct.Reg, %struct.Reg* %1521, i32 0, i32 0
  %EAX.i1510 = bitcast %union.anon* %1522 to i32*
  %1523 = load i32, i32* %EAX.i1510
  %1524 = zext i32 %1523 to i64
  %1525 = load i64, i64* %PC.i1509
  %1526 = add i64 %1525, 3
  store i64 %1526, i64* %PC.i1509
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1527, align 1
  %1528 = and i32 %1523, 255
  %1529 = call i32 @llvm.ctpop.i32(i32 %1528)
  %1530 = trunc i32 %1529 to i8
  %1531 = and i8 %1530, 1
  %1532 = xor i8 %1531, 1
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1532, i8* %1533, align 1
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1534, align 1
  %1535 = icmp eq i32 %1523, 0
  %1536 = zext i1 %1535 to i8
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1536, i8* %1537, align 1
  %1538 = lshr i32 %1523, 31
  %1539 = trunc i32 %1538 to i8
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1539, i8* %1540, align 1
  %1541 = lshr i32 %1523, 31
  %1542 = xor i32 %1538, %1541
  %1543 = add i32 %1542, %1541
  %1544 = icmp eq i32 %1543, 2
  %1545 = zext i1 %1544 to i8
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1545, i8* %1546, align 1
  store %struct.Memory* %loadMem_41ac98, %struct.Memory** %MEMORY
  %loadMem_41ac9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1548 = getelementptr inbounds %struct.GPR, %struct.GPR* %1547, i32 0, i32 33
  %1549 = getelementptr inbounds %struct.Reg, %struct.Reg* %1548, i32 0, i32 0
  %PC.i1508 = bitcast %union.anon* %1549 to i64*
  %1550 = load i64, i64* %PC.i1508
  %1551 = add i64 %1550, 35
  %1552 = load i64, i64* %PC.i1508
  %1553 = add i64 %1552, 6
  %1554 = load i64, i64* %PC.i1508
  %1555 = add i64 %1554, 6
  store i64 %1555, i64* %PC.i1508
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1557 = load i8, i8* %1556, align 1
  store i8 %1557, i8* %BRANCH_TAKEN, align 1
  %1558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1559 = icmp ne i8 %1557, 0
  %1560 = select i1 %1559, i64 %1551, i64 %1553
  store i64 %1560, i64* %1558, align 8
  store %struct.Memory* %loadMem_41ac9b, %struct.Memory** %MEMORY
  %loadBr_41ac9b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ac9b = icmp eq i8 %loadBr_41ac9b, 1
  br i1 %cmpBr_41ac9b, label %block_.L_41acbe, label %block_41aca1

block_41aca1:                                     ; preds = %block_41ac6e
  %loadMem_41aca1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1562 = getelementptr inbounds %struct.GPR, %struct.GPR* %1561, i32 0, i32 33
  %1563 = getelementptr inbounds %struct.Reg, %struct.Reg* %1562, i32 0, i32 0
  %PC.i1506 = bitcast %union.anon* %1563 to i64*
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1565 = getelementptr inbounds %struct.GPR, %struct.GPR* %1564, i32 0, i32 1
  %1566 = getelementptr inbounds %struct.Reg, %struct.Reg* %1565, i32 0, i32 0
  %RAX.i1507 = bitcast %union.anon* %1566 to i64*
  %1567 = load i64, i64* %PC.i1506
  %1568 = add i64 %1567, 7
  store i64 %1568, i64* %PC.i1506
  %1569 = load i32, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  %1570 = zext i32 %1569 to i64
  store i64 %1570, i64* %RAX.i1507, align 8
  store %struct.Memory* %loadMem_41aca1, %struct.Memory** %MEMORY
  %loadMem_41aca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1572 = getelementptr inbounds %struct.GPR, %struct.GPR* %1571, i32 0, i32 33
  %1573 = getelementptr inbounds %struct.Reg, %struct.Reg* %1572, i32 0, i32 0
  %PC.i1504 = bitcast %union.anon* %1573 to i64*
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1575 = getelementptr inbounds %struct.GPR, %struct.GPR* %1574, i32 0, i32 1
  %1576 = getelementptr inbounds %struct.Reg, %struct.Reg* %1575, i32 0, i32 0
  %RAX.i1505 = bitcast %union.anon* %1576 to i64*
  %1577 = load i64, i64* %RAX.i1505
  %1578 = load i64, i64* %PC.i1504
  %1579 = add i64 %1578, 3
  store i64 %1579, i64* %PC.i1504
  %1580 = trunc i64 %1577 to i32
  %1581 = add i32 1, %1580
  %1582 = zext i32 %1581 to i64
  store i64 %1582, i64* %RAX.i1505, align 8
  %1583 = icmp ult i32 %1581, %1580
  %1584 = icmp ult i32 %1581, 1
  %1585 = or i1 %1583, %1584
  %1586 = zext i1 %1585 to i8
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1586, i8* %1587, align 1
  %1588 = and i32 %1581, 255
  %1589 = call i32 @llvm.ctpop.i32(i32 %1588)
  %1590 = trunc i32 %1589 to i8
  %1591 = and i8 %1590, 1
  %1592 = xor i8 %1591, 1
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1592, i8* %1593, align 1
  %1594 = xor i64 1, %1577
  %1595 = trunc i64 %1594 to i32
  %1596 = xor i32 %1595, %1581
  %1597 = lshr i32 %1596, 4
  %1598 = trunc i32 %1597 to i8
  %1599 = and i8 %1598, 1
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1599, i8* %1600, align 1
  %1601 = icmp eq i32 %1581, 0
  %1602 = zext i1 %1601 to i8
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1602, i8* %1603, align 1
  %1604 = lshr i32 %1581, 31
  %1605 = trunc i32 %1604 to i8
  %1606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1605, i8* %1606, align 1
  %1607 = lshr i32 %1580, 31
  %1608 = xor i32 %1604, %1607
  %1609 = add i32 %1608, %1604
  %1610 = icmp eq i32 %1609, 2
  %1611 = zext i1 %1610 to i8
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1611, i8* %1612, align 1
  store %struct.Memory* %loadMem_41aca8, %struct.Memory** %MEMORY
  %loadMem_41acab = load %struct.Memory*, %struct.Memory** %MEMORY
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1614 = getelementptr inbounds %struct.GPR, %struct.GPR* %1613, i32 0, i32 33
  %1615 = getelementptr inbounds %struct.Reg, %struct.Reg* %1614, i32 0, i32 0
  %PC.i1502 = bitcast %union.anon* %1615 to i64*
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1617 = getelementptr inbounds %struct.GPR, %struct.GPR* %1616, i32 0, i32 1
  %1618 = getelementptr inbounds %struct.Reg, %struct.Reg* %1617, i32 0, i32 0
  %EAX.i1503 = bitcast %union.anon* %1618 to i32*
  %1619 = load i32, i32* %EAX.i1503
  %1620 = zext i32 %1619 to i64
  %1621 = load i64, i64* %PC.i1502
  %1622 = add i64 %1621, 7
  store i64 %1622, i64* %PC.i1502
  store i32 %1619, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  store %struct.Memory* %loadMem_41acab, %struct.Memory** %MEMORY
  %loadMem_41acb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1624 = getelementptr inbounds %struct.GPR, %struct.GPR* %1623, i32 0, i32 33
  %1625 = getelementptr inbounds %struct.Reg, %struct.Reg* %1624, i32 0, i32 0
  %PC.i1499 = bitcast %union.anon* %1625 to i64*
  %1626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1627 = getelementptr inbounds %struct.GPR, %struct.GPR* %1626, i32 0, i32 1
  %1628 = getelementptr inbounds %struct.Reg, %struct.Reg* %1627, i32 0, i32 0
  %RAX.i1500 = bitcast %union.anon* %1628 to i64*
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1630 = getelementptr inbounds %struct.GPR, %struct.GPR* %1629, i32 0, i32 15
  %1631 = getelementptr inbounds %struct.Reg, %struct.Reg* %1630, i32 0, i32 0
  %RBP.i1501 = bitcast %union.anon* %1631 to i64*
  %1632 = load i64, i64* %RBP.i1501
  %1633 = sub i64 %1632, 12404
  %1634 = load i64, i64* %PC.i1499
  %1635 = add i64 %1634, 6
  store i64 %1635, i64* %PC.i1499
  %1636 = inttoptr i64 %1633 to i32*
  %1637 = load i32, i32* %1636
  %1638 = zext i32 %1637 to i64
  store i64 %1638, i64* %RAX.i1500, align 8
  store %struct.Memory* %loadMem_41acb2, %struct.Memory** %MEMORY
  %loadMem_41acb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1640 = getelementptr inbounds %struct.GPR, %struct.GPR* %1639, i32 0, i32 33
  %1641 = getelementptr inbounds %struct.Reg, %struct.Reg* %1640, i32 0, i32 0
  %PC.i1496 = bitcast %union.anon* %1641 to i64*
  %1642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1643 = getelementptr inbounds %struct.GPR, %struct.GPR* %1642, i32 0, i32 1
  %1644 = getelementptr inbounds %struct.Reg, %struct.Reg* %1643, i32 0, i32 0
  %EAX.i1497 = bitcast %union.anon* %1644 to i32*
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1646 = getelementptr inbounds %struct.GPR, %struct.GPR* %1645, i32 0, i32 15
  %1647 = getelementptr inbounds %struct.Reg, %struct.Reg* %1646, i32 0, i32 0
  %RBP.i1498 = bitcast %union.anon* %1647 to i64*
  %1648 = load i64, i64* %RBP.i1498
  %1649 = sub i64 %1648, 12408
  %1650 = load i32, i32* %EAX.i1497
  %1651 = zext i32 %1650 to i64
  %1652 = load i64, i64* %PC.i1496
  %1653 = add i64 %1652, 6
  store i64 %1653, i64* %PC.i1496
  %1654 = inttoptr i64 %1649 to i32*
  store i32 %1650, i32* %1654
  store %struct.Memory* %loadMem_41acb8, %struct.Memory** %MEMORY
  br label %block_.L_41acbe

block_.L_41acbe:                                  ; preds = %block_41aca1, %block_41ac6e
  %loadMem_41acbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1656 = getelementptr inbounds %struct.GPR, %struct.GPR* %1655, i32 0, i32 33
  %1657 = getelementptr inbounds %struct.Reg, %struct.Reg* %1656, i32 0, i32 0
  %PC.i1493 = bitcast %union.anon* %1657 to i64*
  %1658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1659 = getelementptr inbounds %struct.GPR, %struct.GPR* %1658, i32 0, i32 11
  %1660 = getelementptr inbounds %struct.Reg, %struct.Reg* %1659, i32 0, i32 0
  %RDI.i1494 = bitcast %union.anon* %1660 to i64*
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1662 = getelementptr inbounds %struct.GPR, %struct.GPR* %1661, i32 0, i32 15
  %1663 = getelementptr inbounds %struct.Reg, %struct.Reg* %1662, i32 0, i32 0
  %RBP.i1495 = bitcast %union.anon* %1663 to i64*
  %1664 = load i64, i64* %RBP.i1495
  %1665 = sub i64 %1664, 12400
  %1666 = load i64, i64* %PC.i1493
  %1667 = add i64 %1666, 7
  store i64 %1667, i64* %PC.i1493
  store i64 %1665, i64* %RDI.i1494, align 8
  store %struct.Memory* %loadMem_41acbe, %struct.Memory** %MEMORY
  %loadMem_41acc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1669 = getelementptr inbounds %struct.GPR, %struct.GPR* %1668, i32 0, i32 33
  %1670 = getelementptr inbounds %struct.Reg, %struct.Reg* %1669, i32 0, i32 0
  %PC.i1490 = bitcast %union.anon* %1670 to i64*
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1672 = getelementptr inbounds %struct.GPR, %struct.GPR* %1671, i32 0, i32 9
  %1673 = getelementptr inbounds %struct.Reg, %struct.Reg* %1672, i32 0, i32 0
  %RSI.i1491 = bitcast %union.anon* %1673 to i64*
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1675 = getelementptr inbounds %struct.GPR, %struct.GPR* %1674, i32 0, i32 15
  %1676 = getelementptr inbounds %struct.Reg, %struct.Reg* %1675, i32 0, i32 0
  %RBP.i1492 = bitcast %union.anon* %1676 to i64*
  %1677 = load i64, i64* %RBP.i1492
  %1678 = sub i64 %1677, 12404
  %1679 = load i64, i64* %PC.i1490
  %1680 = add i64 %1679, 6
  store i64 %1680, i64* %PC.i1490
  %1681 = inttoptr i64 %1678 to i32*
  %1682 = load i32, i32* %1681
  %1683 = zext i32 %1682 to i64
  store i64 %1683, i64* %RSI.i1491, align 8
  store %struct.Memory* %loadMem_41acc5, %struct.Memory** %MEMORY
  %loadMem1_41accb = load %struct.Memory*, %struct.Memory** %MEMORY
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1685 = getelementptr inbounds %struct.GPR, %struct.GPR* %1684, i32 0, i32 33
  %1686 = getelementptr inbounds %struct.Reg, %struct.Reg* %1685, i32 0, i32 0
  %PC.i1489 = bitcast %union.anon* %1686 to i64*
  %1687 = load i64, i64* %PC.i1489
  %1688 = add i64 %1687, -58667
  %1689 = load i64, i64* %PC.i1489
  %1690 = add i64 %1689, 5
  %1691 = load i64, i64* %PC.i1489
  %1692 = add i64 %1691, 5
  store i64 %1692, i64* %PC.i1489
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1694 = load i64, i64* %1693, align 8
  %1695 = add i64 %1694, -8
  %1696 = inttoptr i64 %1695 to i64*
  store i64 %1690, i64* %1696
  store i64 %1695, i64* %1693, align 8
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1688, i64* %1697, align 8
  store %struct.Memory* %loadMem1_41accb, %struct.Memory** %MEMORY
  %loadMem2_41accb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41accb = load i64, i64* %3
  %call2_41accb = call %struct.Memory* @sub_40c7a0.unmake(%struct.State* %0, i64 %loadPC_41accb, %struct.Memory* %loadMem2_41accb)
  store %struct.Memory* %call2_41accb, %struct.Memory** %MEMORY
  %loadMem_41acd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1699 = getelementptr inbounds %struct.GPR, %struct.GPR* %1698, i32 0, i32 33
  %1700 = getelementptr inbounds %struct.Reg, %struct.Reg* %1699, i32 0, i32 0
  %PC.i1486 = bitcast %union.anon* %1700 to i64*
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1702 = getelementptr inbounds %struct.GPR, %struct.GPR* %1701, i32 0, i32 1
  %1703 = getelementptr inbounds %struct.Reg, %struct.Reg* %1702, i32 0, i32 0
  %RAX.i1487 = bitcast %union.anon* %1703 to i64*
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1705 = getelementptr inbounds %struct.GPR, %struct.GPR* %1704, i32 0, i32 15
  %1706 = getelementptr inbounds %struct.Reg, %struct.Reg* %1705, i32 0, i32 0
  %RBP.i1488 = bitcast %union.anon* %1706 to i64*
  %1707 = load i64, i64* %RBP.i1488
  %1708 = sub i64 %1707, 12404
  %1709 = load i64, i64* %PC.i1486
  %1710 = add i64 %1709, 6
  store i64 %1710, i64* %PC.i1486
  %1711 = inttoptr i64 %1708 to i32*
  %1712 = load i32, i32* %1711
  %1713 = zext i32 %1712 to i64
  store i64 %1713, i64* %RAX.i1487, align 8
  store %struct.Memory* %loadMem_41acd0, %struct.Memory** %MEMORY
  %loadMem_41acd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1715 = getelementptr inbounds %struct.GPR, %struct.GPR* %1714, i32 0, i32 33
  %1716 = getelementptr inbounds %struct.Reg, %struct.Reg* %1715, i32 0, i32 0
  %PC.i1484 = bitcast %union.anon* %1716 to i64*
  %1717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1718 = getelementptr inbounds %struct.GPR, %struct.GPR* %1717, i32 0, i32 1
  %1719 = getelementptr inbounds %struct.Reg, %struct.Reg* %1718, i32 0, i32 0
  %RAX.i1485 = bitcast %union.anon* %1719 to i64*
  %1720 = load i64, i64* %RAX.i1485
  %1721 = load i64, i64* %PC.i1484
  %1722 = add i64 %1721, 3
  store i64 %1722, i64* %PC.i1484
  %1723 = trunc i64 %1720 to i32
  %1724 = add i32 1, %1723
  %1725 = zext i32 %1724 to i64
  store i64 %1725, i64* %RAX.i1485, align 8
  %1726 = icmp ult i32 %1724, %1723
  %1727 = icmp ult i32 %1724, 1
  %1728 = or i1 %1726, %1727
  %1729 = zext i1 %1728 to i8
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1729, i8* %1730, align 1
  %1731 = and i32 %1724, 255
  %1732 = call i32 @llvm.ctpop.i32(i32 %1731)
  %1733 = trunc i32 %1732 to i8
  %1734 = and i8 %1733, 1
  %1735 = xor i8 %1734, 1
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1735, i8* %1736, align 1
  %1737 = xor i64 1, %1720
  %1738 = trunc i64 %1737 to i32
  %1739 = xor i32 %1738, %1724
  %1740 = lshr i32 %1739, 4
  %1741 = trunc i32 %1740 to i8
  %1742 = and i8 %1741, 1
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1742, i8* %1743, align 1
  %1744 = icmp eq i32 %1724, 0
  %1745 = zext i1 %1744 to i8
  %1746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1745, i8* %1746, align 1
  %1747 = lshr i32 %1724, 31
  %1748 = trunc i32 %1747 to i8
  %1749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1748, i8* %1749, align 1
  %1750 = lshr i32 %1723, 31
  %1751 = xor i32 %1747, %1750
  %1752 = add i32 %1751, %1747
  %1753 = icmp eq i32 %1752, 2
  %1754 = zext i1 %1753 to i8
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1754, i8* %1755, align 1
  store %struct.Memory* %loadMem_41acd6, %struct.Memory** %MEMORY
  %loadMem_41acd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1757 = getelementptr inbounds %struct.GPR, %struct.GPR* %1756, i32 0, i32 33
  %1758 = getelementptr inbounds %struct.Reg, %struct.Reg* %1757, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %1758 to i64*
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 1
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %EAX.i1482 = bitcast %union.anon* %1761 to i32*
  %1762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1763 = getelementptr inbounds %struct.GPR, %struct.GPR* %1762, i32 0, i32 15
  %1764 = getelementptr inbounds %struct.Reg, %struct.Reg* %1763, i32 0, i32 0
  %RBP.i1483 = bitcast %union.anon* %1764 to i64*
  %1765 = load i64, i64* %RBP.i1483
  %1766 = sub i64 %1765, 12404
  %1767 = load i32, i32* %EAX.i1482
  %1768 = zext i32 %1767 to i64
  %1769 = load i64, i64* %PC.i1481
  %1770 = add i64 %1769, 6
  store i64 %1770, i64* %PC.i1481
  %1771 = inttoptr i64 %1766 to i32*
  store i32 %1767, i32* %1771
  store %struct.Memory* %loadMem_41acd9, %struct.Memory** %MEMORY
  %loadMem_41acdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %1772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1773 = getelementptr inbounds %struct.GPR, %struct.GPR* %1772, i32 0, i32 33
  %1774 = getelementptr inbounds %struct.Reg, %struct.Reg* %1773, i32 0, i32 0
  %PC.i1480 = bitcast %union.anon* %1774 to i64*
  %1775 = load i64, i64* %PC.i1480
  %1776 = add i64 %1775, -132
  %1777 = load i64, i64* %PC.i1480
  %1778 = add i64 %1777, 5
  store i64 %1778, i64* %PC.i1480
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1776, i64* %1779, align 8
  store %struct.Memory* %loadMem_41acdf, %struct.Memory** %MEMORY
  br label %block_.L_41ac5b

block_.L_41ace4:                                  ; preds = %block_.L_41ac5b
  %loadMem_41ace4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1781 = getelementptr inbounds %struct.GPR, %struct.GPR* %1780, i32 0, i32 33
  %1782 = getelementptr inbounds %struct.Reg, %struct.Reg* %1781, i32 0, i32 0
  %PC.i1479 = bitcast %union.anon* %1782 to i64*
  %1783 = load i64, i64* %PC.i1479
  %1784 = add i64 %1783, 5
  %1785 = load i64, i64* %PC.i1479
  %1786 = add i64 %1785, 5
  store i64 %1786, i64* %PC.i1479
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1784, i64* %1787, align 8
  store %struct.Memory* %loadMem_41ace4, %struct.Memory** %MEMORY
  br label %block_.L_41ace9

block_.L_41ace9:                                  ; preds = %block_.L_41ace4, %block_41ac15, %block_.L_41ac07
  %loadMem_41ace9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1789 = getelementptr inbounds %struct.GPR, %struct.GPR* %1788, i32 0, i32 33
  %1790 = getelementptr inbounds %struct.Reg, %struct.Reg* %1789, i32 0, i32 0
  %PC.i1478 = bitcast %union.anon* %1790 to i64*
  %1791 = load i64, i64* %PC.i1478
  %1792 = add i64 %1791, 8
  store i64 %1792, i64* %PC.i1478
  %1793 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %1794 = sub i32 %1793, 1
  %1795 = icmp ult i32 %1793, 1
  %1796 = zext i1 %1795 to i8
  %1797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1796, i8* %1797, align 1
  %1798 = and i32 %1794, 255
  %1799 = call i32 @llvm.ctpop.i32(i32 %1798)
  %1800 = trunc i32 %1799 to i8
  %1801 = and i8 %1800, 1
  %1802 = xor i8 %1801, 1
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1802, i8* %1803, align 1
  %1804 = xor i32 %1793, 1
  %1805 = xor i32 %1804, %1794
  %1806 = lshr i32 %1805, 4
  %1807 = trunc i32 %1806 to i8
  %1808 = and i8 %1807, 1
  %1809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1808, i8* %1809, align 1
  %1810 = icmp eq i32 %1794, 0
  %1811 = zext i1 %1810 to i8
  %1812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1811, i8* %1812, align 1
  %1813 = lshr i32 %1794, 31
  %1814 = trunc i32 %1813 to i8
  %1815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1814, i8* %1815, align 1
  %1816 = lshr i32 %1793, 31
  %1817 = xor i32 %1813, %1816
  %1818 = add i32 %1817, %1816
  %1819 = icmp eq i32 %1818, 2
  %1820 = zext i1 %1819 to i8
  %1821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1820, i8* %1821, align 1
  store %struct.Memory* %loadMem_41ace9, %struct.Memory** %MEMORY
  %loadMem_41acf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1823 = getelementptr inbounds %struct.GPR, %struct.GPR* %1822, i32 0, i32 33
  %1824 = getelementptr inbounds %struct.Reg, %struct.Reg* %1823, i32 0, i32 0
  %PC.i1477 = bitcast %union.anon* %1824 to i64*
  %1825 = load i64, i64* %PC.i1477
  %1826 = add i64 %1825, 116
  %1827 = load i64, i64* %PC.i1477
  %1828 = add i64 %1827, 6
  %1829 = load i64, i64* %PC.i1477
  %1830 = add i64 %1829, 6
  store i64 %1830, i64* %PC.i1477
  %1831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1832 = load i8, i8* %1831, align 1
  store i8 %1832, i8* %BRANCH_TAKEN, align 1
  %1833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1834 = icmp ne i8 %1832, 0
  %1835 = select i1 %1834, i64 %1826, i64 %1828
  store i64 %1835, i64* %1833, align 8
  store %struct.Memory* %loadMem_41acf1, %struct.Memory** %MEMORY
  %loadBr_41acf1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41acf1 = icmp eq i8 %loadBr_41acf1, 1
  br i1 %cmpBr_41acf1, label %block_.L_41ad65, label %block_41acf7

block_41acf7:                                     ; preds = %block_.L_41ace9
  %loadMem_41acf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1837 = getelementptr inbounds %struct.GPR, %struct.GPR* %1836, i32 0, i32 33
  %1838 = getelementptr inbounds %struct.Reg, %struct.Reg* %1837, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %1838 to i64*
  %1839 = load i64, i64* %PC.i1476
  %1840 = add i64 %1839, 8
  store i64 %1840, i64* %PC.i1476
  %1841 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %1842, align 1
  %1843 = and i32 %1841, 255
  %1844 = call i32 @llvm.ctpop.i32(i32 %1843)
  %1845 = trunc i32 %1844 to i8
  %1846 = and i8 %1845, 1
  %1847 = xor i8 %1846, 1
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1847, i8* %1848, align 1
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1849, align 1
  %1850 = icmp eq i32 %1841, 0
  %1851 = zext i1 %1850 to i8
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1851, i8* %1852, align 1
  %1853 = lshr i32 %1841, 31
  %1854 = trunc i32 %1853 to i8
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1854, i8* %1855, align 1
  %1856 = lshr i32 %1841, 31
  %1857 = xor i32 %1853, %1856
  %1858 = add i32 %1857, %1856
  %1859 = icmp eq i32 %1858, 2
  %1860 = zext i1 %1859 to i8
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1860, i8* %1861, align 1
  store %struct.Memory* %loadMem_41acf7, %struct.Memory** %MEMORY
  %loadMem_41acff = load %struct.Memory*, %struct.Memory** %MEMORY
  %1862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1863 = getelementptr inbounds %struct.GPR, %struct.GPR* %1862, i32 0, i32 33
  %1864 = getelementptr inbounds %struct.Reg, %struct.Reg* %1863, i32 0, i32 0
  %PC.i1475 = bitcast %union.anon* %1864 to i64*
  %1865 = load i64, i64* %PC.i1475
  %1866 = add i64 %1865, 102
  %1867 = load i64, i64* %PC.i1475
  %1868 = add i64 %1867, 6
  %1869 = load i64, i64* %PC.i1475
  %1870 = add i64 %1869, 6
  store i64 %1870, i64* %PC.i1475
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1872 = load i8, i8* %1871, align 1
  %1873 = icmp eq i8 %1872, 0
  %1874 = zext i1 %1873 to i8
  store i8 %1874, i8* %BRANCH_TAKEN, align 1
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1876 = select i1 %1873, i64 %1866, i64 %1868
  store i64 %1876, i64* %1875, align 8
  store %struct.Memory* %loadMem_41acff, %struct.Memory** %MEMORY
  %loadBr_41acff = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41acff = icmp eq i8 %loadBr_41acff, 1
  br i1 %cmpBr_41acff, label %block_.L_41ad65, label %block_41ad05

block_41ad05:                                     ; preds = %block_41acf7
  %loadMem_41ad05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 33
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %PC.i1474 = bitcast %union.anon* %1879 to i64*
  %1880 = load i64, i64* %PC.i1474
  %1881 = add i64 %1880, 8
  store i64 %1881, i64* %PC.i1474
  %1882 = load i32, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  %1883 = sub i32 %1882, 1
  %1884 = icmp ult i32 %1882, 1
  %1885 = zext i1 %1884 to i8
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1885, i8* %1886, align 1
  %1887 = and i32 %1883, 255
  %1888 = call i32 @llvm.ctpop.i32(i32 %1887)
  %1889 = trunc i32 %1888 to i8
  %1890 = and i8 %1889, 1
  %1891 = xor i8 %1890, 1
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1891, i8* %1892, align 1
  %1893 = xor i32 %1882, 1
  %1894 = xor i32 %1893, %1883
  %1895 = lshr i32 %1894, 4
  %1896 = trunc i32 %1895 to i8
  %1897 = and i8 %1896, 1
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1897, i8* %1898, align 1
  %1899 = icmp eq i32 %1883, 0
  %1900 = zext i1 %1899 to i8
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1900, i8* %1901, align 1
  %1902 = lshr i32 %1883, 31
  %1903 = trunc i32 %1902 to i8
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1903, i8* %1904, align 1
  %1905 = lshr i32 %1882, 31
  %1906 = xor i32 %1902, %1905
  %1907 = add i32 %1906, %1905
  %1908 = icmp eq i32 %1907, 2
  %1909 = zext i1 %1908 to i8
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1909, i8* %1910, align 1
  store %struct.Memory* %loadMem_41ad05, %struct.Memory** %MEMORY
  %loadMem_41ad0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1912 = getelementptr inbounds %struct.GPR, %struct.GPR* %1911, i32 0, i32 33
  %1913 = getelementptr inbounds %struct.Reg, %struct.Reg* %1912, i32 0, i32 0
  %PC.i1473 = bitcast %union.anon* %1913 to i64*
  %1914 = load i64, i64* %PC.i1473
  %1915 = add i64 %1914, 83
  %1916 = load i64, i64* %PC.i1473
  %1917 = add i64 %1916, 6
  %1918 = load i64, i64* %PC.i1473
  %1919 = add i64 %1918, 6
  store i64 %1919, i64* %PC.i1473
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1921 = load i8, i8* %1920, align 1
  %1922 = icmp eq i8 %1921, 0
  %1923 = zext i1 %1922 to i8
  store i8 %1923, i8* %BRANCH_TAKEN, align 1
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1925 = select i1 %1922, i64 %1915, i64 %1917
  store i64 %1925, i64* %1924, align 8
  store %struct.Memory* %loadMem_41ad0d, %struct.Memory** %MEMORY
  %loadBr_41ad0d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ad0d = icmp eq i8 %loadBr_41ad0d, 1
  br i1 %cmpBr_41ad0d, label %block_.L_41ad60, label %block_41ad13

block_41ad13:                                     ; preds = %block_41ad05
  %loadMem_41ad13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1927 = getelementptr inbounds %struct.GPR, %struct.GPR* %1926, i32 0, i32 33
  %1928 = getelementptr inbounds %struct.Reg, %struct.Reg* %1927, i32 0, i32 0
  %PC.i1470 = bitcast %union.anon* %1928 to i64*
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1930 = getelementptr inbounds %struct.GPR, %struct.GPR* %1929, i32 0, i32 1
  %1931 = getelementptr inbounds %struct.Reg, %struct.Reg* %1930, i32 0, i32 0
  %RAX.i1471 = bitcast %union.anon* %1931 to i64*
  %1932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1933 = getelementptr inbounds %struct.GPR, %struct.GPR* %1932, i32 0, i32 15
  %1934 = getelementptr inbounds %struct.Reg, %struct.Reg* %1933, i32 0, i32 0
  %RBP.i1472 = bitcast %union.anon* %1934 to i64*
  %1935 = load i64, i64* %RBP.i1472
  %1936 = sub i64 %1935, 12400
  %1937 = load i64, i64* %PC.i1470
  %1938 = add i64 %1937, 7
  store i64 %1938, i64* %PC.i1470
  store i64 %1936, i64* %RAX.i1471, align 8
  store %struct.Memory* %loadMem_41ad13, %struct.Memory** %MEMORY
  %loadMem_41ad1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %1939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1940 = getelementptr inbounds %struct.GPR, %struct.GPR* %1939, i32 0, i32 33
  %1941 = getelementptr inbounds %struct.Reg, %struct.Reg* %1940, i32 0, i32 0
  %PC.i1468 = bitcast %union.anon* %1941 to i64*
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 5
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %RCX.i1469 = bitcast %union.anon* %1944 to i64*
  %1945 = load i64, i64* %PC.i1468
  %1946 = add i64 %1945, 8
  store i64 %1946, i64* %PC.i1468
  %1947 = load i32, i32* bitcast (%G_0x8a0a78_type* @G_0x8a0a78 to i32*)
  %1948 = sext i32 %1947 to i64
  %1949 = mul i64 %1948, 100
  %1950 = trunc i64 %1949 to i32
  %1951 = and i64 %1949, 4294967295
  store i64 %1951, i64* %RCX.i1469, align 8
  %1952 = shl i64 %1949, 32
  %1953 = ashr exact i64 %1952, 32
  %1954 = icmp ne i64 %1953, %1949
  %1955 = zext i1 %1954 to i8
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1955, i8* %1956, align 1
  %1957 = and i32 %1950, 255
  %1958 = call i32 @llvm.ctpop.i32(i32 %1957)
  %1959 = trunc i32 %1958 to i8
  %1960 = and i8 %1959, 1
  %1961 = xor i8 %1960, 1
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1961, i8* %1962, align 1
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1963, align 1
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1964, align 1
  %1965 = lshr i32 %1950, 31
  %1966 = trunc i32 %1965 to i8
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1966, i8* %1967, align 1
  %1968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1955, i8* %1968, align 1
  store %struct.Memory* %loadMem_41ad1a, %struct.Memory** %MEMORY
  %loadMem_41ad22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1970 = getelementptr inbounds %struct.GPR, %struct.GPR* %1969, i32 0, i32 33
  %1971 = getelementptr inbounds %struct.Reg, %struct.Reg* %1970, i32 0, i32 0
  %PC.i1466 = bitcast %union.anon* %1971 to i64*
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1973 = getelementptr inbounds %struct.GPR, %struct.GPR* %1972, i32 0, i32 5
  %1974 = getelementptr inbounds %struct.Reg, %struct.Reg* %1973, i32 0, i32 0
  %RCX.i1467 = bitcast %union.anon* %1974 to i64*
  %1975 = load i64, i64* %RCX.i1467
  %1976 = load i64, i64* %PC.i1466
  %1977 = add i64 %1976, 7
  store i64 %1977, i64* %PC.i1466
  %1978 = trunc i64 %1975 to i32
  %1979 = load i32, i32* bitcast (%G_0x86bd88_type* @G_0x86bd88 to i32*)
  %1980 = add i32 %1979, %1978
  %1981 = zext i32 %1980 to i64
  store i64 %1981, i64* %RCX.i1467, align 8
  %1982 = icmp ult i32 %1980, %1978
  %1983 = icmp ult i32 %1980, %1979
  %1984 = or i1 %1982, %1983
  %1985 = zext i1 %1984 to i8
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1985, i8* %1986, align 1
  %1987 = and i32 %1980, 255
  %1988 = call i32 @llvm.ctpop.i32(i32 %1987)
  %1989 = trunc i32 %1988 to i8
  %1990 = and i8 %1989, 1
  %1991 = xor i8 %1990, 1
  %1992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1991, i8* %1992, align 1
  %1993 = xor i32 %1979, %1978
  %1994 = xor i32 %1993, %1980
  %1995 = lshr i32 %1994, 4
  %1996 = trunc i32 %1995 to i8
  %1997 = and i8 %1996, 1
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1997, i8* %1998, align 1
  %1999 = icmp eq i32 %1980, 0
  %2000 = zext i1 %1999 to i8
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2000, i8* %2001, align 1
  %2002 = lshr i32 %1980, 31
  %2003 = trunc i32 %2002 to i8
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2003, i8* %2004, align 1
  %2005 = lshr i32 %1978, 31
  %2006 = lshr i32 %1979, 31
  %2007 = xor i32 %2002, %2005
  %2008 = xor i32 %2002, %2006
  %2009 = add i32 %2007, %2008
  %2010 = icmp eq i32 %2009, 2
  %2011 = zext i1 %2010 to i8
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2011, i8* %2012, align 1
  store %struct.Memory* %loadMem_41ad22, %struct.Memory** %MEMORY
  %loadMem_41ad29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2014 = getelementptr inbounds %struct.GPR, %struct.GPR* %2013, i32 0, i32 33
  %2015 = getelementptr inbounds %struct.Reg, %struct.Reg* %2014, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %2015 to i64*
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2017 = getelementptr inbounds %struct.GPR, %struct.GPR* %2016, i32 0, i32 5
  %2018 = getelementptr inbounds %struct.Reg, %struct.Reg* %2017, i32 0, i32 0
  %ECX.i1465 = bitcast %union.anon* %2018 to i32*
  %2019 = load i32, i32* %ECX.i1465
  %2020 = zext i32 %2019 to i64
  %2021 = load i64, i64* %PC.i1464
  %2022 = add i64 %2021, 7
  store i64 %2022, i64* %PC.i1464
  store i32 %2019, i32* bitcast (%G_0x86bd88_type* @G_0x86bd88 to i32*)
  store %struct.Memory* %loadMem_41ad29, %struct.Memory** %MEMORY
  %loadMem_41ad30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2024 = getelementptr inbounds %struct.GPR, %struct.GPR* %2023, i32 0, i32 33
  %2025 = getelementptr inbounds %struct.Reg, %struct.Reg* %2024, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %2025 to i64*
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2027 = getelementptr inbounds %struct.GPR, %struct.GPR* %2026, i32 0, i32 7
  %2028 = getelementptr inbounds %struct.Reg, %struct.Reg* %2027, i32 0, i32 0
  %RDX.i1462 = bitcast %union.anon* %2028 to i64*
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2030 = getelementptr inbounds %struct.GPR, %struct.GPR* %2029, i32 0, i32 15
  %2031 = getelementptr inbounds %struct.Reg, %struct.Reg* %2030, i32 0, i32 0
  %RBP.i1463 = bitcast %union.anon* %2031 to i64*
  %2032 = load i64, i64* %RBP.i1463
  %2033 = sub i64 %2032, 12408
  %2034 = load i64, i64* %PC.i1461
  %2035 = add i64 %2034, 7
  store i64 %2035, i64* %PC.i1461
  %2036 = inttoptr i64 %2033 to i32*
  %2037 = load i32, i32* %2036
  %2038 = sext i32 %2037 to i64
  store i64 %2038, i64* %RDX.i1462, align 8
  store %struct.Memory* %loadMem_41ad30, %struct.Memory** %MEMORY
  %loadMem_41ad37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2040 = getelementptr inbounds %struct.GPR, %struct.GPR* %2039, i32 0, i32 33
  %2041 = getelementptr inbounds %struct.Reg, %struct.Reg* %2040, i32 0, i32 0
  %PC.i1459 = bitcast %union.anon* %2041 to i64*
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2043 = getelementptr inbounds %struct.GPR, %struct.GPR* %2042, i32 0, i32 7
  %2044 = getelementptr inbounds %struct.Reg, %struct.Reg* %2043, i32 0, i32 0
  %RDX.i1460 = bitcast %union.anon* %2044 to i64*
  %2045 = load i64, i64* %RDX.i1460
  %2046 = load i64, i64* %PC.i1459
  %2047 = add i64 %2046, 4
  store i64 %2047, i64* %PC.i1459
  %2048 = sext i64 %2045 to i128
  %2049 = and i128 %2048, -18446744073709551616
  %2050 = zext i64 %2045 to i128
  %2051 = or i128 %2049, %2050
  %2052 = mul i128 24, %2051
  %2053 = trunc i128 %2052 to i64
  store i64 %2053, i64* %RDX.i1460, align 8
  %2054 = sext i64 %2053 to i128
  %2055 = icmp ne i128 %2054, %2052
  %2056 = zext i1 %2055 to i8
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2056, i8* %2057, align 1
  %2058 = trunc i128 %2052 to i32
  %2059 = and i32 %2058, 255
  %2060 = call i32 @llvm.ctpop.i32(i32 %2059)
  %2061 = trunc i32 %2060 to i8
  %2062 = and i8 %2061, 1
  %2063 = xor i8 %2062, 1
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2063, i8* %2064, align 1
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2065, align 1
  %2066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2066, align 1
  %2067 = lshr i64 %2053, 63
  %2068 = trunc i64 %2067 to i8
  %2069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2068, i8* %2069, align 1
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2056, i8* %2070, align 1
  store %struct.Memory* %loadMem_41ad37, %struct.Memory** %MEMORY
  %loadMem_41ad3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2072 = getelementptr inbounds %struct.GPR, %struct.GPR* %2071, i32 0, i32 33
  %2073 = getelementptr inbounds %struct.Reg, %struct.Reg* %2072, i32 0, i32 0
  %PC.i1456 = bitcast %union.anon* %2073 to i64*
  %2074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2075 = getelementptr inbounds %struct.GPR, %struct.GPR* %2074, i32 0, i32 1
  %2076 = getelementptr inbounds %struct.Reg, %struct.Reg* %2075, i32 0, i32 0
  %RAX.i1457 = bitcast %union.anon* %2076 to i64*
  %2077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2078 = getelementptr inbounds %struct.GPR, %struct.GPR* %2077, i32 0, i32 7
  %2079 = getelementptr inbounds %struct.Reg, %struct.Reg* %2078, i32 0, i32 0
  %RDX.i1458 = bitcast %union.anon* %2079 to i64*
  %2080 = load i64, i64* %RAX.i1457
  %2081 = load i64, i64* %RDX.i1458
  %2082 = load i64, i64* %PC.i1456
  %2083 = add i64 %2082, 3
  store i64 %2083, i64* %PC.i1456
  %2084 = add i64 %2081, %2080
  store i64 %2084, i64* %RAX.i1457, align 8
  %2085 = icmp ult i64 %2084, %2080
  %2086 = icmp ult i64 %2084, %2081
  %2087 = or i1 %2085, %2086
  %2088 = zext i1 %2087 to i8
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2088, i8* %2089, align 1
  %2090 = trunc i64 %2084 to i32
  %2091 = and i32 %2090, 255
  %2092 = call i32 @llvm.ctpop.i32(i32 %2091)
  %2093 = trunc i32 %2092 to i8
  %2094 = and i8 %2093, 1
  %2095 = xor i8 %2094, 1
  %2096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2095, i8* %2096, align 1
  %2097 = xor i64 %2081, %2080
  %2098 = xor i64 %2097, %2084
  %2099 = lshr i64 %2098, 4
  %2100 = trunc i64 %2099 to i8
  %2101 = and i8 %2100, 1
  %2102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2101, i8* %2102, align 1
  %2103 = icmp eq i64 %2084, 0
  %2104 = zext i1 %2103 to i8
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2104, i8* %2105, align 1
  %2106 = lshr i64 %2084, 63
  %2107 = trunc i64 %2106 to i8
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2107, i8* %2108, align 1
  %2109 = lshr i64 %2080, 63
  %2110 = lshr i64 %2081, 63
  %2111 = xor i64 %2106, %2109
  %2112 = xor i64 %2106, %2110
  %2113 = add i64 %2111, %2112
  %2114 = icmp eq i64 %2113, 2
  %2115 = zext i1 %2114 to i8
  %2116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2115, i8* %2116, align 1
  store %struct.Memory* %loadMem_41ad3b, %struct.Memory** %MEMORY
  %loadMem_41ad3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2118 = getelementptr inbounds %struct.GPR, %struct.GPR* %2117, i32 0, i32 33
  %2119 = getelementptr inbounds %struct.Reg, %struct.Reg* %2118, i32 0, i32 0
  %PC.i1453 = bitcast %union.anon* %2119 to i64*
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2121 = getelementptr inbounds %struct.GPR, %struct.GPR* %2120, i32 0, i32 1
  %2122 = getelementptr inbounds %struct.Reg, %struct.Reg* %2121, i32 0, i32 0
  %RAX.i1454 = bitcast %union.anon* %2122 to i64*
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2124 = getelementptr inbounds %struct.GPR, %struct.GPR* %2123, i32 0, i32 7
  %2125 = getelementptr inbounds %struct.Reg, %struct.Reg* %2124, i32 0, i32 0
  %RDX.i1455 = bitcast %union.anon* %2125 to i64*
  %2126 = load i64, i64* %RAX.i1454
  %2127 = load i64, i64* %PC.i1453
  %2128 = add i64 %2127, 3
  store i64 %2128, i64* %PC.i1453
  %2129 = inttoptr i64 %2126 to i64*
  %2130 = load i64, i64* %2129
  store i64 %2130, i64* %RDX.i1455, align 8
  store %struct.Memory* %loadMem_41ad3e, %struct.Memory** %MEMORY
  %loadMem_41ad41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2132 = getelementptr inbounds %struct.GPR, %struct.GPR* %2131, i32 0, i32 33
  %2133 = getelementptr inbounds %struct.Reg, %struct.Reg* %2132, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %2133 to i64*
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2135 = getelementptr inbounds %struct.GPR, %struct.GPR* %2134, i32 0, i32 9
  %2136 = getelementptr inbounds %struct.Reg, %struct.Reg* %2135, i32 0, i32 0
  %RSI.i1451 = bitcast %union.anon* %2136 to i64*
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2138 = getelementptr inbounds %struct.GPR, %struct.GPR* %2137, i32 0, i32 15
  %2139 = getelementptr inbounds %struct.Reg, %struct.Reg* %2138, i32 0, i32 0
  %RBP.i1452 = bitcast %union.anon* %2139 to i64*
  %2140 = load i64, i64* %RBP.i1452
  %2141 = sub i64 %2140, 12544
  %2142 = load i64, i64* %PC.i1450
  %2143 = add i64 %2142, 7
  store i64 %2143, i64* %PC.i1450
  %2144 = inttoptr i64 %2141 to i64*
  %2145 = load i64, i64* %2144
  store i64 %2145, i64* %RSI.i1451, align 8
  store %struct.Memory* %loadMem_41ad41, %struct.Memory** %MEMORY
  %loadMem_41ad48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2147 = getelementptr inbounds %struct.GPR, %struct.GPR* %2146, i32 0, i32 33
  %2148 = getelementptr inbounds %struct.Reg, %struct.Reg* %2147, i32 0, i32 0
  %PC.i1447 = bitcast %union.anon* %2148 to i64*
  %2149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2150 = getelementptr inbounds %struct.GPR, %struct.GPR* %2149, i32 0, i32 7
  %2151 = getelementptr inbounds %struct.Reg, %struct.Reg* %2150, i32 0, i32 0
  %RDX.i1448 = bitcast %union.anon* %2151 to i64*
  %2152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2153 = getelementptr inbounds %struct.GPR, %struct.GPR* %2152, i32 0, i32 9
  %2154 = getelementptr inbounds %struct.Reg, %struct.Reg* %2153, i32 0, i32 0
  %RSI.i1449 = bitcast %union.anon* %2154 to i64*
  %2155 = load i64, i64* %RSI.i1449
  %2156 = load i64, i64* %RDX.i1448
  %2157 = load i64, i64* %PC.i1447
  %2158 = add i64 %2157, 3
  store i64 %2158, i64* %PC.i1447
  %2159 = inttoptr i64 %2155 to i64*
  store i64 %2156, i64* %2159
  store %struct.Memory* %loadMem_41ad48, %struct.Memory** %MEMORY
  %loadMem_41ad4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2161 = getelementptr inbounds %struct.GPR, %struct.GPR* %2160, i32 0, i32 33
  %2162 = getelementptr inbounds %struct.Reg, %struct.Reg* %2161, i32 0, i32 0
  %PC.i1444 = bitcast %union.anon* %2162 to i64*
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2164 = getelementptr inbounds %struct.GPR, %struct.GPR* %2163, i32 0, i32 1
  %2165 = getelementptr inbounds %struct.Reg, %struct.Reg* %2164, i32 0, i32 0
  %RAX.i1445 = bitcast %union.anon* %2165 to i64*
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2167 = getelementptr inbounds %struct.GPR, %struct.GPR* %2166, i32 0, i32 7
  %2168 = getelementptr inbounds %struct.Reg, %struct.Reg* %2167, i32 0, i32 0
  %RDX.i1446 = bitcast %union.anon* %2168 to i64*
  %2169 = load i64, i64* %RAX.i1445
  %2170 = add i64 %2169, 8
  %2171 = load i64, i64* %PC.i1444
  %2172 = add i64 %2171, 4
  store i64 %2172, i64* %PC.i1444
  %2173 = inttoptr i64 %2170 to i64*
  %2174 = load i64, i64* %2173
  store i64 %2174, i64* %RDX.i1446, align 8
  store %struct.Memory* %loadMem_41ad4b, %struct.Memory** %MEMORY
  %loadMem_41ad4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2176 = getelementptr inbounds %struct.GPR, %struct.GPR* %2175, i32 0, i32 33
  %2177 = getelementptr inbounds %struct.Reg, %struct.Reg* %2176, i32 0, i32 0
  %PC.i1441 = bitcast %union.anon* %2177 to i64*
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 7
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %RDX.i1442 = bitcast %union.anon* %2180 to i64*
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2182 = getelementptr inbounds %struct.GPR, %struct.GPR* %2181, i32 0, i32 9
  %2183 = getelementptr inbounds %struct.Reg, %struct.Reg* %2182, i32 0, i32 0
  %RSI.i1443 = bitcast %union.anon* %2183 to i64*
  %2184 = load i64, i64* %RSI.i1443
  %2185 = add i64 %2184, 8
  %2186 = load i64, i64* %RDX.i1442
  %2187 = load i64, i64* %PC.i1441
  %2188 = add i64 %2187, 4
  store i64 %2188, i64* %PC.i1441
  %2189 = inttoptr i64 %2185 to i64*
  store i64 %2186, i64* %2189
  store %struct.Memory* %loadMem_41ad4f, %struct.Memory** %MEMORY
  %loadMem_41ad53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2191 = getelementptr inbounds %struct.GPR, %struct.GPR* %2190, i32 0, i32 33
  %2192 = getelementptr inbounds %struct.Reg, %struct.Reg* %2191, i32 0, i32 0
  %PC.i1439 = bitcast %union.anon* %2192 to i64*
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2194 = getelementptr inbounds %struct.GPR, %struct.GPR* %2193, i32 0, i32 1
  %2195 = getelementptr inbounds %struct.Reg, %struct.Reg* %2194, i32 0, i32 0
  %RAX.i1440 = bitcast %union.anon* %2195 to i64*
  %2196 = load i64, i64* %RAX.i1440
  %2197 = add i64 %2196, 16
  %2198 = load i64, i64* %PC.i1439
  %2199 = add i64 %2198, 4
  store i64 %2199, i64* %PC.i1439
  %2200 = inttoptr i64 %2197 to i64*
  %2201 = load i64, i64* %2200
  store i64 %2201, i64* %RAX.i1440, align 8
  store %struct.Memory* %loadMem_41ad53, %struct.Memory** %MEMORY
  %loadMem_41ad57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2203 = getelementptr inbounds %struct.GPR, %struct.GPR* %2202, i32 0, i32 33
  %2204 = getelementptr inbounds %struct.Reg, %struct.Reg* %2203, i32 0, i32 0
  %PC.i1436 = bitcast %union.anon* %2204 to i64*
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2206 = getelementptr inbounds %struct.GPR, %struct.GPR* %2205, i32 0, i32 1
  %2207 = getelementptr inbounds %struct.Reg, %struct.Reg* %2206, i32 0, i32 0
  %RAX.i1437 = bitcast %union.anon* %2207 to i64*
  %2208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2209 = getelementptr inbounds %struct.GPR, %struct.GPR* %2208, i32 0, i32 9
  %2210 = getelementptr inbounds %struct.Reg, %struct.Reg* %2209, i32 0, i32 0
  %RSI.i1438 = bitcast %union.anon* %2210 to i64*
  %2211 = load i64, i64* %RSI.i1438
  %2212 = add i64 %2211, 16
  %2213 = load i64, i64* %RAX.i1437
  %2214 = load i64, i64* %PC.i1436
  %2215 = add i64 %2214, 4
  store i64 %2215, i64* %PC.i1436
  %2216 = inttoptr i64 %2212 to i64*
  store i64 %2213, i64* %2216
  store %struct.Memory* %loadMem_41ad57, %struct.Memory** %MEMORY
  %loadMem_41ad5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2218 = getelementptr inbounds %struct.GPR, %struct.GPR* %2217, i32 0, i32 33
  %2219 = getelementptr inbounds %struct.Reg, %struct.Reg* %2218, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %2219 to i64*
  %2220 = load i64, i64* %PC.i1435
  %2221 = add i64 %2220, 4261
  %2222 = load i64, i64* %PC.i1435
  %2223 = add i64 %2222, 5
  store i64 %2223, i64* %PC.i1435
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2221, i64* %2224, align 8
  store %struct.Memory* %loadMem_41ad5b, %struct.Memory** %MEMORY
  br label %block_.L_41be00

block_.L_41ad60:                                  ; preds = %block_41ad05
  %loadMem_41ad60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2226 = getelementptr inbounds %struct.GPR, %struct.GPR* %2225, i32 0, i32 33
  %2227 = getelementptr inbounds %struct.Reg, %struct.Reg* %2226, i32 0, i32 0
  %PC.i1434 = bitcast %union.anon* %2227 to i64*
  %2228 = load i64, i64* %PC.i1434
  %2229 = add i64 %2228, 5
  %2230 = load i64, i64* %PC.i1434
  %2231 = add i64 %2230, 5
  store i64 %2231, i64* %PC.i1434
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2229, i64* %2232, align 8
  store %struct.Memory* %loadMem_41ad60, %struct.Memory** %MEMORY
  br label %block_.L_41ad65

block_.L_41ad65:                                  ; preds = %block_.L_41ad60, %block_41acf7, %block_.L_41ace9
  %loadMem1_41ad65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2234 = getelementptr inbounds %struct.GPR, %struct.GPR* %2233, i32 0, i32 33
  %2235 = getelementptr inbounds %struct.Reg, %struct.Reg* %2234, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %2235 to i64*
  %2236 = load i64, i64* %PC.i1433
  %2237 = add i64 %2236, -55125
  %2238 = load i64, i64* %PC.i1433
  %2239 = add i64 %2238, 5
  %2240 = load i64, i64* %PC.i1433
  %2241 = add i64 %2240, 5
  store i64 %2241, i64* %PC.i1433
  %2242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2243 = load i64, i64* %2242, align 8
  %2244 = add i64 %2243, -8
  %2245 = inttoptr i64 %2244 to i64*
  store i64 %2239, i64* %2245
  store i64 %2244, i64* %2242, align 8
  %2246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2237, i64* %2246, align 8
  store %struct.Memory* %loadMem1_41ad65, %struct.Memory** %MEMORY
  %loadMem2_41ad65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ad65 = load i64, i64* %3
  %call2_41ad65 = call %struct.Memory* @sub_40d610.check_phase(%struct.State* %0, i64 %loadPC_41ad65, %struct.Memory* %loadMem2_41ad65)
  store %struct.Memory* %call2_41ad65, %struct.Memory** %MEMORY
  %loadMem_41ad6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2248 = getelementptr inbounds %struct.GPR, %struct.GPR* %2247, i32 0, i32 33
  %2249 = getelementptr inbounds %struct.Reg, %struct.Reg* %2248, i32 0, i32 0
  %PC.i1431 = bitcast %union.anon* %2249 to i64*
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2251 = getelementptr inbounds %struct.GPR, %struct.GPR* %2250, i32 0, i32 1
  %2252 = getelementptr inbounds %struct.Reg, %struct.Reg* %2251, i32 0, i32 0
  %RAX.i1432 = bitcast %union.anon* %2252 to i64*
  %2253 = load i64, i64* %PC.i1431
  %2254 = add i64 %2253, ptrtoint (%G_0x46bd08__rip__type* @G_0x46bd08__rip_ to i64)
  %2255 = load i64, i64* %PC.i1431
  %2256 = add i64 %2255, 6
  store i64 %2256, i64* %PC.i1431
  %2257 = inttoptr i64 %2254 to i32*
  %2258 = load i32, i32* %2257
  %2259 = zext i32 %2258 to i64
  store i64 %2259, i64* %RAX.i1432, align 8
  store %struct.Memory* %loadMem_41ad6a, %struct.Memory** %MEMORY
  %loadMem_41ad70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2261 = getelementptr inbounds %struct.GPR, %struct.GPR* %2260, i32 0, i32 33
  %2262 = getelementptr inbounds %struct.Reg, %struct.Reg* %2261, i32 0, i32 0
  %PC.i1429 = bitcast %union.anon* %2262 to i64*
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2264 = getelementptr inbounds %struct.GPR, %struct.GPR* %2263, i32 0, i32 1
  %2265 = getelementptr inbounds %struct.Reg, %struct.Reg* %2264, i32 0, i32 0
  %EAX.i1430 = bitcast %union.anon* %2265 to i32*
  %2266 = load i32, i32* %EAX.i1430
  %2267 = zext i32 %2266 to i64
  %2268 = load i32, i32* %EAX.i1430
  %2269 = zext i32 %2268 to i64
  %2270 = load i64, i64* %PC.i1429
  %2271 = add i64 %2270, 2
  store i64 %2271, i64* %PC.i1429
  %2272 = and i64 %2269, %2267
  %2273 = trunc i64 %2272 to i32
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2274, align 1
  %2275 = and i32 %2273, 255
  %2276 = call i32 @llvm.ctpop.i32(i32 %2275)
  %2277 = trunc i32 %2276 to i8
  %2278 = and i8 %2277, 1
  %2279 = xor i8 %2278, 1
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2279, i8* %2280, align 1
  %2281 = icmp eq i32 %2273, 0
  %2282 = zext i1 %2281 to i8
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2282, i8* %2283, align 1
  %2284 = lshr i32 %2273, 31
  %2285 = trunc i32 %2284 to i8
  %2286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2285, i8* %2286, align 1
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2287, align 1
  %2288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2288, align 1
  store %struct.Memory* %loadMem_41ad70, %struct.Memory** %MEMORY
  %loadMem_41ad72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2290 = getelementptr inbounds %struct.GPR, %struct.GPR* %2289, i32 0, i32 33
  %2291 = getelementptr inbounds %struct.Reg, %struct.Reg* %2290, i32 0, i32 0
  %PC.i1426 = bitcast %union.anon* %2291 to i64*
  %2292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2293 = getelementptr inbounds %struct.GPR, %struct.GPR* %2292, i32 0, i32 1
  %2294 = getelementptr inbounds %struct.Reg, %struct.Reg* %2293, i32 0, i32 0
  %EAX.i1427 = bitcast %union.anon* %2294 to i32*
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2296 = getelementptr inbounds %struct.GPR, %struct.GPR* %2295, i32 0, i32 15
  %2297 = getelementptr inbounds %struct.Reg, %struct.Reg* %2296, i32 0, i32 0
  %RBP.i1428 = bitcast %union.anon* %2297 to i64*
  %2298 = load i64, i64* %RBP.i1428
  %2299 = sub i64 %2298, 12548
  %2300 = load i32, i32* %EAX.i1427
  %2301 = zext i32 %2300 to i64
  %2302 = load i64, i64* %PC.i1426
  %2303 = add i64 %2302, 6
  store i64 %2303, i64* %PC.i1426
  %2304 = inttoptr i64 %2299 to i32*
  store i32 %2300, i32* %2304
  store %struct.Memory* %loadMem_41ad72, %struct.Memory** %MEMORY
  %loadMem_41ad78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2306 = getelementptr inbounds %struct.GPR, %struct.GPR* %2305, i32 0, i32 33
  %2307 = getelementptr inbounds %struct.Reg, %struct.Reg* %2306, i32 0, i32 0
  %PC.i1425 = bitcast %union.anon* %2307 to i64*
  %2308 = load i64, i64* %PC.i1425
  %2309 = add i64 %2308, 63
  %2310 = load i64, i64* %PC.i1425
  %2311 = add i64 %2310, 6
  %2312 = load i64, i64* %PC.i1425
  %2313 = add i64 %2312, 6
  store i64 %2313, i64* %PC.i1425
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2315 = load i8, i8* %2314, align 1
  store i8 %2315, i8* %BRANCH_TAKEN, align 1
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2317 = icmp ne i8 %2315, 0
  %2318 = select i1 %2317, i64 %2309, i64 %2311
  store i64 %2318, i64* %2316, align 8
  store %struct.Memory* %loadMem_41ad78, %struct.Memory** %MEMORY
  %loadBr_41ad78 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ad78 = icmp eq i8 %loadBr_41ad78, 1
  br i1 %cmpBr_41ad78, label %block_.L_41adb7, label %block_41ad7e

block_41ad7e:                                     ; preds = %block_.L_41ad65
  %loadMem_41ad7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2320 = getelementptr inbounds %struct.GPR, %struct.GPR* %2319, i32 0, i32 33
  %2321 = getelementptr inbounds %struct.Reg, %struct.Reg* %2320, i32 0, i32 0
  %PC.i1424 = bitcast %union.anon* %2321 to i64*
  %2322 = load i64, i64* %PC.i1424
  %2323 = add i64 %2322, 5
  %2324 = load i64, i64* %PC.i1424
  %2325 = add i64 %2324, 5
  store i64 %2325, i64* %PC.i1424
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2323, i64* %2326, align 8
  store %struct.Memory* %loadMem_41ad7e, %struct.Memory** %MEMORY
  br label %block_.L_41ad83

block_.L_41ad83:                                  ; preds = %block_41ad7e
  %loadMem_41ad83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2328 = getelementptr inbounds %struct.GPR, %struct.GPR* %2327, i32 0, i32 33
  %2329 = getelementptr inbounds %struct.Reg, %struct.Reg* %2328, i32 0, i32 0
  %PC.i1421 = bitcast %union.anon* %2329 to i64*
  %2330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2331 = getelementptr inbounds %struct.GPR, %struct.GPR* %2330, i32 0, i32 1
  %2332 = getelementptr inbounds %struct.Reg, %struct.Reg* %2331, i32 0, i32 0
  %RAX.i1422 = bitcast %union.anon* %2332 to i64*
  %2333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2334 = getelementptr inbounds %struct.GPR, %struct.GPR* %2333, i32 0, i32 15
  %2335 = getelementptr inbounds %struct.Reg, %struct.Reg* %2334, i32 0, i32 0
  %RBP.i1423 = bitcast %union.anon* %2335 to i64*
  %2336 = load i64, i64* %RBP.i1423
  %2337 = sub i64 %2336, 12548
  %2338 = load i64, i64* %PC.i1421
  %2339 = add i64 %2338, 6
  store i64 %2339, i64* %PC.i1421
  %2340 = inttoptr i64 %2337 to i32*
  %2341 = load i32, i32* %2340
  %2342 = zext i32 %2341 to i64
  store i64 %2342, i64* %RAX.i1422, align 8
  store %struct.Memory* %loadMem_41ad83, %struct.Memory** %MEMORY
  %loadMem_41ad89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2344 = getelementptr inbounds %struct.GPR, %struct.GPR* %2343, i32 0, i32 33
  %2345 = getelementptr inbounds %struct.Reg, %struct.Reg* %2344, i32 0, i32 0
  %PC.i1419 = bitcast %union.anon* %2345 to i64*
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2347 = getelementptr inbounds %struct.GPR, %struct.GPR* %2346, i32 0, i32 1
  %2348 = getelementptr inbounds %struct.Reg, %struct.Reg* %2347, i32 0, i32 0
  %RAX.i1420 = bitcast %union.anon* %2348 to i64*
  %2349 = load i64, i64* %RAX.i1420
  %2350 = load i64, i64* %PC.i1419
  %2351 = add i64 %2350, 3
  store i64 %2351, i64* %PC.i1419
  %2352 = trunc i64 %2349 to i32
  %2353 = sub i32 %2352, 1
  %2354 = zext i32 %2353 to i64
  store i64 %2354, i64* %RAX.i1420, align 8
  %2355 = icmp ult i32 %2352, 1
  %2356 = zext i1 %2355 to i8
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2356, i8* %2357, align 1
  %2358 = and i32 %2353, 255
  %2359 = call i32 @llvm.ctpop.i32(i32 %2358)
  %2360 = trunc i32 %2359 to i8
  %2361 = and i8 %2360, 1
  %2362 = xor i8 %2361, 1
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2362, i8* %2363, align 1
  %2364 = xor i64 1, %2349
  %2365 = trunc i64 %2364 to i32
  %2366 = xor i32 %2365, %2353
  %2367 = lshr i32 %2366, 4
  %2368 = trunc i32 %2367 to i8
  %2369 = and i8 %2368, 1
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2369, i8* %2370, align 1
  %2371 = icmp eq i32 %2353, 0
  %2372 = zext i1 %2371 to i8
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2372, i8* %2373, align 1
  %2374 = lshr i32 %2353, 31
  %2375 = trunc i32 %2374 to i8
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2375, i8* %2376, align 1
  %2377 = lshr i32 %2352, 31
  %2378 = xor i32 %2374, %2377
  %2379 = add i32 %2378, %2377
  %2380 = icmp eq i32 %2379, 2
  %2381 = zext i1 %2380 to i8
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2381, i8* %2382, align 1
  store %struct.Memory* %loadMem_41ad89, %struct.Memory** %MEMORY
  %loadMem_41ad8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2384 = getelementptr inbounds %struct.GPR, %struct.GPR* %2383, i32 0, i32 33
  %2385 = getelementptr inbounds %struct.Reg, %struct.Reg* %2384, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %2385 to i64*
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2387 = getelementptr inbounds %struct.GPR, %struct.GPR* %2386, i32 0, i32 1
  %2388 = getelementptr inbounds %struct.Reg, %struct.Reg* %2387, i32 0, i32 0
  %EAX.i1417 = bitcast %union.anon* %2388 to i32*
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2390 = getelementptr inbounds %struct.GPR, %struct.GPR* %2389, i32 0, i32 15
  %2391 = getelementptr inbounds %struct.Reg, %struct.Reg* %2390, i32 0, i32 0
  %RBP.i1418 = bitcast %union.anon* %2391 to i64*
  %2392 = load i64, i64* %RBP.i1418
  %2393 = sub i64 %2392, 12552
  %2394 = load i32, i32* %EAX.i1417
  %2395 = zext i32 %2394 to i64
  %2396 = load i64, i64* %PC.i1416
  %2397 = add i64 %2396, 6
  store i64 %2397, i64* %PC.i1416
  %2398 = inttoptr i64 %2393 to i32*
  store i32 %2394, i32* %2398
  store %struct.Memory* %loadMem_41ad8c, %struct.Memory** %MEMORY
  %loadMem_41ad92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2400 = getelementptr inbounds %struct.GPR, %struct.GPR* %2399, i32 0, i32 33
  %2401 = getelementptr inbounds %struct.Reg, %struct.Reg* %2400, i32 0, i32 0
  %PC.i1415 = bitcast %union.anon* %2401 to i64*
  %2402 = load i64, i64* %PC.i1415
  %2403 = add i64 %2402, 65
  %2404 = load i64, i64* %PC.i1415
  %2405 = add i64 %2404, 6
  %2406 = load i64, i64* %PC.i1415
  %2407 = add i64 %2406, 6
  store i64 %2407, i64* %PC.i1415
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2409 = load i8, i8* %2408, align 1
  store i8 %2409, i8* %BRANCH_TAKEN, align 1
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2411 = icmp ne i8 %2409, 0
  %2412 = select i1 %2411, i64 %2403, i64 %2405
  store i64 %2412, i64* %2410, align 8
  store %struct.Memory* %loadMem_41ad92, %struct.Memory** %MEMORY
  %loadBr_41ad92 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ad92 = icmp eq i8 %loadBr_41ad92, 1
  br i1 %cmpBr_41ad92, label %block_.L_41add3, label %block_41ad98

block_41ad98:                                     ; preds = %block_.L_41ad83
  %loadMem_41ad98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2414 = getelementptr inbounds %struct.GPR, %struct.GPR* %2413, i32 0, i32 33
  %2415 = getelementptr inbounds %struct.Reg, %struct.Reg* %2414, i32 0, i32 0
  %PC.i1414 = bitcast %union.anon* %2415 to i64*
  %2416 = load i64, i64* %PC.i1414
  %2417 = add i64 %2416, 5
  %2418 = load i64, i64* %PC.i1414
  %2419 = add i64 %2418, 5
  store i64 %2419, i64* %PC.i1414
  %2420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2417, i64* %2420, align 8
  store %struct.Memory* %loadMem_41ad98, %struct.Memory** %MEMORY
  br label %block_.L_41ad9d

block_.L_41ad9d:                                  ; preds = %block_41ad98
  %loadMem_41ad9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2422 = getelementptr inbounds %struct.GPR, %struct.GPR* %2421, i32 0, i32 33
  %2423 = getelementptr inbounds %struct.Reg, %struct.Reg* %2422, i32 0, i32 0
  %PC.i1411 = bitcast %union.anon* %2423 to i64*
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2425 = getelementptr inbounds %struct.GPR, %struct.GPR* %2424, i32 0, i32 1
  %2426 = getelementptr inbounds %struct.Reg, %struct.Reg* %2425, i32 0, i32 0
  %RAX.i1412 = bitcast %union.anon* %2426 to i64*
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2428 = getelementptr inbounds %struct.GPR, %struct.GPR* %2427, i32 0, i32 15
  %2429 = getelementptr inbounds %struct.Reg, %struct.Reg* %2428, i32 0, i32 0
  %RBP.i1413 = bitcast %union.anon* %2429 to i64*
  %2430 = load i64, i64* %RBP.i1413
  %2431 = sub i64 %2430, 12548
  %2432 = load i64, i64* %PC.i1411
  %2433 = add i64 %2432, 6
  store i64 %2433, i64* %PC.i1411
  %2434 = inttoptr i64 %2431 to i32*
  %2435 = load i32, i32* %2434
  %2436 = zext i32 %2435 to i64
  store i64 %2436, i64* %RAX.i1412, align 8
  store %struct.Memory* %loadMem_41ad9d, %struct.Memory** %MEMORY
  %loadMem_41ada3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 33
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %2439 to i64*
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2441 = getelementptr inbounds %struct.GPR, %struct.GPR* %2440, i32 0, i32 1
  %2442 = getelementptr inbounds %struct.Reg, %struct.Reg* %2441, i32 0, i32 0
  %RAX.i1410 = bitcast %union.anon* %2442 to i64*
  %2443 = load i64, i64* %RAX.i1410
  %2444 = load i64, i64* %PC.i1409
  %2445 = add i64 %2444, 3
  store i64 %2445, i64* %PC.i1409
  %2446 = trunc i64 %2443 to i32
  %2447 = sub i32 %2446, 2
  %2448 = zext i32 %2447 to i64
  store i64 %2448, i64* %RAX.i1410, align 8
  %2449 = icmp ult i32 %2446, 2
  %2450 = zext i1 %2449 to i8
  %2451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2450, i8* %2451, align 1
  %2452 = and i32 %2447, 255
  %2453 = call i32 @llvm.ctpop.i32(i32 %2452)
  %2454 = trunc i32 %2453 to i8
  %2455 = and i8 %2454, 1
  %2456 = xor i8 %2455, 1
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2456, i8* %2457, align 1
  %2458 = xor i64 2, %2443
  %2459 = trunc i64 %2458 to i32
  %2460 = xor i32 %2459, %2447
  %2461 = lshr i32 %2460, 4
  %2462 = trunc i32 %2461 to i8
  %2463 = and i8 %2462, 1
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2463, i8* %2464, align 1
  %2465 = icmp eq i32 %2447, 0
  %2466 = zext i1 %2465 to i8
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2466, i8* %2467, align 1
  %2468 = lshr i32 %2447, 31
  %2469 = trunc i32 %2468 to i8
  %2470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2469, i8* %2470, align 1
  %2471 = lshr i32 %2446, 31
  %2472 = xor i32 %2468, %2471
  %2473 = add i32 %2472, %2471
  %2474 = icmp eq i32 %2473, 2
  %2475 = zext i1 %2474 to i8
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2475, i8* %2476, align 1
  store %struct.Memory* %loadMem_41ada3, %struct.Memory** %MEMORY
  %loadMem_41ada6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 33
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %PC.i1406 = bitcast %union.anon* %2479 to i64*
  %2480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2481 = getelementptr inbounds %struct.GPR, %struct.GPR* %2480, i32 0, i32 1
  %2482 = getelementptr inbounds %struct.Reg, %struct.Reg* %2481, i32 0, i32 0
  %EAX.i1407 = bitcast %union.anon* %2482 to i32*
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2484 = getelementptr inbounds %struct.GPR, %struct.GPR* %2483, i32 0, i32 15
  %2485 = getelementptr inbounds %struct.Reg, %struct.Reg* %2484, i32 0, i32 0
  %RBP.i1408 = bitcast %union.anon* %2485 to i64*
  %2486 = load i64, i64* %RBP.i1408
  %2487 = sub i64 %2486, 12556
  %2488 = load i32, i32* %EAX.i1407
  %2489 = zext i32 %2488 to i64
  %2490 = load i64, i64* %PC.i1406
  %2491 = add i64 %2490, 6
  store i64 %2491, i64* %PC.i1406
  %2492 = inttoptr i64 %2487 to i32*
  store i32 %2488, i32* %2492
  store %struct.Memory* %loadMem_41ada6, %struct.Memory** %MEMORY
  %loadMem_41adac = load %struct.Memory*, %struct.Memory** %MEMORY
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2494 = getelementptr inbounds %struct.GPR, %struct.GPR* %2493, i32 0, i32 33
  %2495 = getelementptr inbounds %struct.Reg, %struct.Reg* %2494, i32 0, i32 0
  %PC.i1405 = bitcast %union.anon* %2495 to i64*
  %2496 = load i64, i64* %PC.i1405
  %2497 = add i64 %2496, 67
  %2498 = load i64, i64* %PC.i1405
  %2499 = add i64 %2498, 6
  %2500 = load i64, i64* %PC.i1405
  %2501 = add i64 %2500, 6
  store i64 %2501, i64* %PC.i1405
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2503 = load i8, i8* %2502, align 1
  store i8 %2503, i8* %BRANCH_TAKEN, align 1
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2505 = icmp ne i8 %2503, 0
  %2506 = select i1 %2505, i64 %2497, i64 %2499
  store i64 %2506, i64* %2504, align 8
  store %struct.Memory* %loadMem_41adac, %struct.Memory** %MEMORY
  %loadBr_41adac = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41adac = icmp eq i8 %loadBr_41adac, 1
  br i1 %cmpBr_41adac, label %block_.L_41adef, label %block_41adb2

block_41adb2:                                     ; preds = %block_.L_41ad9d
  %loadMem_41adb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2508 = getelementptr inbounds %struct.GPR, %struct.GPR* %2507, i32 0, i32 33
  %2509 = getelementptr inbounds %struct.Reg, %struct.Reg* %2508, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %2509 to i64*
  %2510 = load i64, i64* %PC.i1404
  %2511 = add i64 %2510, 84
  %2512 = load i64, i64* %PC.i1404
  %2513 = add i64 %2512, 5
  store i64 %2513, i64* %PC.i1404
  %2514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2511, i64* %2514, align 8
  store %struct.Memory* %loadMem_41adb2, %struct.Memory** %MEMORY
  br label %block_.L_41ae06

block_.L_41adb7:                                  ; preds = %block_.L_41ad65
  %loadMem_41adb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2516 = getelementptr inbounds %struct.GPR, %struct.GPR* %2515, i32 0, i32 33
  %2517 = getelementptr inbounds %struct.Reg, %struct.Reg* %2516, i32 0, i32 0
  %PC.i1402 = bitcast %union.anon* %2517 to i64*
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2519 = getelementptr inbounds %struct.GPR, %struct.GPR* %2518, i32 0, i32 11
  %2520 = getelementptr inbounds %struct.Reg, %struct.Reg* %2519, i32 0, i32 0
  %RDI.i1403 = bitcast %union.anon* %2520 to i64*
  %2521 = load i64, i64* %PC.i1402
  %2522 = add i64 %2521, 10
  store i64 %2522, i64* %PC.i1402
  store i64 ptrtoint (%G__0x429086_type* @G__0x429086 to i64), i64* %RDI.i1403, align 8
  store %struct.Memory* %loadMem_41adb7, %struct.Memory** %MEMORY
  %loadMem_41adc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2524 = getelementptr inbounds %struct.GPR, %struct.GPR* %2523, i32 0, i32 33
  %2525 = getelementptr inbounds %struct.Reg, %struct.Reg* %2524, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %2525 to i64*
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2527 = getelementptr inbounds %struct.GPR, %struct.GPR* %2526, i32 0, i32 1
  %2528 = getelementptr inbounds %struct.Reg, %struct.Reg* %2527, i32 0, i32 0
  %2529 = bitcast %union.anon* %2528 to %struct.anon.2*
  %AL.i1401 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2529, i32 0, i32 0
  %2530 = load i64, i64* %PC.i1400
  %2531 = add i64 %2530, 2
  store i64 %2531, i64* %PC.i1400
  store i8 0, i8* %AL.i1401, align 1
  store %struct.Memory* %loadMem_41adc1, %struct.Memory** %MEMORY
  %loadMem1_41adc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2533 = getelementptr inbounds %struct.GPR, %struct.GPR* %2532, i32 0, i32 33
  %2534 = getelementptr inbounds %struct.Reg, %struct.Reg* %2533, i32 0, i32 0
  %PC.i1399 = bitcast %union.anon* %2534 to i64*
  %2535 = load i64, i64* %PC.i1399
  %2536 = add i64 %2535, -106771
  %2537 = load i64, i64* %PC.i1399
  %2538 = add i64 %2537, 5
  %2539 = load i64, i64* %PC.i1399
  %2540 = add i64 %2539, 5
  store i64 %2540, i64* %PC.i1399
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2542 = load i64, i64* %2541, align 8
  %2543 = add i64 %2542, -8
  %2544 = inttoptr i64 %2543 to i64*
  store i64 %2538, i64* %2544
  store i64 %2543, i64* %2541, align 8
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2536, i64* %2545, align 8
  store %struct.Memory* %loadMem1_41adc3, %struct.Memory** %MEMORY
  %loadMem2_41adc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41adc3 = load i64, i64* %3
  %2546 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41adc3)
  store %struct.Memory* %2546, %struct.Memory** %MEMORY
  %loadMem_41adc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2548 = getelementptr inbounds %struct.GPR, %struct.GPR* %2547, i32 0, i32 33
  %2549 = getelementptr inbounds %struct.Reg, %struct.Reg* %2548, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %2549 to i64*
  %2550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2551 = getelementptr inbounds %struct.GPR, %struct.GPR* %2550, i32 0, i32 1
  %2552 = getelementptr inbounds %struct.Reg, %struct.Reg* %2551, i32 0, i32 0
  %EAX.i1396 = bitcast %union.anon* %2552 to i32*
  %2553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2554 = getelementptr inbounds %struct.GPR, %struct.GPR* %2553, i32 0, i32 15
  %2555 = getelementptr inbounds %struct.Reg, %struct.Reg* %2554, i32 0, i32 0
  %RBP.i1397 = bitcast %union.anon* %2555 to i64*
  %2556 = load i64, i64* %RBP.i1397
  %2557 = sub i64 %2556, 12560
  %2558 = load i32, i32* %EAX.i1396
  %2559 = zext i32 %2558 to i64
  %2560 = load i64, i64* %PC.i1395
  %2561 = add i64 %2560, 6
  store i64 %2561, i64* %PC.i1395
  %2562 = inttoptr i64 %2557 to i32*
  store i32 %2558, i32* %2562
  store %struct.Memory* %loadMem_41adc8, %struct.Memory** %MEMORY
  %loadMem_41adce = load %struct.Memory*, %struct.Memory** %MEMORY
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2564 = getelementptr inbounds %struct.GPR, %struct.GPR* %2563, i32 0, i32 33
  %2565 = getelementptr inbounds %struct.Reg, %struct.Reg* %2564, i32 0, i32 0
  %PC.i1394 = bitcast %union.anon* %2565 to i64*
  %2566 = load i64, i64* %PC.i1394
  %2567 = add i64 %2566, 56
  %2568 = load i64, i64* %PC.i1394
  %2569 = add i64 %2568, 5
  store i64 %2569, i64* %PC.i1394
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2567, i64* %2570, align 8
  store %struct.Memory* %loadMem_41adce, %struct.Memory** %MEMORY
  br label %block_.L_41ae06

block_.L_41add3:                                  ; preds = %block_.L_41ad83
  %loadMem_41add3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2572 = getelementptr inbounds %struct.GPR, %struct.GPR* %2571, i32 0, i32 33
  %2573 = getelementptr inbounds %struct.Reg, %struct.Reg* %2572, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %2573 to i64*
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2575 = getelementptr inbounds %struct.GPR, %struct.GPR* %2574, i32 0, i32 11
  %2576 = getelementptr inbounds %struct.Reg, %struct.Reg* %2575, i32 0, i32 0
  %RDI.i1393 = bitcast %union.anon* %2576 to i64*
  %2577 = load i64, i64* %PC.i1392
  %2578 = add i64 %2577, 10
  store i64 %2578, i64* %PC.i1392
  store i64 ptrtoint (%G__0x429096_type* @G__0x429096 to i64), i64* %RDI.i1393, align 8
  store %struct.Memory* %loadMem_41add3, %struct.Memory** %MEMORY
  %loadMem_41addd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2580 = getelementptr inbounds %struct.GPR, %struct.GPR* %2579, i32 0, i32 33
  %2581 = getelementptr inbounds %struct.Reg, %struct.Reg* %2580, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %2581 to i64*
  %2582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2583 = getelementptr inbounds %struct.GPR, %struct.GPR* %2582, i32 0, i32 1
  %2584 = getelementptr inbounds %struct.Reg, %struct.Reg* %2583, i32 0, i32 0
  %2585 = bitcast %union.anon* %2584 to %struct.anon.2*
  %AL.i1391 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2585, i32 0, i32 0
  %2586 = load i64, i64* %PC.i1390
  %2587 = add i64 %2586, 2
  store i64 %2587, i64* %PC.i1390
  store i8 0, i8* %AL.i1391, align 1
  store %struct.Memory* %loadMem_41addd, %struct.Memory** %MEMORY
  %loadMem1_41addf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2589 = getelementptr inbounds %struct.GPR, %struct.GPR* %2588, i32 0, i32 33
  %2590 = getelementptr inbounds %struct.Reg, %struct.Reg* %2589, i32 0, i32 0
  %PC.i1389 = bitcast %union.anon* %2590 to i64*
  %2591 = load i64, i64* %PC.i1389
  %2592 = add i64 %2591, -106799
  %2593 = load i64, i64* %PC.i1389
  %2594 = add i64 %2593, 5
  %2595 = load i64, i64* %PC.i1389
  %2596 = add i64 %2595, 5
  store i64 %2596, i64* %PC.i1389
  %2597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2598 = load i64, i64* %2597, align 8
  %2599 = add i64 %2598, -8
  %2600 = inttoptr i64 %2599 to i64*
  store i64 %2594, i64* %2600
  store i64 %2599, i64* %2597, align 8
  %2601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2592, i64* %2601, align 8
  store %struct.Memory* %loadMem1_41addf, %struct.Memory** %MEMORY
  %loadMem2_41addf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41addf = load i64, i64* %3
  %2602 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41addf)
  store %struct.Memory* %2602, %struct.Memory** %MEMORY
  %loadMem_41ade4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2604 = getelementptr inbounds %struct.GPR, %struct.GPR* %2603, i32 0, i32 33
  %2605 = getelementptr inbounds %struct.Reg, %struct.Reg* %2604, i32 0, i32 0
  %PC.i1385 = bitcast %union.anon* %2605 to i64*
  %2606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2607 = getelementptr inbounds %struct.GPR, %struct.GPR* %2606, i32 0, i32 1
  %2608 = getelementptr inbounds %struct.Reg, %struct.Reg* %2607, i32 0, i32 0
  %EAX.i1386 = bitcast %union.anon* %2608 to i32*
  %2609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2610 = getelementptr inbounds %struct.GPR, %struct.GPR* %2609, i32 0, i32 15
  %2611 = getelementptr inbounds %struct.Reg, %struct.Reg* %2610, i32 0, i32 0
  %RBP.i1387 = bitcast %union.anon* %2611 to i64*
  %2612 = load i64, i64* %RBP.i1387
  %2613 = sub i64 %2612, 12564
  %2614 = load i32, i32* %EAX.i1386
  %2615 = zext i32 %2614 to i64
  %2616 = load i64, i64* %PC.i1385
  %2617 = add i64 %2616, 6
  store i64 %2617, i64* %PC.i1385
  %2618 = inttoptr i64 %2613 to i32*
  store i32 %2614, i32* %2618
  store %struct.Memory* %loadMem_41ade4, %struct.Memory** %MEMORY
  %loadMem_41adea = load %struct.Memory*, %struct.Memory** %MEMORY
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2620 = getelementptr inbounds %struct.GPR, %struct.GPR* %2619, i32 0, i32 33
  %2621 = getelementptr inbounds %struct.Reg, %struct.Reg* %2620, i32 0, i32 0
  %PC.i1384 = bitcast %union.anon* %2621 to i64*
  %2622 = load i64, i64* %PC.i1384
  %2623 = add i64 %2622, 28
  %2624 = load i64, i64* %PC.i1384
  %2625 = add i64 %2624, 5
  store i64 %2625, i64* %PC.i1384
  %2626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2623, i64* %2626, align 8
  store %struct.Memory* %loadMem_41adea, %struct.Memory** %MEMORY
  br label %block_.L_41ae06

block_.L_41adef:                                  ; preds = %block_.L_41ad9d
  %loadMem_41adef = load %struct.Memory*, %struct.Memory** %MEMORY
  %2627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2628 = getelementptr inbounds %struct.GPR, %struct.GPR* %2627, i32 0, i32 33
  %2629 = getelementptr inbounds %struct.Reg, %struct.Reg* %2628, i32 0, i32 0
  %PC.i1382 = bitcast %union.anon* %2629 to i64*
  %2630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2631 = getelementptr inbounds %struct.GPR, %struct.GPR* %2630, i32 0, i32 11
  %2632 = getelementptr inbounds %struct.Reg, %struct.Reg* %2631, i32 0, i32 0
  %RDI.i1383 = bitcast %union.anon* %2632 to i64*
  %2633 = load i64, i64* %PC.i1382
  %2634 = add i64 %2633, 10
  store i64 %2634, i64* %PC.i1382
  store i64 ptrtoint (%G__0x4290a9_type* @G__0x4290a9 to i64), i64* %RDI.i1383, align 8
  store %struct.Memory* %loadMem_41adef, %struct.Memory** %MEMORY
  %loadMem_41adf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2636 = getelementptr inbounds %struct.GPR, %struct.GPR* %2635, i32 0, i32 33
  %2637 = getelementptr inbounds %struct.Reg, %struct.Reg* %2636, i32 0, i32 0
  %PC.i1380 = bitcast %union.anon* %2637 to i64*
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2639 = getelementptr inbounds %struct.GPR, %struct.GPR* %2638, i32 0, i32 1
  %2640 = getelementptr inbounds %struct.Reg, %struct.Reg* %2639, i32 0, i32 0
  %2641 = bitcast %union.anon* %2640 to %struct.anon.2*
  %AL.i1381 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2641, i32 0, i32 0
  %2642 = load i64, i64* %PC.i1380
  %2643 = add i64 %2642, 2
  store i64 %2643, i64* %PC.i1380
  store i8 0, i8* %AL.i1381, align 1
  store %struct.Memory* %loadMem_41adf9, %struct.Memory** %MEMORY
  %loadMem1_41adfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %2644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2645 = getelementptr inbounds %struct.GPR, %struct.GPR* %2644, i32 0, i32 33
  %2646 = getelementptr inbounds %struct.Reg, %struct.Reg* %2645, i32 0, i32 0
  %PC.i1379 = bitcast %union.anon* %2646 to i64*
  %2647 = load i64, i64* %PC.i1379
  %2648 = add i64 %2647, -106827
  %2649 = load i64, i64* %PC.i1379
  %2650 = add i64 %2649, 5
  %2651 = load i64, i64* %PC.i1379
  %2652 = add i64 %2651, 5
  store i64 %2652, i64* %PC.i1379
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2654 = load i64, i64* %2653, align 8
  %2655 = add i64 %2654, -8
  %2656 = inttoptr i64 %2655 to i64*
  store i64 %2650, i64* %2656
  store i64 %2655, i64* %2653, align 8
  %2657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2648, i64* %2657, align 8
  store %struct.Memory* %loadMem1_41adfb, %struct.Memory** %MEMORY
  %loadMem2_41adfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41adfb = load i64, i64* %3
  %2658 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41adfb)
  store %struct.Memory* %2658, %struct.Memory** %MEMORY
  %loadMem_41ae00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2660 = getelementptr inbounds %struct.GPR, %struct.GPR* %2659, i32 0, i32 33
  %2661 = getelementptr inbounds %struct.Reg, %struct.Reg* %2660, i32 0, i32 0
  %PC.i1375 = bitcast %union.anon* %2661 to i64*
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2663 = getelementptr inbounds %struct.GPR, %struct.GPR* %2662, i32 0, i32 1
  %2664 = getelementptr inbounds %struct.Reg, %struct.Reg* %2663, i32 0, i32 0
  %EAX.i1376 = bitcast %union.anon* %2664 to i32*
  %2665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2666 = getelementptr inbounds %struct.GPR, %struct.GPR* %2665, i32 0, i32 15
  %2667 = getelementptr inbounds %struct.Reg, %struct.Reg* %2666, i32 0, i32 0
  %RBP.i1377 = bitcast %union.anon* %2667 to i64*
  %2668 = load i64, i64* %RBP.i1377
  %2669 = sub i64 %2668, 12568
  %2670 = load i32, i32* %EAX.i1376
  %2671 = zext i32 %2670 to i64
  %2672 = load i64, i64* %PC.i1375
  %2673 = add i64 %2672, 6
  store i64 %2673, i64* %PC.i1375
  %2674 = inttoptr i64 %2669 to i32*
  store i32 %2670, i32* %2674
  store %struct.Memory* %loadMem_41ae00, %struct.Memory** %MEMORY
  br label %block_.L_41ae06

block_.L_41ae06:                                  ; preds = %block_.L_41adef, %block_.L_41add3, %block_.L_41adb7, %block_41adb2
  %loadMem_41ae06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2676 = getelementptr inbounds %struct.GPR, %struct.GPR* %2675, i32 0, i32 33
  %2677 = getelementptr inbounds %struct.Reg, %struct.Reg* %2676, i32 0, i32 0
  %PC.i1374 = bitcast %union.anon* %2677 to i64*
  %2678 = load i64, i64* %PC.i1374
  %2679 = add i64 %2678, 8
  store i64 %2679, i64* %PC.i1374
  %2680 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %2681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2681, align 1
  %2682 = and i32 %2680, 255
  %2683 = call i32 @llvm.ctpop.i32(i32 %2682)
  %2684 = trunc i32 %2683 to i8
  %2685 = and i8 %2684, 1
  %2686 = xor i8 %2685, 1
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2686, i8* %2687, align 1
  %2688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2688, align 1
  %2689 = icmp eq i32 %2680, 0
  %2690 = zext i1 %2689 to i8
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2690, i8* %2691, align 1
  %2692 = lshr i32 %2680, 31
  %2693 = trunc i32 %2692 to i8
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2693, i8* %2694, align 1
  %2695 = lshr i32 %2680, 31
  %2696 = xor i32 %2692, %2695
  %2697 = add i32 %2696, %2695
  %2698 = icmp eq i32 %2697, 2
  %2699 = zext i1 %2698 to i8
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2699, i8* %2700, align 1
  store %struct.Memory* %loadMem_41ae06, %struct.Memory** %MEMORY
  %loadMem_41ae0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2702 = getelementptr inbounds %struct.GPR, %struct.GPR* %2701, i32 0, i32 33
  %2703 = getelementptr inbounds %struct.Reg, %struct.Reg* %2702, i32 0, i32 0
  %PC.i1373 = bitcast %union.anon* %2703 to i64*
  %2704 = load i64, i64* %PC.i1373
  %2705 = add i64 %2704, 119
  %2706 = load i64, i64* %PC.i1373
  %2707 = add i64 %2706, 6
  %2708 = load i64, i64* %PC.i1373
  %2709 = add i64 %2708, 6
  store i64 %2709, i64* %PC.i1373
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2711 = load i8, i8* %2710, align 1
  %2712 = icmp eq i8 %2711, 0
  %2713 = zext i1 %2712 to i8
  store i8 %2713, i8* %BRANCH_TAKEN, align 1
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2715 = select i1 %2712, i64 %2705, i64 %2707
  store i64 %2715, i64* %2714, align 8
  store %struct.Memory* %loadMem_41ae0e, %struct.Memory** %MEMORY
  %loadBr_41ae0e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ae0e = icmp eq i8 %loadBr_41ae0e, 1
  br i1 %cmpBr_41ae0e, label %block_.L_41ae85, label %block_41ae14

block_41ae14:                                     ; preds = %block_.L_41ae06
  %loadMem_41ae14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2717 = getelementptr inbounds %struct.GPR, %struct.GPR* %2716, i32 0, i32 33
  %2718 = getelementptr inbounds %struct.Reg, %struct.Reg* %2717, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %2718 to i64*
  %2719 = load i64, i64* %PC.i1372
  %2720 = add i64 %2719, 8
  store i64 %2720, i64* %PC.i1372
  %2721 = load i32, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*)
  %2722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2722, align 1
  %2723 = and i32 %2721, 255
  %2724 = call i32 @llvm.ctpop.i32(i32 %2723)
  %2725 = trunc i32 %2724 to i8
  %2726 = and i8 %2725, 1
  %2727 = xor i8 %2726, 1
  %2728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2727, i8* %2728, align 1
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2729, align 1
  %2730 = icmp eq i32 %2721, 0
  %2731 = zext i1 %2730 to i8
  %2732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2731, i8* %2732, align 1
  %2733 = lshr i32 %2721, 31
  %2734 = trunc i32 %2733 to i8
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2734, i8* %2735, align 1
  %2736 = lshr i32 %2721, 31
  %2737 = xor i32 %2733, %2736
  %2738 = add i32 %2737, %2736
  %2739 = icmp eq i32 %2738, 2
  %2740 = zext i1 %2739 to i8
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2740, i8* %2741, align 1
  store %struct.Memory* %loadMem_41ae14, %struct.Memory** %MEMORY
  %loadMem_41ae1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2743 = getelementptr inbounds %struct.GPR, %struct.GPR* %2742, i32 0, i32 33
  %2744 = getelementptr inbounds %struct.Reg, %struct.Reg* %2743, i32 0, i32 0
  %PC.i1371 = bitcast %union.anon* %2744 to i64*
  %2745 = load i64, i64* %PC.i1371
  %2746 = add i64 %2745, 86
  %2747 = load i64, i64* %PC.i1371
  %2748 = add i64 %2747, 6
  %2749 = load i64, i64* %PC.i1371
  %2750 = add i64 %2749, 6
  store i64 %2750, i64* %PC.i1371
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2752 = load i8, i8* %2751, align 1
  %2753 = icmp eq i8 %2752, 0
  %2754 = zext i1 %2753 to i8
  store i8 %2754, i8* %BRANCH_TAKEN, align 1
  %2755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2756 = select i1 %2753, i64 %2746, i64 %2748
  store i64 %2756, i64* %2755, align 8
  store %struct.Memory* %loadMem_41ae1c, %struct.Memory** %MEMORY
  %loadBr_41ae1c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ae1c = icmp eq i8 %loadBr_41ae1c, 1
  br i1 %cmpBr_41ae1c, label %block_.L_41ae72, label %block_41ae22

block_41ae22:                                     ; preds = %block_41ae14
  %loadMem_41ae22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2758 = getelementptr inbounds %struct.GPR, %struct.GPR* %2757, i32 0, i32 33
  %2759 = getelementptr inbounds %struct.Reg, %struct.Reg* %2758, i32 0, i32 0
  %PC.i1370 = bitcast %union.anon* %2759 to i64*
  %2760 = load i64, i64* %PC.i1370
  %2761 = add i64 %2760, 8
  store i64 %2761, i64* %PC.i1370
  %2762 = load i32, i32* bitcast (%G_0x886a60_type* @G_0x886a60 to i32*)
  %2763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2763, align 1
  %2764 = and i32 %2762, 255
  %2765 = call i32 @llvm.ctpop.i32(i32 %2764)
  %2766 = trunc i32 %2765 to i8
  %2767 = and i8 %2766, 1
  %2768 = xor i8 %2767, 1
  %2769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2768, i8* %2769, align 1
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2770, align 1
  %2771 = icmp eq i32 %2762, 0
  %2772 = zext i1 %2771 to i8
  %2773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2772, i8* %2773, align 1
  %2774 = lshr i32 %2762, 31
  %2775 = trunc i32 %2774 to i8
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2775, i8* %2776, align 1
  %2777 = lshr i32 %2762, 31
  %2778 = xor i32 %2774, %2777
  %2779 = add i32 %2778, %2777
  %2780 = icmp eq i32 %2779, 2
  %2781 = zext i1 %2780 to i8
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2781, i8* %2782, align 1
  store %struct.Memory* %loadMem_41ae22, %struct.Memory** %MEMORY
  %loadMem_41ae2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2784 = getelementptr inbounds %struct.GPR, %struct.GPR* %2783, i32 0, i32 33
  %2785 = getelementptr inbounds %struct.Reg, %struct.Reg* %2784, i32 0, i32 0
  %PC.i1369 = bitcast %union.anon* %2785 to i64*
  %2786 = load i64, i64* %PC.i1369
  %2787 = add i64 %2786, 55
  %2788 = load i64, i64* %PC.i1369
  %2789 = add i64 %2788, 6
  %2790 = load i64, i64* %PC.i1369
  %2791 = add i64 %2790, 6
  store i64 %2791, i64* %PC.i1369
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2793 = load i8, i8* %2792, align 1
  store i8 %2793, i8* %BRANCH_TAKEN, align 1
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2795 = icmp ne i8 %2793, 0
  %2796 = select i1 %2795, i64 %2787, i64 %2789
  store i64 %2796, i64* %2794, align 8
  store %struct.Memory* %loadMem_41ae2a, %struct.Memory** %MEMORY
  %loadBr_41ae2a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ae2a = icmp eq i8 %loadBr_41ae2a, 1
  br i1 %cmpBr_41ae2a, label %block_.L_41ae61, label %block_41ae30

block_41ae30:                                     ; preds = %block_41ae22
  %loadMem1_41ae30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 33
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %PC.i1368 = bitcast %union.anon* %2799 to i64*
  %2800 = load i64, i64* %PC.i1368
  %2801 = add i64 %2800, 26256
  %2802 = load i64, i64* %PC.i1368
  %2803 = add i64 %2802, 5
  %2804 = load i64, i64* %PC.i1368
  %2805 = add i64 %2804, 5
  store i64 %2805, i64* %PC.i1368
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2807 = load i64, i64* %2806, align 8
  %2808 = add i64 %2807, -8
  %2809 = inttoptr i64 %2808 to i64*
  store i64 %2803, i64* %2809
  store i64 %2808, i64* %2806, align 8
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2801, i64* %2810, align 8
  store %struct.Memory* %loadMem1_41ae30, %struct.Memory** %MEMORY
  %loadMem2_41ae30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ae30 = load i64, i64* %3
  %call2_41ae30 = call %struct.Memory* @sub_4214c0.allocate_time(%struct.State* %0, i64 %loadPC_41ae30, %struct.Memory* %loadMem2_41ae30)
  store %struct.Memory* %call2_41ae30, %struct.Memory** %MEMORY
  %loadMem_41ae35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2812 = getelementptr inbounds %struct.GPR, %struct.GPR* %2811, i32 0, i32 33
  %2813 = getelementptr inbounds %struct.Reg, %struct.Reg* %2812, i32 0, i32 0
  %PC.i1365 = bitcast %union.anon* %2813 to i64*
  %2814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2815 = getelementptr inbounds %struct.GPR, %struct.GPR* %2814, i32 0, i32 1
  %2816 = getelementptr inbounds %struct.Reg, %struct.Reg* %2815, i32 0, i32 0
  %EAX.i1366 = bitcast %union.anon* %2816 to i32*
  %2817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2818 = getelementptr inbounds %struct.GPR, %struct.GPR* %2817, i32 0, i32 15
  %2819 = getelementptr inbounds %struct.Reg, %struct.Reg* %2818, i32 0, i32 0
  %RBP.i1367 = bitcast %union.anon* %2819 to i64*
  %2820 = load i64, i64* %RBP.i1367
  %2821 = sub i64 %2820, 108
  %2822 = load i32, i32* %EAX.i1366
  %2823 = zext i32 %2822 to i64
  %2824 = load i64, i64* %PC.i1365
  %2825 = add i64 %2824, 3
  store i64 %2825, i64* %PC.i1365
  %2826 = inttoptr i64 %2821 to i32*
  store i32 %2822, i32* %2826
  store %struct.Memory* %loadMem_41ae35, %struct.Memory** %MEMORY
  %loadMem_41ae38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2828 = getelementptr inbounds %struct.GPR, %struct.GPR* %2827, i32 0, i32 33
  %2829 = getelementptr inbounds %struct.Reg, %struct.Reg* %2828, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %2829 to i64*
  %2830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2831 = getelementptr inbounds %struct.GPR, %struct.GPR* %2830, i32 0, i32 15
  %2832 = getelementptr inbounds %struct.Reg, %struct.Reg* %2831, i32 0, i32 0
  %RBP.i1364 = bitcast %union.anon* %2832 to i64*
  %2833 = load i64, i64* %RBP.i1364
  %2834 = sub i64 %2833, 108
  %2835 = load i64, i64* %PC.i1363
  %2836 = add i64 %2835, 4
  store i64 %2836, i64* %PC.i1363
  %2837 = inttoptr i64 %2834 to i32*
  %2838 = load i32, i32* %2837
  %2839 = sub i32 %2838, 40
  %2840 = icmp ult i32 %2838, 40
  %2841 = zext i1 %2840 to i8
  %2842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2841, i8* %2842, align 1
  %2843 = and i32 %2839, 255
  %2844 = call i32 @llvm.ctpop.i32(i32 %2843)
  %2845 = trunc i32 %2844 to i8
  %2846 = and i8 %2845, 1
  %2847 = xor i8 %2846, 1
  %2848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2847, i8* %2848, align 1
  %2849 = xor i32 %2838, 40
  %2850 = xor i32 %2849, %2839
  %2851 = lshr i32 %2850, 4
  %2852 = trunc i32 %2851 to i8
  %2853 = and i8 %2852, 1
  %2854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2853, i8* %2854, align 1
  %2855 = icmp eq i32 %2839, 0
  %2856 = zext i1 %2855 to i8
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2856, i8* %2857, align 1
  %2858 = lshr i32 %2839, 31
  %2859 = trunc i32 %2858 to i8
  %2860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2859, i8* %2860, align 1
  %2861 = lshr i32 %2838, 31
  %2862 = xor i32 %2858, %2861
  %2863 = add i32 %2862, %2861
  %2864 = icmp eq i32 %2863, 2
  %2865 = zext i1 %2864 to i8
  %2866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2865, i8* %2866, align 1
  store %struct.Memory* %loadMem_41ae38, %struct.Memory** %MEMORY
  %loadMem_41ae3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2868 = getelementptr inbounds %struct.GPR, %struct.GPR* %2867, i32 0, i32 33
  %2869 = getelementptr inbounds %struct.Reg, %struct.Reg* %2868, i32 0, i32 0
  %PC.i1362 = bitcast %union.anon* %2869 to i64*
  %2870 = load i64, i64* %PC.i1362
  %2871 = add i64 %2870, 22
  %2872 = load i64, i64* %PC.i1362
  %2873 = add i64 %2872, 6
  %2874 = load i64, i64* %PC.i1362
  %2875 = add i64 %2874, 6
  store i64 %2875, i64* %PC.i1362
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2877 = load i8, i8* %2876, align 1
  %2878 = icmp ne i8 %2877, 0
  %2879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2880 = load i8, i8* %2879, align 1
  %2881 = icmp ne i8 %2880, 0
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2883 = load i8, i8* %2882, align 1
  %2884 = icmp ne i8 %2883, 0
  %2885 = xor i1 %2881, %2884
  %2886 = or i1 %2878, %2885
  %2887 = zext i1 %2886 to i8
  store i8 %2887, i8* %BRANCH_TAKEN, align 1
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2889 = select i1 %2886, i64 %2871, i64 %2873
  store i64 %2889, i64* %2888, align 8
  store %struct.Memory* %loadMem_41ae3c, %struct.Memory** %MEMORY
  %loadBr_41ae3c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ae3c = icmp eq i8 %loadBr_41ae3c, 1
  br i1 %cmpBr_41ae3c, label %block_.L_41ae52, label %block_41ae42

block_41ae42:                                     ; preds = %block_41ae30
  %loadMem_41ae42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2891 = getelementptr inbounds %struct.GPR, %struct.GPR* %2890, i32 0, i32 33
  %2892 = getelementptr inbounds %struct.Reg, %struct.Reg* %2891, i32 0, i32 0
  %PC.i1361 = bitcast %union.anon* %2892 to i64*
  %2893 = load i64, i64* %PC.i1361
  %2894 = add i64 %2893, 11
  store i64 %2894, i64* %PC.i1361
  store i32 40, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  store %struct.Memory* %loadMem_41ae42, %struct.Memory** %MEMORY
  %loadMem_41ae4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2896 = getelementptr inbounds %struct.GPR, %struct.GPR* %2895, i32 0, i32 33
  %2897 = getelementptr inbounds %struct.Reg, %struct.Reg* %2896, i32 0, i32 0
  %PC.i1360 = bitcast %union.anon* %2897 to i64*
  %2898 = load i64, i64* %PC.i1360
  %2899 = add i64 %2898, 15
  %2900 = load i64, i64* %PC.i1360
  %2901 = add i64 %2900, 5
  store i64 %2901, i64* %PC.i1360
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2899, i64* %2902, align 8
  store %struct.Memory* %loadMem_41ae4d, %struct.Memory** %MEMORY
  br label %block_.L_41ae5c

block_.L_41ae52:                                  ; preds = %block_41ae30
  %loadMem_41ae52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2904 = getelementptr inbounds %struct.GPR, %struct.GPR* %2903, i32 0, i32 33
  %2905 = getelementptr inbounds %struct.Reg, %struct.Reg* %2904, i32 0, i32 0
  %PC.i1357 = bitcast %union.anon* %2905 to i64*
  %2906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2907 = getelementptr inbounds %struct.GPR, %struct.GPR* %2906, i32 0, i32 1
  %2908 = getelementptr inbounds %struct.Reg, %struct.Reg* %2907, i32 0, i32 0
  %RAX.i1358 = bitcast %union.anon* %2908 to i64*
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2910 = getelementptr inbounds %struct.GPR, %struct.GPR* %2909, i32 0, i32 15
  %2911 = getelementptr inbounds %struct.Reg, %struct.Reg* %2910, i32 0, i32 0
  %RBP.i1359 = bitcast %union.anon* %2911 to i64*
  %2912 = load i64, i64* %RBP.i1359
  %2913 = sub i64 %2912, 108
  %2914 = load i64, i64* %PC.i1357
  %2915 = add i64 %2914, 3
  store i64 %2915, i64* %PC.i1357
  %2916 = inttoptr i64 %2913 to i32*
  %2917 = load i32, i32* %2916
  %2918 = zext i32 %2917 to i64
  store i64 %2918, i64* %RAX.i1358, align 8
  store %struct.Memory* %loadMem_41ae52, %struct.Memory** %MEMORY
  %loadMem_41ae55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2920 = getelementptr inbounds %struct.GPR, %struct.GPR* %2919, i32 0, i32 33
  %2921 = getelementptr inbounds %struct.Reg, %struct.Reg* %2920, i32 0, i32 0
  %PC.i1355 = bitcast %union.anon* %2921 to i64*
  %2922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2923 = getelementptr inbounds %struct.GPR, %struct.GPR* %2922, i32 0, i32 1
  %2924 = getelementptr inbounds %struct.Reg, %struct.Reg* %2923, i32 0, i32 0
  %EAX.i1356 = bitcast %union.anon* %2924 to i32*
  %2925 = load i32, i32* %EAX.i1356
  %2926 = zext i32 %2925 to i64
  %2927 = load i64, i64* %PC.i1355
  %2928 = add i64 %2927, 7
  store i64 %2928, i64* %PC.i1355
  store i32 %2925, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  store %struct.Memory* %loadMem_41ae55, %struct.Memory** %MEMORY
  br label %block_.L_41ae5c

block_.L_41ae5c:                                  ; preds = %block_.L_41ae52, %block_41ae42
  %loadMem_41ae5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2930 = getelementptr inbounds %struct.GPR, %struct.GPR* %2929, i32 0, i32 33
  %2931 = getelementptr inbounds %struct.Reg, %struct.Reg* %2930, i32 0, i32 0
  %PC.i1354 = bitcast %union.anon* %2931 to i64*
  %2932 = load i64, i64* %PC.i1354
  %2933 = add i64 %2932, 17
  %2934 = load i64, i64* %PC.i1354
  %2935 = add i64 %2934, 5
  store i64 %2935, i64* %PC.i1354
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2933, i64* %2936, align 8
  store %struct.Memory* %loadMem_41ae5c, %struct.Memory** %MEMORY
  br label %block_.L_41ae6d

block_.L_41ae61:                                  ; preds = %block_41ae22
  %loadMem1_41ae61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 33
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %2939 to i64*
  %2940 = load i64, i64* %PC.i1353
  %2941 = add i64 %2940, 26207
  %2942 = load i64, i64* %PC.i1353
  %2943 = add i64 %2942, 5
  %2944 = load i64, i64* %PC.i1353
  %2945 = add i64 %2944, 5
  store i64 %2945, i64* %PC.i1353
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2947 = load i64, i64* %2946, align 8
  %2948 = add i64 %2947, -8
  %2949 = inttoptr i64 %2948 to i64*
  store i64 %2943, i64* %2949
  store i64 %2948, i64* %2946, align 8
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2941, i64* %2950, align 8
  store %struct.Memory* %loadMem1_41ae61, %struct.Memory** %MEMORY
  %loadMem2_41ae61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41ae61 = load i64, i64* %3
  %call2_41ae61 = call %struct.Memory* @sub_4214c0.allocate_time(%struct.State* %0, i64 %loadPC_41ae61, %struct.Memory* %loadMem2_41ae61)
  store %struct.Memory* %call2_41ae61, %struct.Memory** %MEMORY
  %loadMem_41ae66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2952 = getelementptr inbounds %struct.GPR, %struct.GPR* %2951, i32 0, i32 33
  %2953 = getelementptr inbounds %struct.Reg, %struct.Reg* %2952, i32 0, i32 0
  %PC.i1351 = bitcast %union.anon* %2953 to i64*
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2955 = getelementptr inbounds %struct.GPR, %struct.GPR* %2954, i32 0, i32 1
  %2956 = getelementptr inbounds %struct.Reg, %struct.Reg* %2955, i32 0, i32 0
  %EAX.i1352 = bitcast %union.anon* %2956 to i32*
  %2957 = load i32, i32* %EAX.i1352
  %2958 = zext i32 %2957 to i64
  %2959 = load i64, i64* %PC.i1351
  %2960 = add i64 %2959, 7
  store i64 %2960, i64* %PC.i1351
  store i32 %2957, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  store %struct.Memory* %loadMem_41ae66, %struct.Memory** %MEMORY
  br label %block_.L_41ae6d

block_.L_41ae6d:                                  ; preds = %block_.L_41ae61, %block_.L_41ae5c
  %loadMem_41ae6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2962 = getelementptr inbounds %struct.GPR, %struct.GPR* %2961, i32 0, i32 33
  %2963 = getelementptr inbounds %struct.Reg, %struct.Reg* %2962, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %2963 to i64*
  %2964 = load i64, i64* %PC.i1350
  %2965 = add i64 %2964, 19
  %2966 = load i64, i64* %PC.i1350
  %2967 = add i64 %2966, 5
  store i64 %2967, i64* %PC.i1350
  %2968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2965, i64* %2968, align 8
  store %struct.Memory* %loadMem_41ae6d, %struct.Memory** %MEMORY
  br label %block_.L_41ae80

block_.L_41ae72:                                  ; preds = %block_41ae14
  %loadMem_41ae72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2970 = getelementptr inbounds %struct.GPR, %struct.GPR* %2969, i32 0, i32 33
  %2971 = getelementptr inbounds %struct.Reg, %struct.Reg* %2970, i32 0, i32 0
  %PC.i1348 = bitcast %union.anon* %2971 to i64*
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2973 = getelementptr inbounds %struct.GPR, %struct.GPR* %2972, i32 0, i32 1
  %2974 = getelementptr inbounds %struct.Reg, %struct.Reg* %2973, i32 0, i32 0
  %RAX.i1349 = bitcast %union.anon* %2974 to i64*
  %2975 = load i64, i64* %PC.i1348
  %2976 = add i64 %2975, 7
  store i64 %2976, i64* %PC.i1348
  %2977 = load i32, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*)
  %2978 = zext i32 %2977 to i64
  store i64 %2978, i64* %RAX.i1349, align 8
  store %struct.Memory* %loadMem_41ae72, %struct.Memory** %MEMORY
  %loadMem_41ae79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2980 = getelementptr inbounds %struct.GPR, %struct.GPR* %2979, i32 0, i32 33
  %2981 = getelementptr inbounds %struct.Reg, %struct.Reg* %2980, i32 0, i32 0
  %PC.i1346 = bitcast %union.anon* %2981 to i64*
  %2982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2983 = getelementptr inbounds %struct.GPR, %struct.GPR* %2982, i32 0, i32 1
  %2984 = getelementptr inbounds %struct.Reg, %struct.Reg* %2983, i32 0, i32 0
  %EAX.i1347 = bitcast %union.anon* %2984 to i32*
  %2985 = load i32, i32* %EAX.i1347
  %2986 = zext i32 %2985 to i64
  %2987 = load i64, i64* %PC.i1346
  %2988 = add i64 %2987, 7
  store i64 %2988, i64* %PC.i1346
  store i32 %2985, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  store %struct.Memory* %loadMem_41ae79, %struct.Memory** %MEMORY
  br label %block_.L_41ae80

block_.L_41ae80:                                  ; preds = %block_.L_41ae72, %block_.L_41ae6d
  %loadMem_41ae80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2990 = getelementptr inbounds %struct.GPR, %struct.GPR* %2989, i32 0, i32 33
  %2991 = getelementptr inbounds %struct.Reg, %struct.Reg* %2990, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %2991 to i64*
  %2992 = load i64, i64* %PC.i1345
  %2993 = add i64 %2992, 16
  %2994 = load i64, i64* %PC.i1345
  %2995 = add i64 %2994, 5
  store i64 %2995, i64* %PC.i1345
  %2996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2993, i64* %2996, align 8
  store %struct.Memory* %loadMem_41ae80, %struct.Memory** %MEMORY
  br label %block_.L_41ae90

block_.L_41ae85:                                  ; preds = %block_.L_41ae06
  %loadMem_41ae85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2998 = getelementptr inbounds %struct.GPR, %struct.GPR* %2997, i32 0, i32 33
  %2999 = getelementptr inbounds %struct.Reg, %struct.Reg* %2998, i32 0, i32 0
  %PC.i1344 = bitcast %union.anon* %2999 to i64*
  %3000 = load i64, i64* %PC.i1344
  %3001 = add i64 %3000, 11
  store i64 %3001, i64* %PC.i1344
  store i32 999999, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  store %struct.Memory* %loadMem_41ae85, %struct.Memory** %MEMORY
  br label %block_.L_41ae90

block_.L_41ae90:                                  ; preds = %block_.L_41ae85, %block_.L_41ae80
  %loadMem_41ae90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3003 = getelementptr inbounds %struct.GPR, %struct.GPR* %3002, i32 0, i32 33
  %3004 = getelementptr inbounds %struct.Reg, %struct.Reg* %3003, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %3004 to i64*
  %3005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3006 = getelementptr inbounds %struct.GPR, %struct.GPR* %3005, i32 0, i32 15
  %3007 = getelementptr inbounds %struct.Reg, %struct.Reg* %3006, i32 0, i32 0
  %RBP.i1343 = bitcast %union.anon* %3007 to i64*
  %3008 = load i64, i64* %RBP.i1343
  %3009 = sub i64 %3008, 12416
  %3010 = load i64, i64* %PC.i1342
  %3011 = add i64 %3010, 7
  store i64 %3011, i64* %PC.i1342
  %3012 = inttoptr i64 %3009 to i32*
  %3013 = load i32, i32* %3012
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3014, align 1
  %3015 = and i32 %3013, 255
  %3016 = call i32 @llvm.ctpop.i32(i32 %3015)
  %3017 = trunc i32 %3016 to i8
  %3018 = and i8 %3017, 1
  %3019 = xor i8 %3018, 1
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3019, i8* %3020, align 1
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3021, align 1
  %3022 = icmp eq i32 %3013, 0
  %3023 = zext i1 %3022 to i8
  %3024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3023, i8* %3024, align 1
  %3025 = lshr i32 %3013, 31
  %3026 = trunc i32 %3025 to i8
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3026, i8* %3027, align 1
  %3028 = lshr i32 %3013, 31
  %3029 = xor i32 %3025, %3028
  %3030 = add i32 %3029, %3028
  %3031 = icmp eq i32 %3030, 2
  %3032 = zext i1 %3031 to i8
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3032, i8* %3033, align 1
  store %struct.Memory* %loadMem_41ae90, %struct.Memory** %MEMORY
  %loadMem_41ae97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3035 = getelementptr inbounds %struct.GPR, %struct.GPR* %3034, i32 0, i32 33
  %3036 = getelementptr inbounds %struct.Reg, %struct.Reg* %3035, i32 0, i32 0
  %PC.i1341 = bitcast %union.anon* %3036 to i64*
  %3037 = load i64, i64* %PC.i1341
  %3038 = add i64 %3037, 70
  %3039 = load i64, i64* %PC.i1341
  %3040 = add i64 %3039, 6
  %3041 = load i64, i64* %PC.i1341
  %3042 = add i64 %3041, 6
  store i64 %3042, i64* %PC.i1341
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3044 = load i8, i8* %3043, align 1
  store i8 %3044, i8* %BRANCH_TAKEN, align 1
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3046 = icmp ne i8 %3044, 0
  %3047 = select i1 %3046, i64 %3038, i64 %3040
  store i64 %3047, i64* %3045, align 8
  store %struct.Memory* %loadMem_41ae97, %struct.Memory** %MEMORY
  %loadBr_41ae97 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ae97 = icmp eq i8 %loadBr_41ae97, 1
  br i1 %cmpBr_41ae97, label %block_.L_41aedd, label %block_41ae9d

block_41ae9d:                                     ; preds = %block_.L_41ae90
  %loadMem_41ae9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3049 = getelementptr inbounds %struct.GPR, %struct.GPR* %3048, i32 0, i32 33
  %3050 = getelementptr inbounds %struct.Reg, %struct.Reg* %3049, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %3050 to i64*
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3052 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3051, i64 0, i64 0
  %YMM0.i1340 = bitcast %union.VectorReg* %3052 to %"class.std::bitset"*
  %3053 = bitcast %"class.std::bitset"* %YMM0.i1340 to i8*
  %3054 = load i64, i64* %PC.i1339
  %3055 = add i64 %3054, ptrtoint (%G_0xd50b__rip__type* @G_0xd50b__rip_ to i64)
  %3056 = load i64, i64* %PC.i1339
  %3057 = add i64 %3056, 8
  store i64 %3057, i64* %PC.i1339
  %3058 = inttoptr i64 %3055 to double*
  %3059 = load double, double* %3058
  %3060 = bitcast i8* %3053 to double*
  store double %3059, double* %3060, align 1
  %3061 = getelementptr inbounds i8, i8* %3053, i64 8
  %3062 = bitcast i8* %3061 to double*
  store double 0.000000e+00, double* %3062, align 1
  store %struct.Memory* %loadMem_41ae9d, %struct.Memory** %MEMORY
  %loadMem_41aea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3064 = getelementptr inbounds %struct.GPR, %struct.GPR* %3063, i32 0, i32 33
  %3065 = getelementptr inbounds %struct.Reg, %struct.Reg* %3064, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %3065 to i64*
  %3066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3067 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3066, i64 0, i64 1
  %YMM1.i1338 = bitcast %union.VectorReg* %3067 to %"class.std::bitset"*
  %3068 = bitcast %"class.std::bitset"* %YMM1.i1338 to i8*
  %3069 = load i64, i64* %PC.i1337
  %3070 = add i64 %3069, ptrtoint (%G_0xd4f7__rip__type* @G_0xd4f7__rip_ to i64)
  %3071 = load i64, i64* %PC.i1337
  %3072 = add i64 %3071, 8
  store i64 %3072, i64* %PC.i1337
  %3073 = inttoptr i64 %3070 to float*
  %3074 = load float, float* %3073
  %3075 = bitcast i8* %3068 to float*
  store float %3074, float* %3075, align 1
  %3076 = getelementptr inbounds i8, i8* %3068, i64 4
  %3077 = bitcast i8* %3076 to float*
  store float 0.000000e+00, float* %3077, align 1
  %3078 = getelementptr inbounds i8, i8* %3068, i64 8
  %3079 = bitcast i8* %3078 to float*
  store float 0.000000e+00, float* %3079, align 1
  %3080 = getelementptr inbounds i8, i8* %3068, i64 12
  %3081 = bitcast i8* %3080 to float*
  store float 0.000000e+00, float* %3081, align 1
  store %struct.Memory* %loadMem_41aea5, %struct.Memory** %MEMORY
  %loadMem_41aead = load %struct.Memory*, %struct.Memory** %MEMORY
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3083 = getelementptr inbounds %struct.GPR, %struct.GPR* %3082, i32 0, i32 33
  %3084 = getelementptr inbounds %struct.Reg, %struct.Reg* %3083, i32 0, i32 0
  %PC.i1335 = bitcast %union.anon* %3084 to i64*
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3086 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3085, i64 0, i64 2
  %YMM2.i1336 = bitcast %union.VectorReg* %3086 to %"class.std::bitset"*
  %3087 = bitcast %"class.std::bitset"* %YMM2.i1336 to i8*
  %3088 = load i64, i64* %PC.i1335
  %3089 = add i64 %3088, 9
  store i64 %3089, i64* %PC.i1335
  %3090 = bitcast i8* %3087 to <2 x i32>*
  %3091 = load <2 x i32>, <2 x i32>* %3090, align 1
  %3092 = getelementptr inbounds i8, i8* %3087, i64 8
  %3093 = bitcast i8* %3092 to <2 x i32>*
  %3094 = load <2 x i32>, <2 x i32>* %3093, align 1
  %3095 = load i32, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  %3096 = sitofp i32 %3095 to float
  %3097 = bitcast i8* %3087 to float*
  store float %3096, float* %3097, align 1
  %3098 = extractelement <2 x i32> %3091, i32 1
  %3099 = getelementptr inbounds i8, i8* %3087, i64 4
  %3100 = bitcast i8* %3099 to i32*
  store i32 %3098, i32* %3100, align 1
  %3101 = extractelement <2 x i32> %3094, i32 0
  %3102 = bitcast i8* %3092 to i32*
  store i32 %3101, i32* %3102, align 1
  %3103 = extractelement <2 x i32> %3094, i32 1
  %3104 = getelementptr inbounds i8, i8* %3087, i64 12
  %3105 = bitcast i8* %3104 to i32*
  store i32 %3103, i32* %3105, align 1
  store %struct.Memory* %loadMem_41aead, %struct.Memory** %MEMORY
  %loadMem_41aeb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3107 = getelementptr inbounds %struct.GPR, %struct.GPR* %3106, i32 0, i32 33
  %3108 = getelementptr inbounds %struct.Reg, %struct.Reg* %3107, i32 0, i32 0
  %PC.i1332 = bitcast %union.anon* %3108 to i64*
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3110 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3109, i64 0, i64 2
  %YMM2.i1333 = bitcast %union.VectorReg* %3110 to %"class.std::bitset"*
  %3111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3112 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3111, i64 0, i64 1
  %XMM1.i1334 = bitcast %union.VectorReg* %3112 to %union.vec128_t*
  %3113 = bitcast %"class.std::bitset"* %YMM2.i1333 to i8*
  %3114 = bitcast %"class.std::bitset"* %YMM2.i1333 to i8*
  %3115 = bitcast %union.vec128_t* %XMM1.i1334 to i8*
  %3116 = load i64, i64* %PC.i1332
  %3117 = add i64 %3116, 4
  store i64 %3117, i64* %PC.i1332
  %3118 = bitcast i8* %3114 to <2 x float>*
  %3119 = load <2 x float>, <2 x float>* %3118, align 1
  %3120 = getelementptr inbounds i8, i8* %3114, i64 8
  %3121 = bitcast i8* %3120 to <2 x i32>*
  %3122 = load <2 x i32>, <2 x i32>* %3121, align 1
  %3123 = bitcast i8* %3115 to <2 x float>*
  %3124 = load <2 x float>, <2 x float>* %3123, align 1
  %3125 = extractelement <2 x float> %3119, i32 0
  %3126 = extractelement <2 x float> %3124, i32 0
  %3127 = fmul float %3125, %3126
  %3128 = bitcast i8* %3113 to float*
  store float %3127, float* %3128, align 1
  %3129 = bitcast <2 x float> %3119 to <2 x i32>
  %3130 = extractelement <2 x i32> %3129, i32 1
  %3131 = getelementptr inbounds i8, i8* %3113, i64 4
  %3132 = bitcast i8* %3131 to i32*
  store i32 %3130, i32* %3132, align 1
  %3133 = extractelement <2 x i32> %3122, i32 0
  %3134 = getelementptr inbounds i8, i8* %3113, i64 8
  %3135 = bitcast i8* %3134 to i32*
  store i32 %3133, i32* %3135, align 1
  %3136 = extractelement <2 x i32> %3122, i32 1
  %3137 = getelementptr inbounds i8, i8* %3113, i64 12
  %3138 = bitcast i8* %3137 to i32*
  store i32 %3136, i32* %3138, align 1
  store %struct.Memory* %loadMem_41aeb6, %struct.Memory** %MEMORY
  %loadMem_41aeba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 33
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %PC.i1329 = bitcast %union.anon* %3141 to i64*
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3143 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3142, i64 0, i64 1
  %YMM1.i1330 = bitcast %union.VectorReg* %3143 to %"class.std::bitset"*
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3145 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3144, i64 0, i64 2
  %XMM2.i1331 = bitcast %union.VectorReg* %3145 to %union.vec128_t*
  %3146 = bitcast %"class.std::bitset"* %YMM1.i1330 to i8*
  %3147 = bitcast %union.vec128_t* %XMM2.i1331 to i8*
  %3148 = load i64, i64* %PC.i1329
  %3149 = add i64 %3148, 4
  store i64 %3149, i64* %PC.i1329
  %3150 = bitcast i8* %3147 to <2 x float>*
  %3151 = load <2 x float>, <2 x float>* %3150, align 1
  %3152 = extractelement <2 x float> %3151, i32 0
  %3153 = fpext float %3152 to double
  %3154 = bitcast i8* %3146 to double*
  store double %3153, double* %3154, align 1
  store %struct.Memory* %loadMem_41aeba, %struct.Memory** %MEMORY
  %loadMem_41aebe = load %struct.Memory*, %struct.Memory** %MEMORY
  %3155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3156 = getelementptr inbounds %struct.GPR, %struct.GPR* %3155, i32 0, i32 33
  %3157 = getelementptr inbounds %struct.Reg, %struct.Reg* %3156, i32 0, i32 0
  %PC.i1326 = bitcast %union.anon* %3157 to i64*
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3159 = getelementptr inbounds %struct.GPR, %struct.GPR* %3158, i32 0, i32 15
  %3160 = getelementptr inbounds %struct.Reg, %struct.Reg* %3159, i32 0, i32 0
  %RBP.i1327 = bitcast %union.anon* %3160 to i64*
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3162 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3161, i64 0, i64 2
  %YMM2.i1328 = bitcast %union.VectorReg* %3162 to %"class.std::bitset"*
  %3163 = bitcast %"class.std::bitset"* %YMM2.i1328 to i8*
  %3164 = load i64, i64* %RBP.i1327
  %3165 = sub i64 %3164, 12416
  %3166 = load i64, i64* %PC.i1326
  %3167 = add i64 %3166, 8
  store i64 %3167, i64* %PC.i1326
  %3168 = bitcast i8* %3163 to <2 x i32>*
  %3169 = load <2 x i32>, <2 x i32>* %3168, align 1
  %3170 = getelementptr inbounds i8, i8* %3163, i64 8
  %3171 = bitcast i8* %3170 to <2 x i32>*
  %3172 = load <2 x i32>, <2 x i32>* %3171, align 1
  %3173 = inttoptr i64 %3165 to i32*
  %3174 = load i32, i32* %3173
  %3175 = sitofp i32 %3174 to float
  %3176 = bitcast i8* %3163 to float*
  store float %3175, float* %3176, align 1
  %3177 = extractelement <2 x i32> %3169, i32 1
  %3178 = getelementptr inbounds i8, i8* %3163, i64 4
  %3179 = bitcast i8* %3178 to i32*
  store i32 %3177, i32* %3179, align 1
  %3180 = extractelement <2 x i32> %3172, i32 0
  %3181 = bitcast i8* %3170 to i32*
  store i32 %3180, i32* %3181, align 1
  %3182 = extractelement <2 x i32> %3172, i32 1
  %3183 = getelementptr inbounds i8, i8* %3163, i64 12
  %3184 = bitcast i8* %3183 to i32*
  store i32 %3182, i32* %3184, align 1
  store %struct.Memory* %loadMem_41aebe, %struct.Memory** %MEMORY
  %loadMem_41aec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3186 = getelementptr inbounds %struct.GPR, %struct.GPR* %3185, i32 0, i32 33
  %3187 = getelementptr inbounds %struct.Reg, %struct.Reg* %3186, i32 0, i32 0
  %PC.i1323 = bitcast %union.anon* %3187 to i64*
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3189 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3188, i64 0, i64 2
  %YMM2.i1324 = bitcast %union.VectorReg* %3189 to %"class.std::bitset"*
  %3190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3191 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3190, i64 0, i64 2
  %XMM2.i1325 = bitcast %union.VectorReg* %3191 to %union.vec128_t*
  %3192 = bitcast %"class.std::bitset"* %YMM2.i1324 to i8*
  %3193 = bitcast %union.vec128_t* %XMM2.i1325 to i8*
  %3194 = load i64, i64* %PC.i1323
  %3195 = add i64 %3194, 4
  store i64 %3195, i64* %PC.i1323
  %3196 = bitcast i8* %3193 to <2 x float>*
  %3197 = load <2 x float>, <2 x float>* %3196, align 1
  %3198 = extractelement <2 x float> %3197, i32 0
  %3199 = fpext float %3198 to double
  %3200 = bitcast i8* %3192 to double*
  store double %3199, double* %3200, align 1
  store %struct.Memory* %loadMem_41aec6, %struct.Memory** %MEMORY
  %loadMem_41aeca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3202 = getelementptr inbounds %struct.GPR, %struct.GPR* %3201, i32 0, i32 33
  %3203 = getelementptr inbounds %struct.Reg, %struct.Reg* %3202, i32 0, i32 0
  %PC.i1320 = bitcast %union.anon* %3203 to i64*
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3205 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3204, i64 0, i64 2
  %YMM2.i1321 = bitcast %union.VectorReg* %3205 to %"class.std::bitset"*
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3207 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3206, i64 0, i64 0
  %XMM0.i1322 = bitcast %union.VectorReg* %3207 to %union.vec128_t*
  %3208 = bitcast %"class.std::bitset"* %YMM2.i1321 to i8*
  %3209 = bitcast %"class.std::bitset"* %YMM2.i1321 to i8*
  %3210 = bitcast %union.vec128_t* %XMM0.i1322 to i8*
  %3211 = load i64, i64* %PC.i1320
  %3212 = add i64 %3211, 4
  store i64 %3212, i64* %PC.i1320
  %3213 = bitcast i8* %3209 to double*
  %3214 = load double, double* %3213, align 1
  %3215 = getelementptr inbounds i8, i8* %3209, i64 8
  %3216 = bitcast i8* %3215 to i64*
  %3217 = load i64, i64* %3216, align 1
  %3218 = bitcast i8* %3210 to double*
  %3219 = load double, double* %3218, align 1
  %3220 = fadd double %3214, %3219
  %3221 = bitcast i8* %3208 to double*
  store double %3220, double* %3221, align 1
  %3222 = getelementptr inbounds i8, i8* %3208, i64 8
  %3223 = bitcast i8* %3222 to i64*
  store i64 %3217, i64* %3223, align 1
  store %struct.Memory* %loadMem_41aeca, %struct.Memory** %MEMORY
  %loadMem_41aece = load %struct.Memory*, %struct.Memory** %MEMORY
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3225 = getelementptr inbounds %struct.GPR, %struct.GPR* %3224, i32 0, i32 33
  %3226 = getelementptr inbounds %struct.Reg, %struct.Reg* %3225, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %3226 to i64*
  %3227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3228 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3227, i64 0, i64 1
  %YMM1.i1318 = bitcast %union.VectorReg* %3228 to %"class.std::bitset"*
  %3229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3230 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3229, i64 0, i64 2
  %XMM2.i1319 = bitcast %union.VectorReg* %3230 to %union.vec128_t*
  %3231 = bitcast %"class.std::bitset"* %YMM1.i1318 to i8*
  %3232 = bitcast %"class.std::bitset"* %YMM1.i1318 to i8*
  %3233 = bitcast %union.vec128_t* %XMM2.i1319 to i8*
  %3234 = load i64, i64* %PC.i1317
  %3235 = add i64 %3234, 4
  store i64 %3235, i64* %PC.i1317
  %3236 = bitcast i8* %3232 to double*
  %3237 = load double, double* %3236, align 1
  %3238 = getelementptr inbounds i8, i8* %3232, i64 8
  %3239 = bitcast i8* %3238 to i64*
  %3240 = load i64, i64* %3239, align 1
  %3241 = bitcast i8* %3233 to double*
  %3242 = load double, double* %3241, align 1
  %3243 = fdiv double %3237, %3242
  %3244 = bitcast i8* %3231 to double*
  store double %3243, double* %3244, align 1
  %3245 = getelementptr inbounds i8, i8* %3231, i64 8
  %3246 = bitcast i8* %3245 to i64*
  store i64 %3240, i64* %3246, align 1
  store %struct.Memory* %loadMem_41aece, %struct.Memory** %MEMORY
  %loadMem_41aed2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3248 = getelementptr inbounds %struct.GPR, %struct.GPR* %3247, i32 0, i32 33
  %3249 = getelementptr inbounds %struct.Reg, %struct.Reg* %3248, i32 0, i32 0
  %PC.i1314 = bitcast %union.anon* %3249 to i64*
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3251 = getelementptr inbounds %struct.GPR, %struct.GPR* %3250, i32 0, i32 1
  %3252 = getelementptr inbounds %struct.Reg, %struct.Reg* %3251, i32 0, i32 0
  %RAX.i1315 = bitcast %union.anon* %3252 to i64*
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3254 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3253, i64 0, i64 1
  %XMM1.i1316 = bitcast %union.VectorReg* %3254 to %union.vec128_t*
  %3255 = bitcast %union.vec128_t* %XMM1.i1316 to i8*
  %3256 = load i64, i64* %PC.i1314
  %3257 = add i64 %3256, 4
  store i64 %3257, i64* %PC.i1314
  %3258 = bitcast i8* %3255 to double*
  %3259 = load double, double* %3258, align 1
  %3260 = call double @llvm.trunc.f64(double %3259)
  %3261 = call double @llvm.fabs.f64(double %3260)
  %3262 = fcmp ogt double %3261, 0x41DFFFFFFFC00000
  %3263 = fptosi double %3260 to i32
  %3264 = zext i32 %3263 to i64
  %3265 = select i1 %3262, i64 2147483648, i64 %3264
  store i64 %3265, i64* %RAX.i1315, align 8
  store %struct.Memory* %loadMem_41aed2, %struct.Memory** %MEMORY
  %loadMem_41aed6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3267 = getelementptr inbounds %struct.GPR, %struct.GPR* %3266, i32 0, i32 33
  %3268 = getelementptr inbounds %struct.Reg, %struct.Reg* %3267, i32 0, i32 0
  %PC.i1312 = bitcast %union.anon* %3268 to i64*
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3270 = getelementptr inbounds %struct.GPR, %struct.GPR* %3269, i32 0, i32 1
  %3271 = getelementptr inbounds %struct.Reg, %struct.Reg* %3270, i32 0, i32 0
  %EAX.i1313 = bitcast %union.anon* %3271 to i32*
  %3272 = load i32, i32* %EAX.i1313
  %3273 = zext i32 %3272 to i64
  %3274 = load i64, i64* %PC.i1312
  %3275 = add i64 %3274, 7
  store i64 %3275, i64* %PC.i1312
  store i32 %3272, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  store %struct.Memory* %loadMem_41aed6, %struct.Memory** %MEMORY
  br label %block_.L_41aedd

block_.L_41aedd:                                  ; preds = %block_41ae9d, %block_.L_41ae90
  %loadMem_41aedd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3277 = getelementptr inbounds %struct.GPR, %struct.GPR* %3276, i32 0, i32 33
  %3278 = getelementptr inbounds %struct.Reg, %struct.Reg* %3277, i32 0, i32 0
  %PC.i1310 = bitcast %union.anon* %3278 to i64*
  %3279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3280 = getelementptr inbounds %struct.GPR, %struct.GPR* %3279, i32 0, i32 11
  %3281 = getelementptr inbounds %struct.Reg, %struct.Reg* %3280, i32 0, i32 0
  %RDI.i1311 = bitcast %union.anon* %3281 to i64*
  %3282 = load i64, i64* %PC.i1310
  %3283 = add i64 %3282, 10
  store i64 %3283, i64* %PC.i1310
  store i64 ptrtoint (%G__0x4290b9_type* @G__0x4290b9 to i64), i64* %RDI.i1311, align 8
  store %struct.Memory* %loadMem_41aedd, %struct.Memory** %MEMORY
  %loadMem_41aee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3285 = getelementptr inbounds %struct.GPR, %struct.GPR* %3284, i32 0, i32 33
  %3286 = getelementptr inbounds %struct.Reg, %struct.Reg* %3285, i32 0, i32 0
  %PC.i1308 = bitcast %union.anon* %3286 to i64*
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3288 = getelementptr inbounds %struct.GPR, %struct.GPR* %3287, i32 0, i32 9
  %3289 = getelementptr inbounds %struct.Reg, %struct.Reg* %3288, i32 0, i32 0
  %RSI.i1309 = bitcast %union.anon* %3289 to i64*
  %3290 = load i64, i64* %PC.i1308
  %3291 = add i64 %3290, 7
  store i64 %3291, i64* %PC.i1308
  %3292 = load i32, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  %3293 = zext i32 %3292 to i64
  store i64 %3293, i64* %RSI.i1309, align 8
  store %struct.Memory* %loadMem_41aee7, %struct.Memory** %MEMORY
  %loadMem_41aeee = load %struct.Memory*, %struct.Memory** %MEMORY
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3295 = getelementptr inbounds %struct.GPR, %struct.GPR* %3294, i32 0, i32 33
  %3296 = getelementptr inbounds %struct.Reg, %struct.Reg* %3295, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %3296 to i64*
  %3297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3298 = getelementptr inbounds %struct.GPR, %struct.GPR* %3297, i32 0, i32 1
  %3299 = getelementptr inbounds %struct.Reg, %struct.Reg* %3298, i32 0, i32 0
  %3300 = bitcast %union.anon* %3299 to %struct.anon.2*
  %AL.i1307 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3300, i32 0, i32 0
  %3301 = load i64, i64* %PC.i1306
  %3302 = add i64 %3301, 2
  store i64 %3302, i64* %PC.i1306
  store i8 0, i8* %AL.i1307, align 1
  store %struct.Memory* %loadMem_41aeee, %struct.Memory** %MEMORY
  %loadMem1_41aef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3304 = getelementptr inbounds %struct.GPR, %struct.GPR* %3303, i32 0, i32 33
  %3305 = getelementptr inbounds %struct.Reg, %struct.Reg* %3304, i32 0, i32 0
  %PC.i1305 = bitcast %union.anon* %3305 to i64*
  %3306 = load i64, i64* %PC.i1305
  %3307 = add i64 %3306, -107072
  %3308 = load i64, i64* %PC.i1305
  %3309 = add i64 %3308, 5
  %3310 = load i64, i64* %PC.i1305
  %3311 = add i64 %3310, 5
  store i64 %3311, i64* %PC.i1305
  %3312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3313 = load i64, i64* %3312, align 8
  %3314 = add i64 %3313, -8
  %3315 = inttoptr i64 %3314 to i64*
  store i64 %3309, i64* %3315
  store i64 %3314, i64* %3312, align 8
  %3316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3307, i64* %3316, align 8
  store %struct.Memory* %loadMem1_41aef0, %struct.Memory** %MEMORY
  %loadMem2_41aef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41aef0 = load i64, i64* %3
  %3317 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41aef0)
  store %struct.Memory* %3317, %struct.Memory** %MEMORY
  %loadMem_41aef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3319 = getelementptr inbounds %struct.GPR, %struct.GPR* %3318, i32 0, i32 33
  %3320 = getelementptr inbounds %struct.Reg, %struct.Reg* %3319, i32 0, i32 0
  %PC.i1302 = bitcast %union.anon* %3320 to i64*
  %3321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3322 = getelementptr inbounds %struct.GPR, %struct.GPR* %3321, i32 0, i32 15
  %3323 = getelementptr inbounds %struct.Reg, %struct.Reg* %3322, i32 0, i32 0
  %RBP.i1303 = bitcast %union.anon* %3323 to i64*
  %3324 = load i64, i64* %RBP.i1303
  %3325 = sub i64 %3324, 12416
  %3326 = load i64, i64* %PC.i1302
  %3327 = add i64 %3326, 7
  store i64 %3327, i64* %PC.i1302
  %3328 = inttoptr i64 %3325 to i32*
  %3329 = load i32, i32* %3328
  %3330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3330, align 1
  %3331 = and i32 %3329, 255
  %3332 = call i32 @llvm.ctpop.i32(i32 %3331)
  %3333 = trunc i32 %3332 to i8
  %3334 = and i8 %3333, 1
  %3335 = xor i8 %3334, 1
  %3336 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3335, i8* %3336, align 1
  %3337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3337, align 1
  %3338 = icmp eq i32 %3329, 0
  %3339 = zext i1 %3338 to i8
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3339, i8* %3340, align 1
  %3341 = lshr i32 %3329, 31
  %3342 = trunc i32 %3341 to i8
  %3343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3342, i8* %3343, align 1
  %3344 = lshr i32 %3329, 31
  %3345 = xor i32 %3341, %3344
  %3346 = add i32 %3345, %3344
  %3347 = icmp eq i32 %3346, 2
  %3348 = zext i1 %3347 to i8
  %3349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3348, i8* %3349, align 1
  store %struct.Memory* %loadMem_41aef5, %struct.Memory** %MEMORY
  %loadMem_41aefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3351 = getelementptr inbounds %struct.GPR, %struct.GPR* %3350, i32 0, i32 33
  %3352 = getelementptr inbounds %struct.Reg, %struct.Reg* %3351, i32 0, i32 0
  %PC.i1299 = bitcast %union.anon* %3352 to i64*
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3354 = getelementptr inbounds %struct.GPR, %struct.GPR* %3353, i32 0, i32 1
  %3355 = getelementptr inbounds %struct.Reg, %struct.Reg* %3354, i32 0, i32 0
  %EAX.i1300 = bitcast %union.anon* %3355 to i32*
  %3356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3357 = getelementptr inbounds %struct.GPR, %struct.GPR* %3356, i32 0, i32 15
  %3358 = getelementptr inbounds %struct.Reg, %struct.Reg* %3357, i32 0, i32 0
  %RBP.i1301 = bitcast %union.anon* %3358 to i64*
  %3359 = load i64, i64* %RBP.i1301
  %3360 = sub i64 %3359, 12572
  %3361 = load i32, i32* %EAX.i1300
  %3362 = zext i32 %3361 to i64
  %3363 = load i64, i64* %PC.i1299
  %3364 = add i64 %3363, 6
  store i64 %3364, i64* %PC.i1299
  %3365 = inttoptr i64 %3360 to i32*
  store i32 %3361, i32* %3365
  store %struct.Memory* %loadMem_41aefc, %struct.Memory** %MEMORY
  %loadMem_41af02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3367 = getelementptr inbounds %struct.GPR, %struct.GPR* %3366, i32 0, i32 33
  %3368 = getelementptr inbounds %struct.Reg, %struct.Reg* %3367, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %3368 to i64*
  %3369 = load i64, i64* %PC.i1298
  %3370 = add i64 %3369, 43
  %3371 = load i64, i64* %PC.i1298
  %3372 = add i64 %3371, 6
  %3373 = load i64, i64* %PC.i1298
  %3374 = add i64 %3373, 6
  store i64 %3374, i64* %PC.i1298
  %3375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3376 = load i8, i8* %3375, align 1
  %3377 = icmp eq i8 %3376, 0
  %3378 = zext i1 %3377 to i8
  store i8 %3378, i8* %BRANCH_TAKEN, align 1
  %3379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3380 = select i1 %3377, i64 %3370, i64 %3372
  store i64 %3380, i64* %3379, align 8
  store %struct.Memory* %loadMem_41af02, %struct.Memory** %MEMORY
  %loadBr_41af02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41af02 = icmp eq i8 %loadBr_41af02, 1
  br i1 %cmpBr_41af02, label %block_.L_41af2d, label %block_41af08

block_41af08:                                     ; preds = %block_.L_41aedd
  %loadMem1_41af08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3382 = getelementptr inbounds %struct.GPR, %struct.GPR* %3381, i32 0, i32 33
  %3383 = getelementptr inbounds %struct.Reg, %struct.Reg* %3382, i32 0, i32 0
  %PC.i1297 = bitcast %union.anon* %3383 to i64*
  %3384 = load i64, i64* %PC.i1297
  %3385 = add i64 %3384, 21944
  %3386 = load i64, i64* %PC.i1297
  %3387 = add i64 %3386, 5
  %3388 = load i64, i64* %PC.i1297
  %3389 = add i64 %3388, 5
  store i64 %3389, i64* %PC.i1297
  %3390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3391 = load i64, i64* %3390, align 8
  %3392 = add i64 %3391, -8
  %3393 = inttoptr i64 %3392 to i64*
  store i64 %3387, i64* %3393
  store i64 %3392, i64* %3390, align 8
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3385, i64* %3394, align 8
  store %struct.Memory* %loadMem1_41af08, %struct.Memory** %MEMORY
  %loadMem2_41af08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41af08 = load i64, i64* %3
  %call2_41af08 = call %struct.Memory* @sub_4204c0.clear_tt(%struct.State* %0, i64 %loadPC_41af08, %struct.Memory* %loadMem2_41af08)
  store %struct.Memory* %call2_41af08, %struct.Memory** %MEMORY
  %loadMem1_41af0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3396 = getelementptr inbounds %struct.GPR, %struct.GPR* %3395, i32 0, i32 33
  %3397 = getelementptr inbounds %struct.Reg, %struct.Reg* %3396, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %3397 to i64*
  %3398 = load i64, i64* %PC.i1296
  %3399 = add i64 %3398, -99069
  %3400 = load i64, i64* %PC.i1296
  %3401 = add i64 %3400, 5
  %3402 = load i64, i64* %PC.i1296
  %3403 = add i64 %3402, 5
  store i64 %3403, i64* %PC.i1296
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3405 = load i64, i64* %3404, align 8
  %3406 = add i64 %3405, -8
  %3407 = inttoptr i64 %3406 to i64*
  store i64 %3401, i64* %3407
  store i64 %3406, i64* %3404, align 8
  %3408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3399, i64* %3408, align 8
  store %struct.Memory* %loadMem1_41af0d, %struct.Memory** %MEMORY
  %loadMem2_41af0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41af0d = load i64, i64* %3
  %call2_41af0d = call %struct.Memory* @sub_402c10.reset_ecache(%struct.State* %0, i64 %loadPC_41af0d, %struct.Memory* %loadMem2_41af0d)
  store %struct.Memory* %call2_41af0d, %struct.Memory** %MEMORY
  %loadMem_41af12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3410 = getelementptr inbounds %struct.GPR, %struct.GPR* %3409, i32 0, i32 33
  %3411 = getelementptr inbounds %struct.Reg, %struct.Reg* %3410, i32 0, i32 0
  %PC.i1294 = bitcast %union.anon* %3411 to i64*
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3413 = getelementptr inbounds %struct.GPR, %struct.GPR* %3412, i32 0, i32 1
  %3414 = getelementptr inbounds %struct.Reg, %struct.Reg* %3413, i32 0, i32 0
  %RAX.i1295 = bitcast %union.anon* %3414 to i64*
  %3415 = load i64, i64* %PC.i1294
  %3416 = add i64 %3415, 10
  store i64 %3416, i64* %PC.i1294
  store i64 ptrtoint (%G__0x886bf0_type* @G__0x886bf0 to i64), i64* %RAX.i1295, align 8
  store %struct.Memory* %loadMem_41af12, %struct.Memory** %MEMORY
  %loadMem_41af1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3418 = getelementptr inbounds %struct.GPR, %struct.GPR* %3417, i32 0, i32 33
  %3419 = getelementptr inbounds %struct.Reg, %struct.Reg* %3418, i32 0, i32 0
  %PC.i1291 = bitcast %union.anon* %3419 to i64*
  %3420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3421 = getelementptr inbounds %struct.GPR, %struct.GPR* %3420, i32 0, i32 9
  %3422 = getelementptr inbounds %struct.Reg, %struct.Reg* %3421, i32 0, i32 0
  %ESI.i1292 = bitcast %union.anon* %3422 to i32*
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3424 = getelementptr inbounds %struct.GPR, %struct.GPR* %3423, i32 0, i32 9
  %3425 = getelementptr inbounds %struct.Reg, %struct.Reg* %3424, i32 0, i32 0
  %RSI.i1293 = bitcast %union.anon* %3425 to i64*
  %3426 = load i64, i64* %RSI.i1293
  %3427 = load i32, i32* %ESI.i1292
  %3428 = zext i32 %3427 to i64
  %3429 = load i64, i64* %PC.i1291
  %3430 = add i64 %3429, 2
  store i64 %3430, i64* %PC.i1291
  %3431 = xor i64 %3428, %3426
  %3432 = trunc i64 %3431 to i32
  %3433 = and i64 %3431, 4294967295
  store i64 %3433, i64* %RSI.i1293, align 8
  %3434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3434, align 1
  %3435 = and i32 %3432, 255
  %3436 = call i32 @llvm.ctpop.i32(i32 %3435)
  %3437 = trunc i32 %3436 to i8
  %3438 = and i8 %3437, 1
  %3439 = xor i8 %3438, 1
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3439, i8* %3440, align 1
  %3441 = icmp eq i32 %3432, 0
  %3442 = zext i1 %3441 to i8
  %3443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3442, i8* %3443, align 1
  %3444 = lshr i32 %3432, 31
  %3445 = trunc i32 %3444 to i8
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3445, i8* %3446, align 1
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3447, align 1
  %3448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3448, align 1
  store %struct.Memory* %loadMem_41af1c, %struct.Memory** %MEMORY
  %loadMem_41af1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3450 = getelementptr inbounds %struct.GPR, %struct.GPR* %3449, i32 0, i32 33
  %3451 = getelementptr inbounds %struct.Reg, %struct.Reg* %3450, i32 0, i32 0
  %PC.i1289 = bitcast %union.anon* %3451 to i64*
  %3452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3453 = getelementptr inbounds %struct.GPR, %struct.GPR* %3452, i32 0, i32 5
  %3454 = getelementptr inbounds %struct.Reg, %struct.Reg* %3453, i32 0, i32 0
  %RCX.i1290 = bitcast %union.anon* %3454 to i64*
  %3455 = load i64, i64* %PC.i1289
  %3456 = add i64 %3455, 5
  store i64 %3456, i64* %PC.i1289
  store i64 1200, i64* %RCX.i1290, align 8
  store %struct.Memory* %loadMem_41af1e, %struct.Memory** %MEMORY
  %loadMem_41af23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3458 = getelementptr inbounds %struct.GPR, %struct.GPR* %3457, i32 0, i32 33
  %3459 = getelementptr inbounds %struct.Reg, %struct.Reg* %3458, i32 0, i32 0
  %PC.i1286 = bitcast %union.anon* %3459 to i64*
  %3460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3461 = getelementptr inbounds %struct.GPR, %struct.GPR* %3460, i32 0, i32 5
  %3462 = getelementptr inbounds %struct.Reg, %struct.Reg* %3461, i32 0, i32 0
  %ECX.i1287 = bitcast %union.anon* %3462 to i32*
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3464 = getelementptr inbounds %struct.GPR, %struct.GPR* %3463, i32 0, i32 7
  %3465 = getelementptr inbounds %struct.Reg, %struct.Reg* %3464, i32 0, i32 0
  %RDX.i1288 = bitcast %union.anon* %3465 to i64*
  %3466 = load i32, i32* %ECX.i1287
  %3467 = zext i32 %3466 to i64
  %3468 = load i64, i64* %PC.i1286
  %3469 = add i64 %3468, 2
  store i64 %3469, i64* %PC.i1286
  %3470 = and i64 %3467, 4294967295
  store i64 %3470, i64* %RDX.i1288, align 8
  store %struct.Memory* %loadMem_41af23, %struct.Memory** %MEMORY
  %loadMem_41af25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3472 = getelementptr inbounds %struct.GPR, %struct.GPR* %3471, i32 0, i32 33
  %3473 = getelementptr inbounds %struct.Reg, %struct.Reg* %3472, i32 0, i32 0
  %PC.i1283 = bitcast %union.anon* %3473 to i64*
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3475 = getelementptr inbounds %struct.GPR, %struct.GPR* %3474, i32 0, i32 1
  %3476 = getelementptr inbounds %struct.Reg, %struct.Reg* %3475, i32 0, i32 0
  %RAX.i1284 = bitcast %union.anon* %3476 to i64*
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3478 = getelementptr inbounds %struct.GPR, %struct.GPR* %3477, i32 0, i32 11
  %3479 = getelementptr inbounds %struct.Reg, %struct.Reg* %3478, i32 0, i32 0
  %RDI.i1285 = bitcast %union.anon* %3479 to i64*
  %3480 = load i64, i64* %RAX.i1284
  %3481 = load i64, i64* %PC.i1283
  %3482 = add i64 %3481, 3
  store i64 %3482, i64* %PC.i1283
  store i64 %3480, i64* %RDI.i1285, align 8
  store %struct.Memory* %loadMem_41af25, %struct.Memory** %MEMORY
  %loadMem1_41af28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3484 = getelementptr inbounds %struct.GPR, %struct.GPR* %3483, i32 0, i32 33
  %3485 = getelementptr inbounds %struct.Reg, %struct.Reg* %3484, i32 0, i32 0
  %PC.i1282 = bitcast %union.anon* %3485 to i64*
  %3486 = load i64, i64* %PC.i1282
  %3487 = add i64 %3486, -107096
  %3488 = load i64, i64* %PC.i1282
  %3489 = add i64 %3488, 5
  %3490 = load i64, i64* %PC.i1282
  %3491 = add i64 %3490, 5
  store i64 %3491, i64* %PC.i1282
  %3492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3493 = load i64, i64* %3492, align 8
  %3494 = add i64 %3493, -8
  %3495 = inttoptr i64 %3494 to i64*
  store i64 %3489, i64* %3495
  store i64 %3494, i64* %3492, align 8
  %3496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3487, i64* %3496, align 8
  store %struct.Memory* %loadMem1_41af28, %struct.Memory** %MEMORY
  %loadMem2_41af28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41af28 = load i64, i64* %3
  %3497 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %loadMem2_41af28)
  store %struct.Memory* %3497, %struct.Memory** %MEMORY
  br label %block_.L_41af2d

block_.L_41af2d:                                  ; preds = %block_41af08, %block_.L_41aedd
  %loadMem_41af2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 33
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %PC.i1279 = bitcast %union.anon* %3500 to i64*
  %3501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3502 = getelementptr inbounds %struct.GPR, %struct.GPR* %3501, i32 0, i32 15
  %3503 = getelementptr inbounds %struct.Reg, %struct.Reg* %3502, i32 0, i32 0
  %RBP.i1280 = bitcast %union.anon* %3503 to i64*
  %3504 = load i64, i64* %RBP.i1280
  %3505 = sub i64 %3504, 12416
  %3506 = load i64, i64* %PC.i1279
  %3507 = add i64 %3506, 7
  store i64 %3507, i64* %PC.i1279
  %3508 = inttoptr i64 %3505 to i32*
  %3509 = load i32, i32* %3508
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3510, align 1
  %3511 = and i32 %3509, 255
  %3512 = call i32 @llvm.ctpop.i32(i32 %3511)
  %3513 = trunc i32 %3512 to i8
  %3514 = and i8 %3513, 1
  %3515 = xor i8 %3514, 1
  %3516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3515, i8* %3516, align 1
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3517, align 1
  %3518 = icmp eq i32 %3509, 0
  %3519 = zext i1 %3518 to i8
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3519, i8* %3520, align 1
  %3521 = lshr i32 %3509, 31
  %3522 = trunc i32 %3521 to i8
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3522, i8* %3523, align 1
  %3524 = lshr i32 %3509, 31
  %3525 = xor i32 %3521, %3524
  %3526 = add i32 %3525, %3524
  %3527 = icmp eq i32 %3526, 2
  %3528 = zext i1 %3527 to i8
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3528, i8* %3529, align 1
  store %struct.Memory* %loadMem_41af2d, %struct.Memory** %MEMORY
  %loadMem_41af34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3531 = getelementptr inbounds %struct.GPR, %struct.GPR* %3530, i32 0, i32 33
  %3532 = getelementptr inbounds %struct.Reg, %struct.Reg* %3531, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %3532 to i64*
  %3533 = load i64, i64* %PC.i1278
  %3534 = add i64 %3533, 134
  %3535 = load i64, i64* %PC.i1278
  %3536 = add i64 %3535, 6
  %3537 = load i64, i64* %PC.i1278
  %3538 = add i64 %3537, 6
  store i64 %3538, i64* %PC.i1278
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3540 = load i8, i8* %3539, align 1
  %3541 = icmp eq i8 %3540, 0
  %3542 = zext i1 %3541 to i8
  store i8 %3542, i8* %BRANCH_TAKEN, align 1
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3544 = select i1 %3541, i64 %3534, i64 %3536
  store i64 %3544, i64* %3543, align 8
  store %struct.Memory* %loadMem_41af34, %struct.Memory** %MEMORY
  %loadBr_41af34 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41af34 = icmp eq i8 %loadBr_41af34, 1
  br i1 %cmpBr_41af34, label %block_.L_41afba, label %block_41af3a

block_41af3a:                                     ; preds = %block_.L_41af2d
  %loadMem_41af3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3546 = getelementptr inbounds %struct.GPR, %struct.GPR* %3545, i32 0, i32 33
  %3547 = getelementptr inbounds %struct.Reg, %struct.Reg* %3546, i32 0, i32 0
  %PC.i1277 = bitcast %union.anon* %3547 to i64*
  %3548 = load i64, i64* %PC.i1277
  %3549 = add i64 %3548, 8
  store i64 %3549, i64* %PC.i1277
  %3550 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3551, align 1
  %3552 = and i32 %3550, 255
  %3553 = call i32 @llvm.ctpop.i32(i32 %3552)
  %3554 = trunc i32 %3553 to i8
  %3555 = and i8 %3554, 1
  %3556 = xor i8 %3555, 1
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3556, i8* %3557, align 1
  %3558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3558, align 1
  %3559 = icmp eq i32 %3550, 0
  %3560 = zext i1 %3559 to i8
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3560, i8* %3561, align 1
  %3562 = lshr i32 %3550, 31
  %3563 = trunc i32 %3562 to i8
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3563, i8* %3564, align 1
  %3565 = lshr i32 %3550, 31
  %3566 = xor i32 %3562, %3565
  %3567 = add i32 %3566, %3565
  %3568 = icmp eq i32 %3567, 2
  %3569 = zext i1 %3568 to i8
  %3570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3569, i8* %3570, align 1
  store %struct.Memory* %loadMem_41af3a, %struct.Memory** %MEMORY
  %loadMem_41af42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3572 = getelementptr inbounds %struct.GPR, %struct.GPR* %3571, i32 0, i32 33
  %3573 = getelementptr inbounds %struct.Reg, %struct.Reg* %3572, i32 0, i32 0
  %PC.i1276 = bitcast %union.anon* %3573 to i64*
  %3574 = load i64, i64* %PC.i1276
  %3575 = add i64 %3574, 120
  %3576 = load i64, i64* %PC.i1276
  %3577 = add i64 %3576, 6
  %3578 = load i64, i64* %PC.i1276
  %3579 = add i64 %3578, 6
  store i64 %3579, i64* %PC.i1276
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3581 = load i8, i8* %3580, align 1
  %3582 = icmp eq i8 %3581, 0
  %3583 = zext i1 %3582 to i8
  store i8 %3583, i8* %BRANCH_TAKEN, align 1
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3585 = select i1 %3582, i64 %3575, i64 %3577
  store i64 %3585, i64* %3584, align 8
  store %struct.Memory* %loadMem_41af42, %struct.Memory** %MEMORY
  %loadBr_41af42 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41af42 = icmp eq i8 %loadBr_41af42, 1
  br i1 %cmpBr_41af42, label %block_.L_41afba, label %block_41af48

block_41af48:                                     ; preds = %block_41af3a
  %loadMem_41af48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3587 = getelementptr inbounds %struct.GPR, %struct.GPR* %3586, i32 0, i32 33
  %3588 = getelementptr inbounds %struct.Reg, %struct.Reg* %3587, i32 0, i32 0
  %PC.i1275 = bitcast %union.anon* %3588 to i64*
  %3589 = load i64, i64* %PC.i1275
  %3590 = add i64 %3589, 8
  store i64 %3590, i64* %PC.i1275
  %3591 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %3592 = sub i32 %3591, 3
  %3593 = icmp ult i32 %3591, 3
  %3594 = zext i1 %3593 to i8
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3594, i8* %3595, align 1
  %3596 = and i32 %3592, 255
  %3597 = call i32 @llvm.ctpop.i32(i32 %3596)
  %3598 = trunc i32 %3597 to i8
  %3599 = and i8 %3598, 1
  %3600 = xor i8 %3599, 1
  %3601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3600, i8* %3601, align 1
  %3602 = xor i32 %3591, 3
  %3603 = xor i32 %3602, %3592
  %3604 = lshr i32 %3603, 4
  %3605 = trunc i32 %3604 to i8
  %3606 = and i8 %3605, 1
  %3607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3606, i8* %3607, align 1
  %3608 = icmp eq i32 %3592, 0
  %3609 = zext i1 %3608 to i8
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3609, i8* %3610, align 1
  %3611 = lshr i32 %3592, 31
  %3612 = trunc i32 %3611 to i8
  %3613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3612, i8* %3613, align 1
  %3614 = lshr i32 %3591, 31
  %3615 = xor i32 %3611, %3614
  %3616 = add i32 %3615, %3614
  %3617 = icmp eq i32 %3616, 2
  %3618 = zext i1 %3617 to i8
  %3619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3618, i8* %3619, align 1
  store %struct.Memory* %loadMem_41af48, %struct.Memory** %MEMORY
  %loadMem_41af50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3621 = getelementptr inbounds %struct.GPR, %struct.GPR* %3620, i32 0, i32 33
  %3622 = getelementptr inbounds %struct.Reg, %struct.Reg* %3621, i32 0, i32 0
  %PC.i1274 = bitcast %union.anon* %3622 to i64*
  %3623 = load i64, i64* %PC.i1274
  %3624 = add i64 %3623, 20
  %3625 = load i64, i64* %PC.i1274
  %3626 = add i64 %3625, 6
  %3627 = load i64, i64* %PC.i1274
  %3628 = add i64 %3627, 6
  store i64 %3628, i64* %PC.i1274
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3630 = load i8, i8* %3629, align 1
  store i8 %3630, i8* %BRANCH_TAKEN, align 1
  %3631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3632 = icmp ne i8 %3630, 0
  %3633 = select i1 %3632, i64 %3624, i64 %3626
  store i64 %3633, i64* %3631, align 8
  store %struct.Memory* %loadMem_41af50, %struct.Memory** %MEMORY
  %loadBr_41af50 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41af50 = icmp eq i8 %loadBr_41af50, 1
  br i1 %cmpBr_41af50, label %block_.L_41af64, label %block_41af56

block_41af56:                                     ; preds = %block_41af48
  %loadMem_41af56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3635 = getelementptr inbounds %struct.GPR, %struct.GPR* %3634, i32 0, i32 33
  %3636 = getelementptr inbounds %struct.Reg, %struct.Reg* %3635, i32 0, i32 0
  %PC.i1273 = bitcast %union.anon* %3636 to i64*
  %3637 = load i64, i64* %PC.i1273
  %3638 = add i64 %3637, 8
  store i64 %3638, i64* %PC.i1273
  %3639 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %3640 = sub i32 %3639, 4
  %3641 = icmp ult i32 %3639, 4
  %3642 = zext i1 %3641 to i8
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3642, i8* %3643, align 1
  %3644 = and i32 %3640, 255
  %3645 = call i32 @llvm.ctpop.i32(i32 %3644)
  %3646 = trunc i32 %3645 to i8
  %3647 = and i8 %3646, 1
  %3648 = xor i8 %3647, 1
  %3649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3648, i8* %3649, align 1
  %3650 = xor i32 %3639, 4
  %3651 = xor i32 %3650, %3640
  %3652 = lshr i32 %3651, 4
  %3653 = trunc i32 %3652 to i8
  %3654 = and i8 %3653, 1
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3654, i8* %3655, align 1
  %3656 = icmp eq i32 %3640, 0
  %3657 = zext i1 %3656 to i8
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3657, i8* %3658, align 1
  %3659 = lshr i32 %3640, 31
  %3660 = trunc i32 %3659 to i8
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3660, i8* %3661, align 1
  %3662 = lshr i32 %3639, 31
  %3663 = xor i32 %3659, %3662
  %3664 = add i32 %3663, %3662
  %3665 = icmp eq i32 %3664, 2
  %3666 = zext i1 %3665 to i8
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3666, i8* %3667, align 1
  store %struct.Memory* %loadMem_41af56, %struct.Memory** %MEMORY
  %loadMem_41af5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3669 = getelementptr inbounds %struct.GPR, %struct.GPR* %3668, i32 0, i32 33
  %3670 = getelementptr inbounds %struct.Reg, %struct.Reg* %3669, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %3670 to i64*
  %3671 = load i64, i64* %PC.i1272
  %3672 = add i64 %3671, 92
  %3673 = load i64, i64* %PC.i1272
  %3674 = add i64 %3673, 6
  %3675 = load i64, i64* %PC.i1272
  %3676 = add i64 %3675, 6
  store i64 %3676, i64* %PC.i1272
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3678 = load i8, i8* %3677, align 1
  %3679 = icmp eq i8 %3678, 0
  %3680 = zext i1 %3679 to i8
  store i8 %3680, i8* %BRANCH_TAKEN, align 1
  %3681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3682 = select i1 %3679, i64 %3672, i64 %3674
  store i64 %3682, i64* %3681, align 8
  store %struct.Memory* %loadMem_41af5e, %struct.Memory** %MEMORY
  %loadBr_41af5e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41af5e = icmp eq i8 %loadBr_41af5e, 1
  br i1 %cmpBr_41af5e, label %block_.L_41afba, label %block_.L_41af64

block_.L_41af64:                                  ; preds = %block_41af56, %block_41af48
  %loadMem_41af64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3684 = getelementptr inbounds %struct.GPR, %struct.GPR* %3683, i32 0, i32 33
  %3685 = getelementptr inbounds %struct.Reg, %struct.Reg* %3684, i32 0, i32 0
  %PC.i1271 = bitcast %union.anon* %3685 to i64*
  %3686 = load i64, i64* %PC.i1271
  %3687 = add i64 %3686, 8
  store i64 %3687, i64* %PC.i1271
  %3688 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %3689 = sub i32 %3688, 3
  %3690 = icmp ult i32 %3688, 3
  %3691 = zext i1 %3690 to i8
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3691, i8* %3692, align 1
  %3693 = and i32 %3689, 255
  %3694 = call i32 @llvm.ctpop.i32(i32 %3693)
  %3695 = trunc i32 %3694 to i8
  %3696 = and i8 %3695, 1
  %3697 = xor i8 %3696, 1
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3697, i8* %3698, align 1
  %3699 = xor i32 %3688, 3
  %3700 = xor i32 %3699, %3689
  %3701 = lshr i32 %3700, 4
  %3702 = trunc i32 %3701 to i8
  %3703 = and i8 %3702, 1
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3703, i8* %3704, align 1
  %3705 = icmp eq i32 %3689, 0
  %3706 = zext i1 %3705 to i8
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3706, i8* %3707, align 1
  %3708 = lshr i32 %3689, 31
  %3709 = trunc i32 %3708 to i8
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3709, i8* %3710, align 1
  %3711 = lshr i32 %3688, 31
  %3712 = xor i32 %3708, %3711
  %3713 = add i32 %3712, %3711
  %3714 = icmp eq i32 %3713, 2
  %3715 = zext i1 %3714 to i8
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3715, i8* %3716, align 1
  store %struct.Memory* %loadMem_41af64, %struct.Memory** %MEMORY
  %loadMem_41af6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3718 = getelementptr inbounds %struct.GPR, %struct.GPR* %3717, i32 0, i32 33
  %3719 = getelementptr inbounds %struct.Reg, %struct.Reg* %3718, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %3719 to i64*
  %3720 = load i64, i64* %PC.i1270
  %3721 = add i64 %3720, 20
  %3722 = load i64, i64* %PC.i1270
  %3723 = add i64 %3722, 6
  %3724 = load i64, i64* %PC.i1270
  %3725 = add i64 %3724, 6
  store i64 %3725, i64* %PC.i1270
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3727 = load i8, i8* %3726, align 1
  %3728 = icmp eq i8 %3727, 0
  %3729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3730 = load i8, i8* %3729, align 1
  %3731 = icmp ne i8 %3730, 0
  %3732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3733 = load i8, i8* %3732, align 1
  %3734 = icmp ne i8 %3733, 0
  %3735 = xor i1 %3731, %3734
  %3736 = xor i1 %3735, true
  %3737 = and i1 %3728, %3736
  %3738 = zext i1 %3737 to i8
  store i8 %3738, i8* %BRANCH_TAKEN, align 1
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3740 = select i1 %3737, i64 %3721, i64 %3723
  store i64 %3740, i64* %3739, align 8
  store %struct.Memory* %loadMem_41af6c, %struct.Memory** %MEMORY
  %loadBr_41af6c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41af6c = icmp eq i8 %loadBr_41af6c, 1
  br i1 %cmpBr_41af6c, label %block_.L_41af80, label %block_41af72

block_41af72:                                     ; preds = %block_.L_41af64
  %loadMem_41af72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3742 = getelementptr inbounds %struct.GPR, %struct.GPR* %3741, i32 0, i32 33
  %3743 = getelementptr inbounds %struct.Reg, %struct.Reg* %3742, i32 0, i32 0
  %PC.i1269 = bitcast %union.anon* %3743 to i64*
  %3744 = load i64, i64* %PC.i1269
  %3745 = add i64 %3744, 8
  store i64 %3745, i64* %PC.i1269
  %3746 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %3747 = sub i32 %3746, 3
  %3748 = icmp ult i32 %3746, 3
  %3749 = zext i1 %3748 to i8
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3749, i8* %3750, align 1
  %3751 = and i32 %3747, 255
  %3752 = call i32 @llvm.ctpop.i32(i32 %3751)
  %3753 = trunc i32 %3752 to i8
  %3754 = and i8 %3753, 1
  %3755 = xor i8 %3754, 1
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3755, i8* %3756, align 1
  %3757 = xor i32 %3746, 3
  %3758 = xor i32 %3757, %3747
  %3759 = lshr i32 %3758, 4
  %3760 = trunc i32 %3759 to i8
  %3761 = and i8 %3760, 1
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3761, i8* %3762, align 1
  %3763 = icmp eq i32 %3747, 0
  %3764 = zext i1 %3763 to i8
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3764, i8* %3765, align 1
  %3766 = lshr i32 %3747, 31
  %3767 = trunc i32 %3766 to i8
  %3768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3767, i8* %3768, align 1
  %3769 = lshr i32 %3746, 31
  %3770 = xor i32 %3766, %3769
  %3771 = add i32 %3770, %3769
  %3772 = icmp eq i32 %3771, 2
  %3773 = zext i1 %3772 to i8
  %3774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3773, i8* %3774, align 1
  store %struct.Memory* %loadMem_41af72, %struct.Memory** %MEMORY
  %loadMem_41af7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3776 = getelementptr inbounds %struct.GPR, %struct.GPR* %3775, i32 0, i32 33
  %3777 = getelementptr inbounds %struct.Reg, %struct.Reg* %3776, i32 0, i32 0
  %PC.i1268 = bitcast %union.anon* %3777 to i64*
  %3778 = load i64, i64* %PC.i1268
  %3779 = add i64 %3778, 64
  %3780 = load i64, i64* %PC.i1268
  %3781 = add i64 %3780, 6
  %3782 = load i64, i64* %PC.i1268
  %3783 = add i64 %3782, 6
  store i64 %3783, i64* %PC.i1268
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3785 = load i8, i8* %3784, align 1
  store i8 %3785, i8* %BRANCH_TAKEN, align 1
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3787 = icmp ne i8 %3785, 0
  %3788 = select i1 %3787, i64 %3779, i64 %3781
  store i64 %3788, i64* %3786, align 8
  store %struct.Memory* %loadMem_41af7a, %struct.Memory** %MEMORY
  %loadBr_41af7a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41af7a = icmp eq i8 %loadBr_41af7a, 1
  br i1 %cmpBr_41af7a, label %block_.L_41afba, label %block_.L_41af80

block_.L_41af80:                                  ; preds = %block_41af72, %block_.L_41af64
  %loadMem_41af80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3790 = getelementptr inbounds %struct.GPR, %struct.GPR* %3789, i32 0, i32 33
  %3791 = getelementptr inbounds %struct.Reg, %struct.Reg* %3790, i32 0, i32 0
  %PC.i1266 = bitcast %union.anon* %3791 to i64*
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3793 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3792, i64 0, i64 0
  %YMM0.i1267 = bitcast %union.VectorReg* %3793 to %"class.std::bitset"*
  %3794 = bitcast %"class.std::bitset"* %YMM0.i1267 to i8*
  %3795 = load i64, i64* %PC.i1266
  %3796 = add i64 %3795, ptrtoint (%G_0xd430__rip__type* @G_0xd430__rip_ to i64)
  %3797 = load i64, i64* %PC.i1266
  %3798 = add i64 %3797, 8
  store i64 %3798, i64* %PC.i1266
  %3799 = inttoptr i64 %3796 to double*
  %3800 = load double, double* %3799
  %3801 = bitcast i8* %3794 to double*
  store double %3800, double* %3801, align 1
  %3802 = getelementptr inbounds i8, i8* %3794, i64 8
  %3803 = bitcast i8* %3802 to double*
  store double 0.000000e+00, double* %3803, align 1
  store %struct.Memory* %loadMem_41af80, %struct.Memory** %MEMORY
  %loadMem_41af88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3805 = getelementptr inbounds %struct.GPR, %struct.GPR* %3804, i32 0, i32 33
  %3806 = getelementptr inbounds %struct.Reg, %struct.Reg* %3805, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %3806 to i64*
  %3807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3808 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3807, i64 0, i64 1
  %YMM1.i1265 = bitcast %union.VectorReg* %3808 to %"class.std::bitset"*
  %3809 = bitcast %"class.std::bitset"* %YMM1.i1265 to i8*
  %3810 = load i64, i64* %PC.i1264
  %3811 = add i64 %3810, ptrtoint (%G_0xd420__rip__type* @G_0xd420__rip_ to i64)
  %3812 = load i64, i64* %PC.i1264
  %3813 = add i64 %3812, 8
  store i64 %3813, i64* %PC.i1264
  %3814 = inttoptr i64 %3811 to double*
  %3815 = load double, double* %3814
  %3816 = bitcast i8* %3809 to double*
  store double %3815, double* %3816, align 1
  %3817 = getelementptr inbounds i8, i8* %3809, i64 8
  %3818 = bitcast i8* %3817 to double*
  store double 0.000000e+00, double* %3818, align 1
  store %struct.Memory* %loadMem_41af88, %struct.Memory** %MEMORY
  %loadMem_41af90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3820 = getelementptr inbounds %struct.GPR, %struct.GPR* %3819, i32 0, i32 33
  %3821 = getelementptr inbounds %struct.Reg, %struct.Reg* %3820, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %3821 to i64*
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3823 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3822, i64 0, i64 2
  %YMM2.i1263 = bitcast %union.VectorReg* %3823 to %"class.std::bitset"*
  %3824 = bitcast %"class.std::bitset"* %YMM2.i1263 to i8*
  %3825 = load i64, i64* %PC.i1262
  %3826 = add i64 %3825, 9
  store i64 %3826, i64* %PC.i1262
  %3827 = bitcast i8* %3824 to <2 x i32>*
  %3828 = load <2 x i32>, <2 x i32>* %3827, align 1
  %3829 = getelementptr inbounds i8, i8* %3824, i64 8
  %3830 = bitcast i8* %3829 to <2 x i32>*
  %3831 = load <2 x i32>, <2 x i32>* %3830, align 1
  %3832 = load i32, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  %3833 = sitofp i32 %3832 to float
  %3834 = bitcast i8* %3824 to float*
  store float %3833, float* %3834, align 1
  %3835 = extractelement <2 x i32> %3828, i32 1
  %3836 = getelementptr inbounds i8, i8* %3824, i64 4
  %3837 = bitcast i8* %3836 to i32*
  store i32 %3835, i32* %3837, align 1
  %3838 = extractelement <2 x i32> %3831, i32 0
  %3839 = bitcast i8* %3829 to i32*
  store i32 %3838, i32* %3839, align 1
  %3840 = extractelement <2 x i32> %3831, i32 1
  %3841 = getelementptr inbounds i8, i8* %3824, i64 12
  %3842 = bitcast i8* %3841 to i32*
  store i32 %3840, i32* %3842, align 1
  store %struct.Memory* %loadMem_41af90, %struct.Memory** %MEMORY
  %loadMem_41af99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3844 = getelementptr inbounds %struct.GPR, %struct.GPR* %3843, i32 0, i32 33
  %3845 = getelementptr inbounds %struct.Reg, %struct.Reg* %3844, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %3845 to i64*
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3847 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3846, i64 0, i64 2
  %YMM2.i1260 = bitcast %union.VectorReg* %3847 to %"class.std::bitset"*
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3849 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3848, i64 0, i64 2
  %XMM2.i1261 = bitcast %union.VectorReg* %3849 to %union.vec128_t*
  %3850 = bitcast %"class.std::bitset"* %YMM2.i1260 to i8*
  %3851 = bitcast %union.vec128_t* %XMM2.i1261 to i8*
  %3852 = load i64, i64* %PC.i1259
  %3853 = add i64 %3852, 4
  store i64 %3853, i64* %PC.i1259
  %3854 = bitcast i8* %3851 to <2 x float>*
  %3855 = load <2 x float>, <2 x float>* %3854, align 1
  %3856 = extractelement <2 x float> %3855, i32 0
  %3857 = fpext float %3856 to double
  %3858 = bitcast i8* %3850 to double*
  store double %3857, double* %3858, align 1
  store %struct.Memory* %loadMem_41af99, %struct.Memory** %MEMORY
  %loadMem_41af9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3860 = getelementptr inbounds %struct.GPR, %struct.GPR* %3859, i32 0, i32 33
  %3861 = getelementptr inbounds %struct.Reg, %struct.Reg* %3860, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %3861 to i64*
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3863 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3862, i64 0, i64 2
  %YMM2.i1257 = bitcast %union.VectorReg* %3863 to %"class.std::bitset"*
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3865 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3864, i64 0, i64 1
  %XMM1.i1258 = bitcast %union.VectorReg* %3865 to %union.vec128_t*
  %3866 = bitcast %"class.std::bitset"* %YMM2.i1257 to i8*
  %3867 = bitcast %"class.std::bitset"* %YMM2.i1257 to i8*
  %3868 = bitcast %union.vec128_t* %XMM1.i1258 to i8*
  %3869 = load i64, i64* %PC.i1256
  %3870 = add i64 %3869, 4
  store i64 %3870, i64* %PC.i1256
  %3871 = bitcast i8* %3867 to double*
  %3872 = load double, double* %3871, align 1
  %3873 = getelementptr inbounds i8, i8* %3867, i64 8
  %3874 = bitcast i8* %3873 to i64*
  %3875 = load i64, i64* %3874, align 1
  %3876 = bitcast i8* %3868 to double*
  %3877 = load double, double* %3876, align 1
  %3878 = fmul double %3872, %3877
  %3879 = bitcast i8* %3866 to double*
  store double %3878, double* %3879, align 1
  %3880 = getelementptr inbounds i8, i8* %3866, i64 8
  %3881 = bitcast i8* %3880 to i64*
  store i64 %3875, i64* %3881, align 1
  store %struct.Memory* %loadMem_41af9d, %struct.Memory** %MEMORY
  %loadMem_41afa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3883 = getelementptr inbounds %struct.GPR, %struct.GPR* %3882, i32 0, i32 33
  %3884 = getelementptr inbounds %struct.Reg, %struct.Reg* %3883, i32 0, i32 0
  %PC.i1253 = bitcast %union.anon* %3884 to i64*
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3886 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3885, i64 0, i64 2
  %YMM2.i1254 = bitcast %union.VectorReg* %3886 to %"class.std::bitset"*
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3888 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3887, i64 0, i64 0
  %XMM0.i1255 = bitcast %union.VectorReg* %3888 to %union.vec128_t*
  %3889 = bitcast %"class.std::bitset"* %YMM2.i1254 to i8*
  %3890 = bitcast %"class.std::bitset"* %YMM2.i1254 to i8*
  %3891 = bitcast %union.vec128_t* %XMM0.i1255 to i8*
  %3892 = load i64, i64* %PC.i1253
  %3893 = add i64 %3892, 4
  store i64 %3893, i64* %PC.i1253
  %3894 = bitcast i8* %3890 to double*
  %3895 = load double, double* %3894, align 1
  %3896 = getelementptr inbounds i8, i8* %3890, i64 8
  %3897 = bitcast i8* %3896 to i64*
  %3898 = load i64, i64* %3897, align 1
  %3899 = bitcast i8* %3891 to double*
  %3900 = load double, double* %3899, align 1
  %3901 = fdiv double %3895, %3900
  %3902 = bitcast i8* %3889 to double*
  store double %3901, double* %3902, align 1
  %3903 = getelementptr inbounds i8, i8* %3889, i64 8
  %3904 = bitcast i8* %3903 to i64*
  store i64 %3898, i64* %3904, align 1
  store %struct.Memory* %loadMem_41afa1, %struct.Memory** %MEMORY
  %loadMem_41afa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3906 = getelementptr inbounds %struct.GPR, %struct.GPR* %3905, i32 0, i32 33
  %3907 = getelementptr inbounds %struct.Reg, %struct.Reg* %3906, i32 0, i32 0
  %PC.i1250 = bitcast %union.anon* %3907 to i64*
  %3908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3909 = getelementptr inbounds %struct.GPR, %struct.GPR* %3908, i32 0, i32 1
  %3910 = getelementptr inbounds %struct.Reg, %struct.Reg* %3909, i32 0, i32 0
  %RAX.i1251 = bitcast %union.anon* %3910 to i64*
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3912 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3911, i64 0, i64 2
  %XMM2.i1252 = bitcast %union.VectorReg* %3912 to %union.vec128_t*
  %3913 = bitcast %union.vec128_t* %XMM2.i1252 to i8*
  %3914 = load i64, i64* %PC.i1250
  %3915 = add i64 %3914, 4
  store i64 %3915, i64* %PC.i1250
  %3916 = bitcast i8* %3913 to double*
  %3917 = load double, double* %3916, align 1
  %3918 = call double @llvm.trunc.f64(double %3917)
  %3919 = call double @llvm.fabs.f64(double %3918)
  %3920 = fcmp ogt double %3919, 0x41DFFFFFFFC00000
  %3921 = fptosi double %3918 to i32
  %3922 = zext i32 %3921 to i64
  %3923 = select i1 %3920, i64 2147483648, i64 %3922
  store i64 %3923, i64* %RAX.i1251, align 8
  store %struct.Memory* %loadMem_41afa5, %struct.Memory** %MEMORY
  %loadMem_41afa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3925 = getelementptr inbounds %struct.GPR, %struct.GPR* %3924, i32 0, i32 33
  %3926 = getelementptr inbounds %struct.Reg, %struct.Reg* %3925, i32 0, i32 0
  %PC.i1248 = bitcast %union.anon* %3926 to i64*
  %3927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3928 = getelementptr inbounds %struct.GPR, %struct.GPR* %3927, i32 0, i32 1
  %3929 = getelementptr inbounds %struct.Reg, %struct.Reg* %3928, i32 0, i32 0
  %EAX.i1249 = bitcast %union.anon* %3929 to i32*
  %3930 = load i32, i32* %EAX.i1249
  %3931 = zext i32 %3930 to i64
  %3932 = load i64, i64* %PC.i1248
  %3933 = add i64 %3932, 7
  store i64 %3933, i64* %PC.i1248
  store i32 %3930, i32* bitcast (%G_0x85f168_type* @G_0x85f168 to i32*)
  store %struct.Memory* %loadMem_41afa9, %struct.Memory** %MEMORY
  %loadMem1_41afb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3935 = getelementptr inbounds %struct.GPR, %struct.GPR* %3934, i32 0, i32 33
  %3936 = getelementptr inbounds %struct.Reg, %struct.Reg* %3935, i32 0, i32 0
  %PC.i1247 = bitcast %union.anon* %3936 to i64*
  %3937 = load i64, i64* %PC.i1247
  %3938 = add i64 %3937, -27808
  %3939 = load i64, i64* %PC.i1247
  %3940 = add i64 %3939, 5
  %3941 = load i64, i64* %PC.i1247
  %3942 = add i64 %3941, 5
  store i64 %3942, i64* %PC.i1247
  %3943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3944 = load i64, i64* %3943, align 8
  %3945 = add i64 %3944, -8
  %3946 = inttoptr i64 %3945 to i64*
  store i64 %3940, i64* %3946
  store i64 %3945, i64* %3943, align 8
  %3947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3938, i64* %3947, align 8
  store %struct.Memory* %loadMem1_41afb0, %struct.Memory** %MEMORY
  %loadMem2_41afb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41afb0 = load i64, i64* %3
  %call2_41afb0 = call %struct.Memory* @sub_414310.proofnumberscan(%struct.State* %0, i64 %loadPC_41afb0, %struct.Memory* %loadMem2_41afb0)
  store %struct.Memory* %call2_41afb0, %struct.Memory** %MEMORY
  %loadMem_41afb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3949 = getelementptr inbounds %struct.GPR, %struct.GPR* %3948, i32 0, i32 33
  %3950 = getelementptr inbounds %struct.Reg, %struct.Reg* %3949, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %3950 to i64*
  %3951 = load i64, i64* %PC.i1246
  %3952 = add i64 %3951, 71
  %3953 = load i64, i64* %PC.i1246
  %3954 = add i64 %3953, 5
  store i64 %3954, i64* %PC.i1246
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3952, i64* %3955, align 8
  store %struct.Memory* %loadMem_41afb5, %struct.Memory** %MEMORY
  br label %block_.L_41affc

block_.L_41afba:                                  ; preds = %block_41af72, %block_41af56, %block_41af3a, %block_.L_41af2d
  %loadMem_41afba = load %struct.Memory*, %struct.Memory** %MEMORY
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3957 = getelementptr inbounds %struct.GPR, %struct.GPR* %3956, i32 0, i32 33
  %3958 = getelementptr inbounds %struct.Reg, %struct.Reg* %3957, i32 0, i32 0
  %PC.i1244 = bitcast %union.anon* %3958 to i64*
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3960 = getelementptr inbounds %struct.GPR, %struct.GPR* %3959, i32 0, i32 15
  %3961 = getelementptr inbounds %struct.Reg, %struct.Reg* %3960, i32 0, i32 0
  %RBP.i1245 = bitcast %union.anon* %3961 to i64*
  %3962 = load i64, i64* %RBP.i1245
  %3963 = sub i64 %3962, 12416
  %3964 = load i64, i64* %PC.i1244
  %3965 = add i64 %3964, 7
  store i64 %3965, i64* %PC.i1244
  %3966 = inttoptr i64 %3963 to i32*
  %3967 = load i32, i32* %3966
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3968, align 1
  %3969 = and i32 %3967, 255
  %3970 = call i32 @llvm.ctpop.i32(i32 %3969)
  %3971 = trunc i32 %3970 to i8
  %3972 = and i8 %3971, 1
  %3973 = xor i8 %3972, 1
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3973, i8* %3974, align 1
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3975, align 1
  %3976 = icmp eq i32 %3967, 0
  %3977 = zext i1 %3976 to i8
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3977, i8* %3978, align 1
  %3979 = lshr i32 %3967, 31
  %3980 = trunc i32 %3979 to i8
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3980, i8* %3981, align 1
  %3982 = lshr i32 %3967, 31
  %3983 = xor i32 %3979, %3982
  %3984 = add i32 %3983, %3982
  %3985 = icmp eq i32 %3984, 2
  %3986 = zext i1 %3985 to i8
  %3987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3986, i8* %3987, align 1
  store %struct.Memory* %loadMem_41afba, %struct.Memory** %MEMORY
  %loadMem_41afc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3989 = getelementptr inbounds %struct.GPR, %struct.GPR* %3988, i32 0, i32 33
  %3990 = getelementptr inbounds %struct.Reg, %struct.Reg* %3989, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %3990 to i64*
  %3991 = load i64, i64* %PC.i1243
  %3992 = add i64 %3991, 54
  %3993 = load i64, i64* %PC.i1243
  %3994 = add i64 %3993, 6
  %3995 = load i64, i64* %PC.i1243
  %3996 = add i64 %3995, 6
  store i64 %3996, i64* %PC.i1243
  %3997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3998 = load i8, i8* %3997, align 1
  %3999 = icmp eq i8 %3998, 0
  %4000 = zext i1 %3999 to i8
  store i8 %4000, i8* %BRANCH_TAKEN, align 1
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4002 = select i1 %3999, i64 %3992, i64 %3994
  store i64 %4002, i64* %4001, align 8
  store %struct.Memory* %loadMem_41afc1, %struct.Memory** %MEMORY
  %loadBr_41afc1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41afc1 = icmp eq i8 %loadBr_41afc1, 1
  br i1 %cmpBr_41afc1, label %block_.L_41aff7, label %block_41afc7

block_41afc7:                                     ; preds = %block_.L_41afba
  %loadMem_41afc7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4004 = getelementptr inbounds %struct.GPR, %struct.GPR* %4003, i32 0, i32 33
  %4005 = getelementptr inbounds %struct.Reg, %struct.Reg* %4004, i32 0, i32 0
  %PC.i1241 = bitcast %union.anon* %4005 to i64*
  %4006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4007 = getelementptr inbounds %struct.GPR, %struct.GPR* %4006, i32 0, i32 1
  %4008 = getelementptr inbounds %struct.Reg, %struct.Reg* %4007, i32 0, i32 0
  %RAX.i1242 = bitcast %union.anon* %4008 to i64*
  %4009 = load i64, i64* %PC.i1241
  %4010 = add i64 %4009, 8
  store i64 %4010, i64* %PC.i1241
  %4011 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %4011, i64* %RAX.i1242, align 8
  store %struct.Memory* %loadMem_41afc7, %struct.Memory** %MEMORY
  %loadMem_41afcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4013 = getelementptr inbounds %struct.GPR, %struct.GPR* %4012, i32 0, i32 33
  %4014 = getelementptr inbounds %struct.Reg, %struct.Reg* %4013, i32 0, i32 0
  %PC.i1239 = bitcast %union.anon* %4014 to i64*
  %4015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4016 = getelementptr inbounds %struct.GPR, %struct.GPR* %4015, i32 0, i32 1
  %4017 = getelementptr inbounds %struct.Reg, %struct.Reg* %4016, i32 0, i32 0
  %RAX.i1240 = bitcast %union.anon* %4017 to i64*
  %4018 = load i64, i64* %RAX.i1240
  %4019 = load i64, i64* %PC.i1239
  %4020 = add i64 %4019, 8
  store i64 %4020, i64* %PC.i1239
  store i64 %4018, i64* bitcast (%G_0x62ea20_type* @G_0x62ea20 to i64*)
  store %struct.Memory* %loadMem_41afcf, %struct.Memory** %MEMORY
  %loadMem_41afd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4022 = getelementptr inbounds %struct.GPR, %struct.GPR* %4021, i32 0, i32 33
  %4023 = getelementptr inbounds %struct.Reg, %struct.Reg* %4022, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %4023 to i64*
  %4024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4025 = getelementptr inbounds %struct.GPR, %struct.GPR* %4024, i32 0, i32 1
  %4026 = getelementptr inbounds %struct.Reg, %struct.Reg* %4025, i32 0, i32 0
  %RAX.i1238 = bitcast %union.anon* %4026 to i64*
  %4027 = load i64, i64* %PC.i1237
  %4028 = add i64 %4027, 8
  store i64 %4028, i64* %PC.i1237
  %4029 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %4029, i64* %RAX.i1238, align 8
  store %struct.Memory* %loadMem_41afd7, %struct.Memory** %MEMORY
  %loadMem_41afdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4031 = getelementptr inbounds %struct.GPR, %struct.GPR* %4030, i32 0, i32 33
  %4032 = getelementptr inbounds %struct.Reg, %struct.Reg* %4031, i32 0, i32 0
  %PC.i1235 = bitcast %union.anon* %4032 to i64*
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4034 = getelementptr inbounds %struct.GPR, %struct.GPR* %4033, i32 0, i32 1
  %4035 = getelementptr inbounds %struct.Reg, %struct.Reg* %4034, i32 0, i32 0
  %RAX.i1236 = bitcast %union.anon* %4035 to i64*
  %4036 = load i64, i64* %RAX.i1236
  %4037 = load i64, i64* %PC.i1235
  %4038 = add i64 %4037, 8
  store i64 %4038, i64* %PC.i1235
  store i64 %4036, i64* bitcast (%G_0x62ea28_type* @G_0x62ea28 to i64*)
  store %struct.Memory* %loadMem_41afdf, %struct.Memory** %MEMORY
  %loadMem_41afe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4040 = getelementptr inbounds %struct.GPR, %struct.GPR* %4039, i32 0, i32 33
  %4041 = getelementptr inbounds %struct.Reg, %struct.Reg* %4040, i32 0, i32 0
  %PC.i1233 = bitcast %union.anon* %4041 to i64*
  %4042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4043 = getelementptr inbounds %struct.GPR, %struct.GPR* %4042, i32 0, i32 1
  %4044 = getelementptr inbounds %struct.Reg, %struct.Reg* %4043, i32 0, i32 0
  %RAX.i1234 = bitcast %union.anon* %4044 to i64*
  %4045 = load i64, i64* %PC.i1233
  %4046 = add i64 %4045, 8
  store i64 %4046, i64* %PC.i1233
  %4047 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %4047, i64* %RAX.i1234, align 8
  store %struct.Memory* %loadMem_41afe7, %struct.Memory** %MEMORY
  %loadMem_41afef = load %struct.Memory*, %struct.Memory** %MEMORY
  %4048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4049 = getelementptr inbounds %struct.GPR, %struct.GPR* %4048, i32 0, i32 33
  %4050 = getelementptr inbounds %struct.Reg, %struct.Reg* %4049, i32 0, i32 0
  %PC.i1231 = bitcast %union.anon* %4050 to i64*
  %4051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4052 = getelementptr inbounds %struct.GPR, %struct.GPR* %4051, i32 0, i32 1
  %4053 = getelementptr inbounds %struct.Reg, %struct.Reg* %4052, i32 0, i32 0
  %RAX.i1232 = bitcast %union.anon* %4053 to i64*
  %4054 = load i64, i64* %RAX.i1232
  %4055 = load i64, i64* %PC.i1231
  %4056 = add i64 %4055, 8
  store i64 %4056, i64* %PC.i1231
  store i64 %4054, i64* bitcast (%G_0x62ea30_type* @G_0x62ea30 to i64*)
  store %struct.Memory* %loadMem_41afef, %struct.Memory** %MEMORY
  br label %block_.L_41aff7

block_.L_41aff7:                                  ; preds = %block_41afc7, %block_.L_41afba
  %loadMem_41aff7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4058 = getelementptr inbounds %struct.GPR, %struct.GPR* %4057, i32 0, i32 33
  %4059 = getelementptr inbounds %struct.Reg, %struct.Reg* %4058, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %4059 to i64*
  %4060 = load i64, i64* %PC.i1230
  %4061 = add i64 %4060, 5
  %4062 = load i64, i64* %PC.i1230
  %4063 = add i64 %4062, 5
  store i64 %4063, i64* %PC.i1230
  %4064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4061, i64* %4064, align 8
  store %struct.Memory* %loadMem_41aff7, %struct.Memory** %MEMORY
  br label %block_.L_41affc

block_.L_41affc:                                  ; preds = %block_.L_41aff7, %block_.L_41af80
  %loadMem_41affc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4066 = getelementptr inbounds %struct.GPR, %struct.GPR* %4065, i32 0, i32 33
  %4067 = getelementptr inbounds %struct.Reg, %struct.Reg* %4066, i32 0, i32 0
  %PC.i1229 = bitcast %union.anon* %4067 to i64*
  %4068 = load i64, i64* %PC.i1229
  %4069 = add i64 %4068, 8
  store i64 %4069, i64* %PC.i1229
  %4070 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %4071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4071, align 1
  %4072 = and i32 %4070, 255
  %4073 = call i32 @llvm.ctpop.i32(i32 %4072)
  %4074 = trunc i32 %4073 to i8
  %4075 = and i8 %4074, 1
  %4076 = xor i8 %4075, 1
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4076, i8* %4077, align 1
  %4078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4078, align 1
  %4079 = icmp eq i32 %4070, 0
  %4080 = zext i1 %4079 to i8
  %4081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4080, i8* %4081, align 1
  %4082 = lshr i32 %4070, 31
  %4083 = trunc i32 %4082 to i8
  %4084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4083, i8* %4084, align 1
  %4085 = lshr i32 %4070, 31
  %4086 = xor i32 %4082, %4085
  %4087 = add i32 %4086, %4085
  %4088 = icmp eq i32 %4087, 2
  %4089 = zext i1 %4088 to i8
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4089, i8* %4090, align 1
  store %struct.Memory* %loadMem_41affc, %struct.Memory** %MEMORY
  %loadMem_41b004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4092 = getelementptr inbounds %struct.GPR, %struct.GPR* %4091, i32 0, i32 33
  %4093 = getelementptr inbounds %struct.Reg, %struct.Reg* %4092, i32 0, i32 0
  %PC.i1228 = bitcast %union.anon* %4093 to i64*
  %4094 = load i64, i64* %PC.i1228
  %4095 = add i64 %4094, 73
  %4096 = load i64, i64* %PC.i1228
  %4097 = add i64 %4096, 6
  %4098 = load i64, i64* %PC.i1228
  %4099 = add i64 %4098, 6
  store i64 %4099, i64* %PC.i1228
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4101 = load i8, i8* %4100, align 1
  store i8 %4101, i8* %BRANCH_TAKEN, align 1
  %4102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4103 = icmp ne i8 %4101, 0
  %4104 = select i1 %4103, i64 %4095, i64 %4097
  store i64 %4104, i64* %4102, align 8
  store %struct.Memory* %loadMem_41b004, %struct.Memory** %MEMORY
  %loadBr_41b004 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b004 = icmp eq i8 %loadBr_41b004, 1
  br i1 %cmpBr_41b004, label %block_.L_41b04d, label %block_41b00a

block_41b00a:                                     ; preds = %block_.L_41affc
  %loadMem_41b00a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4106 = getelementptr inbounds %struct.GPR, %struct.GPR* %4105, i32 0, i32 33
  %4107 = getelementptr inbounds %struct.Reg, %struct.Reg* %4106, i32 0, i32 0
  %PC.i1226 = bitcast %union.anon* %4107 to i64*
  %4108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4109 = getelementptr inbounds %struct.GPR, %struct.GPR* %4108, i32 0, i32 1
  %4110 = getelementptr inbounds %struct.Reg, %struct.Reg* %4109, i32 0, i32 0
  %RAX.i1227 = bitcast %union.anon* %4110 to i64*
  %4111 = load i64, i64* %PC.i1226
  %4112 = add i64 %4111, 7
  store i64 %4112, i64* %PC.i1226
  %4113 = load i32, i32* bitcast (%G_0x62ea24_type* @G_0x62ea24 to i32*)
  %4114 = zext i32 %4113 to i64
  store i64 %4114, i64* %RAX.i1227, align 8
  store %struct.Memory* %loadMem_41b00a, %struct.Memory** %MEMORY
  %loadMem_41b011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4116 = getelementptr inbounds %struct.GPR, %struct.GPR* %4115, i32 0, i32 33
  %4117 = getelementptr inbounds %struct.Reg, %struct.Reg* %4116, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %4117 to i64*
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4119 = getelementptr inbounds %struct.GPR, %struct.GPR* %4118, i32 0, i32 1
  %4120 = getelementptr inbounds %struct.Reg, %struct.Reg* %4119, i32 0, i32 0
  %EAX.i1225 = bitcast %union.anon* %4120 to i32*
  %4121 = load i32, i32* %EAX.i1225
  %4122 = zext i32 %4121 to i64
  %4123 = load i64, i64* %PC.i1224
  %4124 = add i64 %4123, 7
  store i64 %4124, i64* %PC.i1224
  %4125 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*)
  %4126 = sub i32 %4121, %4125
  %4127 = icmp ult i32 %4121, %4125
  %4128 = zext i1 %4127 to i8
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4128, i8* %4129, align 1
  %4130 = and i32 %4126, 255
  %4131 = call i32 @llvm.ctpop.i32(i32 %4130)
  %4132 = trunc i32 %4131 to i8
  %4133 = and i8 %4132, 1
  %4134 = xor i8 %4133, 1
  %4135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4134, i8* %4135, align 1
  %4136 = xor i32 %4125, %4121
  %4137 = xor i32 %4136, %4126
  %4138 = lshr i32 %4137, 4
  %4139 = trunc i32 %4138 to i8
  %4140 = and i8 %4139, 1
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4140, i8* %4141, align 1
  %4142 = icmp eq i32 %4126, 0
  %4143 = zext i1 %4142 to i8
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4143, i8* %4144, align 1
  %4145 = lshr i32 %4126, 31
  %4146 = trunc i32 %4145 to i8
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4146, i8* %4147, align 1
  %4148 = lshr i32 %4121, 31
  %4149 = lshr i32 %4125, 31
  %4150 = xor i32 %4149, %4148
  %4151 = xor i32 %4145, %4148
  %4152 = add i32 %4151, %4150
  %4153 = icmp eq i32 %4152, 2
  %4154 = zext i1 %4153 to i8
  %4155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4154, i8* %4155, align 1
  store %struct.Memory* %loadMem_41b011, %struct.Memory** %MEMORY
  %loadMem_41b018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4157 = getelementptr inbounds %struct.GPR, %struct.GPR* %4156, i32 0, i32 33
  %4158 = getelementptr inbounds %struct.Reg, %struct.Reg* %4157, i32 0, i32 0
  %PC.i1223 = bitcast %union.anon* %4158 to i64*
  %4159 = load i64, i64* %PC.i1223
  %4160 = add i64 %4159, 53
  %4161 = load i64, i64* %PC.i1223
  %4162 = add i64 %4161, 6
  %4163 = load i64, i64* %PC.i1223
  %4164 = add i64 %4163, 6
  store i64 %4164, i64* %PC.i1223
  %4165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4166 = load i8, i8* %4165, align 1
  %4167 = icmp eq i8 %4166, 0
  %4168 = zext i1 %4167 to i8
  store i8 %4168, i8* %BRANCH_TAKEN, align 1
  %4169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4170 = select i1 %4167, i64 %4160, i64 %4162
  store i64 %4170, i64* %4169, align 8
  store %struct.Memory* %loadMem_41b018, %struct.Memory** %MEMORY
  %loadBr_41b018 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b018 = icmp eq i8 %loadBr_41b018, 1
  br i1 %cmpBr_41b018, label %block_.L_41b04d, label %block_41b01e

block_41b01e:                                     ; preds = %block_41b00a
  %loadMem_41b01e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4172 = getelementptr inbounds %struct.GPR, %struct.GPR* %4171, i32 0, i32 33
  %4173 = getelementptr inbounds %struct.Reg, %struct.Reg* %4172, i32 0, i32 0
  %PC.i1221 = bitcast %union.anon* %4173 to i64*
  %4174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4175 = getelementptr inbounds %struct.GPR, %struct.GPR* %4174, i32 0, i32 1
  %4176 = getelementptr inbounds %struct.Reg, %struct.Reg* %4175, i32 0, i32 0
  %RAX.i1222 = bitcast %union.anon* %4176 to i64*
  %4177 = load i64, i64* %PC.i1221
  %4178 = add i64 %4177, 8
  store i64 %4178, i64* %PC.i1221
  %4179 = load i64, i64* bitcast (%G_0x62ea20_type* @G_0x62ea20 to i64*)
  store i64 %4179, i64* %RAX.i1222, align 8
  store %struct.Memory* %loadMem_41b01e, %struct.Memory** %MEMORY
  %loadMem_41b026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4181 = getelementptr inbounds %struct.GPR, %struct.GPR* %4180, i32 0, i32 33
  %4182 = getelementptr inbounds %struct.Reg, %struct.Reg* %4181, i32 0, i32 0
  %PC.i1218 = bitcast %union.anon* %4182 to i64*
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4184 = getelementptr inbounds %struct.GPR, %struct.GPR* %4183, i32 0, i32 5
  %4185 = getelementptr inbounds %struct.Reg, %struct.Reg* %4184, i32 0, i32 0
  %RCX.i1219 = bitcast %union.anon* %4185 to i64*
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4187 = getelementptr inbounds %struct.GPR, %struct.GPR* %4186, i32 0, i32 15
  %4188 = getelementptr inbounds %struct.Reg, %struct.Reg* %4187, i32 0, i32 0
  %RBP.i1220 = bitcast %union.anon* %4188 to i64*
  %4189 = load i64, i64* %RBP.i1220
  %4190 = sub i64 %4189, 12544
  %4191 = load i64, i64* %PC.i1218
  %4192 = add i64 %4191, 7
  store i64 %4192, i64* %PC.i1218
  %4193 = inttoptr i64 %4190 to i64*
  %4194 = load i64, i64* %4193
  store i64 %4194, i64* %RCX.i1219, align 8
  store %struct.Memory* %loadMem_41b026, %struct.Memory** %MEMORY
  %loadMem_41b02d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4196 = getelementptr inbounds %struct.GPR, %struct.GPR* %4195, i32 0, i32 33
  %4197 = getelementptr inbounds %struct.Reg, %struct.Reg* %4196, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %4197 to i64*
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4199 = getelementptr inbounds %struct.GPR, %struct.GPR* %4198, i32 0, i32 1
  %4200 = getelementptr inbounds %struct.Reg, %struct.Reg* %4199, i32 0, i32 0
  %RAX.i1216 = bitcast %union.anon* %4200 to i64*
  %4201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4202 = getelementptr inbounds %struct.GPR, %struct.GPR* %4201, i32 0, i32 5
  %4203 = getelementptr inbounds %struct.Reg, %struct.Reg* %4202, i32 0, i32 0
  %RCX.i1217 = bitcast %union.anon* %4203 to i64*
  %4204 = load i64, i64* %RCX.i1217
  %4205 = load i64, i64* %RAX.i1216
  %4206 = load i64, i64* %PC.i1215
  %4207 = add i64 %4206, 3
  store i64 %4207, i64* %PC.i1215
  %4208 = inttoptr i64 %4204 to i64*
  store i64 %4205, i64* %4208
  store %struct.Memory* %loadMem_41b02d, %struct.Memory** %MEMORY
  %loadMem_41b030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 33
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %4211 to i64*
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 1
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %RAX.i1214 = bitcast %union.anon* %4214 to i64*
  %4215 = load i64, i64* %PC.i1213
  %4216 = add i64 %4215, 8
  store i64 %4216, i64* %PC.i1213
  %4217 = load i64, i64* bitcast (%G_0x62ea28_type* @G_0x62ea28 to i64*)
  store i64 %4217, i64* %RAX.i1214, align 8
  store %struct.Memory* %loadMem_41b030, %struct.Memory** %MEMORY
  %loadMem_41b038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4219 = getelementptr inbounds %struct.GPR, %struct.GPR* %4218, i32 0, i32 33
  %4220 = getelementptr inbounds %struct.Reg, %struct.Reg* %4219, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %4220 to i64*
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 1
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %RAX.i1211 = bitcast %union.anon* %4223 to i64*
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4225 = getelementptr inbounds %struct.GPR, %struct.GPR* %4224, i32 0, i32 5
  %4226 = getelementptr inbounds %struct.Reg, %struct.Reg* %4225, i32 0, i32 0
  %RCX.i1212 = bitcast %union.anon* %4226 to i64*
  %4227 = load i64, i64* %RCX.i1212
  %4228 = add i64 %4227, 8
  %4229 = load i64, i64* %RAX.i1211
  %4230 = load i64, i64* %PC.i1210
  %4231 = add i64 %4230, 4
  store i64 %4231, i64* %PC.i1210
  %4232 = inttoptr i64 %4228 to i64*
  store i64 %4229, i64* %4232
  store %struct.Memory* %loadMem_41b038, %struct.Memory** %MEMORY
  %loadMem_41b03c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4234 = getelementptr inbounds %struct.GPR, %struct.GPR* %4233, i32 0, i32 33
  %4235 = getelementptr inbounds %struct.Reg, %struct.Reg* %4234, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %4235 to i64*
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4237 = getelementptr inbounds %struct.GPR, %struct.GPR* %4236, i32 0, i32 1
  %4238 = getelementptr inbounds %struct.Reg, %struct.Reg* %4237, i32 0, i32 0
  %RAX.i1209 = bitcast %union.anon* %4238 to i64*
  %4239 = load i64, i64* %PC.i1208
  %4240 = add i64 %4239, 8
  store i64 %4240, i64* %PC.i1208
  %4241 = load i64, i64* bitcast (%G_0x62ea30_type* @G_0x62ea30 to i64*)
  store i64 %4241, i64* %RAX.i1209, align 8
  store %struct.Memory* %loadMem_41b03c, %struct.Memory** %MEMORY
  %loadMem_41b044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4243 = getelementptr inbounds %struct.GPR, %struct.GPR* %4242, i32 0, i32 33
  %4244 = getelementptr inbounds %struct.Reg, %struct.Reg* %4243, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %4244 to i64*
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4246 = getelementptr inbounds %struct.GPR, %struct.GPR* %4245, i32 0, i32 1
  %4247 = getelementptr inbounds %struct.Reg, %struct.Reg* %4246, i32 0, i32 0
  %RAX.i1206 = bitcast %union.anon* %4247 to i64*
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4249 = getelementptr inbounds %struct.GPR, %struct.GPR* %4248, i32 0, i32 5
  %4250 = getelementptr inbounds %struct.Reg, %struct.Reg* %4249, i32 0, i32 0
  %RCX.i1207 = bitcast %union.anon* %4250 to i64*
  %4251 = load i64, i64* %RCX.i1207
  %4252 = add i64 %4251, 16
  %4253 = load i64, i64* %RAX.i1206
  %4254 = load i64, i64* %PC.i1205
  %4255 = add i64 %4254, 4
  store i64 %4255, i64* %PC.i1205
  %4256 = inttoptr i64 %4252 to i64*
  store i64 %4253, i64* %4256
  store %struct.Memory* %loadMem_41b044, %struct.Memory** %MEMORY
  %loadMem_41b048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4258 = getelementptr inbounds %struct.GPR, %struct.GPR* %4257, i32 0, i32 33
  %4259 = getelementptr inbounds %struct.Reg, %struct.Reg* %4258, i32 0, i32 0
  %PC.i1204 = bitcast %union.anon* %4259 to i64*
  %4260 = load i64, i64* %PC.i1204
  %4261 = add i64 %4260, 3512
  %4262 = load i64, i64* %PC.i1204
  %4263 = add i64 %4262, 5
  store i64 %4263, i64* %PC.i1204
  %4264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4261, i64* %4264, align 8
  store %struct.Memory* %loadMem_41b048, %struct.Memory** %MEMORY
  br label %block_.L_41be00

block_.L_41b04d:                                  ; preds = %block_41b00a, %block_.L_41affc
  %loadMem_41b04d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4266 = getelementptr inbounds %struct.GPR, %struct.GPR* %4265, i32 0, i32 33
  %4267 = getelementptr inbounds %struct.Reg, %struct.Reg* %4266, i32 0, i32 0
  %PC.i1203 = bitcast %union.anon* %4267 to i64*
  %4268 = load i64, i64* %PC.i1203
  %4269 = add i64 %4268, 8
  store i64 %4269, i64* %PC.i1203
  %4270 = load i32, i32* bitcast (%G_0x62e4f8_type* @G_0x62e4f8 to i32*)
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4271, align 1
  %4272 = and i32 %4270, 255
  %4273 = call i32 @llvm.ctpop.i32(i32 %4272)
  %4274 = trunc i32 %4273 to i8
  %4275 = and i8 %4274, 1
  %4276 = xor i8 %4275, 1
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4276, i8* %4277, align 1
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4278, align 1
  %4279 = icmp eq i32 %4270, 0
  %4280 = zext i1 %4279 to i8
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4280, i8* %4281, align 1
  %4282 = lshr i32 %4270, 31
  %4283 = trunc i32 %4282 to i8
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4283, i8* %4284, align 1
  %4285 = lshr i32 %4270, 31
  %4286 = xor i32 %4282, %4285
  %4287 = add i32 %4286, %4285
  %4288 = icmp eq i32 %4287, 2
  %4289 = zext i1 %4288 to i8
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4289, i8* %4290, align 1
  store %struct.Memory* %loadMem_41b04d, %struct.Memory** %MEMORY
  %loadMem_41b055 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4292 = getelementptr inbounds %struct.GPR, %struct.GPR* %4291, i32 0, i32 33
  %4293 = getelementptr inbounds %struct.Reg, %struct.Reg* %4292, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %4293 to i64*
  %4294 = load i64, i64* %PC.i1202
  %4295 = add i64 %4294, 20
  %4296 = load i64, i64* %PC.i1202
  %4297 = add i64 %4296, 6
  %4298 = load i64, i64* %PC.i1202
  %4299 = add i64 %4298, 6
  store i64 %4299, i64* %PC.i1202
  %4300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4301 = load i8, i8* %4300, align 1
  %4302 = icmp eq i8 %4301, 0
  %4303 = zext i1 %4302 to i8
  store i8 %4303, i8* %BRANCH_TAKEN, align 1
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4305 = select i1 %4302, i64 %4295, i64 %4297
  store i64 %4305, i64* %4304, align 8
  store %struct.Memory* %loadMem_41b055, %struct.Memory** %MEMORY
  %loadBr_41b055 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b055 = icmp eq i8 %loadBr_41b055, 1
  br i1 %cmpBr_41b055, label %block_.L_41b069, label %block_41b05b

block_41b05b:                                     ; preds = %block_.L_41b04d
  %loadMem_41b05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4307 = getelementptr inbounds %struct.GPR, %struct.GPR* %4306, i32 0, i32 33
  %4308 = getelementptr inbounds %struct.Reg, %struct.Reg* %4307, i32 0, i32 0
  %PC.i1201 = bitcast %union.anon* %4308 to i64*
  %4309 = load i64, i64* %PC.i1201
  %4310 = add i64 %4309, 8
  store i64 %4310, i64* %PC.i1201
  %4311 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %4312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4312, align 1
  %4313 = and i32 %4311, 255
  %4314 = call i32 @llvm.ctpop.i32(i32 %4313)
  %4315 = trunc i32 %4314 to i8
  %4316 = and i8 %4315, 1
  %4317 = xor i8 %4316, 1
  %4318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4317, i8* %4318, align 1
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4319, align 1
  %4320 = icmp eq i32 %4311, 0
  %4321 = zext i1 %4320 to i8
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4321, i8* %4322, align 1
  %4323 = lshr i32 %4311, 31
  %4324 = trunc i32 %4323 to i8
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4324, i8* %4325, align 1
  %4326 = lshr i32 %4311, 31
  %4327 = xor i32 %4323, %4326
  %4328 = add i32 %4327, %4326
  %4329 = icmp eq i32 %4328, 2
  %4330 = zext i1 %4329 to i8
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4330, i8* %4331, align 1
  store %struct.Memory* %loadMem_41b05b, %struct.Memory** %MEMORY
  %loadMem_41b063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4333 = getelementptr inbounds %struct.GPR, %struct.GPR* %4332, i32 0, i32 33
  %4334 = getelementptr inbounds %struct.Reg, %struct.Reg* %4333, i32 0, i32 0
  %PC.i1200 = bitcast %union.anon* %4334 to i64*
  %4335 = load i64, i64* %PC.i1200
  %4336 = add i64 %4335, 81
  %4337 = load i64, i64* %PC.i1200
  %4338 = add i64 %4337, 6
  %4339 = load i64, i64* %PC.i1200
  %4340 = add i64 %4339, 6
  store i64 %4340, i64* %PC.i1200
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4342 = load i8, i8* %4341, align 1
  store i8 %4342, i8* %BRANCH_TAKEN, align 1
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4344 = icmp ne i8 %4342, 0
  %4345 = select i1 %4344, i64 %4336, i64 %4338
  store i64 %4345, i64* %4343, align 8
  store %struct.Memory* %loadMem_41b063, %struct.Memory** %MEMORY
  %loadBr_41b063 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b063 = icmp eq i8 %loadBr_41b063, 1
  br i1 %cmpBr_41b063, label %block_.L_41b0b4, label %block_.L_41b069

block_.L_41b069:                                  ; preds = %block_41b05b, %block_.L_41b04d
  %loadMem_41b069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4347 = getelementptr inbounds %struct.GPR, %struct.GPR* %4346, i32 0, i32 33
  %4348 = getelementptr inbounds %struct.Reg, %struct.Reg* %4347, i32 0, i32 0
  %PC.i1198 = bitcast %union.anon* %4348 to i64*
  %4349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4350 = getelementptr inbounds %struct.GPR, %struct.GPR* %4349, i32 0, i32 1
  %4351 = getelementptr inbounds %struct.Reg, %struct.Reg* %4350, i32 0, i32 0
  %RAX.i1199 = bitcast %union.anon* %4351 to i64*
  %4352 = load i64, i64* %PC.i1198
  %4353 = add i64 %4352, 7
  store i64 %4353, i64* %PC.i1198
  %4354 = load i32, i32* bitcast (%G_0x62ea24_type* @G_0x62ea24 to i32*)
  %4355 = zext i32 %4354 to i64
  store i64 %4355, i64* %RAX.i1199, align 8
  store %struct.Memory* %loadMem_41b069, %struct.Memory** %MEMORY
  %loadMem_41b070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4357 = getelementptr inbounds %struct.GPR, %struct.GPR* %4356, i32 0, i32 33
  %4358 = getelementptr inbounds %struct.Reg, %struct.Reg* %4357, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %4358 to i64*
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4360 = getelementptr inbounds %struct.GPR, %struct.GPR* %4359, i32 0, i32 1
  %4361 = getelementptr inbounds %struct.Reg, %struct.Reg* %4360, i32 0, i32 0
  %EAX.i1197 = bitcast %union.anon* %4361 to i32*
  %4362 = load i32, i32* %EAX.i1197
  %4363 = zext i32 %4362 to i64
  %4364 = load i64, i64* %PC.i1196
  %4365 = add i64 %4364, 7
  store i64 %4365, i64* %PC.i1196
  %4366 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*)
  %4367 = sub i32 %4362, %4366
  %4368 = icmp ult i32 %4362, %4366
  %4369 = zext i1 %4368 to i8
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4369, i8* %4370, align 1
  %4371 = and i32 %4367, 255
  %4372 = call i32 @llvm.ctpop.i32(i32 %4371)
  %4373 = trunc i32 %4372 to i8
  %4374 = and i8 %4373, 1
  %4375 = xor i8 %4374, 1
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4375, i8* %4376, align 1
  %4377 = xor i32 %4366, %4362
  %4378 = xor i32 %4377, %4367
  %4379 = lshr i32 %4378, 4
  %4380 = trunc i32 %4379 to i8
  %4381 = and i8 %4380, 1
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4381, i8* %4382, align 1
  %4383 = icmp eq i32 %4367, 0
  %4384 = zext i1 %4383 to i8
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4384, i8* %4385, align 1
  %4386 = lshr i32 %4367, 31
  %4387 = trunc i32 %4386 to i8
  %4388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4387, i8* %4388, align 1
  %4389 = lshr i32 %4362, 31
  %4390 = lshr i32 %4366, 31
  %4391 = xor i32 %4390, %4389
  %4392 = xor i32 %4386, %4389
  %4393 = add i32 %4392, %4391
  %4394 = icmp eq i32 %4393, 2
  %4395 = zext i1 %4394 to i8
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4395, i8* %4396, align 1
  store %struct.Memory* %loadMem_41b070, %struct.Memory** %MEMORY
  %loadMem_41b077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4398 = getelementptr inbounds %struct.GPR, %struct.GPR* %4397, i32 0, i32 33
  %4399 = getelementptr inbounds %struct.Reg, %struct.Reg* %4398, i32 0, i32 0
  %PC.i1195 = bitcast %union.anon* %4399 to i64*
  %4400 = load i64, i64* %PC.i1195
  %4401 = add i64 %4400, 61
  %4402 = load i64, i64* %PC.i1195
  %4403 = add i64 %4402, 6
  %4404 = load i64, i64* %PC.i1195
  %4405 = add i64 %4404, 6
  store i64 %4405, i64* %PC.i1195
  %4406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4407 = load i8, i8* %4406, align 1
  store i8 %4407, i8* %BRANCH_TAKEN, align 1
  %4408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4409 = icmp ne i8 %4407, 0
  %4410 = select i1 %4409, i64 %4401, i64 %4403
  store i64 %4410, i64* %4408, align 8
  store %struct.Memory* %loadMem_41b077, %struct.Memory** %MEMORY
  %loadBr_41b077 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b077 = icmp eq i8 %loadBr_41b077, 1
  br i1 %cmpBr_41b077, label %block_.L_41b0b4, label %block_41b07d

block_41b07d:                                     ; preds = %block_.L_41b069
  %loadMem_41b07d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4412 = getelementptr inbounds %struct.GPR, %struct.GPR* %4411, i32 0, i32 33
  %4413 = getelementptr inbounds %struct.Reg, %struct.Reg* %4412, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %4413 to i64*
  %4414 = load i64, i64* %PC.i1194
  %4415 = add i64 %4414, 8
  store i64 %4415, i64* %PC.i1194
  %4416 = load i32, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*)
  %4417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4417, align 1
  %4418 = and i32 %4416, 255
  %4419 = call i32 @llvm.ctpop.i32(i32 %4418)
  %4420 = trunc i32 %4419 to i8
  %4421 = and i8 %4420, 1
  %4422 = xor i8 %4421, 1
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4422, i8* %4423, align 1
  %4424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4424, align 1
  %4425 = icmp eq i32 %4416, 0
  %4426 = zext i1 %4425 to i8
  %4427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4426, i8* %4427, align 1
  %4428 = lshr i32 %4416, 31
  %4429 = trunc i32 %4428 to i8
  %4430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4429, i8* %4430, align 1
  %4431 = lshr i32 %4416, 31
  %4432 = xor i32 %4428, %4431
  %4433 = add i32 %4432, %4431
  %4434 = icmp eq i32 %4433, 2
  %4435 = zext i1 %4434 to i8
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4435, i8* %4436, align 1
  store %struct.Memory* %loadMem_41b07d, %struct.Memory** %MEMORY
  %loadMem_41b085 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4438 = getelementptr inbounds %struct.GPR, %struct.GPR* %4437, i32 0, i32 33
  %4439 = getelementptr inbounds %struct.Reg, %struct.Reg* %4438, i32 0, i32 0
  %PC.i1193 = bitcast %union.anon* %4439 to i64*
  %4440 = load i64, i64* %PC.i1193
  %4441 = add i64 %4440, 47
  %4442 = load i64, i64* %PC.i1193
  %4443 = add i64 %4442, 6
  %4444 = load i64, i64* %PC.i1193
  %4445 = add i64 %4444, 6
  store i64 %4445, i64* %PC.i1193
  %4446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4447 = load i8, i8* %4446, align 1
  %4448 = icmp eq i8 %4447, 0
  %4449 = zext i1 %4448 to i8
  store i8 %4449, i8* %BRANCH_TAKEN, align 1
  %4450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4451 = select i1 %4448, i64 %4441, i64 %4443
  store i64 %4451, i64* %4450, align 8
  store %struct.Memory* %loadMem_41b085, %struct.Memory** %MEMORY
  %loadBr_41b085 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b085 = icmp eq i8 %loadBr_41b085, 1
  br i1 %cmpBr_41b085, label %block_.L_41b0b4, label %block_41b08b

block_41b08b:                                     ; preds = %block_41b07d
  %loadMem_41b08b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4453 = getelementptr inbounds %struct.GPR, %struct.GPR* %4452, i32 0, i32 33
  %4454 = getelementptr inbounds %struct.Reg, %struct.Reg* %4453, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %4454 to i64*
  %4455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4456 = getelementptr inbounds %struct.GPR, %struct.GPR* %4455, i32 0, i32 1
  %4457 = getelementptr inbounds %struct.Reg, %struct.Reg* %4456, i32 0, i32 0
  %RAX.i1192 = bitcast %union.anon* %4457 to i64*
  %4458 = load i64, i64* %PC.i1191
  %4459 = add i64 %4458, 8
  store i64 %4459, i64* %PC.i1191
  %4460 = load i64, i64* bitcast (%G_0x62ea20_type* @G_0x62ea20 to i64*)
  store i64 %4460, i64* %RAX.i1192, align 8
  store %struct.Memory* %loadMem_41b08b, %struct.Memory** %MEMORY
  %loadMem_41b093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4462 = getelementptr inbounds %struct.GPR, %struct.GPR* %4461, i32 0, i32 33
  %4463 = getelementptr inbounds %struct.Reg, %struct.Reg* %4462, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %4463 to i64*
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4465 = getelementptr inbounds %struct.GPR, %struct.GPR* %4464, i32 0, i32 1
  %4466 = getelementptr inbounds %struct.Reg, %struct.Reg* %4465, i32 0, i32 0
  %RAX.i1189 = bitcast %union.anon* %4466 to i64*
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4468 = getelementptr inbounds %struct.GPR, %struct.GPR* %4467, i32 0, i32 15
  %4469 = getelementptr inbounds %struct.Reg, %struct.Reg* %4468, i32 0, i32 0
  %RBP.i1190 = bitcast %union.anon* %4469 to i64*
  %4470 = load i64, i64* %RBP.i1190
  %4471 = sub i64 %4470, 24
  %4472 = load i64, i64* %RAX.i1189
  %4473 = load i64, i64* %PC.i1188
  %4474 = add i64 %4473, 4
  store i64 %4474, i64* %PC.i1188
  %4475 = inttoptr i64 %4471 to i64*
  store i64 %4472, i64* %4475
  store %struct.Memory* %loadMem_41b093, %struct.Memory** %MEMORY
  %loadMem_41b097 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4477 = getelementptr inbounds %struct.GPR, %struct.GPR* %4476, i32 0, i32 33
  %4478 = getelementptr inbounds %struct.Reg, %struct.Reg* %4477, i32 0, i32 0
  %PC.i1186 = bitcast %union.anon* %4478 to i64*
  %4479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4480 = getelementptr inbounds %struct.GPR, %struct.GPR* %4479, i32 0, i32 1
  %4481 = getelementptr inbounds %struct.Reg, %struct.Reg* %4480, i32 0, i32 0
  %RAX.i1187 = bitcast %union.anon* %4481 to i64*
  %4482 = load i64, i64* %PC.i1186
  %4483 = add i64 %4482, 8
  store i64 %4483, i64* %PC.i1186
  %4484 = load i64, i64* bitcast (%G_0x62ea28_type* @G_0x62ea28 to i64*)
  store i64 %4484, i64* %RAX.i1187, align 8
  store %struct.Memory* %loadMem_41b097, %struct.Memory** %MEMORY
  %loadMem_41b09f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4486 = getelementptr inbounds %struct.GPR, %struct.GPR* %4485, i32 0, i32 33
  %4487 = getelementptr inbounds %struct.Reg, %struct.Reg* %4486, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %4487 to i64*
  %4488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4489 = getelementptr inbounds %struct.GPR, %struct.GPR* %4488, i32 0, i32 1
  %4490 = getelementptr inbounds %struct.Reg, %struct.Reg* %4489, i32 0, i32 0
  %RAX.i1184 = bitcast %union.anon* %4490 to i64*
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4492 = getelementptr inbounds %struct.GPR, %struct.GPR* %4491, i32 0, i32 15
  %4493 = getelementptr inbounds %struct.Reg, %struct.Reg* %4492, i32 0, i32 0
  %RBP.i1185 = bitcast %union.anon* %4493 to i64*
  %4494 = load i64, i64* %RBP.i1185
  %4495 = sub i64 %4494, 16
  %4496 = load i64, i64* %RAX.i1184
  %4497 = load i64, i64* %PC.i1183
  %4498 = add i64 %4497, 4
  store i64 %4498, i64* %PC.i1183
  %4499 = inttoptr i64 %4495 to i64*
  store i64 %4496, i64* %4499
  store %struct.Memory* %loadMem_41b09f, %struct.Memory** %MEMORY
  %loadMem_41b0a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4501 = getelementptr inbounds %struct.GPR, %struct.GPR* %4500, i32 0, i32 33
  %4502 = getelementptr inbounds %struct.Reg, %struct.Reg* %4501, i32 0, i32 0
  %PC.i1181 = bitcast %union.anon* %4502 to i64*
  %4503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4504 = getelementptr inbounds %struct.GPR, %struct.GPR* %4503, i32 0, i32 1
  %4505 = getelementptr inbounds %struct.Reg, %struct.Reg* %4504, i32 0, i32 0
  %RAX.i1182 = bitcast %union.anon* %4505 to i64*
  %4506 = load i64, i64* %PC.i1181
  %4507 = add i64 %4506, 8
  store i64 %4507, i64* %PC.i1181
  %4508 = load i64, i64* bitcast (%G_0x62ea30_type* @G_0x62ea30 to i64*)
  store i64 %4508, i64* %RAX.i1182, align 8
  store %struct.Memory* %loadMem_41b0a3, %struct.Memory** %MEMORY
  %loadMem_41b0ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %4509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4510 = getelementptr inbounds %struct.GPR, %struct.GPR* %4509, i32 0, i32 33
  %4511 = getelementptr inbounds %struct.Reg, %struct.Reg* %4510, i32 0, i32 0
  %PC.i1178 = bitcast %union.anon* %4511 to i64*
  %4512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4513 = getelementptr inbounds %struct.GPR, %struct.GPR* %4512, i32 0, i32 1
  %4514 = getelementptr inbounds %struct.Reg, %struct.Reg* %4513, i32 0, i32 0
  %RAX.i1179 = bitcast %union.anon* %4514 to i64*
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4516 = getelementptr inbounds %struct.GPR, %struct.GPR* %4515, i32 0, i32 15
  %4517 = getelementptr inbounds %struct.Reg, %struct.Reg* %4516, i32 0, i32 0
  %RBP.i1180 = bitcast %union.anon* %4517 to i64*
  %4518 = load i64, i64* %RBP.i1180
  %4519 = sub i64 %4518, 8
  %4520 = load i64, i64* %RAX.i1179
  %4521 = load i64, i64* %PC.i1178
  %4522 = add i64 %4521, 4
  store i64 %4522, i64* %PC.i1178
  %4523 = inttoptr i64 %4519 to i64*
  store i64 %4520, i64* %4523
  store %struct.Memory* %loadMem_41b0ab, %struct.Memory** %MEMORY
  %loadMem_41b0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4525 = getelementptr inbounds %struct.GPR, %struct.GPR* %4524, i32 0, i32 33
  %4526 = getelementptr inbounds %struct.Reg, %struct.Reg* %4525, i32 0, i32 0
  %PC.i1177 = bitcast %union.anon* %4526 to i64*
  %4527 = load i64, i64* %PC.i1177
  %4528 = add i64 %4527, 1571
  %4529 = load i64, i64* %PC.i1177
  %4530 = add i64 %4529, 5
  store i64 %4530, i64* %PC.i1177
  %4531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4528, i64* %4531, align 8
  store %struct.Memory* %loadMem_41b0af, %struct.Memory** %MEMORY
  br label %block_.L_41b6d2

block_.L_41b0b4:                                  ; preds = %block_41b07d, %block_.L_41b069, %block_41b05b
  %loadMem_41b0b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4533 = getelementptr inbounds %struct.GPR, %struct.GPR* %4532, i32 0, i32 33
  %4534 = getelementptr inbounds %struct.Reg, %struct.Reg* %4533, i32 0, i32 0
  %PC.i1175 = bitcast %union.anon* %4534 to i64*
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4536 = getelementptr inbounds %struct.GPR, %struct.GPR* %4535, i32 0, i32 15
  %4537 = getelementptr inbounds %struct.Reg, %struct.Reg* %4536, i32 0, i32 0
  %RBP.i1176 = bitcast %union.anon* %4537 to i64*
  %4538 = load i64, i64* %RBP.i1176
  %4539 = sub i64 %4538, 76
  %4540 = load i64, i64* %PC.i1175
  %4541 = add i64 %4540, 7
  store i64 %4541, i64* %PC.i1175
  %4542 = inttoptr i64 %4539 to i32*
  store i32 0, i32* %4542
  store %struct.Memory* %loadMem_41b0b4, %struct.Memory** %MEMORY
  br label %block_.L_41b0bb

block_.L_41b0bb:                                  ; preds = %block_.L_41b135, %block_.L_41b0b4
  %loadMem_41b0bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %4543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4544 = getelementptr inbounds %struct.GPR, %struct.GPR* %4543, i32 0, i32 33
  %4545 = getelementptr inbounds %struct.Reg, %struct.Reg* %4544, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %4545 to i64*
  %4546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4547 = getelementptr inbounds %struct.GPR, %struct.GPR* %4546, i32 0, i32 15
  %4548 = getelementptr inbounds %struct.Reg, %struct.Reg* %4547, i32 0, i32 0
  %RBP.i1174 = bitcast %union.anon* %4548 to i64*
  %4549 = load i64, i64* %RBP.i1174
  %4550 = sub i64 %4549, 76
  %4551 = load i64, i64* %PC.i1173
  %4552 = add i64 %4551, 7
  store i64 %4552, i64* %PC.i1173
  %4553 = inttoptr i64 %4550 to i32*
  %4554 = load i32, i32* %4553
  %4555 = sub i32 %4554, 300
  %4556 = icmp ult i32 %4554, 300
  %4557 = zext i1 %4556 to i8
  %4558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4557, i8* %4558, align 1
  %4559 = and i32 %4555, 255
  %4560 = call i32 @llvm.ctpop.i32(i32 %4559)
  %4561 = trunc i32 %4560 to i8
  %4562 = and i8 %4561, 1
  %4563 = xor i8 %4562, 1
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4563, i8* %4564, align 1
  %4565 = xor i32 %4554, 300
  %4566 = xor i32 %4565, %4555
  %4567 = lshr i32 %4566, 4
  %4568 = trunc i32 %4567 to i8
  %4569 = and i8 %4568, 1
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4569, i8* %4570, align 1
  %4571 = icmp eq i32 %4555, 0
  %4572 = zext i1 %4571 to i8
  %4573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4572, i8* %4573, align 1
  %4574 = lshr i32 %4555, 31
  %4575 = trunc i32 %4574 to i8
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4575, i8* %4576, align 1
  %4577 = lshr i32 %4554, 31
  %4578 = xor i32 %4574, %4577
  %4579 = add i32 %4578, %4577
  %4580 = icmp eq i32 %4579, 2
  %4581 = zext i1 %4580 to i8
  %4582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4581, i8* %4582, align 1
  store %struct.Memory* %loadMem_41b0bb, %struct.Memory** %MEMORY
  %loadMem_41b0c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4584 = getelementptr inbounds %struct.GPR, %struct.GPR* %4583, i32 0, i32 33
  %4585 = getelementptr inbounds %struct.Reg, %struct.Reg* %4584, i32 0, i32 0
  %PC.i1172 = bitcast %union.anon* %4585 to i64*
  %4586 = load i64, i64* %PC.i1172
  %4587 = add i64 %4586, 129
  %4588 = load i64, i64* %PC.i1172
  %4589 = add i64 %4588, 6
  %4590 = load i64, i64* %PC.i1172
  %4591 = add i64 %4590, 6
  store i64 %4591, i64* %PC.i1172
  %4592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4593 = load i8, i8* %4592, align 1
  %4594 = icmp ne i8 %4593, 0
  %4595 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4596 = load i8, i8* %4595, align 1
  %4597 = icmp ne i8 %4596, 0
  %4598 = xor i1 %4594, %4597
  %4599 = xor i1 %4598, true
  %4600 = zext i1 %4599 to i8
  store i8 %4600, i8* %BRANCH_TAKEN, align 1
  %4601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4602 = select i1 %4598, i64 %4589, i64 %4587
  store i64 %4602, i64* %4601, align 8
  store %struct.Memory* %loadMem_41b0c2, %struct.Memory** %MEMORY
  %loadBr_41b0c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b0c2 = icmp eq i8 %loadBr_41b0c2, 1
  br i1 %cmpBr_41b0c2, label %block_.L_41b143, label %block_41b0c8

block_41b0c8:                                     ; preds = %block_.L_41b0bb
  %loadMem_41b0c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4604 = getelementptr inbounds %struct.GPR, %struct.GPR* %4603, i32 0, i32 33
  %4605 = getelementptr inbounds %struct.Reg, %struct.Reg* %4604, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %4605 to i64*
  %4606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4607 = getelementptr inbounds %struct.GPR, %struct.GPR* %4606, i32 0, i32 15
  %4608 = getelementptr inbounds %struct.Reg, %struct.Reg* %4607, i32 0, i32 0
  %RBP.i1171 = bitcast %union.anon* %4608 to i64*
  %4609 = load i64, i64* %RBP.i1171
  %4610 = sub i64 %4609, 80
  %4611 = load i64, i64* %PC.i1170
  %4612 = add i64 %4611, 7
  store i64 %4612, i64* %PC.i1170
  %4613 = inttoptr i64 %4610 to i32*
  store i32 0, i32* %4613
  store %struct.Memory* %loadMem_41b0c8, %struct.Memory** %MEMORY
  br label %block_.L_41b0cf

block_.L_41b0cf:                                  ; preds = %block_41b0dc, %block_41b0c8
  %loadMem_41b0cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4615 = getelementptr inbounds %struct.GPR, %struct.GPR* %4614, i32 0, i32 33
  %4616 = getelementptr inbounds %struct.Reg, %struct.Reg* %4615, i32 0, i32 0
  %PC.i1168 = bitcast %union.anon* %4616 to i64*
  %4617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4618 = getelementptr inbounds %struct.GPR, %struct.GPR* %4617, i32 0, i32 15
  %4619 = getelementptr inbounds %struct.Reg, %struct.Reg* %4618, i32 0, i32 0
  %RBP.i1169 = bitcast %union.anon* %4619 to i64*
  %4620 = load i64, i64* %RBP.i1169
  %4621 = sub i64 %4620, 80
  %4622 = load i64, i64* %PC.i1168
  %4623 = add i64 %4622, 7
  store i64 %4623, i64* %PC.i1168
  %4624 = inttoptr i64 %4621 to i32*
  %4625 = load i32, i32* %4624
  %4626 = sub i32 %4625, 300
  %4627 = icmp ult i32 %4625, 300
  %4628 = zext i1 %4627 to i8
  %4629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4628, i8* %4629, align 1
  %4630 = and i32 %4626, 255
  %4631 = call i32 @llvm.ctpop.i32(i32 %4630)
  %4632 = trunc i32 %4631 to i8
  %4633 = and i8 %4632, 1
  %4634 = xor i8 %4633, 1
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4634, i8* %4635, align 1
  %4636 = xor i32 %4625, 300
  %4637 = xor i32 %4636, %4626
  %4638 = lshr i32 %4637, 4
  %4639 = trunc i32 %4638 to i8
  %4640 = and i8 %4639, 1
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4640, i8* %4641, align 1
  %4642 = icmp eq i32 %4626, 0
  %4643 = zext i1 %4642 to i8
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4643, i8* %4644, align 1
  %4645 = lshr i32 %4626, 31
  %4646 = trunc i32 %4645 to i8
  %4647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4646, i8* %4647, align 1
  %4648 = lshr i32 %4625, 31
  %4649 = xor i32 %4645, %4648
  %4650 = add i32 %4649, %4648
  %4651 = icmp eq i32 %4650, 2
  %4652 = zext i1 %4651 to i8
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4652, i8* %4653, align 1
  store %struct.Memory* %loadMem_41b0cf, %struct.Memory** %MEMORY
  %loadMem_41b0d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4655 = getelementptr inbounds %struct.GPR, %struct.GPR* %4654, i32 0, i32 33
  %4656 = getelementptr inbounds %struct.Reg, %struct.Reg* %4655, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %4656 to i64*
  %4657 = load i64, i64* %PC.i1167
  %4658 = add i64 %4657, 90
  %4659 = load i64, i64* %PC.i1167
  %4660 = add i64 %4659, 6
  %4661 = load i64, i64* %PC.i1167
  %4662 = add i64 %4661, 6
  store i64 %4662, i64* %PC.i1167
  %4663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4664 = load i8, i8* %4663, align 1
  %4665 = icmp ne i8 %4664, 0
  %4666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4667 = load i8, i8* %4666, align 1
  %4668 = icmp ne i8 %4667, 0
  %4669 = xor i1 %4665, %4668
  %4670 = xor i1 %4669, true
  %4671 = zext i1 %4670 to i8
  store i8 %4671, i8* %BRANCH_TAKEN, align 1
  %4672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4673 = select i1 %4669, i64 %4660, i64 %4658
  store i64 %4673, i64* %4672, align 8
  store %struct.Memory* %loadMem_41b0d6, %struct.Memory** %MEMORY
  %loadBr_41b0d6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b0d6 = icmp eq i8 %loadBr_41b0d6, 1
  br i1 %cmpBr_41b0d6, label %block_.L_41b130, label %block_41b0dc

block_41b0dc:                                     ; preds = %block_.L_41b0cf
  %loadMem_41b0dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4675 = getelementptr inbounds %struct.GPR, %struct.GPR* %4674, i32 0, i32 33
  %4676 = getelementptr inbounds %struct.Reg, %struct.Reg* %4675, i32 0, i32 0
  %PC.i1165 = bitcast %union.anon* %4676 to i64*
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4678 = getelementptr inbounds %struct.GPR, %struct.GPR* %4677, i32 0, i32 1
  %4679 = getelementptr inbounds %struct.Reg, %struct.Reg* %4678, i32 0, i32 0
  %RAX.i1166 = bitcast %union.anon* %4679 to i64*
  %4680 = load i64, i64* %PC.i1165
  %4681 = add i64 %4680, 10
  store i64 %4681, i64* %PC.i1165
  store i64 ptrtoint (%G__0x63ae50_type* @G__0x63ae50 to i64), i64* %RAX.i1166, align 8
  store %struct.Memory* %loadMem_41b0dc, %struct.Memory** %MEMORY
  %loadMem_41b0e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4683 = getelementptr inbounds %struct.GPR, %struct.GPR* %4682, i32 0, i32 33
  %4684 = getelementptr inbounds %struct.Reg, %struct.Reg* %4683, i32 0, i32 0
  %PC.i1162 = bitcast %union.anon* %4684 to i64*
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4686 = getelementptr inbounds %struct.GPR, %struct.GPR* %4685, i32 0, i32 5
  %4687 = getelementptr inbounds %struct.Reg, %struct.Reg* %4686, i32 0, i32 0
  %RCX.i1163 = bitcast %union.anon* %4687 to i64*
  %4688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4689 = getelementptr inbounds %struct.GPR, %struct.GPR* %4688, i32 0, i32 15
  %4690 = getelementptr inbounds %struct.Reg, %struct.Reg* %4689, i32 0, i32 0
  %RBP.i1164 = bitcast %union.anon* %4690 to i64*
  %4691 = load i64, i64* %RBP.i1164
  %4692 = sub i64 %4691, 76
  %4693 = load i64, i64* %PC.i1162
  %4694 = add i64 %4693, 4
  store i64 %4694, i64* %PC.i1162
  %4695 = inttoptr i64 %4692 to i32*
  %4696 = load i32, i32* %4695
  %4697 = sext i32 %4696 to i64
  store i64 %4697, i64* %RCX.i1163, align 8
  store %struct.Memory* %loadMem_41b0e6, %struct.Memory** %MEMORY
  %loadMem_41b0ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %4698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4699 = getelementptr inbounds %struct.GPR, %struct.GPR* %4698, i32 0, i32 33
  %4700 = getelementptr inbounds %struct.Reg, %struct.Reg* %4699, i32 0, i32 0
  %PC.i1160 = bitcast %union.anon* %4700 to i64*
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4702 = getelementptr inbounds %struct.GPR, %struct.GPR* %4701, i32 0, i32 5
  %4703 = getelementptr inbounds %struct.Reg, %struct.Reg* %4702, i32 0, i32 0
  %RCX.i1161 = bitcast %union.anon* %4703 to i64*
  %4704 = load i64, i64* %RCX.i1161
  %4705 = load i64, i64* %PC.i1160
  %4706 = add i64 %4705, 7
  store i64 %4706, i64* %PC.i1160
  %4707 = sext i64 %4704 to i128
  %4708 = and i128 %4707, -18446744073709551616
  %4709 = zext i64 %4704 to i128
  %4710 = or i128 %4708, %4709
  %4711 = mul i128 7200, %4710
  %4712 = trunc i128 %4711 to i64
  store i64 %4712, i64* %RCX.i1161, align 8
  %4713 = sext i64 %4712 to i128
  %4714 = icmp ne i128 %4713, %4711
  %4715 = zext i1 %4714 to i8
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4715, i8* %4716, align 1
  %4717 = trunc i128 %4711 to i32
  %4718 = and i32 %4717, 255
  %4719 = call i32 @llvm.ctpop.i32(i32 %4718)
  %4720 = trunc i32 %4719 to i8
  %4721 = and i8 %4720, 1
  %4722 = xor i8 %4721, 1
  %4723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4722, i8* %4723, align 1
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4724, align 1
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4725, align 1
  %4726 = lshr i64 %4712, 63
  %4727 = trunc i64 %4726 to i8
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4727, i8* %4728, align 1
  %4729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4715, i8* %4729, align 1
  store %struct.Memory* %loadMem_41b0ea, %struct.Memory** %MEMORY
  %loadMem_41b0f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4731 = getelementptr inbounds %struct.GPR, %struct.GPR* %4730, i32 0, i32 33
  %4732 = getelementptr inbounds %struct.Reg, %struct.Reg* %4731, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %4732 to i64*
  %4733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4734 = getelementptr inbounds %struct.GPR, %struct.GPR* %4733, i32 0, i32 1
  %4735 = getelementptr inbounds %struct.Reg, %struct.Reg* %4734, i32 0, i32 0
  %RAX.i1158 = bitcast %union.anon* %4735 to i64*
  %4736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4737 = getelementptr inbounds %struct.GPR, %struct.GPR* %4736, i32 0, i32 5
  %4738 = getelementptr inbounds %struct.Reg, %struct.Reg* %4737, i32 0, i32 0
  %RCX.i1159 = bitcast %union.anon* %4738 to i64*
  %4739 = load i64, i64* %RAX.i1158
  %4740 = load i64, i64* %RCX.i1159
  %4741 = load i64, i64* %PC.i1157
  %4742 = add i64 %4741, 3
  store i64 %4742, i64* %PC.i1157
  %4743 = add i64 %4740, %4739
  store i64 %4743, i64* %RAX.i1158, align 8
  %4744 = icmp ult i64 %4743, %4739
  %4745 = icmp ult i64 %4743, %4740
  %4746 = or i1 %4744, %4745
  %4747 = zext i1 %4746 to i8
  %4748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4747, i8* %4748, align 1
  %4749 = trunc i64 %4743 to i32
  %4750 = and i32 %4749, 255
  %4751 = call i32 @llvm.ctpop.i32(i32 %4750)
  %4752 = trunc i32 %4751 to i8
  %4753 = and i8 %4752, 1
  %4754 = xor i8 %4753, 1
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4754, i8* %4755, align 1
  %4756 = xor i64 %4740, %4739
  %4757 = xor i64 %4756, %4743
  %4758 = lshr i64 %4757, 4
  %4759 = trunc i64 %4758 to i8
  %4760 = and i8 %4759, 1
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4760, i8* %4761, align 1
  %4762 = icmp eq i64 %4743, 0
  %4763 = zext i1 %4762 to i8
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4763, i8* %4764, align 1
  %4765 = lshr i64 %4743, 63
  %4766 = trunc i64 %4765 to i8
  %4767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4766, i8* %4767, align 1
  %4768 = lshr i64 %4739, 63
  %4769 = lshr i64 %4740, 63
  %4770 = xor i64 %4765, %4768
  %4771 = xor i64 %4765, %4769
  %4772 = add i64 %4770, %4771
  %4773 = icmp eq i64 %4772, 2
  %4774 = zext i1 %4773 to i8
  %4775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4774, i8* %4775, align 1
  store %struct.Memory* %loadMem_41b0f1, %struct.Memory** %MEMORY
  %loadMem_41b0f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4777 = getelementptr inbounds %struct.GPR, %struct.GPR* %4776, i32 0, i32 33
  %4778 = getelementptr inbounds %struct.Reg, %struct.Reg* %4777, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %4778 to i64*
  %4779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4780 = getelementptr inbounds %struct.GPR, %struct.GPR* %4779, i32 0, i32 5
  %4781 = getelementptr inbounds %struct.Reg, %struct.Reg* %4780, i32 0, i32 0
  %RCX.i1155 = bitcast %union.anon* %4781 to i64*
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4783 = getelementptr inbounds %struct.GPR, %struct.GPR* %4782, i32 0, i32 15
  %4784 = getelementptr inbounds %struct.Reg, %struct.Reg* %4783, i32 0, i32 0
  %RBP.i1156 = bitcast %union.anon* %4784 to i64*
  %4785 = load i64, i64* %RBP.i1156
  %4786 = sub i64 %4785, 80
  %4787 = load i64, i64* %PC.i1154
  %4788 = add i64 %4787, 4
  store i64 %4788, i64* %PC.i1154
  %4789 = inttoptr i64 %4786 to i32*
  %4790 = load i32, i32* %4789
  %4791 = sext i32 %4790 to i64
  store i64 %4791, i64* %RCX.i1155, align 8
  store %struct.Memory* %loadMem_41b0f4, %struct.Memory** %MEMORY
  %loadMem_41b0f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4793 = getelementptr inbounds %struct.GPR, %struct.GPR* %4792, i32 0, i32 33
  %4794 = getelementptr inbounds %struct.Reg, %struct.Reg* %4793, i32 0, i32 0
  %PC.i1152 = bitcast %union.anon* %4794 to i64*
  %4795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4796 = getelementptr inbounds %struct.GPR, %struct.GPR* %4795, i32 0, i32 5
  %4797 = getelementptr inbounds %struct.Reg, %struct.Reg* %4796, i32 0, i32 0
  %RCX.i1153 = bitcast %union.anon* %4797 to i64*
  %4798 = load i64, i64* %RCX.i1153
  %4799 = load i64, i64* %PC.i1152
  %4800 = add i64 %4799, 4
  store i64 %4800, i64* %PC.i1152
  %4801 = sext i64 %4798 to i128
  %4802 = and i128 %4801, -18446744073709551616
  %4803 = zext i64 %4798 to i128
  %4804 = or i128 %4802, %4803
  %4805 = mul i128 24, %4804
  %4806 = trunc i128 %4805 to i64
  store i64 %4806, i64* %RCX.i1153, align 8
  %4807 = sext i64 %4806 to i128
  %4808 = icmp ne i128 %4807, %4805
  %4809 = zext i1 %4808 to i8
  %4810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4809, i8* %4810, align 1
  %4811 = trunc i128 %4805 to i32
  %4812 = and i32 %4811, 255
  %4813 = call i32 @llvm.ctpop.i32(i32 %4812)
  %4814 = trunc i32 %4813 to i8
  %4815 = and i8 %4814, 1
  %4816 = xor i8 %4815, 1
  %4817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4816, i8* %4817, align 1
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4818, align 1
  %4819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4819, align 1
  %4820 = lshr i64 %4806, 63
  %4821 = trunc i64 %4820 to i8
  %4822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4821, i8* %4822, align 1
  %4823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4809, i8* %4823, align 1
  store %struct.Memory* %loadMem_41b0f8, %struct.Memory** %MEMORY
  %loadMem_41b0fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4825 = getelementptr inbounds %struct.GPR, %struct.GPR* %4824, i32 0, i32 33
  %4826 = getelementptr inbounds %struct.Reg, %struct.Reg* %4825, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %4826 to i64*
  %4827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4828 = getelementptr inbounds %struct.GPR, %struct.GPR* %4827, i32 0, i32 1
  %4829 = getelementptr inbounds %struct.Reg, %struct.Reg* %4828, i32 0, i32 0
  %RAX.i1150 = bitcast %union.anon* %4829 to i64*
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4831 = getelementptr inbounds %struct.GPR, %struct.GPR* %4830, i32 0, i32 5
  %4832 = getelementptr inbounds %struct.Reg, %struct.Reg* %4831, i32 0, i32 0
  %RCX.i1151 = bitcast %union.anon* %4832 to i64*
  %4833 = load i64, i64* %RAX.i1150
  %4834 = load i64, i64* %RCX.i1151
  %4835 = load i64, i64* %PC.i1149
  %4836 = add i64 %4835, 3
  store i64 %4836, i64* %PC.i1149
  %4837 = add i64 %4834, %4833
  store i64 %4837, i64* %RAX.i1150, align 8
  %4838 = icmp ult i64 %4837, %4833
  %4839 = icmp ult i64 %4837, %4834
  %4840 = or i1 %4838, %4839
  %4841 = zext i1 %4840 to i8
  %4842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4841, i8* %4842, align 1
  %4843 = trunc i64 %4837 to i32
  %4844 = and i32 %4843, 255
  %4845 = call i32 @llvm.ctpop.i32(i32 %4844)
  %4846 = trunc i32 %4845 to i8
  %4847 = and i8 %4846, 1
  %4848 = xor i8 %4847, 1
  %4849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4848, i8* %4849, align 1
  %4850 = xor i64 %4834, %4833
  %4851 = xor i64 %4850, %4837
  %4852 = lshr i64 %4851, 4
  %4853 = trunc i64 %4852 to i8
  %4854 = and i8 %4853, 1
  %4855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4854, i8* %4855, align 1
  %4856 = icmp eq i64 %4837, 0
  %4857 = zext i1 %4856 to i8
  %4858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4857, i8* %4858, align 1
  %4859 = lshr i64 %4837, 63
  %4860 = trunc i64 %4859 to i8
  %4861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4860, i8* %4861, align 1
  %4862 = lshr i64 %4833, 63
  %4863 = lshr i64 %4834, 63
  %4864 = xor i64 %4859, %4862
  %4865 = xor i64 %4859, %4863
  %4866 = add i64 %4864, %4865
  %4867 = icmp eq i64 %4866, 2
  %4868 = zext i1 %4867 to i8
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4868, i8* %4869, align 1
  store %struct.Memory* %loadMem_41b0fc, %struct.Memory** %MEMORY
  %loadMem_41b0ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4871 = getelementptr inbounds %struct.GPR, %struct.GPR* %4870, i32 0, i32 33
  %4872 = getelementptr inbounds %struct.Reg, %struct.Reg* %4871, i32 0, i32 0
  %PC.i1147 = bitcast %union.anon* %4872 to i64*
  %4873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4874 = getelementptr inbounds %struct.GPR, %struct.GPR* %4873, i32 0, i32 5
  %4875 = getelementptr inbounds %struct.Reg, %struct.Reg* %4874, i32 0, i32 0
  %RCX.i1148 = bitcast %union.anon* %4875 to i64*
  %4876 = load i64, i64* %PC.i1147
  %4877 = add i64 %4876, 8
  store i64 %4877, i64* %PC.i1147
  %4878 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %4878, i64* %RCX.i1148, align 8
  store %struct.Memory* %loadMem_41b0ff, %struct.Memory** %MEMORY
  %loadMem_41b107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4880 = getelementptr inbounds %struct.GPR, %struct.GPR* %4879, i32 0, i32 33
  %4881 = getelementptr inbounds %struct.Reg, %struct.Reg* %4880, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %4881 to i64*
  %4882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4883 = getelementptr inbounds %struct.GPR, %struct.GPR* %4882, i32 0, i32 1
  %4884 = getelementptr inbounds %struct.Reg, %struct.Reg* %4883, i32 0, i32 0
  %RAX.i1145 = bitcast %union.anon* %4884 to i64*
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4886 = getelementptr inbounds %struct.GPR, %struct.GPR* %4885, i32 0, i32 5
  %4887 = getelementptr inbounds %struct.Reg, %struct.Reg* %4886, i32 0, i32 0
  %RCX.i1146 = bitcast %union.anon* %4887 to i64*
  %4888 = load i64, i64* %RAX.i1145
  %4889 = load i64, i64* %RCX.i1146
  %4890 = load i64, i64* %PC.i1144
  %4891 = add i64 %4890, 3
  store i64 %4891, i64* %PC.i1144
  %4892 = inttoptr i64 %4888 to i64*
  store i64 %4889, i64* %4892
  store %struct.Memory* %loadMem_41b107, %struct.Memory** %MEMORY
  %loadMem_41b10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4894 = getelementptr inbounds %struct.GPR, %struct.GPR* %4893, i32 0, i32 33
  %4895 = getelementptr inbounds %struct.Reg, %struct.Reg* %4894, i32 0, i32 0
  %PC.i1142 = bitcast %union.anon* %4895 to i64*
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4897 = getelementptr inbounds %struct.GPR, %struct.GPR* %4896, i32 0, i32 5
  %4898 = getelementptr inbounds %struct.Reg, %struct.Reg* %4897, i32 0, i32 0
  %RCX.i1143 = bitcast %union.anon* %4898 to i64*
  %4899 = load i64, i64* %PC.i1142
  %4900 = add i64 %4899, 8
  store i64 %4900, i64* %PC.i1142
  %4901 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %4901, i64* %RCX.i1143, align 8
  store %struct.Memory* %loadMem_41b10a, %struct.Memory** %MEMORY
  %loadMem_41b112 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4903 = getelementptr inbounds %struct.GPR, %struct.GPR* %4902, i32 0, i32 33
  %4904 = getelementptr inbounds %struct.Reg, %struct.Reg* %4903, i32 0, i32 0
  %PC.i1139 = bitcast %union.anon* %4904 to i64*
  %4905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4906 = getelementptr inbounds %struct.GPR, %struct.GPR* %4905, i32 0, i32 1
  %4907 = getelementptr inbounds %struct.Reg, %struct.Reg* %4906, i32 0, i32 0
  %RAX.i1140 = bitcast %union.anon* %4907 to i64*
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4909 = getelementptr inbounds %struct.GPR, %struct.GPR* %4908, i32 0, i32 5
  %4910 = getelementptr inbounds %struct.Reg, %struct.Reg* %4909, i32 0, i32 0
  %RCX.i1141 = bitcast %union.anon* %4910 to i64*
  %4911 = load i64, i64* %RAX.i1140
  %4912 = add i64 %4911, 8
  %4913 = load i64, i64* %RCX.i1141
  %4914 = load i64, i64* %PC.i1139
  %4915 = add i64 %4914, 4
  store i64 %4915, i64* %PC.i1139
  %4916 = inttoptr i64 %4912 to i64*
  store i64 %4913, i64* %4916
  store %struct.Memory* %loadMem_41b112, %struct.Memory** %MEMORY
  %loadMem_41b116 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4918 = getelementptr inbounds %struct.GPR, %struct.GPR* %4917, i32 0, i32 33
  %4919 = getelementptr inbounds %struct.Reg, %struct.Reg* %4918, i32 0, i32 0
  %PC.i1137 = bitcast %union.anon* %4919 to i64*
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4921 = getelementptr inbounds %struct.GPR, %struct.GPR* %4920, i32 0, i32 5
  %4922 = getelementptr inbounds %struct.Reg, %struct.Reg* %4921, i32 0, i32 0
  %RCX.i1138 = bitcast %union.anon* %4922 to i64*
  %4923 = load i64, i64* %PC.i1137
  %4924 = add i64 %4923, 8
  store i64 %4924, i64* %PC.i1137
  %4925 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %4925, i64* %RCX.i1138, align 8
  store %struct.Memory* %loadMem_41b116, %struct.Memory** %MEMORY
  %loadMem_41b11e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4927 = getelementptr inbounds %struct.GPR, %struct.GPR* %4926, i32 0, i32 33
  %4928 = getelementptr inbounds %struct.Reg, %struct.Reg* %4927, i32 0, i32 0
  %PC.i1134 = bitcast %union.anon* %4928 to i64*
  %4929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4930 = getelementptr inbounds %struct.GPR, %struct.GPR* %4929, i32 0, i32 1
  %4931 = getelementptr inbounds %struct.Reg, %struct.Reg* %4930, i32 0, i32 0
  %RAX.i1135 = bitcast %union.anon* %4931 to i64*
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4933 = getelementptr inbounds %struct.GPR, %struct.GPR* %4932, i32 0, i32 5
  %4934 = getelementptr inbounds %struct.Reg, %struct.Reg* %4933, i32 0, i32 0
  %RCX.i1136 = bitcast %union.anon* %4934 to i64*
  %4935 = load i64, i64* %RAX.i1135
  %4936 = add i64 %4935, 16
  %4937 = load i64, i64* %RCX.i1136
  %4938 = load i64, i64* %PC.i1134
  %4939 = add i64 %4938, 4
  store i64 %4939, i64* %PC.i1134
  %4940 = inttoptr i64 %4936 to i64*
  store i64 %4937, i64* %4940
  store %struct.Memory* %loadMem_41b11e, %struct.Memory** %MEMORY
  %loadMem_41b122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4942 = getelementptr inbounds %struct.GPR, %struct.GPR* %4941, i32 0, i32 33
  %4943 = getelementptr inbounds %struct.Reg, %struct.Reg* %4942, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %4943 to i64*
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4945 = getelementptr inbounds %struct.GPR, %struct.GPR* %4944, i32 0, i32 1
  %4946 = getelementptr inbounds %struct.Reg, %struct.Reg* %4945, i32 0, i32 0
  %RAX.i1132 = bitcast %union.anon* %4946 to i64*
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4948 = getelementptr inbounds %struct.GPR, %struct.GPR* %4947, i32 0, i32 15
  %4949 = getelementptr inbounds %struct.Reg, %struct.Reg* %4948, i32 0, i32 0
  %RBP.i1133 = bitcast %union.anon* %4949 to i64*
  %4950 = load i64, i64* %RBP.i1133
  %4951 = sub i64 %4950, 80
  %4952 = load i64, i64* %PC.i1131
  %4953 = add i64 %4952, 3
  store i64 %4953, i64* %PC.i1131
  %4954 = inttoptr i64 %4951 to i32*
  %4955 = load i32, i32* %4954
  %4956 = zext i32 %4955 to i64
  store i64 %4956, i64* %RAX.i1132, align 8
  store %struct.Memory* %loadMem_41b122, %struct.Memory** %MEMORY
  %loadMem_41b125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4958 = getelementptr inbounds %struct.GPR, %struct.GPR* %4957, i32 0, i32 33
  %4959 = getelementptr inbounds %struct.Reg, %struct.Reg* %4958, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %4959 to i64*
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 1
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %RAX.i1130 = bitcast %union.anon* %4962 to i64*
  %4963 = load i64, i64* %RAX.i1130
  %4964 = load i64, i64* %PC.i1129
  %4965 = add i64 %4964, 3
  store i64 %4965, i64* %PC.i1129
  %4966 = trunc i64 %4963 to i32
  %4967 = add i32 1, %4966
  %4968 = zext i32 %4967 to i64
  store i64 %4968, i64* %RAX.i1130, align 8
  %4969 = icmp ult i32 %4967, %4966
  %4970 = icmp ult i32 %4967, 1
  %4971 = or i1 %4969, %4970
  %4972 = zext i1 %4971 to i8
  %4973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4972, i8* %4973, align 1
  %4974 = and i32 %4967, 255
  %4975 = call i32 @llvm.ctpop.i32(i32 %4974)
  %4976 = trunc i32 %4975 to i8
  %4977 = and i8 %4976, 1
  %4978 = xor i8 %4977, 1
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4978, i8* %4979, align 1
  %4980 = xor i64 1, %4963
  %4981 = trunc i64 %4980 to i32
  %4982 = xor i32 %4981, %4967
  %4983 = lshr i32 %4982, 4
  %4984 = trunc i32 %4983 to i8
  %4985 = and i8 %4984, 1
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4985, i8* %4986, align 1
  %4987 = icmp eq i32 %4967, 0
  %4988 = zext i1 %4987 to i8
  %4989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4988, i8* %4989, align 1
  %4990 = lshr i32 %4967, 31
  %4991 = trunc i32 %4990 to i8
  %4992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4991, i8* %4992, align 1
  %4993 = lshr i32 %4966, 31
  %4994 = xor i32 %4990, %4993
  %4995 = add i32 %4994, %4990
  %4996 = icmp eq i32 %4995, 2
  %4997 = zext i1 %4996 to i8
  %4998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4997, i8* %4998, align 1
  store %struct.Memory* %loadMem_41b125, %struct.Memory** %MEMORY
  %loadMem_41b128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5000 = getelementptr inbounds %struct.GPR, %struct.GPR* %4999, i32 0, i32 33
  %5001 = getelementptr inbounds %struct.Reg, %struct.Reg* %5000, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %5001 to i64*
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5003 = getelementptr inbounds %struct.GPR, %struct.GPR* %5002, i32 0, i32 1
  %5004 = getelementptr inbounds %struct.Reg, %struct.Reg* %5003, i32 0, i32 0
  %EAX.i1127 = bitcast %union.anon* %5004 to i32*
  %5005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5006 = getelementptr inbounds %struct.GPR, %struct.GPR* %5005, i32 0, i32 15
  %5007 = getelementptr inbounds %struct.Reg, %struct.Reg* %5006, i32 0, i32 0
  %RBP.i1128 = bitcast %union.anon* %5007 to i64*
  %5008 = load i64, i64* %RBP.i1128
  %5009 = sub i64 %5008, 80
  %5010 = load i32, i32* %EAX.i1127
  %5011 = zext i32 %5010 to i64
  %5012 = load i64, i64* %PC.i1126
  %5013 = add i64 %5012, 3
  store i64 %5013, i64* %PC.i1126
  %5014 = inttoptr i64 %5009 to i32*
  store i32 %5010, i32* %5014
  store %struct.Memory* %loadMem_41b128, %struct.Memory** %MEMORY
  %loadMem_41b12b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5016 = getelementptr inbounds %struct.GPR, %struct.GPR* %5015, i32 0, i32 33
  %5017 = getelementptr inbounds %struct.Reg, %struct.Reg* %5016, i32 0, i32 0
  %PC.i1125 = bitcast %union.anon* %5017 to i64*
  %5018 = load i64, i64* %PC.i1125
  %5019 = add i64 %5018, -92
  %5020 = load i64, i64* %PC.i1125
  %5021 = add i64 %5020, 5
  store i64 %5021, i64* %PC.i1125
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5019, i64* %5022, align 8
  store %struct.Memory* %loadMem_41b12b, %struct.Memory** %MEMORY
  br label %block_.L_41b0cf

block_.L_41b130:                                  ; preds = %block_.L_41b0cf
  %loadMem_41b130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5024 = getelementptr inbounds %struct.GPR, %struct.GPR* %5023, i32 0, i32 33
  %5025 = getelementptr inbounds %struct.Reg, %struct.Reg* %5024, i32 0, i32 0
  %PC.i1124 = bitcast %union.anon* %5025 to i64*
  %5026 = load i64, i64* %PC.i1124
  %5027 = add i64 %5026, 5
  %5028 = load i64, i64* %PC.i1124
  %5029 = add i64 %5028, 5
  store i64 %5029, i64* %PC.i1124
  %5030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5027, i64* %5030, align 8
  store %struct.Memory* %loadMem_41b130, %struct.Memory** %MEMORY
  br label %block_.L_41b135

block_.L_41b135:                                  ; preds = %block_.L_41b130
  %loadMem_41b135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5032 = getelementptr inbounds %struct.GPR, %struct.GPR* %5031, i32 0, i32 33
  %5033 = getelementptr inbounds %struct.Reg, %struct.Reg* %5032, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %5033 to i64*
  %5034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5035 = getelementptr inbounds %struct.GPR, %struct.GPR* %5034, i32 0, i32 1
  %5036 = getelementptr inbounds %struct.Reg, %struct.Reg* %5035, i32 0, i32 0
  %RAX.i1122 = bitcast %union.anon* %5036 to i64*
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5038 = getelementptr inbounds %struct.GPR, %struct.GPR* %5037, i32 0, i32 15
  %5039 = getelementptr inbounds %struct.Reg, %struct.Reg* %5038, i32 0, i32 0
  %RBP.i1123 = bitcast %union.anon* %5039 to i64*
  %5040 = load i64, i64* %RBP.i1123
  %5041 = sub i64 %5040, 76
  %5042 = load i64, i64* %PC.i1121
  %5043 = add i64 %5042, 3
  store i64 %5043, i64* %PC.i1121
  %5044 = inttoptr i64 %5041 to i32*
  %5045 = load i32, i32* %5044
  %5046 = zext i32 %5045 to i64
  store i64 %5046, i64* %RAX.i1122, align 8
  store %struct.Memory* %loadMem_41b135, %struct.Memory** %MEMORY
  %loadMem_41b138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5048 = getelementptr inbounds %struct.GPR, %struct.GPR* %5047, i32 0, i32 33
  %5049 = getelementptr inbounds %struct.Reg, %struct.Reg* %5048, i32 0, i32 0
  %PC.i1119 = bitcast %union.anon* %5049 to i64*
  %5050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5051 = getelementptr inbounds %struct.GPR, %struct.GPR* %5050, i32 0, i32 1
  %5052 = getelementptr inbounds %struct.Reg, %struct.Reg* %5051, i32 0, i32 0
  %RAX.i1120 = bitcast %union.anon* %5052 to i64*
  %5053 = load i64, i64* %RAX.i1120
  %5054 = load i64, i64* %PC.i1119
  %5055 = add i64 %5054, 3
  store i64 %5055, i64* %PC.i1119
  %5056 = trunc i64 %5053 to i32
  %5057 = add i32 1, %5056
  %5058 = zext i32 %5057 to i64
  store i64 %5058, i64* %RAX.i1120, align 8
  %5059 = icmp ult i32 %5057, %5056
  %5060 = icmp ult i32 %5057, 1
  %5061 = or i1 %5059, %5060
  %5062 = zext i1 %5061 to i8
  %5063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5062, i8* %5063, align 1
  %5064 = and i32 %5057, 255
  %5065 = call i32 @llvm.ctpop.i32(i32 %5064)
  %5066 = trunc i32 %5065 to i8
  %5067 = and i8 %5066, 1
  %5068 = xor i8 %5067, 1
  %5069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5068, i8* %5069, align 1
  %5070 = xor i64 1, %5053
  %5071 = trunc i64 %5070 to i32
  %5072 = xor i32 %5071, %5057
  %5073 = lshr i32 %5072, 4
  %5074 = trunc i32 %5073 to i8
  %5075 = and i8 %5074, 1
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5075, i8* %5076, align 1
  %5077 = icmp eq i32 %5057, 0
  %5078 = zext i1 %5077 to i8
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5078, i8* %5079, align 1
  %5080 = lshr i32 %5057, 31
  %5081 = trunc i32 %5080 to i8
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5081, i8* %5082, align 1
  %5083 = lshr i32 %5056, 31
  %5084 = xor i32 %5080, %5083
  %5085 = add i32 %5084, %5080
  %5086 = icmp eq i32 %5085, 2
  %5087 = zext i1 %5086 to i8
  %5088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5087, i8* %5088, align 1
  store %struct.Memory* %loadMem_41b138, %struct.Memory** %MEMORY
  %loadMem_41b13b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5090 = getelementptr inbounds %struct.GPR, %struct.GPR* %5089, i32 0, i32 33
  %5091 = getelementptr inbounds %struct.Reg, %struct.Reg* %5090, i32 0, i32 0
  %PC.i1116 = bitcast %union.anon* %5091 to i64*
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5093 = getelementptr inbounds %struct.GPR, %struct.GPR* %5092, i32 0, i32 1
  %5094 = getelementptr inbounds %struct.Reg, %struct.Reg* %5093, i32 0, i32 0
  %EAX.i1117 = bitcast %union.anon* %5094 to i32*
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5096 = getelementptr inbounds %struct.GPR, %struct.GPR* %5095, i32 0, i32 15
  %5097 = getelementptr inbounds %struct.Reg, %struct.Reg* %5096, i32 0, i32 0
  %RBP.i1118 = bitcast %union.anon* %5097 to i64*
  %5098 = load i64, i64* %RBP.i1118
  %5099 = sub i64 %5098, 76
  %5100 = load i32, i32* %EAX.i1117
  %5101 = zext i32 %5100 to i64
  %5102 = load i64, i64* %PC.i1116
  %5103 = add i64 %5102, 3
  store i64 %5103, i64* %PC.i1116
  %5104 = inttoptr i64 %5099 to i32*
  store i32 %5100, i32* %5104
  store %struct.Memory* %loadMem_41b13b, %struct.Memory** %MEMORY
  %loadMem_41b13e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5106 = getelementptr inbounds %struct.GPR, %struct.GPR* %5105, i32 0, i32 33
  %5107 = getelementptr inbounds %struct.Reg, %struct.Reg* %5106, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %5107 to i64*
  %5108 = load i64, i64* %PC.i1115
  %5109 = add i64 %5108, -131
  %5110 = load i64, i64* %PC.i1115
  %5111 = add i64 %5110, 5
  store i64 %5111, i64* %PC.i1115
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5109, i64* %5112, align 8
  store %struct.Memory* %loadMem_41b13e, %struct.Memory** %MEMORY
  br label %block_.L_41b0bb

block_.L_41b143:                                  ; preds = %block_.L_41b0bb
  %loadMem_41b143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5114 = getelementptr inbounds %struct.GPR, %struct.GPR* %5113, i32 0, i32 33
  %5115 = getelementptr inbounds %struct.Reg, %struct.Reg* %5114, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %5115 to i64*
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5117 = getelementptr inbounds %struct.GPR, %struct.GPR* %5116, i32 0, i32 1
  %5118 = getelementptr inbounds %struct.Reg, %struct.Reg* %5117, i32 0, i32 0
  %RAX.i1114 = bitcast %union.anon* %5118 to i64*
  %5119 = load i64, i64* %PC.i1113
  %5120 = add i64 %5119, 10
  store i64 %5120, i64* %PC.i1113
  store i64 ptrtoint (%G__0x86bda0_type* @G__0x86bda0 to i64), i64* %RAX.i1114, align 8
  store %struct.Memory* %loadMem_41b143, %struct.Memory** %MEMORY
  %loadMem_41b14d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5122 = getelementptr inbounds %struct.GPR, %struct.GPR* %5121, i32 0, i32 33
  %5123 = getelementptr inbounds %struct.Reg, %struct.Reg* %5122, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %5123 to i64*
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5125 = getelementptr inbounds %struct.GPR, %struct.GPR* %5124, i32 0, i32 9
  %5126 = getelementptr inbounds %struct.Reg, %struct.Reg* %5125, i32 0, i32 0
  %ESI.i1111 = bitcast %union.anon* %5126 to i32*
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5128 = getelementptr inbounds %struct.GPR, %struct.GPR* %5127, i32 0, i32 9
  %5129 = getelementptr inbounds %struct.Reg, %struct.Reg* %5128, i32 0, i32 0
  %RSI.i1112 = bitcast %union.anon* %5129 to i64*
  %5130 = load i64, i64* %RSI.i1112
  %5131 = load i32, i32* %ESI.i1111
  %5132 = zext i32 %5131 to i64
  %5133 = load i64, i64* %PC.i1110
  %5134 = add i64 %5133, 2
  store i64 %5134, i64* %PC.i1110
  %5135 = xor i64 %5132, %5130
  %5136 = trunc i64 %5135 to i32
  %5137 = and i64 %5135, 4294967295
  store i64 %5137, i64* %RSI.i1112, align 8
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5138, align 1
  %5139 = and i32 %5136, 255
  %5140 = call i32 @llvm.ctpop.i32(i32 %5139)
  %5141 = trunc i32 %5140 to i8
  %5142 = and i8 %5141, 1
  %5143 = xor i8 %5142, 1
  %5144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5143, i8* %5144, align 1
  %5145 = icmp eq i32 %5136, 0
  %5146 = zext i1 %5145 to i8
  %5147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5146, i8* %5147, align 1
  %5148 = lshr i32 %5136, 31
  %5149 = trunc i32 %5148 to i8
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5149, i8* %5150, align 1
  %5151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5151, align 1
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5152, align 1
  store %struct.Memory* %loadMem_41b14d, %struct.Memory** %MEMORY
  %loadMem_41b14f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5154 = getelementptr inbounds %struct.GPR, %struct.GPR* %5153, i32 0, i32 33
  %5155 = getelementptr inbounds %struct.Reg, %struct.Reg* %5154, i32 0, i32 0
  %PC.i1108 = bitcast %union.anon* %5155 to i64*
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5157 = getelementptr inbounds %struct.GPR, %struct.GPR* %5156, i32 0, i32 5
  %5158 = getelementptr inbounds %struct.Reg, %struct.Reg* %5157, i32 0, i32 0
  %RCX.i1109 = bitcast %union.anon* %5158 to i64*
  %5159 = load i64, i64* %PC.i1108
  %5160 = add i64 %5159, 5
  store i64 %5160, i64* %PC.i1108
  store i64 82944, i64* %RCX.i1109, align 8
  store %struct.Memory* %loadMem_41b14f, %struct.Memory** %MEMORY
  %loadMem_41b154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5162 = getelementptr inbounds %struct.GPR, %struct.GPR* %5161, i32 0, i32 33
  %5163 = getelementptr inbounds %struct.Reg, %struct.Reg* %5162, i32 0, i32 0
  %PC.i1105 = bitcast %union.anon* %5163 to i64*
  %5164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5165 = getelementptr inbounds %struct.GPR, %struct.GPR* %5164, i32 0, i32 5
  %5166 = getelementptr inbounds %struct.Reg, %struct.Reg* %5165, i32 0, i32 0
  %ECX.i1106 = bitcast %union.anon* %5166 to i32*
  %5167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5168 = getelementptr inbounds %struct.GPR, %struct.GPR* %5167, i32 0, i32 7
  %5169 = getelementptr inbounds %struct.Reg, %struct.Reg* %5168, i32 0, i32 0
  %RDX.i1107 = bitcast %union.anon* %5169 to i64*
  %5170 = load i32, i32* %ECX.i1106
  %5171 = zext i32 %5170 to i64
  %5172 = load i64, i64* %PC.i1105
  %5173 = add i64 %5172, 2
  store i64 %5173, i64* %PC.i1105
  %5174 = and i64 %5171, 4294967295
  store i64 %5174, i64* %RDX.i1107, align 8
  store %struct.Memory* %loadMem_41b154, %struct.Memory** %MEMORY
  %loadMem_41b156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5176 = getelementptr inbounds %struct.GPR, %struct.GPR* %5175, i32 0, i32 33
  %5177 = getelementptr inbounds %struct.Reg, %struct.Reg* %5176, i32 0, i32 0
  %PC.i1102 = bitcast %union.anon* %5177 to i64*
  %5178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5179 = getelementptr inbounds %struct.GPR, %struct.GPR* %5178, i32 0, i32 1
  %5180 = getelementptr inbounds %struct.Reg, %struct.Reg* %5179, i32 0, i32 0
  %RAX.i1103 = bitcast %union.anon* %5180 to i64*
  %5181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5182 = getelementptr inbounds %struct.GPR, %struct.GPR* %5181, i32 0, i32 11
  %5183 = getelementptr inbounds %struct.Reg, %struct.Reg* %5182, i32 0, i32 0
  %RDI.i1104 = bitcast %union.anon* %5183 to i64*
  %5184 = load i64, i64* %RAX.i1103
  %5185 = load i64, i64* %PC.i1102
  %5186 = add i64 %5185, 3
  store i64 %5186, i64* %PC.i1102
  store i64 %5184, i64* %RDI.i1104, align 8
  store %struct.Memory* %loadMem_41b156, %struct.Memory** %MEMORY
  %loadMem1_41b159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5188 = getelementptr inbounds %struct.GPR, %struct.GPR* %5187, i32 0, i32 33
  %5189 = getelementptr inbounds %struct.Reg, %struct.Reg* %5188, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %5189 to i64*
  %5190 = load i64, i64* %PC.i1101
  %5191 = add i64 %5190, -107657
  %5192 = load i64, i64* %PC.i1101
  %5193 = add i64 %5192, 5
  %5194 = load i64, i64* %PC.i1101
  %5195 = add i64 %5194, 5
  store i64 %5195, i64* %PC.i1101
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %5197 = load i64, i64* %5196, align 8
  %5198 = add i64 %5197, -8
  %5199 = inttoptr i64 %5198 to i64*
  store i64 %5193, i64* %5199
  store i64 %5198, i64* %5196, align 8
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5191, i64* %5200, align 8
  store %struct.Memory* %loadMem1_41b159, %struct.Memory** %MEMORY
  %loadMem2_41b159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b159 = load i64, i64* %3
  %5201 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %loadMem2_41b159)
  store %struct.Memory* %5201, %struct.Memory** %MEMORY
  %loadMem_41b15e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5203 = getelementptr inbounds %struct.GPR, %struct.GPR* %5202, i32 0, i32 33
  %5204 = getelementptr inbounds %struct.Reg, %struct.Reg* %5203, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %5204 to i64*
  %5205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5206 = getelementptr inbounds %struct.GPR, %struct.GPR* %5205, i32 0, i32 15
  %5207 = getelementptr inbounds %struct.Reg, %struct.Reg* %5206, i32 0, i32 0
  %RBP.i1099 = bitcast %union.anon* %5207 to i64*
  %5208 = load i64, i64* %RBP.i1099
  %5209 = sub i64 %5208, 76
  %5210 = load i64, i64* %PC.i1098
  %5211 = add i64 %5210, 7
  store i64 %5211, i64* %PC.i1098
  %5212 = inttoptr i64 %5209 to i32*
  store i32 0, i32* %5212
  store %struct.Memory* %loadMem_41b15e, %struct.Memory** %MEMORY
  br label %block_.L_41b165

block_.L_41b165:                                  ; preds = %block_41b172, %block_.L_41b143
  %loadMem_41b165 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5214 = getelementptr inbounds %struct.GPR, %struct.GPR* %5213, i32 0, i32 33
  %5215 = getelementptr inbounds %struct.Reg, %struct.Reg* %5214, i32 0, i32 0
  %PC.i1096 = bitcast %union.anon* %5215 to i64*
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5217 = getelementptr inbounds %struct.GPR, %struct.GPR* %5216, i32 0, i32 15
  %5218 = getelementptr inbounds %struct.Reg, %struct.Reg* %5217, i32 0, i32 0
  %RBP.i1097 = bitcast %union.anon* %5218 to i64*
  %5219 = load i64, i64* %RBP.i1097
  %5220 = sub i64 %5219, 76
  %5221 = load i64, i64* %PC.i1096
  %5222 = add i64 %5221, 7
  store i64 %5222, i64* %PC.i1096
  %5223 = inttoptr i64 %5220 to i32*
  %5224 = load i32, i32* %5223
  %5225 = sub i32 %5224, 300
  %5226 = icmp ult i32 %5224, 300
  %5227 = zext i1 %5226 to i8
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5227, i8* %5228, align 1
  %5229 = and i32 %5225, 255
  %5230 = call i32 @llvm.ctpop.i32(i32 %5229)
  %5231 = trunc i32 %5230 to i8
  %5232 = and i8 %5231, 1
  %5233 = xor i8 %5232, 1
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5233, i8* %5234, align 1
  %5235 = xor i32 %5224, 300
  %5236 = xor i32 %5235, %5225
  %5237 = lshr i32 %5236, 4
  %5238 = trunc i32 %5237 to i8
  %5239 = and i8 %5238, 1
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5239, i8* %5240, align 1
  %5241 = icmp eq i32 %5225, 0
  %5242 = zext i1 %5241 to i8
  %5243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5242, i8* %5243, align 1
  %5244 = lshr i32 %5225, 31
  %5245 = trunc i32 %5244 to i8
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5245, i8* %5246, align 1
  %5247 = lshr i32 %5224, 31
  %5248 = xor i32 %5244, %5247
  %5249 = add i32 %5248, %5247
  %5250 = icmp eq i32 %5249, 2
  %5251 = zext i1 %5250 to i8
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5251, i8* %5252, align 1
  store %struct.Memory* %loadMem_41b165, %struct.Memory** %MEMORY
  %loadMem_41b16c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5254 = getelementptr inbounds %struct.GPR, %struct.GPR* %5253, i32 0, i32 33
  %5255 = getelementptr inbounds %struct.Reg, %struct.Reg* %5254, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %5255 to i64*
  %5256 = load i64, i64* %PC.i1095
  %5257 = add i64 %5256, 233
  %5258 = load i64, i64* %PC.i1095
  %5259 = add i64 %5258, 6
  %5260 = load i64, i64* %PC.i1095
  %5261 = add i64 %5260, 6
  store i64 %5261, i64* %PC.i1095
  %5262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5263 = load i8, i8* %5262, align 1
  %5264 = icmp ne i8 %5263, 0
  %5265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5266 = load i8, i8* %5265, align 1
  %5267 = icmp ne i8 %5266, 0
  %5268 = xor i1 %5264, %5267
  %5269 = xor i1 %5268, true
  %5270 = zext i1 %5269 to i8
  store i8 %5270, i8* %BRANCH_TAKEN, align 1
  %5271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5272 = select i1 %5268, i64 %5259, i64 %5257
  store i64 %5272, i64* %5271, align 8
  store %struct.Memory* %loadMem_41b16c, %struct.Memory** %MEMORY
  %loadBr_41b16c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b16c = icmp eq i8 %loadBr_41b16c, 1
  br i1 %cmpBr_41b16c, label %block_.L_41b255, label %block_41b172

block_41b172:                                     ; preds = %block_.L_41b165
  %loadMem_41b172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5274 = getelementptr inbounds %struct.GPR, %struct.GPR* %5273, i32 0, i32 33
  %5275 = getelementptr inbounds %struct.Reg, %struct.Reg* %5274, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %5275 to i64*
  %5276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5277 = getelementptr inbounds %struct.GPR, %struct.GPR* %5276, i32 0, i32 1
  %5278 = getelementptr inbounds %struct.Reg, %struct.Reg* %5277, i32 0, i32 0
  %RAX.i1094 = bitcast %union.anon* %5278 to i64*
  %5279 = load i64, i64* %PC.i1093
  %5280 = add i64 %5279, 10
  store i64 %5280, i64* %PC.i1093
  store i64 ptrtoint (%G__0x882600_type* @G__0x882600 to i64), i64* %RAX.i1094, align 8
  store %struct.Memory* %loadMem_41b172, %struct.Memory** %MEMORY
  %loadMem_41b17c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5282 = getelementptr inbounds %struct.GPR, %struct.GPR* %5281, i32 0, i32 33
  %5283 = getelementptr inbounds %struct.Reg, %struct.Reg* %5282, i32 0, i32 0
  %PC.i1091 = bitcast %union.anon* %5283 to i64*
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5285 = getelementptr inbounds %struct.GPR, %struct.GPR* %5284, i32 0, i32 5
  %5286 = getelementptr inbounds %struct.Reg, %struct.Reg* %5285, i32 0, i32 0
  %RCX.i1092 = bitcast %union.anon* %5286 to i64*
  %5287 = load i64, i64* %PC.i1091
  %5288 = add i64 %5287, 10
  store i64 %5288, i64* %PC.i1091
  store i64 ptrtoint (%G__0x639220_type* @G__0x639220 to i64), i64* %RCX.i1092, align 8
  store %struct.Memory* %loadMem_41b17c, %struct.Memory** %MEMORY
  %loadMem_41b186 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5290 = getelementptr inbounds %struct.GPR, %struct.GPR* %5289, i32 0, i32 33
  %5291 = getelementptr inbounds %struct.Reg, %struct.Reg* %5290, i32 0, i32 0
  %PC.i1089 = bitcast %union.anon* %5291 to i64*
  %5292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5293 = getelementptr inbounds %struct.GPR, %struct.GPR* %5292, i32 0, i32 7
  %5294 = getelementptr inbounds %struct.Reg, %struct.Reg* %5293, i32 0, i32 0
  %RDX.i1090 = bitcast %union.anon* %5294 to i64*
  %5295 = load i64, i64* %PC.i1089
  %5296 = add i64 %5295, 10
  store i64 %5296, i64* %PC.i1089
  store i64 ptrtoint (%G__0x884b20_type* @G__0x884b20 to i64), i64* %RDX.i1090, align 8
  store %struct.Memory* %loadMem_41b186, %struct.Memory** %MEMORY
  %loadMem_41b190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5298 = getelementptr inbounds %struct.GPR, %struct.GPR* %5297, i32 0, i32 33
  %5299 = getelementptr inbounds %struct.Reg, %struct.Reg* %5298, i32 0, i32 0
  %PC.i1086 = bitcast %union.anon* %5299 to i64*
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5301 = getelementptr inbounds %struct.GPR, %struct.GPR* %5300, i32 0, i32 9
  %5302 = getelementptr inbounds %struct.Reg, %struct.Reg* %5301, i32 0, i32 0
  %RSI.i1087 = bitcast %union.anon* %5302 to i64*
  %5303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5304 = getelementptr inbounds %struct.GPR, %struct.GPR* %5303, i32 0, i32 15
  %5305 = getelementptr inbounds %struct.Reg, %struct.Reg* %5304, i32 0, i32 0
  %RBP.i1088 = bitcast %union.anon* %5305 to i64*
  %5306 = load i64, i64* %RBP.i1088
  %5307 = sub i64 %5306, 76
  %5308 = load i64, i64* %PC.i1086
  %5309 = add i64 %5308, 4
  store i64 %5309, i64* %PC.i1086
  %5310 = inttoptr i64 %5307 to i32*
  %5311 = load i32, i32* %5310
  %5312 = sext i32 %5311 to i64
  store i64 %5312, i64* %RSI.i1087, align 8
  store %struct.Memory* %loadMem_41b190, %struct.Memory** %MEMORY
  %loadMem_41b194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5314 = getelementptr inbounds %struct.GPR, %struct.GPR* %5313, i32 0, i32 33
  %5315 = getelementptr inbounds %struct.Reg, %struct.Reg* %5314, i32 0, i32 0
  %PC.i1084 = bitcast %union.anon* %5315 to i64*
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5317 = getelementptr inbounds %struct.GPR, %struct.GPR* %5316, i32 0, i32 9
  %5318 = getelementptr inbounds %struct.Reg, %struct.Reg* %5317, i32 0, i32 0
  %RSI.i1085 = bitcast %union.anon* %5318 to i64*
  %5319 = load i64, i64* %RSI.i1085
  %5320 = mul i64 %5319, 4
  %5321 = add i64 %5320, 6481200
  %5322 = load i64, i64* %PC.i1084
  %5323 = add i64 %5322, 11
  store i64 %5323, i64* %PC.i1084
  %5324 = inttoptr i64 %5321 to i32*
  store i32 0, i32* %5324
  store %struct.Memory* %loadMem_41b194, %struct.Memory** %MEMORY
  %loadMem_41b19f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5326 = getelementptr inbounds %struct.GPR, %struct.GPR* %5325, i32 0, i32 33
  %5327 = getelementptr inbounds %struct.Reg, %struct.Reg* %5326, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %5327 to i64*
  %5328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5329 = getelementptr inbounds %struct.GPR, %struct.GPR* %5328, i32 0, i32 9
  %5330 = getelementptr inbounds %struct.Reg, %struct.Reg* %5329, i32 0, i32 0
  %RSI.i1082 = bitcast %union.anon* %5330 to i64*
  %5331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5332 = getelementptr inbounds %struct.GPR, %struct.GPR* %5331, i32 0, i32 15
  %5333 = getelementptr inbounds %struct.Reg, %struct.Reg* %5332, i32 0, i32 0
  %RBP.i1083 = bitcast %union.anon* %5333 to i64*
  %5334 = load i64, i64* %RBP.i1083
  %5335 = sub i64 %5334, 76
  %5336 = load i64, i64* %PC.i1081
  %5337 = add i64 %5336, 4
  store i64 %5337, i64* %PC.i1081
  %5338 = inttoptr i64 %5335 to i32*
  %5339 = load i32, i32* %5338
  %5340 = sext i32 %5339 to i64
  store i64 %5340, i64* %RSI.i1082, align 8
  store %struct.Memory* %loadMem_41b19f, %struct.Memory** %MEMORY
  %loadMem_41b1a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5342 = getelementptr inbounds %struct.GPR, %struct.GPR* %5341, i32 0, i32 33
  %5343 = getelementptr inbounds %struct.Reg, %struct.Reg* %5342, i32 0, i32 0
  %PC.i1079 = bitcast %union.anon* %5343 to i64*
  %5344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5345 = getelementptr inbounds %struct.GPR, %struct.GPR* %5344, i32 0, i32 9
  %5346 = getelementptr inbounds %struct.Reg, %struct.Reg* %5345, i32 0, i32 0
  %RSI.i1080 = bitcast %union.anon* %5346 to i64*
  %5347 = load i64, i64* %RSI.i1080
  %5348 = mul i64 %5347, 4
  %5349 = add i64 %5348, 6524000
  %5350 = load i64, i64* %PC.i1079
  %5351 = add i64 %5350, 11
  store i64 %5351, i64* %PC.i1079
  %5352 = inttoptr i64 %5349 to i32*
  store i32 0, i32* %5352
  store %struct.Memory* %loadMem_41b1a3, %struct.Memory** %MEMORY
  %loadMem_41b1ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %5353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5354 = getelementptr inbounds %struct.GPR, %struct.GPR* %5353, i32 0, i32 33
  %5355 = getelementptr inbounds %struct.Reg, %struct.Reg* %5354, i32 0, i32 0
  %PC.i1076 = bitcast %union.anon* %5355 to i64*
  %5356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5357 = getelementptr inbounds %struct.GPR, %struct.GPR* %5356, i32 0, i32 9
  %5358 = getelementptr inbounds %struct.Reg, %struct.Reg* %5357, i32 0, i32 0
  %RSI.i1077 = bitcast %union.anon* %5358 to i64*
  %5359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5360 = getelementptr inbounds %struct.GPR, %struct.GPR* %5359, i32 0, i32 15
  %5361 = getelementptr inbounds %struct.Reg, %struct.Reg* %5360, i32 0, i32 0
  %RBP.i1078 = bitcast %union.anon* %5361 to i64*
  %5362 = load i64, i64* %RBP.i1078
  %5363 = sub i64 %5362, 76
  %5364 = load i64, i64* %PC.i1076
  %5365 = add i64 %5364, 4
  store i64 %5365, i64* %PC.i1076
  %5366 = inttoptr i64 %5363 to i32*
  %5367 = load i32, i32* %5366
  %5368 = sext i32 %5367 to i64
  store i64 %5368, i64* %RSI.i1077, align 8
  store %struct.Memory* %loadMem_41b1ae, %struct.Memory** %MEMORY
  %loadMem_41b1b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5370 = getelementptr inbounds %struct.GPR, %struct.GPR* %5369, i32 0, i32 33
  %5371 = getelementptr inbounds %struct.Reg, %struct.Reg* %5370, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %5371 to i64*
  %5372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5373 = getelementptr inbounds %struct.GPR, %struct.GPR* %5372, i32 0, i32 9
  %5374 = getelementptr inbounds %struct.Reg, %struct.Reg* %5373, i32 0, i32 0
  %RSI.i1075 = bitcast %union.anon* %5374 to i64*
  %5375 = load i64, i64* %RSI.i1075
  %5376 = mul i64 %5375, 4
  %5377 = add i64 %5376, 8920576
  %5378 = load i64, i64* %PC.i1074
  %5379 = add i64 %5378, 11
  store i64 %5379, i64* %PC.i1074
  %5380 = inttoptr i64 %5377 to i32*
  store i32 0, i32* %5380
  store %struct.Memory* %loadMem_41b1b2, %struct.Memory** %MEMORY
  %loadMem_41b1bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %5381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5382 = getelementptr inbounds %struct.GPR, %struct.GPR* %5381, i32 0, i32 33
  %5383 = getelementptr inbounds %struct.Reg, %struct.Reg* %5382, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %5383 to i64*
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5385 = getelementptr inbounds %struct.GPR, %struct.GPR* %5384, i32 0, i32 9
  %5386 = getelementptr inbounds %struct.Reg, %struct.Reg* %5385, i32 0, i32 0
  %RSI.i1072 = bitcast %union.anon* %5386 to i64*
  %5387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5388 = getelementptr inbounds %struct.GPR, %struct.GPR* %5387, i32 0, i32 15
  %5389 = getelementptr inbounds %struct.Reg, %struct.Reg* %5388, i32 0, i32 0
  %RBP.i1073 = bitcast %union.anon* %5389 to i64*
  %5390 = load i64, i64* %RBP.i1073
  %5391 = sub i64 %5390, 76
  %5392 = load i64, i64* %PC.i1071
  %5393 = add i64 %5392, 4
  store i64 %5393, i64* %PC.i1071
  %5394 = inttoptr i64 %5391 to i32*
  %5395 = load i32, i32* %5394
  %5396 = sext i32 %5395 to i64
  store i64 %5396, i64* %RSI.i1072, align 8
  store %struct.Memory* %loadMem_41b1bd, %struct.Memory** %MEMORY
  %loadMem_41b1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5398 = getelementptr inbounds %struct.GPR, %struct.GPR* %5397, i32 0, i32 33
  %5399 = getelementptr inbounds %struct.Reg, %struct.Reg* %5398, i32 0, i32 0
  %PC.i1069 = bitcast %union.anon* %5399 to i64*
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5401 = getelementptr inbounds %struct.GPR, %struct.GPR* %5400, i32 0, i32 9
  %5402 = getelementptr inbounds %struct.Reg, %struct.Reg* %5401, i32 0, i32 0
  %RSI.i1070 = bitcast %union.anon* %5402 to i64*
  %5403 = load i64, i64* %RSI.i1070
  %5404 = load i64, i64* %PC.i1069
  %5405 = add i64 %5404, 4
  store i64 %5405, i64* %PC.i1069
  %5406 = sext i64 %5403 to i128
  %5407 = and i128 %5406, -18446744073709551616
  %5408 = zext i64 %5403 to i128
  %5409 = or i128 %5407, %5408
  %5410 = mul i128 24, %5409
  %5411 = trunc i128 %5410 to i64
  store i64 %5411, i64* %RSI.i1070, align 8
  %5412 = sext i64 %5411 to i128
  %5413 = icmp ne i128 %5412, %5410
  %5414 = zext i1 %5413 to i8
  %5415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5414, i8* %5415, align 1
  %5416 = trunc i128 %5410 to i32
  %5417 = and i32 %5416, 255
  %5418 = call i32 @llvm.ctpop.i32(i32 %5417)
  %5419 = trunc i32 %5418 to i8
  %5420 = and i8 %5419, 1
  %5421 = xor i8 %5420, 1
  %5422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5421, i8* %5422, align 1
  %5423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5423, align 1
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5424, align 1
  %5425 = lshr i64 %5411, 63
  %5426 = trunc i64 %5425 to i8
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5426, i8* %5427, align 1
  %5428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5414, i8* %5428, align 1
  store %struct.Memory* %loadMem_41b1c1, %struct.Memory** %MEMORY
  %loadMem_41b1c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5430 = getelementptr inbounds %struct.GPR, %struct.GPR* %5429, i32 0, i32 33
  %5431 = getelementptr inbounds %struct.Reg, %struct.Reg* %5430, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %5431 to i64*
  %5432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5433 = getelementptr inbounds %struct.GPR, %struct.GPR* %5432, i32 0, i32 7
  %5434 = getelementptr inbounds %struct.Reg, %struct.Reg* %5433, i32 0, i32 0
  %RDX.i1067 = bitcast %union.anon* %5434 to i64*
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5436 = getelementptr inbounds %struct.GPR, %struct.GPR* %5435, i32 0, i32 9
  %5437 = getelementptr inbounds %struct.Reg, %struct.Reg* %5436, i32 0, i32 0
  %RSI.i1068 = bitcast %union.anon* %5437 to i64*
  %5438 = load i64, i64* %RDX.i1067
  %5439 = load i64, i64* %RSI.i1068
  %5440 = load i64, i64* %PC.i1066
  %5441 = add i64 %5440, 3
  store i64 %5441, i64* %PC.i1066
  %5442 = add i64 %5439, %5438
  store i64 %5442, i64* %RDX.i1067, align 8
  %5443 = icmp ult i64 %5442, %5438
  %5444 = icmp ult i64 %5442, %5439
  %5445 = or i1 %5443, %5444
  %5446 = zext i1 %5445 to i8
  %5447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5446, i8* %5447, align 1
  %5448 = trunc i64 %5442 to i32
  %5449 = and i32 %5448, 255
  %5450 = call i32 @llvm.ctpop.i32(i32 %5449)
  %5451 = trunc i32 %5450 to i8
  %5452 = and i8 %5451, 1
  %5453 = xor i8 %5452, 1
  %5454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5453, i8* %5454, align 1
  %5455 = xor i64 %5439, %5438
  %5456 = xor i64 %5455, %5442
  %5457 = lshr i64 %5456, 4
  %5458 = trunc i64 %5457 to i8
  %5459 = and i8 %5458, 1
  %5460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5459, i8* %5460, align 1
  %5461 = icmp eq i64 %5442, 0
  %5462 = zext i1 %5461 to i8
  %5463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5462, i8* %5463, align 1
  %5464 = lshr i64 %5442, 63
  %5465 = trunc i64 %5464 to i8
  %5466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5465, i8* %5466, align 1
  %5467 = lshr i64 %5438, 63
  %5468 = lshr i64 %5439, 63
  %5469 = xor i64 %5464, %5467
  %5470 = xor i64 %5464, %5468
  %5471 = add i64 %5469, %5470
  %5472 = icmp eq i64 %5471, 2
  %5473 = zext i1 %5472 to i8
  %5474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5473, i8* %5474, align 1
  store %struct.Memory* %loadMem_41b1c5, %struct.Memory** %MEMORY
  %loadMem_41b1c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5476 = getelementptr inbounds %struct.GPR, %struct.GPR* %5475, i32 0, i32 33
  %5477 = getelementptr inbounds %struct.Reg, %struct.Reg* %5476, i32 0, i32 0
  %PC.i1064 = bitcast %union.anon* %5477 to i64*
  %5478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5479 = getelementptr inbounds %struct.GPR, %struct.GPR* %5478, i32 0, i32 9
  %5480 = getelementptr inbounds %struct.Reg, %struct.Reg* %5479, i32 0, i32 0
  %RSI.i1065 = bitcast %union.anon* %5480 to i64*
  %5481 = load i64, i64* %PC.i1064
  %5482 = add i64 %5481, 8
  store i64 %5482, i64* %PC.i1064
  %5483 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %5483, i64* %RSI.i1065, align 8
  store %struct.Memory* %loadMem_41b1c8, %struct.Memory** %MEMORY
  %loadMem_41b1d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5485 = getelementptr inbounds %struct.GPR, %struct.GPR* %5484, i32 0, i32 33
  %5486 = getelementptr inbounds %struct.Reg, %struct.Reg* %5485, i32 0, i32 0
  %PC.i1061 = bitcast %union.anon* %5486 to i64*
  %5487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5488 = getelementptr inbounds %struct.GPR, %struct.GPR* %5487, i32 0, i32 7
  %5489 = getelementptr inbounds %struct.Reg, %struct.Reg* %5488, i32 0, i32 0
  %RDX.i1062 = bitcast %union.anon* %5489 to i64*
  %5490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5491 = getelementptr inbounds %struct.GPR, %struct.GPR* %5490, i32 0, i32 9
  %5492 = getelementptr inbounds %struct.Reg, %struct.Reg* %5491, i32 0, i32 0
  %RSI.i1063 = bitcast %union.anon* %5492 to i64*
  %5493 = load i64, i64* %RDX.i1062
  %5494 = load i64, i64* %RSI.i1063
  %5495 = load i64, i64* %PC.i1061
  %5496 = add i64 %5495, 3
  store i64 %5496, i64* %PC.i1061
  %5497 = inttoptr i64 %5493 to i64*
  store i64 %5494, i64* %5497
  store %struct.Memory* %loadMem_41b1d0, %struct.Memory** %MEMORY
  %loadMem_41b1d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5499 = getelementptr inbounds %struct.GPR, %struct.GPR* %5498, i32 0, i32 33
  %5500 = getelementptr inbounds %struct.Reg, %struct.Reg* %5499, i32 0, i32 0
  %PC.i1059 = bitcast %union.anon* %5500 to i64*
  %5501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5502 = getelementptr inbounds %struct.GPR, %struct.GPR* %5501, i32 0, i32 9
  %5503 = getelementptr inbounds %struct.Reg, %struct.Reg* %5502, i32 0, i32 0
  %RSI.i1060 = bitcast %union.anon* %5503 to i64*
  %5504 = load i64, i64* %PC.i1059
  %5505 = add i64 %5504, 8
  store i64 %5505, i64* %PC.i1059
  %5506 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %5506, i64* %RSI.i1060, align 8
  store %struct.Memory* %loadMem_41b1d3, %struct.Memory** %MEMORY
  %loadMem_41b1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %5507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5508 = getelementptr inbounds %struct.GPR, %struct.GPR* %5507, i32 0, i32 33
  %5509 = getelementptr inbounds %struct.Reg, %struct.Reg* %5508, i32 0, i32 0
  %PC.i1056 = bitcast %union.anon* %5509 to i64*
  %5510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5511 = getelementptr inbounds %struct.GPR, %struct.GPR* %5510, i32 0, i32 7
  %5512 = getelementptr inbounds %struct.Reg, %struct.Reg* %5511, i32 0, i32 0
  %RDX.i1057 = bitcast %union.anon* %5512 to i64*
  %5513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5514 = getelementptr inbounds %struct.GPR, %struct.GPR* %5513, i32 0, i32 9
  %5515 = getelementptr inbounds %struct.Reg, %struct.Reg* %5514, i32 0, i32 0
  %RSI.i1058 = bitcast %union.anon* %5515 to i64*
  %5516 = load i64, i64* %RDX.i1057
  %5517 = add i64 %5516, 8
  %5518 = load i64, i64* %RSI.i1058
  %5519 = load i64, i64* %PC.i1056
  %5520 = add i64 %5519, 4
  store i64 %5520, i64* %PC.i1056
  %5521 = inttoptr i64 %5517 to i64*
  store i64 %5518, i64* %5521
  store %struct.Memory* %loadMem_41b1db, %struct.Memory** %MEMORY
  %loadMem_41b1df = load %struct.Memory*, %struct.Memory** %MEMORY
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5523 = getelementptr inbounds %struct.GPR, %struct.GPR* %5522, i32 0, i32 33
  %5524 = getelementptr inbounds %struct.Reg, %struct.Reg* %5523, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %5524 to i64*
  %5525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5526 = getelementptr inbounds %struct.GPR, %struct.GPR* %5525, i32 0, i32 9
  %5527 = getelementptr inbounds %struct.Reg, %struct.Reg* %5526, i32 0, i32 0
  %RSI.i1055 = bitcast %union.anon* %5527 to i64*
  %5528 = load i64, i64* %PC.i1054
  %5529 = add i64 %5528, 8
  store i64 %5529, i64* %PC.i1054
  %5530 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %5530, i64* %RSI.i1055, align 8
  store %struct.Memory* %loadMem_41b1df, %struct.Memory** %MEMORY
  %loadMem_41b1e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5532 = getelementptr inbounds %struct.GPR, %struct.GPR* %5531, i32 0, i32 33
  %5533 = getelementptr inbounds %struct.Reg, %struct.Reg* %5532, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %5533 to i64*
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5535 = getelementptr inbounds %struct.GPR, %struct.GPR* %5534, i32 0, i32 7
  %5536 = getelementptr inbounds %struct.Reg, %struct.Reg* %5535, i32 0, i32 0
  %RDX.i1052 = bitcast %union.anon* %5536 to i64*
  %5537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5538 = getelementptr inbounds %struct.GPR, %struct.GPR* %5537, i32 0, i32 9
  %5539 = getelementptr inbounds %struct.Reg, %struct.Reg* %5538, i32 0, i32 0
  %RSI.i1053 = bitcast %union.anon* %5539 to i64*
  %5540 = load i64, i64* %RDX.i1052
  %5541 = add i64 %5540, 16
  %5542 = load i64, i64* %RSI.i1053
  %5543 = load i64, i64* %PC.i1051
  %5544 = add i64 %5543, 4
  store i64 %5544, i64* %PC.i1051
  %5545 = inttoptr i64 %5541 to i64*
  store i64 %5542, i64* %5545
  store %struct.Memory* %loadMem_41b1e7, %struct.Memory** %MEMORY
  %loadMem_41b1eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5547 = getelementptr inbounds %struct.GPR, %struct.GPR* %5546, i32 0, i32 33
  %5548 = getelementptr inbounds %struct.Reg, %struct.Reg* %5547, i32 0, i32 0
  %PC.i1048 = bitcast %union.anon* %5548 to i64*
  %5549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5550 = getelementptr inbounds %struct.GPR, %struct.GPR* %5549, i32 0, i32 7
  %5551 = getelementptr inbounds %struct.Reg, %struct.Reg* %5550, i32 0, i32 0
  %RDX.i1049 = bitcast %union.anon* %5551 to i64*
  %5552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5553 = getelementptr inbounds %struct.GPR, %struct.GPR* %5552, i32 0, i32 15
  %5554 = getelementptr inbounds %struct.Reg, %struct.Reg* %5553, i32 0, i32 0
  %RBP.i1050 = bitcast %union.anon* %5554 to i64*
  %5555 = load i64, i64* %RBP.i1050
  %5556 = sub i64 %5555, 76
  %5557 = load i64, i64* %PC.i1048
  %5558 = add i64 %5557, 4
  store i64 %5558, i64* %PC.i1048
  %5559 = inttoptr i64 %5556 to i32*
  %5560 = load i32, i32* %5559
  %5561 = sext i32 %5560 to i64
  store i64 %5561, i64* %RDX.i1049, align 8
  store %struct.Memory* %loadMem_41b1eb, %struct.Memory** %MEMORY
  %loadMem_41b1ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %5562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5563 = getelementptr inbounds %struct.GPR, %struct.GPR* %5562, i32 0, i32 33
  %5564 = getelementptr inbounds %struct.Reg, %struct.Reg* %5563, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %5564 to i64*
  %5565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5566 = getelementptr inbounds %struct.GPR, %struct.GPR* %5565, i32 0, i32 7
  %5567 = getelementptr inbounds %struct.Reg, %struct.Reg* %5566, i32 0, i32 0
  %RDX.i1047 = bitcast %union.anon* %5567 to i64*
  %5568 = load i64, i64* %RDX.i1047
  %5569 = load i64, i64* %PC.i1046
  %5570 = add i64 %5569, 4
  store i64 %5570, i64* %PC.i1046
  %5571 = sext i64 %5568 to i128
  %5572 = and i128 %5571, -18446744073709551616
  %5573 = zext i64 %5568 to i128
  %5574 = or i128 %5572, %5573
  %5575 = mul i128 24, %5574
  %5576 = trunc i128 %5575 to i64
  store i64 %5576, i64* %RDX.i1047, align 8
  %5577 = sext i64 %5576 to i128
  %5578 = icmp ne i128 %5577, %5575
  %5579 = zext i1 %5578 to i8
  %5580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5579, i8* %5580, align 1
  %5581 = trunc i128 %5575 to i32
  %5582 = and i32 %5581, 255
  %5583 = call i32 @llvm.ctpop.i32(i32 %5582)
  %5584 = trunc i32 %5583 to i8
  %5585 = and i8 %5584, 1
  %5586 = xor i8 %5585, 1
  %5587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5586, i8* %5587, align 1
  %5588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5588, align 1
  %5589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5589, align 1
  %5590 = lshr i64 %5576, 63
  %5591 = trunc i64 %5590 to i8
  %5592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5591, i8* %5592, align 1
  %5593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5579, i8* %5593, align 1
  store %struct.Memory* %loadMem_41b1ef, %struct.Memory** %MEMORY
  %loadMem_41b1f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5595 = getelementptr inbounds %struct.GPR, %struct.GPR* %5594, i32 0, i32 33
  %5596 = getelementptr inbounds %struct.Reg, %struct.Reg* %5595, i32 0, i32 0
  %PC.i1043 = bitcast %union.anon* %5596 to i64*
  %5597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5598 = getelementptr inbounds %struct.GPR, %struct.GPR* %5597, i32 0, i32 5
  %5599 = getelementptr inbounds %struct.Reg, %struct.Reg* %5598, i32 0, i32 0
  %RCX.i1044 = bitcast %union.anon* %5599 to i64*
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5601 = getelementptr inbounds %struct.GPR, %struct.GPR* %5600, i32 0, i32 7
  %5602 = getelementptr inbounds %struct.Reg, %struct.Reg* %5601, i32 0, i32 0
  %RDX.i1045 = bitcast %union.anon* %5602 to i64*
  %5603 = load i64, i64* %RCX.i1044
  %5604 = load i64, i64* %RDX.i1045
  %5605 = load i64, i64* %PC.i1043
  %5606 = add i64 %5605, 3
  store i64 %5606, i64* %PC.i1043
  %5607 = add i64 %5604, %5603
  store i64 %5607, i64* %RCX.i1044, align 8
  %5608 = icmp ult i64 %5607, %5603
  %5609 = icmp ult i64 %5607, %5604
  %5610 = or i1 %5608, %5609
  %5611 = zext i1 %5610 to i8
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5611, i8* %5612, align 1
  %5613 = trunc i64 %5607 to i32
  %5614 = and i32 %5613, 255
  %5615 = call i32 @llvm.ctpop.i32(i32 %5614)
  %5616 = trunc i32 %5615 to i8
  %5617 = and i8 %5616, 1
  %5618 = xor i8 %5617, 1
  %5619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5618, i8* %5619, align 1
  %5620 = xor i64 %5604, %5603
  %5621 = xor i64 %5620, %5607
  %5622 = lshr i64 %5621, 4
  %5623 = trunc i64 %5622 to i8
  %5624 = and i8 %5623, 1
  %5625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5624, i8* %5625, align 1
  %5626 = icmp eq i64 %5607, 0
  %5627 = zext i1 %5626 to i8
  %5628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5627, i8* %5628, align 1
  %5629 = lshr i64 %5607, 63
  %5630 = trunc i64 %5629 to i8
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5630, i8* %5631, align 1
  %5632 = lshr i64 %5603, 63
  %5633 = lshr i64 %5604, 63
  %5634 = xor i64 %5629, %5632
  %5635 = xor i64 %5629, %5633
  %5636 = add i64 %5634, %5635
  %5637 = icmp eq i64 %5636, 2
  %5638 = zext i1 %5637 to i8
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5638, i8* %5639, align 1
  store %struct.Memory* %loadMem_41b1f3, %struct.Memory** %MEMORY
  %loadMem_41b1f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5641 = getelementptr inbounds %struct.GPR, %struct.GPR* %5640, i32 0, i32 33
  %5642 = getelementptr inbounds %struct.Reg, %struct.Reg* %5641, i32 0, i32 0
  %PC.i1041 = bitcast %union.anon* %5642 to i64*
  %5643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5644 = getelementptr inbounds %struct.GPR, %struct.GPR* %5643, i32 0, i32 7
  %5645 = getelementptr inbounds %struct.Reg, %struct.Reg* %5644, i32 0, i32 0
  %RDX.i1042 = bitcast %union.anon* %5645 to i64*
  %5646 = load i64, i64* %PC.i1041
  %5647 = add i64 %5646, 8
  store i64 %5647, i64* %PC.i1041
  %5648 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %5648, i64* %RDX.i1042, align 8
  store %struct.Memory* %loadMem_41b1f6, %struct.Memory** %MEMORY
  %loadMem_41b1fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %5649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5650 = getelementptr inbounds %struct.GPR, %struct.GPR* %5649, i32 0, i32 33
  %5651 = getelementptr inbounds %struct.Reg, %struct.Reg* %5650, i32 0, i32 0
  %PC.i1038 = bitcast %union.anon* %5651 to i64*
  %5652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5653 = getelementptr inbounds %struct.GPR, %struct.GPR* %5652, i32 0, i32 5
  %5654 = getelementptr inbounds %struct.Reg, %struct.Reg* %5653, i32 0, i32 0
  %RCX.i1039 = bitcast %union.anon* %5654 to i64*
  %5655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5656 = getelementptr inbounds %struct.GPR, %struct.GPR* %5655, i32 0, i32 7
  %5657 = getelementptr inbounds %struct.Reg, %struct.Reg* %5656, i32 0, i32 0
  %RDX.i1040 = bitcast %union.anon* %5657 to i64*
  %5658 = load i64, i64* %RCX.i1039
  %5659 = load i64, i64* %RDX.i1040
  %5660 = load i64, i64* %PC.i1038
  %5661 = add i64 %5660, 3
  store i64 %5661, i64* %PC.i1038
  %5662 = inttoptr i64 %5658 to i64*
  store i64 %5659, i64* %5662
  store %struct.Memory* %loadMem_41b1fe, %struct.Memory** %MEMORY
  %loadMem_41b201 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5664 = getelementptr inbounds %struct.GPR, %struct.GPR* %5663, i32 0, i32 33
  %5665 = getelementptr inbounds %struct.Reg, %struct.Reg* %5664, i32 0, i32 0
  %PC.i1036 = bitcast %union.anon* %5665 to i64*
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5667 = getelementptr inbounds %struct.GPR, %struct.GPR* %5666, i32 0, i32 7
  %5668 = getelementptr inbounds %struct.Reg, %struct.Reg* %5667, i32 0, i32 0
  %RDX.i1037 = bitcast %union.anon* %5668 to i64*
  %5669 = load i64, i64* %PC.i1036
  %5670 = add i64 %5669, 8
  store i64 %5670, i64* %PC.i1036
  %5671 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %5671, i64* %RDX.i1037, align 8
  store %struct.Memory* %loadMem_41b201, %struct.Memory** %MEMORY
  %loadMem_41b209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5673 = getelementptr inbounds %struct.GPR, %struct.GPR* %5672, i32 0, i32 33
  %5674 = getelementptr inbounds %struct.Reg, %struct.Reg* %5673, i32 0, i32 0
  %PC.i1033 = bitcast %union.anon* %5674 to i64*
  %5675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5676 = getelementptr inbounds %struct.GPR, %struct.GPR* %5675, i32 0, i32 5
  %5677 = getelementptr inbounds %struct.Reg, %struct.Reg* %5676, i32 0, i32 0
  %RCX.i1034 = bitcast %union.anon* %5677 to i64*
  %5678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5679 = getelementptr inbounds %struct.GPR, %struct.GPR* %5678, i32 0, i32 7
  %5680 = getelementptr inbounds %struct.Reg, %struct.Reg* %5679, i32 0, i32 0
  %RDX.i1035 = bitcast %union.anon* %5680 to i64*
  %5681 = load i64, i64* %RCX.i1034
  %5682 = add i64 %5681, 8
  %5683 = load i64, i64* %RDX.i1035
  %5684 = load i64, i64* %PC.i1033
  %5685 = add i64 %5684, 4
  store i64 %5685, i64* %PC.i1033
  %5686 = inttoptr i64 %5682 to i64*
  store i64 %5683, i64* %5686
  store %struct.Memory* %loadMem_41b209, %struct.Memory** %MEMORY
  %loadMem_41b20d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5688 = getelementptr inbounds %struct.GPR, %struct.GPR* %5687, i32 0, i32 33
  %5689 = getelementptr inbounds %struct.Reg, %struct.Reg* %5688, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %5689 to i64*
  %5690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5691 = getelementptr inbounds %struct.GPR, %struct.GPR* %5690, i32 0, i32 7
  %5692 = getelementptr inbounds %struct.Reg, %struct.Reg* %5691, i32 0, i32 0
  %RDX.i1032 = bitcast %union.anon* %5692 to i64*
  %5693 = load i64, i64* %PC.i1031
  %5694 = add i64 %5693, 8
  store i64 %5694, i64* %PC.i1031
  %5695 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %5695, i64* %RDX.i1032, align 8
  store %struct.Memory* %loadMem_41b20d, %struct.Memory** %MEMORY
  %loadMem_41b215 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5697 = getelementptr inbounds %struct.GPR, %struct.GPR* %5696, i32 0, i32 33
  %5698 = getelementptr inbounds %struct.Reg, %struct.Reg* %5697, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %5698 to i64*
  %5699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5700 = getelementptr inbounds %struct.GPR, %struct.GPR* %5699, i32 0, i32 5
  %5701 = getelementptr inbounds %struct.Reg, %struct.Reg* %5700, i32 0, i32 0
  %RCX.i1029 = bitcast %union.anon* %5701 to i64*
  %5702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5703 = getelementptr inbounds %struct.GPR, %struct.GPR* %5702, i32 0, i32 7
  %5704 = getelementptr inbounds %struct.Reg, %struct.Reg* %5703, i32 0, i32 0
  %RDX.i1030 = bitcast %union.anon* %5704 to i64*
  %5705 = load i64, i64* %RCX.i1029
  %5706 = add i64 %5705, 16
  %5707 = load i64, i64* %RDX.i1030
  %5708 = load i64, i64* %PC.i1028
  %5709 = add i64 %5708, 4
  store i64 %5709, i64* %PC.i1028
  %5710 = inttoptr i64 %5706 to i64*
  store i64 %5707, i64* %5710
  store %struct.Memory* %loadMem_41b215, %struct.Memory** %MEMORY
  %loadMem_41b219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5712 = getelementptr inbounds %struct.GPR, %struct.GPR* %5711, i32 0, i32 33
  %5713 = getelementptr inbounds %struct.Reg, %struct.Reg* %5712, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %5713 to i64*
  %5714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5715 = getelementptr inbounds %struct.GPR, %struct.GPR* %5714, i32 0, i32 5
  %5716 = getelementptr inbounds %struct.Reg, %struct.Reg* %5715, i32 0, i32 0
  %RCX.i1026 = bitcast %union.anon* %5716 to i64*
  %5717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5718 = getelementptr inbounds %struct.GPR, %struct.GPR* %5717, i32 0, i32 15
  %5719 = getelementptr inbounds %struct.Reg, %struct.Reg* %5718, i32 0, i32 0
  %RBP.i1027 = bitcast %union.anon* %5719 to i64*
  %5720 = load i64, i64* %RBP.i1027
  %5721 = sub i64 %5720, 76
  %5722 = load i64, i64* %PC.i1025
  %5723 = add i64 %5722, 4
  store i64 %5723, i64* %PC.i1025
  %5724 = inttoptr i64 %5721 to i32*
  %5725 = load i32, i32* %5724
  %5726 = sext i32 %5725 to i64
  store i64 %5726, i64* %RCX.i1026, align 8
  store %struct.Memory* %loadMem_41b219, %struct.Memory** %MEMORY
  %loadMem_41b21d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5728 = getelementptr inbounds %struct.GPR, %struct.GPR* %5727, i32 0, i32 33
  %5729 = getelementptr inbounds %struct.Reg, %struct.Reg* %5728, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %5729 to i64*
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5731 = getelementptr inbounds %struct.GPR, %struct.GPR* %5730, i32 0, i32 5
  %5732 = getelementptr inbounds %struct.Reg, %struct.Reg* %5731, i32 0, i32 0
  %RCX.i1024 = bitcast %union.anon* %5732 to i64*
  %5733 = load i64, i64* %RCX.i1024
  %5734 = load i64, i64* %PC.i1023
  %5735 = add i64 %5734, 4
  store i64 %5735, i64* %PC.i1023
  %5736 = sext i64 %5733 to i128
  %5737 = and i128 %5736, -18446744073709551616
  %5738 = zext i64 %5733 to i128
  %5739 = or i128 %5737, %5738
  %5740 = mul i128 24, %5739
  %5741 = trunc i128 %5740 to i64
  store i64 %5741, i64* %RCX.i1024, align 8
  %5742 = sext i64 %5741 to i128
  %5743 = icmp ne i128 %5742, %5740
  %5744 = zext i1 %5743 to i8
  %5745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5744, i8* %5745, align 1
  %5746 = trunc i128 %5740 to i32
  %5747 = and i32 %5746, 255
  %5748 = call i32 @llvm.ctpop.i32(i32 %5747)
  %5749 = trunc i32 %5748 to i8
  %5750 = and i8 %5749, 1
  %5751 = xor i8 %5750, 1
  %5752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5751, i8* %5752, align 1
  %5753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5753, align 1
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5754, align 1
  %5755 = lshr i64 %5741, 63
  %5756 = trunc i64 %5755 to i8
  %5757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5756, i8* %5757, align 1
  %5758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5744, i8* %5758, align 1
  store %struct.Memory* %loadMem_41b21d, %struct.Memory** %MEMORY
  %loadMem_41b221 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5760 = getelementptr inbounds %struct.GPR, %struct.GPR* %5759, i32 0, i32 33
  %5761 = getelementptr inbounds %struct.Reg, %struct.Reg* %5760, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %5761 to i64*
  %5762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5763 = getelementptr inbounds %struct.GPR, %struct.GPR* %5762, i32 0, i32 1
  %5764 = getelementptr inbounds %struct.Reg, %struct.Reg* %5763, i32 0, i32 0
  %RAX.i1021 = bitcast %union.anon* %5764 to i64*
  %5765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5766 = getelementptr inbounds %struct.GPR, %struct.GPR* %5765, i32 0, i32 5
  %5767 = getelementptr inbounds %struct.Reg, %struct.Reg* %5766, i32 0, i32 0
  %RCX.i1022 = bitcast %union.anon* %5767 to i64*
  %5768 = load i64, i64* %RAX.i1021
  %5769 = load i64, i64* %RCX.i1022
  %5770 = load i64, i64* %PC.i1020
  %5771 = add i64 %5770, 3
  store i64 %5771, i64* %PC.i1020
  %5772 = add i64 %5769, %5768
  store i64 %5772, i64* %RAX.i1021, align 8
  %5773 = icmp ult i64 %5772, %5768
  %5774 = icmp ult i64 %5772, %5769
  %5775 = or i1 %5773, %5774
  %5776 = zext i1 %5775 to i8
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5776, i8* %5777, align 1
  %5778 = trunc i64 %5772 to i32
  %5779 = and i32 %5778, 255
  %5780 = call i32 @llvm.ctpop.i32(i32 %5779)
  %5781 = trunc i32 %5780 to i8
  %5782 = and i8 %5781, 1
  %5783 = xor i8 %5782, 1
  %5784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5783, i8* %5784, align 1
  %5785 = xor i64 %5769, %5768
  %5786 = xor i64 %5785, %5772
  %5787 = lshr i64 %5786, 4
  %5788 = trunc i64 %5787 to i8
  %5789 = and i8 %5788, 1
  %5790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5789, i8* %5790, align 1
  %5791 = icmp eq i64 %5772, 0
  %5792 = zext i1 %5791 to i8
  %5793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5792, i8* %5793, align 1
  %5794 = lshr i64 %5772, 63
  %5795 = trunc i64 %5794 to i8
  %5796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5795, i8* %5796, align 1
  %5797 = lshr i64 %5768, 63
  %5798 = lshr i64 %5769, 63
  %5799 = xor i64 %5794, %5797
  %5800 = xor i64 %5794, %5798
  %5801 = add i64 %5799, %5800
  %5802 = icmp eq i64 %5801, 2
  %5803 = zext i1 %5802 to i8
  %5804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5803, i8* %5804, align 1
  store %struct.Memory* %loadMem_41b221, %struct.Memory** %MEMORY
  %loadMem_41b224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5806 = getelementptr inbounds %struct.GPR, %struct.GPR* %5805, i32 0, i32 33
  %5807 = getelementptr inbounds %struct.Reg, %struct.Reg* %5806, i32 0, i32 0
  %PC.i1018 = bitcast %union.anon* %5807 to i64*
  %5808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5809 = getelementptr inbounds %struct.GPR, %struct.GPR* %5808, i32 0, i32 5
  %5810 = getelementptr inbounds %struct.Reg, %struct.Reg* %5809, i32 0, i32 0
  %RCX.i1019 = bitcast %union.anon* %5810 to i64*
  %5811 = load i64, i64* %PC.i1018
  %5812 = add i64 %5811, 8
  store i64 %5812, i64* %PC.i1018
  %5813 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %5813, i64* %RCX.i1019, align 8
  store %struct.Memory* %loadMem_41b224, %struct.Memory** %MEMORY
  %loadMem_41b22c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5815 = getelementptr inbounds %struct.GPR, %struct.GPR* %5814, i32 0, i32 33
  %5816 = getelementptr inbounds %struct.Reg, %struct.Reg* %5815, i32 0, i32 0
  %PC.i1015 = bitcast %union.anon* %5816 to i64*
  %5817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5818 = getelementptr inbounds %struct.GPR, %struct.GPR* %5817, i32 0, i32 1
  %5819 = getelementptr inbounds %struct.Reg, %struct.Reg* %5818, i32 0, i32 0
  %RAX.i1016 = bitcast %union.anon* %5819 to i64*
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5821 = getelementptr inbounds %struct.GPR, %struct.GPR* %5820, i32 0, i32 5
  %5822 = getelementptr inbounds %struct.Reg, %struct.Reg* %5821, i32 0, i32 0
  %RCX.i1017 = bitcast %union.anon* %5822 to i64*
  %5823 = load i64, i64* %RAX.i1016
  %5824 = load i64, i64* %RCX.i1017
  %5825 = load i64, i64* %PC.i1015
  %5826 = add i64 %5825, 3
  store i64 %5826, i64* %PC.i1015
  %5827 = inttoptr i64 %5823 to i64*
  store i64 %5824, i64* %5827
  store %struct.Memory* %loadMem_41b22c, %struct.Memory** %MEMORY
  %loadMem_41b22f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5829 = getelementptr inbounds %struct.GPR, %struct.GPR* %5828, i32 0, i32 33
  %5830 = getelementptr inbounds %struct.Reg, %struct.Reg* %5829, i32 0, i32 0
  %PC.i1013 = bitcast %union.anon* %5830 to i64*
  %5831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5832 = getelementptr inbounds %struct.GPR, %struct.GPR* %5831, i32 0, i32 5
  %5833 = getelementptr inbounds %struct.Reg, %struct.Reg* %5832, i32 0, i32 0
  %RCX.i1014 = bitcast %union.anon* %5833 to i64*
  %5834 = load i64, i64* %PC.i1013
  %5835 = add i64 %5834, 8
  store i64 %5835, i64* %PC.i1013
  %5836 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %5836, i64* %RCX.i1014, align 8
  store %struct.Memory* %loadMem_41b22f, %struct.Memory** %MEMORY
  %loadMem_41b237 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5838 = getelementptr inbounds %struct.GPR, %struct.GPR* %5837, i32 0, i32 33
  %5839 = getelementptr inbounds %struct.Reg, %struct.Reg* %5838, i32 0, i32 0
  %PC.i1010 = bitcast %union.anon* %5839 to i64*
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5841 = getelementptr inbounds %struct.GPR, %struct.GPR* %5840, i32 0, i32 1
  %5842 = getelementptr inbounds %struct.Reg, %struct.Reg* %5841, i32 0, i32 0
  %RAX.i1011 = bitcast %union.anon* %5842 to i64*
  %5843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5844 = getelementptr inbounds %struct.GPR, %struct.GPR* %5843, i32 0, i32 5
  %5845 = getelementptr inbounds %struct.Reg, %struct.Reg* %5844, i32 0, i32 0
  %RCX.i1012 = bitcast %union.anon* %5845 to i64*
  %5846 = load i64, i64* %RAX.i1011
  %5847 = add i64 %5846, 8
  %5848 = load i64, i64* %RCX.i1012
  %5849 = load i64, i64* %PC.i1010
  %5850 = add i64 %5849, 4
  store i64 %5850, i64* %PC.i1010
  %5851 = inttoptr i64 %5847 to i64*
  store i64 %5848, i64* %5851
  store %struct.Memory* %loadMem_41b237, %struct.Memory** %MEMORY
  %loadMem_41b23b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5853 = getelementptr inbounds %struct.GPR, %struct.GPR* %5852, i32 0, i32 33
  %5854 = getelementptr inbounds %struct.Reg, %struct.Reg* %5853, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %5854 to i64*
  %5855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5856 = getelementptr inbounds %struct.GPR, %struct.GPR* %5855, i32 0, i32 5
  %5857 = getelementptr inbounds %struct.Reg, %struct.Reg* %5856, i32 0, i32 0
  %RCX.i1009 = bitcast %union.anon* %5857 to i64*
  %5858 = load i64, i64* %PC.i1008
  %5859 = add i64 %5858, 8
  store i64 %5859, i64* %PC.i1008
  %5860 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %5860, i64* %RCX.i1009, align 8
  store %struct.Memory* %loadMem_41b23b, %struct.Memory** %MEMORY
  %loadMem_41b243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5862 = getelementptr inbounds %struct.GPR, %struct.GPR* %5861, i32 0, i32 33
  %5863 = getelementptr inbounds %struct.Reg, %struct.Reg* %5862, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %5863 to i64*
  %5864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5865 = getelementptr inbounds %struct.GPR, %struct.GPR* %5864, i32 0, i32 1
  %5866 = getelementptr inbounds %struct.Reg, %struct.Reg* %5865, i32 0, i32 0
  %RAX.i1006 = bitcast %union.anon* %5866 to i64*
  %5867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5868 = getelementptr inbounds %struct.GPR, %struct.GPR* %5867, i32 0, i32 5
  %5869 = getelementptr inbounds %struct.Reg, %struct.Reg* %5868, i32 0, i32 0
  %RCX.i1007 = bitcast %union.anon* %5869 to i64*
  %5870 = load i64, i64* %RAX.i1006
  %5871 = add i64 %5870, 16
  %5872 = load i64, i64* %RCX.i1007
  %5873 = load i64, i64* %PC.i1005
  %5874 = add i64 %5873, 4
  store i64 %5874, i64* %PC.i1005
  %5875 = inttoptr i64 %5871 to i64*
  store i64 %5872, i64* %5875
  store %struct.Memory* %loadMem_41b243, %struct.Memory** %MEMORY
  %loadMem_41b247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5877 = getelementptr inbounds %struct.GPR, %struct.GPR* %5876, i32 0, i32 33
  %5878 = getelementptr inbounds %struct.Reg, %struct.Reg* %5877, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %5878 to i64*
  %5879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5880 = getelementptr inbounds %struct.GPR, %struct.GPR* %5879, i32 0, i32 1
  %5881 = getelementptr inbounds %struct.Reg, %struct.Reg* %5880, i32 0, i32 0
  %RAX.i1003 = bitcast %union.anon* %5881 to i64*
  %5882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5883 = getelementptr inbounds %struct.GPR, %struct.GPR* %5882, i32 0, i32 15
  %5884 = getelementptr inbounds %struct.Reg, %struct.Reg* %5883, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %5884 to i64*
  %5885 = load i64, i64* %RBP.i1004
  %5886 = sub i64 %5885, 76
  %5887 = load i64, i64* %PC.i1002
  %5888 = add i64 %5887, 3
  store i64 %5888, i64* %PC.i1002
  %5889 = inttoptr i64 %5886 to i32*
  %5890 = load i32, i32* %5889
  %5891 = zext i32 %5890 to i64
  store i64 %5891, i64* %RAX.i1003, align 8
  store %struct.Memory* %loadMem_41b247, %struct.Memory** %MEMORY
  %loadMem_41b24a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5893 = getelementptr inbounds %struct.GPR, %struct.GPR* %5892, i32 0, i32 33
  %5894 = getelementptr inbounds %struct.Reg, %struct.Reg* %5893, i32 0, i32 0
  %PC.i1000 = bitcast %union.anon* %5894 to i64*
  %5895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5896 = getelementptr inbounds %struct.GPR, %struct.GPR* %5895, i32 0, i32 1
  %5897 = getelementptr inbounds %struct.Reg, %struct.Reg* %5896, i32 0, i32 0
  %RAX.i1001 = bitcast %union.anon* %5897 to i64*
  %5898 = load i64, i64* %RAX.i1001
  %5899 = load i64, i64* %PC.i1000
  %5900 = add i64 %5899, 3
  store i64 %5900, i64* %PC.i1000
  %5901 = trunc i64 %5898 to i32
  %5902 = add i32 1, %5901
  %5903 = zext i32 %5902 to i64
  store i64 %5903, i64* %RAX.i1001, align 8
  %5904 = icmp ult i32 %5902, %5901
  %5905 = icmp ult i32 %5902, 1
  %5906 = or i1 %5904, %5905
  %5907 = zext i1 %5906 to i8
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5907, i8* %5908, align 1
  %5909 = and i32 %5902, 255
  %5910 = call i32 @llvm.ctpop.i32(i32 %5909)
  %5911 = trunc i32 %5910 to i8
  %5912 = and i8 %5911, 1
  %5913 = xor i8 %5912, 1
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5913, i8* %5914, align 1
  %5915 = xor i64 1, %5898
  %5916 = trunc i64 %5915 to i32
  %5917 = xor i32 %5916, %5902
  %5918 = lshr i32 %5917, 4
  %5919 = trunc i32 %5918 to i8
  %5920 = and i8 %5919, 1
  %5921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5920, i8* %5921, align 1
  %5922 = icmp eq i32 %5902, 0
  %5923 = zext i1 %5922 to i8
  %5924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5923, i8* %5924, align 1
  %5925 = lshr i32 %5902, 31
  %5926 = trunc i32 %5925 to i8
  %5927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5926, i8* %5927, align 1
  %5928 = lshr i32 %5901, 31
  %5929 = xor i32 %5925, %5928
  %5930 = add i32 %5929, %5925
  %5931 = icmp eq i32 %5930, 2
  %5932 = zext i1 %5931 to i8
  %5933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5932, i8* %5933, align 1
  store %struct.Memory* %loadMem_41b24a, %struct.Memory** %MEMORY
  %loadMem_41b24d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5935 = getelementptr inbounds %struct.GPR, %struct.GPR* %5934, i32 0, i32 33
  %5936 = getelementptr inbounds %struct.Reg, %struct.Reg* %5935, i32 0, i32 0
  %PC.i997 = bitcast %union.anon* %5936 to i64*
  %5937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5938 = getelementptr inbounds %struct.GPR, %struct.GPR* %5937, i32 0, i32 1
  %5939 = getelementptr inbounds %struct.Reg, %struct.Reg* %5938, i32 0, i32 0
  %EAX.i998 = bitcast %union.anon* %5939 to i32*
  %5940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5941 = getelementptr inbounds %struct.GPR, %struct.GPR* %5940, i32 0, i32 15
  %5942 = getelementptr inbounds %struct.Reg, %struct.Reg* %5941, i32 0, i32 0
  %RBP.i999 = bitcast %union.anon* %5942 to i64*
  %5943 = load i64, i64* %RBP.i999
  %5944 = sub i64 %5943, 76
  %5945 = load i32, i32* %EAX.i998
  %5946 = zext i32 %5945 to i64
  %5947 = load i64, i64* %PC.i997
  %5948 = add i64 %5947, 3
  store i64 %5948, i64* %PC.i997
  %5949 = inttoptr i64 %5944 to i32*
  store i32 %5945, i32* %5949
  store %struct.Memory* %loadMem_41b24d, %struct.Memory** %MEMORY
  %loadMem_41b250 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5951 = getelementptr inbounds %struct.GPR, %struct.GPR* %5950, i32 0, i32 33
  %5952 = getelementptr inbounds %struct.Reg, %struct.Reg* %5951, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %5952 to i64*
  %5953 = load i64, i64* %PC.i996
  %5954 = add i64 %5953, -235
  %5955 = load i64, i64* %PC.i996
  %5956 = add i64 %5955, 5
  store i64 %5956, i64* %PC.i996
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5954, i64* %5957, align 8
  store %struct.Memory* %loadMem_41b250, %struct.Memory** %MEMORY
  br label %block_.L_41b165

block_.L_41b255:                                  ; preds = %block_.L_41b165
  %loadMem_41b255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5959 = getelementptr inbounds %struct.GPR, %struct.GPR* %5958, i32 0, i32 33
  %5960 = getelementptr inbounds %struct.Reg, %struct.Reg* %5959, i32 0, i32 0
  %PC.i994 = bitcast %union.anon* %5960 to i64*
  %5961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5962 = getelementptr inbounds %struct.GPR, %struct.GPR* %5961, i32 0, i32 1
  %5963 = getelementptr inbounds %struct.Reg, %struct.Reg* %5962, i32 0, i32 0
  %RAX.i995 = bitcast %union.anon* %5963 to i64*
  %5964 = load i64, i64* %PC.i994
  %5965 = add i64 %5964, 10
  store i64 %5965, i64* %PC.i994
  store i64 ptrtoint (%G__0x884320_type* @G__0x884320 to i64), i64* %RAX.i995, align 8
  store %struct.Memory* %loadMem_41b255, %struct.Memory** %MEMORY
  %loadMem_41b25f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5967 = getelementptr inbounds %struct.GPR, %struct.GPR* %5966, i32 0, i32 33
  %5968 = getelementptr inbounds %struct.Reg, %struct.Reg* %5967, i32 0, i32 0
  %PC.i991 = bitcast %union.anon* %5968 to i64*
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5970 = getelementptr inbounds %struct.GPR, %struct.GPR* %5969, i32 0, i32 9
  %5971 = getelementptr inbounds %struct.Reg, %struct.Reg* %5970, i32 0, i32 0
  %ESI.i992 = bitcast %union.anon* %5971 to i32*
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5973 = getelementptr inbounds %struct.GPR, %struct.GPR* %5972, i32 0, i32 9
  %5974 = getelementptr inbounds %struct.Reg, %struct.Reg* %5973, i32 0, i32 0
  %RSI.i993 = bitcast %union.anon* %5974 to i64*
  %5975 = load i64, i64* %RSI.i993
  %5976 = load i32, i32* %ESI.i992
  %5977 = zext i32 %5976 to i64
  %5978 = load i64, i64* %PC.i991
  %5979 = add i64 %5978, 2
  store i64 %5979, i64* %PC.i991
  %5980 = xor i64 %5977, %5975
  %5981 = trunc i64 %5980 to i32
  %5982 = and i64 %5980, 4294967295
  store i64 %5982, i64* %RSI.i993, align 8
  %5983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5983, align 1
  %5984 = and i32 %5981, 255
  %5985 = call i32 @llvm.ctpop.i32(i32 %5984)
  %5986 = trunc i32 %5985 to i8
  %5987 = and i8 %5986, 1
  %5988 = xor i8 %5987, 1
  %5989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5988, i8* %5989, align 1
  %5990 = icmp eq i32 %5981, 0
  %5991 = zext i1 %5990 to i8
  %5992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5991, i8* %5992, align 1
  %5993 = lshr i32 %5981, 31
  %5994 = trunc i32 %5993 to i8
  %5995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5994, i8* %5995, align 1
  %5996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5996, align 1
  %5997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5997, align 1
  store %struct.Memory* %loadMem_41b25f, %struct.Memory** %MEMORY
  %loadMem_41b261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5999 = getelementptr inbounds %struct.GPR, %struct.GPR* %5998, i32 0, i32 33
  %6000 = getelementptr inbounds %struct.Reg, %struct.Reg* %5999, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %6000 to i64*
  %6001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6002 = getelementptr inbounds %struct.GPR, %struct.GPR* %6001, i32 0, i32 5
  %6003 = getelementptr inbounds %struct.Reg, %struct.Reg* %6002, i32 0, i32 0
  %RCX.i990 = bitcast %union.anon* %6003 to i64*
  %6004 = load i64, i64* %PC.i989
  %6005 = add i64 %6004, 5
  store i64 %6005, i64* %PC.i989
  store i64 2048, i64* %RCX.i990, align 8
  store %struct.Memory* %loadMem_41b261, %struct.Memory** %MEMORY
  %loadMem_41b266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6007 = getelementptr inbounds %struct.GPR, %struct.GPR* %6006, i32 0, i32 33
  %6008 = getelementptr inbounds %struct.Reg, %struct.Reg* %6007, i32 0, i32 0
  %PC.i986 = bitcast %union.anon* %6008 to i64*
  %6009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6010 = getelementptr inbounds %struct.GPR, %struct.GPR* %6009, i32 0, i32 5
  %6011 = getelementptr inbounds %struct.Reg, %struct.Reg* %6010, i32 0, i32 0
  %ECX.i987 = bitcast %union.anon* %6011 to i32*
  %6012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6013 = getelementptr inbounds %struct.GPR, %struct.GPR* %6012, i32 0, i32 7
  %6014 = getelementptr inbounds %struct.Reg, %struct.Reg* %6013, i32 0, i32 0
  %RDX.i988 = bitcast %union.anon* %6014 to i64*
  %6015 = load i32, i32* %ECX.i987
  %6016 = zext i32 %6015 to i64
  %6017 = load i64, i64* %PC.i986
  %6018 = add i64 %6017, 2
  store i64 %6018, i64* %PC.i986
  %6019 = and i64 %6016, 4294967295
  store i64 %6019, i64* %RDX.i988, align 8
  store %struct.Memory* %loadMem_41b266, %struct.Memory** %MEMORY
  %loadMem_41b268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6021 = getelementptr inbounds %struct.GPR, %struct.GPR* %6020, i32 0, i32 33
  %6022 = getelementptr inbounds %struct.Reg, %struct.Reg* %6021, i32 0, i32 0
  %PC.i983 = bitcast %union.anon* %6022 to i64*
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6024 = getelementptr inbounds %struct.GPR, %struct.GPR* %6023, i32 0, i32 1
  %6025 = getelementptr inbounds %struct.Reg, %struct.Reg* %6024, i32 0, i32 0
  %RAX.i984 = bitcast %union.anon* %6025 to i64*
  %6026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6027 = getelementptr inbounds %struct.GPR, %struct.GPR* %6026, i32 0, i32 11
  %6028 = getelementptr inbounds %struct.Reg, %struct.Reg* %6027, i32 0, i32 0
  %RDI.i985 = bitcast %union.anon* %6028 to i64*
  %6029 = load i64, i64* %RAX.i984
  %6030 = load i64, i64* %PC.i983
  %6031 = add i64 %6030, 3
  store i64 %6031, i64* %PC.i983
  store i64 %6029, i64* %RDI.i985, align 8
  store %struct.Memory* %loadMem_41b268, %struct.Memory** %MEMORY
  %loadMem1_41b26b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6033 = getelementptr inbounds %struct.GPR, %struct.GPR* %6032, i32 0, i32 33
  %6034 = getelementptr inbounds %struct.Reg, %struct.Reg* %6033, i32 0, i32 0
  %PC.i982 = bitcast %union.anon* %6034 to i64*
  %6035 = load i64, i64* %PC.i982
  %6036 = add i64 %6035, -107931
  %6037 = load i64, i64* %PC.i982
  %6038 = add i64 %6037, 5
  %6039 = load i64, i64* %PC.i982
  %6040 = add i64 %6039, 5
  store i64 %6040, i64* %PC.i982
  %6041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6042 = load i64, i64* %6041, align 8
  %6043 = add i64 %6042, -8
  %6044 = inttoptr i64 %6043 to i64*
  store i64 %6038, i64* %6044
  store i64 %6043, i64* %6041, align 8
  %6045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6036, i64* %6045, align 8
  store %struct.Memory* %loadMem1_41b26b, %struct.Memory** %MEMORY
  %loadMem2_41b26b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b26b = load i64, i64* %3
  %6046 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %loadMem2_41b26b)
  store %struct.Memory* %6046, %struct.Memory** %MEMORY
  %loadMem_41b270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6048 = getelementptr inbounds %struct.GPR, %struct.GPR* %6047, i32 0, i32 33
  %6049 = getelementptr inbounds %struct.Reg, %struct.Reg* %6048, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %6049 to i64*
  %6050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6051 = getelementptr inbounds %struct.GPR, %struct.GPR* %6050, i32 0, i32 15
  %6052 = getelementptr inbounds %struct.Reg, %struct.Reg* %6051, i32 0, i32 0
  %RBP.i980 = bitcast %union.anon* %6052 to i64*
  %6053 = load i64, i64* %RBP.i980
  %6054 = sub i64 %6053, 92
  %6055 = load i64, i64* %PC.i979
  %6056 = add i64 %6055, 7
  store i64 %6056, i64* %PC.i979
  %6057 = inttoptr i64 %6054 to i32*
  store i32 0, i32* %6057
  store %struct.Memory* %loadMem_41b270, %struct.Memory** %MEMORY
  %loadMem_41b277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6059 = getelementptr inbounds %struct.GPR, %struct.GPR* %6058, i32 0, i32 33
  %6060 = getelementptr inbounds %struct.Reg, %struct.Reg* %6059, i32 0, i32 0
  %PC.i978 = bitcast %union.anon* %6060 to i64*
  %6061 = load i64, i64* %PC.i978
  %6062 = add i64 %6061, 11
  store i64 %6062, i64* %PC.i978
  store i32 0, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  store %struct.Memory* %loadMem_41b277, %struct.Memory** %MEMORY
  %loadMem_41b282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6064 = getelementptr inbounds %struct.GPR, %struct.GPR* %6063, i32 0, i32 33
  %6065 = getelementptr inbounds %struct.Reg, %struct.Reg* %6064, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %6065 to i64*
  %6066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6067 = getelementptr inbounds %struct.GPR, %struct.GPR* %6066, i32 0, i32 15
  %6068 = getelementptr inbounds %struct.Reg, %struct.Reg* %6067, i32 0, i32 0
  %RBP.i977 = bitcast %union.anon* %6068 to i64*
  %6069 = load i64, i64* %RBP.i977
  %6070 = sub i64 %6069, 96
  %6071 = load i64, i64* %PC.i976
  %6072 = add i64 %6071, 7
  store i64 %6072, i64* %PC.i976
  %6073 = inttoptr i64 %6070 to i32*
  store i32 0, i32* %6073
  store %struct.Memory* %loadMem_41b282, %struct.Memory** %MEMORY
  %loadMem_41b289 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6075 = getelementptr inbounds %struct.GPR, %struct.GPR* %6074, i32 0, i32 33
  %6076 = getelementptr inbounds %struct.Reg, %struct.Reg* %6075, i32 0, i32 0
  %PC.i975 = bitcast %union.anon* %6076 to i64*
  %6077 = load i64, i64* %PC.i975
  %6078 = add i64 %6077, 11
  store i64 %6078, i64* %PC.i975
  store i32 1, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  store %struct.Memory* %loadMem_41b289, %struct.Memory** %MEMORY
  br label %block_.L_41b294

block_.L_41b294:                                  ; preds = %block_.L_41b6b7, %block_.L_41b255
  %loadMem_41b294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6080 = getelementptr inbounds %struct.GPR, %struct.GPR* %6079, i32 0, i32 33
  %6081 = getelementptr inbounds %struct.Reg, %struct.Reg* %6080, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %6081 to i64*
  %6082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6083 = getelementptr inbounds %struct.GPR, %struct.GPR* %6082, i32 0, i32 1
  %6084 = getelementptr inbounds %struct.Reg, %struct.Reg* %6083, i32 0, i32 0
  %RAX.i974 = bitcast %union.anon* %6084 to i64*
  %6085 = load i64, i64* %PC.i973
  %6086 = add i64 %6085, 7
  store i64 %6086, i64* %PC.i973
  %6087 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %6088 = zext i32 %6087 to i64
  store i64 %6088, i64* %RAX.i974, align 8
  store %struct.Memory* %loadMem_41b294, %struct.Memory** %MEMORY
  %loadMem_41b29b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6090 = getelementptr inbounds %struct.GPR, %struct.GPR* %6089, i32 0, i32 33
  %6091 = getelementptr inbounds %struct.Reg, %struct.Reg* %6090, i32 0, i32 0
  %PC.i971 = bitcast %union.anon* %6091 to i64*
  %6092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6093 = getelementptr inbounds %struct.GPR, %struct.GPR* %6092, i32 0, i32 1
  %6094 = getelementptr inbounds %struct.Reg, %struct.Reg* %6093, i32 0, i32 0
  %EAX.i972 = bitcast %union.anon* %6094 to i32*
  %6095 = load i32, i32* %EAX.i972
  %6096 = zext i32 %6095 to i64
  %6097 = load i64, i64* %PC.i971
  %6098 = add i64 %6097, 7
  store i64 %6098, i64* %PC.i971
  %6099 = load i32, i32* bitcast (%G_0x880b18_type* @G_0x880b18 to i32*)
  %6100 = sub i32 %6095, %6099
  %6101 = icmp ult i32 %6095, %6099
  %6102 = zext i1 %6101 to i8
  %6103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6102, i8* %6103, align 1
  %6104 = and i32 %6100, 255
  %6105 = call i32 @llvm.ctpop.i32(i32 %6104)
  %6106 = trunc i32 %6105 to i8
  %6107 = and i8 %6106, 1
  %6108 = xor i8 %6107, 1
  %6109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6108, i8* %6109, align 1
  %6110 = xor i32 %6099, %6095
  %6111 = xor i32 %6110, %6100
  %6112 = lshr i32 %6111, 4
  %6113 = trunc i32 %6112 to i8
  %6114 = and i8 %6113, 1
  %6115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6114, i8* %6115, align 1
  %6116 = icmp eq i32 %6100, 0
  %6117 = zext i1 %6116 to i8
  %6118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6117, i8* %6118, align 1
  %6119 = lshr i32 %6100, 31
  %6120 = trunc i32 %6119 to i8
  %6121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6120, i8* %6121, align 1
  %6122 = lshr i32 %6095, 31
  %6123 = lshr i32 %6099, 31
  %6124 = xor i32 %6123, %6122
  %6125 = xor i32 %6119, %6122
  %6126 = add i32 %6125, %6124
  %6127 = icmp eq i32 %6126, 2
  %6128 = zext i1 %6127 to i8
  %6129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6128, i8* %6129, align 1
  store %struct.Memory* %loadMem_41b29b, %struct.Memory** %MEMORY
  %loadMem_41b2a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6131 = getelementptr inbounds %struct.GPR, %struct.GPR* %6130, i32 0, i32 33
  %6132 = getelementptr inbounds %struct.Reg, %struct.Reg* %6131, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %6132 to i64*
  %6133 = load i64, i64* %PC.i970
  %6134 = add i64 %6133, 1067
  %6135 = load i64, i64* %PC.i970
  %6136 = add i64 %6135, 6
  %6137 = load i64, i64* %PC.i970
  %6138 = add i64 %6137, 6
  store i64 %6138, i64* %PC.i970
  %6139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6140 = load i8, i8* %6139, align 1
  %6141 = icmp eq i8 %6140, 0
  %6142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6143 = load i8, i8* %6142, align 1
  %6144 = icmp ne i8 %6143, 0
  %6145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6146 = load i8, i8* %6145, align 1
  %6147 = icmp ne i8 %6146, 0
  %6148 = xor i1 %6144, %6147
  %6149 = xor i1 %6148, true
  %6150 = and i1 %6141, %6149
  %6151 = zext i1 %6150 to i8
  store i8 %6151, i8* %BRANCH_TAKEN, align 1
  %6152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6153 = select i1 %6150, i64 %6134, i64 %6136
  store i64 %6153, i64* %6152, align 8
  store %struct.Memory* %loadMem_41b2a2, %struct.Memory** %MEMORY
  %loadBr_41b2a2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b2a2 = icmp eq i8 %loadBr_41b2a2, 1
  br i1 %cmpBr_41b2a2, label %block_.L_41b6cd, label %block_41b2a8

block_41b2a8:                                     ; preds = %block_.L_41b294
  %loadMem1_41b2a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6155 = getelementptr inbounds %struct.GPR, %struct.GPR* %6154, i32 0, i32 33
  %6156 = getelementptr inbounds %struct.Reg, %struct.Reg* %6155, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %6156 to i64*
  %6157 = load i64, i64* %PC.i969
  %6158 = add i64 %6157, 33976
  %6159 = load i64, i64* %PC.i969
  %6160 = add i64 %6159, 5
  %6161 = load i64, i64* %PC.i969
  %6162 = add i64 %6161, 5
  store i64 %6162, i64* %PC.i969
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6164 = load i64, i64* %6163, align 8
  %6165 = add i64 %6164, -8
  %6166 = inttoptr i64 %6165 to i64*
  store i64 %6160, i64* %6166
  store i64 %6165, i64* %6163, align 8
  %6167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6158, i64* %6167, align 8
  store %struct.Memory* %loadMem1_41b2a8, %struct.Memory** %MEMORY
  %loadMem2_41b2a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b2a8 = load i64, i64* %3
  %call2_41b2a8 = call %struct.Memory* @sub_423760.rtime(%struct.State* %0, i64 %loadPC_41b2a8, %struct.Memory* %loadMem2_41b2a8)
  store %struct.Memory* %call2_41b2a8, %struct.Memory** %MEMORY
  %loadMem_41b2ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %6168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6169 = getelementptr inbounds %struct.GPR, %struct.GPR* %6168, i32 0, i32 33
  %6170 = getelementptr inbounds %struct.Reg, %struct.Reg* %6169, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %6170 to i64*
  %6171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6172 = getelementptr inbounds %struct.GPR, %struct.GPR* %6171, i32 0, i32 9
  %6173 = getelementptr inbounds %struct.Reg, %struct.Reg* %6172, i32 0, i32 0
  %RSI.i968 = bitcast %union.anon* %6173 to i64*
  %6174 = load i64, i64* %PC.i967
  %6175 = add i64 %6174, 8
  store i64 %6175, i64* %PC.i967
  %6176 = load i64, i64* bitcast (%G_0x8662e8_type* @G_0x8662e8 to i64*)
  store i64 %6176, i64* %RSI.i968, align 8
  store %struct.Memory* %loadMem_41b2ad, %struct.Memory** %MEMORY
  %loadMem_41b2b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6178 = getelementptr inbounds %struct.GPR, %struct.GPR* %6177, i32 0, i32 33
  %6179 = getelementptr inbounds %struct.Reg, %struct.Reg* %6178, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %6179 to i64*
  %6180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6181 = getelementptr inbounds %struct.GPR, %struct.GPR* %6180, i32 0, i32 1
  %6182 = getelementptr inbounds %struct.Reg, %struct.Reg* %6181, i32 0, i32 0
  %RAX.i965 = bitcast %union.anon* %6182 to i64*
  %6183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6184 = getelementptr inbounds %struct.GPR, %struct.GPR* %6183, i32 0, i32 11
  %6185 = getelementptr inbounds %struct.Reg, %struct.Reg* %6184, i32 0, i32 0
  %RDI.i966 = bitcast %union.anon* %6185 to i64*
  %6186 = load i64, i64* %RAX.i965
  %6187 = load i64, i64* %PC.i964
  %6188 = add i64 %6187, 3
  store i64 %6188, i64* %PC.i964
  store i64 %6186, i64* %RDI.i966, align 8
  store %struct.Memory* %loadMem_41b2b5, %struct.Memory** %MEMORY
  %loadMem1_41b2b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6190 = getelementptr inbounds %struct.GPR, %struct.GPR* %6189, i32 0, i32 33
  %6191 = getelementptr inbounds %struct.Reg, %struct.Reg* %6190, i32 0, i32 0
  %PC.i963 = bitcast %union.anon* %6191 to i64*
  %6192 = load i64, i64* %PC.i963
  %6193 = add i64 %6192, 33976
  %6194 = load i64, i64* %PC.i963
  %6195 = add i64 %6194, 5
  %6196 = load i64, i64* %PC.i963
  %6197 = add i64 %6196, 5
  store i64 %6197, i64* %PC.i963
  %6198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6199 = load i64, i64* %6198, align 8
  %6200 = add i64 %6199, -8
  %6201 = inttoptr i64 %6200 to i64*
  store i64 %6195, i64* %6201
  store i64 %6200, i64* %6198, align 8
  %6202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6193, i64* %6202, align 8
  store %struct.Memory* %loadMem1_41b2b8, %struct.Memory** %MEMORY
  %loadMem2_41b2b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b2b8 = load i64, i64* %3
  %call2_41b2b8 = call %struct.Memory* @sub_423770.rdifftime(%struct.State* %0, i64 %loadPC_41b2b8, %struct.Memory* %loadMem2_41b2b8)
  store %struct.Memory* %call2_41b2b8, %struct.Memory** %MEMORY
  %loadMem_41b2bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6204 = getelementptr inbounds %struct.GPR, %struct.GPR* %6203, i32 0, i32 33
  %6205 = getelementptr inbounds %struct.Reg, %struct.Reg* %6204, i32 0, i32 0
  %PC.i962 = bitcast %union.anon* %6205 to i64*
  %6206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6207 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6206, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %6207 to %"class.std::bitset"*
  %6208 = bitcast %"class.std::bitset"* %YMM0.i to i8*
  %6209 = load i64, i64* %PC.i962
  %6210 = add i64 %6209, ptrtoint (%G_0xd0f3__rip__type* @G_0xd0f3__rip_ to i64)
  %6211 = load i64, i64* %PC.i962
  %6212 = add i64 %6211, 8
  store i64 %6212, i64* %PC.i962
  %6213 = inttoptr i64 %6210 to double*
  %6214 = load double, double* %6213
  %6215 = bitcast i8* %6208 to double*
  store double %6214, double* %6215, align 1
  %6216 = getelementptr inbounds i8, i8* %6208, i64 8
  %6217 = bitcast i8* %6216 to double*
  store double 0.000000e+00, double* %6217, align 1
  store %struct.Memory* %loadMem_41b2bd, %struct.Memory** %MEMORY
  %loadMem_41b2c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6219 = getelementptr inbounds %struct.GPR, %struct.GPR* %6218, i32 0, i32 33
  %6220 = getelementptr inbounds %struct.Reg, %struct.Reg* %6219, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %6220 to i64*
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6222 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6221, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %6222 to %"class.std::bitset"*
  %6223 = bitcast %"class.std::bitset"* %YMM1.i to i8*
  %6224 = load i64, i64* %PC.i961
  %6225 = add i64 %6224, ptrtoint (%G_0xd0f3__rip__type* @G_0xd0f3__rip_ to i64)
  %6226 = load i64, i64* %PC.i961
  %6227 = add i64 %6226, 8
  store i64 %6227, i64* %PC.i961
  %6228 = inttoptr i64 %6225 to double*
  %6229 = load double, double* %6228
  %6230 = bitcast i8* %6223 to double*
  store double %6229, double* %6230, align 1
  %6231 = getelementptr inbounds i8, i8* %6223, i64 8
  %6232 = bitcast i8* %6231 to double*
  store double 0.000000e+00, double* %6232, align 1
  store %struct.Memory* %loadMem_41b2c5, %struct.Memory** %MEMORY
  %loadMem_41b2cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6234 = getelementptr inbounds %struct.GPR, %struct.GPR* %6233, i32 0, i32 33
  %6235 = getelementptr inbounds %struct.Reg, %struct.Reg* %6234, i32 0, i32 0
  %PC.i958 = bitcast %union.anon* %6235 to i64*
  %6236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6237 = getelementptr inbounds %struct.GPR, %struct.GPR* %6236, i32 0, i32 1
  %6238 = getelementptr inbounds %struct.Reg, %struct.Reg* %6237, i32 0, i32 0
  %EAX.i959 = bitcast %union.anon* %6238 to i32*
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6240 = getelementptr inbounds %struct.GPR, %struct.GPR* %6239, i32 0, i32 15
  %6241 = getelementptr inbounds %struct.Reg, %struct.Reg* %6240, i32 0, i32 0
  %RBP.i960 = bitcast %union.anon* %6241 to i64*
  %6242 = load i64, i64* %RBP.i960
  %6243 = sub i64 %6242, 88
  %6244 = load i32, i32* %EAX.i959
  %6245 = zext i32 %6244 to i64
  %6246 = load i64, i64* %PC.i958
  %6247 = add i64 %6246, 3
  store i64 %6247, i64* %PC.i958
  %6248 = inttoptr i64 %6243 to i32*
  store i32 %6244, i32* %6248
  store %struct.Memory* %loadMem_41b2cd, %struct.Memory** %MEMORY
  %loadMem_41b2d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6250 = getelementptr inbounds %struct.GPR, %struct.GPR* %6249, i32 0, i32 33
  %6251 = getelementptr inbounds %struct.Reg, %struct.Reg* %6250, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %6251 to i64*
  %6252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6253 = getelementptr inbounds %struct.GPR, %struct.GPR* %6252, i32 0, i32 15
  %6254 = getelementptr inbounds %struct.Reg, %struct.Reg* %6253, i32 0, i32 0
  %RBP.i957 = bitcast %union.anon* %6254 to i64*
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6256 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6255, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %6256 to %"class.std::bitset"*
  %6257 = bitcast %"class.std::bitset"* %YMM2.i to i8*
  %6258 = load i64, i64* %RBP.i957
  %6259 = sub i64 %6258, 88
  %6260 = load i64, i64* %PC.i956
  %6261 = add i64 %6260, 5
  store i64 %6261, i64* %PC.i956
  %6262 = inttoptr i64 %6259 to i32*
  %6263 = load i32, i32* %6262
  %6264 = sitofp i32 %6263 to double
  %6265 = bitcast i8* %6257 to double*
  store double %6264, double* %6265, align 1
  store %struct.Memory* %loadMem_41b2d0, %struct.Memory** %MEMORY
  %loadMem_41b2d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6267 = getelementptr inbounds %struct.GPR, %struct.GPR* %6266, i32 0, i32 33
  %6268 = getelementptr inbounds %struct.Reg, %struct.Reg* %6267, i32 0, i32 0
  %PC.i954 = bitcast %union.anon* %6268 to i64*
  %6269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6270 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6269, i64 0, i64 3
  %YMM3.i955 = bitcast %union.VectorReg* %6270 to %"class.std::bitset"*
  %6271 = bitcast %"class.std::bitset"* %YMM3.i955 to i8*
  %6272 = load i64, i64* %PC.i954
  %6273 = add i64 %6272, 9
  store i64 %6273, i64* %PC.i954
  %6274 = load i32, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  %6275 = sitofp i32 %6274 to double
  %6276 = bitcast i8* %6271 to double*
  store double %6275, double* %6276, align 1
  store %struct.Memory* %loadMem_41b2d5, %struct.Memory** %MEMORY
  %loadMem_41b2de = load %struct.Memory*, %struct.Memory** %MEMORY
  %6277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6278 = getelementptr inbounds %struct.GPR, %struct.GPR* %6277, i32 0, i32 33
  %6279 = getelementptr inbounds %struct.Reg, %struct.Reg* %6278, i32 0, i32 0
  %PC.i952 = bitcast %union.anon* %6279 to i64*
  %6280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6280, i64 0, i64 3
  %YMM3.i953 = bitcast %union.VectorReg* %6281 to %"class.std::bitset"*
  %6282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6282, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %6283 to %union.vec128_t*
  %6284 = bitcast %"class.std::bitset"* %YMM3.i953 to i8*
  %6285 = bitcast %"class.std::bitset"* %YMM3.i953 to i8*
  %6286 = bitcast %union.vec128_t* %XMM1.i to i8*
  %6287 = load i64, i64* %PC.i952
  %6288 = add i64 %6287, 4
  store i64 %6288, i64* %PC.i952
  %6289 = bitcast i8* %6285 to double*
  %6290 = load double, double* %6289, align 1
  %6291 = getelementptr inbounds i8, i8* %6285, i64 8
  %6292 = bitcast i8* %6291 to i64*
  %6293 = load i64, i64* %6292, align 1
  %6294 = bitcast i8* %6286 to double*
  %6295 = load double, double* %6294, align 1
  %6296 = fmul double %6290, %6295
  %6297 = bitcast i8* %6284 to double*
  store double %6296, double* %6297, align 1
  %6298 = getelementptr inbounds i8, i8* %6284, i64 8
  %6299 = bitcast i8* %6298 to i64*
  store i64 %6293, i64* %6299, align 1
  store %struct.Memory* %loadMem_41b2de, %struct.Memory** %MEMORY
  %loadMem_41b2e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6301 = getelementptr inbounds %struct.GPR, %struct.GPR* %6300, i32 0, i32 33
  %6302 = getelementptr inbounds %struct.Reg, %struct.Reg* %6301, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %6302 to i64*
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6304 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6303, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %6304 to %"class.std::bitset"*
  %6305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6306 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6305, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %6306 to %union.vec128_t*
  %6307 = bitcast %"class.std::bitset"* %YMM3.i to i8*
  %6308 = bitcast %"class.std::bitset"* %YMM3.i to i8*
  %6309 = bitcast %union.vec128_t* %XMM0.i to i8*
  %6310 = load i64, i64* %PC.i951
  %6311 = add i64 %6310, 4
  store i64 %6311, i64* %PC.i951
  %6312 = bitcast i8* %6308 to double*
  %6313 = load double, double* %6312, align 1
  %6314 = getelementptr inbounds i8, i8* %6308, i64 8
  %6315 = bitcast i8* %6314 to i64*
  %6316 = load i64, i64* %6315, align 1
  %6317 = bitcast i8* %6309 to double*
  %6318 = load double, double* %6317, align 1
  %6319 = fdiv double %6313, %6318
  %6320 = bitcast i8* %6307 to double*
  store double %6319, double* %6320, align 1
  %6321 = getelementptr inbounds i8, i8* %6307, i64 8
  %6322 = bitcast i8* %6321 to i64*
  store i64 %6316, i64* %6322, align 1
  store %struct.Memory* %loadMem_41b2e2, %struct.Memory** %MEMORY
  %loadMem_41b2e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6324 = getelementptr inbounds %struct.GPR, %struct.GPR* %6323, i32 0, i32 33
  %6325 = getelementptr inbounds %struct.Reg, %struct.Reg* %6324, i32 0, i32 0
  %PC.i949 = bitcast %union.anon* %6325 to i64*
  %6326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6327 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6326, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %6327 to %union.vec128_t*
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %6329 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6328, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %6329 to %union.vec128_t*
  %6330 = bitcast %union.vec128_t* %XMM2.i to i8*
  %6331 = bitcast %union.vec128_t* %XMM3.i to i8*
  %6332 = load i64, i64* %PC.i949
  %6333 = add i64 %6332, 4
  store i64 %6333, i64* %PC.i949
  %6334 = bitcast i8* %6330 to double*
  %6335 = load double, double* %6334, align 1
  %6336 = bitcast i8* %6331 to double*
  %6337 = load double, double* %6336, align 1
  %6338 = fcmp uno double %6335, %6337
  br i1 %6338, label %6339, label %6351

; <label>:6339:                                   ; preds = %block_41b2a8
  %6340 = fadd double %6335, %6337
  %6341 = bitcast double %6340 to i64
  %6342 = and i64 %6341, 9221120237041090560
  %6343 = icmp eq i64 %6342, 9218868437227405312
  %6344 = and i64 %6341, 2251799813685247
  %6345 = icmp ne i64 %6344, 0
  %6346 = and i1 %6343, %6345
  br i1 %6346, label %6347, label %6357

; <label>:6347:                                   ; preds = %6339
  %6348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6349 = load i64, i64* %6348, align 8
  %6350 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6349, %struct.Memory* %loadMem_41b2e6)
  br label %routine_ucomisd__xmm3___xmm2.exit

; <label>:6351:                                   ; preds = %block_41b2a8
  %6352 = fcmp ogt double %6335, %6337
  br i1 %6352, label %6357, label %6353

; <label>:6353:                                   ; preds = %6351
  %6354 = fcmp olt double %6335, %6337
  br i1 %6354, label %6357, label %6355

; <label>:6355:                                   ; preds = %6353
  %6356 = fcmp oeq double %6335, %6337
  br i1 %6356, label %6357, label %6364

; <label>:6357:                                   ; preds = %6355, %6353, %6351, %6339
  %6358 = phi i8 [ 0, %6351 ], [ 0, %6353 ], [ 1, %6355 ], [ 1, %6339 ]
  %6359 = phi i8 [ 0, %6351 ], [ 0, %6353 ], [ 0, %6355 ], [ 1, %6339 ]
  %6360 = phi i8 [ 0, %6351 ], [ 1, %6353 ], [ 0, %6355 ], [ 1, %6339 ]
  %6361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6358, i8* %6361, align 1
  %6362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6359, i8* %6362, align 1
  %6363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6360, i8* %6363, align 1
  br label %6364

; <label>:6364:                                   ; preds = %6357, %6355
  %6365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %6365, align 1
  %6366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %6366, align 1
  %6367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6367, align 1
  br label %routine_ucomisd__xmm3___xmm2.exit

routine_ucomisd__xmm3___xmm2.exit:                ; preds = %6347, %6364
  %6368 = phi %struct.Memory* [ %6350, %6347 ], [ %loadMem_41b2e6, %6364 ]
  store %struct.Memory* %6368, %struct.Memory** %MEMORY
  %loadMem_41b2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %6369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6370 = getelementptr inbounds %struct.GPR, %struct.GPR* %6369, i32 0, i32 33
  %6371 = getelementptr inbounds %struct.Reg, %struct.Reg* %6370, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %6371 to i64*
  %6372 = load i64, i64* %PC.i948
  %6373 = add i64 %6372, 25
  %6374 = load i64, i64* %PC.i948
  %6375 = add i64 %6374, 6
  %6376 = load i64, i64* %PC.i948
  %6377 = add i64 %6376, 6
  store i64 %6377, i64* %PC.i948
  %6378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %6379 = load i8, i8* %6378, align 1
  %6380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6381 = load i8, i8* %6380, align 1
  %6382 = or i8 %6381, %6379
  %6383 = icmp ne i8 %6382, 0
  %6384 = zext i1 %6383 to i8
  store i8 %6384, i8* %BRANCH_TAKEN, align 1
  %6385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6386 = select i1 %6383, i64 %6373, i64 %6375
  store i64 %6386, i64* %6385, align 8
  store %struct.Memory* %loadMem_41b2ea, %struct.Memory** %MEMORY
  %loadBr_41b2ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b2ea = icmp eq i8 %loadBr_41b2ea, 1
  br i1 %cmpBr_41b2ea, label %block_.L_41b303, label %block_41b2f0

block_41b2f0:                                     ; preds = %routine_ucomisd__xmm3___xmm2.exit
  %loadMem_41b2f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6388 = getelementptr inbounds %struct.GPR, %struct.GPR* %6387, i32 0, i32 33
  %6389 = getelementptr inbounds %struct.Reg, %struct.Reg* %6388, i32 0, i32 0
  %PC.i947 = bitcast %union.anon* %6389 to i64*
  %6390 = load i64, i64* %PC.i947
  %6391 = add i64 %6390, 8
  store i64 %6391, i64* %PC.i947
  %6392 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %6393 = sub i32 %6392, 2
  %6394 = icmp ult i32 %6392, 2
  %6395 = zext i1 %6394 to i8
  %6396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6395, i8* %6396, align 1
  %6397 = and i32 %6393, 255
  %6398 = call i32 @llvm.ctpop.i32(i32 %6397)
  %6399 = trunc i32 %6398 to i8
  %6400 = and i8 %6399, 1
  %6401 = xor i8 %6400, 1
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6401, i8* %6402, align 1
  %6403 = xor i32 %6392, 2
  %6404 = xor i32 %6403, %6393
  %6405 = lshr i32 %6404, 4
  %6406 = trunc i32 %6405 to i8
  %6407 = and i8 %6406, 1
  %6408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6407, i8* %6408, align 1
  %6409 = icmp eq i32 %6393, 0
  %6410 = zext i1 %6409 to i8
  %6411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6410, i8* %6411, align 1
  %6412 = lshr i32 %6393, 31
  %6413 = trunc i32 %6412 to i8
  %6414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6413, i8* %6414, align 1
  %6415 = lshr i32 %6392, 31
  %6416 = xor i32 %6412, %6415
  %6417 = add i32 %6416, %6415
  %6418 = icmp eq i32 %6417, 2
  %6419 = zext i1 %6418 to i8
  %6420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6419, i8* %6420, align 1
  store %struct.Memory* %loadMem_41b2f0, %struct.Memory** %MEMORY
  %loadMem_41b2f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6422 = getelementptr inbounds %struct.GPR, %struct.GPR* %6421, i32 0, i32 33
  %6423 = getelementptr inbounds %struct.Reg, %struct.Reg* %6422, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %6423 to i64*
  %6424 = load i64, i64* %PC.i946
  %6425 = add i64 %6424, 11
  %6426 = load i64, i64* %PC.i946
  %6427 = add i64 %6426, 6
  %6428 = load i64, i64* %PC.i946
  %6429 = add i64 %6428, 6
  store i64 %6429, i64* %PC.i946
  %6430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6431 = load i8, i8* %6430, align 1
  %6432 = icmp ne i8 %6431, 0
  %6433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %6434 = load i8, i8* %6433, align 1
  %6435 = icmp ne i8 %6434, 0
  %6436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %6437 = load i8, i8* %6436, align 1
  %6438 = icmp ne i8 %6437, 0
  %6439 = xor i1 %6435, %6438
  %6440 = or i1 %6432, %6439
  %6441 = zext i1 %6440 to i8
  store i8 %6441, i8* %BRANCH_TAKEN, align 1
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6443 = select i1 %6440, i64 %6425, i64 %6427
  store i64 %6443, i64* %6442, align 8
  store %struct.Memory* %loadMem_41b2f8, %struct.Memory** %MEMORY
  %loadBr_41b2f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b2f8 = icmp eq i8 %loadBr_41b2f8, 1
  br i1 %cmpBr_41b2f8, label %block_.L_41b303, label %block_41b2fe

block_41b2fe:                                     ; preds = %block_41b2f0
  %loadMem_41b2fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %6444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6445 = getelementptr inbounds %struct.GPR, %struct.GPR* %6444, i32 0, i32 33
  %6446 = getelementptr inbounds %struct.Reg, %struct.Reg* %6445, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %6446 to i64*
  %6447 = load i64, i64* %PC.i945
  %6448 = add i64 %6447, 975
  %6449 = load i64, i64* %PC.i945
  %6450 = add i64 %6449, 5
  store i64 %6450, i64* %PC.i945
  %6451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6448, i64* %6451, align 8
  store %struct.Memory* %loadMem_41b2fe, %struct.Memory** %MEMORY
  br label %block_.L_41b6cd

block_.L_41b303:                                  ; preds = %block_41b2f0, %routine_ucomisd__xmm3___xmm2.exit
  %loadMem_41b303 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6453 = getelementptr inbounds %struct.GPR, %struct.GPR* %6452, i32 0, i32 33
  %6454 = getelementptr inbounds %struct.Reg, %struct.Reg* %6453, i32 0, i32 0
  %PC.i942 = bitcast %union.anon* %6454 to i64*
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6456 = getelementptr inbounds %struct.GPR, %struct.GPR* %6455, i32 0, i32 11
  %6457 = getelementptr inbounds %struct.Reg, %struct.Reg* %6456, i32 0, i32 0
  %RDI.i943 = bitcast %union.anon* %6457 to i64*
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6459 = getelementptr inbounds %struct.GPR, %struct.GPR* %6458, i32 0, i32 15
  %6460 = getelementptr inbounds %struct.Reg, %struct.Reg* %6459, i32 0, i32 0
  %RBP.i944 = bitcast %union.anon* %6460 to i64*
  %6461 = load i64, i64* %RBP.i944
  %6462 = sub i64 %6461, 12456
  %6463 = load i64, i64* %PC.i942
  %6464 = add i64 %6463, 7
  store i64 %6464, i64* %PC.i942
  store i64 %6462, i64* %RDI.i943, align 8
  store %struct.Memory* %loadMem_41b303, %struct.Memory** %MEMORY
  %loadMem_41b30a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6466 = getelementptr inbounds %struct.GPR, %struct.GPR* %6465, i32 0, i32 33
  %6467 = getelementptr inbounds %struct.Reg, %struct.Reg* %6466, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %6467 to i64*
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6469 = getelementptr inbounds %struct.GPR, %struct.GPR* %6468, i32 0, i32 1
  %6470 = getelementptr inbounds %struct.Reg, %struct.Reg* %6469, i32 0, i32 0
  %RAX.i941 = bitcast %union.anon* %6470 to i64*
  %6471 = load i64, i64* %PC.i940
  %6472 = add i64 %6471, 5
  store i64 %6472, i64* %PC.i940
  store i64 100, i64* %RAX.i941, align 8
  store %struct.Memory* %loadMem_41b30a, %struct.Memory** %MEMORY
  %loadMem_41b30f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6474 = getelementptr inbounds %struct.GPR, %struct.GPR* %6473, i32 0, i32 33
  %6475 = getelementptr inbounds %struct.Reg, %struct.Reg* %6474, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %6475 to i64*
  %6476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6477 = getelementptr inbounds %struct.GPR, %struct.GPR* %6476, i32 0, i32 5
  %6478 = getelementptr inbounds %struct.Reg, %struct.Reg* %6477, i32 0, i32 0
  %RCX.i939 = bitcast %union.anon* %6478 to i64*
  %6479 = load i64, i64* %PC.i938
  %6480 = add i64 %6479, 5
  store i64 %6480, i64* %PC.i938
  store i64 35, i64* %RCX.i939, align 8
  store %struct.Memory* %loadMem_41b30f, %struct.Memory** %MEMORY
  %loadMem_41b314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6482 = getelementptr inbounds %struct.GPR, %struct.GPR* %6481, i32 0, i32 33
  %6483 = getelementptr inbounds %struct.Reg, %struct.Reg* %6482, i32 0, i32 0
  %PC.i937 = bitcast %union.anon* %6483 to i64*
  %6484 = load i64, i64* %PC.i937
  %6485 = add i64 %6484, 11
  store i64 %6485, i64* %PC.i937
  store i32 0, i32* bitcast (%G_0x8644f4_type* @G_0x8644f4 to i32*)
  store %struct.Memory* %loadMem_41b314, %struct.Memory** %MEMORY
  %loadMem_41b31f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6487 = getelementptr inbounds %struct.GPR, %struct.GPR* %6486, i32 0, i32 33
  %6488 = getelementptr inbounds %struct.Reg, %struct.Reg* %6487, i32 0, i32 0
  %PC.i934 = bitcast %union.anon* %6488 to i64*
  %6489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6490 = getelementptr inbounds %struct.GPR, %struct.GPR* %6489, i32 0, i32 7
  %6491 = getelementptr inbounds %struct.Reg, %struct.Reg* %6490, i32 0, i32 0
  %RDX.i935 = bitcast %union.anon* %6491 to i64*
  %6492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6493 = getelementptr inbounds %struct.GPR, %struct.GPR* %6492, i32 0, i32 15
  %6494 = getelementptr inbounds %struct.Reg, %struct.Reg* %6493, i32 0, i32 0
  %RBP.i936 = bitcast %union.anon* %6494 to i64*
  %6495 = load i64, i64* %RBP.i936
  %6496 = sub i64 %6495, 92
  %6497 = load i64, i64* %PC.i934
  %6498 = add i64 %6497, 3
  store i64 %6498, i64* %PC.i934
  %6499 = inttoptr i64 %6496 to i32*
  %6500 = load i32, i32* %6499
  %6501 = zext i32 %6500 to i64
  store i64 %6501, i64* %RDX.i935, align 8
  store %struct.Memory* %loadMem_41b31f, %struct.Memory** %MEMORY
  %loadMem_41b322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6503 = getelementptr inbounds %struct.GPR, %struct.GPR* %6502, i32 0, i32 33
  %6504 = getelementptr inbounds %struct.Reg, %struct.Reg* %6503, i32 0, i32 0
  %PC.i933 = bitcast %union.anon* %6504 to i64*
  %6505 = load i64, i64* %PC.i933
  %6506 = add i64 %6505, 8
  store i64 %6506, i64* %PC.i933
  %6507 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %6508 = sub i32 %6507, 2
  %6509 = icmp ult i32 %6507, 2
  %6510 = zext i1 %6509 to i8
  %6511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6510, i8* %6511, align 1
  %6512 = and i32 %6508, 255
  %6513 = call i32 @llvm.ctpop.i32(i32 %6512)
  %6514 = trunc i32 %6513 to i8
  %6515 = and i8 %6514, 1
  %6516 = xor i8 %6515, 1
  %6517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6516, i8* %6517, align 1
  %6518 = xor i32 %6507, 2
  %6519 = xor i32 %6518, %6508
  %6520 = lshr i32 %6519, 4
  %6521 = trunc i32 %6520 to i8
  %6522 = and i8 %6521, 1
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6522, i8* %6523, align 1
  %6524 = icmp eq i32 %6508, 0
  %6525 = zext i1 %6524 to i8
  %6526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6525, i8* %6526, align 1
  %6527 = lshr i32 %6508, 31
  %6528 = trunc i32 %6527 to i8
  %6529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6528, i8* %6529, align 1
  %6530 = lshr i32 %6507, 31
  %6531 = xor i32 %6527, %6530
  %6532 = add i32 %6531, %6530
  %6533 = icmp eq i32 %6532, 2
  %6534 = zext i1 %6533 to i8
  %6535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6534, i8* %6535, align 1
  store %struct.Memory* %loadMem_41b322, %struct.Memory** %MEMORY
  %loadMem_41b32a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6537 = getelementptr inbounds %struct.GPR, %struct.GPR* %6536, i32 0, i32 33
  %6538 = getelementptr inbounds %struct.Reg, %struct.Reg* %6537, i32 0, i32 0
  %PC.i930 = bitcast %union.anon* %6538 to i64*
  %6539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6540 = getelementptr inbounds %struct.GPR, %struct.GPR* %6539, i32 0, i32 1
  %6541 = getelementptr inbounds %struct.Reg, %struct.Reg* %6540, i32 0, i32 0
  %EAX.i931 = bitcast %union.anon* %6541 to i32*
  %6542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6543 = getelementptr inbounds %struct.GPR, %struct.GPR* %6542, i32 0, i32 9
  %6544 = getelementptr inbounds %struct.Reg, %struct.Reg* %6543, i32 0, i32 0
  %RSI.i932 = bitcast %union.anon* %6544 to i64*
  %6545 = load i32, i32* %EAX.i931
  %6546 = zext i32 %6545 to i64
  %6547 = load i64, i64* %PC.i930
  %6548 = add i64 %6547, 2
  store i64 %6548, i64* %PC.i930
  %6549 = and i64 %6546, 4294967295
  store i64 %6549, i64* %RSI.i932, align 8
  store %struct.Memory* %loadMem_41b32a, %struct.Memory** %MEMORY
  %loadMem_41b32c = load %struct.Memory*, %struct.Memory** %MEMORY
  %6550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6551 = getelementptr inbounds %struct.GPR, %struct.GPR* %6550, i32 0, i32 33
  %6552 = getelementptr inbounds %struct.Reg, %struct.Reg* %6551, i32 0, i32 0
  %PC.i927 = bitcast %union.anon* %6552 to i64*
  %6553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6554 = getelementptr inbounds %struct.GPR, %struct.GPR* %6553, i32 0, i32 5
  %6555 = getelementptr inbounds %struct.Reg, %struct.Reg* %6554, i32 0, i32 0
  %ECX.i928 = bitcast %union.anon* %6555 to i32*
  %6556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6557 = getelementptr inbounds %struct.GPR, %struct.GPR* %6556, i32 0, i32 9
  %6558 = getelementptr inbounds %struct.Reg, %struct.Reg* %6557, i32 0, i32 0
  %RSI.i929 = bitcast %union.anon* %6558 to i64*
  %6559 = load i32, i32* %ECX.i928
  %6560 = zext i32 %6559 to i64
  %6561 = load i64, i64* %PC.i927
  %6562 = add i64 %6561, 3
  store i64 %6562, i64* %PC.i927
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6564 = load i8, i8* %6563, align 1
  %6565 = icmp ne i8 %6564, 0
  %6566 = load i64, i64* %RSI.i929, align 8
  %6567 = select i1 %6565, i64 %6560, i64 %6566
  %6568 = and i64 %6567, 4294967295
  store i64 %6568, i64* %RSI.i929, align 8
  store %struct.Memory* %loadMem_41b32c, %struct.Memory** %MEMORY
  %loadMem_41b32f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6570 = getelementptr inbounds %struct.GPR, %struct.GPR* %6569, i32 0, i32 33
  %6571 = getelementptr inbounds %struct.Reg, %struct.Reg* %6570, i32 0, i32 0
  %PC.i925 = bitcast %union.anon* %6571 to i64*
  %6572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6573 = getelementptr inbounds %struct.GPR, %struct.GPR* %6572, i32 0, i32 9
  %6574 = getelementptr inbounds %struct.Reg, %struct.Reg* %6573, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %6574 to i32*
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6576 = getelementptr inbounds %struct.GPR, %struct.GPR* %6575, i32 0, i32 7
  %6577 = getelementptr inbounds %struct.Reg, %struct.Reg* %6576, i32 0, i32 0
  %RDX.i926 = bitcast %union.anon* %6577 to i64*
  %6578 = load i64, i64* %RDX.i926
  %6579 = load i32, i32* %ESI.i
  %6580 = zext i32 %6579 to i64
  %6581 = load i64, i64* %PC.i925
  %6582 = add i64 %6581, 2
  store i64 %6582, i64* %PC.i925
  %6583 = trunc i64 %6578 to i32
  %6584 = sub i32 %6583, %6579
  %6585 = zext i32 %6584 to i64
  store i64 %6585, i64* %RDX.i926, align 8
  %6586 = icmp ult i32 %6583, %6579
  %6587 = zext i1 %6586 to i8
  %6588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6587, i8* %6588, align 1
  %6589 = and i32 %6584, 255
  %6590 = call i32 @llvm.ctpop.i32(i32 %6589)
  %6591 = trunc i32 %6590 to i8
  %6592 = and i8 %6591, 1
  %6593 = xor i8 %6592, 1
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6593, i8* %6594, align 1
  %6595 = xor i64 %6580, %6578
  %6596 = trunc i64 %6595 to i32
  %6597 = xor i32 %6596, %6584
  %6598 = lshr i32 %6597, 4
  %6599 = trunc i32 %6598 to i8
  %6600 = and i8 %6599, 1
  %6601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6600, i8* %6601, align 1
  %6602 = icmp eq i32 %6584, 0
  %6603 = zext i1 %6602 to i8
  %6604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6603, i8* %6604, align 1
  %6605 = lshr i32 %6584, 31
  %6606 = trunc i32 %6605 to i8
  %6607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6606, i8* %6607, align 1
  %6608 = lshr i32 %6583, 31
  %6609 = lshr i32 %6579, 31
  %6610 = xor i32 %6609, %6608
  %6611 = xor i32 %6605, %6608
  %6612 = add i32 %6611, %6610
  %6613 = icmp eq i32 %6612, 2
  %6614 = zext i1 %6613 to i8
  %6615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6614, i8* %6615, align 1
  store %struct.Memory* %loadMem_41b32f, %struct.Memory** %MEMORY
  %loadMem_41b331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6617 = getelementptr inbounds %struct.GPR, %struct.GPR* %6616, i32 0, i32 33
  %6618 = getelementptr inbounds %struct.Reg, %struct.Reg* %6617, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %6618 to i64*
  %6619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6620 = getelementptr inbounds %struct.GPR, %struct.GPR* %6619, i32 0, i32 7
  %6621 = getelementptr inbounds %struct.Reg, %struct.Reg* %6620, i32 0, i32 0
  %EDX.i923 = bitcast %union.anon* %6621 to i32*
  %6622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6623 = getelementptr inbounds %struct.GPR, %struct.GPR* %6622, i32 0, i32 15
  %6624 = getelementptr inbounds %struct.Reg, %struct.Reg* %6623, i32 0, i32 0
  %RBP.i924 = bitcast %union.anon* %6624 to i64*
  %6625 = load i64, i64* %RBP.i924
  %6626 = sub i64 %6625, 100
  %6627 = load i32, i32* %EDX.i923
  %6628 = zext i32 %6627 to i64
  %6629 = load i64, i64* %PC.i922
  %6630 = add i64 %6629, 3
  store i64 %6630, i64* %PC.i922
  %6631 = inttoptr i64 %6626 to i32*
  store i32 %6627, i32* %6631
  store %struct.Memory* %loadMem_41b331, %struct.Memory** %MEMORY
  %loadMem_41b334 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6633 = getelementptr inbounds %struct.GPR, %struct.GPR* %6632, i32 0, i32 33
  %6634 = getelementptr inbounds %struct.Reg, %struct.Reg* %6633, i32 0, i32 0
  %PC.i919 = bitcast %union.anon* %6634 to i64*
  %6635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6636 = getelementptr inbounds %struct.GPR, %struct.GPR* %6635, i32 0, i32 7
  %6637 = getelementptr inbounds %struct.Reg, %struct.Reg* %6636, i32 0, i32 0
  %RDX.i920 = bitcast %union.anon* %6637 to i64*
  %6638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6639 = getelementptr inbounds %struct.GPR, %struct.GPR* %6638, i32 0, i32 15
  %6640 = getelementptr inbounds %struct.Reg, %struct.Reg* %6639, i32 0, i32 0
  %RBP.i921 = bitcast %union.anon* %6640 to i64*
  %6641 = load i64, i64* %RBP.i921
  %6642 = sub i64 %6641, 92
  %6643 = load i64, i64* %PC.i919
  %6644 = add i64 %6643, 3
  store i64 %6644, i64* %PC.i919
  %6645 = inttoptr i64 %6642 to i32*
  %6646 = load i32, i32* %6645
  %6647 = zext i32 %6646 to i64
  store i64 %6647, i64* %RDX.i920, align 8
  store %struct.Memory* %loadMem_41b334, %struct.Memory** %MEMORY
  %loadMem_41b337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6649 = getelementptr inbounds %struct.GPR, %struct.GPR* %6648, i32 0, i32 33
  %6650 = getelementptr inbounds %struct.Reg, %struct.Reg* %6649, i32 0, i32 0
  %PC.i918 = bitcast %union.anon* %6650 to i64*
  %6651 = load i64, i64* %PC.i918
  %6652 = add i64 %6651, 8
  store i64 %6652, i64* %PC.i918
  %6653 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %6654 = sub i32 %6653, 2
  %6655 = icmp ult i32 %6653, 2
  %6656 = zext i1 %6655 to i8
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6656, i8* %6657, align 1
  %6658 = and i32 %6654, 255
  %6659 = call i32 @llvm.ctpop.i32(i32 %6658)
  %6660 = trunc i32 %6659 to i8
  %6661 = and i8 %6660, 1
  %6662 = xor i8 %6661, 1
  %6663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6662, i8* %6663, align 1
  %6664 = xor i32 %6653, 2
  %6665 = xor i32 %6664, %6654
  %6666 = lshr i32 %6665, 4
  %6667 = trunc i32 %6666 to i8
  %6668 = and i8 %6667, 1
  %6669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6668, i8* %6669, align 1
  %6670 = icmp eq i32 %6654, 0
  %6671 = zext i1 %6670 to i8
  %6672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6671, i8* %6672, align 1
  %6673 = lshr i32 %6654, 31
  %6674 = trunc i32 %6673 to i8
  %6675 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6674, i8* %6675, align 1
  %6676 = lshr i32 %6653, 31
  %6677 = xor i32 %6673, %6676
  %6678 = add i32 %6677, %6676
  %6679 = icmp eq i32 %6678, 2
  %6680 = zext i1 %6679 to i8
  %6681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6680, i8* %6681, align 1
  store %struct.Memory* %loadMem_41b337, %struct.Memory** %MEMORY
  %loadMem_41b33f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6683 = getelementptr inbounds %struct.GPR, %struct.GPR* %6682, i32 0, i32 33
  %6684 = getelementptr inbounds %struct.Reg, %struct.Reg* %6683, i32 0, i32 0
  %PC.i915 = bitcast %union.anon* %6684 to i64*
  %6685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6686 = getelementptr inbounds %struct.GPR, %struct.GPR* %6685, i32 0, i32 5
  %6687 = getelementptr inbounds %struct.Reg, %struct.Reg* %6686, i32 0, i32 0
  %ECX.i916 = bitcast %union.anon* %6687 to i32*
  %6688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6689 = getelementptr inbounds %struct.GPR, %struct.GPR* %6688, i32 0, i32 1
  %6690 = getelementptr inbounds %struct.Reg, %struct.Reg* %6689, i32 0, i32 0
  %RAX.i917 = bitcast %union.anon* %6690 to i64*
  %6691 = load i32, i32* %ECX.i916
  %6692 = zext i32 %6691 to i64
  %6693 = load i64, i64* %PC.i915
  %6694 = add i64 %6693, 3
  store i64 %6694, i64* %PC.i915
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6696 = load i8, i8* %6695, align 1
  %6697 = icmp ne i8 %6696, 0
  %6698 = load i64, i64* %RAX.i917, align 8
  %6699 = select i1 %6697, i64 %6692, i64 %6698
  %6700 = and i64 %6699, 4294967295
  store i64 %6700, i64* %RAX.i917, align 8
  store %struct.Memory* %loadMem_41b33f, %struct.Memory** %MEMORY
  %loadMem_41b342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6702 = getelementptr inbounds %struct.GPR, %struct.GPR* %6701, i32 0, i32 33
  %6703 = getelementptr inbounds %struct.Reg, %struct.Reg* %6702, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %6703 to i64*
  %6704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6705 = getelementptr inbounds %struct.GPR, %struct.GPR* %6704, i32 0, i32 1
  %6706 = getelementptr inbounds %struct.Reg, %struct.Reg* %6705, i32 0, i32 0
  %EAX.i913 = bitcast %union.anon* %6706 to i32*
  %6707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6708 = getelementptr inbounds %struct.GPR, %struct.GPR* %6707, i32 0, i32 7
  %6709 = getelementptr inbounds %struct.Reg, %struct.Reg* %6708, i32 0, i32 0
  %RDX.i914 = bitcast %union.anon* %6709 to i64*
  %6710 = load i64, i64* %RDX.i914
  %6711 = load i32, i32* %EAX.i913
  %6712 = zext i32 %6711 to i64
  %6713 = load i64, i64* %PC.i912
  %6714 = add i64 %6713, 2
  store i64 %6714, i64* %PC.i912
  %6715 = trunc i64 %6710 to i32
  %6716 = add i32 %6711, %6715
  %6717 = zext i32 %6716 to i64
  store i64 %6717, i64* %RDX.i914, align 8
  %6718 = icmp ult i32 %6716, %6715
  %6719 = icmp ult i32 %6716, %6711
  %6720 = or i1 %6718, %6719
  %6721 = zext i1 %6720 to i8
  %6722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6721, i8* %6722, align 1
  %6723 = and i32 %6716, 255
  %6724 = call i32 @llvm.ctpop.i32(i32 %6723)
  %6725 = trunc i32 %6724 to i8
  %6726 = and i8 %6725, 1
  %6727 = xor i8 %6726, 1
  %6728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6727, i8* %6728, align 1
  %6729 = xor i64 %6712, %6710
  %6730 = trunc i64 %6729 to i32
  %6731 = xor i32 %6730, %6716
  %6732 = lshr i32 %6731, 4
  %6733 = trunc i32 %6732 to i8
  %6734 = and i8 %6733, 1
  %6735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6734, i8* %6735, align 1
  %6736 = icmp eq i32 %6716, 0
  %6737 = zext i1 %6736 to i8
  %6738 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6737, i8* %6738, align 1
  %6739 = lshr i32 %6716, 31
  %6740 = trunc i32 %6739 to i8
  %6741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6740, i8* %6741, align 1
  %6742 = lshr i32 %6715, 31
  %6743 = lshr i32 %6711, 31
  %6744 = xor i32 %6739, %6742
  %6745 = xor i32 %6739, %6743
  %6746 = add i32 %6744, %6745
  %6747 = icmp eq i32 %6746, 2
  %6748 = zext i1 %6747 to i8
  %6749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6748, i8* %6749, align 1
  store %struct.Memory* %loadMem_41b342, %struct.Memory** %MEMORY
  %loadMem_41b344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6751 = getelementptr inbounds %struct.GPR, %struct.GPR* %6750, i32 0, i32 33
  %6752 = getelementptr inbounds %struct.Reg, %struct.Reg* %6751, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %6752 to i64*
  %6753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6754 = getelementptr inbounds %struct.GPR, %struct.GPR* %6753, i32 0, i32 7
  %6755 = getelementptr inbounds %struct.Reg, %struct.Reg* %6754, i32 0, i32 0
  %EDX.i910 = bitcast %union.anon* %6755 to i32*
  %6756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6757 = getelementptr inbounds %struct.GPR, %struct.GPR* %6756, i32 0, i32 15
  %6758 = getelementptr inbounds %struct.Reg, %struct.Reg* %6757, i32 0, i32 0
  %RBP.i911 = bitcast %union.anon* %6758 to i64*
  %6759 = load i64, i64* %RBP.i911
  %6760 = sub i64 %6759, 104
  %6761 = load i32, i32* %EDX.i910
  %6762 = zext i32 %6761 to i64
  %6763 = load i64, i64* %PC.i909
  %6764 = add i64 %6763, 3
  store i64 %6764, i64* %PC.i909
  %6765 = inttoptr i64 %6760 to i32*
  store i32 %6761, i32* %6765
  store %struct.Memory* %loadMem_41b344, %struct.Memory** %MEMORY
  %loadMem_41b347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6767 = getelementptr inbounds %struct.GPR, %struct.GPR* %6766, i32 0, i32 33
  %6768 = getelementptr inbounds %struct.Reg, %struct.Reg* %6767, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %6768 to i64*
  %6769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6770 = getelementptr inbounds %struct.GPR, %struct.GPR* %6769, i32 0, i32 9
  %6771 = getelementptr inbounds %struct.Reg, %struct.Reg* %6770, i32 0, i32 0
  %RSI.i907 = bitcast %union.anon* %6771 to i64*
  %6772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6773 = getelementptr inbounds %struct.GPR, %struct.GPR* %6772, i32 0, i32 15
  %6774 = getelementptr inbounds %struct.Reg, %struct.Reg* %6773, i32 0, i32 0
  %RBP.i908 = bitcast %union.anon* %6774 to i64*
  %6775 = load i64, i64* %RBP.i908
  %6776 = sub i64 %6775, 100
  %6777 = load i64, i64* %PC.i906
  %6778 = add i64 %6777, 3
  store i64 %6778, i64* %PC.i906
  %6779 = inttoptr i64 %6776 to i32*
  %6780 = load i32, i32* %6779
  %6781 = zext i32 %6780 to i64
  store i64 %6781, i64* %RSI.i907, align 8
  store %struct.Memory* %loadMem_41b347, %struct.Memory** %MEMORY
  %loadMem_41b34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6783 = getelementptr inbounds %struct.GPR, %struct.GPR* %6782, i32 0, i32 33
  %6784 = getelementptr inbounds %struct.Reg, %struct.Reg* %6783, i32 0, i32 0
  %PC.i903 = bitcast %union.anon* %6784 to i64*
  %6785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6786 = getelementptr inbounds %struct.GPR, %struct.GPR* %6785, i32 0, i32 7
  %6787 = getelementptr inbounds %struct.Reg, %struct.Reg* %6786, i32 0, i32 0
  %RDX.i904 = bitcast %union.anon* %6787 to i64*
  %6788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6789 = getelementptr inbounds %struct.GPR, %struct.GPR* %6788, i32 0, i32 15
  %6790 = getelementptr inbounds %struct.Reg, %struct.Reg* %6789, i32 0, i32 0
  %RBP.i905 = bitcast %union.anon* %6790 to i64*
  %6791 = load i64, i64* %RBP.i905
  %6792 = sub i64 %6791, 104
  %6793 = load i64, i64* %PC.i903
  %6794 = add i64 %6793, 3
  store i64 %6794, i64* %PC.i903
  %6795 = inttoptr i64 %6792 to i32*
  %6796 = load i32, i32* %6795
  %6797 = zext i32 %6796 to i64
  store i64 %6797, i64* %RDX.i904, align 8
  store %struct.Memory* %loadMem_41b34a, %struct.Memory** %MEMORY
  %loadMem_41b34d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6799 = getelementptr inbounds %struct.GPR, %struct.GPR* %6798, i32 0, i32 33
  %6800 = getelementptr inbounds %struct.Reg, %struct.Reg* %6799, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %6800 to i64*
  %6801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6802 = getelementptr inbounds %struct.GPR, %struct.GPR* %6801, i32 0, i32 5
  %6803 = getelementptr inbounds %struct.Reg, %struct.Reg* %6802, i32 0, i32 0
  %RCX.i902 = bitcast %union.anon* %6803 to i64*
  %6804 = load i64, i64* %PC.i901
  %6805 = add i64 %6804, 7
  store i64 %6805, i64* %PC.i901
  %6806 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %6807 = zext i32 %6806 to i64
  store i64 %6807, i64* %RCX.i902, align 8
  store %struct.Memory* %loadMem_41b34d, %struct.Memory** %MEMORY
  %loadMem1_41b354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6809 = getelementptr inbounds %struct.GPR, %struct.GPR* %6808, i32 0, i32 33
  %6810 = getelementptr inbounds %struct.Reg, %struct.Reg* %6809, i32 0, i32 0
  %PC.i900 = bitcast %union.anon* %6810 to i64*
  %6811 = load i64, i64* %PC.i900
  %6812 = add i64 %6811, -8036
  %6813 = load i64, i64* %PC.i900
  %6814 = add i64 %6813, 5
  %6815 = load i64, i64* %PC.i900
  %6816 = add i64 %6815, 5
  store i64 %6816, i64* %PC.i900
  %6817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6818 = load i64, i64* %6817, align 8
  %6819 = add i64 %6818, -8
  %6820 = inttoptr i64 %6819 to i64*
  store i64 %6814, i64* %6820
  store i64 %6819, i64* %6817, align 8
  %6821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6812, i64* %6821, align 8
  store %struct.Memory* %loadMem1_41b354, %struct.Memory** %MEMORY
  %loadMem2_41b354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b354 = load i64, i64* %3
  %call2_41b354 = call %struct.Memory* @sub_4193f0.search_root(%struct.State* %0, i64 %loadPC_41b354, %struct.Memory* %loadMem2_41b354)
  store %struct.Memory* %call2_41b354, %struct.Memory** %MEMORY
  %loadMem_41b359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6823 = getelementptr inbounds %struct.GPR, %struct.GPR* %6822, i32 0, i32 33
  %6824 = getelementptr inbounds %struct.Reg, %struct.Reg* %6823, i32 0, i32 0
  %PC.i897 = bitcast %union.anon* %6824 to i64*
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6826 = getelementptr inbounds %struct.GPR, %struct.GPR* %6825, i32 0, i32 11
  %6827 = getelementptr inbounds %struct.Reg, %struct.Reg* %6826, i32 0, i32 0
  %RDI.i898 = bitcast %union.anon* %6827 to i64*
  %6828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6829 = getelementptr inbounds %struct.GPR, %struct.GPR* %6828, i32 0, i32 15
  %6830 = getelementptr inbounds %struct.Reg, %struct.Reg* %6829, i32 0, i32 0
  %RBP.i899 = bitcast %union.anon* %6830 to i64*
  %6831 = load i64, i64* %RBP.i899
  %6832 = sub i64 %6831, 12456
  %6833 = load i64, i64* %PC.i897
  %6834 = add i64 %6833, 7
  store i64 %6834, i64* %PC.i897
  %6835 = inttoptr i64 %6832 to i64*
  %6836 = load i64, i64* %6835
  store i64 %6836, i64* %RDI.i898, align 8
  store %struct.Memory* %loadMem_41b359, %struct.Memory** %MEMORY
  %loadMem_41b360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6838 = getelementptr inbounds %struct.GPR, %struct.GPR* %6837, i32 0, i32 33
  %6839 = getelementptr inbounds %struct.Reg, %struct.Reg* %6838, i32 0, i32 0
  %PC.i894 = bitcast %union.anon* %6839 to i64*
  %6840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6841 = getelementptr inbounds %struct.GPR, %struct.GPR* %6840, i32 0, i32 11
  %6842 = getelementptr inbounds %struct.Reg, %struct.Reg* %6841, i32 0, i32 0
  %RDI.i895 = bitcast %union.anon* %6842 to i64*
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6844 = getelementptr inbounds %struct.GPR, %struct.GPR* %6843, i32 0, i32 15
  %6845 = getelementptr inbounds %struct.Reg, %struct.Reg* %6844, i32 0, i32 0
  %RBP.i896 = bitcast %union.anon* %6845 to i64*
  %6846 = load i64, i64* %RBP.i896
  %6847 = sub i64 %6846, 48
  %6848 = load i64, i64* %RDI.i895
  %6849 = load i64, i64* %PC.i894
  %6850 = add i64 %6849, 4
  store i64 %6850, i64* %PC.i894
  %6851 = inttoptr i64 %6847 to i64*
  store i64 %6848, i64* %6851
  store %struct.Memory* %loadMem_41b360, %struct.Memory** %MEMORY
  %loadMem_41b364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6853 = getelementptr inbounds %struct.GPR, %struct.GPR* %6852, i32 0, i32 33
  %6854 = getelementptr inbounds %struct.Reg, %struct.Reg* %6853, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %6854 to i64*
  %6855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6856 = getelementptr inbounds %struct.GPR, %struct.GPR* %6855, i32 0, i32 11
  %6857 = getelementptr inbounds %struct.Reg, %struct.Reg* %6856, i32 0, i32 0
  %RDI.i892 = bitcast %union.anon* %6857 to i64*
  %6858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6859 = getelementptr inbounds %struct.GPR, %struct.GPR* %6858, i32 0, i32 15
  %6860 = getelementptr inbounds %struct.Reg, %struct.Reg* %6859, i32 0, i32 0
  %RBP.i893 = bitcast %union.anon* %6860 to i64*
  %6861 = load i64, i64* %RBP.i893
  %6862 = sub i64 %6861, 12448
  %6863 = load i64, i64* %PC.i891
  %6864 = add i64 %6863, 7
  store i64 %6864, i64* %PC.i891
  %6865 = inttoptr i64 %6862 to i64*
  %6866 = load i64, i64* %6865
  store i64 %6866, i64* %RDI.i892, align 8
  store %struct.Memory* %loadMem_41b364, %struct.Memory** %MEMORY
  %loadMem_41b36b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6868 = getelementptr inbounds %struct.GPR, %struct.GPR* %6867, i32 0, i32 33
  %6869 = getelementptr inbounds %struct.Reg, %struct.Reg* %6868, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %6869 to i64*
  %6870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6871 = getelementptr inbounds %struct.GPR, %struct.GPR* %6870, i32 0, i32 11
  %6872 = getelementptr inbounds %struct.Reg, %struct.Reg* %6871, i32 0, i32 0
  %RDI.i889 = bitcast %union.anon* %6872 to i64*
  %6873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6874 = getelementptr inbounds %struct.GPR, %struct.GPR* %6873, i32 0, i32 15
  %6875 = getelementptr inbounds %struct.Reg, %struct.Reg* %6874, i32 0, i32 0
  %RBP.i890 = bitcast %union.anon* %6875 to i64*
  %6876 = load i64, i64* %RBP.i890
  %6877 = sub i64 %6876, 40
  %6878 = load i64, i64* %RDI.i889
  %6879 = load i64, i64* %PC.i888
  %6880 = add i64 %6879, 4
  store i64 %6880, i64* %PC.i888
  %6881 = inttoptr i64 %6877 to i64*
  store i64 %6878, i64* %6881
  store %struct.Memory* %loadMem_41b36b, %struct.Memory** %MEMORY
  %loadMem_41b36f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6883 = getelementptr inbounds %struct.GPR, %struct.GPR* %6882, i32 0, i32 33
  %6884 = getelementptr inbounds %struct.Reg, %struct.Reg* %6883, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %6884 to i64*
  %6885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6886 = getelementptr inbounds %struct.GPR, %struct.GPR* %6885, i32 0, i32 11
  %6887 = getelementptr inbounds %struct.Reg, %struct.Reg* %6886, i32 0, i32 0
  %RDI.i886 = bitcast %union.anon* %6887 to i64*
  %6888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6889 = getelementptr inbounds %struct.GPR, %struct.GPR* %6888, i32 0, i32 15
  %6890 = getelementptr inbounds %struct.Reg, %struct.Reg* %6889, i32 0, i32 0
  %RBP.i887 = bitcast %union.anon* %6890 to i64*
  %6891 = load i64, i64* %RBP.i887
  %6892 = sub i64 %6891, 12440
  %6893 = load i64, i64* %PC.i885
  %6894 = add i64 %6893, 7
  store i64 %6894, i64* %PC.i885
  %6895 = inttoptr i64 %6892 to i64*
  %6896 = load i64, i64* %6895
  store i64 %6896, i64* %RDI.i886, align 8
  store %struct.Memory* %loadMem_41b36f, %struct.Memory** %MEMORY
  %loadMem_41b376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6898 = getelementptr inbounds %struct.GPR, %struct.GPR* %6897, i32 0, i32 33
  %6899 = getelementptr inbounds %struct.Reg, %struct.Reg* %6898, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %6899 to i64*
  %6900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6901 = getelementptr inbounds %struct.GPR, %struct.GPR* %6900, i32 0, i32 11
  %6902 = getelementptr inbounds %struct.Reg, %struct.Reg* %6901, i32 0, i32 0
  %RDI.i883 = bitcast %union.anon* %6902 to i64*
  %6903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6904 = getelementptr inbounds %struct.GPR, %struct.GPR* %6903, i32 0, i32 15
  %6905 = getelementptr inbounds %struct.Reg, %struct.Reg* %6904, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %6905 to i64*
  %6906 = load i64, i64* %RBP.i884
  %6907 = sub i64 %6906, 32
  %6908 = load i64, i64* %RDI.i883
  %6909 = load i64, i64* %PC.i882
  %6910 = add i64 %6909, 4
  store i64 %6910, i64* %PC.i882
  %6911 = inttoptr i64 %6907 to i64*
  store i64 %6908, i64* %6911
  store %struct.Memory* %loadMem_41b376, %struct.Memory** %MEMORY
  %loadMem_41b37a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6913 = getelementptr inbounds %struct.GPR, %struct.GPR* %6912, i32 0, i32 33
  %6914 = getelementptr inbounds %struct.Reg, %struct.Reg* %6913, i32 0, i32 0
  %PC.i881 = bitcast %union.anon* %6914 to i64*
  %6915 = load i64, i64* %PC.i881
  %6916 = add i64 %6915, 8
  store i64 %6916, i64* %PC.i881
  %6917 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %6918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6918, align 1
  %6919 = and i32 %6917, 255
  %6920 = call i32 @llvm.ctpop.i32(i32 %6919)
  %6921 = trunc i32 %6920 to i8
  %6922 = and i8 %6921, 1
  %6923 = xor i8 %6922, 1
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6923, i8* %6924, align 1
  %6925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6925, align 1
  %6926 = icmp eq i32 %6917, 0
  %6927 = zext i1 %6926 to i8
  %6928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6927, i8* %6928, align 1
  %6929 = lshr i32 %6917, 31
  %6930 = trunc i32 %6929 to i8
  %6931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6930, i8* %6931, align 1
  %6932 = lshr i32 %6917, 31
  %6933 = xor i32 %6929, %6932
  %6934 = add i32 %6933, %6932
  %6935 = icmp eq i32 %6934, 2
  %6936 = zext i1 %6935 to i8
  %6937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6936, i8* %6937, align 1
  store %struct.Memory* %loadMem_41b37a, %struct.Memory** %MEMORY
  %loadMem_41b382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6939 = getelementptr inbounds %struct.GPR, %struct.GPR* %6938, i32 0, i32 33
  %6940 = getelementptr inbounds %struct.Reg, %struct.Reg* %6939, i32 0, i32 0
  %PC.i880 = bitcast %union.anon* %6940 to i64*
  %6941 = load i64, i64* %PC.i880
  %6942 = add i64 %6941, 11
  %6943 = load i64, i64* %PC.i880
  %6944 = add i64 %6943, 6
  %6945 = load i64, i64* %PC.i880
  %6946 = add i64 %6945, 6
  store i64 %6946, i64* %PC.i880
  %6947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6948 = load i8, i8* %6947, align 1
  store i8 %6948, i8* %BRANCH_TAKEN, align 1
  %6949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6950 = icmp ne i8 %6948, 0
  %6951 = select i1 %6950, i64 %6942, i64 %6944
  store i64 %6951, i64* %6949, align 8
  store %struct.Memory* %loadMem_41b382, %struct.Memory** %MEMORY
  %loadBr_41b382 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b382 = icmp eq i8 %loadBr_41b382, 1
  br i1 %cmpBr_41b382, label %block_.L_41b38d, label %block_41b388

block_41b388:                                     ; preds = %block_.L_41b303
  %loadMem_41b388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6953 = getelementptr inbounds %struct.GPR, %struct.GPR* %6952, i32 0, i32 33
  %6954 = getelementptr inbounds %struct.Reg, %struct.Reg* %6953, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %6954 to i64*
  %6955 = load i64, i64* %PC.i879
  %6956 = add i64 %6955, 837
  %6957 = load i64, i64* %PC.i879
  %6958 = add i64 %6957, 5
  store i64 %6958, i64* %PC.i879
  %6959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6956, i64* %6959, align 8
  store %struct.Memory* %loadMem_41b388, %struct.Memory** %MEMORY
  br label %block_.L_41b6cd

block_.L_41b38d:                                  ; preds = %block_.L_41b303
  %loadMem_41b38d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6961 = getelementptr inbounds %struct.GPR, %struct.GPR* %6960, i32 0, i32 33
  %6962 = getelementptr inbounds %struct.Reg, %struct.Reg* %6961, i32 0, i32 0
  %PC.i877 = bitcast %union.anon* %6962 to i64*
  %6963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6964 = getelementptr inbounds %struct.GPR, %struct.GPR* %6963, i32 0, i32 1
  %6965 = getelementptr inbounds %struct.Reg, %struct.Reg* %6964, i32 0, i32 0
  %RAX.i878 = bitcast %union.anon* %6965 to i64*
  %6966 = load i64, i64* %PC.i877
  %6967 = add i64 %6966, 7
  store i64 %6967, i64* %PC.i877
  %6968 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %6969 = zext i32 %6968 to i64
  store i64 %6969, i64* %RAX.i878, align 8
  store %struct.Memory* %loadMem_41b38d, %struct.Memory** %MEMORY
  %loadMem_41b394 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6971 = getelementptr inbounds %struct.GPR, %struct.GPR* %6970, i32 0, i32 33
  %6972 = getelementptr inbounds %struct.Reg, %struct.Reg* %6971, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %6972 to i64*
  %6973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6974 = getelementptr inbounds %struct.GPR, %struct.GPR* %6973, i32 0, i32 1
  %6975 = getelementptr inbounds %struct.Reg, %struct.Reg* %6974, i32 0, i32 0
  %EAX.i875 = bitcast %union.anon* %6975 to i32*
  %6976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6977 = getelementptr inbounds %struct.GPR, %struct.GPR* %6976, i32 0, i32 15
  %6978 = getelementptr inbounds %struct.Reg, %struct.Reg* %6977, i32 0, i32 0
  %RBP.i876 = bitcast %union.anon* %6978 to i64*
  %6979 = load i32, i32* %EAX.i875
  %6980 = zext i32 %6979 to i64
  %6981 = load i64, i64* %RBP.i876
  %6982 = sub i64 %6981, 100
  %6983 = load i64, i64* %PC.i874
  %6984 = add i64 %6983, 3
  store i64 %6984, i64* %PC.i874
  %6985 = inttoptr i64 %6982 to i32*
  %6986 = load i32, i32* %6985
  %6987 = sub i32 %6979, %6986
  %6988 = icmp ult i32 %6979, %6986
  %6989 = zext i1 %6988 to i8
  %6990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6989, i8* %6990, align 1
  %6991 = and i32 %6987, 255
  %6992 = call i32 @llvm.ctpop.i32(i32 %6991)
  %6993 = trunc i32 %6992 to i8
  %6994 = and i8 %6993, 1
  %6995 = xor i8 %6994, 1
  %6996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6995, i8* %6996, align 1
  %6997 = xor i32 %6986, %6979
  %6998 = xor i32 %6997, %6987
  %6999 = lshr i32 %6998, 4
  %7000 = trunc i32 %6999 to i8
  %7001 = and i8 %7000, 1
  %7002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7001, i8* %7002, align 1
  %7003 = icmp eq i32 %6987, 0
  %7004 = zext i1 %7003 to i8
  %7005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7004, i8* %7005, align 1
  %7006 = lshr i32 %6987, 31
  %7007 = trunc i32 %7006 to i8
  %7008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7007, i8* %7008, align 1
  %7009 = lshr i32 %6979, 31
  %7010 = lshr i32 %6986, 31
  %7011 = xor i32 %7010, %7009
  %7012 = xor i32 %7006, %7009
  %7013 = add i32 %7012, %7011
  %7014 = icmp eq i32 %7013, 2
  %7015 = zext i1 %7014 to i8
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7015, i8* %7016, align 1
  store %struct.Memory* %loadMem_41b394, %struct.Memory** %MEMORY
  %loadMem_41b397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7018 = getelementptr inbounds %struct.GPR, %struct.GPR* %7017, i32 0, i32 33
  %7019 = getelementptr inbounds %struct.Reg, %struct.Reg* %7018, i32 0, i32 0
  %PC.i873 = bitcast %union.anon* %7019 to i64*
  %7020 = load i64, i64* %PC.i873
  %7021 = add i64 %7020, 22
  %7022 = load i64, i64* %PC.i873
  %7023 = add i64 %7022, 6
  %7024 = load i64, i64* %PC.i873
  %7025 = add i64 %7024, 6
  store i64 %7025, i64* %PC.i873
  %7026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7027 = load i8, i8* %7026, align 1
  %7028 = icmp eq i8 %7027, 0
  %7029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7030 = load i8, i8* %7029, align 1
  %7031 = icmp ne i8 %7030, 0
  %7032 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7033 = load i8, i8* %7032, align 1
  %7034 = icmp ne i8 %7033, 0
  %7035 = xor i1 %7031, %7034
  %7036 = xor i1 %7035, true
  %7037 = and i1 %7028, %7036
  %7038 = zext i1 %7037 to i8
  store i8 %7038, i8* %BRANCH_TAKEN, align 1
  %7039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7040 = select i1 %7037, i64 %7021, i64 %7023
  store i64 %7040, i64* %7039, align 8
  store %struct.Memory* %loadMem_41b397, %struct.Memory** %MEMORY
  %loadBr_41b397 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b397 = icmp eq i8 %loadBr_41b397, 1
  br i1 %cmpBr_41b397, label %block_.L_41b3ad, label %block_41b39d

block_41b39d:                                     ; preds = %block_.L_41b38d
  %loadMem_41b39d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7042 = getelementptr inbounds %struct.GPR, %struct.GPR* %7041, i32 0, i32 33
  %7043 = getelementptr inbounds %struct.Reg, %struct.Reg* %7042, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %7043 to i64*
  %7044 = load i64, i64* %PC.i872
  %7045 = add i64 %7044, 11
  store i64 %7045, i64* %PC.i872
  store i32 1, i32* bitcast (%G_0x8644f4_type* @G_0x8644f4 to i32*)
  store %struct.Memory* %loadMem_41b39d, %struct.Memory** %MEMORY
  %loadMem_41b3a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7047 = getelementptr inbounds %struct.GPR, %struct.GPR* %7046, i32 0, i32 33
  %7048 = getelementptr inbounds %struct.Reg, %struct.Reg* %7047, i32 0, i32 0
  %PC.i871 = bitcast %union.anon* %7048 to i64*
  %7049 = load i64, i64* %PC.i871
  %7050 = add i64 %7049, 16
  %7051 = load i64, i64* %PC.i871
  %7052 = add i64 %7051, 5
  store i64 %7052, i64* %PC.i871
  %7053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7050, i64* %7053, align 8
  store %struct.Memory* %loadMem_41b3a8, %struct.Memory** %MEMORY
  br label %block_.L_41b3b8

block_.L_41b3ad:                                  ; preds = %block_.L_41b38d
  %loadMem_41b3ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %7054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7055 = getelementptr inbounds %struct.GPR, %struct.GPR* %7054, i32 0, i32 33
  %7056 = getelementptr inbounds %struct.Reg, %struct.Reg* %7055, i32 0, i32 0
  %PC.i870 = bitcast %union.anon* %7056 to i64*
  %7057 = load i64, i64* %PC.i870
  %7058 = add i64 %7057, 11
  store i64 %7058, i64* %PC.i870
  store i32 0, i32* bitcast (%G_0x8644f4_type* @G_0x8644f4 to i32*)
  store %struct.Memory* %loadMem_41b3ad, %struct.Memory** %MEMORY
  br label %block_.L_41b3b8

block_.L_41b3b8:                                  ; preds = %block_.L_41b3ad, %block_41b39d
  %loadMem_41b3b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7060 = getelementptr inbounds %struct.GPR, %struct.GPR* %7059, i32 0, i32 33
  %7061 = getelementptr inbounds %struct.Reg, %struct.Reg* %7060, i32 0, i32 0
  %PC.i868 = bitcast %union.anon* %7061 to i64*
  %7062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7063 = getelementptr inbounds %struct.GPR, %struct.GPR* %7062, i32 0, i32 1
  %7064 = getelementptr inbounds %struct.Reg, %struct.Reg* %7063, i32 0, i32 0
  %RAX.i869 = bitcast %union.anon* %7064 to i64*
  %7065 = load i64, i64* %PC.i868
  %7066 = add i64 %7065, 7
  store i64 %7066, i64* %PC.i868
  %7067 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %7068 = zext i32 %7067 to i64
  store i64 %7068, i64* %RAX.i869, align 8
  store %struct.Memory* %loadMem_41b3b8, %struct.Memory** %MEMORY
  %loadMem_41b3bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7070 = getelementptr inbounds %struct.GPR, %struct.GPR* %7069, i32 0, i32 33
  %7071 = getelementptr inbounds %struct.Reg, %struct.Reg* %7070, i32 0, i32 0
  %PC.i865 = bitcast %union.anon* %7071 to i64*
  %7072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7073 = getelementptr inbounds %struct.GPR, %struct.GPR* %7072, i32 0, i32 1
  %7074 = getelementptr inbounds %struct.Reg, %struct.Reg* %7073, i32 0, i32 0
  %EAX.i866 = bitcast %union.anon* %7074 to i32*
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7076 = getelementptr inbounds %struct.GPR, %struct.GPR* %7075, i32 0, i32 15
  %7077 = getelementptr inbounds %struct.Reg, %struct.Reg* %7076, i32 0, i32 0
  %RBP.i867 = bitcast %union.anon* %7077 to i64*
  %7078 = load i32, i32* %EAX.i866
  %7079 = zext i32 %7078 to i64
  %7080 = load i64, i64* %RBP.i867
  %7081 = sub i64 %7080, 100
  %7082 = load i64, i64* %PC.i865
  %7083 = add i64 %7082, 3
  store i64 %7083, i64* %PC.i865
  %7084 = inttoptr i64 %7081 to i32*
  %7085 = load i32, i32* %7084
  %7086 = sub i32 %7078, %7085
  %7087 = icmp ult i32 %7078, %7085
  %7088 = zext i1 %7087 to i8
  %7089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7088, i8* %7089, align 1
  %7090 = and i32 %7086, 255
  %7091 = call i32 @llvm.ctpop.i32(i32 %7090)
  %7092 = trunc i32 %7091 to i8
  %7093 = and i8 %7092, 1
  %7094 = xor i8 %7093, 1
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7094, i8* %7095, align 1
  %7096 = xor i32 %7085, %7078
  %7097 = xor i32 %7096, %7086
  %7098 = lshr i32 %7097, 4
  %7099 = trunc i32 %7098 to i8
  %7100 = and i8 %7099, 1
  %7101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7100, i8* %7101, align 1
  %7102 = icmp eq i32 %7086, 0
  %7103 = zext i1 %7102 to i8
  %7104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7103, i8* %7104, align 1
  %7105 = lshr i32 %7086, 31
  %7106 = trunc i32 %7105 to i8
  %7107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7106, i8* %7107, align 1
  %7108 = lshr i32 %7078, 31
  %7109 = lshr i32 %7085, 31
  %7110 = xor i32 %7109, %7108
  %7111 = xor i32 %7105, %7108
  %7112 = add i32 %7111, %7110
  %7113 = icmp eq i32 %7112, 2
  %7114 = zext i1 %7113 to i8
  %7115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7114, i8* %7115, align 1
  store %struct.Memory* %loadMem_41b3bf, %struct.Memory** %MEMORY
  %loadMem_41b3c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7117 = getelementptr inbounds %struct.GPR, %struct.GPR* %7116, i32 0, i32 33
  %7118 = getelementptr inbounds %struct.Reg, %struct.Reg* %7117, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %7118 to i64*
  %7119 = load i64, i64* %PC.i864
  %7120 = add i64 %7119, 121
  %7121 = load i64, i64* %PC.i864
  %7122 = add i64 %7121, 6
  %7123 = load i64, i64* %PC.i864
  %7124 = add i64 %7123, 6
  store i64 %7124, i64* %PC.i864
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7126 = load i8, i8* %7125, align 1
  %7127 = icmp eq i8 %7126, 0
  %7128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7129 = load i8, i8* %7128, align 1
  %7130 = icmp ne i8 %7129, 0
  %7131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7132 = load i8, i8* %7131, align 1
  %7133 = icmp ne i8 %7132, 0
  %7134 = xor i1 %7130, %7133
  %7135 = xor i1 %7134, true
  %7136 = and i1 %7127, %7135
  %7137 = zext i1 %7136 to i8
  store i8 %7137, i8* %BRANCH_TAKEN, align 1
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7139 = select i1 %7136, i64 %7120, i64 %7122
  store i64 %7139, i64* %7138, align 8
  store %struct.Memory* %loadMem_41b3c2, %struct.Memory** %MEMORY
  %loadBr_41b3c2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b3c2 = icmp eq i8 %loadBr_41b3c2, 1
  br i1 %cmpBr_41b3c2, label %block_.L_41b43b, label %block_41b3c8

block_41b3c8:                                     ; preds = %block_.L_41b3b8
  %loadMem_41b3c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7141 = getelementptr inbounds %struct.GPR, %struct.GPR* %7140, i32 0, i32 33
  %7142 = getelementptr inbounds %struct.Reg, %struct.Reg* %7141, i32 0, i32 0
  %PC.i863 = bitcast %union.anon* %7142 to i64*
  %7143 = load i64, i64* %PC.i863
  %7144 = add i64 %7143, 8
  store i64 %7144, i64* %PC.i863
  %7145 = load i32, i32* bitcast (%G_0x866788_type* @G_0x866788 to i32*)
  %7146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7146, align 1
  %7147 = and i32 %7145, 255
  %7148 = call i32 @llvm.ctpop.i32(i32 %7147)
  %7149 = trunc i32 %7148 to i8
  %7150 = and i8 %7149, 1
  %7151 = xor i8 %7150, 1
  %7152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7151, i8* %7152, align 1
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7153, align 1
  %7154 = icmp eq i32 %7145, 0
  %7155 = zext i1 %7154 to i8
  %7156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7155, i8* %7156, align 1
  %7157 = lshr i32 %7145, 31
  %7158 = trunc i32 %7157 to i8
  %7159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7158, i8* %7159, align 1
  %7160 = lshr i32 %7145, 31
  %7161 = xor i32 %7157, %7160
  %7162 = add i32 %7161, %7160
  %7163 = icmp eq i32 %7162, 2
  %7164 = zext i1 %7163 to i8
  %7165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7164, i8* %7165, align 1
  store %struct.Memory* %loadMem_41b3c8, %struct.Memory** %MEMORY
  %loadMem_41b3d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7167 = getelementptr inbounds %struct.GPR, %struct.GPR* %7166, i32 0, i32 33
  %7168 = getelementptr inbounds %struct.Reg, %struct.Reg* %7167, i32 0, i32 0
  %PC.i862 = bitcast %union.anon* %7168 to i64*
  %7169 = load i64, i64* %PC.i862
  %7170 = add i64 %7169, 107
  %7171 = load i64, i64* %PC.i862
  %7172 = add i64 %7171, 6
  %7173 = load i64, i64* %PC.i862
  %7174 = add i64 %7173, 6
  store i64 %7174, i64* %PC.i862
  %7175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7176 = load i8, i8* %7175, align 1
  %7177 = icmp eq i8 %7176, 0
  %7178 = zext i1 %7177 to i8
  store i8 %7178, i8* %BRANCH_TAKEN, align 1
  %7179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7180 = select i1 %7177, i64 %7170, i64 %7172
  store i64 %7180, i64* %7179, align 8
  store %struct.Memory* %loadMem_41b3d0, %struct.Memory** %MEMORY
  %loadBr_41b3d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b3d0 = icmp eq i8 %loadBr_41b3d0, 1
  br i1 %cmpBr_41b3d0, label %block_.L_41b43b, label %block_41b3d6

block_41b3d6:                                     ; preds = %block_41b3c8
  %loadMem_41b3d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7182 = getelementptr inbounds %struct.GPR, %struct.GPR* %7181, i32 0, i32 33
  %7183 = getelementptr inbounds %struct.Reg, %struct.Reg* %7182, i32 0, i32 0
  %PC.i859 = bitcast %union.anon* %7183 to i64*
  %7184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7185 = getelementptr inbounds %struct.GPR, %struct.GPR* %7184, i32 0, i32 11
  %7186 = getelementptr inbounds %struct.Reg, %struct.Reg* %7185, i32 0, i32 0
  %RDI.i860 = bitcast %union.anon* %7186 to i64*
  %7187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7188 = getelementptr inbounds %struct.GPR, %struct.GPR* %7187, i32 0, i32 15
  %7189 = getelementptr inbounds %struct.Reg, %struct.Reg* %7188, i32 0, i32 0
  %RBP.i861 = bitcast %union.anon* %7189 to i64*
  %7190 = load i64, i64* %RBP.i861
  %7191 = sub i64 %7190, 12480
  %7192 = load i64, i64* %PC.i859
  %7193 = add i64 %7192, 7
  store i64 %7193, i64* %PC.i859
  store i64 %7191, i64* %RDI.i860, align 8
  store %struct.Memory* %loadMem_41b3d6, %struct.Memory** %MEMORY
  %loadMem_41b3dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7195 = getelementptr inbounds %struct.GPR, %struct.GPR* %7194, i32 0, i32 33
  %7196 = getelementptr inbounds %struct.Reg, %struct.Reg* %7195, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %7196 to i64*
  %7197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7198 = getelementptr inbounds %struct.GPR, %struct.GPR* %7197, i32 0, i32 9
  %7199 = getelementptr inbounds %struct.Reg, %struct.Reg* %7198, i32 0, i32 0
  %RSI.i858 = bitcast %union.anon* %7199 to i64*
  %7200 = load i64, i64* %PC.i857
  %7201 = add i64 %7200, 5
  store i64 %7201, i64* %PC.i857
  store i64 4293967296, i64* %RSI.i858, align 8
  store %struct.Memory* %loadMem_41b3dd, %struct.Memory** %MEMORY
  %loadMem_41b3e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7203 = getelementptr inbounds %struct.GPR, %struct.GPR* %7202, i32 0, i32 33
  %7204 = getelementptr inbounds %struct.Reg, %struct.Reg* %7203, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %7204 to i64*
  %7205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7206 = getelementptr inbounds %struct.GPR, %struct.GPR* %7205, i32 0, i32 7
  %7207 = getelementptr inbounds %struct.Reg, %struct.Reg* %7206, i32 0, i32 0
  %RDX.i856 = bitcast %union.anon* %7207 to i64*
  %7208 = load i64, i64* %PC.i855
  %7209 = add i64 %7208, 5
  store i64 %7209, i64* %PC.i855
  store i64 1000000, i64* %RDX.i856, align 8
  store %struct.Memory* %loadMem_41b3e2, %struct.Memory** %MEMORY
  %loadMem_41b3e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7211 = getelementptr inbounds %struct.GPR, %struct.GPR* %7210, i32 0, i32 33
  %7212 = getelementptr inbounds %struct.Reg, %struct.Reg* %7211, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %7212 to i64*
  %7213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7214 = getelementptr inbounds %struct.GPR, %struct.GPR* %7213, i32 0, i32 1
  %7215 = getelementptr inbounds %struct.Reg, %struct.Reg* %7214, i32 0, i32 0
  %RAX.i853 = bitcast %union.anon* %7215 to i64*
  %7216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7217 = getelementptr inbounds %struct.GPR, %struct.GPR* %7216, i32 0, i32 15
  %7218 = getelementptr inbounds %struct.Reg, %struct.Reg* %7217, i32 0, i32 0
  %RBP.i854 = bitcast %union.anon* %7218 to i64*
  %7219 = load i64, i64* %RBP.i854
  %7220 = sub i64 %7219, 112
  %7221 = load i64, i64* %PC.i852
  %7222 = add i64 %7221, 3
  store i64 %7222, i64* %PC.i852
  %7223 = inttoptr i64 %7220 to i32*
  %7224 = load i32, i32* %7223
  %7225 = zext i32 %7224 to i64
  store i64 %7225, i64* %RAX.i853, align 8
  store %struct.Memory* %loadMem_41b3e7, %struct.Memory** %MEMORY
  %loadMem_41b3ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %7226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7227 = getelementptr inbounds %struct.GPR, %struct.GPR* %7226, i32 0, i32 33
  %7228 = getelementptr inbounds %struct.Reg, %struct.Reg* %7227, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %7228 to i64*
  %7229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7230 = getelementptr inbounds %struct.GPR, %struct.GPR* %7229, i32 0, i32 1
  %7231 = getelementptr inbounds %struct.Reg, %struct.Reg* %7230, i32 0, i32 0
  %RAX.i851 = bitcast %union.anon* %7231 to i64*
  %7232 = load i64, i64* %RAX.i851
  %7233 = load i64, i64* %PC.i850
  %7234 = add i64 %7233, 3
  store i64 %7234, i64* %PC.i850
  %7235 = trunc i64 %7232 to i32
  %7236 = add i32 1, %7235
  %7237 = zext i32 %7236 to i64
  store i64 %7237, i64* %RAX.i851, align 8
  %7238 = icmp ult i32 %7236, %7235
  %7239 = icmp ult i32 %7236, 1
  %7240 = or i1 %7238, %7239
  %7241 = zext i1 %7240 to i8
  %7242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7241, i8* %7242, align 1
  %7243 = and i32 %7236, 255
  %7244 = call i32 @llvm.ctpop.i32(i32 %7243)
  %7245 = trunc i32 %7244 to i8
  %7246 = and i8 %7245, 1
  %7247 = xor i8 %7246, 1
  %7248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7247, i8* %7248, align 1
  %7249 = xor i64 1, %7232
  %7250 = trunc i64 %7249 to i32
  %7251 = xor i32 %7250, %7236
  %7252 = lshr i32 %7251, 4
  %7253 = trunc i32 %7252 to i8
  %7254 = and i8 %7253, 1
  %7255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7254, i8* %7255, align 1
  %7256 = icmp eq i32 %7236, 0
  %7257 = zext i1 %7256 to i8
  %7258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7257, i8* %7258, align 1
  %7259 = lshr i32 %7236, 31
  %7260 = trunc i32 %7259 to i8
  %7261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7260, i8* %7261, align 1
  %7262 = lshr i32 %7235, 31
  %7263 = xor i32 %7259, %7262
  %7264 = add i32 %7263, %7259
  %7265 = icmp eq i32 %7264, 2
  %7266 = zext i1 %7265 to i8
  %7267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7266, i8* %7267, align 1
  store %struct.Memory* %loadMem_41b3ea, %struct.Memory** %MEMORY
  %loadMem_41b3ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %7268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7269 = getelementptr inbounds %struct.GPR, %struct.GPR* %7268, i32 0, i32 33
  %7270 = getelementptr inbounds %struct.Reg, %struct.Reg* %7269, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %7270 to i64*
  %7271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7272 = getelementptr inbounds %struct.GPR, %struct.GPR* %7271, i32 0, i32 1
  %7273 = getelementptr inbounds %struct.Reg, %struct.Reg* %7272, i32 0, i32 0
  %EAX.i848 = bitcast %union.anon* %7273 to i32*
  %7274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7275 = getelementptr inbounds %struct.GPR, %struct.GPR* %7274, i32 0, i32 15
  %7276 = getelementptr inbounds %struct.Reg, %struct.Reg* %7275, i32 0, i32 0
  %RBP.i849 = bitcast %union.anon* %7276 to i64*
  %7277 = load i64, i64* %RBP.i849
  %7278 = sub i64 %7277, 112
  %7279 = load i32, i32* %EAX.i848
  %7280 = zext i32 %7279 to i64
  %7281 = load i64, i64* %PC.i847
  %7282 = add i64 %7281, 3
  store i64 %7282, i64* %PC.i847
  %7283 = inttoptr i64 %7278 to i32*
  store i32 %7279, i32* %7283
  store %struct.Memory* %loadMem_41b3ed, %struct.Memory** %MEMORY
  %loadMem_41b3f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7285 = getelementptr inbounds %struct.GPR, %struct.GPR* %7284, i32 0, i32 33
  %7286 = getelementptr inbounds %struct.Reg, %struct.Reg* %7285, i32 0, i32 0
  %PC.i845 = bitcast %union.anon* %7286 to i64*
  %7287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7288 = getelementptr inbounds %struct.GPR, %struct.GPR* %7287, i32 0, i32 5
  %7289 = getelementptr inbounds %struct.Reg, %struct.Reg* %7288, i32 0, i32 0
  %RCX.i846 = bitcast %union.anon* %7289 to i64*
  %7290 = load i64, i64* %PC.i845
  %7291 = add i64 %7290, 7
  store i64 %7291, i64* %PC.i845
  %7292 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %7293 = zext i32 %7292 to i64
  store i64 %7293, i64* %RCX.i846, align 8
  store %struct.Memory* %loadMem_41b3f0, %struct.Memory** %MEMORY
  %loadMem1_41b3f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7295 = getelementptr inbounds %struct.GPR, %struct.GPR* %7294, i32 0, i32 33
  %7296 = getelementptr inbounds %struct.Reg, %struct.Reg* %7295, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %7296 to i64*
  %7297 = load i64, i64* %PC.i844
  %7298 = add i64 %7297, -8199
  %7299 = load i64, i64* %PC.i844
  %7300 = add i64 %7299, 5
  %7301 = load i64, i64* %PC.i844
  %7302 = add i64 %7301, 5
  store i64 %7302, i64* %PC.i844
  %7303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7304 = load i64, i64* %7303, align 8
  %7305 = add i64 %7304, -8
  %7306 = inttoptr i64 %7305 to i64*
  store i64 %7300, i64* %7306
  store i64 %7305, i64* %7303, align 8
  %7307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7298, i64* %7307, align 8
  store %struct.Memory* %loadMem1_41b3f7, %struct.Memory** %MEMORY
  %loadMem2_41b3f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b3f7 = load i64, i64* %3
  %call2_41b3f7 = call %struct.Memory* @sub_4193f0.search_root(%struct.State* %0, i64 %loadPC_41b3f7, %struct.Memory* %loadMem2_41b3f7)
  store %struct.Memory* %call2_41b3f7, %struct.Memory** %MEMORY
  %loadMem_41b3fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7309 = getelementptr inbounds %struct.GPR, %struct.GPR* %7308, i32 0, i32 33
  %7310 = getelementptr inbounds %struct.Reg, %struct.Reg* %7309, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %7310 to i64*
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7312 = getelementptr inbounds %struct.GPR, %struct.GPR* %7311, i32 0, i32 11
  %7313 = getelementptr inbounds %struct.Reg, %struct.Reg* %7312, i32 0, i32 0
  %RDI.i842 = bitcast %union.anon* %7313 to i64*
  %7314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7315 = getelementptr inbounds %struct.GPR, %struct.GPR* %7314, i32 0, i32 15
  %7316 = getelementptr inbounds %struct.Reg, %struct.Reg* %7315, i32 0, i32 0
  %RBP.i843 = bitcast %union.anon* %7316 to i64*
  %7317 = load i64, i64* %RBP.i843
  %7318 = sub i64 %7317, 12480
  %7319 = load i64, i64* %PC.i841
  %7320 = add i64 %7319, 7
  store i64 %7320, i64* %PC.i841
  %7321 = inttoptr i64 %7318 to i64*
  %7322 = load i64, i64* %7321
  store i64 %7322, i64* %RDI.i842, align 8
  store %struct.Memory* %loadMem_41b3fc, %struct.Memory** %MEMORY
  %loadMem_41b403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7324 = getelementptr inbounds %struct.GPR, %struct.GPR* %7323, i32 0, i32 33
  %7325 = getelementptr inbounds %struct.Reg, %struct.Reg* %7324, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %7325 to i64*
  %7326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7327 = getelementptr inbounds %struct.GPR, %struct.GPR* %7326, i32 0, i32 11
  %7328 = getelementptr inbounds %struct.Reg, %struct.Reg* %7327, i32 0, i32 0
  %RDI.i839 = bitcast %union.anon* %7328 to i64*
  %7329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7330 = getelementptr inbounds %struct.GPR, %struct.GPR* %7329, i32 0, i32 15
  %7331 = getelementptr inbounds %struct.Reg, %struct.Reg* %7330, i32 0, i32 0
  %RBP.i840 = bitcast %union.anon* %7331 to i64*
  %7332 = load i64, i64* %RBP.i840
  %7333 = sub i64 %7332, 48
  %7334 = load i64, i64* %RDI.i839
  %7335 = load i64, i64* %PC.i838
  %7336 = add i64 %7335, 4
  store i64 %7336, i64* %PC.i838
  %7337 = inttoptr i64 %7333 to i64*
  store i64 %7334, i64* %7337
  store %struct.Memory* %loadMem_41b403, %struct.Memory** %MEMORY
  %loadMem_41b407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7339 = getelementptr inbounds %struct.GPR, %struct.GPR* %7338, i32 0, i32 33
  %7340 = getelementptr inbounds %struct.Reg, %struct.Reg* %7339, i32 0, i32 0
  %PC.i835 = bitcast %union.anon* %7340 to i64*
  %7341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7342 = getelementptr inbounds %struct.GPR, %struct.GPR* %7341, i32 0, i32 11
  %7343 = getelementptr inbounds %struct.Reg, %struct.Reg* %7342, i32 0, i32 0
  %RDI.i836 = bitcast %union.anon* %7343 to i64*
  %7344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7345 = getelementptr inbounds %struct.GPR, %struct.GPR* %7344, i32 0, i32 15
  %7346 = getelementptr inbounds %struct.Reg, %struct.Reg* %7345, i32 0, i32 0
  %RBP.i837 = bitcast %union.anon* %7346 to i64*
  %7347 = load i64, i64* %RBP.i837
  %7348 = sub i64 %7347, 12472
  %7349 = load i64, i64* %PC.i835
  %7350 = add i64 %7349, 7
  store i64 %7350, i64* %PC.i835
  %7351 = inttoptr i64 %7348 to i64*
  %7352 = load i64, i64* %7351
  store i64 %7352, i64* %RDI.i836, align 8
  store %struct.Memory* %loadMem_41b407, %struct.Memory** %MEMORY
  %loadMem_41b40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7354 = getelementptr inbounds %struct.GPR, %struct.GPR* %7353, i32 0, i32 33
  %7355 = getelementptr inbounds %struct.Reg, %struct.Reg* %7354, i32 0, i32 0
  %PC.i832 = bitcast %union.anon* %7355 to i64*
  %7356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7357 = getelementptr inbounds %struct.GPR, %struct.GPR* %7356, i32 0, i32 11
  %7358 = getelementptr inbounds %struct.Reg, %struct.Reg* %7357, i32 0, i32 0
  %RDI.i833 = bitcast %union.anon* %7358 to i64*
  %7359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7360 = getelementptr inbounds %struct.GPR, %struct.GPR* %7359, i32 0, i32 15
  %7361 = getelementptr inbounds %struct.Reg, %struct.Reg* %7360, i32 0, i32 0
  %RBP.i834 = bitcast %union.anon* %7361 to i64*
  %7362 = load i64, i64* %RBP.i834
  %7363 = sub i64 %7362, 40
  %7364 = load i64, i64* %RDI.i833
  %7365 = load i64, i64* %PC.i832
  %7366 = add i64 %7365, 4
  store i64 %7366, i64* %PC.i832
  %7367 = inttoptr i64 %7363 to i64*
  store i64 %7364, i64* %7367
  store %struct.Memory* %loadMem_41b40e, %struct.Memory** %MEMORY
  %loadMem_41b412 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7369 = getelementptr inbounds %struct.GPR, %struct.GPR* %7368, i32 0, i32 33
  %7370 = getelementptr inbounds %struct.Reg, %struct.Reg* %7369, i32 0, i32 0
  %PC.i829 = bitcast %union.anon* %7370 to i64*
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 11
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %RDI.i830 = bitcast %union.anon* %7373 to i64*
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7375 = getelementptr inbounds %struct.GPR, %struct.GPR* %7374, i32 0, i32 15
  %7376 = getelementptr inbounds %struct.Reg, %struct.Reg* %7375, i32 0, i32 0
  %RBP.i831 = bitcast %union.anon* %7376 to i64*
  %7377 = load i64, i64* %RBP.i831
  %7378 = sub i64 %7377, 12464
  %7379 = load i64, i64* %PC.i829
  %7380 = add i64 %7379, 7
  store i64 %7380, i64* %PC.i829
  %7381 = inttoptr i64 %7378 to i64*
  %7382 = load i64, i64* %7381
  store i64 %7382, i64* %RDI.i830, align 8
  store %struct.Memory* %loadMem_41b412, %struct.Memory** %MEMORY
  %loadMem_41b419 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 33
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %PC.i826 = bitcast %union.anon* %7385 to i64*
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7387 = getelementptr inbounds %struct.GPR, %struct.GPR* %7386, i32 0, i32 11
  %7388 = getelementptr inbounds %struct.Reg, %struct.Reg* %7387, i32 0, i32 0
  %RDI.i827 = bitcast %union.anon* %7388 to i64*
  %7389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7390 = getelementptr inbounds %struct.GPR, %struct.GPR* %7389, i32 0, i32 15
  %7391 = getelementptr inbounds %struct.Reg, %struct.Reg* %7390, i32 0, i32 0
  %RBP.i828 = bitcast %union.anon* %7391 to i64*
  %7392 = load i64, i64* %RBP.i828
  %7393 = sub i64 %7392, 32
  %7394 = load i64, i64* %RDI.i827
  %7395 = load i64, i64* %PC.i826
  %7396 = add i64 %7395, 4
  store i64 %7396, i64* %PC.i826
  %7397 = inttoptr i64 %7393 to i64*
  store i64 %7394, i64* %7397
  store %struct.Memory* %loadMem_41b419, %struct.Memory** %MEMORY
  %loadMem_41b41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %7398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7399 = getelementptr inbounds %struct.GPR, %struct.GPR* %7398, i32 0, i32 33
  %7400 = getelementptr inbounds %struct.Reg, %struct.Reg* %7399, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %7400 to i64*
  %7401 = load i64, i64* %PC.i825
  %7402 = add i64 %7401, 8
  store i64 %7402, i64* %PC.i825
  %7403 = load i32, i32* bitcast (%G_0x866788_type* @G_0x866788 to i32*)
  %7404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7404, align 1
  %7405 = and i32 %7403, 255
  %7406 = call i32 @llvm.ctpop.i32(i32 %7405)
  %7407 = trunc i32 %7406 to i8
  %7408 = and i8 %7407, 1
  %7409 = xor i8 %7408, 1
  %7410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7409, i8* %7410, align 1
  %7411 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7411, align 1
  %7412 = icmp eq i32 %7403, 0
  %7413 = zext i1 %7412 to i8
  %7414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7413, i8* %7414, align 1
  %7415 = lshr i32 %7403, 31
  %7416 = trunc i32 %7415 to i8
  %7417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7416, i8* %7417, align 1
  %7418 = lshr i32 %7403, 31
  %7419 = xor i32 %7415, %7418
  %7420 = add i32 %7419, %7418
  %7421 = icmp eq i32 %7420, 2
  %7422 = zext i1 %7421 to i8
  %7423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7422, i8* %7423, align 1
  store %struct.Memory* %loadMem_41b41d, %struct.Memory** %MEMORY
  %loadMem_41b425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7425 = getelementptr inbounds %struct.GPR, %struct.GPR* %7424, i32 0, i32 33
  %7426 = getelementptr inbounds %struct.Reg, %struct.Reg* %7425, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %7426 to i64*
  %7427 = load i64, i64* %PC.i824
  %7428 = add i64 %7427, 17
  %7429 = load i64, i64* %PC.i824
  %7430 = add i64 %7429, 6
  %7431 = load i64, i64* %PC.i824
  %7432 = add i64 %7431, 6
  store i64 %7432, i64* %PC.i824
  %7433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7434 = load i8, i8* %7433, align 1
  %7435 = icmp eq i8 %7434, 0
  %7436 = zext i1 %7435 to i8
  store i8 %7436, i8* %BRANCH_TAKEN, align 1
  %7437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7438 = select i1 %7435, i64 %7428, i64 %7430
  store i64 %7438, i64* %7437, align 8
  store %struct.Memory* %loadMem_41b425, %struct.Memory** %MEMORY
  %loadBr_41b425 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b425 = icmp eq i8 %loadBr_41b425, 1
  br i1 %cmpBr_41b425, label %block_.L_41b436, label %block_41b42b

block_41b42b:                                     ; preds = %block_41b3d6
  %loadMem_41b42b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7440 = getelementptr inbounds %struct.GPR, %struct.GPR* %7439, i32 0, i32 33
  %7441 = getelementptr inbounds %struct.Reg, %struct.Reg* %7440, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %7441 to i64*
  %7442 = load i64, i64* %PC.i823
  %7443 = add i64 %7442, 11
  store i64 %7443, i64* %PC.i823
  store i32 0, i32* bitcast (%G_0x8644f4_type* @G_0x8644f4 to i32*)
  store %struct.Memory* %loadMem_41b42b, %struct.Memory** %MEMORY
  br label %block_.L_41b436

block_.L_41b436:                                  ; preds = %block_41b42b, %block_41b3d6
  %loadMem_41b436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7445 = getelementptr inbounds %struct.GPR, %struct.GPR* %7444, i32 0, i32 33
  %7446 = getelementptr inbounds %struct.Reg, %struct.Reg* %7445, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %7446 to i64*
  %7447 = load i64, i64* %PC.i822
  %7448 = add i64 %7447, 175
  %7449 = load i64, i64* %PC.i822
  %7450 = add i64 %7449, 5
  store i64 %7450, i64* %PC.i822
  %7451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7448, i64* %7451, align 8
  store %struct.Memory* %loadMem_41b436, %struct.Memory** %MEMORY
  br label %block_.L_41b4e5

block_.L_41b43b:                                  ; preds = %block_41b3c8, %block_.L_41b3b8
  %loadMem_41b43b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7453 = getelementptr inbounds %struct.GPR, %struct.GPR* %7452, i32 0, i32 33
  %7454 = getelementptr inbounds %struct.Reg, %struct.Reg* %7453, i32 0, i32 0
  %PC.i820 = bitcast %union.anon* %7454 to i64*
  %7455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7456 = getelementptr inbounds %struct.GPR, %struct.GPR* %7455, i32 0, i32 1
  %7457 = getelementptr inbounds %struct.Reg, %struct.Reg* %7456, i32 0, i32 0
  %RAX.i821 = bitcast %union.anon* %7457 to i64*
  %7458 = load i64, i64* %PC.i820
  %7459 = add i64 %7458, 7
  store i64 %7459, i64* %PC.i820
  %7460 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %7461 = zext i32 %7460 to i64
  store i64 %7461, i64* %RAX.i821, align 8
  store %struct.Memory* %loadMem_41b43b, %struct.Memory** %MEMORY
  %loadMem_41b442 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7463 = getelementptr inbounds %struct.GPR, %struct.GPR* %7462, i32 0, i32 33
  %7464 = getelementptr inbounds %struct.Reg, %struct.Reg* %7463, i32 0, i32 0
  %PC.i817 = bitcast %union.anon* %7464 to i64*
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7466 = getelementptr inbounds %struct.GPR, %struct.GPR* %7465, i32 0, i32 1
  %7467 = getelementptr inbounds %struct.Reg, %struct.Reg* %7466, i32 0, i32 0
  %EAX.i818 = bitcast %union.anon* %7467 to i32*
  %7468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7469 = getelementptr inbounds %struct.GPR, %struct.GPR* %7468, i32 0, i32 15
  %7470 = getelementptr inbounds %struct.Reg, %struct.Reg* %7469, i32 0, i32 0
  %RBP.i819 = bitcast %union.anon* %7470 to i64*
  %7471 = load i32, i32* %EAX.i818
  %7472 = zext i32 %7471 to i64
  %7473 = load i64, i64* %RBP.i819
  %7474 = sub i64 %7473, 104
  %7475 = load i64, i64* %PC.i817
  %7476 = add i64 %7475, 3
  store i64 %7476, i64* %PC.i817
  %7477 = inttoptr i64 %7474 to i32*
  %7478 = load i32, i32* %7477
  %7479 = sub i32 %7471, %7478
  %7480 = icmp ult i32 %7471, %7478
  %7481 = zext i1 %7480 to i8
  %7482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7481, i8* %7482, align 1
  %7483 = and i32 %7479, 255
  %7484 = call i32 @llvm.ctpop.i32(i32 %7483)
  %7485 = trunc i32 %7484 to i8
  %7486 = and i8 %7485, 1
  %7487 = xor i8 %7486, 1
  %7488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7487, i8* %7488, align 1
  %7489 = xor i32 %7478, %7471
  %7490 = xor i32 %7489, %7479
  %7491 = lshr i32 %7490, 4
  %7492 = trunc i32 %7491 to i8
  %7493 = and i8 %7492, 1
  %7494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7493, i8* %7494, align 1
  %7495 = icmp eq i32 %7479, 0
  %7496 = zext i1 %7495 to i8
  %7497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7496, i8* %7497, align 1
  %7498 = lshr i32 %7479, 31
  %7499 = trunc i32 %7498 to i8
  %7500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7499, i8* %7500, align 1
  %7501 = lshr i32 %7471, 31
  %7502 = lshr i32 %7478, 31
  %7503 = xor i32 %7502, %7501
  %7504 = xor i32 %7498, %7501
  %7505 = add i32 %7504, %7503
  %7506 = icmp eq i32 %7505, 2
  %7507 = zext i1 %7506 to i8
  %7508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7507, i8* %7508, align 1
  store %struct.Memory* %loadMem_41b442, %struct.Memory** %MEMORY
  %loadMem_41b445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7510 = getelementptr inbounds %struct.GPR, %struct.GPR* %7509, i32 0, i32 33
  %7511 = getelementptr inbounds %struct.Reg, %struct.Reg* %7510, i32 0, i32 0
  %PC.i816 = bitcast %union.anon* %7511 to i64*
  %7512 = load i64, i64* %PC.i816
  %7513 = add i64 %7512, 155
  %7514 = load i64, i64* %PC.i816
  %7515 = add i64 %7514, 6
  %7516 = load i64, i64* %PC.i816
  %7517 = add i64 %7516, 6
  store i64 %7517, i64* %PC.i816
  %7518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %7519 = load i8, i8* %7518, align 1
  %7520 = icmp ne i8 %7519, 0
  %7521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %7522 = load i8, i8* %7521, align 1
  %7523 = icmp ne i8 %7522, 0
  %7524 = xor i1 %7520, %7523
  %7525 = zext i1 %7524 to i8
  store i8 %7525, i8* %BRANCH_TAKEN, align 1
  %7526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7527 = select i1 %7524, i64 %7513, i64 %7515
  store i64 %7527, i64* %7526, align 8
  store %struct.Memory* %loadMem_41b445, %struct.Memory** %MEMORY
  %loadBr_41b445 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b445 = icmp eq i8 %loadBr_41b445, 1
  br i1 %cmpBr_41b445, label %block_.L_41b4e0, label %block_41b44b

block_41b44b:                                     ; preds = %block_.L_41b43b
  %loadMem_41b44b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7529 = getelementptr inbounds %struct.GPR, %struct.GPR* %7528, i32 0, i32 33
  %7530 = getelementptr inbounds %struct.Reg, %struct.Reg* %7529, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %7530 to i64*
  %7531 = load i64, i64* %PC.i815
  %7532 = add i64 %7531, 8
  store i64 %7532, i64* %PC.i815
  %7533 = load i32, i32* bitcast (%G_0x866788_type* @G_0x866788 to i32*)
  %7534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7534, align 1
  %7535 = and i32 %7533, 255
  %7536 = call i32 @llvm.ctpop.i32(i32 %7535)
  %7537 = trunc i32 %7536 to i8
  %7538 = and i8 %7537, 1
  %7539 = xor i8 %7538, 1
  %7540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7539, i8* %7540, align 1
  %7541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7541, align 1
  %7542 = icmp eq i32 %7533, 0
  %7543 = zext i1 %7542 to i8
  %7544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7543, i8* %7544, align 1
  %7545 = lshr i32 %7533, 31
  %7546 = trunc i32 %7545 to i8
  %7547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7546, i8* %7547, align 1
  %7548 = lshr i32 %7533, 31
  %7549 = xor i32 %7545, %7548
  %7550 = add i32 %7549, %7548
  %7551 = icmp eq i32 %7550, 2
  %7552 = zext i1 %7551 to i8
  %7553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7552, i8* %7553, align 1
  store %struct.Memory* %loadMem_41b44b, %struct.Memory** %MEMORY
  %loadMem_41b453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7555 = getelementptr inbounds %struct.GPR, %struct.GPR* %7554, i32 0, i32 33
  %7556 = getelementptr inbounds %struct.Reg, %struct.Reg* %7555, i32 0, i32 0
  %PC.i814 = bitcast %union.anon* %7556 to i64*
  %7557 = load i64, i64* %PC.i814
  %7558 = add i64 %7557, 141
  %7559 = load i64, i64* %PC.i814
  %7560 = add i64 %7559, 6
  %7561 = load i64, i64* %PC.i814
  %7562 = add i64 %7561, 6
  store i64 %7562, i64* %PC.i814
  %7563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7564 = load i8, i8* %7563, align 1
  %7565 = icmp eq i8 %7564, 0
  %7566 = zext i1 %7565 to i8
  store i8 %7566, i8* %BRANCH_TAKEN, align 1
  %7567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7568 = select i1 %7565, i64 %7558, i64 %7560
  store i64 %7568, i64* %7567, align 8
  store %struct.Memory* %loadMem_41b453, %struct.Memory** %MEMORY
  %loadBr_41b453 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b453 = icmp eq i8 %loadBr_41b453, 1
  br i1 %cmpBr_41b453, label %block_.L_41b4e0, label %block_41b459

block_41b459:                                     ; preds = %block_41b44b
  %loadMem_41b459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7570 = getelementptr inbounds %struct.GPR, %struct.GPR* %7569, i32 0, i32 33
  %7571 = getelementptr inbounds %struct.Reg, %struct.Reg* %7570, i32 0, i32 0
  %PC.i811 = bitcast %union.anon* %7571 to i64*
  %7572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7573 = getelementptr inbounds %struct.GPR, %struct.GPR* %7572, i32 0, i32 11
  %7574 = getelementptr inbounds %struct.Reg, %struct.Reg* %7573, i32 0, i32 0
  %RDI.i812 = bitcast %union.anon* %7574 to i64*
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7576 = getelementptr inbounds %struct.GPR, %struct.GPR* %7575, i32 0, i32 15
  %7577 = getelementptr inbounds %struct.Reg, %struct.Reg* %7576, i32 0, i32 0
  %RBP.i813 = bitcast %union.anon* %7577 to i64*
  %7578 = load i64, i64* %RBP.i813
  %7579 = sub i64 %7578, 12504
  %7580 = load i64, i64* %PC.i811
  %7581 = add i64 %7580, 7
  store i64 %7581, i64* %PC.i811
  store i64 %7579, i64* %RDI.i812, align 8
  store %struct.Memory* %loadMem_41b459, %struct.Memory** %MEMORY
  %loadMem_41b460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7583 = getelementptr inbounds %struct.GPR, %struct.GPR* %7582, i32 0, i32 33
  %7584 = getelementptr inbounds %struct.Reg, %struct.Reg* %7583, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %7584 to i64*
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7586 = getelementptr inbounds %struct.GPR, %struct.GPR* %7585, i32 0, i32 9
  %7587 = getelementptr inbounds %struct.Reg, %struct.Reg* %7586, i32 0, i32 0
  %RSI.i810 = bitcast %union.anon* %7587 to i64*
  %7588 = load i64, i64* %PC.i809
  %7589 = add i64 %7588, 5
  store i64 %7589, i64* %PC.i809
  store i64 4293967296, i64* %RSI.i810, align 8
  store %struct.Memory* %loadMem_41b460, %struct.Memory** %MEMORY
  %loadMem_41b465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7591 = getelementptr inbounds %struct.GPR, %struct.GPR* %7590, i32 0, i32 33
  %7592 = getelementptr inbounds %struct.Reg, %struct.Reg* %7591, i32 0, i32 0
  %PC.i807 = bitcast %union.anon* %7592 to i64*
  %7593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7594 = getelementptr inbounds %struct.GPR, %struct.GPR* %7593, i32 0, i32 7
  %7595 = getelementptr inbounds %struct.Reg, %struct.Reg* %7594, i32 0, i32 0
  %RDX.i808 = bitcast %union.anon* %7595 to i64*
  %7596 = load i64, i64* %PC.i807
  %7597 = add i64 %7596, 5
  store i64 %7597, i64* %PC.i807
  store i64 1000000, i64* %RDX.i808, align 8
  store %struct.Memory* %loadMem_41b465, %struct.Memory** %MEMORY
  %loadMem_41b46a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 33
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %PC.i804 = bitcast %union.anon* %7600 to i64*
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 1
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %RAX.i805 = bitcast %union.anon* %7603 to i64*
  %7604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7605 = getelementptr inbounds %struct.GPR, %struct.GPR* %7604, i32 0, i32 15
  %7606 = getelementptr inbounds %struct.Reg, %struct.Reg* %7605, i32 0, i32 0
  %RBP.i806 = bitcast %union.anon* %7606 to i64*
  %7607 = load i64, i64* %RBP.i806
  %7608 = sub i64 %7607, 48
  %7609 = load i64, i64* %PC.i804
  %7610 = add i64 %7609, 4
  store i64 %7610, i64* %PC.i804
  %7611 = inttoptr i64 %7608 to i64*
  %7612 = load i64, i64* %7611
  store i64 %7612, i64* %RAX.i805, align 8
  store %struct.Memory* %loadMem_41b46a, %struct.Memory** %MEMORY
  %loadMem_41b46e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7614 = getelementptr inbounds %struct.GPR, %struct.GPR* %7613, i32 0, i32 33
  %7615 = getelementptr inbounds %struct.Reg, %struct.Reg* %7614, i32 0, i32 0
  %PC.i801 = bitcast %union.anon* %7615 to i64*
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7617 = getelementptr inbounds %struct.GPR, %struct.GPR* %7616, i32 0, i32 1
  %7618 = getelementptr inbounds %struct.Reg, %struct.Reg* %7617, i32 0, i32 0
  %RAX.i802 = bitcast %union.anon* %7618 to i64*
  %7619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7620 = getelementptr inbounds %struct.GPR, %struct.GPR* %7619, i32 0, i32 15
  %7621 = getelementptr inbounds %struct.Reg, %struct.Reg* %7620, i32 0, i32 0
  %RBP.i803 = bitcast %union.anon* %7621 to i64*
  %7622 = load i64, i64* %RBP.i803
  %7623 = sub i64 %7622, 24
  %7624 = load i64, i64* %RAX.i802
  %7625 = load i64, i64* %PC.i801
  %7626 = add i64 %7625, 4
  store i64 %7626, i64* %PC.i801
  %7627 = inttoptr i64 %7623 to i64*
  store i64 %7624, i64* %7627
  store %struct.Memory* %loadMem_41b46e, %struct.Memory** %MEMORY
  %loadMem_41b472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7629 = getelementptr inbounds %struct.GPR, %struct.GPR* %7628, i32 0, i32 33
  %7630 = getelementptr inbounds %struct.Reg, %struct.Reg* %7629, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %7630 to i64*
  %7631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7632 = getelementptr inbounds %struct.GPR, %struct.GPR* %7631, i32 0, i32 1
  %7633 = getelementptr inbounds %struct.Reg, %struct.Reg* %7632, i32 0, i32 0
  %RAX.i799 = bitcast %union.anon* %7633 to i64*
  %7634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7635 = getelementptr inbounds %struct.GPR, %struct.GPR* %7634, i32 0, i32 15
  %7636 = getelementptr inbounds %struct.Reg, %struct.Reg* %7635, i32 0, i32 0
  %RBP.i800 = bitcast %union.anon* %7636 to i64*
  %7637 = load i64, i64* %RBP.i800
  %7638 = sub i64 %7637, 40
  %7639 = load i64, i64* %PC.i798
  %7640 = add i64 %7639, 4
  store i64 %7640, i64* %PC.i798
  %7641 = inttoptr i64 %7638 to i64*
  %7642 = load i64, i64* %7641
  store i64 %7642, i64* %RAX.i799, align 8
  store %struct.Memory* %loadMem_41b472, %struct.Memory** %MEMORY
  %loadMem_41b476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7644 = getelementptr inbounds %struct.GPR, %struct.GPR* %7643, i32 0, i32 33
  %7645 = getelementptr inbounds %struct.Reg, %struct.Reg* %7644, i32 0, i32 0
  %PC.i795 = bitcast %union.anon* %7645 to i64*
  %7646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7647 = getelementptr inbounds %struct.GPR, %struct.GPR* %7646, i32 0, i32 1
  %7648 = getelementptr inbounds %struct.Reg, %struct.Reg* %7647, i32 0, i32 0
  %RAX.i796 = bitcast %union.anon* %7648 to i64*
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7650 = getelementptr inbounds %struct.GPR, %struct.GPR* %7649, i32 0, i32 15
  %7651 = getelementptr inbounds %struct.Reg, %struct.Reg* %7650, i32 0, i32 0
  %RBP.i797 = bitcast %union.anon* %7651 to i64*
  %7652 = load i64, i64* %RBP.i797
  %7653 = sub i64 %7652, 16
  %7654 = load i64, i64* %RAX.i796
  %7655 = load i64, i64* %PC.i795
  %7656 = add i64 %7655, 4
  store i64 %7656, i64* %PC.i795
  %7657 = inttoptr i64 %7653 to i64*
  store i64 %7654, i64* %7657
  store %struct.Memory* %loadMem_41b476, %struct.Memory** %MEMORY
  %loadMem_41b47a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7659 = getelementptr inbounds %struct.GPR, %struct.GPR* %7658, i32 0, i32 33
  %7660 = getelementptr inbounds %struct.Reg, %struct.Reg* %7659, i32 0, i32 0
  %PC.i792 = bitcast %union.anon* %7660 to i64*
  %7661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7662 = getelementptr inbounds %struct.GPR, %struct.GPR* %7661, i32 0, i32 1
  %7663 = getelementptr inbounds %struct.Reg, %struct.Reg* %7662, i32 0, i32 0
  %RAX.i793 = bitcast %union.anon* %7663 to i64*
  %7664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7665 = getelementptr inbounds %struct.GPR, %struct.GPR* %7664, i32 0, i32 15
  %7666 = getelementptr inbounds %struct.Reg, %struct.Reg* %7665, i32 0, i32 0
  %RBP.i794 = bitcast %union.anon* %7666 to i64*
  %7667 = load i64, i64* %RBP.i794
  %7668 = sub i64 %7667, 32
  %7669 = load i64, i64* %PC.i792
  %7670 = add i64 %7669, 4
  store i64 %7670, i64* %PC.i792
  %7671 = inttoptr i64 %7668 to i64*
  %7672 = load i64, i64* %7671
  store i64 %7672, i64* %RAX.i793, align 8
  store %struct.Memory* %loadMem_41b47a, %struct.Memory** %MEMORY
  %loadMem_41b47e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7674 = getelementptr inbounds %struct.GPR, %struct.GPR* %7673, i32 0, i32 33
  %7675 = getelementptr inbounds %struct.Reg, %struct.Reg* %7674, i32 0, i32 0
  %PC.i789 = bitcast %union.anon* %7675 to i64*
  %7676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7677 = getelementptr inbounds %struct.GPR, %struct.GPR* %7676, i32 0, i32 1
  %7678 = getelementptr inbounds %struct.Reg, %struct.Reg* %7677, i32 0, i32 0
  %RAX.i790 = bitcast %union.anon* %7678 to i64*
  %7679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7680 = getelementptr inbounds %struct.GPR, %struct.GPR* %7679, i32 0, i32 15
  %7681 = getelementptr inbounds %struct.Reg, %struct.Reg* %7680, i32 0, i32 0
  %RBP.i791 = bitcast %union.anon* %7681 to i64*
  %7682 = load i64, i64* %RBP.i791
  %7683 = sub i64 %7682, 8
  %7684 = load i64, i64* %RAX.i790
  %7685 = load i64, i64* %PC.i789
  %7686 = add i64 %7685, 4
  store i64 %7686, i64* %PC.i789
  %7687 = inttoptr i64 %7683 to i64*
  store i64 %7684, i64* %7687
  store %struct.Memory* %loadMem_41b47e, %struct.Memory** %MEMORY
  %loadMem_41b482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7689 = getelementptr inbounds %struct.GPR, %struct.GPR* %7688, i32 0, i32 33
  %7690 = getelementptr inbounds %struct.Reg, %struct.Reg* %7689, i32 0, i32 0
  %PC.i787 = bitcast %union.anon* %7690 to i64*
  %7691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7692 = getelementptr inbounds %struct.GPR, %struct.GPR* %7691, i32 0, i32 5
  %7693 = getelementptr inbounds %struct.Reg, %struct.Reg* %7692, i32 0, i32 0
  %RCX.i788 = bitcast %union.anon* %7693 to i64*
  %7694 = load i64, i64* %PC.i787
  %7695 = add i64 %7694, 7
  store i64 %7695, i64* %PC.i787
  %7696 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %7697 = zext i32 %7696 to i64
  store i64 %7697, i64* %RCX.i788, align 8
  store %struct.Memory* %loadMem_41b482, %struct.Memory** %MEMORY
  %loadMem_41b489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7699 = getelementptr inbounds %struct.GPR, %struct.GPR* %7698, i32 0, i32 33
  %7700 = getelementptr inbounds %struct.Reg, %struct.Reg* %7699, i32 0, i32 0
  %PC.i784 = bitcast %union.anon* %7700 to i64*
  %7701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7702 = getelementptr inbounds %struct.GPR, %struct.GPR* %7701, i32 0, i32 5
  %7703 = getelementptr inbounds %struct.Reg, %struct.Reg* %7702, i32 0, i32 0
  %ECX.i785 = bitcast %union.anon* %7703 to i32*
  %7704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7705 = getelementptr inbounds %struct.GPR, %struct.GPR* %7704, i32 0, i32 15
  %7706 = getelementptr inbounds %struct.Reg, %struct.Reg* %7705, i32 0, i32 0
  %RBP.i786 = bitcast %union.anon* %7706 to i64*
  %7707 = load i64, i64* %RBP.i786
  %7708 = sub i64 %7707, 92
  %7709 = load i32, i32* %ECX.i785
  %7710 = zext i32 %7709 to i64
  %7711 = load i64, i64* %PC.i784
  %7712 = add i64 %7711, 3
  store i64 %7712, i64* %PC.i784
  %7713 = inttoptr i64 %7708 to i32*
  store i32 %7709, i32* %7713
  store %struct.Memory* %loadMem_41b489, %struct.Memory** %MEMORY
  %loadMem_41b48c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7715 = getelementptr inbounds %struct.GPR, %struct.GPR* %7714, i32 0, i32 33
  %7716 = getelementptr inbounds %struct.Reg, %struct.Reg* %7715, i32 0, i32 0
  %PC.i781 = bitcast %union.anon* %7716 to i64*
  %7717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7718 = getelementptr inbounds %struct.GPR, %struct.GPR* %7717, i32 0, i32 5
  %7719 = getelementptr inbounds %struct.Reg, %struct.Reg* %7718, i32 0, i32 0
  %RCX.i782 = bitcast %union.anon* %7719 to i64*
  %7720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7721 = getelementptr inbounds %struct.GPR, %struct.GPR* %7720, i32 0, i32 15
  %7722 = getelementptr inbounds %struct.Reg, %struct.Reg* %7721, i32 0, i32 0
  %RBP.i783 = bitcast %union.anon* %7722 to i64*
  %7723 = load i64, i64* %RBP.i783
  %7724 = sub i64 %7723, 112
  %7725 = load i64, i64* %PC.i781
  %7726 = add i64 %7725, 3
  store i64 %7726, i64* %PC.i781
  %7727 = inttoptr i64 %7724 to i32*
  %7728 = load i32, i32* %7727
  %7729 = zext i32 %7728 to i64
  store i64 %7729, i64* %RCX.i782, align 8
  store %struct.Memory* %loadMem_41b48c, %struct.Memory** %MEMORY
  %loadMem_41b48f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7731 = getelementptr inbounds %struct.GPR, %struct.GPR* %7730, i32 0, i32 33
  %7732 = getelementptr inbounds %struct.Reg, %struct.Reg* %7731, i32 0, i32 0
  %PC.i779 = bitcast %union.anon* %7732 to i64*
  %7733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7734 = getelementptr inbounds %struct.GPR, %struct.GPR* %7733, i32 0, i32 5
  %7735 = getelementptr inbounds %struct.Reg, %struct.Reg* %7734, i32 0, i32 0
  %RCX.i780 = bitcast %union.anon* %7735 to i64*
  %7736 = load i64, i64* %RCX.i780
  %7737 = load i64, i64* %PC.i779
  %7738 = add i64 %7737, 3
  store i64 %7738, i64* %PC.i779
  %7739 = trunc i64 %7736 to i32
  %7740 = add i32 1, %7739
  %7741 = zext i32 %7740 to i64
  store i64 %7741, i64* %RCX.i780, align 8
  %7742 = icmp ult i32 %7740, %7739
  %7743 = icmp ult i32 %7740, 1
  %7744 = or i1 %7742, %7743
  %7745 = zext i1 %7744 to i8
  %7746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7745, i8* %7746, align 1
  %7747 = and i32 %7740, 255
  %7748 = call i32 @llvm.ctpop.i32(i32 %7747)
  %7749 = trunc i32 %7748 to i8
  %7750 = and i8 %7749, 1
  %7751 = xor i8 %7750, 1
  %7752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7751, i8* %7752, align 1
  %7753 = xor i64 1, %7736
  %7754 = trunc i64 %7753 to i32
  %7755 = xor i32 %7754, %7740
  %7756 = lshr i32 %7755, 4
  %7757 = trunc i32 %7756 to i8
  %7758 = and i8 %7757, 1
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7758, i8* %7759, align 1
  %7760 = icmp eq i32 %7740, 0
  %7761 = zext i1 %7760 to i8
  %7762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7761, i8* %7762, align 1
  %7763 = lshr i32 %7740, 31
  %7764 = trunc i32 %7763 to i8
  %7765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7764, i8* %7765, align 1
  %7766 = lshr i32 %7739, 31
  %7767 = xor i32 %7763, %7766
  %7768 = add i32 %7767, %7763
  %7769 = icmp eq i32 %7768, 2
  %7770 = zext i1 %7769 to i8
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7770, i8* %7771, align 1
  store %struct.Memory* %loadMem_41b48f, %struct.Memory** %MEMORY
  %loadMem_41b492 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7773 = getelementptr inbounds %struct.GPR, %struct.GPR* %7772, i32 0, i32 33
  %7774 = getelementptr inbounds %struct.Reg, %struct.Reg* %7773, i32 0, i32 0
  %PC.i776 = bitcast %union.anon* %7774 to i64*
  %7775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7776 = getelementptr inbounds %struct.GPR, %struct.GPR* %7775, i32 0, i32 5
  %7777 = getelementptr inbounds %struct.Reg, %struct.Reg* %7776, i32 0, i32 0
  %ECX.i777 = bitcast %union.anon* %7777 to i32*
  %7778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7779 = getelementptr inbounds %struct.GPR, %struct.GPR* %7778, i32 0, i32 15
  %7780 = getelementptr inbounds %struct.Reg, %struct.Reg* %7779, i32 0, i32 0
  %RBP.i778 = bitcast %union.anon* %7780 to i64*
  %7781 = load i64, i64* %RBP.i778
  %7782 = sub i64 %7781, 112
  %7783 = load i32, i32* %ECX.i777
  %7784 = zext i32 %7783 to i64
  %7785 = load i64, i64* %PC.i776
  %7786 = add i64 %7785, 3
  store i64 %7786, i64* %PC.i776
  %7787 = inttoptr i64 %7782 to i32*
  store i32 %7783, i32* %7787
  store %struct.Memory* %loadMem_41b492, %struct.Memory** %MEMORY
  %loadMem_41b495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7789 = getelementptr inbounds %struct.GPR, %struct.GPR* %7788, i32 0, i32 33
  %7790 = getelementptr inbounds %struct.Reg, %struct.Reg* %7789, i32 0, i32 0
  %PC.i774 = bitcast %union.anon* %7790 to i64*
  %7791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7792 = getelementptr inbounds %struct.GPR, %struct.GPR* %7791, i32 0, i32 5
  %7793 = getelementptr inbounds %struct.Reg, %struct.Reg* %7792, i32 0, i32 0
  %RCX.i775 = bitcast %union.anon* %7793 to i64*
  %7794 = load i64, i64* %PC.i774
  %7795 = add i64 %7794, 7
  store i64 %7795, i64* %PC.i774
  %7796 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %7797 = zext i32 %7796 to i64
  store i64 %7797, i64* %RCX.i775, align 8
  store %struct.Memory* %loadMem_41b495, %struct.Memory** %MEMORY
  %loadMem1_41b49c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7799 = getelementptr inbounds %struct.GPR, %struct.GPR* %7798, i32 0, i32 33
  %7800 = getelementptr inbounds %struct.Reg, %struct.Reg* %7799, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %7800 to i64*
  %7801 = load i64, i64* %PC.i773
  %7802 = add i64 %7801, -8364
  %7803 = load i64, i64* %PC.i773
  %7804 = add i64 %7803, 5
  %7805 = load i64, i64* %PC.i773
  %7806 = add i64 %7805, 5
  store i64 %7806, i64* %PC.i773
  %7807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7808 = load i64, i64* %7807, align 8
  %7809 = add i64 %7808, -8
  %7810 = inttoptr i64 %7809 to i64*
  store i64 %7804, i64* %7810
  store i64 %7809, i64* %7807, align 8
  %7811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7802, i64* %7811, align 8
  store %struct.Memory* %loadMem1_41b49c, %struct.Memory** %MEMORY
  %loadMem2_41b49c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b49c = load i64, i64* %3
  %call2_41b49c = call %struct.Memory* @sub_4193f0.search_root(%struct.State* %0, i64 %loadPC_41b49c, %struct.Memory* %loadMem2_41b49c)
  store %struct.Memory* %call2_41b49c, %struct.Memory** %MEMORY
  %loadMem_41b4a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7813 = getelementptr inbounds %struct.GPR, %struct.GPR* %7812, i32 0, i32 33
  %7814 = getelementptr inbounds %struct.Reg, %struct.Reg* %7813, i32 0, i32 0
  %PC.i770 = bitcast %union.anon* %7814 to i64*
  %7815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7816 = getelementptr inbounds %struct.GPR, %struct.GPR* %7815, i32 0, i32 1
  %7817 = getelementptr inbounds %struct.Reg, %struct.Reg* %7816, i32 0, i32 0
  %RAX.i771 = bitcast %union.anon* %7817 to i64*
  %7818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7819 = getelementptr inbounds %struct.GPR, %struct.GPR* %7818, i32 0, i32 15
  %7820 = getelementptr inbounds %struct.Reg, %struct.Reg* %7819, i32 0, i32 0
  %RBP.i772 = bitcast %union.anon* %7820 to i64*
  %7821 = load i64, i64* %RBP.i772
  %7822 = sub i64 %7821, 12504
  %7823 = load i64, i64* %PC.i770
  %7824 = add i64 %7823, 7
  store i64 %7824, i64* %PC.i770
  %7825 = inttoptr i64 %7822 to i64*
  %7826 = load i64, i64* %7825
  store i64 %7826, i64* %RAX.i771, align 8
  store %struct.Memory* %loadMem_41b4a1, %struct.Memory** %MEMORY
  %loadMem_41b4a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7828 = getelementptr inbounds %struct.GPR, %struct.GPR* %7827, i32 0, i32 33
  %7829 = getelementptr inbounds %struct.Reg, %struct.Reg* %7828, i32 0, i32 0
  %PC.i767 = bitcast %union.anon* %7829 to i64*
  %7830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7831 = getelementptr inbounds %struct.GPR, %struct.GPR* %7830, i32 0, i32 1
  %7832 = getelementptr inbounds %struct.Reg, %struct.Reg* %7831, i32 0, i32 0
  %RAX.i768 = bitcast %union.anon* %7832 to i64*
  %7833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7834 = getelementptr inbounds %struct.GPR, %struct.GPR* %7833, i32 0, i32 15
  %7835 = getelementptr inbounds %struct.Reg, %struct.Reg* %7834, i32 0, i32 0
  %RBP.i769 = bitcast %union.anon* %7835 to i64*
  %7836 = load i64, i64* %RBP.i769
  %7837 = sub i64 %7836, 48
  %7838 = load i64, i64* %RAX.i768
  %7839 = load i64, i64* %PC.i767
  %7840 = add i64 %7839, 4
  store i64 %7840, i64* %PC.i767
  %7841 = inttoptr i64 %7837 to i64*
  store i64 %7838, i64* %7841
  store %struct.Memory* %loadMem_41b4a8, %struct.Memory** %MEMORY
  %loadMem_41b4ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %7842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7843 = getelementptr inbounds %struct.GPR, %struct.GPR* %7842, i32 0, i32 33
  %7844 = getelementptr inbounds %struct.Reg, %struct.Reg* %7843, i32 0, i32 0
  %PC.i764 = bitcast %union.anon* %7844 to i64*
  %7845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7846 = getelementptr inbounds %struct.GPR, %struct.GPR* %7845, i32 0, i32 1
  %7847 = getelementptr inbounds %struct.Reg, %struct.Reg* %7846, i32 0, i32 0
  %RAX.i765 = bitcast %union.anon* %7847 to i64*
  %7848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7849 = getelementptr inbounds %struct.GPR, %struct.GPR* %7848, i32 0, i32 15
  %7850 = getelementptr inbounds %struct.Reg, %struct.Reg* %7849, i32 0, i32 0
  %RBP.i766 = bitcast %union.anon* %7850 to i64*
  %7851 = load i64, i64* %RBP.i766
  %7852 = sub i64 %7851, 12496
  %7853 = load i64, i64* %PC.i764
  %7854 = add i64 %7853, 7
  store i64 %7854, i64* %PC.i764
  %7855 = inttoptr i64 %7852 to i64*
  %7856 = load i64, i64* %7855
  store i64 %7856, i64* %RAX.i765, align 8
  store %struct.Memory* %loadMem_41b4ac, %struct.Memory** %MEMORY
  %loadMem_41b4b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7858 = getelementptr inbounds %struct.GPR, %struct.GPR* %7857, i32 0, i32 33
  %7859 = getelementptr inbounds %struct.Reg, %struct.Reg* %7858, i32 0, i32 0
  %PC.i761 = bitcast %union.anon* %7859 to i64*
  %7860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7861 = getelementptr inbounds %struct.GPR, %struct.GPR* %7860, i32 0, i32 1
  %7862 = getelementptr inbounds %struct.Reg, %struct.Reg* %7861, i32 0, i32 0
  %RAX.i762 = bitcast %union.anon* %7862 to i64*
  %7863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7864 = getelementptr inbounds %struct.GPR, %struct.GPR* %7863, i32 0, i32 15
  %7865 = getelementptr inbounds %struct.Reg, %struct.Reg* %7864, i32 0, i32 0
  %RBP.i763 = bitcast %union.anon* %7865 to i64*
  %7866 = load i64, i64* %RBP.i763
  %7867 = sub i64 %7866, 40
  %7868 = load i64, i64* %RAX.i762
  %7869 = load i64, i64* %PC.i761
  %7870 = add i64 %7869, 4
  store i64 %7870, i64* %PC.i761
  %7871 = inttoptr i64 %7867 to i64*
  store i64 %7868, i64* %7871
  store %struct.Memory* %loadMem_41b4b3, %struct.Memory** %MEMORY
  %loadMem_41b4b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7873 = getelementptr inbounds %struct.GPR, %struct.GPR* %7872, i32 0, i32 33
  %7874 = getelementptr inbounds %struct.Reg, %struct.Reg* %7873, i32 0, i32 0
  %PC.i758 = bitcast %union.anon* %7874 to i64*
  %7875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7876 = getelementptr inbounds %struct.GPR, %struct.GPR* %7875, i32 0, i32 1
  %7877 = getelementptr inbounds %struct.Reg, %struct.Reg* %7876, i32 0, i32 0
  %RAX.i759 = bitcast %union.anon* %7877 to i64*
  %7878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7879 = getelementptr inbounds %struct.GPR, %struct.GPR* %7878, i32 0, i32 15
  %7880 = getelementptr inbounds %struct.Reg, %struct.Reg* %7879, i32 0, i32 0
  %RBP.i760 = bitcast %union.anon* %7880 to i64*
  %7881 = load i64, i64* %RBP.i760
  %7882 = sub i64 %7881, 12488
  %7883 = load i64, i64* %PC.i758
  %7884 = add i64 %7883, 7
  store i64 %7884, i64* %PC.i758
  %7885 = inttoptr i64 %7882 to i64*
  %7886 = load i64, i64* %7885
  store i64 %7886, i64* %RAX.i759, align 8
  store %struct.Memory* %loadMem_41b4b7, %struct.Memory** %MEMORY
  %loadMem_41b4be = load %struct.Memory*, %struct.Memory** %MEMORY
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7888 = getelementptr inbounds %struct.GPR, %struct.GPR* %7887, i32 0, i32 33
  %7889 = getelementptr inbounds %struct.Reg, %struct.Reg* %7888, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %7889 to i64*
  %7890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7891 = getelementptr inbounds %struct.GPR, %struct.GPR* %7890, i32 0, i32 1
  %7892 = getelementptr inbounds %struct.Reg, %struct.Reg* %7891, i32 0, i32 0
  %RAX.i756 = bitcast %union.anon* %7892 to i64*
  %7893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7894 = getelementptr inbounds %struct.GPR, %struct.GPR* %7893, i32 0, i32 15
  %7895 = getelementptr inbounds %struct.Reg, %struct.Reg* %7894, i32 0, i32 0
  %RBP.i757 = bitcast %union.anon* %7895 to i64*
  %7896 = load i64, i64* %RBP.i757
  %7897 = sub i64 %7896, 32
  %7898 = load i64, i64* %RAX.i756
  %7899 = load i64, i64* %PC.i755
  %7900 = add i64 %7899, 4
  store i64 %7900, i64* %PC.i755
  %7901 = inttoptr i64 %7897 to i64*
  store i64 %7898, i64* %7901
  store %struct.Memory* %loadMem_41b4be, %struct.Memory** %MEMORY
  %loadMem_41b4c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 33
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %PC.i754 = bitcast %union.anon* %7904 to i64*
  %7905 = load i64, i64* %PC.i754
  %7906 = add i64 %7905, 8
  store i64 %7906, i64* %PC.i754
  %7907 = load i32, i32* bitcast (%G_0x866788_type* @G_0x866788 to i32*)
  %7908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7908, align 1
  %7909 = and i32 %7907, 255
  %7910 = call i32 @llvm.ctpop.i32(i32 %7909)
  %7911 = trunc i32 %7910 to i8
  %7912 = and i8 %7911, 1
  %7913 = xor i8 %7912, 1
  %7914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7913, i8* %7914, align 1
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7915, align 1
  %7916 = icmp eq i32 %7907, 0
  %7917 = zext i1 %7916 to i8
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7917, i8* %7918, align 1
  %7919 = lshr i32 %7907, 31
  %7920 = trunc i32 %7919 to i8
  %7921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7920, i8* %7921, align 1
  %7922 = lshr i32 %7907, 31
  %7923 = xor i32 %7919, %7922
  %7924 = add i32 %7923, %7922
  %7925 = icmp eq i32 %7924, 2
  %7926 = zext i1 %7925 to i8
  %7927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7926, i8* %7927, align 1
  store %struct.Memory* %loadMem_41b4c2, %struct.Memory** %MEMORY
  %loadMem_41b4ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %7928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7929 = getelementptr inbounds %struct.GPR, %struct.GPR* %7928, i32 0, i32 33
  %7930 = getelementptr inbounds %struct.Reg, %struct.Reg* %7929, i32 0, i32 0
  %PC.i753 = bitcast %union.anon* %7930 to i64*
  %7931 = load i64, i64* %PC.i753
  %7932 = add i64 %7931, 17
  %7933 = load i64, i64* %PC.i753
  %7934 = add i64 %7933, 6
  %7935 = load i64, i64* %PC.i753
  %7936 = add i64 %7935, 6
  store i64 %7936, i64* %PC.i753
  %7937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7938 = load i8, i8* %7937, align 1
  %7939 = icmp eq i8 %7938, 0
  %7940 = zext i1 %7939 to i8
  store i8 %7940, i8* %BRANCH_TAKEN, align 1
  %7941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7942 = select i1 %7939, i64 %7932, i64 %7934
  store i64 %7942, i64* %7941, align 8
  store %struct.Memory* %loadMem_41b4ca, %struct.Memory** %MEMORY
  %loadBr_41b4ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b4ca = icmp eq i8 %loadBr_41b4ca, 1
  br i1 %cmpBr_41b4ca, label %block_.L_41b4db, label %block_41b4d0

block_41b4d0:                                     ; preds = %block_41b459
  %loadMem_41b4d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7944 = getelementptr inbounds %struct.GPR, %struct.GPR* %7943, i32 0, i32 33
  %7945 = getelementptr inbounds %struct.Reg, %struct.Reg* %7944, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %7945 to i64*
  %7946 = load i64, i64* %PC.i752
  %7947 = add i64 %7946, 11
  store i64 %7947, i64* %PC.i752
  store i32 0, i32* bitcast (%G_0x8644f4_type* @G_0x8644f4 to i32*)
  store %struct.Memory* %loadMem_41b4d0, %struct.Memory** %MEMORY
  br label %block_.L_41b4db

block_.L_41b4db:                                  ; preds = %block_41b4d0, %block_41b459
  %loadMem_41b4db = load %struct.Memory*, %struct.Memory** %MEMORY
  %7948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7949 = getelementptr inbounds %struct.GPR, %struct.GPR* %7948, i32 0, i32 33
  %7950 = getelementptr inbounds %struct.Reg, %struct.Reg* %7949, i32 0, i32 0
  %PC.i751 = bitcast %union.anon* %7950 to i64*
  %7951 = load i64, i64* %PC.i751
  %7952 = add i64 %7951, 5
  %7953 = load i64, i64* %PC.i751
  %7954 = add i64 %7953, 5
  store i64 %7954, i64* %PC.i751
  %7955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7952, i64* %7955, align 8
  store %struct.Memory* %loadMem_41b4db, %struct.Memory** %MEMORY
  br label %block_.L_41b4e0

block_.L_41b4e0:                                  ; preds = %block_.L_41b4db, %block_41b44b, %block_.L_41b43b
  %loadMem_41b4e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7957 = getelementptr inbounds %struct.GPR, %struct.GPR* %7956, i32 0, i32 33
  %7958 = getelementptr inbounds %struct.Reg, %struct.Reg* %7957, i32 0, i32 0
  %PC.i750 = bitcast %union.anon* %7958 to i64*
  %7959 = load i64, i64* %PC.i750
  %7960 = add i64 %7959, 5
  %7961 = load i64, i64* %PC.i750
  %7962 = add i64 %7961, 5
  store i64 %7962, i64* %PC.i750
  %7963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7960, i64* %7963, align 8
  store %struct.Memory* %loadMem_41b4e0, %struct.Memory** %MEMORY
  br label %block_.L_41b4e5

block_.L_41b4e5:                                  ; preds = %block_.L_41b4e0, %block_.L_41b436
  %loadMem1_41b4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7965 = getelementptr inbounds %struct.GPR, %struct.GPR* %7964, i32 0, i32 33
  %7966 = getelementptr inbounds %struct.Reg, %struct.Reg* %7965, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %7966 to i64*
  %7967 = load i64, i64* %PC.i749
  %7968 = add i64 %7967, 36603
  %7969 = load i64, i64* %PC.i749
  %7970 = add i64 %7969, 5
  %7971 = load i64, i64* %PC.i749
  %7972 = add i64 %7971, 5
  store i64 %7972, i64* %PC.i749
  %7973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7974 = load i64, i64* %7973, align 8
  %7975 = add i64 %7974, -8
  %7976 = inttoptr i64 %7975 to i64*
  store i64 %7970, i64* %7976
  store i64 %7975, i64* %7973, align 8
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7968, i64* %7977, align 8
  store %struct.Memory* %loadMem1_41b4e5, %struct.Memory** %MEMORY
  %loadMem2_41b4e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b4e5 = load i64, i64* %3
  %call2_41b4e5 = call %struct.Memory* @sub_4243e0.interrupt(%struct.State* %0, i64 %loadPC_41b4e5, %struct.Memory* %loadMem2_41b4e5)
  store %struct.Memory* %call2_41b4e5, %struct.Memory** %MEMORY
  %loadMem_41b4ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %7978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7979 = getelementptr inbounds %struct.GPR, %struct.GPR* %7978, i32 0, i32 33
  %7980 = getelementptr inbounds %struct.Reg, %struct.Reg* %7979, i32 0, i32 0
  %PC.i747 = bitcast %union.anon* %7980 to i64*
  %7981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7982 = getelementptr inbounds %struct.GPR, %struct.GPR* %7981, i32 0, i32 1
  %7983 = getelementptr inbounds %struct.Reg, %struct.Reg* %7982, i32 0, i32 0
  %EAX.i748 = bitcast %union.anon* %7983 to i32*
  %7984 = load i32, i32* %EAX.i748
  %7985 = zext i32 %7984 to i64
  %7986 = load i64, i64* %PC.i747
  %7987 = add i64 %7986, 3
  store i64 %7987, i64* %PC.i747
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7988, align 1
  %7989 = and i32 %7984, 255
  %7990 = call i32 @llvm.ctpop.i32(i32 %7989)
  %7991 = trunc i32 %7990 to i8
  %7992 = and i8 %7991, 1
  %7993 = xor i8 %7992, 1
  %7994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7993, i8* %7994, align 1
  %7995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7995, align 1
  %7996 = icmp eq i32 %7984, 0
  %7997 = zext i1 %7996 to i8
  %7998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7997, i8* %7998, align 1
  %7999 = lshr i32 %7984, 31
  %8000 = trunc i32 %7999 to i8
  %8001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8000, i8* %8001, align 1
  %8002 = lshr i32 %7984, 31
  %8003 = xor i32 %7999, %8002
  %8004 = add i32 %8003, %8002
  %8005 = icmp eq i32 %8004, 2
  %8006 = zext i1 %8005 to i8
  %8007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8006, i8* %8007, align 1
  store %struct.Memory* %loadMem_41b4ea, %struct.Memory** %MEMORY
  %loadMem_41b4ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %8008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8009 = getelementptr inbounds %struct.GPR, %struct.GPR* %8008, i32 0, i32 33
  %8010 = getelementptr inbounds %struct.Reg, %struct.Reg* %8009, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %8010 to i64*
  %8011 = load i64, i64* %PC.i746
  %8012 = add i64 %8011, 110
  %8013 = load i64, i64* %PC.i746
  %8014 = add i64 %8013, 6
  %8015 = load i64, i64* %PC.i746
  %8016 = add i64 %8015, 6
  store i64 %8016, i64* %PC.i746
  %8017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8018 = load i8, i8* %8017, align 1
  store i8 %8018, i8* %BRANCH_TAKEN, align 1
  %8019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8020 = icmp ne i8 %8018, 0
  %8021 = select i1 %8020, i64 %8012, i64 %8014
  store i64 %8021, i64* %8019, align 8
  store %struct.Memory* %loadMem_41b4ed, %struct.Memory** %MEMORY
  %loadBr_41b4ed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b4ed = icmp eq i8 %loadBr_41b4ed, 1
  br i1 %cmpBr_41b4ed, label %block_.L_41b55b, label %block_41b4f3

block_41b4f3:                                     ; preds = %block_.L_41b4e5
  %loadMem_41b4f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8023 = getelementptr inbounds %struct.GPR, %struct.GPR* %8022, i32 0, i32 33
  %8024 = getelementptr inbounds %struct.Reg, %struct.Reg* %8023, i32 0, i32 0
  %PC.i745 = bitcast %union.anon* %8024 to i64*
  %8025 = load i64, i64* %PC.i745
  %8026 = add i64 %8025, 8
  store i64 %8026, i64* %PC.i745
  %8027 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %8028 = sub i32 %8027, 1
  %8029 = icmp ult i32 %8027, 1
  %8030 = zext i1 %8029 to i8
  %8031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8030, i8* %8031, align 1
  %8032 = and i32 %8028, 255
  %8033 = call i32 @llvm.ctpop.i32(i32 %8032)
  %8034 = trunc i32 %8033 to i8
  %8035 = and i8 %8034, 1
  %8036 = xor i8 %8035, 1
  %8037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8036, i8* %8037, align 1
  %8038 = xor i32 %8027, 1
  %8039 = xor i32 %8038, %8028
  %8040 = lshr i32 %8039, 4
  %8041 = trunc i32 %8040 to i8
  %8042 = and i8 %8041, 1
  %8043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8042, i8* %8043, align 1
  %8044 = icmp eq i32 %8028, 0
  %8045 = zext i1 %8044 to i8
  %8046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8045, i8* %8046, align 1
  %8047 = lshr i32 %8028, 31
  %8048 = trunc i32 %8047 to i8
  %8049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8048, i8* %8049, align 1
  %8050 = lshr i32 %8027, 31
  %8051 = xor i32 %8047, %8050
  %8052 = add i32 %8051, %8050
  %8053 = icmp eq i32 %8052, 2
  %8054 = zext i1 %8053 to i8
  %8055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8054, i8* %8055, align 1
  store %struct.Memory* %loadMem_41b4f3, %struct.Memory** %MEMORY
  %loadMem_41b4fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %8056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8057 = getelementptr inbounds %struct.GPR, %struct.GPR* %8056, i32 0, i32 33
  %8058 = getelementptr inbounds %struct.Reg, %struct.Reg* %8057, i32 0, i32 0
  %PC.i744 = bitcast %union.anon* %8058 to i64*
  %8059 = load i64, i64* %PC.i744
  %8060 = add i64 %8059, 96
  %8061 = load i64, i64* %PC.i744
  %8062 = add i64 %8061, 6
  %8063 = load i64, i64* %PC.i744
  %8064 = add i64 %8063, 6
  store i64 %8064, i64* %PC.i744
  %8065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8066 = load i8, i8* %8065, align 1
  %8067 = icmp ne i8 %8066, 0
  %8068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8069 = load i8, i8* %8068, align 1
  %8070 = icmp ne i8 %8069, 0
  %8071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8072 = load i8, i8* %8071, align 1
  %8073 = icmp ne i8 %8072, 0
  %8074 = xor i1 %8070, %8073
  %8075 = or i1 %8067, %8074
  %8076 = zext i1 %8075 to i8
  store i8 %8076, i8* %BRANCH_TAKEN, align 1
  %8077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8078 = select i1 %8075, i64 %8060, i64 %8062
  store i64 %8078, i64* %8077, align 8
  store %struct.Memory* %loadMem_41b4fb, %struct.Memory** %MEMORY
  %loadBr_41b4fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b4fb = icmp eq i8 %loadBr_41b4fb, 1
  br i1 %cmpBr_41b4fb, label %block_.L_41b55b, label %block_41b501

block_41b501:                                     ; preds = %block_41b4f3
  %loadMem_41b501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8080 = getelementptr inbounds %struct.GPR, %struct.GPR* %8079, i32 0, i32 33
  %8081 = getelementptr inbounds %struct.Reg, %struct.Reg* %8080, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %8081 to i64*
  %8082 = load i64, i64* %PC.i743
  %8083 = add i64 %8082, 8
  store i64 %8083, i64* %PC.i743
  %8084 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8085, align 1
  %8086 = and i32 %8084, 255
  %8087 = call i32 @llvm.ctpop.i32(i32 %8086)
  %8088 = trunc i32 %8087 to i8
  %8089 = and i8 %8088, 1
  %8090 = xor i8 %8089, 1
  %8091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8090, i8* %8091, align 1
  %8092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8092, align 1
  %8093 = icmp eq i32 %8084, 0
  %8094 = zext i1 %8093 to i8
  %8095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8094, i8* %8095, align 1
  %8096 = lshr i32 %8084, 31
  %8097 = trunc i32 %8096 to i8
  %8098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8097, i8* %8098, align 1
  %8099 = lshr i32 %8084, 31
  %8100 = xor i32 %8096, %8099
  %8101 = add i32 %8100, %8099
  %8102 = icmp eq i32 %8101, 2
  %8103 = zext i1 %8102 to i8
  %8104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8103, i8* %8104, align 1
  store %struct.Memory* %loadMem_41b501, %struct.Memory** %MEMORY
  %loadMem_41b509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8106 = getelementptr inbounds %struct.GPR, %struct.GPR* %8105, i32 0, i32 33
  %8107 = getelementptr inbounds %struct.Reg, %struct.Reg* %8106, i32 0, i32 0
  %PC.i742 = bitcast %union.anon* %8107 to i64*
  %8108 = load i64, i64* %PC.i742
  %8109 = add i64 %8108, 53
  %8110 = load i64, i64* %PC.i742
  %8111 = add i64 %8110, 6
  %8112 = load i64, i64* %PC.i742
  %8113 = add i64 %8112, 6
  store i64 %8113, i64* %PC.i742
  %8114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8115 = load i8, i8* %8114, align 1
  store i8 %8115, i8* %BRANCH_TAKEN, align 1
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8117 = icmp ne i8 %8115, 0
  %8118 = select i1 %8117, i64 %8109, i64 %8111
  store i64 %8118, i64* %8116, align 8
  store %struct.Memory* %loadMem_41b509, %struct.Memory** %MEMORY
  %loadBr_41b509 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b509 = icmp eq i8 %loadBr_41b509, 1
  br i1 %cmpBr_41b509, label %block_.L_41b53e, label %block_41b50f

block_41b50f:                                     ; preds = %block_41b501
  %loadMem_41b50f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8120 = getelementptr inbounds %struct.GPR, %struct.GPR* %8119, i32 0, i32 33
  %8121 = getelementptr inbounds %struct.Reg, %struct.Reg* %8120, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %8121 to i64*
  %8122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8123 = getelementptr inbounds %struct.GPR, %struct.GPR* %8122, i32 0, i32 1
  %8124 = getelementptr inbounds %struct.Reg, %struct.Reg* %8123, i32 0, i32 0
  %RAX.i741 = bitcast %union.anon* %8124 to i64*
  %8125 = load i64, i64* %PC.i740
  %8126 = add i64 %8125, 8
  store i64 %8126, i64* %PC.i740
  %8127 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %8127, i64* %RAX.i741, align 8
  store %struct.Memory* %loadMem_41b50f, %struct.Memory** %MEMORY
  %loadMem_41b517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8129 = getelementptr inbounds %struct.GPR, %struct.GPR* %8128, i32 0, i32 33
  %8130 = getelementptr inbounds %struct.Reg, %struct.Reg* %8129, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %8130 to i64*
  %8131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8132 = getelementptr inbounds %struct.GPR, %struct.GPR* %8131, i32 0, i32 5
  %8133 = getelementptr inbounds %struct.Reg, %struct.Reg* %8132, i32 0, i32 0
  %RCX.i738 = bitcast %union.anon* %8133 to i64*
  %8134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8135 = getelementptr inbounds %struct.GPR, %struct.GPR* %8134, i32 0, i32 15
  %8136 = getelementptr inbounds %struct.Reg, %struct.Reg* %8135, i32 0, i32 0
  %RBP.i739 = bitcast %union.anon* %8136 to i64*
  %8137 = load i64, i64* %RBP.i739
  %8138 = sub i64 %8137, 12544
  %8139 = load i64, i64* %PC.i737
  %8140 = add i64 %8139, 7
  store i64 %8140, i64* %PC.i737
  %8141 = inttoptr i64 %8138 to i64*
  %8142 = load i64, i64* %8141
  store i64 %8142, i64* %RCX.i738, align 8
  store %struct.Memory* %loadMem_41b517, %struct.Memory** %MEMORY
  %loadMem_41b51e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8144 = getelementptr inbounds %struct.GPR, %struct.GPR* %8143, i32 0, i32 33
  %8145 = getelementptr inbounds %struct.Reg, %struct.Reg* %8144, i32 0, i32 0
  %PC.i734 = bitcast %union.anon* %8145 to i64*
  %8146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8147 = getelementptr inbounds %struct.GPR, %struct.GPR* %8146, i32 0, i32 1
  %8148 = getelementptr inbounds %struct.Reg, %struct.Reg* %8147, i32 0, i32 0
  %RAX.i735 = bitcast %union.anon* %8148 to i64*
  %8149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8150 = getelementptr inbounds %struct.GPR, %struct.GPR* %8149, i32 0, i32 5
  %8151 = getelementptr inbounds %struct.Reg, %struct.Reg* %8150, i32 0, i32 0
  %RCX.i736 = bitcast %union.anon* %8151 to i64*
  %8152 = load i64, i64* %RCX.i736
  %8153 = load i64, i64* %RAX.i735
  %8154 = load i64, i64* %PC.i734
  %8155 = add i64 %8154, 3
  store i64 %8155, i64* %PC.i734
  %8156 = inttoptr i64 %8152 to i64*
  store i64 %8153, i64* %8156
  store %struct.Memory* %loadMem_41b51e, %struct.Memory** %MEMORY
  %loadMem_41b521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8158 = getelementptr inbounds %struct.GPR, %struct.GPR* %8157, i32 0, i32 33
  %8159 = getelementptr inbounds %struct.Reg, %struct.Reg* %8158, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %8159 to i64*
  %8160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8161 = getelementptr inbounds %struct.GPR, %struct.GPR* %8160, i32 0, i32 1
  %8162 = getelementptr inbounds %struct.Reg, %struct.Reg* %8161, i32 0, i32 0
  %RAX.i733 = bitcast %union.anon* %8162 to i64*
  %8163 = load i64, i64* %PC.i732
  %8164 = add i64 %8163, 8
  store i64 %8164, i64* %PC.i732
  %8165 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %8165, i64* %RAX.i733, align 8
  store %struct.Memory* %loadMem_41b521, %struct.Memory** %MEMORY
  %loadMem_41b529 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8167 = getelementptr inbounds %struct.GPR, %struct.GPR* %8166, i32 0, i32 33
  %8168 = getelementptr inbounds %struct.Reg, %struct.Reg* %8167, i32 0, i32 0
  %PC.i729 = bitcast %union.anon* %8168 to i64*
  %8169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8170 = getelementptr inbounds %struct.GPR, %struct.GPR* %8169, i32 0, i32 1
  %8171 = getelementptr inbounds %struct.Reg, %struct.Reg* %8170, i32 0, i32 0
  %RAX.i730 = bitcast %union.anon* %8171 to i64*
  %8172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8173 = getelementptr inbounds %struct.GPR, %struct.GPR* %8172, i32 0, i32 5
  %8174 = getelementptr inbounds %struct.Reg, %struct.Reg* %8173, i32 0, i32 0
  %RCX.i731 = bitcast %union.anon* %8174 to i64*
  %8175 = load i64, i64* %RCX.i731
  %8176 = add i64 %8175, 8
  %8177 = load i64, i64* %RAX.i730
  %8178 = load i64, i64* %PC.i729
  %8179 = add i64 %8178, 4
  store i64 %8179, i64* %PC.i729
  %8180 = inttoptr i64 %8176 to i64*
  store i64 %8177, i64* %8180
  store %struct.Memory* %loadMem_41b529, %struct.Memory** %MEMORY
  %loadMem_41b52d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8182 = getelementptr inbounds %struct.GPR, %struct.GPR* %8181, i32 0, i32 33
  %8183 = getelementptr inbounds %struct.Reg, %struct.Reg* %8182, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %8183 to i64*
  %8184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8185 = getelementptr inbounds %struct.GPR, %struct.GPR* %8184, i32 0, i32 1
  %8186 = getelementptr inbounds %struct.Reg, %struct.Reg* %8185, i32 0, i32 0
  %RAX.i728 = bitcast %union.anon* %8186 to i64*
  %8187 = load i64, i64* %PC.i727
  %8188 = add i64 %8187, 8
  store i64 %8188, i64* %PC.i727
  %8189 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %8189, i64* %RAX.i728, align 8
  store %struct.Memory* %loadMem_41b52d, %struct.Memory** %MEMORY
  %loadMem_41b535 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8191 = getelementptr inbounds %struct.GPR, %struct.GPR* %8190, i32 0, i32 33
  %8192 = getelementptr inbounds %struct.Reg, %struct.Reg* %8191, i32 0, i32 0
  %PC.i724 = bitcast %union.anon* %8192 to i64*
  %8193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8194 = getelementptr inbounds %struct.GPR, %struct.GPR* %8193, i32 0, i32 1
  %8195 = getelementptr inbounds %struct.Reg, %struct.Reg* %8194, i32 0, i32 0
  %RAX.i725 = bitcast %union.anon* %8195 to i64*
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8197 = getelementptr inbounds %struct.GPR, %struct.GPR* %8196, i32 0, i32 5
  %8198 = getelementptr inbounds %struct.Reg, %struct.Reg* %8197, i32 0, i32 0
  %RCX.i726 = bitcast %union.anon* %8198 to i64*
  %8199 = load i64, i64* %RCX.i726
  %8200 = add i64 %8199, 16
  %8201 = load i64, i64* %RAX.i725
  %8202 = load i64, i64* %PC.i724
  %8203 = add i64 %8202, 4
  store i64 %8203, i64* %PC.i724
  %8204 = inttoptr i64 %8200 to i64*
  store i64 %8201, i64* %8204
  store %struct.Memory* %loadMem_41b535, %struct.Memory** %MEMORY
  %loadMem_41b539 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8206 = getelementptr inbounds %struct.GPR, %struct.GPR* %8205, i32 0, i32 33
  %8207 = getelementptr inbounds %struct.Reg, %struct.Reg* %8206, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %8207 to i64*
  %8208 = load i64, i64* %PC.i723
  %8209 = add i64 %8208, 2247
  %8210 = load i64, i64* %PC.i723
  %8211 = add i64 %8210, 5
  store i64 %8211, i64* %PC.i723
  %8212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8209, i64* %8212, align 8
  store %struct.Memory* %loadMem_41b539, %struct.Memory** %MEMORY
  br label %block_.L_41be00

block_.L_41b53e:                                  ; preds = %block_41b501
  %loadMem_41b53e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8214 = getelementptr inbounds %struct.GPR, %struct.GPR* %8213, i32 0, i32 33
  %8215 = getelementptr inbounds %struct.Reg, %struct.Reg* %8214, i32 0, i32 0
  %PC.i722 = bitcast %union.anon* %8215 to i64*
  %8216 = load i64, i64* %PC.i722
  %8217 = add i64 %8216, 8
  store i64 %8217, i64* %PC.i722
  %8218 = load i32, i32* bitcast (%G_0x886a60_type* @G_0x886a60 to i32*)
  %8219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8219, align 1
  %8220 = and i32 %8218, 255
  %8221 = call i32 @llvm.ctpop.i32(i32 %8220)
  %8222 = trunc i32 %8221 to i8
  %8223 = and i8 %8222, 1
  %8224 = xor i8 %8223, 1
  %8225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8224, i8* %8225, align 1
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8226, align 1
  %8227 = icmp eq i32 %8218, 0
  %8228 = zext i1 %8227 to i8
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8228, i8* %8229, align 1
  %8230 = lshr i32 %8218, 31
  %8231 = trunc i32 %8230 to i8
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8231, i8* %8232, align 1
  %8233 = lshr i32 %8218, 31
  %8234 = xor i32 %8230, %8233
  %8235 = add i32 %8234, %8233
  %8236 = icmp eq i32 %8235, 2
  %8237 = zext i1 %8236 to i8
  %8238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8237, i8* %8238, align 1
  store %struct.Memory* %loadMem_41b53e, %struct.Memory** %MEMORY
  %loadMem_41b546 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8240 = getelementptr inbounds %struct.GPR, %struct.GPR* %8239, i32 0, i32 33
  %8241 = getelementptr inbounds %struct.Reg, %struct.Reg* %8240, i32 0, i32 0
  %PC.i721 = bitcast %union.anon* %8241 to i64*
  %8242 = load i64, i64* %PC.i721
  %8243 = add i64 %8242, 11
  %8244 = load i64, i64* %PC.i721
  %8245 = add i64 %8244, 6
  %8246 = load i64, i64* %PC.i721
  %8247 = add i64 %8246, 6
  store i64 %8247, i64* %PC.i721
  %8248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8249 = load i8, i8* %8248, align 1
  %8250 = icmp eq i8 %8249, 0
  %8251 = zext i1 %8250 to i8
  store i8 %8251, i8* %BRANCH_TAKEN, align 1
  %8252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8253 = select i1 %8250, i64 %8243, i64 %8245
  store i64 %8253, i64* %8252, align 8
  store %struct.Memory* %loadMem_41b546, %struct.Memory** %MEMORY
  %loadBr_41b546 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b546 = icmp eq i8 %loadBr_41b546, 1
  br i1 %cmpBr_41b546, label %block_.L_41b551, label %block_41b54c

block_41b54c:                                     ; preds = %block_.L_41b53e
  %loadMem_41b54c = load %struct.Memory*, %struct.Memory** %MEMORY
  %8254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8255 = getelementptr inbounds %struct.GPR, %struct.GPR* %8254, i32 0, i32 33
  %8256 = getelementptr inbounds %struct.Reg, %struct.Reg* %8255, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %8256 to i64*
  %8257 = load i64, i64* %PC.i720
  %8258 = add i64 %8257, 385
  %8259 = load i64, i64* %PC.i720
  %8260 = add i64 %8259, 5
  store i64 %8260, i64* %PC.i720
  %8261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8258, i64* %8261, align 8
  store %struct.Memory* %loadMem_41b54c, %struct.Memory** %MEMORY
  br label %block_.L_41b6cd

block_.L_41b551:                                  ; preds = %block_.L_41b53e
  %loadMem_41b551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8263 = getelementptr inbounds %struct.GPR, %struct.GPR* %8262, i32 0, i32 33
  %8264 = getelementptr inbounds %struct.Reg, %struct.Reg* %8263, i32 0, i32 0
  %PC.i719 = bitcast %union.anon* %8264 to i64*
  %8265 = load i64, i64* %PC.i719
  %8266 = add i64 %8265, 5
  %8267 = load i64, i64* %PC.i719
  %8268 = add i64 %8267, 5
  store i64 %8268, i64* %PC.i719
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8266, i64* %8269, align 8
  store %struct.Memory* %loadMem_41b551, %struct.Memory** %MEMORY
  br label %block_.L_41b556

block_.L_41b556:                                  ; preds = %block_.L_41b551
  %loadMem_41b556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8271 = getelementptr inbounds %struct.GPR, %struct.GPR* %8270, i32 0, i32 33
  %8272 = getelementptr inbounds %struct.Reg, %struct.Reg* %8271, i32 0, i32 0
  %PC.i718 = bitcast %union.anon* %8272 to i64*
  %8273 = load i64, i64* %PC.i718
  %8274 = add i64 %8273, 5
  %8275 = load i64, i64* %PC.i718
  %8276 = add i64 %8275, 5
  store i64 %8276, i64* %PC.i718
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8274, i64* %8277, align 8
  store %struct.Memory* %loadMem_41b556, %struct.Memory** %MEMORY
  br label %block_.L_41b55b

block_.L_41b55b:                                  ; preds = %block_.L_41b556, %block_41b4f3, %block_.L_41b4e5
  %loadMem_41b55b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8279 = getelementptr inbounds %struct.GPR, %struct.GPR* %8278, i32 0, i32 33
  %8280 = getelementptr inbounds %struct.Reg, %struct.Reg* %8279, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %8280 to i64*
  %8281 = load i64, i64* %PC.i717
  %8282 = add i64 %8281, 8
  store i64 %8282, i64* %PC.i717
  %8283 = load i32, i32* bitcast (%G_0x8661dc_type* @G_0x8661dc to i32*)
  %8284 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8284, align 1
  %8285 = and i32 %8283, 255
  %8286 = call i32 @llvm.ctpop.i32(i32 %8285)
  %8287 = trunc i32 %8286 to i8
  %8288 = and i8 %8287, 1
  %8289 = xor i8 %8288, 1
  %8290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8289, i8* %8290, align 1
  %8291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8291, align 1
  %8292 = icmp eq i32 %8283, 0
  %8293 = zext i1 %8292 to i8
  %8294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8293, i8* %8294, align 1
  %8295 = lshr i32 %8283, 31
  %8296 = trunc i32 %8295 to i8
  %8297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8296, i8* %8297, align 1
  %8298 = lshr i32 %8283, 31
  %8299 = xor i32 %8295, %8298
  %8300 = add i32 %8299, %8298
  %8301 = icmp eq i32 %8300, 2
  %8302 = zext i1 %8301 to i8
  %8303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8302, i8* %8303, align 1
  store %struct.Memory* %loadMem_41b55b, %struct.Memory** %MEMORY
  %loadMem_41b563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8305 = getelementptr inbounds %struct.GPR, %struct.GPR* %8304, i32 0, i32 33
  %8306 = getelementptr inbounds %struct.Reg, %struct.Reg* %8305, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %8306 to i64*
  %8307 = load i64, i64* %PC.i716
  %8308 = add i64 %8307, 237
  %8309 = load i64, i64* %PC.i716
  %8310 = add i64 %8309, 6
  %8311 = load i64, i64* %PC.i716
  %8312 = add i64 %8311, 6
  store i64 %8312, i64* %PC.i716
  %8313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8314 = load i8, i8* %8313, align 1
  %8315 = icmp eq i8 %8314, 0
  %8316 = zext i1 %8315 to i8
  store i8 %8316, i8* %BRANCH_TAKEN, align 1
  %8317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8318 = select i1 %8315, i64 %8308, i64 %8310
  store i64 %8318, i64* %8317, align 8
  store %struct.Memory* %loadMem_41b563, %struct.Memory** %MEMORY
  %loadBr_41b563 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b563 = icmp eq i8 %loadBr_41b563, 1
  br i1 %cmpBr_41b563, label %block_.L_41b650, label %block_41b569

block_41b569:                                     ; preds = %block_.L_41b55b
  %loadMem_41b569 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8320 = getelementptr inbounds %struct.GPR, %struct.GPR* %8319, i32 0, i32 33
  %8321 = getelementptr inbounds %struct.Reg, %struct.Reg* %8320, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %8321 to i64*
  %8322 = load i64, i64* %PC.i715
  %8323 = add i64 %8322, 8
  store i64 %8323, i64* %PC.i715
  %8324 = load i32, i32* bitcast (%G_0x8644f4_type* @G_0x8644f4 to i32*)
  %8325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8325, align 1
  %8326 = and i32 %8324, 255
  %8327 = call i32 @llvm.ctpop.i32(i32 %8326)
  %8328 = trunc i32 %8327 to i8
  %8329 = and i8 %8328, 1
  %8330 = xor i8 %8329, 1
  %8331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8330, i8* %8331, align 1
  %8332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8332, align 1
  %8333 = icmp eq i32 %8324, 0
  %8334 = zext i1 %8333 to i8
  %8335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8334, i8* %8335, align 1
  %8336 = lshr i32 %8324, 31
  %8337 = trunc i32 %8336 to i8
  %8338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8337, i8* %8338, align 1
  %8339 = lshr i32 %8324, 31
  %8340 = xor i32 %8336, %8339
  %8341 = add i32 %8340, %8339
  %8342 = icmp eq i32 %8341, 2
  %8343 = zext i1 %8342 to i8
  %8344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8343, i8* %8344, align 1
  store %struct.Memory* %loadMem_41b569, %struct.Memory** %MEMORY
  %loadMem_41b571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8346 = getelementptr inbounds %struct.GPR, %struct.GPR* %8345, i32 0, i32 33
  %8347 = getelementptr inbounds %struct.Reg, %struct.Reg* %8346, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %8347 to i64*
  %8348 = load i64, i64* %PC.i714
  %8349 = add i64 %8348, 223
  %8350 = load i64, i64* %PC.i714
  %8351 = add i64 %8350, 6
  %8352 = load i64, i64* %PC.i714
  %8353 = add i64 %8352, 6
  store i64 %8353, i64* %PC.i714
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8355 = load i8, i8* %8354, align 1
  %8356 = icmp eq i8 %8355, 0
  %8357 = zext i1 %8356 to i8
  store i8 %8357, i8* %BRANCH_TAKEN, align 1
  %8358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8359 = select i1 %8356, i64 %8349, i64 %8351
  store i64 %8359, i64* %8358, align 8
  store %struct.Memory* %loadMem_41b571, %struct.Memory** %MEMORY
  %loadBr_41b571 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b571 = icmp eq i8 %loadBr_41b571, 1
  br i1 %cmpBr_41b571, label %block_.L_41b650, label %block_41b577

block_41b577:                                     ; preds = %block_41b569
  %loadMem_41b577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8361 = getelementptr inbounds %struct.GPR, %struct.GPR* %8360, i32 0, i32 33
  %8362 = getelementptr inbounds %struct.Reg, %struct.Reg* %8361, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %8362 to i64*
  %8363 = load i64, i64* %PC.i713
  %8364 = add i64 %8363, 11
  store i64 %8364, i64* %PC.i713
  %8365 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %8366 = sub i32 %8365, -1000000
  %8367 = icmp ult i32 %8365, -1000000
  %8368 = zext i1 %8367 to i8
  %8369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8368, i8* %8369, align 1
  %8370 = and i32 %8366, 255
  %8371 = call i32 @llvm.ctpop.i32(i32 %8370)
  %8372 = trunc i32 %8371 to i8
  %8373 = and i8 %8372, 1
  %8374 = xor i8 %8373, 1
  %8375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8374, i8* %8375, align 1
  %8376 = xor i32 %8365, -1000000
  %8377 = xor i32 %8376, %8366
  %8378 = lshr i32 %8377, 4
  %8379 = trunc i32 %8378 to i8
  %8380 = and i8 %8379, 1
  %8381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8380, i8* %8381, align 1
  %8382 = icmp eq i32 %8366, 0
  %8383 = zext i1 %8382 to i8
  %8384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8383, i8* %8384, align 1
  %8385 = lshr i32 %8366, 31
  %8386 = trunc i32 %8385 to i8
  %8387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8386, i8* %8387, align 1
  %8388 = lshr i32 %8365, 31
  %8389 = xor i32 %8388, 1
  %8390 = xor i32 %8385, %8388
  %8391 = add i32 %8390, %8389
  %8392 = icmp eq i32 %8391, 2
  %8393 = zext i1 %8392 to i8
  %8394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8393, i8* %8394, align 1
  store %struct.Memory* %loadMem_41b577, %struct.Memory** %MEMORY
  %loadMem_41b582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8396 = getelementptr inbounds %struct.GPR, %struct.GPR* %8395, i32 0, i32 33
  %8397 = getelementptr inbounds %struct.Reg, %struct.Reg* %8396, i32 0, i32 0
  %PC.i712 = bitcast %union.anon* %8397 to i64*
  %8398 = load i64, i64* %PC.i712
  %8399 = add i64 %8398, 53
  %8400 = load i64, i64* %PC.i712
  %8401 = add i64 %8400, 6
  %8402 = load i64, i64* %PC.i712
  %8403 = add i64 %8402, 6
  store i64 %8403, i64* %PC.i712
  %8404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8405 = load i8, i8* %8404, align 1
  %8406 = icmp eq i8 %8405, 0
  %8407 = zext i1 %8406 to i8
  store i8 %8407, i8* %BRANCH_TAKEN, align 1
  %8408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8409 = select i1 %8406, i64 %8399, i64 %8401
  store i64 %8409, i64* %8408, align 8
  store %struct.Memory* %loadMem_41b582, %struct.Memory** %MEMORY
  %loadBr_41b582 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b582 = icmp eq i8 %loadBr_41b582, 1
  br i1 %cmpBr_41b582, label %block_.L_41b5b7, label %block_41b588

block_41b588:                                     ; preds = %block_41b577
  %loadMem_41b588 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8411 = getelementptr inbounds %struct.GPR, %struct.GPR* %8410, i32 0, i32 33
  %8412 = getelementptr inbounds %struct.Reg, %struct.Reg* %8411, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %8412 to i64*
  %8413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8414 = getelementptr inbounds %struct.GPR, %struct.GPR* %8413, i32 0, i32 1
  %8415 = getelementptr inbounds %struct.Reg, %struct.Reg* %8414, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %8415 to i64*
  %8416 = load i64, i64* %PC.i710
  %8417 = add i64 %8416, 8
  store i64 %8417, i64* %PC.i710
  %8418 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %8418, i64* %RAX.i711, align 8
  store %struct.Memory* %loadMem_41b588, %struct.Memory** %MEMORY
  %loadMem_41b590 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8420 = getelementptr inbounds %struct.GPR, %struct.GPR* %8419, i32 0, i32 33
  %8421 = getelementptr inbounds %struct.Reg, %struct.Reg* %8420, i32 0, i32 0
  %PC.i707 = bitcast %union.anon* %8421 to i64*
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8423 = getelementptr inbounds %struct.GPR, %struct.GPR* %8422, i32 0, i32 5
  %8424 = getelementptr inbounds %struct.Reg, %struct.Reg* %8423, i32 0, i32 0
  %RCX.i708 = bitcast %union.anon* %8424 to i64*
  %8425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8426 = getelementptr inbounds %struct.GPR, %struct.GPR* %8425, i32 0, i32 15
  %8427 = getelementptr inbounds %struct.Reg, %struct.Reg* %8426, i32 0, i32 0
  %RBP.i709 = bitcast %union.anon* %8427 to i64*
  %8428 = load i64, i64* %RBP.i709
  %8429 = sub i64 %8428, 12544
  %8430 = load i64, i64* %PC.i707
  %8431 = add i64 %8430, 7
  store i64 %8431, i64* %PC.i707
  %8432 = inttoptr i64 %8429 to i64*
  %8433 = load i64, i64* %8432
  store i64 %8433, i64* %RCX.i708, align 8
  store %struct.Memory* %loadMem_41b590, %struct.Memory** %MEMORY
  %loadMem_41b597 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8435 = getelementptr inbounds %struct.GPR, %struct.GPR* %8434, i32 0, i32 33
  %8436 = getelementptr inbounds %struct.Reg, %struct.Reg* %8435, i32 0, i32 0
  %PC.i704 = bitcast %union.anon* %8436 to i64*
  %8437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8438 = getelementptr inbounds %struct.GPR, %struct.GPR* %8437, i32 0, i32 1
  %8439 = getelementptr inbounds %struct.Reg, %struct.Reg* %8438, i32 0, i32 0
  %RAX.i705 = bitcast %union.anon* %8439 to i64*
  %8440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8441 = getelementptr inbounds %struct.GPR, %struct.GPR* %8440, i32 0, i32 5
  %8442 = getelementptr inbounds %struct.Reg, %struct.Reg* %8441, i32 0, i32 0
  %RCX.i706 = bitcast %union.anon* %8442 to i64*
  %8443 = load i64, i64* %RCX.i706
  %8444 = load i64, i64* %RAX.i705
  %8445 = load i64, i64* %PC.i704
  %8446 = add i64 %8445, 3
  store i64 %8446, i64* %PC.i704
  %8447 = inttoptr i64 %8443 to i64*
  store i64 %8444, i64* %8447
  store %struct.Memory* %loadMem_41b597, %struct.Memory** %MEMORY
  %loadMem_41b59a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8449 = getelementptr inbounds %struct.GPR, %struct.GPR* %8448, i32 0, i32 33
  %8450 = getelementptr inbounds %struct.Reg, %struct.Reg* %8449, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %8450 to i64*
  %8451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8452 = getelementptr inbounds %struct.GPR, %struct.GPR* %8451, i32 0, i32 1
  %8453 = getelementptr inbounds %struct.Reg, %struct.Reg* %8452, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %8453 to i64*
  %8454 = load i64, i64* %PC.i702
  %8455 = add i64 %8454, 8
  store i64 %8455, i64* %PC.i702
  %8456 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %8456, i64* %RAX.i703, align 8
  store %struct.Memory* %loadMem_41b59a, %struct.Memory** %MEMORY
  %loadMem_41b5a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8458 = getelementptr inbounds %struct.GPR, %struct.GPR* %8457, i32 0, i32 33
  %8459 = getelementptr inbounds %struct.Reg, %struct.Reg* %8458, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %8459 to i64*
  %8460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8461 = getelementptr inbounds %struct.GPR, %struct.GPR* %8460, i32 0, i32 1
  %8462 = getelementptr inbounds %struct.Reg, %struct.Reg* %8461, i32 0, i32 0
  %RAX.i700 = bitcast %union.anon* %8462 to i64*
  %8463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8464 = getelementptr inbounds %struct.GPR, %struct.GPR* %8463, i32 0, i32 5
  %8465 = getelementptr inbounds %struct.Reg, %struct.Reg* %8464, i32 0, i32 0
  %RCX.i701 = bitcast %union.anon* %8465 to i64*
  %8466 = load i64, i64* %RCX.i701
  %8467 = add i64 %8466, 8
  %8468 = load i64, i64* %RAX.i700
  %8469 = load i64, i64* %PC.i699
  %8470 = add i64 %8469, 4
  store i64 %8470, i64* %PC.i699
  %8471 = inttoptr i64 %8467 to i64*
  store i64 %8468, i64* %8471
  store %struct.Memory* %loadMem_41b5a2, %struct.Memory** %MEMORY
  %loadMem_41b5a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8473 = getelementptr inbounds %struct.GPR, %struct.GPR* %8472, i32 0, i32 33
  %8474 = getelementptr inbounds %struct.Reg, %struct.Reg* %8473, i32 0, i32 0
  %PC.i697 = bitcast %union.anon* %8474 to i64*
  %8475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8476 = getelementptr inbounds %struct.GPR, %struct.GPR* %8475, i32 0, i32 1
  %8477 = getelementptr inbounds %struct.Reg, %struct.Reg* %8476, i32 0, i32 0
  %RAX.i698 = bitcast %union.anon* %8477 to i64*
  %8478 = load i64, i64* %PC.i697
  %8479 = add i64 %8478, 8
  store i64 %8479, i64* %PC.i697
  %8480 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %8480, i64* %RAX.i698, align 8
  store %struct.Memory* %loadMem_41b5a6, %struct.Memory** %MEMORY
  %loadMem_41b5ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %8481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8482 = getelementptr inbounds %struct.GPR, %struct.GPR* %8481, i32 0, i32 33
  %8483 = getelementptr inbounds %struct.Reg, %struct.Reg* %8482, i32 0, i32 0
  %PC.i694 = bitcast %union.anon* %8483 to i64*
  %8484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8485 = getelementptr inbounds %struct.GPR, %struct.GPR* %8484, i32 0, i32 1
  %8486 = getelementptr inbounds %struct.Reg, %struct.Reg* %8485, i32 0, i32 0
  %RAX.i695 = bitcast %union.anon* %8486 to i64*
  %8487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8488 = getelementptr inbounds %struct.GPR, %struct.GPR* %8487, i32 0, i32 5
  %8489 = getelementptr inbounds %struct.Reg, %struct.Reg* %8488, i32 0, i32 0
  %RCX.i696 = bitcast %union.anon* %8489 to i64*
  %8490 = load i64, i64* %RCX.i696
  %8491 = add i64 %8490, 16
  %8492 = load i64, i64* %RAX.i695
  %8493 = load i64, i64* %PC.i694
  %8494 = add i64 %8493, 4
  store i64 %8494, i64* %PC.i694
  %8495 = inttoptr i64 %8491 to i64*
  store i64 %8492, i64* %8495
  store %struct.Memory* %loadMem_41b5ae, %struct.Memory** %MEMORY
  %loadMem_41b5b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8497 = getelementptr inbounds %struct.GPR, %struct.GPR* %8496, i32 0, i32 33
  %8498 = getelementptr inbounds %struct.Reg, %struct.Reg* %8497, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %8498 to i64*
  %8499 = load i64, i64* %PC.i693
  %8500 = add i64 %8499, 2126
  %8501 = load i64, i64* %PC.i693
  %8502 = add i64 %8501, 5
  store i64 %8502, i64* %PC.i693
  %8503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8500, i64* %8503, align 8
  store %struct.Memory* %loadMem_41b5b2, %struct.Memory** %MEMORY
  br label %block_.L_41be00

block_.L_41b5b7:                                  ; preds = %block_41b577
  %loadMem_41b5b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8505 = getelementptr inbounds %struct.GPR, %struct.GPR* %8504, i32 0, i32 33
  %8506 = getelementptr inbounds %struct.Reg, %struct.Reg* %8505, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %8506 to i64*
  %8507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8508 = getelementptr inbounds %struct.GPR, %struct.GPR* %8507, i32 0, i32 11
  %8509 = getelementptr inbounds %struct.Reg, %struct.Reg* %8508, i32 0, i32 0
  %RDI.i692 = bitcast %union.anon* %8509 to i64*
  %8510 = load i64, i64* %PC.i691
  %8511 = add i64 %8510, 10
  store i64 %8511, i64* %PC.i691
  store i64 ptrtoint (%G__0x8822b0_type* @G__0x8822b0 to i64), i64* %RDI.i692, align 8
  store %struct.Memory* %loadMem_41b5b7, %struct.Memory** %MEMORY
  %loadMem_41b5c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8513 = getelementptr inbounds %struct.GPR, %struct.GPR* %8512, i32 0, i32 33
  %8514 = getelementptr inbounds %struct.Reg, %struct.Reg* %8513, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %8514 to i64*
  %8515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8516 = getelementptr inbounds %struct.GPR, %struct.GPR* %8515, i32 0, i32 1
  %8517 = getelementptr inbounds %struct.Reg, %struct.Reg* %8516, i32 0, i32 0
  %RAX.i689 = bitcast %union.anon* %8517 to i64*
  %8518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8519 = getelementptr inbounds %struct.GPR, %struct.GPR* %8518, i32 0, i32 15
  %8520 = getelementptr inbounds %struct.Reg, %struct.Reg* %8519, i32 0, i32 0
  %RBP.i690 = bitcast %union.anon* %8520 to i64*
  %8521 = load i64, i64* %RBP.i690
  %8522 = sub i64 %8521, 48
  %8523 = load i64, i64* %PC.i688
  %8524 = add i64 %8523, 4
  store i64 %8524, i64* %PC.i688
  %8525 = inttoptr i64 %8522 to i64*
  %8526 = load i64, i64* %8525
  store i64 %8526, i64* %RAX.i689, align 8
  store %struct.Memory* %loadMem_41b5c1, %struct.Memory** %MEMORY
  %loadMem_41b5c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8528 = getelementptr inbounds %struct.GPR, %struct.GPR* %8527, i32 0, i32 33
  %8529 = getelementptr inbounds %struct.Reg, %struct.Reg* %8528, i32 0, i32 0
  %PC.i685 = bitcast %union.anon* %8529 to i64*
  %8530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8531 = getelementptr inbounds %struct.GPR, %struct.GPR* %8530, i32 0, i32 1
  %8532 = getelementptr inbounds %struct.Reg, %struct.Reg* %8531, i32 0, i32 0
  %RAX.i686 = bitcast %union.anon* %8532 to i64*
  %8533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8534 = getelementptr inbounds %struct.GPR, %struct.GPR* %8533, i32 0, i32 15
  %8535 = getelementptr inbounds %struct.Reg, %struct.Reg* %8534, i32 0, i32 0
  %RBP.i687 = bitcast %union.anon* %8535 to i64*
  %8536 = load i64, i64* %RBP.i687
  %8537 = sub i64 %8536, 24
  %8538 = load i64, i64* %RAX.i686
  %8539 = load i64, i64* %PC.i685
  %8540 = add i64 %8539, 4
  store i64 %8540, i64* %PC.i685
  %8541 = inttoptr i64 %8537 to i64*
  store i64 %8538, i64* %8541
  store %struct.Memory* %loadMem_41b5c5, %struct.Memory** %MEMORY
  %loadMem_41b5c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8543 = getelementptr inbounds %struct.GPR, %struct.GPR* %8542, i32 0, i32 33
  %8544 = getelementptr inbounds %struct.Reg, %struct.Reg* %8543, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %8544 to i64*
  %8545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8546 = getelementptr inbounds %struct.GPR, %struct.GPR* %8545, i32 0, i32 1
  %8547 = getelementptr inbounds %struct.Reg, %struct.Reg* %8546, i32 0, i32 0
  %RAX.i683 = bitcast %union.anon* %8547 to i64*
  %8548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8549 = getelementptr inbounds %struct.GPR, %struct.GPR* %8548, i32 0, i32 15
  %8550 = getelementptr inbounds %struct.Reg, %struct.Reg* %8549, i32 0, i32 0
  %RBP.i684 = bitcast %union.anon* %8550 to i64*
  %8551 = load i64, i64* %RBP.i684
  %8552 = sub i64 %8551, 40
  %8553 = load i64, i64* %PC.i682
  %8554 = add i64 %8553, 4
  store i64 %8554, i64* %PC.i682
  %8555 = inttoptr i64 %8552 to i64*
  %8556 = load i64, i64* %8555
  store i64 %8556, i64* %RAX.i683, align 8
  store %struct.Memory* %loadMem_41b5c9, %struct.Memory** %MEMORY
  %loadMem_41b5cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8558 = getelementptr inbounds %struct.GPR, %struct.GPR* %8557, i32 0, i32 33
  %8559 = getelementptr inbounds %struct.Reg, %struct.Reg* %8558, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %8559 to i64*
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8561 = getelementptr inbounds %struct.GPR, %struct.GPR* %8560, i32 0, i32 1
  %8562 = getelementptr inbounds %struct.Reg, %struct.Reg* %8561, i32 0, i32 0
  %RAX.i680 = bitcast %union.anon* %8562 to i64*
  %8563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8564 = getelementptr inbounds %struct.GPR, %struct.GPR* %8563, i32 0, i32 15
  %8565 = getelementptr inbounds %struct.Reg, %struct.Reg* %8564, i32 0, i32 0
  %RBP.i681 = bitcast %union.anon* %8565 to i64*
  %8566 = load i64, i64* %RBP.i681
  %8567 = sub i64 %8566, 16
  %8568 = load i64, i64* %RAX.i680
  %8569 = load i64, i64* %PC.i679
  %8570 = add i64 %8569, 4
  store i64 %8570, i64* %PC.i679
  %8571 = inttoptr i64 %8567 to i64*
  store i64 %8568, i64* %8571
  store %struct.Memory* %loadMem_41b5cd, %struct.Memory** %MEMORY
  %loadMem_41b5d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8573 = getelementptr inbounds %struct.GPR, %struct.GPR* %8572, i32 0, i32 33
  %8574 = getelementptr inbounds %struct.Reg, %struct.Reg* %8573, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %8574 to i64*
  %8575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8576 = getelementptr inbounds %struct.GPR, %struct.GPR* %8575, i32 0, i32 1
  %8577 = getelementptr inbounds %struct.Reg, %struct.Reg* %8576, i32 0, i32 0
  %RAX.i677 = bitcast %union.anon* %8577 to i64*
  %8578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8579 = getelementptr inbounds %struct.GPR, %struct.GPR* %8578, i32 0, i32 15
  %8580 = getelementptr inbounds %struct.Reg, %struct.Reg* %8579, i32 0, i32 0
  %RBP.i678 = bitcast %union.anon* %8580 to i64*
  %8581 = load i64, i64* %RBP.i678
  %8582 = sub i64 %8581, 32
  %8583 = load i64, i64* %PC.i676
  %8584 = add i64 %8583, 4
  store i64 %8584, i64* %PC.i676
  %8585 = inttoptr i64 %8582 to i64*
  %8586 = load i64, i64* %8585
  store i64 %8586, i64* %RAX.i677, align 8
  store %struct.Memory* %loadMem_41b5d1, %struct.Memory** %MEMORY
  %loadMem_41b5d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8588 = getelementptr inbounds %struct.GPR, %struct.GPR* %8587, i32 0, i32 33
  %8589 = getelementptr inbounds %struct.Reg, %struct.Reg* %8588, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %8589 to i64*
  %8590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8591 = getelementptr inbounds %struct.GPR, %struct.GPR* %8590, i32 0, i32 1
  %8592 = getelementptr inbounds %struct.Reg, %struct.Reg* %8591, i32 0, i32 0
  %RAX.i674 = bitcast %union.anon* %8592 to i64*
  %8593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8594 = getelementptr inbounds %struct.GPR, %struct.GPR* %8593, i32 0, i32 15
  %8595 = getelementptr inbounds %struct.Reg, %struct.Reg* %8594, i32 0, i32 0
  %RBP.i675 = bitcast %union.anon* %8595 to i64*
  %8596 = load i64, i64* %RBP.i675
  %8597 = sub i64 %8596, 8
  %8598 = load i64, i64* %RAX.i674
  %8599 = load i64, i64* %PC.i673
  %8600 = add i64 %8599, 4
  store i64 %8600, i64* %PC.i673
  %8601 = inttoptr i64 %8597 to i64*
  store i64 %8598, i64* %8601
  store %struct.Memory* %loadMem_41b5d5, %struct.Memory** %MEMORY
  %loadMem_41b5d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8603 = getelementptr inbounds %struct.GPR, %struct.GPR* %8602, i32 0, i32 33
  %8604 = getelementptr inbounds %struct.Reg, %struct.Reg* %8603, i32 0, i32 0
  %PC.i671 = bitcast %union.anon* %8604 to i64*
  %8605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8606 = getelementptr inbounds %struct.GPR, %struct.GPR* %8605, i32 0, i32 5
  %8607 = getelementptr inbounds %struct.Reg, %struct.Reg* %8606, i32 0, i32 0
  %RCX.i672 = bitcast %union.anon* %8607 to i64*
  %8608 = load i64, i64* %PC.i671
  %8609 = add i64 %8608, 7
  store i64 %8609, i64* %PC.i671
  %8610 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %8611 = zext i32 %8610 to i64
  store i64 %8611, i64* %RCX.i672, align 8
  store %struct.Memory* %loadMem_41b5d9, %struct.Memory** %MEMORY
  %loadMem_41b5e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8613 = getelementptr inbounds %struct.GPR, %struct.GPR* %8612, i32 0, i32 33
  %8614 = getelementptr inbounds %struct.Reg, %struct.Reg* %8613, i32 0, i32 0
  %PC.i668 = bitcast %union.anon* %8614 to i64*
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8616 = getelementptr inbounds %struct.GPR, %struct.GPR* %8615, i32 0, i32 5
  %8617 = getelementptr inbounds %struct.Reg, %struct.Reg* %8616, i32 0, i32 0
  %ECX.i669 = bitcast %union.anon* %8617 to i32*
  %8618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8619 = getelementptr inbounds %struct.GPR, %struct.GPR* %8618, i32 0, i32 15
  %8620 = getelementptr inbounds %struct.Reg, %struct.Reg* %8619, i32 0, i32 0
  %RBP.i670 = bitcast %union.anon* %8620 to i64*
  %8621 = load i64, i64* %RBP.i670
  %8622 = sub i64 %8621, 92
  %8623 = load i32, i32* %ECX.i669
  %8624 = zext i32 %8623 to i64
  %8625 = load i64, i64* %PC.i668
  %8626 = add i64 %8625, 3
  store i64 %8626, i64* %PC.i668
  %8627 = inttoptr i64 %8622 to i32*
  store i32 %8623, i32* %8627
  store %struct.Memory* %loadMem_41b5e0, %struct.Memory** %MEMORY
  %loadMem1_41b5e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8629 = getelementptr inbounds %struct.GPR, %struct.GPR* %8628, i32 0, i32 33
  %8630 = getelementptr inbounds %struct.Reg, %struct.Reg* %8629, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %8630 to i64*
  %8631 = load i64, i64* %PC.i667
  %8632 = add i64 %8631, 31949
  %8633 = load i64, i64* %PC.i667
  %8634 = add i64 %8633, 5
  %8635 = load i64, i64* %PC.i667
  %8636 = add i64 %8635, 5
  store i64 %8636, i64* %PC.i667
  %8637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8638 = load i64, i64* %8637, align 8
  %8639 = add i64 %8638, -8
  %8640 = inttoptr i64 %8639 to i64*
  store i64 %8634, i64* %8640
  store i64 %8639, i64* %8637, align 8
  %8641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8632, i64* %8641, align 8
  store %struct.Memory* %loadMem1_41b5e3, %struct.Memory** %MEMORY
  %loadMem2_41b5e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b5e3 = load i64, i64* %3
  %call2_41b5e3 = call %struct.Memory* @sub_4232b0.stringize_pv(%struct.State* %0, i64 %loadPC_41b5e3, %struct.Memory* %loadMem2_41b5e3)
  store %struct.Memory* %call2_41b5e3, %struct.Memory** %MEMORY
  %loadMem_41b5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8643 = getelementptr inbounds %struct.GPR, %struct.GPR* %8642, i32 0, i32 33
  %8644 = getelementptr inbounds %struct.Reg, %struct.Reg* %8643, i32 0, i32 0
  %PC.i666 = bitcast %union.anon* %8644 to i64*
  %8645 = load i64, i64* %PC.i666
  %8646 = add i64 %8645, 8
  store i64 %8646, i64* %PC.i666
  %8647 = load i32, i32* bitcast (%G_0x866788_type* @G_0x866788 to i32*)
  %8648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8648, align 1
  %8649 = and i32 %8647, 255
  %8650 = call i32 @llvm.ctpop.i32(i32 %8649)
  %8651 = trunc i32 %8650 to i8
  %8652 = and i8 %8651, 1
  %8653 = xor i8 %8652, 1
  %8654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8653, i8* %8654, align 1
  %8655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8655, align 1
  %8656 = icmp eq i32 %8647, 0
  %8657 = zext i1 %8656 to i8
  %8658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8657, i8* %8658, align 1
  %8659 = lshr i32 %8647, 31
  %8660 = trunc i32 %8659 to i8
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8660, i8* %8661, align 1
  %8662 = lshr i32 %8647, 31
  %8663 = xor i32 %8659, %8662
  %8664 = add i32 %8663, %8662
  %8665 = icmp eq i32 %8664, 2
  %8666 = zext i1 %8665 to i8
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8666, i8* %8667, align 1
  store %struct.Memory* %loadMem_41b5e8, %struct.Memory** %MEMORY
  %loadMem_41b5f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8669 = getelementptr inbounds %struct.GPR, %struct.GPR* %8668, i32 0, i32 33
  %8670 = getelementptr inbounds %struct.Reg, %struct.Reg* %8669, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %8670 to i64*
  %8671 = load i64, i64* %PC.i665
  %8672 = add i64 %8671, 22
  %8673 = load i64, i64* %PC.i665
  %8674 = add i64 %8673, 6
  %8675 = load i64, i64* %PC.i665
  %8676 = add i64 %8675, 6
  store i64 %8676, i64* %PC.i665
  %8677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8678 = load i8, i8* %8677, align 1
  %8679 = icmp eq i8 %8678, 0
  %8680 = zext i1 %8679 to i8
  store i8 %8680, i8* %BRANCH_TAKEN, align 1
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8682 = select i1 %8679, i64 %8672, i64 %8674
  store i64 %8682, i64* %8681, align 8
  store %struct.Memory* %loadMem_41b5f0, %struct.Memory** %MEMORY
  %loadBr_41b5f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b5f0 = icmp eq i8 %loadBr_41b5f0, 1
  br i1 %cmpBr_41b5f0, label %block_.L_41b606, label %block_41b5f6

block_41b5f6:                                     ; preds = %block_.L_41b5b7
  %loadMem_41b5f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8684 = getelementptr inbounds %struct.GPR, %struct.GPR* %8683, i32 0, i32 33
  %8685 = getelementptr inbounds %struct.Reg, %struct.Reg* %8684, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %8685 to i64*
  %8686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8687 = getelementptr inbounds %struct.GPR, %struct.GPR* %8686, i32 0, i32 1
  %8688 = getelementptr inbounds %struct.Reg, %struct.Reg* %8687, i32 0, i32 0
  %RAX.i664 = bitcast %union.anon* %8688 to i64*
  %8689 = load i64, i64* %PC.i663
  %8690 = add i64 %8689, 7
  store i64 %8690, i64* %PC.i663
  %8691 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %8692 = zext i32 %8691 to i64
  store i64 %8692, i64* %RAX.i664, align 8
  store %struct.Memory* %loadMem_41b5f6, %struct.Memory** %MEMORY
  %loadMem_41b5fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %8693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8694 = getelementptr inbounds %struct.GPR, %struct.GPR* %8693, i32 0, i32 33
  %8695 = getelementptr inbounds %struct.Reg, %struct.Reg* %8694, i32 0, i32 0
  %PC.i660 = bitcast %union.anon* %8695 to i64*
  %8696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8697 = getelementptr inbounds %struct.GPR, %struct.GPR* %8696, i32 0, i32 1
  %8698 = getelementptr inbounds %struct.Reg, %struct.Reg* %8697, i32 0, i32 0
  %8699 = bitcast %union.anon* %8698 to %struct.anon.2*
  %AL.i661 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8699, i32 0, i32 0
  %8700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8701 = getelementptr inbounds %struct.GPR, %struct.GPR* %8700, i32 0, i32 5
  %8702 = getelementptr inbounds %struct.Reg, %struct.Reg* %8701, i32 0, i32 0
  %8703 = bitcast %union.anon* %8702 to %struct.anon.2*
  %CL.i662 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8703, i32 0, i32 0
  %8704 = load i8, i8* %AL.i661
  %8705 = zext i8 %8704 to i64
  %8706 = load i64, i64* %PC.i660
  %8707 = add i64 %8706, 2
  store i64 %8707, i64* %PC.i660
  store i8 %8704, i8* %CL.i662, align 1
  store %struct.Memory* %loadMem_41b5fd, %struct.Memory** %MEMORY
  %loadMem_41b5ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %8708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8709 = getelementptr inbounds %struct.GPR, %struct.GPR* %8708, i32 0, i32 33
  %8710 = getelementptr inbounds %struct.Reg, %struct.Reg* %8709, i32 0, i32 0
  %PC.i659 = bitcast %union.anon* %8710 to i64*
  %8711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8712 = getelementptr inbounds %struct.GPR, %struct.GPR* %8711, i32 0, i32 5
  %8713 = getelementptr inbounds %struct.Reg, %struct.Reg* %8712, i32 0, i32 0
  %8714 = bitcast %union.anon* %8713 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %8714, i32 0, i32 0
  %8715 = load i8, i8* %CL.i
  %8716 = zext i8 %8715 to i64
  %8717 = load i64, i64* %PC.i659
  %8718 = add i64 %8717, 7
  store i64 %8718, i64* %PC.i659
  store i8 %8715, i8* getelementptr inbounds (%G_0x86678c_type, %G_0x86678c_type* @G_0x86678c, i32 0, i32 0, i32 0)
  store %struct.Memory* %loadMem_41b5ff, %struct.Memory** %MEMORY
  br label %block_.L_41b606

block_.L_41b606:                                  ; preds = %block_41b5f6, %block_.L_41b5b7
  %loadMem_41b606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8720 = getelementptr inbounds %struct.GPR, %struct.GPR* %8719, i32 0, i32 33
  %8721 = getelementptr inbounds %struct.Reg, %struct.Reg* %8720, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %8721 to i64*
  %8722 = load i64, i64* %PC.i658
  %8723 = add i64 %8722, 8
  store i64 %8723, i64* %PC.i658
  %8724 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %8725 = sub i32 %8724, 2
  %8726 = icmp ult i32 %8724, 2
  %8727 = zext i1 %8726 to i8
  %8728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8727, i8* %8728, align 1
  %8729 = and i32 %8725, 255
  %8730 = call i32 @llvm.ctpop.i32(i32 %8729)
  %8731 = trunc i32 %8730 to i8
  %8732 = and i8 %8731, 1
  %8733 = xor i8 %8732, 1
  %8734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8733, i8* %8734, align 1
  %8735 = xor i32 %8724, 2
  %8736 = xor i32 %8735, %8725
  %8737 = lshr i32 %8736, 4
  %8738 = trunc i32 %8737 to i8
  %8739 = and i8 %8738, 1
  %8740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8739, i8* %8740, align 1
  %8741 = icmp eq i32 %8725, 0
  %8742 = zext i1 %8741 to i8
  %8743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8742, i8* %8743, align 1
  %8744 = lshr i32 %8725, 31
  %8745 = trunc i32 %8744 to i8
  %8746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8745, i8* %8746, align 1
  %8747 = lshr i32 %8724, 31
  %8748 = xor i32 %8744, %8747
  %8749 = add i32 %8748, %8747
  %8750 = icmp eq i32 %8749, 2
  %8751 = zext i1 %8750 to i8
  %8752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8751, i8* %8752, align 1
  store %struct.Memory* %loadMem_41b606, %struct.Memory** %MEMORY
  %loadMem_41b60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8754 = getelementptr inbounds %struct.GPR, %struct.GPR* %8753, i32 0, i32 33
  %8755 = getelementptr inbounds %struct.Reg, %struct.Reg* %8754, i32 0, i32 0
  %PC.i657 = bitcast %union.anon* %8755 to i64*
  %8756 = load i64, i64* %PC.i657
  %8757 = add i64 %8756, 18
  %8758 = load i64, i64* %PC.i657
  %8759 = add i64 %8758, 6
  %8760 = load i64, i64* %PC.i657
  %8761 = add i64 %8760, 6
  store i64 %8761, i64* %PC.i657
  %8762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8763 = load i8, i8* %8762, align 1
  %8764 = icmp ne i8 %8763, 0
  %8765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8766 = load i8, i8* %8765, align 1
  %8767 = icmp ne i8 %8766, 0
  %8768 = xor i1 %8764, %8767
  %8769 = zext i1 %8768 to i8
  store i8 %8769, i8* %BRANCH_TAKEN, align 1
  %8770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8771 = select i1 %8768, i64 %8757, i64 %8759
  store i64 %8771, i64* %8770, align 8
  store %struct.Memory* %loadMem_41b60e, %struct.Memory** %MEMORY
  %loadBr_41b60e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b60e = icmp eq i8 %loadBr_41b60e, 1
  br i1 %cmpBr_41b60e, label %block_.L_41b620, label %block_41b614

block_41b614:                                     ; preds = %block_.L_41b606
  %loadMem_41b614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8773 = getelementptr inbounds %struct.GPR, %struct.GPR* %8772, i32 0, i32 33
  %8774 = getelementptr inbounds %struct.Reg, %struct.Reg* %8773, i32 0, i32 0
  %PC.i655 = bitcast %union.anon* %8774 to i64*
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8776 = getelementptr inbounds %struct.GPR, %struct.GPR* %8775, i32 0, i32 11
  %8777 = getelementptr inbounds %struct.Reg, %struct.Reg* %8776, i32 0, i32 0
  %RDI.i656 = bitcast %union.anon* %8777 to i64*
  %8778 = load i64, i64* %PC.i655
  %8779 = add i64 %8778, 7
  store i64 %8779, i64* %PC.i655
  %8780 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %8781 = zext i32 %8780 to i64
  store i64 %8781, i64* %RDI.i656, align 8
  store %struct.Memory* %loadMem_41b614, %struct.Memory** %MEMORY
  %loadMem1_41b61b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8783 = getelementptr inbounds %struct.GPR, %struct.GPR* %8782, i32 0, i32 33
  %8784 = getelementptr inbounds %struct.Reg, %struct.Reg* %8783, i32 0, i32 0
  %PC.i654 = bitcast %union.anon* %8784 to i64*
  %8785 = load i64, i64* %PC.i654
  %8786 = add i64 %8785, 32245
  %8787 = load i64, i64* %PC.i654
  %8788 = add i64 %8787, 5
  %8789 = load i64, i64* %PC.i654
  %8790 = add i64 %8789, 5
  store i64 %8790, i64* %PC.i654
  %8791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %8792 = load i64, i64* %8791, align 8
  %8793 = add i64 %8792, -8
  %8794 = inttoptr i64 %8793 to i64*
  store i64 %8788, i64* %8794
  store i64 %8793, i64* %8791, align 8
  %8795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8786, i64* %8795, align 8
  store %struct.Memory* %loadMem1_41b61b, %struct.Memory** %MEMORY
  %loadMem2_41b61b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b61b = load i64, i64* %3
  %call2_41b61b = call %struct.Memory* @sub_423410.post_thinking(%struct.State* %0, i64 %loadPC_41b61b, %struct.Memory* %loadMem2_41b61b)
  store %struct.Memory* %call2_41b61b, %struct.Memory** %MEMORY
  br label %block_.L_41b620

block_.L_41b620:                                  ; preds = %block_41b614, %block_.L_41b606
  %loadMem_41b620 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8797 = getelementptr inbounds %struct.GPR, %struct.GPR* %8796, i32 0, i32 33
  %8798 = getelementptr inbounds %struct.Reg, %struct.Reg* %8797, i32 0, i32 0
  %PC.i652 = bitcast %union.anon* %8798 to i64*
  %8799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8800 = getelementptr inbounds %struct.GPR, %struct.GPR* %8799, i32 0, i32 15
  %8801 = getelementptr inbounds %struct.Reg, %struct.Reg* %8800, i32 0, i32 0
  %RBP.i653 = bitcast %union.anon* %8801 to i64*
  %8802 = load i64, i64* %RBP.i653
  %8803 = sub i64 %8802, 92
  %8804 = load i64, i64* %PC.i652
  %8805 = add i64 %8804, 7
  store i64 %8805, i64* %PC.i652
  %8806 = inttoptr i64 %8803 to i32*
  %8807 = load i32, i32* %8806
  %8808 = sub i32 %8807, 900000
  %8809 = icmp ult i32 %8807, 900000
  %8810 = zext i1 %8809 to i8
  %8811 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8810, i8* %8811, align 1
  %8812 = and i32 %8808, 255
  %8813 = call i32 @llvm.ctpop.i32(i32 %8812)
  %8814 = trunc i32 %8813 to i8
  %8815 = and i8 %8814, 1
  %8816 = xor i8 %8815, 1
  %8817 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8816, i8* %8817, align 1
  %8818 = xor i32 %8807, 900000
  %8819 = xor i32 %8818, %8808
  %8820 = lshr i32 %8819, 4
  %8821 = trunc i32 %8820 to i8
  %8822 = and i8 %8821, 1
  %8823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8822, i8* %8823, align 1
  %8824 = icmp eq i32 %8808, 0
  %8825 = zext i1 %8824 to i8
  %8826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8825, i8* %8826, align 1
  %8827 = lshr i32 %8808, 31
  %8828 = trunc i32 %8827 to i8
  %8829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8828, i8* %8829, align 1
  %8830 = lshr i32 %8807, 31
  %8831 = xor i32 %8827, %8830
  %8832 = add i32 %8831, %8830
  %8833 = icmp eq i32 %8832, 2
  %8834 = zext i1 %8833 to i8
  %8835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8834, i8* %8835, align 1
  store %struct.Memory* %loadMem_41b620, %struct.Memory** %MEMORY
  %loadMem_41b627 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8837 = getelementptr inbounds %struct.GPR, %struct.GPR* %8836, i32 0, i32 33
  %8838 = getelementptr inbounds %struct.Reg, %struct.Reg* %8837, i32 0, i32 0
  %PC.i651 = bitcast %union.anon* %8838 to i64*
  %8839 = load i64, i64* %PC.i651
  %8840 = add i64 %8839, 36
  %8841 = load i64, i64* %PC.i651
  %8842 = add i64 %8841, 6
  %8843 = load i64, i64* %PC.i651
  %8844 = add i64 %8843, 6
  store i64 %8844, i64* %PC.i651
  %8845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8846 = load i8, i8* %8845, align 1
  %8847 = icmp ne i8 %8846, 0
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8849 = load i8, i8* %8848, align 1
  %8850 = icmp ne i8 %8849, 0
  %8851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8852 = load i8, i8* %8851, align 1
  %8853 = icmp ne i8 %8852, 0
  %8854 = xor i1 %8850, %8853
  %8855 = or i1 %8847, %8854
  %8856 = zext i1 %8855 to i8
  store i8 %8856, i8* %BRANCH_TAKEN, align 1
  %8857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8858 = select i1 %8855, i64 %8840, i64 %8842
  store i64 %8858, i64* %8857, align 8
  store %struct.Memory* %loadMem_41b627, %struct.Memory** %MEMORY
  %loadBr_41b627 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b627 = icmp eq i8 %loadBr_41b627, 1
  br i1 %cmpBr_41b627, label %block_.L_41b64b, label %block_41b62d

block_41b62d:                                     ; preds = %block_.L_41b620
  %loadMem_41b62d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8860 = getelementptr inbounds %struct.GPR, %struct.GPR* %8859, i32 0, i32 33
  %8861 = getelementptr inbounds %struct.Reg, %struct.Reg* %8860, i32 0, i32 0
  %PC.i649 = bitcast %union.anon* %8861 to i64*
  %8862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8863 = getelementptr inbounds %struct.GPR, %struct.GPR* %8862, i32 0, i32 1
  %8864 = getelementptr inbounds %struct.Reg, %struct.Reg* %8863, i32 0, i32 0
  %RAX.i650 = bitcast %union.anon* %8864 to i64*
  %8865 = load i64, i64* %PC.i649
  %8866 = add i64 %8865, 5
  store i64 %8866, i64* %PC.i649
  store i64 1000000, i64* %RAX.i650, align 8
  store %struct.Memory* %loadMem_41b62d, %struct.Memory** %MEMORY
  %loadMem_41b632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8868 = getelementptr inbounds %struct.GPR, %struct.GPR* %8867, i32 0, i32 33
  %8869 = getelementptr inbounds %struct.Reg, %struct.Reg* %8868, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %8869 to i64*
  %8870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8871 = getelementptr inbounds %struct.GPR, %struct.GPR* %8870, i32 0, i32 1
  %8872 = getelementptr inbounds %struct.Reg, %struct.Reg* %8871, i32 0, i32 0
  %RAX.i648 = bitcast %union.anon* %8872 to i64*
  %8873 = load i64, i64* %RAX.i648
  %8874 = load i64, i64* %PC.i647
  %8875 = add i64 %8874, 7
  store i64 %8875, i64* %PC.i647
  %8876 = trunc i64 %8873 to i32
  %8877 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %8878 = sub i32 %8876, %8877
  %8879 = zext i32 %8878 to i64
  store i64 %8879, i64* %RAX.i648, align 8
  %8880 = icmp ult i32 %8876, %8877
  %8881 = zext i1 %8880 to i8
  %8882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8881, i8* %8882, align 1
  %8883 = and i32 %8878, 255
  %8884 = call i32 @llvm.ctpop.i32(i32 %8883)
  %8885 = trunc i32 %8884 to i8
  %8886 = and i8 %8885, 1
  %8887 = xor i8 %8886, 1
  %8888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8887, i8* %8888, align 1
  %8889 = xor i32 %8877, %8876
  %8890 = xor i32 %8889, %8878
  %8891 = lshr i32 %8890, 4
  %8892 = trunc i32 %8891 to i8
  %8893 = and i8 %8892, 1
  %8894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8893, i8* %8894, align 1
  %8895 = icmp eq i32 %8878, 0
  %8896 = zext i1 %8895 to i8
  %8897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8896, i8* %8897, align 1
  %8898 = lshr i32 %8878, 31
  %8899 = trunc i32 %8898 to i8
  %8900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8899, i8* %8900, align 1
  %8901 = lshr i32 %8876, 31
  %8902 = lshr i32 %8877, 31
  %8903 = xor i32 %8902, %8901
  %8904 = xor i32 %8898, %8901
  %8905 = add i32 %8904, %8903
  %8906 = icmp eq i32 %8905, 2
  %8907 = zext i1 %8906 to i8
  %8908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8907, i8* %8908, align 1
  store %struct.Memory* %loadMem_41b632, %struct.Memory** %MEMORY
  %loadMem_41b639 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8910 = getelementptr inbounds %struct.GPR, %struct.GPR* %8909, i32 0, i32 33
  %8911 = getelementptr inbounds %struct.Reg, %struct.Reg* %8910, i32 0, i32 0
  %PC.i645 = bitcast %union.anon* %8911 to i64*
  %8912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8913 = getelementptr inbounds %struct.GPR, %struct.GPR* %8912, i32 0, i32 1
  %8914 = getelementptr inbounds %struct.Reg, %struct.Reg* %8913, i32 0, i32 0
  %EAX.i646 = bitcast %union.anon* %8914 to i32*
  %8915 = load i32, i32* %EAX.i646
  %8916 = zext i32 %8915 to i64
  %8917 = load i64, i64* %PC.i645
  %8918 = add i64 %8917, 7
  store i64 %8918, i64* %PC.i645
  %8919 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %8920 = sub i32 %8915, %8919
  %8921 = icmp ult i32 %8915, %8919
  %8922 = zext i1 %8921 to i8
  %8923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8922, i8* %8923, align 1
  %8924 = and i32 %8920, 255
  %8925 = call i32 @llvm.ctpop.i32(i32 %8924)
  %8926 = trunc i32 %8925 to i8
  %8927 = and i8 %8926, 1
  %8928 = xor i8 %8927, 1
  %8929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8928, i8* %8929, align 1
  %8930 = xor i32 %8919, %8915
  %8931 = xor i32 %8930, %8920
  %8932 = lshr i32 %8931, 4
  %8933 = trunc i32 %8932 to i8
  %8934 = and i8 %8933, 1
  %8935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8934, i8* %8935, align 1
  %8936 = icmp eq i32 %8920, 0
  %8937 = zext i1 %8936 to i8
  %8938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8937, i8* %8938, align 1
  %8939 = lshr i32 %8920, 31
  %8940 = trunc i32 %8939 to i8
  %8941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8940, i8* %8941, align 1
  %8942 = lshr i32 %8915, 31
  %8943 = lshr i32 %8919, 31
  %8944 = xor i32 %8943, %8942
  %8945 = xor i32 %8939, %8942
  %8946 = add i32 %8945, %8944
  %8947 = icmp eq i32 %8946, 2
  %8948 = zext i1 %8947 to i8
  %8949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8948, i8* %8949, align 1
  store %struct.Memory* %loadMem_41b639, %struct.Memory** %MEMORY
  %loadMem_41b640 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8951 = getelementptr inbounds %struct.GPR, %struct.GPR* %8950, i32 0, i32 33
  %8952 = getelementptr inbounds %struct.Reg, %struct.Reg* %8951, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %8952 to i64*
  %8953 = load i64, i64* %PC.i644
  %8954 = add i64 %8953, 11
  %8955 = load i64, i64* %PC.i644
  %8956 = add i64 %8955, 6
  %8957 = load i64, i64* %PC.i644
  %8958 = add i64 %8957, 6
  store i64 %8958, i64* %PC.i644
  %8959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8960 = load i8, i8* %8959, align 1
  %8961 = icmp ne i8 %8960, 0
  %8962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %8963 = load i8, i8* %8962, align 1
  %8964 = icmp ne i8 %8963, 0
  %8965 = xor i1 %8961, %8964
  %8966 = xor i1 %8965, true
  %8967 = zext i1 %8966 to i8
  store i8 %8967, i8* %BRANCH_TAKEN, align 1
  %8968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8969 = select i1 %8965, i64 %8956, i64 %8954
  store i64 %8969, i64* %8968, align 8
  store %struct.Memory* %loadMem_41b640, %struct.Memory** %MEMORY
  %loadBr_41b640 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b640 = icmp eq i8 %loadBr_41b640, 1
  br i1 %cmpBr_41b640, label %block_.L_41b64b, label %block_41b646

block_41b646:                                     ; preds = %block_41b62d
  %loadMem_41b646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8971 = getelementptr inbounds %struct.GPR, %struct.GPR* %8970, i32 0, i32 33
  %8972 = getelementptr inbounds %struct.Reg, %struct.Reg* %8971, i32 0, i32 0
  %PC.i643 = bitcast %union.anon* %8972 to i64*
  %8973 = load i64, i64* %PC.i643
  %8974 = add i64 %8973, 135
  %8975 = load i64, i64* %PC.i643
  %8976 = add i64 %8975, 5
  store i64 %8976, i64* %PC.i643
  %8977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8974, i64* %8977, align 8
  store %struct.Memory* %loadMem_41b646, %struct.Memory** %MEMORY
  br label %block_.L_41b6cd

block_.L_41b64b:                                  ; preds = %block_41b62d, %block_.L_41b620
  %loadMem_41b64b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8979 = getelementptr inbounds %struct.GPR, %struct.GPR* %8978, i32 0, i32 33
  %8980 = getelementptr inbounds %struct.Reg, %struct.Reg* %8979, i32 0, i32 0
  %PC.i642 = bitcast %union.anon* %8980 to i64*
  %8981 = load i64, i64* %PC.i642
  %8982 = add i64 %8981, 5
  %8983 = load i64, i64* %PC.i642
  %8984 = add i64 %8983, 5
  store i64 %8984, i64* %PC.i642
  %8985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8982, i64* %8985, align 8
  store %struct.Memory* %loadMem_41b64b, %struct.Memory** %MEMORY
  br label %block_.L_41b650

block_.L_41b650:                                  ; preds = %block_.L_41b64b, %block_41b569, %block_.L_41b55b
  %loadMem_41b650 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8987 = getelementptr inbounds %struct.GPR, %struct.GPR* %8986, i32 0, i32 33
  %8988 = getelementptr inbounds %struct.Reg, %struct.Reg* %8987, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %8988 to i64*
  %8989 = load i64, i64* %PC.i641
  %8990 = add i64 %8989, 8
  store i64 %8990, i64* %PC.i641
  %8991 = load i32, i32* bitcast (%G_0x866788_type* @G_0x866788 to i32*)
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8992, align 1
  %8993 = and i32 %8991, 255
  %8994 = call i32 @llvm.ctpop.i32(i32 %8993)
  %8995 = trunc i32 %8994 to i8
  %8996 = and i8 %8995, 1
  %8997 = xor i8 %8996, 1
  %8998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8997, i8* %8998, align 1
  %8999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8999, align 1
  %9000 = icmp eq i32 %8991, 0
  %9001 = zext i1 %9000 to i8
  %9002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9001, i8* %9002, align 1
  %9003 = lshr i32 %8991, 31
  %9004 = trunc i32 %9003 to i8
  %9005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9004, i8* %9005, align 1
  %9006 = lshr i32 %8991, 31
  %9007 = xor i32 %9003, %9006
  %9008 = add i32 %9007, %9006
  %9009 = icmp eq i32 %9008, 2
  %9010 = zext i1 %9009 to i8
  %9011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9010, i8* %9011, align 1
  store %struct.Memory* %loadMem_41b650, %struct.Memory** %MEMORY
  %loadMem_41b658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9013 = getelementptr inbounds %struct.GPR, %struct.GPR* %9012, i32 0, i32 33
  %9014 = getelementptr inbounds %struct.Reg, %struct.Reg* %9013, i32 0, i32 0
  %PC.i640 = bitcast %union.anon* %9014 to i64*
  %9015 = load i64, i64* %PC.i640
  %9016 = add i64 %9015, 11
  %9017 = load i64, i64* %PC.i640
  %9018 = add i64 %9017, 6
  %9019 = load i64, i64* %PC.i640
  %9020 = add i64 %9019, 6
  store i64 %9020, i64* %PC.i640
  %9021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9022 = load i8, i8* %9021, align 1
  store i8 %9022, i8* %BRANCH_TAKEN, align 1
  %9023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9024 = icmp ne i8 %9022, 0
  %9025 = select i1 %9024, i64 %9016, i64 %9018
  store i64 %9025, i64* %9023, align 8
  store %struct.Memory* %loadMem_41b658, %struct.Memory** %MEMORY
  %loadBr_41b658 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b658 = icmp eq i8 %loadBr_41b658, 1
  br i1 %cmpBr_41b658, label %block_.L_41b663, label %block_41b65e

block_41b65e:                                     ; preds = %block_.L_41b650
  %loadMem_41b65e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9027 = getelementptr inbounds %struct.GPR, %struct.GPR* %9026, i32 0, i32 33
  %9028 = getelementptr inbounds %struct.Reg, %struct.Reg* %9027, i32 0, i32 0
  %PC.i639 = bitcast %union.anon* %9028 to i64*
  %9029 = load i64, i64* %PC.i639
  %9030 = add i64 %9029, 111
  %9031 = load i64, i64* %PC.i639
  %9032 = add i64 %9031, 5
  store i64 %9032, i64* %PC.i639
  %9033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9030, i64* %9033, align 8
  store %struct.Memory* %loadMem_41b65e, %struct.Memory** %MEMORY
  br label %block_.L_41b6cd

block_.L_41b663:                                  ; preds = %block_.L_41b650
  %loadMem_41b663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9035 = getelementptr inbounds %struct.GPR, %struct.GPR* %9034, i32 0, i32 33
  %9036 = getelementptr inbounds %struct.Reg, %struct.Reg* %9035, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %9036 to i64*
  %9037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9038 = getelementptr inbounds %struct.GPR, %struct.GPR* %9037, i32 0, i32 15
  %9039 = getelementptr inbounds %struct.Reg, %struct.Reg* %9038, i32 0, i32 0
  %RBP.i638 = bitcast %union.anon* %9039 to i64*
  %9040 = load i64, i64* %RBP.i638
  %9041 = sub i64 %9040, 80
  %9042 = load i64, i64* %PC.i637
  %9043 = add i64 %9042, 7
  store i64 %9043, i64* %PC.i637
  %9044 = inttoptr i64 %9041 to i32*
  store i32 0, i32* %9044
  store %struct.Memory* %loadMem_41b663, %struct.Memory** %MEMORY
  br label %block_.L_41b66a

block_.L_41b66a:                                  ; preds = %block_41b677, %block_.L_41b663
  %loadMem_41b66a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9046 = getelementptr inbounds %struct.GPR, %struct.GPR* %9045, i32 0, i32 33
  %9047 = getelementptr inbounds %struct.Reg, %struct.Reg* %9046, i32 0, i32 0
  %PC.i635 = bitcast %union.anon* %9047 to i64*
  %9048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9049 = getelementptr inbounds %struct.GPR, %struct.GPR* %9048, i32 0, i32 15
  %9050 = getelementptr inbounds %struct.Reg, %struct.Reg* %9049, i32 0, i32 0
  %RBP.i636 = bitcast %union.anon* %9050 to i64*
  %9051 = load i64, i64* %RBP.i636
  %9052 = sub i64 %9051, 80
  %9053 = load i64, i64* %PC.i635
  %9054 = add i64 %9053, 7
  store i64 %9054, i64* %PC.i635
  %9055 = inttoptr i64 %9052 to i32*
  %9056 = load i32, i32* %9055
  %9057 = sub i32 %9056, 300
  %9058 = icmp ult i32 %9056, 300
  %9059 = zext i1 %9058 to i8
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9059, i8* %9060, align 1
  %9061 = and i32 %9057, 255
  %9062 = call i32 @llvm.ctpop.i32(i32 %9061)
  %9063 = trunc i32 %9062 to i8
  %9064 = and i8 %9063, 1
  %9065 = xor i8 %9064, 1
  %9066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9065, i8* %9066, align 1
  %9067 = xor i32 %9056, 300
  %9068 = xor i32 %9067, %9057
  %9069 = lshr i32 %9068, 4
  %9070 = trunc i32 %9069 to i8
  %9071 = and i8 %9070, 1
  %9072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9071, i8* %9072, align 1
  %9073 = icmp eq i32 %9057, 0
  %9074 = zext i1 %9073 to i8
  %9075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9074, i8* %9075, align 1
  %9076 = lshr i32 %9057, 31
  %9077 = trunc i32 %9076 to i8
  %9078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9077, i8* %9078, align 1
  %9079 = lshr i32 %9056, 31
  %9080 = xor i32 %9076, %9079
  %9081 = add i32 %9080, %9079
  %9082 = icmp eq i32 %9081, 2
  %9083 = zext i1 %9082 to i8
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9083, i8* %9084, align 1
  store %struct.Memory* %loadMem_41b66a, %struct.Memory** %MEMORY
  %loadMem_41b671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9086 = getelementptr inbounds %struct.GPR, %struct.GPR* %9085, i32 0, i32 33
  %9087 = getelementptr inbounds %struct.Reg, %struct.Reg* %9086, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %9087 to i64*
  %9088 = load i64, i64* %PC.i634
  %9089 = add i64 %9088, 65
  %9090 = load i64, i64* %PC.i634
  %9091 = add i64 %9090, 6
  %9092 = load i64, i64* %PC.i634
  %9093 = add i64 %9092, 6
  store i64 %9093, i64* %PC.i634
  %9094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9095 = load i8, i8* %9094, align 1
  %9096 = icmp ne i8 %9095, 0
  %9097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9098 = load i8, i8* %9097, align 1
  %9099 = icmp ne i8 %9098, 0
  %9100 = xor i1 %9096, %9099
  %9101 = xor i1 %9100, true
  %9102 = zext i1 %9101 to i8
  store i8 %9102, i8* %BRANCH_TAKEN, align 1
  %9103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9104 = select i1 %9100, i64 %9091, i64 %9089
  store i64 %9104, i64* %9103, align 8
  store %struct.Memory* %loadMem_41b671, %struct.Memory** %MEMORY
  %loadBr_41b671 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b671 = icmp eq i8 %loadBr_41b671, 1
  br i1 %cmpBr_41b671, label %block_.L_41b6b2, label %block_41b677

block_41b677:                                     ; preds = %block_.L_41b66a
  %loadMem_41b677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9106 = getelementptr inbounds %struct.GPR, %struct.GPR* %9105, i32 0, i32 33
  %9107 = getelementptr inbounds %struct.Reg, %struct.Reg* %9106, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %9107 to i64*
  %9108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9109 = getelementptr inbounds %struct.GPR, %struct.GPR* %9108, i32 0, i32 1
  %9110 = getelementptr inbounds %struct.Reg, %struct.Reg* %9109, i32 0, i32 0
  %RAX.i632 = bitcast %union.anon* %9110 to i64*
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9112 = getelementptr inbounds %struct.GPR, %struct.GPR* %9111, i32 0, i32 15
  %9113 = getelementptr inbounds %struct.Reg, %struct.Reg* %9112, i32 0, i32 0
  %RBP.i633 = bitcast %union.anon* %9113 to i64*
  %9114 = load i64, i64* %RBP.i633
  %9115 = sub i64 %9114, 80
  %9116 = load i64, i64* %PC.i631
  %9117 = add i64 %9116, 4
  store i64 %9117, i64* %PC.i631
  %9118 = inttoptr i64 %9115 to i32*
  %9119 = load i32, i32* %9118
  %9120 = sext i32 %9119 to i64
  store i64 %9120, i64* %RAX.i632, align 8
  store %struct.Memory* %loadMem_41b677, %struct.Memory** %MEMORY
  %loadMem_41b67b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9122 = getelementptr inbounds %struct.GPR, %struct.GPR* %9121, i32 0, i32 33
  %9123 = getelementptr inbounds %struct.Reg, %struct.Reg* %9122, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %9123 to i64*
  %9124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9125 = getelementptr inbounds %struct.GPR, %struct.GPR* %9124, i32 0, i32 1
  %9126 = getelementptr inbounds %struct.Reg, %struct.Reg* %9125, i32 0, i32 0
  %RAX.i630 = bitcast %union.anon* %9126 to i64*
  %9127 = load i64, i64* %RAX.i630
  %9128 = mul i64 %9127, 4
  %9129 = add i64 %9128, 6481200
  %9130 = load i64, i64* %PC.i629
  %9131 = add i64 %9130, 11
  store i64 %9131, i64* %PC.i629
  %9132 = inttoptr i64 %9129 to i32*
  store i32 0, i32* %9132
  store %struct.Memory* %loadMem_41b67b, %struct.Memory** %MEMORY
  %loadMem_41b686 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9134 = getelementptr inbounds %struct.GPR, %struct.GPR* %9133, i32 0, i32 33
  %9135 = getelementptr inbounds %struct.Reg, %struct.Reg* %9134, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %9135 to i64*
  %9136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9137 = getelementptr inbounds %struct.GPR, %struct.GPR* %9136, i32 0, i32 1
  %9138 = getelementptr inbounds %struct.Reg, %struct.Reg* %9137, i32 0, i32 0
  %RAX.i627 = bitcast %union.anon* %9138 to i64*
  %9139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9140 = getelementptr inbounds %struct.GPR, %struct.GPR* %9139, i32 0, i32 15
  %9141 = getelementptr inbounds %struct.Reg, %struct.Reg* %9140, i32 0, i32 0
  %RBP.i628 = bitcast %union.anon* %9141 to i64*
  %9142 = load i64, i64* %RBP.i628
  %9143 = sub i64 %9142, 80
  %9144 = load i64, i64* %PC.i626
  %9145 = add i64 %9144, 4
  store i64 %9145, i64* %PC.i626
  %9146 = inttoptr i64 %9143 to i32*
  %9147 = load i32, i32* %9146
  %9148 = sext i32 %9147 to i64
  store i64 %9148, i64* %RAX.i627, align 8
  store %struct.Memory* %loadMem_41b686, %struct.Memory** %MEMORY
  %loadMem_41b68a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9150 = getelementptr inbounds %struct.GPR, %struct.GPR* %9149, i32 0, i32 33
  %9151 = getelementptr inbounds %struct.Reg, %struct.Reg* %9150, i32 0, i32 0
  %PC.i624 = bitcast %union.anon* %9151 to i64*
  %9152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9153 = getelementptr inbounds %struct.GPR, %struct.GPR* %9152, i32 0, i32 1
  %9154 = getelementptr inbounds %struct.Reg, %struct.Reg* %9153, i32 0, i32 0
  %RAX.i625 = bitcast %union.anon* %9154 to i64*
  %9155 = load i64, i64* %RAX.i625
  %9156 = mul i64 %9155, 4
  %9157 = add i64 %9156, 6524000
  %9158 = load i64, i64* %PC.i624
  %9159 = add i64 %9158, 11
  store i64 %9159, i64* %PC.i624
  %9160 = inttoptr i64 %9157 to i32*
  store i32 0, i32* %9160
  store %struct.Memory* %loadMem_41b68a, %struct.Memory** %MEMORY
  %loadMem_41b695 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9162 = getelementptr inbounds %struct.GPR, %struct.GPR* %9161, i32 0, i32 33
  %9163 = getelementptr inbounds %struct.Reg, %struct.Reg* %9162, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %9163 to i64*
  %9164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9165 = getelementptr inbounds %struct.GPR, %struct.GPR* %9164, i32 0, i32 1
  %9166 = getelementptr inbounds %struct.Reg, %struct.Reg* %9165, i32 0, i32 0
  %RAX.i622 = bitcast %union.anon* %9166 to i64*
  %9167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9168 = getelementptr inbounds %struct.GPR, %struct.GPR* %9167, i32 0, i32 15
  %9169 = getelementptr inbounds %struct.Reg, %struct.Reg* %9168, i32 0, i32 0
  %RBP.i623 = bitcast %union.anon* %9169 to i64*
  %9170 = load i64, i64* %RBP.i623
  %9171 = sub i64 %9170, 80
  %9172 = load i64, i64* %PC.i621
  %9173 = add i64 %9172, 4
  store i64 %9173, i64* %PC.i621
  %9174 = inttoptr i64 %9171 to i32*
  %9175 = load i32, i32* %9174
  %9176 = sext i32 %9175 to i64
  store i64 %9176, i64* %RAX.i622, align 8
  store %struct.Memory* %loadMem_41b695, %struct.Memory** %MEMORY
  %loadMem_41b699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9178 = getelementptr inbounds %struct.GPR, %struct.GPR* %9177, i32 0, i32 33
  %9179 = getelementptr inbounds %struct.Reg, %struct.Reg* %9178, i32 0, i32 0
  %PC.i619 = bitcast %union.anon* %9179 to i64*
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 1
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %RAX.i620 = bitcast %union.anon* %9182 to i64*
  %9183 = load i64, i64* %RAX.i620
  %9184 = mul i64 %9183, 4
  %9185 = add i64 %9184, 8920576
  %9186 = load i64, i64* %PC.i619
  %9187 = add i64 %9186, 11
  store i64 %9187, i64* %PC.i619
  %9188 = inttoptr i64 %9185 to i32*
  store i32 0, i32* %9188
  store %struct.Memory* %loadMem_41b699, %struct.Memory** %MEMORY
  %loadMem_41b6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9190 = getelementptr inbounds %struct.GPR, %struct.GPR* %9189, i32 0, i32 33
  %9191 = getelementptr inbounds %struct.Reg, %struct.Reg* %9190, i32 0, i32 0
  %PC.i616 = bitcast %union.anon* %9191 to i64*
  %9192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9193 = getelementptr inbounds %struct.GPR, %struct.GPR* %9192, i32 0, i32 1
  %9194 = getelementptr inbounds %struct.Reg, %struct.Reg* %9193, i32 0, i32 0
  %RAX.i617 = bitcast %union.anon* %9194 to i64*
  %9195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9196 = getelementptr inbounds %struct.GPR, %struct.GPR* %9195, i32 0, i32 15
  %9197 = getelementptr inbounds %struct.Reg, %struct.Reg* %9196, i32 0, i32 0
  %RBP.i618 = bitcast %union.anon* %9197 to i64*
  %9198 = load i64, i64* %RBP.i618
  %9199 = sub i64 %9198, 80
  %9200 = load i64, i64* %PC.i616
  %9201 = add i64 %9200, 3
  store i64 %9201, i64* %PC.i616
  %9202 = inttoptr i64 %9199 to i32*
  %9203 = load i32, i32* %9202
  %9204 = zext i32 %9203 to i64
  store i64 %9204, i64* %RAX.i617, align 8
  store %struct.Memory* %loadMem_41b6a4, %struct.Memory** %MEMORY
  %loadMem_41b6a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9206 = getelementptr inbounds %struct.GPR, %struct.GPR* %9205, i32 0, i32 33
  %9207 = getelementptr inbounds %struct.Reg, %struct.Reg* %9206, i32 0, i32 0
  %PC.i614 = bitcast %union.anon* %9207 to i64*
  %9208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9209 = getelementptr inbounds %struct.GPR, %struct.GPR* %9208, i32 0, i32 1
  %9210 = getelementptr inbounds %struct.Reg, %struct.Reg* %9209, i32 0, i32 0
  %RAX.i615 = bitcast %union.anon* %9210 to i64*
  %9211 = load i64, i64* %RAX.i615
  %9212 = load i64, i64* %PC.i614
  %9213 = add i64 %9212, 3
  store i64 %9213, i64* %PC.i614
  %9214 = trunc i64 %9211 to i32
  %9215 = add i32 1, %9214
  %9216 = zext i32 %9215 to i64
  store i64 %9216, i64* %RAX.i615, align 8
  %9217 = icmp ult i32 %9215, %9214
  %9218 = icmp ult i32 %9215, 1
  %9219 = or i1 %9217, %9218
  %9220 = zext i1 %9219 to i8
  %9221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9220, i8* %9221, align 1
  %9222 = and i32 %9215, 255
  %9223 = call i32 @llvm.ctpop.i32(i32 %9222)
  %9224 = trunc i32 %9223 to i8
  %9225 = and i8 %9224, 1
  %9226 = xor i8 %9225, 1
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9226, i8* %9227, align 1
  %9228 = xor i64 1, %9211
  %9229 = trunc i64 %9228 to i32
  %9230 = xor i32 %9229, %9215
  %9231 = lshr i32 %9230, 4
  %9232 = trunc i32 %9231 to i8
  %9233 = and i8 %9232, 1
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9233, i8* %9234, align 1
  %9235 = icmp eq i32 %9215, 0
  %9236 = zext i1 %9235 to i8
  %9237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9236, i8* %9237, align 1
  %9238 = lshr i32 %9215, 31
  %9239 = trunc i32 %9238 to i8
  %9240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9239, i8* %9240, align 1
  %9241 = lshr i32 %9214, 31
  %9242 = xor i32 %9238, %9241
  %9243 = add i32 %9242, %9238
  %9244 = icmp eq i32 %9243, 2
  %9245 = zext i1 %9244 to i8
  %9246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9245, i8* %9246, align 1
  store %struct.Memory* %loadMem_41b6a7, %struct.Memory** %MEMORY
  %loadMem_41b6aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9248 = getelementptr inbounds %struct.GPR, %struct.GPR* %9247, i32 0, i32 33
  %9249 = getelementptr inbounds %struct.Reg, %struct.Reg* %9248, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %9249 to i64*
  %9250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9251 = getelementptr inbounds %struct.GPR, %struct.GPR* %9250, i32 0, i32 1
  %9252 = getelementptr inbounds %struct.Reg, %struct.Reg* %9251, i32 0, i32 0
  %EAX.i612 = bitcast %union.anon* %9252 to i32*
  %9253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9254 = getelementptr inbounds %struct.GPR, %struct.GPR* %9253, i32 0, i32 15
  %9255 = getelementptr inbounds %struct.Reg, %struct.Reg* %9254, i32 0, i32 0
  %RBP.i613 = bitcast %union.anon* %9255 to i64*
  %9256 = load i64, i64* %RBP.i613
  %9257 = sub i64 %9256, 80
  %9258 = load i32, i32* %EAX.i612
  %9259 = zext i32 %9258 to i64
  %9260 = load i64, i64* %PC.i611
  %9261 = add i64 %9260, 3
  store i64 %9261, i64* %PC.i611
  %9262 = inttoptr i64 %9257 to i32*
  store i32 %9258, i32* %9262
  store %struct.Memory* %loadMem_41b6aa, %struct.Memory** %MEMORY
  %loadMem_41b6ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %9263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9264 = getelementptr inbounds %struct.GPR, %struct.GPR* %9263, i32 0, i32 33
  %9265 = getelementptr inbounds %struct.Reg, %struct.Reg* %9264, i32 0, i32 0
  %PC.i610 = bitcast %union.anon* %9265 to i64*
  %9266 = load i64, i64* %PC.i610
  %9267 = add i64 %9266, -67
  %9268 = load i64, i64* %PC.i610
  %9269 = add i64 %9268, 5
  store i64 %9269, i64* %PC.i610
  %9270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9267, i64* %9270, align 8
  store %struct.Memory* %loadMem_41b6ad, %struct.Memory** %MEMORY
  br label %block_.L_41b66a

block_.L_41b6b2:                                  ; preds = %block_.L_41b66a
  %loadMem_41b6b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9272 = getelementptr inbounds %struct.GPR, %struct.GPR* %9271, i32 0, i32 33
  %9273 = getelementptr inbounds %struct.Reg, %struct.Reg* %9272, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %9273 to i64*
  %9274 = load i64, i64* %PC.i609
  %9275 = add i64 %9274, 5
  %9276 = load i64, i64* %PC.i609
  %9277 = add i64 %9276, 5
  store i64 %9277, i64* %PC.i609
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9275, i64* %9278, align 8
  store %struct.Memory* %loadMem_41b6b2, %struct.Memory** %MEMORY
  br label %block_.L_41b6b7

block_.L_41b6b7:                                  ; preds = %block_.L_41b6b2
  %loadMem_41b6b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9280 = getelementptr inbounds %struct.GPR, %struct.GPR* %9279, i32 0, i32 33
  %9281 = getelementptr inbounds %struct.Reg, %struct.Reg* %9280, i32 0, i32 0
  %PC.i607 = bitcast %union.anon* %9281 to i64*
  %9282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9283 = getelementptr inbounds %struct.GPR, %struct.GPR* %9282, i32 0, i32 1
  %9284 = getelementptr inbounds %struct.Reg, %struct.Reg* %9283, i32 0, i32 0
  %RAX.i608 = bitcast %union.anon* %9284 to i64*
  %9285 = load i64, i64* %PC.i607
  %9286 = add i64 %9285, 7
  store i64 %9286, i64* %PC.i607
  %9287 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %9288 = zext i32 %9287 to i64
  store i64 %9288, i64* %RAX.i608, align 8
  store %struct.Memory* %loadMem_41b6b7, %struct.Memory** %MEMORY
  %loadMem_41b6be = load %struct.Memory*, %struct.Memory** %MEMORY
  %9289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9290 = getelementptr inbounds %struct.GPR, %struct.GPR* %9289, i32 0, i32 33
  %9291 = getelementptr inbounds %struct.Reg, %struct.Reg* %9290, i32 0, i32 0
  %PC.i605 = bitcast %union.anon* %9291 to i64*
  %9292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9293 = getelementptr inbounds %struct.GPR, %struct.GPR* %9292, i32 0, i32 1
  %9294 = getelementptr inbounds %struct.Reg, %struct.Reg* %9293, i32 0, i32 0
  %RAX.i606 = bitcast %union.anon* %9294 to i64*
  %9295 = load i64, i64* %RAX.i606
  %9296 = load i64, i64* %PC.i605
  %9297 = add i64 %9296, 3
  store i64 %9297, i64* %PC.i605
  %9298 = trunc i64 %9295 to i32
  %9299 = add i32 1, %9298
  %9300 = zext i32 %9299 to i64
  store i64 %9300, i64* %RAX.i606, align 8
  %9301 = icmp ult i32 %9299, %9298
  %9302 = icmp ult i32 %9299, 1
  %9303 = or i1 %9301, %9302
  %9304 = zext i1 %9303 to i8
  %9305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9304, i8* %9305, align 1
  %9306 = and i32 %9299, 255
  %9307 = call i32 @llvm.ctpop.i32(i32 %9306)
  %9308 = trunc i32 %9307 to i8
  %9309 = and i8 %9308, 1
  %9310 = xor i8 %9309, 1
  %9311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9310, i8* %9311, align 1
  %9312 = xor i64 1, %9295
  %9313 = trunc i64 %9312 to i32
  %9314 = xor i32 %9313, %9299
  %9315 = lshr i32 %9314, 4
  %9316 = trunc i32 %9315 to i8
  %9317 = and i8 %9316, 1
  %9318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9317, i8* %9318, align 1
  %9319 = icmp eq i32 %9299, 0
  %9320 = zext i1 %9319 to i8
  %9321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9320, i8* %9321, align 1
  %9322 = lshr i32 %9299, 31
  %9323 = trunc i32 %9322 to i8
  %9324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9323, i8* %9324, align 1
  %9325 = lshr i32 %9298, 31
  %9326 = xor i32 %9322, %9325
  %9327 = add i32 %9326, %9322
  %9328 = icmp eq i32 %9327, 2
  %9329 = zext i1 %9328 to i8
  %9330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9329, i8* %9330, align 1
  store %struct.Memory* %loadMem_41b6be, %struct.Memory** %MEMORY
  %loadMem_41b6c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9332 = getelementptr inbounds %struct.GPR, %struct.GPR* %9331, i32 0, i32 33
  %9333 = getelementptr inbounds %struct.Reg, %struct.Reg* %9332, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %9333 to i64*
  %9334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9335 = getelementptr inbounds %struct.GPR, %struct.GPR* %9334, i32 0, i32 1
  %9336 = getelementptr inbounds %struct.Reg, %struct.Reg* %9335, i32 0, i32 0
  %EAX.i604 = bitcast %union.anon* %9336 to i32*
  %9337 = load i32, i32* %EAX.i604
  %9338 = zext i32 %9337 to i64
  %9339 = load i64, i64* %PC.i603
  %9340 = add i64 %9339, 7
  store i64 %9340, i64* %PC.i603
  store i32 %9337, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  store %struct.Memory* %loadMem_41b6c1, %struct.Memory** %MEMORY
  %loadMem_41b6c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9342 = getelementptr inbounds %struct.GPR, %struct.GPR* %9341, i32 0, i32 33
  %9343 = getelementptr inbounds %struct.Reg, %struct.Reg* %9342, i32 0, i32 0
  %PC.i602 = bitcast %union.anon* %9343 to i64*
  %9344 = load i64, i64* %PC.i602
  %9345 = add i64 %9344, -1076
  %9346 = load i64, i64* %PC.i602
  %9347 = add i64 %9346, 5
  store i64 %9347, i64* %PC.i602
  %9348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9345, i64* %9348, align 8
  store %struct.Memory* %loadMem_41b6c8, %struct.Memory** %MEMORY
  br label %block_.L_41b294

block_.L_41b6cd:                                  ; preds = %block_41b65e, %block_41b646, %block_41b54c, %block_41b388, %block_41b2fe, %block_.L_41b294
  %loadMem_41b6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9350 = getelementptr inbounds %struct.GPR, %struct.GPR* %9349, i32 0, i32 33
  %9351 = getelementptr inbounds %struct.Reg, %struct.Reg* %9350, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %9351 to i64*
  %9352 = load i64, i64* %PC.i601
  %9353 = add i64 %9352, 5
  %9354 = load i64, i64* %PC.i601
  %9355 = add i64 %9354, 5
  store i64 %9355, i64* %PC.i601
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9353, i64* %9356, align 8
  store %struct.Memory* %loadMem_41b6cd, %struct.Memory** %MEMORY
  br label %block_.L_41b6d2

block_.L_41b6d2:                                  ; preds = %block_.L_41b6cd, %block_41b08b
  %loadMem_41b6d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9358 = getelementptr inbounds %struct.GPR, %struct.GPR* %9357, i32 0, i32 33
  %9359 = getelementptr inbounds %struct.Reg, %struct.Reg* %9358, i32 0, i32 0
  %PC.i600 = bitcast %union.anon* %9359 to i64*
  %9360 = load i64, i64* %PC.i600
  %9361 = add i64 %9360, 8
  store i64 %9361, i64* %PC.i600
  %9362 = load i32, i32* bitcast (%G_0x62e4f8_type* @G_0x62e4f8 to i32*)
  %9363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9363, align 1
  %9364 = and i32 %9362, 255
  %9365 = call i32 @llvm.ctpop.i32(i32 %9364)
  %9366 = trunc i32 %9365 to i8
  %9367 = and i8 %9366, 1
  %9368 = xor i8 %9367, 1
  %9369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9368, i8* %9369, align 1
  %9370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9370, align 1
  %9371 = icmp eq i32 %9362, 0
  %9372 = zext i1 %9371 to i8
  %9373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9372, i8* %9373, align 1
  %9374 = lshr i32 %9362, 31
  %9375 = trunc i32 %9374 to i8
  %9376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9375, i8* %9376, align 1
  %9377 = lshr i32 %9362, 31
  %9378 = xor i32 %9374, %9377
  %9379 = add i32 %9378, %9377
  %9380 = icmp eq i32 %9379, 2
  %9381 = zext i1 %9380 to i8
  %9382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9381, i8* %9382, align 1
  store %struct.Memory* %loadMem_41b6d2, %struct.Memory** %MEMORY
  %loadMem_41b6da = load %struct.Memory*, %struct.Memory** %MEMORY
  %9383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9384 = getelementptr inbounds %struct.GPR, %struct.GPR* %9383, i32 0, i32 33
  %9385 = getelementptr inbounds %struct.Reg, %struct.Reg* %9384, i32 0, i32 0
  %PC.i599 = bitcast %union.anon* %9385 to i64*
  %9386 = load i64, i64* %PC.i599
  %9387 = add i64 %9386, 487
  %9388 = load i64, i64* %PC.i599
  %9389 = add i64 %9388, 6
  %9390 = load i64, i64* %PC.i599
  %9391 = add i64 %9390, 6
  store i64 %9391, i64* %PC.i599
  %9392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9393 = load i8, i8* %9392, align 1
  %9394 = icmp eq i8 %9393, 0
  %9395 = zext i1 %9394 to i8
  store i8 %9395, i8* %BRANCH_TAKEN, align 1
  %9396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9397 = select i1 %9394, i64 %9387, i64 %9389
  store i64 %9397, i64* %9396, align 8
  store %struct.Memory* %loadMem_41b6da, %struct.Memory** %MEMORY
  %loadBr_41b6da = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b6da = icmp eq i8 %loadBr_41b6da, 1
  br i1 %cmpBr_41b6da, label %block_.L_41b8c1, label %block_41b6e0

block_41b6e0:                                     ; preds = %block_.L_41b6d2
  %loadMem_41b6e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9399 = getelementptr inbounds %struct.GPR, %struct.GPR* %9398, i32 0, i32 33
  %9400 = getelementptr inbounds %struct.Reg, %struct.Reg* %9399, i32 0, i32 0
  %PC.i596 = bitcast %union.anon* %9400 to i64*
  %9401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9402 = getelementptr inbounds %struct.GPR, %struct.GPR* %9401, i32 0, i32 1
  %9403 = getelementptr inbounds %struct.Reg, %struct.Reg* %9402, i32 0, i32 0
  %RAX.i597 = bitcast %union.anon* %9403 to i64*
  %9404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9405 = getelementptr inbounds %struct.GPR, %struct.GPR* %9404, i32 0, i32 15
  %9406 = getelementptr inbounds %struct.Reg, %struct.Reg* %9405, i32 0, i32 0
  %RBP.i598 = bitcast %union.anon* %9406 to i64*
  %9407 = load i64, i64* %RBP.i598
  %9408 = sub i64 %9407, 24
  %9409 = load i64, i64* %PC.i596
  %9410 = add i64 %9409, 4
  store i64 %9410, i64* %PC.i596
  %9411 = inttoptr i64 %9408 to i64*
  %9412 = load i64, i64* %9411
  store i64 %9412, i64* %RAX.i597, align 8
  store %struct.Memory* %loadMem_41b6e0, %struct.Memory** %MEMORY
  %loadMem_41b6e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9414 = getelementptr inbounds %struct.GPR, %struct.GPR* %9413, i32 0, i32 33
  %9415 = getelementptr inbounds %struct.Reg, %struct.Reg* %9414, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %9415 to i64*
  %9416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9417 = getelementptr inbounds %struct.GPR, %struct.GPR* %9416, i32 0, i32 1
  %9418 = getelementptr inbounds %struct.Reg, %struct.Reg* %9417, i32 0, i32 0
  %RAX.i594 = bitcast %union.anon* %9418 to i64*
  %9419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9420 = getelementptr inbounds %struct.GPR, %struct.GPR* %9419, i32 0, i32 15
  %9421 = getelementptr inbounds %struct.Reg, %struct.Reg* %9420, i32 0, i32 0
  %RBP.i595 = bitcast %union.anon* %9421 to i64*
  %9422 = load i64, i64* %RBP.i595
  %9423 = sub i64 %9422, 72
  %9424 = load i64, i64* %RAX.i594
  %9425 = load i64, i64* %PC.i593
  %9426 = add i64 %9425, 4
  store i64 %9426, i64* %PC.i593
  %9427 = inttoptr i64 %9423 to i64*
  store i64 %9424, i64* %9427
  store %struct.Memory* %loadMem_41b6e4, %struct.Memory** %MEMORY
  %loadMem_41b6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9429 = getelementptr inbounds %struct.GPR, %struct.GPR* %9428, i32 0, i32 33
  %9430 = getelementptr inbounds %struct.Reg, %struct.Reg* %9429, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %9430 to i64*
  %9431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9432 = getelementptr inbounds %struct.GPR, %struct.GPR* %9431, i32 0, i32 1
  %9433 = getelementptr inbounds %struct.Reg, %struct.Reg* %9432, i32 0, i32 0
  %RAX.i591 = bitcast %union.anon* %9433 to i64*
  %9434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9435 = getelementptr inbounds %struct.GPR, %struct.GPR* %9434, i32 0, i32 15
  %9436 = getelementptr inbounds %struct.Reg, %struct.Reg* %9435, i32 0, i32 0
  %RBP.i592 = bitcast %union.anon* %9436 to i64*
  %9437 = load i64, i64* %RBP.i592
  %9438 = sub i64 %9437, 16
  %9439 = load i64, i64* %PC.i590
  %9440 = add i64 %9439, 4
  store i64 %9440, i64* %PC.i590
  %9441 = inttoptr i64 %9438 to i64*
  %9442 = load i64, i64* %9441
  store i64 %9442, i64* %RAX.i591, align 8
  store %struct.Memory* %loadMem_41b6e8, %struct.Memory** %MEMORY
  %loadMem_41b6ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %9443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9444 = getelementptr inbounds %struct.GPR, %struct.GPR* %9443, i32 0, i32 33
  %9445 = getelementptr inbounds %struct.Reg, %struct.Reg* %9444, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %9445 to i64*
  %9446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9447 = getelementptr inbounds %struct.GPR, %struct.GPR* %9446, i32 0, i32 1
  %9448 = getelementptr inbounds %struct.Reg, %struct.Reg* %9447, i32 0, i32 0
  %RAX.i588 = bitcast %union.anon* %9448 to i64*
  %9449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9450 = getelementptr inbounds %struct.GPR, %struct.GPR* %9449, i32 0, i32 15
  %9451 = getelementptr inbounds %struct.Reg, %struct.Reg* %9450, i32 0, i32 0
  %RBP.i589 = bitcast %union.anon* %9451 to i64*
  %9452 = load i64, i64* %RBP.i589
  %9453 = sub i64 %9452, 64
  %9454 = load i64, i64* %RAX.i588
  %9455 = load i64, i64* %PC.i587
  %9456 = add i64 %9455, 4
  store i64 %9456, i64* %PC.i587
  %9457 = inttoptr i64 %9453 to i64*
  store i64 %9454, i64* %9457
  store %struct.Memory* %loadMem_41b6ec, %struct.Memory** %MEMORY
  %loadMem_41b6f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9459 = getelementptr inbounds %struct.GPR, %struct.GPR* %9458, i32 0, i32 33
  %9460 = getelementptr inbounds %struct.Reg, %struct.Reg* %9459, i32 0, i32 0
  %PC.i584 = bitcast %union.anon* %9460 to i64*
  %9461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9462 = getelementptr inbounds %struct.GPR, %struct.GPR* %9461, i32 0, i32 1
  %9463 = getelementptr inbounds %struct.Reg, %struct.Reg* %9462, i32 0, i32 0
  %RAX.i585 = bitcast %union.anon* %9463 to i64*
  %9464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9465 = getelementptr inbounds %struct.GPR, %struct.GPR* %9464, i32 0, i32 15
  %9466 = getelementptr inbounds %struct.Reg, %struct.Reg* %9465, i32 0, i32 0
  %RBP.i586 = bitcast %union.anon* %9466 to i64*
  %9467 = load i64, i64* %RBP.i586
  %9468 = sub i64 %9467, 8
  %9469 = load i64, i64* %PC.i584
  %9470 = add i64 %9469, 4
  store i64 %9470, i64* %PC.i584
  %9471 = inttoptr i64 %9468 to i64*
  %9472 = load i64, i64* %9471
  store i64 %9472, i64* %RAX.i585, align 8
  store %struct.Memory* %loadMem_41b6f0, %struct.Memory** %MEMORY
  %loadMem_41b6f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9474 = getelementptr inbounds %struct.GPR, %struct.GPR* %9473, i32 0, i32 33
  %9475 = getelementptr inbounds %struct.Reg, %struct.Reg* %9474, i32 0, i32 0
  %PC.i581 = bitcast %union.anon* %9475 to i64*
  %9476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9477 = getelementptr inbounds %struct.GPR, %struct.GPR* %9476, i32 0, i32 1
  %9478 = getelementptr inbounds %struct.Reg, %struct.Reg* %9477, i32 0, i32 0
  %RAX.i582 = bitcast %union.anon* %9478 to i64*
  %9479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9480 = getelementptr inbounds %struct.GPR, %struct.GPR* %9479, i32 0, i32 15
  %9481 = getelementptr inbounds %struct.Reg, %struct.Reg* %9480, i32 0, i32 0
  %RBP.i583 = bitcast %union.anon* %9481 to i64*
  %9482 = load i64, i64* %RBP.i583
  %9483 = sub i64 %9482, 56
  %9484 = load i64, i64* %RAX.i582
  %9485 = load i64, i64* %PC.i581
  %9486 = add i64 %9485, 4
  store i64 %9486, i64* %PC.i581
  %9487 = inttoptr i64 %9483 to i64*
  store i64 %9484, i64* %9487
  store %struct.Memory* %loadMem_41b6f4, %struct.Memory** %MEMORY
  %loadMem_41b6f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9489 = getelementptr inbounds %struct.GPR, %struct.GPR* %9488, i32 0, i32 33
  %9490 = getelementptr inbounds %struct.Reg, %struct.Reg* %9489, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %9490 to i64*
  %9491 = load i64, i64* %PC.i580
  %9492 = add i64 %9491, 8
  store i64 %9492, i64* %PC.i580
  %9493 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %9494 = sub i32 %9493, 4
  %9495 = icmp ult i32 %9493, 4
  %9496 = zext i1 %9495 to i8
  %9497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9496, i8* %9497, align 1
  %9498 = and i32 %9494, 255
  %9499 = call i32 @llvm.ctpop.i32(i32 %9498)
  %9500 = trunc i32 %9499 to i8
  %9501 = and i8 %9500, 1
  %9502 = xor i8 %9501, 1
  %9503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9502, i8* %9503, align 1
  %9504 = xor i32 %9493, 4
  %9505 = xor i32 %9504, %9494
  %9506 = lshr i32 %9505, 4
  %9507 = trunc i32 %9506 to i8
  %9508 = and i8 %9507, 1
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9508, i8* %9509, align 1
  %9510 = icmp eq i32 %9494, 0
  %9511 = zext i1 %9510 to i8
  %9512 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9511, i8* %9512, align 1
  %9513 = lshr i32 %9494, 31
  %9514 = trunc i32 %9513 to i8
  %9515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9514, i8* %9515, align 1
  %9516 = lshr i32 %9493, 31
  %9517 = xor i32 %9513, %9516
  %9518 = add i32 %9517, %9516
  %9519 = icmp eq i32 %9518, 2
  %9520 = zext i1 %9519 to i8
  %9521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9520, i8* %9521, align 1
  store %struct.Memory* %loadMem_41b6f8, %struct.Memory** %MEMORY
  %loadMem_41b700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9523 = getelementptr inbounds %struct.GPR, %struct.GPR* %9522, i32 0, i32 33
  %9524 = getelementptr inbounds %struct.Reg, %struct.Reg* %9523, i32 0, i32 0
  %PC.i579 = bitcast %union.anon* %9524 to i64*
  %9525 = load i64, i64* %PC.i579
  %9526 = add i64 %9525, 20
  %9527 = load i64, i64* %PC.i579
  %9528 = add i64 %9527, 6
  %9529 = load i64, i64* %PC.i579
  %9530 = add i64 %9529, 6
  store i64 %9530, i64* %PC.i579
  %9531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9532 = load i8, i8* %9531, align 1
  store i8 %9532, i8* %BRANCH_TAKEN, align 1
  %9533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9534 = icmp ne i8 %9532, 0
  %9535 = select i1 %9534, i64 %9526, i64 %9528
  store i64 %9535, i64* %9533, align 8
  store %struct.Memory* %loadMem_41b700, %struct.Memory** %MEMORY
  %loadBr_41b700 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b700 = icmp eq i8 %loadBr_41b700, 1
  br i1 %cmpBr_41b700, label %block_.L_41b714, label %block_41b706

block_41b706:                                     ; preds = %block_41b6e0
  %loadMem_41b706 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9537 = getelementptr inbounds %struct.GPR, %struct.GPR* %9536, i32 0, i32 33
  %9538 = getelementptr inbounds %struct.Reg, %struct.Reg* %9537, i32 0, i32 0
  %PC.i578 = bitcast %union.anon* %9538 to i64*
  %9539 = load i64, i64* %PC.i578
  %9540 = add i64 %9539, 8
  store i64 %9540, i64* %PC.i578
  %9541 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %9542 = sub i32 %9541, 3
  %9543 = icmp ult i32 %9541, 3
  %9544 = zext i1 %9543 to i8
  %9545 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9544, i8* %9545, align 1
  %9546 = and i32 %9542, 255
  %9547 = call i32 @llvm.ctpop.i32(i32 %9546)
  %9548 = trunc i32 %9547 to i8
  %9549 = and i8 %9548, 1
  %9550 = xor i8 %9549, 1
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9550, i8* %9551, align 1
  %9552 = xor i32 %9541, 3
  %9553 = xor i32 %9552, %9542
  %9554 = lshr i32 %9553, 4
  %9555 = trunc i32 %9554 to i8
  %9556 = and i8 %9555, 1
  %9557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9556, i8* %9557, align 1
  %9558 = icmp eq i32 %9542, 0
  %9559 = zext i1 %9558 to i8
  %9560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9559, i8* %9560, align 1
  %9561 = lshr i32 %9542, 31
  %9562 = trunc i32 %9561 to i8
  %9563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9562, i8* %9563, align 1
  %9564 = lshr i32 %9541, 31
  %9565 = xor i32 %9561, %9564
  %9566 = add i32 %9565, %9564
  %9567 = icmp eq i32 %9566, 2
  %9568 = zext i1 %9567 to i8
  %9569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9568, i8* %9569, align 1
  store %struct.Memory* %loadMem_41b706, %struct.Memory** %MEMORY
  %loadMem_41b70e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9571 = getelementptr inbounds %struct.GPR, %struct.GPR* %9570, i32 0, i32 33
  %9572 = getelementptr inbounds %struct.Reg, %struct.Reg* %9571, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %9572 to i64*
  %9573 = load i64, i64* %PC.i577
  %9574 = add i64 %9573, 430
  %9575 = load i64, i64* %PC.i577
  %9576 = add i64 %9575, 6
  %9577 = load i64, i64* %PC.i577
  %9578 = add i64 %9577, 6
  store i64 %9578, i64* %PC.i577
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9580 = load i8, i8* %9579, align 1
  %9581 = icmp eq i8 %9580, 0
  %9582 = zext i1 %9581 to i8
  store i8 %9582, i8* %BRANCH_TAKEN, align 1
  %9583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9584 = select i1 %9581, i64 %9574, i64 %9576
  store i64 %9584, i64* %9583, align 8
  store %struct.Memory* %loadMem_41b70e, %struct.Memory** %MEMORY
  %loadBr_41b70e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b70e = icmp eq i8 %loadBr_41b70e, 1
  br i1 %cmpBr_41b70e, label %block_.L_41b8bc, label %block_.L_41b714

block_.L_41b714:                                  ; preds = %block_41b706, %block_41b6e0
  %loadMem_41b714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9586 = getelementptr inbounds %struct.GPR, %struct.GPR* %9585, i32 0, i32 33
  %9587 = getelementptr inbounds %struct.Reg, %struct.Reg* %9586, i32 0, i32 0
  %PC.i576 = bitcast %union.anon* %9587 to i64*
  %9588 = load i64, i64* %PC.i576
  %9589 = add i64 %9588, 8
  store i64 %9589, i64* %PC.i576
  %9590 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9591, align 1
  %9592 = and i32 %9590, 255
  %9593 = call i32 @llvm.ctpop.i32(i32 %9592)
  %9594 = trunc i32 %9593 to i8
  %9595 = and i8 %9594, 1
  %9596 = xor i8 %9595, 1
  %9597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9596, i8* %9597, align 1
  %9598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9598, align 1
  %9599 = icmp eq i32 %9590, 0
  %9600 = zext i1 %9599 to i8
  %9601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9600, i8* %9601, align 1
  %9602 = lshr i32 %9590, 31
  %9603 = trunc i32 %9602 to i8
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9603, i8* %9604, align 1
  %9605 = lshr i32 %9590, 31
  %9606 = xor i32 %9602, %9605
  %9607 = add i32 %9606, %9605
  %9608 = icmp eq i32 %9607, 2
  %9609 = zext i1 %9608 to i8
  %9610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9609, i8* %9610, align 1
  store %struct.Memory* %loadMem_41b714, %struct.Memory** %MEMORY
  %loadMem_41b71c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9612 = getelementptr inbounds %struct.GPR, %struct.GPR* %9611, i32 0, i32 33
  %9613 = getelementptr inbounds %struct.Reg, %struct.Reg* %9612, i32 0, i32 0
  %PC.i575 = bitcast %union.anon* %9613 to i64*
  %9614 = load i64, i64* %PC.i575
  %9615 = add i64 %9614, 416
  %9616 = load i64, i64* %PC.i575
  %9617 = add i64 %9616, 6
  %9618 = load i64, i64* %PC.i575
  %9619 = add i64 %9618, 6
  store i64 %9619, i64* %PC.i575
  %9620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9621 = load i8, i8* %9620, align 1
  %9622 = icmp eq i8 %9621, 0
  %9623 = zext i1 %9622 to i8
  store i8 %9623, i8* %BRANCH_TAKEN, align 1
  %9624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9625 = select i1 %9622, i64 %9615, i64 %9617
  store i64 %9625, i64* %9624, align 8
  store %struct.Memory* %loadMem_41b71c, %struct.Memory** %MEMORY
  %loadBr_41b71c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b71c = icmp eq i8 %loadBr_41b71c, 1
  br i1 %cmpBr_41b71c, label %block_.L_41b8bc, label %block_41b722

block_41b722:                                     ; preds = %block_.L_41b714
  %loadMem_41b722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9627 = getelementptr inbounds %struct.GPR, %struct.GPR* %9626, i32 0, i32 33
  %9628 = getelementptr inbounds %struct.Reg, %struct.Reg* %9627, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %9628 to i64*
  %9629 = load i64, i64* %PC.i574
  %9630 = add i64 %9629, 8
  store i64 %9630, i64* %PC.i574
  %9631 = load i32, i32* bitcast (%G_0x62e51c_type* @G_0x62e51c to i32*)
  %9632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9632, align 1
  %9633 = and i32 %9631, 255
  %9634 = call i32 @llvm.ctpop.i32(i32 %9633)
  %9635 = trunc i32 %9634 to i8
  %9636 = and i8 %9635, 1
  %9637 = xor i8 %9636, 1
  %9638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9637, i8* %9638, align 1
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9639, align 1
  %9640 = icmp eq i32 %9631, 0
  %9641 = zext i1 %9640 to i8
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9641, i8* %9642, align 1
  %9643 = lshr i32 %9631, 31
  %9644 = trunc i32 %9643 to i8
  %9645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9644, i8* %9645, align 1
  %9646 = lshr i32 %9631, 31
  %9647 = xor i32 %9643, %9646
  %9648 = add i32 %9647, %9646
  %9649 = icmp eq i32 %9648, 2
  %9650 = zext i1 %9649 to i8
  %9651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9650, i8* %9651, align 1
  store %struct.Memory* %loadMem_41b722, %struct.Memory** %MEMORY
  %loadMem_41b72a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9653 = getelementptr inbounds %struct.GPR, %struct.GPR* %9652, i32 0, i32 33
  %9654 = getelementptr inbounds %struct.Reg, %struct.Reg* %9653, i32 0, i32 0
  %PC.i573 = bitcast %union.anon* %9654 to i64*
  %9655 = load i64, i64* %PC.i573
  %9656 = add i64 %9655, 402
  %9657 = load i64, i64* %PC.i573
  %9658 = add i64 %9657, 6
  %9659 = load i64, i64* %PC.i573
  %9660 = add i64 %9659, 6
  store i64 %9660, i64* %PC.i573
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9662 = load i8, i8* %9661, align 1
  %9663 = icmp eq i8 %9662, 0
  %9664 = zext i1 %9663 to i8
  store i8 %9664, i8* %BRANCH_TAKEN, align 1
  %9665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9666 = select i1 %9663, i64 %9656, i64 %9658
  store i64 %9666, i64* %9665, align 8
  store %struct.Memory* %loadMem_41b72a, %struct.Memory** %MEMORY
  %loadBr_41b72a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b72a = icmp eq i8 %loadBr_41b72a, 1
  br i1 %cmpBr_41b72a, label %block_.L_41b8bc, label %block_41b730

block_41b730:                                     ; preds = %block_41b722
  %loadMem_41b730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9668 = getelementptr inbounds %struct.GPR, %struct.GPR* %9667, i32 0, i32 33
  %9669 = getelementptr inbounds %struct.Reg, %struct.Reg* %9668, i32 0, i32 0
  %PC.i572 = bitcast %union.anon* %9669 to i64*
  %9670 = load i64, i64* %PC.i572
  %9671 = add i64 %9670, 8
  store i64 %9671, i64* %PC.i572
  %9672 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %9673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9673, align 1
  %9674 = and i32 %9672, 255
  %9675 = call i32 @llvm.ctpop.i32(i32 %9674)
  %9676 = trunc i32 %9675 to i8
  %9677 = and i8 %9676, 1
  %9678 = xor i8 %9677, 1
  %9679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9678, i8* %9679, align 1
  %9680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9680, align 1
  %9681 = icmp eq i32 %9672, 0
  %9682 = zext i1 %9681 to i8
  %9683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9682, i8* %9683, align 1
  %9684 = lshr i32 %9672, 31
  %9685 = trunc i32 %9684 to i8
  %9686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9685, i8* %9686, align 1
  %9687 = lshr i32 %9672, 31
  %9688 = xor i32 %9684, %9687
  %9689 = add i32 %9688, %9687
  %9690 = icmp eq i32 %9689, 2
  %9691 = zext i1 %9690 to i8
  %9692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9691, i8* %9692, align 1
  store %struct.Memory* %loadMem_41b730, %struct.Memory** %MEMORY
  %loadMem_41b738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9694 = getelementptr inbounds %struct.GPR, %struct.GPR* %9693, i32 0, i32 33
  %9695 = getelementptr inbounds %struct.Reg, %struct.Reg* %9694, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %9695 to i64*
  %9696 = load i64, i64* %PC.i571
  %9697 = add i64 %9696, 388
  %9698 = load i64, i64* %PC.i571
  %9699 = add i64 %9698, 6
  %9700 = load i64, i64* %PC.i571
  %9701 = add i64 %9700, 6
  store i64 %9701, i64* %PC.i571
  %9702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9703 = load i8, i8* %9702, align 1
  %9704 = icmp eq i8 %9703, 0
  %9705 = zext i1 %9704 to i8
  store i8 %9705, i8* %BRANCH_TAKEN, align 1
  %9706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9707 = select i1 %9704, i64 %9697, i64 %9699
  store i64 %9707, i64* %9706, align 8
  store %struct.Memory* %loadMem_41b738, %struct.Memory** %MEMORY
  %loadBr_41b738 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b738 = icmp eq i8 %loadBr_41b738, 1
  br i1 %cmpBr_41b738, label %block_.L_41b8bc, label %block_41b73e

block_41b73e:                                     ; preds = %block_41b730
  %loadMem_41b73e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9709 = getelementptr inbounds %struct.GPR, %struct.GPR* %9708, i32 0, i32 33
  %9710 = getelementptr inbounds %struct.Reg, %struct.Reg* %9709, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %9710 to i64*
  %9711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9712 = getelementptr inbounds %struct.GPR, %struct.GPR* %9711, i32 0, i32 11
  %9713 = getelementptr inbounds %struct.Reg, %struct.Reg* %9712, i32 0, i32 0
  %RDI.i569 = bitcast %union.anon* %9713 to i64*
  %9714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9715 = getelementptr inbounds %struct.GPR, %struct.GPR* %9714, i32 0, i32 15
  %9716 = getelementptr inbounds %struct.Reg, %struct.Reg* %9715, i32 0, i32 0
  %RBP.i570 = bitcast %union.anon* %9716 to i64*
  %9717 = load i64, i64* %RBP.i570
  %9718 = sub i64 %9717, 12528
  %9719 = load i64, i64* %PC.i568
  %9720 = add i64 %9719, 7
  store i64 %9720, i64* %PC.i568
  store i64 %9718, i64* %RDI.i569, align 8
  store %struct.Memory* %loadMem_41b73e, %struct.Memory** %MEMORY
  %loadMem_41b745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9722 = getelementptr inbounds %struct.GPR, %struct.GPR* %9721, i32 0, i32 33
  %9723 = getelementptr inbounds %struct.Reg, %struct.Reg* %9722, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %9723 to i64*
  %9724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9725 = getelementptr inbounds %struct.GPR, %struct.GPR* %9724, i32 0, i32 1
  %9726 = getelementptr inbounds %struct.Reg, %struct.Reg* %9725, i32 0, i32 0
  %RAX.i566 = bitcast %union.anon* %9726 to i64*
  %9727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9728 = getelementptr inbounds %struct.GPR, %struct.GPR* %9727, i32 0, i32 15
  %9729 = getelementptr inbounds %struct.Reg, %struct.Reg* %9728, i32 0, i32 0
  %RBP.i567 = bitcast %union.anon* %9729 to i64*
  %9730 = load i64, i64* %RBP.i567
  %9731 = sub i64 %9730, 24
  %9732 = load i64, i64* %PC.i565
  %9733 = add i64 %9732, 4
  store i64 %9733, i64* %PC.i565
  store i64 %9731, i64* %RAX.i566, align 8
  store %struct.Memory* %loadMem_41b745, %struct.Memory** %MEMORY
  %loadMem_41b749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9735 = getelementptr inbounds %struct.GPR, %struct.GPR* %9734, i32 0, i32 33
  %9736 = getelementptr inbounds %struct.Reg, %struct.Reg* %9735, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %9736 to i64*
  %9737 = load i64, i64* %PC.i564
  %9738 = add i64 %9737, 11
  store i64 %9738, i64* %PC.i564
  store i32 0, i32* bitcast (%G_0x62ea10_type* @G_0x62ea10 to i32*)
  store %struct.Memory* %loadMem_41b749, %struct.Memory** %MEMORY
  %loadMem_41b754 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9740 = getelementptr inbounds %struct.GPR, %struct.GPR* %9739, i32 0, i32 33
  %9741 = getelementptr inbounds %struct.Reg, %struct.Reg* %9740, i32 0, i32 0
  %PC.i561 = bitcast %union.anon* %9741 to i64*
  %9742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9743 = getelementptr inbounds %struct.GPR, %struct.GPR* %9742, i32 0, i32 1
  %9744 = getelementptr inbounds %struct.Reg, %struct.Reg* %9743, i32 0, i32 0
  %RAX.i562 = bitcast %union.anon* %9744 to i64*
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9746 = getelementptr inbounds %struct.GPR, %struct.GPR* %9745, i32 0, i32 5
  %9747 = getelementptr inbounds %struct.Reg, %struct.Reg* %9746, i32 0, i32 0
  %RCX.i563 = bitcast %union.anon* %9747 to i64*
  %9748 = load i64, i64* %RAX.i562
  %9749 = load i64, i64* %PC.i561
  %9750 = add i64 %9749, 3
  store i64 %9750, i64* %PC.i561
  %9751 = inttoptr i64 %9748 to i64*
  %9752 = load i64, i64* %9751
  store i64 %9752, i64* %RCX.i563, align 8
  store %struct.Memory* %loadMem_41b754, %struct.Memory** %MEMORY
  %loadMem_41b757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9754 = getelementptr inbounds %struct.GPR, %struct.GPR* %9753, i32 0, i32 33
  %9755 = getelementptr inbounds %struct.Reg, %struct.Reg* %9754, i32 0, i32 0
  %PC.i558 = bitcast %union.anon* %9755 to i64*
  %9756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9757 = getelementptr inbounds %struct.GPR, %struct.GPR* %9756, i32 0, i32 5
  %9758 = getelementptr inbounds %struct.Reg, %struct.Reg* %9757, i32 0, i32 0
  %RCX.i559 = bitcast %union.anon* %9758 to i64*
  %9759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9760 = getelementptr inbounds %struct.GPR, %struct.GPR* %9759, i32 0, i32 13
  %9761 = getelementptr inbounds %struct.Reg, %struct.Reg* %9760, i32 0, i32 0
  %RSP.i560 = bitcast %union.anon* %9761 to i64*
  %9762 = load i64, i64* %RSP.i560
  %9763 = load i64, i64* %RCX.i559
  %9764 = load i64, i64* %PC.i558
  %9765 = add i64 %9764, 4
  store i64 %9765, i64* %PC.i558
  %9766 = inttoptr i64 %9762 to i64*
  store i64 %9763, i64* %9766
  store %struct.Memory* %loadMem_41b757, %struct.Memory** %MEMORY
  %loadMem_41b75b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9768 = getelementptr inbounds %struct.GPR, %struct.GPR* %9767, i32 0, i32 33
  %9769 = getelementptr inbounds %struct.Reg, %struct.Reg* %9768, i32 0, i32 0
  %PC.i555 = bitcast %union.anon* %9769 to i64*
  %9770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9771 = getelementptr inbounds %struct.GPR, %struct.GPR* %9770, i32 0, i32 1
  %9772 = getelementptr inbounds %struct.Reg, %struct.Reg* %9771, i32 0, i32 0
  %RAX.i556 = bitcast %union.anon* %9772 to i64*
  %9773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9774 = getelementptr inbounds %struct.GPR, %struct.GPR* %9773, i32 0, i32 5
  %9775 = getelementptr inbounds %struct.Reg, %struct.Reg* %9774, i32 0, i32 0
  %RCX.i557 = bitcast %union.anon* %9775 to i64*
  %9776 = load i64, i64* %RAX.i556
  %9777 = add i64 %9776, 8
  %9778 = load i64, i64* %PC.i555
  %9779 = add i64 %9778, 4
  store i64 %9779, i64* %PC.i555
  %9780 = inttoptr i64 %9777 to i64*
  %9781 = load i64, i64* %9780
  store i64 %9781, i64* %RCX.i557, align 8
  store %struct.Memory* %loadMem_41b75b, %struct.Memory** %MEMORY
  %loadMem_41b75f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9783 = getelementptr inbounds %struct.GPR, %struct.GPR* %9782, i32 0, i32 33
  %9784 = getelementptr inbounds %struct.Reg, %struct.Reg* %9783, i32 0, i32 0
  %PC.i552 = bitcast %union.anon* %9784 to i64*
  %9785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9786 = getelementptr inbounds %struct.GPR, %struct.GPR* %9785, i32 0, i32 5
  %9787 = getelementptr inbounds %struct.Reg, %struct.Reg* %9786, i32 0, i32 0
  %RCX.i553 = bitcast %union.anon* %9787 to i64*
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9789 = getelementptr inbounds %struct.GPR, %struct.GPR* %9788, i32 0, i32 13
  %9790 = getelementptr inbounds %struct.Reg, %struct.Reg* %9789, i32 0, i32 0
  %RSP.i554 = bitcast %union.anon* %9790 to i64*
  %9791 = load i64, i64* %RSP.i554
  %9792 = add i64 %9791, 8
  %9793 = load i64, i64* %RCX.i553
  %9794 = load i64, i64* %PC.i552
  %9795 = add i64 %9794, 5
  store i64 %9795, i64* %PC.i552
  %9796 = inttoptr i64 %9792 to i64*
  store i64 %9793, i64* %9796
  store %struct.Memory* %loadMem_41b75f, %struct.Memory** %MEMORY
  %loadMem_41b764 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9798 = getelementptr inbounds %struct.GPR, %struct.GPR* %9797, i32 0, i32 33
  %9799 = getelementptr inbounds %struct.Reg, %struct.Reg* %9798, i32 0, i32 0
  %PC.i550 = bitcast %union.anon* %9799 to i64*
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9801 = getelementptr inbounds %struct.GPR, %struct.GPR* %9800, i32 0, i32 1
  %9802 = getelementptr inbounds %struct.Reg, %struct.Reg* %9801, i32 0, i32 0
  %RAX.i551 = bitcast %union.anon* %9802 to i64*
  %9803 = load i64, i64* %RAX.i551
  %9804 = add i64 %9803, 16
  %9805 = load i64, i64* %PC.i550
  %9806 = add i64 %9805, 4
  store i64 %9806, i64* %PC.i550
  %9807 = inttoptr i64 %9804 to i64*
  %9808 = load i64, i64* %9807
  store i64 %9808, i64* %RAX.i551, align 8
  store %struct.Memory* %loadMem_41b764, %struct.Memory** %MEMORY
  %loadMem_41b768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9810 = getelementptr inbounds %struct.GPR, %struct.GPR* %9809, i32 0, i32 33
  %9811 = getelementptr inbounds %struct.Reg, %struct.Reg* %9810, i32 0, i32 0
  %PC.i547 = bitcast %union.anon* %9811 to i64*
  %9812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9813 = getelementptr inbounds %struct.GPR, %struct.GPR* %9812, i32 0, i32 1
  %9814 = getelementptr inbounds %struct.Reg, %struct.Reg* %9813, i32 0, i32 0
  %RAX.i548 = bitcast %union.anon* %9814 to i64*
  %9815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9816 = getelementptr inbounds %struct.GPR, %struct.GPR* %9815, i32 0, i32 13
  %9817 = getelementptr inbounds %struct.Reg, %struct.Reg* %9816, i32 0, i32 0
  %RSP.i549 = bitcast %union.anon* %9817 to i64*
  %9818 = load i64, i64* %RSP.i549
  %9819 = add i64 %9818, 16
  %9820 = load i64, i64* %RAX.i548
  %9821 = load i64, i64* %PC.i547
  %9822 = add i64 %9821, 5
  store i64 %9822, i64* %PC.i547
  %9823 = inttoptr i64 %9819 to i64*
  store i64 %9820, i64* %9823
  store %struct.Memory* %loadMem_41b768, %struct.Memory** %MEMORY
  %loadMem1_41b76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9825 = getelementptr inbounds %struct.GPR, %struct.GPR* %9824, i32 0, i32 33
  %9826 = getelementptr inbounds %struct.Reg, %struct.Reg* %9825, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %9826 to i64*
  %9827 = load i64, i64* %PC.i546
  %9828 = add i64 %9827, -23933
  %9829 = load i64, i64* %PC.i546
  %9830 = add i64 %9829, 5
  %9831 = load i64, i64* %PC.i546
  %9832 = add i64 %9831, 5
  store i64 %9832, i64* %PC.i546
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %9834 = load i64, i64* %9833, align 8
  %9835 = add i64 %9834, -8
  %9836 = inttoptr i64 %9835 to i64*
  store i64 %9830, i64* %9836
  store i64 %9835, i64* %9833, align 8
  %9837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9828, i64* %9837, align 8
  store %struct.Memory* %loadMem1_41b76d, %struct.Memory** %MEMORY
  %loadMem2_41b76d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b76d = load i64, i64* %3
  %call2_41b76d = call %struct.Memory* @sub_4159f0.proofnumbercheck(%struct.State* %0, i64 %loadPC_41b76d, %struct.Memory* %loadMem2_41b76d)
  store %struct.Memory* %call2_41b76d, %struct.Memory** %MEMORY
  %loadMem_41b772 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9839 = getelementptr inbounds %struct.GPR, %struct.GPR* %9838, i32 0, i32 33
  %9840 = getelementptr inbounds %struct.Reg, %struct.Reg* %9839, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %9840 to i64*
  %9841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9842 = getelementptr inbounds %struct.GPR, %struct.GPR* %9841, i32 0, i32 1
  %9843 = getelementptr inbounds %struct.Reg, %struct.Reg* %9842, i32 0, i32 0
  %RAX.i544 = bitcast %union.anon* %9843 to i64*
  %9844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9845 = getelementptr inbounds %struct.GPR, %struct.GPR* %9844, i32 0, i32 15
  %9846 = getelementptr inbounds %struct.Reg, %struct.Reg* %9845, i32 0, i32 0
  %RBP.i545 = bitcast %union.anon* %9846 to i64*
  %9847 = load i64, i64* %RBP.i545
  %9848 = sub i64 %9847, 12528
  %9849 = load i64, i64* %PC.i543
  %9850 = add i64 %9849, 7
  store i64 %9850, i64* %PC.i543
  %9851 = inttoptr i64 %9848 to i64*
  %9852 = load i64, i64* %9851
  store i64 %9852, i64* %RAX.i544, align 8
  store %struct.Memory* %loadMem_41b772, %struct.Memory** %MEMORY
  %loadMem_41b779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9854 = getelementptr inbounds %struct.GPR, %struct.GPR* %9853, i32 0, i32 33
  %9855 = getelementptr inbounds %struct.Reg, %struct.Reg* %9854, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %9855 to i64*
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9857 = getelementptr inbounds %struct.GPR, %struct.GPR* %9856, i32 0, i32 1
  %9858 = getelementptr inbounds %struct.Reg, %struct.Reg* %9857, i32 0, i32 0
  %RAX.i541 = bitcast %union.anon* %9858 to i64*
  %9859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9860 = getelementptr inbounds %struct.GPR, %struct.GPR* %9859, i32 0, i32 15
  %9861 = getelementptr inbounds %struct.Reg, %struct.Reg* %9860, i32 0, i32 0
  %RBP.i542 = bitcast %union.anon* %9861 to i64*
  %9862 = load i64, i64* %RBP.i542
  %9863 = sub i64 %9862, 24
  %9864 = load i64, i64* %RAX.i541
  %9865 = load i64, i64* %PC.i540
  %9866 = add i64 %9865, 4
  store i64 %9866, i64* %PC.i540
  %9867 = inttoptr i64 %9863 to i64*
  store i64 %9864, i64* %9867
  store %struct.Memory* %loadMem_41b779, %struct.Memory** %MEMORY
  %loadMem_41b77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9869 = getelementptr inbounds %struct.GPR, %struct.GPR* %9868, i32 0, i32 33
  %9870 = getelementptr inbounds %struct.Reg, %struct.Reg* %9869, i32 0, i32 0
  %PC.i537 = bitcast %union.anon* %9870 to i64*
  %9871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9872 = getelementptr inbounds %struct.GPR, %struct.GPR* %9871, i32 0, i32 1
  %9873 = getelementptr inbounds %struct.Reg, %struct.Reg* %9872, i32 0, i32 0
  %RAX.i538 = bitcast %union.anon* %9873 to i64*
  %9874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9875 = getelementptr inbounds %struct.GPR, %struct.GPR* %9874, i32 0, i32 15
  %9876 = getelementptr inbounds %struct.Reg, %struct.Reg* %9875, i32 0, i32 0
  %RBP.i539 = bitcast %union.anon* %9876 to i64*
  %9877 = load i64, i64* %RBP.i539
  %9878 = sub i64 %9877, 12520
  %9879 = load i64, i64* %PC.i537
  %9880 = add i64 %9879, 7
  store i64 %9880, i64* %PC.i537
  %9881 = inttoptr i64 %9878 to i64*
  %9882 = load i64, i64* %9881
  store i64 %9882, i64* %RAX.i538, align 8
  store %struct.Memory* %loadMem_41b77d, %struct.Memory** %MEMORY
  %loadMem_41b784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9884 = getelementptr inbounds %struct.GPR, %struct.GPR* %9883, i32 0, i32 33
  %9885 = getelementptr inbounds %struct.Reg, %struct.Reg* %9884, i32 0, i32 0
  %PC.i534 = bitcast %union.anon* %9885 to i64*
  %9886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9887 = getelementptr inbounds %struct.GPR, %struct.GPR* %9886, i32 0, i32 1
  %9888 = getelementptr inbounds %struct.Reg, %struct.Reg* %9887, i32 0, i32 0
  %RAX.i535 = bitcast %union.anon* %9888 to i64*
  %9889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9890 = getelementptr inbounds %struct.GPR, %struct.GPR* %9889, i32 0, i32 15
  %9891 = getelementptr inbounds %struct.Reg, %struct.Reg* %9890, i32 0, i32 0
  %RBP.i536 = bitcast %union.anon* %9891 to i64*
  %9892 = load i64, i64* %RBP.i536
  %9893 = sub i64 %9892, 16
  %9894 = load i64, i64* %RAX.i535
  %9895 = load i64, i64* %PC.i534
  %9896 = add i64 %9895, 4
  store i64 %9896, i64* %PC.i534
  %9897 = inttoptr i64 %9893 to i64*
  store i64 %9894, i64* %9897
  store %struct.Memory* %loadMem_41b784, %struct.Memory** %MEMORY
  %loadMem_41b788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9899 = getelementptr inbounds %struct.GPR, %struct.GPR* %9898, i32 0, i32 33
  %9900 = getelementptr inbounds %struct.Reg, %struct.Reg* %9899, i32 0, i32 0
  %PC.i531 = bitcast %union.anon* %9900 to i64*
  %9901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9902 = getelementptr inbounds %struct.GPR, %struct.GPR* %9901, i32 0, i32 1
  %9903 = getelementptr inbounds %struct.Reg, %struct.Reg* %9902, i32 0, i32 0
  %RAX.i532 = bitcast %union.anon* %9903 to i64*
  %9904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9905 = getelementptr inbounds %struct.GPR, %struct.GPR* %9904, i32 0, i32 15
  %9906 = getelementptr inbounds %struct.Reg, %struct.Reg* %9905, i32 0, i32 0
  %RBP.i533 = bitcast %union.anon* %9906 to i64*
  %9907 = load i64, i64* %RBP.i533
  %9908 = sub i64 %9907, 12512
  %9909 = load i64, i64* %PC.i531
  %9910 = add i64 %9909, 7
  store i64 %9910, i64* %PC.i531
  %9911 = inttoptr i64 %9908 to i64*
  %9912 = load i64, i64* %9911
  store i64 %9912, i64* %RAX.i532, align 8
  store %struct.Memory* %loadMem_41b788, %struct.Memory** %MEMORY
  %loadMem_41b78f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9914 = getelementptr inbounds %struct.GPR, %struct.GPR* %9913, i32 0, i32 33
  %9915 = getelementptr inbounds %struct.Reg, %struct.Reg* %9914, i32 0, i32 0
  %PC.i528 = bitcast %union.anon* %9915 to i64*
  %9916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9917 = getelementptr inbounds %struct.GPR, %struct.GPR* %9916, i32 0, i32 1
  %9918 = getelementptr inbounds %struct.Reg, %struct.Reg* %9917, i32 0, i32 0
  %RAX.i529 = bitcast %union.anon* %9918 to i64*
  %9919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9920 = getelementptr inbounds %struct.GPR, %struct.GPR* %9919, i32 0, i32 15
  %9921 = getelementptr inbounds %struct.Reg, %struct.Reg* %9920, i32 0, i32 0
  %RBP.i530 = bitcast %union.anon* %9921 to i64*
  %9922 = load i64, i64* %RBP.i530
  %9923 = sub i64 %9922, 8
  %9924 = load i64, i64* %RAX.i529
  %9925 = load i64, i64* %PC.i528
  %9926 = add i64 %9925, 4
  store i64 %9926, i64* %PC.i528
  %9927 = inttoptr i64 %9923 to i64*
  store i64 %9924, i64* %9927
  store %struct.Memory* %loadMem_41b78f, %struct.Memory** %MEMORY
  %loadMem_41b793 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9929 = getelementptr inbounds %struct.GPR, %struct.GPR* %9928, i32 0, i32 33
  %9930 = getelementptr inbounds %struct.Reg, %struct.Reg* %9929, i32 0, i32 0
  %PC.i526 = bitcast %union.anon* %9930 to i64*
  %9931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9932 = getelementptr inbounds %struct.GPR, %struct.GPR* %9931, i32 0, i32 15
  %9933 = getelementptr inbounds %struct.Reg, %struct.Reg* %9932, i32 0, i32 0
  %RBP.i527 = bitcast %union.anon* %9933 to i64*
  %9934 = load i64, i64* %RBP.i527
  %9935 = sub i64 %9934, 12416
  %9936 = load i64, i64* %PC.i526
  %9937 = add i64 %9936, 7
  store i64 %9937, i64* %PC.i526
  %9938 = inttoptr i64 %9935 to i32*
  %9939 = load i32, i32* %9938
  %9940 = sub i32 %9939, 10
  %9941 = icmp ult i32 %9939, 10
  %9942 = zext i1 %9941 to i8
  %9943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9942, i8* %9943, align 1
  %9944 = and i32 %9940, 255
  %9945 = call i32 @llvm.ctpop.i32(i32 %9944)
  %9946 = trunc i32 %9945 to i8
  %9947 = and i8 %9946, 1
  %9948 = xor i8 %9947, 1
  %9949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9948, i8* %9949, align 1
  %9950 = xor i32 %9939, 10
  %9951 = xor i32 %9950, %9940
  %9952 = lshr i32 %9951, 4
  %9953 = trunc i32 %9952 to i8
  %9954 = and i8 %9953, 1
  %9955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9954, i8* %9955, align 1
  %9956 = icmp eq i32 %9940, 0
  %9957 = zext i1 %9956 to i8
  %9958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9957, i8* %9958, align 1
  %9959 = lshr i32 %9940, 31
  %9960 = trunc i32 %9959 to i8
  %9961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9960, i8* %9961, align 1
  %9962 = lshr i32 %9939, 31
  %9963 = xor i32 %9959, %9962
  %9964 = add i32 %9963, %9962
  %9965 = icmp eq i32 %9964, 2
  %9966 = zext i1 %9965 to i8
  %9967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9966, i8* %9967, align 1
  store %struct.Memory* %loadMem_41b793, %struct.Memory** %MEMORY
  %loadMem_41b79a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9969 = getelementptr inbounds %struct.GPR, %struct.GPR* %9968, i32 0, i32 33
  %9970 = getelementptr inbounds %struct.Reg, %struct.Reg* %9969, i32 0, i32 0
  %PC.i525 = bitcast %union.anon* %9970 to i64*
  %9971 = load i64, i64* %PC.i525
  %9972 = add i64 %9971, 285
  %9973 = load i64, i64* %PC.i525
  %9974 = add i64 %9973, 6
  %9975 = load i64, i64* %PC.i525
  %9976 = add i64 %9975, 6
  store i64 %9976, i64* %PC.i525
  %9977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9978 = load i8, i8* %9977, align 1
  %9979 = icmp ne i8 %9978, 0
  %9980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9981 = load i8, i8* %9980, align 1
  %9982 = icmp ne i8 %9981, 0
  %9983 = xor i1 %9979, %9982
  %9984 = xor i1 %9983, true
  %9985 = zext i1 %9984 to i8
  store i8 %9985, i8* %BRANCH_TAKEN, align 1
  %9986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9987 = select i1 %9983, i64 %9974, i64 %9972
  store i64 %9987, i64* %9986, align 8
  store %struct.Memory* %loadMem_41b79a, %struct.Memory** %MEMORY
  %loadBr_41b79a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b79a = icmp eq i8 %loadBr_41b79a, 1
  br i1 %cmpBr_41b79a, label %block_.L_41b8b7, label %block_41b7a0

block_41b7a0:                                     ; preds = %block_41b73e
  %loadMem_41b7a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9989 = getelementptr inbounds %struct.GPR, %struct.GPR* %9988, i32 0, i32 33
  %9990 = getelementptr inbounds %struct.Reg, %struct.Reg* %9989, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %9990 to i64*
  %9991 = load i64, i64* %PC.i524
  %9992 = add i64 %9991, 8
  store i64 %9992, i64* %PC.i524
  %9993 = load i32, i32* bitcast (%G_0x62ea10_type* @G_0x62ea10 to i32*)
  %9994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9994, align 1
  %9995 = and i32 %9993, 255
  %9996 = call i32 @llvm.ctpop.i32(i32 %9995)
  %9997 = trunc i32 %9996 to i8
  %9998 = and i8 %9997, 1
  %9999 = xor i8 %9998, 1
  %10000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9999, i8* %10000, align 1
  %10001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10001, align 1
  %10002 = icmp eq i32 %9993, 0
  %10003 = zext i1 %10002 to i8
  %10004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10003, i8* %10004, align 1
  %10005 = lshr i32 %9993, 31
  %10006 = trunc i32 %10005 to i8
  %10007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10006, i8* %10007, align 1
  %10008 = lshr i32 %9993, 31
  %10009 = xor i32 %10005, %10008
  %10010 = add i32 %10009, %10008
  %10011 = icmp eq i32 %10010, 2
  %10012 = zext i1 %10011 to i8
  %10013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10012, i8* %10013, align 1
  store %struct.Memory* %loadMem_41b7a0, %struct.Memory** %MEMORY
  %loadMem_41b7a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10015 = getelementptr inbounds %struct.GPR, %struct.GPR* %10014, i32 0, i32 33
  %10016 = getelementptr inbounds %struct.Reg, %struct.Reg* %10015, i32 0, i32 0
  %PC.i523 = bitcast %union.anon* %10016 to i64*
  %10017 = load i64, i64* %PC.i523
  %10018 = add i64 %10017, 271
  %10019 = load i64, i64* %PC.i523
  %10020 = add i64 %10019, 6
  %10021 = load i64, i64* %PC.i523
  %10022 = add i64 %10021, 6
  store i64 %10022, i64* %PC.i523
  %10023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10024 = load i8, i8* %10023, align 1
  store i8 %10024, i8* %BRANCH_TAKEN, align 1
  %10025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10026 = icmp ne i8 %10024, 0
  %10027 = select i1 %10026, i64 %10018, i64 %10020
  store i64 %10027, i64* %10025, align 8
  store %struct.Memory* %loadMem_41b7a8, %struct.Memory** %MEMORY
  %loadBr_41b7a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b7a8 = icmp eq i8 %loadBr_41b7a8, 1
  br i1 %cmpBr_41b7a8, label %block_.L_41b8b7, label %block_41b7ae

block_41b7ae:                                     ; preds = %block_41b7a0
  %loadMem_41b7ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10029 = getelementptr inbounds %struct.GPR, %struct.GPR* %10028, i32 0, i32 33
  %10030 = getelementptr inbounds %struct.Reg, %struct.Reg* %10029, i32 0, i32 0
  %PC.i520 = bitcast %union.anon* %10030 to i64*
  %10031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10032 = getelementptr inbounds %struct.GPR, %struct.GPR* %10031, i32 0, i32 1
  %10033 = getelementptr inbounds %struct.Reg, %struct.Reg* %10032, i32 0, i32 0
  %RAX.i521 = bitcast %union.anon* %10033 to i64*
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10035 = getelementptr inbounds %struct.GPR, %struct.GPR* %10034, i32 0, i32 15
  %10036 = getelementptr inbounds %struct.Reg, %struct.Reg* %10035, i32 0, i32 0
  %RBP.i522 = bitcast %union.anon* %10036 to i64*
  %10037 = load i64, i64* %RBP.i522
  %10038 = sub i64 %10037, 12416
  %10039 = load i64, i64* %PC.i520
  %10040 = add i64 %10039, 6
  store i64 %10040, i64* %PC.i520
  %10041 = inttoptr i64 %10038 to i32*
  %10042 = load i32, i32* %10041
  %10043 = zext i32 %10042 to i64
  store i64 %10043, i64* %RAX.i521, align 8
  store %struct.Memory* %loadMem_41b7ae, %struct.Memory** %MEMORY
  %loadMem_41b7b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10045 = getelementptr inbounds %struct.GPR, %struct.GPR* %10044, i32 0, i32 33
  %10046 = getelementptr inbounds %struct.Reg, %struct.Reg* %10045, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %10046 to i64*
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10048 = getelementptr inbounds %struct.GPR, %struct.GPR* %10047, i32 0, i32 1
  %10049 = getelementptr inbounds %struct.Reg, %struct.Reg* %10048, i32 0, i32 0
  %RAX.i519 = bitcast %union.anon* %10049 to i64*
  %10050 = load i64, i64* %RAX.i519
  %10051 = load i64, i64* %PC.i518
  %10052 = add i64 %10051, 3
  store i64 %10052, i64* %PC.i518
  %10053 = trunc i64 %10050 to i32
  %10054 = add i32 1, %10053
  %10055 = zext i32 %10054 to i64
  store i64 %10055, i64* %RAX.i519, align 8
  %10056 = icmp ult i32 %10054, %10053
  %10057 = icmp ult i32 %10054, 1
  %10058 = or i1 %10056, %10057
  %10059 = zext i1 %10058 to i8
  %10060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10059, i8* %10060, align 1
  %10061 = and i32 %10054, 255
  %10062 = call i32 @llvm.ctpop.i32(i32 %10061)
  %10063 = trunc i32 %10062 to i8
  %10064 = and i8 %10063, 1
  %10065 = xor i8 %10064, 1
  %10066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10065, i8* %10066, align 1
  %10067 = xor i64 1, %10050
  %10068 = trunc i64 %10067 to i32
  %10069 = xor i32 %10068, %10054
  %10070 = lshr i32 %10069, 4
  %10071 = trunc i32 %10070 to i8
  %10072 = and i8 %10071, 1
  %10073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10072, i8* %10073, align 1
  %10074 = icmp eq i32 %10054, 0
  %10075 = zext i1 %10074 to i8
  %10076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10075, i8* %10076, align 1
  %10077 = lshr i32 %10054, 31
  %10078 = trunc i32 %10077 to i8
  %10079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10078, i8* %10079, align 1
  %10080 = lshr i32 %10053, 31
  %10081 = xor i32 %10077, %10080
  %10082 = add i32 %10081, %10077
  %10083 = icmp eq i32 %10082, 2
  %10084 = zext i1 %10083 to i8
  %10085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10084, i8* %10085, align 1
  store %struct.Memory* %loadMem_41b7b4, %struct.Memory** %MEMORY
  %loadMem_41b7b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10087 = getelementptr inbounds %struct.GPR, %struct.GPR* %10086, i32 0, i32 33
  %10088 = getelementptr inbounds %struct.Reg, %struct.Reg* %10087, i32 0, i32 0
  %PC.i515 = bitcast %union.anon* %10088 to i64*
  %10089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10090 = getelementptr inbounds %struct.GPR, %struct.GPR* %10089, i32 0, i32 1
  %10091 = getelementptr inbounds %struct.Reg, %struct.Reg* %10090, i32 0, i32 0
  %EAX.i516 = bitcast %union.anon* %10091 to i32*
  %10092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10093 = getelementptr inbounds %struct.GPR, %struct.GPR* %10092, i32 0, i32 15
  %10094 = getelementptr inbounds %struct.Reg, %struct.Reg* %10093, i32 0, i32 0
  %RBP.i517 = bitcast %union.anon* %10094 to i64*
  %10095 = load i64, i64* %RBP.i517
  %10096 = sub i64 %10095, 12416
  %10097 = load i32, i32* %EAX.i516
  %10098 = zext i32 %10097 to i64
  %10099 = load i64, i64* %PC.i515
  %10100 = add i64 %10099, 6
  store i64 %10100, i64* %PC.i515
  %10101 = inttoptr i64 %10096 to i32*
  store i32 %10097, i32* %10101
  store %struct.Memory* %loadMem_41b7b7, %struct.Memory** %MEMORY
  %loadMem_41b7bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10103 = getelementptr inbounds %struct.GPR, %struct.GPR* %10102, i32 0, i32 33
  %10104 = getelementptr inbounds %struct.Reg, %struct.Reg* %10103, i32 0, i32 0
  %PC.i513 = bitcast %union.anon* %10104 to i64*
  %10105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10106 = getelementptr inbounds %struct.GPR, %struct.GPR* %10105, i32 0, i32 15
  %10107 = getelementptr inbounds %struct.Reg, %struct.Reg* %10106, i32 0, i32 0
  %RBP.i514 = bitcast %union.anon* %10107 to i64*
  %10108 = load i64, i64* %RBP.i514
  %10109 = sub i64 %10108, 76
  %10110 = load i64, i64* %PC.i513
  %10111 = add i64 %10110, 7
  store i64 %10111, i64* %PC.i513
  %10112 = inttoptr i64 %10109 to i32*
  store i32 0, i32* %10112
  store %struct.Memory* %loadMem_41b7bd, %struct.Memory** %MEMORY
  br label %block_.L_41b7c4

block_.L_41b7c4:                                  ; preds = %block_.L_41b845, %block_41b7ae
  %loadMem_41b7c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10114 = getelementptr inbounds %struct.GPR, %struct.GPR* %10113, i32 0, i32 33
  %10115 = getelementptr inbounds %struct.Reg, %struct.Reg* %10114, i32 0, i32 0
  %PC.i510 = bitcast %union.anon* %10115 to i64*
  %10116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10117 = getelementptr inbounds %struct.GPR, %struct.GPR* %10116, i32 0, i32 1
  %10118 = getelementptr inbounds %struct.Reg, %struct.Reg* %10117, i32 0, i32 0
  %RAX.i511 = bitcast %union.anon* %10118 to i64*
  %10119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10120 = getelementptr inbounds %struct.GPR, %struct.GPR* %10119, i32 0, i32 15
  %10121 = getelementptr inbounds %struct.Reg, %struct.Reg* %10120, i32 0, i32 0
  %RBP.i512 = bitcast %union.anon* %10121 to i64*
  %10122 = load i64, i64* %RBP.i512
  %10123 = sub i64 %10122, 76
  %10124 = load i64, i64* %PC.i510
  %10125 = add i64 %10124, 3
  store i64 %10125, i64* %PC.i510
  %10126 = inttoptr i64 %10123 to i32*
  %10127 = load i32, i32* %10126
  %10128 = zext i32 %10127 to i64
  store i64 %10128, i64* %RAX.i511, align 8
  store %struct.Memory* %loadMem_41b7c4, %struct.Memory** %MEMORY
  %loadMem_41b7c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10130 = getelementptr inbounds %struct.GPR, %struct.GPR* %10129, i32 0, i32 33
  %10131 = getelementptr inbounds %struct.Reg, %struct.Reg* %10130, i32 0, i32 0
  %PC.i507 = bitcast %union.anon* %10131 to i64*
  %10132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10133 = getelementptr inbounds %struct.GPR, %struct.GPR* %10132, i32 0, i32 1
  %10134 = getelementptr inbounds %struct.Reg, %struct.Reg* %10133, i32 0, i32 0
  %EAX.i508 = bitcast %union.anon* %10134 to i32*
  %10135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10136 = getelementptr inbounds %struct.GPR, %struct.GPR* %10135, i32 0, i32 15
  %10137 = getelementptr inbounds %struct.Reg, %struct.Reg* %10136, i32 0, i32 0
  %RBP.i509 = bitcast %union.anon* %10137 to i64*
  %10138 = load i32, i32* %EAX.i508
  %10139 = zext i32 %10138 to i64
  %10140 = load i64, i64* %RBP.i509
  %10141 = sub i64 %10140, 12420
  %10142 = load i64, i64* %PC.i507
  %10143 = add i64 %10142, 6
  store i64 %10143, i64* %PC.i507
  %10144 = inttoptr i64 %10141 to i32*
  %10145 = load i32, i32* %10144
  %10146 = sub i32 %10138, %10145
  %10147 = icmp ult i32 %10138, %10145
  %10148 = zext i1 %10147 to i8
  %10149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10148, i8* %10149, align 1
  %10150 = and i32 %10146, 255
  %10151 = call i32 @llvm.ctpop.i32(i32 %10150)
  %10152 = trunc i32 %10151 to i8
  %10153 = and i8 %10152, 1
  %10154 = xor i8 %10153, 1
  %10155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10154, i8* %10155, align 1
  %10156 = xor i32 %10145, %10138
  %10157 = xor i32 %10156, %10146
  %10158 = lshr i32 %10157, 4
  %10159 = trunc i32 %10158 to i8
  %10160 = and i8 %10159, 1
  %10161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10160, i8* %10161, align 1
  %10162 = icmp eq i32 %10146, 0
  %10163 = zext i1 %10162 to i8
  %10164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10163, i8* %10164, align 1
  %10165 = lshr i32 %10146, 31
  %10166 = trunc i32 %10165 to i8
  %10167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10166, i8* %10167, align 1
  %10168 = lshr i32 %10138, 31
  %10169 = lshr i32 %10145, 31
  %10170 = xor i32 %10169, %10168
  %10171 = xor i32 %10165, %10168
  %10172 = add i32 %10171, %10170
  %10173 = icmp eq i32 %10172, 2
  %10174 = zext i1 %10173 to i8
  %10175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10174, i8* %10175, align 1
  store %struct.Memory* %loadMem_41b7c7, %struct.Memory** %MEMORY
  %loadMem_41b7cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %10176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10177 = getelementptr inbounds %struct.GPR, %struct.GPR* %10176, i32 0, i32 33
  %10178 = getelementptr inbounds %struct.Reg, %struct.Reg* %10177, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %10178 to i64*
  %10179 = load i64, i64* %PC.i506
  %10180 = add i64 %10179, 134
  %10181 = load i64, i64* %PC.i506
  %10182 = add i64 %10181, 6
  %10183 = load i64, i64* %PC.i506
  %10184 = add i64 %10183, 6
  store i64 %10184, i64* %PC.i506
  %10185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10186 = load i8, i8* %10185, align 1
  %10187 = icmp ne i8 %10186, 0
  %10188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10189 = load i8, i8* %10188, align 1
  %10190 = icmp ne i8 %10189, 0
  %10191 = xor i1 %10187, %10190
  %10192 = xor i1 %10191, true
  %10193 = zext i1 %10192 to i8
  store i8 %10193, i8* %BRANCH_TAKEN, align 1
  %10194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10195 = select i1 %10191, i64 %10182, i64 %10180
  store i64 %10195, i64* %10194, align 8
  store %struct.Memory* %loadMem_41b7cd, %struct.Memory** %MEMORY
  %loadBr_41b7cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b7cd = icmp eq i8 %loadBr_41b7cd, 1
  br i1 %cmpBr_41b7cd, label %block_.L_41b853, label %block_41b7d3

block_41b7d3:                                     ; preds = %block_.L_41b7c4
  %loadMem_41b7d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10197 = getelementptr inbounds %struct.GPR, %struct.GPR* %10196, i32 0, i32 33
  %10198 = getelementptr inbounds %struct.Reg, %struct.Reg* %10197, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %10198 to i64*
  %10199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10200 = getelementptr inbounds %struct.GPR, %struct.GPR* %10199, i32 0, i32 1
  %10201 = getelementptr inbounds %struct.Reg, %struct.Reg* %10200, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %10201 to i64*
  %10202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10203 = getelementptr inbounds %struct.GPR, %struct.GPR* %10202, i32 0, i32 15
  %10204 = getelementptr inbounds %struct.Reg, %struct.Reg* %10203, i32 0, i32 0
  %RBP.i505 = bitcast %union.anon* %10204 to i64*
  %10205 = load i64, i64* %RBP.i505
  %10206 = sub i64 %10205, 12400
  %10207 = load i64, i64* %PC.i503
  %10208 = add i64 %10207, 7
  store i64 %10208, i64* %PC.i503
  store i64 %10206, i64* %RAX.i504, align 8
  store %struct.Memory* %loadMem_41b7d3, %struct.Memory** %MEMORY
  %loadMem_41b7da = load %struct.Memory*, %struct.Memory** %MEMORY
  %10209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10210 = getelementptr inbounds %struct.GPR, %struct.GPR* %10209, i32 0, i32 33
  %10211 = getelementptr inbounds %struct.Reg, %struct.Reg* %10210, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %10211 to i64*
  %10212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10213 = getelementptr inbounds %struct.GPR, %struct.GPR* %10212, i32 0, i32 5
  %10214 = getelementptr inbounds %struct.Reg, %struct.Reg* %10213, i32 0, i32 0
  %RCX.i501 = bitcast %union.anon* %10214 to i64*
  %10215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10216 = getelementptr inbounds %struct.GPR, %struct.GPR* %10215, i32 0, i32 15
  %10217 = getelementptr inbounds %struct.Reg, %struct.Reg* %10216, i32 0, i32 0
  %RBP.i502 = bitcast %union.anon* %10217 to i64*
  %10218 = load i64, i64* %RBP.i502
  %10219 = sub i64 %10218, 76
  %10220 = load i64, i64* %PC.i500
  %10221 = add i64 %10220, 4
  store i64 %10221, i64* %PC.i500
  %10222 = inttoptr i64 %10219 to i32*
  %10223 = load i32, i32* %10222
  %10224 = sext i32 %10223 to i64
  store i64 %10224, i64* %RCX.i501, align 8
  store %struct.Memory* %loadMem_41b7da, %struct.Memory** %MEMORY
  %loadMem_41b7de = load %struct.Memory*, %struct.Memory** %MEMORY
  %10225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10226 = getelementptr inbounds %struct.GPR, %struct.GPR* %10225, i32 0, i32 33
  %10227 = getelementptr inbounds %struct.Reg, %struct.Reg* %10226, i32 0, i32 0
  %PC.i498 = bitcast %union.anon* %10227 to i64*
  %10228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10229 = getelementptr inbounds %struct.GPR, %struct.GPR* %10228, i32 0, i32 5
  %10230 = getelementptr inbounds %struct.Reg, %struct.Reg* %10229, i32 0, i32 0
  %RCX.i499 = bitcast %union.anon* %10230 to i64*
  %10231 = load i64, i64* %RCX.i499
  %10232 = load i64, i64* %PC.i498
  %10233 = add i64 %10232, 4
  store i64 %10233, i64* %PC.i498
  %10234 = sext i64 %10231 to i128
  %10235 = and i128 %10234, -18446744073709551616
  %10236 = zext i64 %10231 to i128
  %10237 = or i128 %10235, %10236
  %10238 = mul i128 24, %10237
  %10239 = trunc i128 %10238 to i64
  store i64 %10239, i64* %RCX.i499, align 8
  %10240 = sext i64 %10239 to i128
  %10241 = icmp ne i128 %10240, %10238
  %10242 = zext i1 %10241 to i8
  %10243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10242, i8* %10243, align 1
  %10244 = trunc i128 %10238 to i32
  %10245 = and i32 %10244, 255
  %10246 = call i32 @llvm.ctpop.i32(i32 %10245)
  %10247 = trunc i32 %10246 to i8
  %10248 = and i8 %10247, 1
  %10249 = xor i8 %10248, 1
  %10250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10249, i8* %10250, align 1
  %10251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10251, align 1
  %10252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10252, align 1
  %10253 = lshr i64 %10239, 63
  %10254 = trunc i64 %10253 to i8
  %10255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10254, i8* %10255, align 1
  %10256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10242, i8* %10256, align 1
  store %struct.Memory* %loadMem_41b7de, %struct.Memory** %MEMORY
  %loadMem_41b7e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10258 = getelementptr inbounds %struct.GPR, %struct.GPR* %10257, i32 0, i32 33
  %10259 = getelementptr inbounds %struct.Reg, %struct.Reg* %10258, i32 0, i32 0
  %PC.i495 = bitcast %union.anon* %10259 to i64*
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10261 = getelementptr inbounds %struct.GPR, %struct.GPR* %10260, i32 0, i32 1
  %10262 = getelementptr inbounds %struct.Reg, %struct.Reg* %10261, i32 0, i32 0
  %RAX.i496 = bitcast %union.anon* %10262 to i64*
  %10263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10264 = getelementptr inbounds %struct.GPR, %struct.GPR* %10263, i32 0, i32 5
  %10265 = getelementptr inbounds %struct.Reg, %struct.Reg* %10264, i32 0, i32 0
  %RCX.i497 = bitcast %union.anon* %10265 to i64*
  %10266 = load i64, i64* %RAX.i496
  %10267 = load i64, i64* %RCX.i497
  %10268 = load i64, i64* %PC.i495
  %10269 = add i64 %10268, 3
  store i64 %10269, i64* %PC.i495
  %10270 = add i64 %10267, %10266
  store i64 %10270, i64* %RAX.i496, align 8
  %10271 = icmp ult i64 %10270, %10266
  %10272 = icmp ult i64 %10270, %10267
  %10273 = or i1 %10271, %10272
  %10274 = zext i1 %10273 to i8
  %10275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10274, i8* %10275, align 1
  %10276 = trunc i64 %10270 to i32
  %10277 = and i32 %10276, 255
  %10278 = call i32 @llvm.ctpop.i32(i32 %10277)
  %10279 = trunc i32 %10278 to i8
  %10280 = and i8 %10279, 1
  %10281 = xor i8 %10280, 1
  %10282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10281, i8* %10282, align 1
  %10283 = xor i64 %10267, %10266
  %10284 = xor i64 %10283, %10270
  %10285 = lshr i64 %10284, 4
  %10286 = trunc i64 %10285 to i8
  %10287 = and i8 %10286, 1
  %10288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10287, i8* %10288, align 1
  %10289 = icmp eq i64 %10270, 0
  %10290 = zext i1 %10289 to i8
  %10291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10290, i8* %10291, align 1
  %10292 = lshr i64 %10270, 63
  %10293 = trunc i64 %10292 to i8
  %10294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10293, i8* %10294, align 1
  %10295 = lshr i64 %10266, 63
  %10296 = lshr i64 %10267, 63
  %10297 = xor i64 %10292, %10295
  %10298 = xor i64 %10292, %10296
  %10299 = add i64 %10297, %10298
  %10300 = icmp eq i64 %10299, 2
  %10301 = zext i1 %10300 to i8
  %10302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10301, i8* %10302, align 1
  store %struct.Memory* %loadMem_41b7e2, %struct.Memory** %MEMORY
  %loadMem_41b7e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10304 = getelementptr inbounds %struct.GPR, %struct.GPR* %10303, i32 0, i32 33
  %10305 = getelementptr inbounds %struct.Reg, %struct.Reg* %10304, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %10305 to i64*
  %10306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10307 = getelementptr inbounds %struct.GPR, %struct.GPR* %10306, i32 0, i32 1
  %10308 = getelementptr inbounds %struct.Reg, %struct.Reg* %10307, i32 0, i32 0
  %RAX.i493 = bitcast %union.anon* %10308 to i64*
  %10309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10310 = getelementptr inbounds %struct.GPR, %struct.GPR* %10309, i32 0, i32 7
  %10311 = getelementptr inbounds %struct.Reg, %struct.Reg* %10310, i32 0, i32 0
  %RDX.i494 = bitcast %union.anon* %10311 to i64*
  %10312 = load i64, i64* %RAX.i493
  %10313 = load i64, i64* %PC.i492
  %10314 = add i64 %10313, 2
  store i64 %10314, i64* %PC.i492
  %10315 = inttoptr i64 %10312 to i32*
  %10316 = load i32, i32* %10315
  %10317 = zext i32 %10316 to i64
  store i64 %10317, i64* %RDX.i494, align 8
  store %struct.Memory* %loadMem_41b7e5, %struct.Memory** %MEMORY
  %loadMem_41b7e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10319 = getelementptr inbounds %struct.GPR, %struct.GPR* %10318, i32 0, i32 33
  %10320 = getelementptr inbounds %struct.Reg, %struct.Reg* %10319, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %10320 to i64*
  %10321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10322 = getelementptr inbounds %struct.GPR, %struct.GPR* %10321, i32 0, i32 7
  %10323 = getelementptr inbounds %struct.Reg, %struct.Reg* %10322, i32 0, i32 0
  %EDX.i490 = bitcast %union.anon* %10323 to i32*
  %10324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10325 = getelementptr inbounds %struct.GPR, %struct.GPR* %10324, i32 0, i32 15
  %10326 = getelementptr inbounds %struct.Reg, %struct.Reg* %10325, i32 0, i32 0
  %RBP.i491 = bitcast %union.anon* %10326 to i64*
  %10327 = load i32, i32* %EDX.i490
  %10328 = zext i32 %10327 to i64
  %10329 = load i64, i64* %RBP.i491
  %10330 = sub i64 %10329, 72
  %10331 = load i64, i64* %PC.i489
  %10332 = add i64 %10331, 3
  store i64 %10332, i64* %PC.i489
  %10333 = inttoptr i64 %10330 to i32*
  %10334 = load i32, i32* %10333
  %10335 = sub i32 %10327, %10334
  %10336 = icmp ult i32 %10327, %10334
  %10337 = zext i1 %10336 to i8
  %10338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10337, i8* %10338, align 1
  %10339 = and i32 %10335, 255
  %10340 = call i32 @llvm.ctpop.i32(i32 %10339)
  %10341 = trunc i32 %10340 to i8
  %10342 = and i8 %10341, 1
  %10343 = xor i8 %10342, 1
  %10344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10343, i8* %10344, align 1
  %10345 = xor i32 %10334, %10327
  %10346 = xor i32 %10345, %10335
  %10347 = lshr i32 %10346, 4
  %10348 = trunc i32 %10347 to i8
  %10349 = and i8 %10348, 1
  %10350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10349, i8* %10350, align 1
  %10351 = icmp eq i32 %10335, 0
  %10352 = zext i1 %10351 to i8
  %10353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10352, i8* %10353, align 1
  %10354 = lshr i32 %10335, 31
  %10355 = trunc i32 %10354 to i8
  %10356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10355, i8* %10356, align 1
  %10357 = lshr i32 %10327, 31
  %10358 = lshr i32 %10334, 31
  %10359 = xor i32 %10358, %10357
  %10360 = xor i32 %10354, %10357
  %10361 = add i32 %10360, %10359
  %10362 = icmp eq i32 %10361, 2
  %10363 = zext i1 %10362 to i8
  %10364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10363, i8* %10364, align 1
  store %struct.Memory* %loadMem_41b7e7, %struct.Memory** %MEMORY
  %loadMem_41b7ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %10365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10366 = getelementptr inbounds %struct.GPR, %struct.GPR* %10365, i32 0, i32 33
  %10367 = getelementptr inbounds %struct.Reg, %struct.Reg* %10366, i32 0, i32 0
  %PC.i488 = bitcast %union.anon* %10367 to i64*
  %10368 = load i64, i64* %PC.i488
  %10369 = add i64 %10368, 86
  %10370 = load i64, i64* %PC.i488
  %10371 = add i64 %10370, 6
  %10372 = load i64, i64* %PC.i488
  %10373 = add i64 %10372, 6
  store i64 %10373, i64* %PC.i488
  %10374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10375 = load i8, i8* %10374, align 1
  %10376 = icmp eq i8 %10375, 0
  %10377 = zext i1 %10376 to i8
  store i8 %10377, i8* %BRANCH_TAKEN, align 1
  %10378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10379 = select i1 %10376, i64 %10369, i64 %10371
  store i64 %10379, i64* %10378, align 8
  store %struct.Memory* %loadMem_41b7ea, %struct.Memory** %MEMORY
  %loadBr_41b7ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b7ea = icmp eq i8 %loadBr_41b7ea, 1
  br i1 %cmpBr_41b7ea, label %block_.L_41b840, label %block_41b7f0

block_41b7f0:                                     ; preds = %block_41b7d3
  %loadMem_41b7f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10381 = getelementptr inbounds %struct.GPR, %struct.GPR* %10380, i32 0, i32 33
  %10382 = getelementptr inbounds %struct.Reg, %struct.Reg* %10381, i32 0, i32 0
  %PC.i485 = bitcast %union.anon* %10382 to i64*
  %10383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10384 = getelementptr inbounds %struct.GPR, %struct.GPR* %10383, i32 0, i32 1
  %10385 = getelementptr inbounds %struct.Reg, %struct.Reg* %10384, i32 0, i32 0
  %RAX.i486 = bitcast %union.anon* %10385 to i64*
  %10386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10387 = getelementptr inbounds %struct.GPR, %struct.GPR* %10386, i32 0, i32 15
  %10388 = getelementptr inbounds %struct.Reg, %struct.Reg* %10387, i32 0, i32 0
  %RBP.i487 = bitcast %union.anon* %10388 to i64*
  %10389 = load i64, i64* %RBP.i487
  %10390 = sub i64 %10389, 12400
  %10391 = load i64, i64* %PC.i485
  %10392 = add i64 %10391, 7
  store i64 %10392, i64* %PC.i485
  store i64 %10390, i64* %RAX.i486, align 8
  store %struct.Memory* %loadMem_41b7f0, %struct.Memory** %MEMORY
  %loadMem_41b7f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10394 = getelementptr inbounds %struct.GPR, %struct.GPR* %10393, i32 0, i32 33
  %10395 = getelementptr inbounds %struct.Reg, %struct.Reg* %10394, i32 0, i32 0
  %PC.i482 = bitcast %union.anon* %10395 to i64*
  %10396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10397 = getelementptr inbounds %struct.GPR, %struct.GPR* %10396, i32 0, i32 5
  %10398 = getelementptr inbounds %struct.Reg, %struct.Reg* %10397, i32 0, i32 0
  %RCX.i483 = bitcast %union.anon* %10398 to i64*
  %10399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10400 = getelementptr inbounds %struct.GPR, %struct.GPR* %10399, i32 0, i32 15
  %10401 = getelementptr inbounds %struct.Reg, %struct.Reg* %10400, i32 0, i32 0
  %RBP.i484 = bitcast %union.anon* %10401 to i64*
  %10402 = load i64, i64* %RBP.i484
  %10403 = sub i64 %10402, 76
  %10404 = load i64, i64* %PC.i482
  %10405 = add i64 %10404, 4
  store i64 %10405, i64* %PC.i482
  %10406 = inttoptr i64 %10403 to i32*
  %10407 = load i32, i32* %10406
  %10408 = sext i32 %10407 to i64
  store i64 %10408, i64* %RCX.i483, align 8
  store %struct.Memory* %loadMem_41b7f7, %struct.Memory** %MEMORY
  %loadMem_41b7fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10410 = getelementptr inbounds %struct.GPR, %struct.GPR* %10409, i32 0, i32 33
  %10411 = getelementptr inbounds %struct.Reg, %struct.Reg* %10410, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %10411 to i64*
  %10412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10413 = getelementptr inbounds %struct.GPR, %struct.GPR* %10412, i32 0, i32 5
  %10414 = getelementptr inbounds %struct.Reg, %struct.Reg* %10413, i32 0, i32 0
  %RCX.i481 = bitcast %union.anon* %10414 to i64*
  %10415 = load i64, i64* %RCX.i481
  %10416 = load i64, i64* %PC.i480
  %10417 = add i64 %10416, 4
  store i64 %10417, i64* %PC.i480
  %10418 = sext i64 %10415 to i128
  %10419 = and i128 %10418, -18446744073709551616
  %10420 = zext i64 %10415 to i128
  %10421 = or i128 %10419, %10420
  %10422 = mul i128 24, %10421
  %10423 = trunc i128 %10422 to i64
  store i64 %10423, i64* %RCX.i481, align 8
  %10424 = sext i64 %10423 to i128
  %10425 = icmp ne i128 %10424, %10422
  %10426 = zext i1 %10425 to i8
  %10427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10426, i8* %10427, align 1
  %10428 = trunc i128 %10422 to i32
  %10429 = and i32 %10428, 255
  %10430 = call i32 @llvm.ctpop.i32(i32 %10429)
  %10431 = trunc i32 %10430 to i8
  %10432 = and i8 %10431, 1
  %10433 = xor i8 %10432, 1
  %10434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10433, i8* %10434, align 1
  %10435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10435, align 1
  %10436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10436, align 1
  %10437 = lshr i64 %10423, 63
  %10438 = trunc i64 %10437 to i8
  %10439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10438, i8* %10439, align 1
  %10440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10426, i8* %10440, align 1
  store %struct.Memory* %loadMem_41b7fb, %struct.Memory** %MEMORY
  %loadMem_41b7ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %10441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10442 = getelementptr inbounds %struct.GPR, %struct.GPR* %10441, i32 0, i32 33
  %10443 = getelementptr inbounds %struct.Reg, %struct.Reg* %10442, i32 0, i32 0
  %PC.i477 = bitcast %union.anon* %10443 to i64*
  %10444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10445 = getelementptr inbounds %struct.GPR, %struct.GPR* %10444, i32 0, i32 1
  %10446 = getelementptr inbounds %struct.Reg, %struct.Reg* %10445, i32 0, i32 0
  %RAX.i478 = bitcast %union.anon* %10446 to i64*
  %10447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10448 = getelementptr inbounds %struct.GPR, %struct.GPR* %10447, i32 0, i32 5
  %10449 = getelementptr inbounds %struct.Reg, %struct.Reg* %10448, i32 0, i32 0
  %RCX.i479 = bitcast %union.anon* %10449 to i64*
  %10450 = load i64, i64* %RAX.i478
  %10451 = load i64, i64* %RCX.i479
  %10452 = load i64, i64* %PC.i477
  %10453 = add i64 %10452, 3
  store i64 %10453, i64* %PC.i477
  %10454 = add i64 %10451, %10450
  store i64 %10454, i64* %RAX.i478, align 8
  %10455 = icmp ult i64 %10454, %10450
  %10456 = icmp ult i64 %10454, %10451
  %10457 = or i1 %10455, %10456
  %10458 = zext i1 %10457 to i8
  %10459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10458, i8* %10459, align 1
  %10460 = trunc i64 %10454 to i32
  %10461 = and i32 %10460, 255
  %10462 = call i32 @llvm.ctpop.i32(i32 %10461)
  %10463 = trunc i32 %10462 to i8
  %10464 = and i8 %10463, 1
  %10465 = xor i8 %10464, 1
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10465, i8* %10466, align 1
  %10467 = xor i64 %10451, %10450
  %10468 = xor i64 %10467, %10454
  %10469 = lshr i64 %10468, 4
  %10470 = trunc i64 %10469 to i8
  %10471 = and i8 %10470, 1
  %10472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10471, i8* %10472, align 1
  %10473 = icmp eq i64 %10454, 0
  %10474 = zext i1 %10473 to i8
  %10475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10474, i8* %10475, align 1
  %10476 = lshr i64 %10454, 63
  %10477 = trunc i64 %10476 to i8
  %10478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10477, i8* %10478, align 1
  %10479 = lshr i64 %10450, 63
  %10480 = lshr i64 %10451, 63
  %10481 = xor i64 %10476, %10479
  %10482 = xor i64 %10476, %10480
  %10483 = add i64 %10481, %10482
  %10484 = icmp eq i64 %10483, 2
  %10485 = zext i1 %10484 to i8
  %10486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10485, i8* %10486, align 1
  store %struct.Memory* %loadMem_41b7ff, %struct.Memory** %MEMORY
  %loadMem_41b802 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10488 = getelementptr inbounds %struct.GPR, %struct.GPR* %10487, i32 0, i32 33
  %10489 = getelementptr inbounds %struct.Reg, %struct.Reg* %10488, i32 0, i32 0
  %PC.i474 = bitcast %union.anon* %10489 to i64*
  %10490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10491 = getelementptr inbounds %struct.GPR, %struct.GPR* %10490, i32 0, i32 1
  %10492 = getelementptr inbounds %struct.Reg, %struct.Reg* %10491, i32 0, i32 0
  %RAX.i475 = bitcast %union.anon* %10492 to i64*
  %10493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10494 = getelementptr inbounds %struct.GPR, %struct.GPR* %10493, i32 0, i32 7
  %10495 = getelementptr inbounds %struct.Reg, %struct.Reg* %10494, i32 0, i32 0
  %RDX.i476 = bitcast %union.anon* %10495 to i64*
  %10496 = load i64, i64* %RAX.i475
  %10497 = add i64 %10496, 4
  %10498 = load i64, i64* %PC.i474
  %10499 = add i64 %10498, 3
  store i64 %10499, i64* %PC.i474
  %10500 = inttoptr i64 %10497 to i32*
  %10501 = load i32, i32* %10500
  %10502 = zext i32 %10501 to i64
  store i64 %10502, i64* %RDX.i476, align 8
  store %struct.Memory* %loadMem_41b802, %struct.Memory** %MEMORY
  %loadMem_41b805 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10504 = getelementptr inbounds %struct.GPR, %struct.GPR* %10503, i32 0, i32 33
  %10505 = getelementptr inbounds %struct.Reg, %struct.Reg* %10504, i32 0, i32 0
  %PC.i471 = bitcast %union.anon* %10505 to i64*
  %10506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10507 = getelementptr inbounds %struct.GPR, %struct.GPR* %10506, i32 0, i32 7
  %10508 = getelementptr inbounds %struct.Reg, %struct.Reg* %10507, i32 0, i32 0
  %EDX.i472 = bitcast %union.anon* %10508 to i32*
  %10509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10510 = getelementptr inbounds %struct.GPR, %struct.GPR* %10509, i32 0, i32 15
  %10511 = getelementptr inbounds %struct.Reg, %struct.Reg* %10510, i32 0, i32 0
  %RBP.i473 = bitcast %union.anon* %10511 to i64*
  %10512 = load i32, i32* %EDX.i472
  %10513 = zext i32 %10512 to i64
  %10514 = load i64, i64* %RBP.i473
  %10515 = sub i64 %10514, 68
  %10516 = load i64, i64* %PC.i471
  %10517 = add i64 %10516, 3
  store i64 %10517, i64* %PC.i471
  %10518 = inttoptr i64 %10515 to i32*
  %10519 = load i32, i32* %10518
  %10520 = sub i32 %10512, %10519
  %10521 = icmp ult i32 %10512, %10519
  %10522 = zext i1 %10521 to i8
  %10523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10522, i8* %10523, align 1
  %10524 = and i32 %10520, 255
  %10525 = call i32 @llvm.ctpop.i32(i32 %10524)
  %10526 = trunc i32 %10525 to i8
  %10527 = and i8 %10526, 1
  %10528 = xor i8 %10527, 1
  %10529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10528, i8* %10529, align 1
  %10530 = xor i32 %10519, %10512
  %10531 = xor i32 %10530, %10520
  %10532 = lshr i32 %10531, 4
  %10533 = trunc i32 %10532 to i8
  %10534 = and i8 %10533, 1
  %10535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10534, i8* %10535, align 1
  %10536 = icmp eq i32 %10520, 0
  %10537 = zext i1 %10536 to i8
  %10538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10537, i8* %10538, align 1
  %10539 = lshr i32 %10520, 31
  %10540 = trunc i32 %10539 to i8
  %10541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10540, i8* %10541, align 1
  %10542 = lshr i32 %10512, 31
  %10543 = lshr i32 %10519, 31
  %10544 = xor i32 %10543, %10542
  %10545 = xor i32 %10539, %10542
  %10546 = add i32 %10545, %10544
  %10547 = icmp eq i32 %10546, 2
  %10548 = zext i1 %10547 to i8
  %10549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10548, i8* %10549, align 1
  store %struct.Memory* %loadMem_41b805, %struct.Memory** %MEMORY
  %loadMem_41b808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10551 = getelementptr inbounds %struct.GPR, %struct.GPR* %10550, i32 0, i32 33
  %10552 = getelementptr inbounds %struct.Reg, %struct.Reg* %10551, i32 0, i32 0
  %PC.i470 = bitcast %union.anon* %10552 to i64*
  %10553 = load i64, i64* %PC.i470
  %10554 = add i64 %10553, 56
  %10555 = load i64, i64* %PC.i470
  %10556 = add i64 %10555, 6
  %10557 = load i64, i64* %PC.i470
  %10558 = add i64 %10557, 6
  store i64 %10558, i64* %PC.i470
  %10559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10560 = load i8, i8* %10559, align 1
  %10561 = icmp eq i8 %10560, 0
  %10562 = zext i1 %10561 to i8
  store i8 %10562, i8* %BRANCH_TAKEN, align 1
  %10563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10564 = select i1 %10561, i64 %10554, i64 %10556
  store i64 %10564, i64* %10563, align 8
  store %struct.Memory* %loadMem_41b808, %struct.Memory** %MEMORY
  %loadBr_41b808 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b808 = icmp eq i8 %loadBr_41b808, 1
  br i1 %cmpBr_41b808, label %block_.L_41b840, label %block_41b80e

block_41b80e:                                     ; preds = %block_41b7f0
  %loadMem_41b80e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10566 = getelementptr inbounds %struct.GPR, %struct.GPR* %10565, i32 0, i32 33
  %10567 = getelementptr inbounds %struct.Reg, %struct.Reg* %10566, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %10567 to i64*
  %10568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10569 = getelementptr inbounds %struct.GPR, %struct.GPR* %10568, i32 0, i32 1
  %10570 = getelementptr inbounds %struct.Reg, %struct.Reg* %10569, i32 0, i32 0
  %RAX.i468 = bitcast %union.anon* %10570 to i64*
  %10571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10572 = getelementptr inbounds %struct.GPR, %struct.GPR* %10571, i32 0, i32 15
  %10573 = getelementptr inbounds %struct.Reg, %struct.Reg* %10572, i32 0, i32 0
  %RBP.i469 = bitcast %union.anon* %10573 to i64*
  %10574 = load i64, i64* %RBP.i469
  %10575 = sub i64 %10574, 12400
  %10576 = load i64, i64* %PC.i467
  %10577 = add i64 %10576, 7
  store i64 %10577, i64* %PC.i467
  store i64 %10575, i64* %RAX.i468, align 8
  store %struct.Memory* %loadMem_41b80e, %struct.Memory** %MEMORY
  %loadMem_41b815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10579 = getelementptr inbounds %struct.GPR, %struct.GPR* %10578, i32 0, i32 33
  %10580 = getelementptr inbounds %struct.Reg, %struct.Reg* %10579, i32 0, i32 0
  %PC.i464 = bitcast %union.anon* %10580 to i64*
  %10581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10582 = getelementptr inbounds %struct.GPR, %struct.GPR* %10581, i32 0, i32 5
  %10583 = getelementptr inbounds %struct.Reg, %struct.Reg* %10582, i32 0, i32 0
  %RCX.i465 = bitcast %union.anon* %10583 to i64*
  %10584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10585 = getelementptr inbounds %struct.GPR, %struct.GPR* %10584, i32 0, i32 15
  %10586 = getelementptr inbounds %struct.Reg, %struct.Reg* %10585, i32 0, i32 0
  %RBP.i466 = bitcast %union.anon* %10586 to i64*
  %10587 = load i64, i64* %RBP.i466
  %10588 = sub i64 %10587, 76
  %10589 = load i64, i64* %PC.i464
  %10590 = add i64 %10589, 4
  store i64 %10590, i64* %PC.i464
  %10591 = inttoptr i64 %10588 to i32*
  %10592 = load i32, i32* %10591
  %10593 = sext i32 %10592 to i64
  store i64 %10593, i64* %RCX.i465, align 8
  store %struct.Memory* %loadMem_41b815, %struct.Memory** %MEMORY
  %loadMem_41b819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10595 = getelementptr inbounds %struct.GPR, %struct.GPR* %10594, i32 0, i32 33
  %10596 = getelementptr inbounds %struct.Reg, %struct.Reg* %10595, i32 0, i32 0
  %PC.i462 = bitcast %union.anon* %10596 to i64*
  %10597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10598 = getelementptr inbounds %struct.GPR, %struct.GPR* %10597, i32 0, i32 5
  %10599 = getelementptr inbounds %struct.Reg, %struct.Reg* %10598, i32 0, i32 0
  %RCX.i463 = bitcast %union.anon* %10599 to i64*
  %10600 = load i64, i64* %RCX.i463
  %10601 = load i64, i64* %PC.i462
  %10602 = add i64 %10601, 4
  store i64 %10602, i64* %PC.i462
  %10603 = sext i64 %10600 to i128
  %10604 = and i128 %10603, -18446744073709551616
  %10605 = zext i64 %10600 to i128
  %10606 = or i128 %10604, %10605
  %10607 = mul i128 24, %10606
  %10608 = trunc i128 %10607 to i64
  store i64 %10608, i64* %RCX.i463, align 8
  %10609 = sext i64 %10608 to i128
  %10610 = icmp ne i128 %10609, %10607
  %10611 = zext i1 %10610 to i8
  %10612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10611, i8* %10612, align 1
  %10613 = trunc i128 %10607 to i32
  %10614 = and i32 %10613, 255
  %10615 = call i32 @llvm.ctpop.i32(i32 %10614)
  %10616 = trunc i32 %10615 to i8
  %10617 = and i8 %10616, 1
  %10618 = xor i8 %10617, 1
  %10619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10618, i8* %10619, align 1
  %10620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10620, align 1
  %10621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10621, align 1
  %10622 = lshr i64 %10608, 63
  %10623 = trunc i64 %10622 to i8
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10623, i8* %10624, align 1
  %10625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10611, i8* %10625, align 1
  store %struct.Memory* %loadMem_41b819, %struct.Memory** %MEMORY
  %loadMem_41b81d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10627 = getelementptr inbounds %struct.GPR, %struct.GPR* %10626, i32 0, i32 33
  %10628 = getelementptr inbounds %struct.Reg, %struct.Reg* %10627, i32 0, i32 0
  %PC.i459 = bitcast %union.anon* %10628 to i64*
  %10629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10630 = getelementptr inbounds %struct.GPR, %struct.GPR* %10629, i32 0, i32 1
  %10631 = getelementptr inbounds %struct.Reg, %struct.Reg* %10630, i32 0, i32 0
  %RAX.i460 = bitcast %union.anon* %10631 to i64*
  %10632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10633 = getelementptr inbounds %struct.GPR, %struct.GPR* %10632, i32 0, i32 5
  %10634 = getelementptr inbounds %struct.Reg, %struct.Reg* %10633, i32 0, i32 0
  %RCX.i461 = bitcast %union.anon* %10634 to i64*
  %10635 = load i64, i64* %RAX.i460
  %10636 = load i64, i64* %RCX.i461
  %10637 = load i64, i64* %PC.i459
  %10638 = add i64 %10637, 3
  store i64 %10638, i64* %PC.i459
  %10639 = add i64 %10636, %10635
  store i64 %10639, i64* %RAX.i460, align 8
  %10640 = icmp ult i64 %10639, %10635
  %10641 = icmp ult i64 %10639, %10636
  %10642 = or i1 %10640, %10641
  %10643 = zext i1 %10642 to i8
  %10644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10643, i8* %10644, align 1
  %10645 = trunc i64 %10639 to i32
  %10646 = and i32 %10645, 255
  %10647 = call i32 @llvm.ctpop.i32(i32 %10646)
  %10648 = trunc i32 %10647 to i8
  %10649 = and i8 %10648, 1
  %10650 = xor i8 %10649, 1
  %10651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10650, i8* %10651, align 1
  %10652 = xor i64 %10636, %10635
  %10653 = xor i64 %10652, %10639
  %10654 = lshr i64 %10653, 4
  %10655 = trunc i64 %10654 to i8
  %10656 = and i8 %10655, 1
  %10657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10656, i8* %10657, align 1
  %10658 = icmp eq i64 %10639, 0
  %10659 = zext i1 %10658 to i8
  %10660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10659, i8* %10660, align 1
  %10661 = lshr i64 %10639, 63
  %10662 = trunc i64 %10661 to i8
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10662, i8* %10663, align 1
  %10664 = lshr i64 %10635, 63
  %10665 = lshr i64 %10636, 63
  %10666 = xor i64 %10661, %10664
  %10667 = xor i64 %10661, %10665
  %10668 = add i64 %10666, %10667
  %10669 = icmp eq i64 %10668, 2
  %10670 = zext i1 %10669 to i8
  %10671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10670, i8* %10671, align 1
  store %struct.Memory* %loadMem_41b81d, %struct.Memory** %MEMORY
  %loadMem_41b820 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10673 = getelementptr inbounds %struct.GPR, %struct.GPR* %10672, i32 0, i32 33
  %10674 = getelementptr inbounds %struct.Reg, %struct.Reg* %10673, i32 0, i32 0
  %PC.i456 = bitcast %union.anon* %10674 to i64*
  %10675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10676 = getelementptr inbounds %struct.GPR, %struct.GPR* %10675, i32 0, i32 1
  %10677 = getelementptr inbounds %struct.Reg, %struct.Reg* %10676, i32 0, i32 0
  %RAX.i457 = bitcast %union.anon* %10677 to i64*
  %10678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10679 = getelementptr inbounds %struct.GPR, %struct.GPR* %10678, i32 0, i32 7
  %10680 = getelementptr inbounds %struct.Reg, %struct.Reg* %10679, i32 0, i32 0
  %RDX.i458 = bitcast %union.anon* %10680 to i64*
  %10681 = load i64, i64* %RAX.i457
  %10682 = add i64 %10681, 12
  %10683 = load i64, i64* %PC.i456
  %10684 = add i64 %10683, 3
  store i64 %10684, i64* %PC.i456
  %10685 = inttoptr i64 %10682 to i32*
  %10686 = load i32, i32* %10685
  %10687 = zext i32 %10686 to i64
  store i64 %10687, i64* %RDX.i458, align 8
  store %struct.Memory* %loadMem_41b820, %struct.Memory** %MEMORY
  %loadMem_41b823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10689 = getelementptr inbounds %struct.GPR, %struct.GPR* %10688, i32 0, i32 33
  %10690 = getelementptr inbounds %struct.Reg, %struct.Reg* %10689, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %10690 to i64*
  %10691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10692 = getelementptr inbounds %struct.GPR, %struct.GPR* %10691, i32 0, i32 7
  %10693 = getelementptr inbounds %struct.Reg, %struct.Reg* %10692, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %10693 to i32*
  %10694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10695 = getelementptr inbounds %struct.GPR, %struct.GPR* %10694, i32 0, i32 15
  %10696 = getelementptr inbounds %struct.Reg, %struct.Reg* %10695, i32 0, i32 0
  %RBP.i455 = bitcast %union.anon* %10696 to i64*
  %10697 = load i32, i32* %EDX.i
  %10698 = zext i32 %10697 to i64
  %10699 = load i64, i64* %RBP.i455
  %10700 = sub i64 %10699, 60
  %10701 = load i64, i64* %PC.i454
  %10702 = add i64 %10701, 3
  store i64 %10702, i64* %PC.i454
  %10703 = inttoptr i64 %10700 to i32*
  %10704 = load i32, i32* %10703
  %10705 = sub i32 %10697, %10704
  %10706 = icmp ult i32 %10697, %10704
  %10707 = zext i1 %10706 to i8
  %10708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10707, i8* %10708, align 1
  %10709 = and i32 %10705, 255
  %10710 = call i32 @llvm.ctpop.i32(i32 %10709)
  %10711 = trunc i32 %10710 to i8
  %10712 = and i8 %10711, 1
  %10713 = xor i8 %10712, 1
  %10714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10713, i8* %10714, align 1
  %10715 = xor i32 %10704, %10697
  %10716 = xor i32 %10715, %10705
  %10717 = lshr i32 %10716, 4
  %10718 = trunc i32 %10717 to i8
  %10719 = and i8 %10718, 1
  %10720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10719, i8* %10720, align 1
  %10721 = icmp eq i32 %10705, 0
  %10722 = zext i1 %10721 to i8
  %10723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10722, i8* %10723, align 1
  %10724 = lshr i32 %10705, 31
  %10725 = trunc i32 %10724 to i8
  %10726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10725, i8* %10726, align 1
  %10727 = lshr i32 %10697, 31
  %10728 = lshr i32 %10704, 31
  %10729 = xor i32 %10728, %10727
  %10730 = xor i32 %10724, %10727
  %10731 = add i32 %10730, %10729
  %10732 = icmp eq i32 %10731, 2
  %10733 = zext i1 %10732 to i8
  %10734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10733, i8* %10734, align 1
  store %struct.Memory* %loadMem_41b823, %struct.Memory** %MEMORY
  %loadMem_41b826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10736 = getelementptr inbounds %struct.GPR, %struct.GPR* %10735, i32 0, i32 33
  %10737 = getelementptr inbounds %struct.Reg, %struct.Reg* %10736, i32 0, i32 0
  %PC.i453 = bitcast %union.anon* %10737 to i64*
  %10738 = load i64, i64* %PC.i453
  %10739 = add i64 %10738, 26
  %10740 = load i64, i64* %PC.i453
  %10741 = add i64 %10740, 6
  %10742 = load i64, i64* %PC.i453
  %10743 = add i64 %10742, 6
  store i64 %10743, i64* %PC.i453
  %10744 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10745 = load i8, i8* %10744, align 1
  %10746 = icmp eq i8 %10745, 0
  %10747 = zext i1 %10746 to i8
  store i8 %10747, i8* %BRANCH_TAKEN, align 1
  %10748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10749 = select i1 %10746, i64 %10739, i64 %10741
  store i64 %10749, i64* %10748, align 8
  store %struct.Memory* %loadMem_41b826, %struct.Memory** %MEMORY
  %loadBr_41b826 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b826 = icmp eq i8 %loadBr_41b826, 1
  br i1 %cmpBr_41b826, label %block_.L_41b840, label %block_41b82c

block_41b82c:                                     ; preds = %block_41b80e
  %loadMem_41b82c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10751 = getelementptr inbounds %struct.GPR, %struct.GPR* %10750, i32 0, i32 33
  %10752 = getelementptr inbounds %struct.Reg, %struct.Reg* %10751, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %10752 to i64*
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10754 = getelementptr inbounds %struct.GPR, %struct.GPR* %10753, i32 0, i32 1
  %10755 = getelementptr inbounds %struct.Reg, %struct.Reg* %10754, i32 0, i32 0
  %RAX.i451 = bitcast %union.anon* %10755 to i64*
  %10756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10757 = getelementptr inbounds %struct.GPR, %struct.GPR* %10756, i32 0, i32 15
  %10758 = getelementptr inbounds %struct.Reg, %struct.Reg* %10757, i32 0, i32 0
  %RBP.i452 = bitcast %union.anon* %10758 to i64*
  %10759 = load i64, i64* %RBP.i452
  %10760 = sub i64 %10759, 76
  %10761 = load i64, i64* %PC.i450
  %10762 = add i64 %10761, 4
  store i64 %10762, i64* %PC.i450
  %10763 = inttoptr i64 %10760 to i32*
  %10764 = load i32, i32* %10763
  %10765 = sext i32 %10764 to i64
  store i64 %10765, i64* %RAX.i451, align 8
  store %struct.Memory* %loadMem_41b82c, %struct.Memory** %MEMORY
  %loadMem_41b830 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10767 = getelementptr inbounds %struct.GPR, %struct.GPR* %10766, i32 0, i32 33
  %10768 = getelementptr inbounds %struct.Reg, %struct.Reg* %10767, i32 0, i32 0
  %PC.i448 = bitcast %union.anon* %10768 to i64*
  %10769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10770 = getelementptr inbounds %struct.GPR, %struct.GPR* %10769, i32 0, i32 1
  %10771 = getelementptr inbounds %struct.Reg, %struct.Reg* %10770, i32 0, i32 0
  %RAX.i449 = bitcast %union.anon* %10771 to i64*
  %10772 = load i64, i64* %RAX.i449
  %10773 = mul i64 %10772, 4
  %10774 = add i64 %10773, 8940528
  %10775 = load i64, i64* %PC.i448
  %10776 = add i64 %10775, 11
  store i64 %10776, i64* %PC.i448
  %10777 = inttoptr i64 %10774 to i32*
  store i32 1, i32* %10777
  store %struct.Memory* %loadMem_41b830, %struct.Memory** %MEMORY
  %loadMem_41b83b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10779 = getelementptr inbounds %struct.GPR, %struct.GPR* %10778, i32 0, i32 33
  %10780 = getelementptr inbounds %struct.Reg, %struct.Reg* %10779, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %10780 to i64*
  %10781 = load i64, i64* %PC.i447
  %10782 = add i64 %10781, 24
  %10783 = load i64, i64* %PC.i447
  %10784 = add i64 %10783, 5
  store i64 %10784, i64* %PC.i447
  %10785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10782, i64* %10785, align 8
  store %struct.Memory* %loadMem_41b83b, %struct.Memory** %MEMORY
  br label %block_.L_41b853

block_.L_41b840:                                  ; preds = %block_41b80e, %block_41b7f0, %block_41b7d3
  %loadMem_41b840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10787 = getelementptr inbounds %struct.GPR, %struct.GPR* %10786, i32 0, i32 33
  %10788 = getelementptr inbounds %struct.Reg, %struct.Reg* %10787, i32 0, i32 0
  %PC.i446 = bitcast %union.anon* %10788 to i64*
  %10789 = load i64, i64* %PC.i446
  %10790 = add i64 %10789, 5
  %10791 = load i64, i64* %PC.i446
  %10792 = add i64 %10791, 5
  store i64 %10792, i64* %PC.i446
  %10793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10790, i64* %10793, align 8
  store %struct.Memory* %loadMem_41b840, %struct.Memory** %MEMORY
  br label %block_.L_41b845

block_.L_41b845:                                  ; preds = %block_.L_41b840
  %loadMem_41b845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10795 = getelementptr inbounds %struct.GPR, %struct.GPR* %10794, i32 0, i32 33
  %10796 = getelementptr inbounds %struct.Reg, %struct.Reg* %10795, i32 0, i32 0
  %PC.i443 = bitcast %union.anon* %10796 to i64*
  %10797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10798 = getelementptr inbounds %struct.GPR, %struct.GPR* %10797, i32 0, i32 1
  %10799 = getelementptr inbounds %struct.Reg, %struct.Reg* %10798, i32 0, i32 0
  %RAX.i444 = bitcast %union.anon* %10799 to i64*
  %10800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10801 = getelementptr inbounds %struct.GPR, %struct.GPR* %10800, i32 0, i32 15
  %10802 = getelementptr inbounds %struct.Reg, %struct.Reg* %10801, i32 0, i32 0
  %RBP.i445 = bitcast %union.anon* %10802 to i64*
  %10803 = load i64, i64* %RBP.i445
  %10804 = sub i64 %10803, 76
  %10805 = load i64, i64* %PC.i443
  %10806 = add i64 %10805, 3
  store i64 %10806, i64* %PC.i443
  %10807 = inttoptr i64 %10804 to i32*
  %10808 = load i32, i32* %10807
  %10809 = zext i32 %10808 to i64
  store i64 %10809, i64* %RAX.i444, align 8
  store %struct.Memory* %loadMem_41b845, %struct.Memory** %MEMORY
  %loadMem_41b848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10811 = getelementptr inbounds %struct.GPR, %struct.GPR* %10810, i32 0, i32 33
  %10812 = getelementptr inbounds %struct.Reg, %struct.Reg* %10811, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %10812 to i64*
  %10813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10814 = getelementptr inbounds %struct.GPR, %struct.GPR* %10813, i32 0, i32 1
  %10815 = getelementptr inbounds %struct.Reg, %struct.Reg* %10814, i32 0, i32 0
  %RAX.i442 = bitcast %union.anon* %10815 to i64*
  %10816 = load i64, i64* %RAX.i442
  %10817 = load i64, i64* %PC.i441
  %10818 = add i64 %10817, 3
  store i64 %10818, i64* %PC.i441
  %10819 = trunc i64 %10816 to i32
  %10820 = add i32 1, %10819
  %10821 = zext i32 %10820 to i64
  store i64 %10821, i64* %RAX.i442, align 8
  %10822 = icmp ult i32 %10820, %10819
  %10823 = icmp ult i32 %10820, 1
  %10824 = or i1 %10822, %10823
  %10825 = zext i1 %10824 to i8
  %10826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10825, i8* %10826, align 1
  %10827 = and i32 %10820, 255
  %10828 = call i32 @llvm.ctpop.i32(i32 %10827)
  %10829 = trunc i32 %10828 to i8
  %10830 = and i8 %10829, 1
  %10831 = xor i8 %10830, 1
  %10832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10831, i8* %10832, align 1
  %10833 = xor i64 1, %10816
  %10834 = trunc i64 %10833 to i32
  %10835 = xor i32 %10834, %10820
  %10836 = lshr i32 %10835, 4
  %10837 = trunc i32 %10836 to i8
  %10838 = and i8 %10837, 1
  %10839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10838, i8* %10839, align 1
  %10840 = icmp eq i32 %10820, 0
  %10841 = zext i1 %10840 to i8
  %10842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10841, i8* %10842, align 1
  %10843 = lshr i32 %10820, 31
  %10844 = trunc i32 %10843 to i8
  %10845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10844, i8* %10845, align 1
  %10846 = lshr i32 %10819, 31
  %10847 = xor i32 %10843, %10846
  %10848 = add i32 %10847, %10843
  %10849 = icmp eq i32 %10848, 2
  %10850 = zext i1 %10849 to i8
  %10851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10850, i8* %10851, align 1
  store %struct.Memory* %loadMem_41b848, %struct.Memory** %MEMORY
  %loadMem_41b84b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10853 = getelementptr inbounds %struct.GPR, %struct.GPR* %10852, i32 0, i32 33
  %10854 = getelementptr inbounds %struct.Reg, %struct.Reg* %10853, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %10854 to i64*
  %10855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10856 = getelementptr inbounds %struct.GPR, %struct.GPR* %10855, i32 0, i32 1
  %10857 = getelementptr inbounds %struct.Reg, %struct.Reg* %10856, i32 0, i32 0
  %EAX.i439 = bitcast %union.anon* %10857 to i32*
  %10858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10859 = getelementptr inbounds %struct.GPR, %struct.GPR* %10858, i32 0, i32 15
  %10860 = getelementptr inbounds %struct.Reg, %struct.Reg* %10859, i32 0, i32 0
  %RBP.i440 = bitcast %union.anon* %10860 to i64*
  %10861 = load i64, i64* %RBP.i440
  %10862 = sub i64 %10861, 76
  %10863 = load i32, i32* %EAX.i439
  %10864 = zext i32 %10863 to i64
  %10865 = load i64, i64* %PC.i438
  %10866 = add i64 %10865, 3
  store i64 %10866, i64* %PC.i438
  %10867 = inttoptr i64 %10862 to i32*
  store i32 %10863, i32* %10867
  store %struct.Memory* %loadMem_41b84b, %struct.Memory** %MEMORY
  %loadMem_41b84e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10869 = getelementptr inbounds %struct.GPR, %struct.GPR* %10868, i32 0, i32 33
  %10870 = getelementptr inbounds %struct.Reg, %struct.Reg* %10869, i32 0, i32 0
  %PC.i437 = bitcast %union.anon* %10870 to i64*
  %10871 = load i64, i64* %PC.i437
  %10872 = add i64 %10871, -138
  %10873 = load i64, i64* %PC.i437
  %10874 = add i64 %10873, 5
  store i64 %10874, i64* %PC.i437
  %10875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10872, i64* %10875, align 8
  store %struct.Memory* %loadMem_41b84e, %struct.Memory** %MEMORY
  br label %block_.L_41b7c4

block_.L_41b853:                                  ; preds = %block_41b82c, %block_.L_41b7c4
  %loadMem_41b853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10877 = getelementptr inbounds %struct.GPR, %struct.GPR* %10876, i32 0, i32 33
  %10878 = getelementptr inbounds %struct.Reg, %struct.Reg* %10877, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %10878 to i64*
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10880 = getelementptr inbounds %struct.GPR, %struct.GPR* %10879, i32 0, i32 15
  %10881 = getelementptr inbounds %struct.Reg, %struct.Reg* %10880, i32 0, i32 0
  %RBP.i436 = bitcast %union.anon* %10881 to i64*
  %10882 = load i64, i64* %RBP.i436
  %10883 = sub i64 %10882, 80
  %10884 = load i64, i64* %PC.i435
  %10885 = add i64 %10884, 7
  store i64 %10885, i64* %PC.i435
  %10886 = inttoptr i64 %10883 to i32*
  store i32 0, i32* %10886
  store %struct.Memory* %loadMem_41b853, %struct.Memory** %MEMORY
  br label %block_.L_41b85a

block_.L_41b85a:                                  ; preds = %block_.L_41b889, %block_.L_41b853
  %loadMem_41b85a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10888 = getelementptr inbounds %struct.GPR, %struct.GPR* %10887, i32 0, i32 33
  %10889 = getelementptr inbounds %struct.Reg, %struct.Reg* %10888, i32 0, i32 0
  %PC.i432 = bitcast %union.anon* %10889 to i64*
  %10890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10891 = getelementptr inbounds %struct.GPR, %struct.GPR* %10890, i32 0, i32 1
  %10892 = getelementptr inbounds %struct.Reg, %struct.Reg* %10891, i32 0, i32 0
  %RAX.i433 = bitcast %union.anon* %10892 to i64*
  %10893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10894 = getelementptr inbounds %struct.GPR, %struct.GPR* %10893, i32 0, i32 15
  %10895 = getelementptr inbounds %struct.Reg, %struct.Reg* %10894, i32 0, i32 0
  %RBP.i434 = bitcast %union.anon* %10895 to i64*
  %10896 = load i64, i64* %RBP.i434
  %10897 = sub i64 %10896, 80
  %10898 = load i64, i64* %PC.i432
  %10899 = add i64 %10898, 3
  store i64 %10899, i64* %PC.i432
  %10900 = inttoptr i64 %10897 to i32*
  %10901 = load i32, i32* %10900
  %10902 = zext i32 %10901 to i64
  store i64 %10902, i64* %RAX.i433, align 8
  store %struct.Memory* %loadMem_41b85a, %struct.Memory** %MEMORY
  %loadMem_41b85d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10904 = getelementptr inbounds %struct.GPR, %struct.GPR* %10903, i32 0, i32 33
  %10905 = getelementptr inbounds %struct.Reg, %struct.Reg* %10904, i32 0, i32 0
  %PC.i429 = bitcast %union.anon* %10905 to i64*
  %10906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10907 = getelementptr inbounds %struct.GPR, %struct.GPR* %10906, i32 0, i32 1
  %10908 = getelementptr inbounds %struct.Reg, %struct.Reg* %10907, i32 0, i32 0
  %EAX.i430 = bitcast %union.anon* %10908 to i32*
  %10909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10910 = getelementptr inbounds %struct.GPR, %struct.GPR* %10909, i32 0, i32 15
  %10911 = getelementptr inbounds %struct.Reg, %struct.Reg* %10910, i32 0, i32 0
  %RBP.i431 = bitcast %union.anon* %10911 to i64*
  %10912 = load i32, i32* %EAX.i430
  %10913 = zext i32 %10912 to i64
  %10914 = load i64, i64* %RBP.i431
  %10915 = sub i64 %10914, 12420
  %10916 = load i64, i64* %PC.i429
  %10917 = add i64 %10916, 6
  store i64 %10917, i64* %PC.i429
  %10918 = inttoptr i64 %10915 to i32*
  %10919 = load i32, i32* %10918
  %10920 = sub i32 %10912, %10919
  %10921 = icmp ult i32 %10912, %10919
  %10922 = zext i1 %10921 to i8
  %10923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10922, i8* %10923, align 1
  %10924 = and i32 %10920, 255
  %10925 = call i32 @llvm.ctpop.i32(i32 %10924)
  %10926 = trunc i32 %10925 to i8
  %10927 = and i8 %10926, 1
  %10928 = xor i8 %10927, 1
  %10929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10928, i8* %10929, align 1
  %10930 = xor i32 %10919, %10912
  %10931 = xor i32 %10930, %10920
  %10932 = lshr i32 %10931, 4
  %10933 = trunc i32 %10932 to i8
  %10934 = and i8 %10933, 1
  %10935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10934, i8* %10935, align 1
  %10936 = icmp eq i32 %10920, 0
  %10937 = zext i1 %10936 to i8
  %10938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10937, i8* %10938, align 1
  %10939 = lshr i32 %10920, 31
  %10940 = trunc i32 %10939 to i8
  %10941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10940, i8* %10941, align 1
  %10942 = lshr i32 %10912, 31
  %10943 = lshr i32 %10919, 31
  %10944 = xor i32 %10943, %10942
  %10945 = xor i32 %10939, %10942
  %10946 = add i32 %10945, %10944
  %10947 = icmp eq i32 %10946, 2
  %10948 = zext i1 %10947 to i8
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10948, i8* %10949, align 1
  store %struct.Memory* %loadMem_41b85d, %struct.Memory** %MEMORY
  %loadMem_41b863 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10951 = getelementptr inbounds %struct.GPR, %struct.GPR* %10950, i32 0, i32 33
  %10952 = getelementptr inbounds %struct.Reg, %struct.Reg* %10951, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %10952 to i64*
  %10953 = load i64, i64* %PC.i428
  %10954 = add i64 %10953, 52
  %10955 = load i64, i64* %PC.i428
  %10956 = add i64 %10955, 6
  %10957 = load i64, i64* %PC.i428
  %10958 = add i64 %10957, 6
  store i64 %10958, i64* %PC.i428
  %10959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %10960 = load i8, i8* %10959, align 1
  %10961 = icmp ne i8 %10960, 0
  %10962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %10963 = load i8, i8* %10962, align 1
  %10964 = icmp ne i8 %10963, 0
  %10965 = xor i1 %10961, %10964
  %10966 = xor i1 %10965, true
  %10967 = zext i1 %10966 to i8
  store i8 %10967, i8* %BRANCH_TAKEN, align 1
  %10968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10969 = select i1 %10965, i64 %10956, i64 %10954
  store i64 %10969, i64* %10968, align 8
  store %struct.Memory* %loadMem_41b863, %struct.Memory** %MEMORY
  %loadBr_41b863 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b863 = icmp eq i8 %loadBr_41b863, 1
  br i1 %cmpBr_41b863, label %block_.L_41b897, label %block_41b869

block_41b869:                                     ; preds = %block_.L_41b85a
  %loadMem_41b869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10971 = getelementptr inbounds %struct.GPR, %struct.GPR* %10970, i32 0, i32 33
  %10972 = getelementptr inbounds %struct.Reg, %struct.Reg* %10971, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %10972 to i64*
  %10973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10974 = getelementptr inbounds %struct.GPR, %struct.GPR* %10973, i32 0, i32 1
  %10975 = getelementptr inbounds %struct.Reg, %struct.Reg* %10974, i32 0, i32 0
  %RAX.i426 = bitcast %union.anon* %10975 to i64*
  %10976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10977 = getelementptr inbounds %struct.GPR, %struct.GPR* %10976, i32 0, i32 15
  %10978 = getelementptr inbounds %struct.Reg, %struct.Reg* %10977, i32 0, i32 0
  %RBP.i427 = bitcast %union.anon* %10978 to i64*
  %10979 = load i64, i64* %RBP.i427
  %10980 = sub i64 %10979, 80
  %10981 = load i64, i64* %PC.i425
  %10982 = add i64 %10981, 4
  store i64 %10982, i64* %PC.i425
  %10983 = inttoptr i64 %10980 to i32*
  %10984 = load i32, i32* %10983
  %10985 = sext i32 %10984 to i64
  store i64 %10985, i64* %RAX.i426, align 8
  store %struct.Memory* %loadMem_41b869, %struct.Memory** %MEMORY
  %loadMem_41b86d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10987 = getelementptr inbounds %struct.GPR, %struct.GPR* %10986, i32 0, i32 33
  %10988 = getelementptr inbounds %struct.Reg, %struct.Reg* %10987, i32 0, i32 0
  %PC.i423 = bitcast %union.anon* %10988 to i64*
  %10989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10990 = getelementptr inbounds %struct.GPR, %struct.GPR* %10989, i32 0, i32 1
  %10991 = getelementptr inbounds %struct.Reg, %struct.Reg* %10990, i32 0, i32 0
  %RAX.i424 = bitcast %union.anon* %10991 to i64*
  %10992 = load i64, i64* %RAX.i424
  %10993 = mul i64 %10992, 4
  %10994 = add i64 %10993, 8940528
  %10995 = load i64, i64* %PC.i423
  %10996 = add i64 %10995, 8
  store i64 %10996, i64* %PC.i423
  %10997 = inttoptr i64 %10994 to i32*
  %10998 = load i32, i32* %10997
  %10999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10999, align 1
  %11000 = and i32 %10998, 255
  %11001 = call i32 @llvm.ctpop.i32(i32 %11000)
  %11002 = trunc i32 %11001 to i8
  %11003 = and i8 %11002, 1
  %11004 = xor i8 %11003, 1
  %11005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11004, i8* %11005, align 1
  %11006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11006, align 1
  %11007 = icmp eq i32 %10998, 0
  %11008 = zext i1 %11007 to i8
  %11009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11008, i8* %11009, align 1
  %11010 = lshr i32 %10998, 31
  %11011 = trunc i32 %11010 to i8
  %11012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11011, i8* %11012, align 1
  %11013 = lshr i32 %10998, 31
  %11014 = xor i32 %11010, %11013
  %11015 = add i32 %11014, %11013
  %11016 = icmp eq i32 %11015, 2
  %11017 = zext i1 %11016 to i8
  %11018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11017, i8* %11018, align 1
  store %struct.Memory* %loadMem_41b86d, %struct.Memory** %MEMORY
  %loadMem_41b875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11020 = getelementptr inbounds %struct.GPR, %struct.GPR* %11019, i32 0, i32 33
  %11021 = getelementptr inbounds %struct.Reg, %struct.Reg* %11020, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %11021 to i64*
  %11022 = load i64, i64* %PC.i422
  %11023 = add i64 %11022, 15
  %11024 = load i64, i64* %PC.i422
  %11025 = add i64 %11024, 6
  %11026 = load i64, i64* %PC.i422
  %11027 = add i64 %11026, 6
  store i64 %11027, i64* %PC.i422
  %11028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11029 = load i8, i8* %11028, align 1
  store i8 %11029, i8* %BRANCH_TAKEN, align 1
  %11030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11031 = icmp ne i8 %11029, 0
  %11032 = select i1 %11031, i64 %11023, i64 %11025
  store i64 %11032, i64* %11030, align 8
  store %struct.Memory* %loadMem_41b875, %struct.Memory** %MEMORY
  %loadBr_41b875 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b875 = icmp eq i8 %loadBr_41b875, 1
  br i1 %cmpBr_41b875, label %block_.L_41b884, label %block_41b87b

block_41b87b:                                     ; preds = %block_41b869
  %loadMem_41b87b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11034 = getelementptr inbounds %struct.GPR, %struct.GPR* %11033, i32 0, i32 33
  %11035 = getelementptr inbounds %struct.Reg, %struct.Reg* %11034, i32 0, i32 0
  %PC.i419 = bitcast %union.anon* %11035 to i64*
  %11036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11037 = getelementptr inbounds %struct.GPR, %struct.GPR* %11036, i32 0, i32 1
  %11038 = getelementptr inbounds %struct.Reg, %struct.Reg* %11037, i32 0, i32 0
  %RAX.i420 = bitcast %union.anon* %11038 to i64*
  %11039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11040 = getelementptr inbounds %struct.GPR, %struct.GPR* %11039, i32 0, i32 15
  %11041 = getelementptr inbounds %struct.Reg, %struct.Reg* %11040, i32 0, i32 0
  %RBP.i421 = bitcast %union.anon* %11041 to i64*
  %11042 = load i64, i64* %RBP.i421
  %11043 = sub i64 %11042, 84
  %11044 = load i64, i64* %PC.i419
  %11045 = add i64 %11044, 3
  store i64 %11045, i64* %PC.i419
  %11046 = inttoptr i64 %11043 to i32*
  %11047 = load i32, i32* %11046
  %11048 = zext i32 %11047 to i64
  store i64 %11048, i64* %RAX.i420, align 8
  store %struct.Memory* %loadMem_41b87b, %struct.Memory** %MEMORY
  %loadMem_41b87e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11050 = getelementptr inbounds %struct.GPR, %struct.GPR* %11049, i32 0, i32 33
  %11051 = getelementptr inbounds %struct.Reg, %struct.Reg* %11050, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %11051 to i64*
  %11052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11053 = getelementptr inbounds %struct.GPR, %struct.GPR* %11052, i32 0, i32 1
  %11054 = getelementptr inbounds %struct.Reg, %struct.Reg* %11053, i32 0, i32 0
  %RAX.i418 = bitcast %union.anon* %11054 to i64*
  %11055 = load i64, i64* %RAX.i418
  %11056 = load i64, i64* %PC.i417
  %11057 = add i64 %11056, 3
  store i64 %11057, i64* %PC.i417
  %11058 = trunc i64 %11055 to i32
  %11059 = add i32 1, %11058
  %11060 = zext i32 %11059 to i64
  store i64 %11060, i64* %RAX.i418, align 8
  %11061 = icmp ult i32 %11059, %11058
  %11062 = icmp ult i32 %11059, 1
  %11063 = or i1 %11061, %11062
  %11064 = zext i1 %11063 to i8
  %11065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11064, i8* %11065, align 1
  %11066 = and i32 %11059, 255
  %11067 = call i32 @llvm.ctpop.i32(i32 %11066)
  %11068 = trunc i32 %11067 to i8
  %11069 = and i8 %11068, 1
  %11070 = xor i8 %11069, 1
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11070, i8* %11071, align 1
  %11072 = xor i64 1, %11055
  %11073 = trunc i64 %11072 to i32
  %11074 = xor i32 %11073, %11059
  %11075 = lshr i32 %11074, 4
  %11076 = trunc i32 %11075 to i8
  %11077 = and i8 %11076, 1
  %11078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11077, i8* %11078, align 1
  %11079 = icmp eq i32 %11059, 0
  %11080 = zext i1 %11079 to i8
  %11081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11080, i8* %11081, align 1
  %11082 = lshr i32 %11059, 31
  %11083 = trunc i32 %11082 to i8
  %11084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11083, i8* %11084, align 1
  %11085 = lshr i32 %11058, 31
  %11086 = xor i32 %11082, %11085
  %11087 = add i32 %11086, %11082
  %11088 = icmp eq i32 %11087, 2
  %11089 = zext i1 %11088 to i8
  %11090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11089, i8* %11090, align 1
  store %struct.Memory* %loadMem_41b87e, %struct.Memory** %MEMORY
  %loadMem_41b881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11092 = getelementptr inbounds %struct.GPR, %struct.GPR* %11091, i32 0, i32 33
  %11093 = getelementptr inbounds %struct.Reg, %struct.Reg* %11092, i32 0, i32 0
  %PC.i414 = bitcast %union.anon* %11093 to i64*
  %11094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11095 = getelementptr inbounds %struct.GPR, %struct.GPR* %11094, i32 0, i32 1
  %11096 = getelementptr inbounds %struct.Reg, %struct.Reg* %11095, i32 0, i32 0
  %EAX.i415 = bitcast %union.anon* %11096 to i32*
  %11097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11098 = getelementptr inbounds %struct.GPR, %struct.GPR* %11097, i32 0, i32 15
  %11099 = getelementptr inbounds %struct.Reg, %struct.Reg* %11098, i32 0, i32 0
  %RBP.i416 = bitcast %union.anon* %11099 to i64*
  %11100 = load i64, i64* %RBP.i416
  %11101 = sub i64 %11100, 84
  %11102 = load i32, i32* %EAX.i415
  %11103 = zext i32 %11102 to i64
  %11104 = load i64, i64* %PC.i414
  %11105 = add i64 %11104, 3
  store i64 %11105, i64* %PC.i414
  %11106 = inttoptr i64 %11101 to i32*
  store i32 %11102, i32* %11106
  store %struct.Memory* %loadMem_41b881, %struct.Memory** %MEMORY
  br label %block_.L_41b884

block_.L_41b884:                                  ; preds = %block_41b87b, %block_41b869
  %loadMem_41b884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11108 = getelementptr inbounds %struct.GPR, %struct.GPR* %11107, i32 0, i32 33
  %11109 = getelementptr inbounds %struct.Reg, %struct.Reg* %11108, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %11109 to i64*
  %11110 = load i64, i64* %PC.i413
  %11111 = add i64 %11110, 5
  %11112 = load i64, i64* %PC.i413
  %11113 = add i64 %11112, 5
  store i64 %11113, i64* %PC.i413
  %11114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11111, i64* %11114, align 8
  store %struct.Memory* %loadMem_41b884, %struct.Memory** %MEMORY
  br label %block_.L_41b889

block_.L_41b889:                                  ; preds = %block_.L_41b884
  %loadMem_41b889 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11116 = getelementptr inbounds %struct.GPR, %struct.GPR* %11115, i32 0, i32 33
  %11117 = getelementptr inbounds %struct.Reg, %struct.Reg* %11116, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %11117 to i64*
  %11118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11119 = getelementptr inbounds %struct.GPR, %struct.GPR* %11118, i32 0, i32 1
  %11120 = getelementptr inbounds %struct.Reg, %struct.Reg* %11119, i32 0, i32 0
  %RAX.i411 = bitcast %union.anon* %11120 to i64*
  %11121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11122 = getelementptr inbounds %struct.GPR, %struct.GPR* %11121, i32 0, i32 15
  %11123 = getelementptr inbounds %struct.Reg, %struct.Reg* %11122, i32 0, i32 0
  %RBP.i412 = bitcast %union.anon* %11123 to i64*
  %11124 = load i64, i64* %RBP.i412
  %11125 = sub i64 %11124, 80
  %11126 = load i64, i64* %PC.i410
  %11127 = add i64 %11126, 3
  store i64 %11127, i64* %PC.i410
  %11128 = inttoptr i64 %11125 to i32*
  %11129 = load i32, i32* %11128
  %11130 = zext i32 %11129 to i64
  store i64 %11130, i64* %RAX.i411, align 8
  store %struct.Memory* %loadMem_41b889, %struct.Memory** %MEMORY
  %loadMem_41b88c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11132 = getelementptr inbounds %struct.GPR, %struct.GPR* %11131, i32 0, i32 33
  %11133 = getelementptr inbounds %struct.Reg, %struct.Reg* %11132, i32 0, i32 0
  %PC.i408 = bitcast %union.anon* %11133 to i64*
  %11134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11135 = getelementptr inbounds %struct.GPR, %struct.GPR* %11134, i32 0, i32 1
  %11136 = getelementptr inbounds %struct.Reg, %struct.Reg* %11135, i32 0, i32 0
  %RAX.i409 = bitcast %union.anon* %11136 to i64*
  %11137 = load i64, i64* %RAX.i409
  %11138 = load i64, i64* %PC.i408
  %11139 = add i64 %11138, 3
  store i64 %11139, i64* %PC.i408
  %11140 = trunc i64 %11137 to i32
  %11141 = add i32 1, %11140
  %11142 = zext i32 %11141 to i64
  store i64 %11142, i64* %RAX.i409, align 8
  %11143 = icmp ult i32 %11141, %11140
  %11144 = icmp ult i32 %11141, 1
  %11145 = or i1 %11143, %11144
  %11146 = zext i1 %11145 to i8
  %11147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11146, i8* %11147, align 1
  %11148 = and i32 %11141, 255
  %11149 = call i32 @llvm.ctpop.i32(i32 %11148)
  %11150 = trunc i32 %11149 to i8
  %11151 = and i8 %11150, 1
  %11152 = xor i8 %11151, 1
  %11153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11152, i8* %11153, align 1
  %11154 = xor i64 1, %11137
  %11155 = trunc i64 %11154 to i32
  %11156 = xor i32 %11155, %11141
  %11157 = lshr i32 %11156, 4
  %11158 = trunc i32 %11157 to i8
  %11159 = and i8 %11158, 1
  %11160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11159, i8* %11160, align 1
  %11161 = icmp eq i32 %11141, 0
  %11162 = zext i1 %11161 to i8
  %11163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11162, i8* %11163, align 1
  %11164 = lshr i32 %11141, 31
  %11165 = trunc i32 %11164 to i8
  %11166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11165, i8* %11166, align 1
  %11167 = lshr i32 %11140, 31
  %11168 = xor i32 %11164, %11167
  %11169 = add i32 %11168, %11164
  %11170 = icmp eq i32 %11169, 2
  %11171 = zext i1 %11170 to i8
  %11172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11171, i8* %11172, align 1
  store %struct.Memory* %loadMem_41b88c, %struct.Memory** %MEMORY
  %loadMem_41b88f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11174 = getelementptr inbounds %struct.GPR, %struct.GPR* %11173, i32 0, i32 33
  %11175 = getelementptr inbounds %struct.Reg, %struct.Reg* %11174, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %11175 to i64*
  %11176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11177 = getelementptr inbounds %struct.GPR, %struct.GPR* %11176, i32 0, i32 1
  %11178 = getelementptr inbounds %struct.Reg, %struct.Reg* %11177, i32 0, i32 0
  %EAX.i406 = bitcast %union.anon* %11178 to i32*
  %11179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11180 = getelementptr inbounds %struct.GPR, %struct.GPR* %11179, i32 0, i32 15
  %11181 = getelementptr inbounds %struct.Reg, %struct.Reg* %11180, i32 0, i32 0
  %RBP.i407 = bitcast %union.anon* %11181 to i64*
  %11182 = load i64, i64* %RBP.i407
  %11183 = sub i64 %11182, 80
  %11184 = load i32, i32* %EAX.i406
  %11185 = zext i32 %11184 to i64
  %11186 = load i64, i64* %PC.i405
  %11187 = add i64 %11186, 3
  store i64 %11187, i64* %PC.i405
  %11188 = inttoptr i64 %11183 to i32*
  store i32 %11184, i32* %11188
  store %struct.Memory* %loadMem_41b88f, %struct.Memory** %MEMORY
  %loadMem_41b892 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11190 = getelementptr inbounds %struct.GPR, %struct.GPR* %11189, i32 0, i32 33
  %11191 = getelementptr inbounds %struct.Reg, %struct.Reg* %11190, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %11191 to i64*
  %11192 = load i64, i64* %PC.i404
  %11193 = add i64 %11192, -56
  %11194 = load i64, i64* %PC.i404
  %11195 = add i64 %11194, 5
  store i64 %11195, i64* %PC.i404
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11193, i64* %11196, align 8
  store %struct.Memory* %loadMem_41b892, %struct.Memory** %MEMORY
  br label %block_.L_41b85a

block_.L_41b897:                                  ; preds = %block_.L_41b85a
  %loadMem_41b897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11198 = getelementptr inbounds %struct.GPR, %struct.GPR* %11197, i32 0, i32 33
  %11199 = getelementptr inbounds %struct.Reg, %struct.Reg* %11198, i32 0, i32 0
  %PC.i401 = bitcast %union.anon* %11199 to i64*
  %11200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11201 = getelementptr inbounds %struct.GPR, %struct.GPR* %11200, i32 0, i32 1
  %11202 = getelementptr inbounds %struct.Reg, %struct.Reg* %11201, i32 0, i32 0
  %RAX.i402 = bitcast %union.anon* %11202 to i64*
  %11203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11204 = getelementptr inbounds %struct.GPR, %struct.GPR* %11203, i32 0, i32 15
  %11205 = getelementptr inbounds %struct.Reg, %struct.Reg* %11204, i32 0, i32 0
  %RBP.i403 = bitcast %union.anon* %11205 to i64*
  %11206 = load i64, i64* %RBP.i403
  %11207 = sub i64 %11206, 84
  %11208 = load i64, i64* %PC.i401
  %11209 = add i64 %11208, 3
  store i64 %11209, i64* %PC.i401
  %11210 = inttoptr i64 %11207 to i32*
  %11211 = load i32, i32* %11210
  %11212 = zext i32 %11211 to i64
  store i64 %11212, i64* %RAX.i402, align 8
  store %struct.Memory* %loadMem_41b897, %struct.Memory** %MEMORY
  %loadMem_41b89a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11214 = getelementptr inbounds %struct.GPR, %struct.GPR* %11213, i32 0, i32 33
  %11215 = getelementptr inbounds %struct.Reg, %struct.Reg* %11214, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %11215 to i64*
  %11216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11217 = getelementptr inbounds %struct.GPR, %struct.GPR* %11216, i32 0, i32 1
  %11218 = getelementptr inbounds %struct.Reg, %struct.Reg* %11217, i32 0, i32 0
  %EAX.i400 = bitcast %union.anon* %11218 to i32*
  %11219 = load i32, i32* %EAX.i400
  %11220 = zext i32 %11219 to i64
  %11221 = load i64, i64* %PC.i399
  %11222 = add i64 %11221, 7
  store i64 %11222, i64* %PC.i399
  %11223 = load i32, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  %11224 = sub i32 %11219, %11223
  %11225 = icmp ult i32 %11219, %11223
  %11226 = zext i1 %11225 to i8
  %11227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11226, i8* %11227, align 1
  %11228 = and i32 %11224, 255
  %11229 = call i32 @llvm.ctpop.i32(i32 %11228)
  %11230 = trunc i32 %11229 to i8
  %11231 = and i8 %11230, 1
  %11232 = xor i8 %11231, 1
  %11233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11232, i8* %11233, align 1
  %11234 = xor i32 %11223, %11219
  %11235 = xor i32 %11234, %11224
  %11236 = lshr i32 %11235, 4
  %11237 = trunc i32 %11236 to i8
  %11238 = and i8 %11237, 1
  %11239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11238, i8* %11239, align 1
  %11240 = icmp eq i32 %11224, 0
  %11241 = zext i1 %11240 to i8
  %11242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11241, i8* %11242, align 1
  %11243 = lshr i32 %11224, 31
  %11244 = trunc i32 %11243 to i8
  %11245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11244, i8* %11245, align 1
  %11246 = lshr i32 %11219, 31
  %11247 = lshr i32 %11223, 31
  %11248 = xor i32 %11247, %11246
  %11249 = xor i32 %11243, %11246
  %11250 = add i32 %11249, %11248
  %11251 = icmp eq i32 %11250, 2
  %11252 = zext i1 %11251 to i8
  %11253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11252, i8* %11253, align 1
  store %struct.Memory* %loadMem_41b89a, %struct.Memory** %MEMORY
  %loadMem_41b8a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11255 = getelementptr inbounds %struct.GPR, %struct.GPR* %11254, i32 0, i32 33
  %11256 = getelementptr inbounds %struct.Reg, %struct.Reg* %11255, i32 0, i32 0
  %PC.i398 = bitcast %union.anon* %11256 to i64*
  %11257 = load i64, i64* %PC.i398
  %11258 = add i64 %11257, 17
  %11259 = load i64, i64* %PC.i398
  %11260 = add i64 %11259, 6
  %11261 = load i64, i64* %PC.i398
  %11262 = add i64 %11261, 6
  store i64 %11262, i64* %PC.i398
  %11263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11264 = load i8, i8* %11263, align 1
  %11265 = icmp eq i8 %11264, 0
  %11266 = zext i1 %11265 to i8
  store i8 %11266, i8* %BRANCH_TAKEN, align 1
  %11267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11268 = select i1 %11265, i64 %11258, i64 %11260
  store i64 %11268, i64* %11267, align 8
  store %struct.Memory* %loadMem_41b8a1, %struct.Memory** %MEMORY
  %loadBr_41b8a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b8a1 = icmp eq i8 %loadBr_41b8a1, 1
  br i1 %cmpBr_41b8a1, label %block_.L_41b8b2, label %block_41b8a7

block_41b8a7:                                     ; preds = %block_.L_41b897
  %loadMem_41b8a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11270 = getelementptr inbounds %struct.GPR, %struct.GPR* %11269, i32 0, i32 33
  %11271 = getelementptr inbounds %struct.Reg, %struct.Reg* %11270, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %11271 to i64*
  %11272 = load i64, i64* %PC.i397
  %11273 = add i64 %11272, 11
  store i64 %11273, i64* %PC.i397
  store i32 1, i32* bitcast (%G_0x62e51c_type* @G_0x62e51c to i32*)
  store %struct.Memory* %loadMem_41b8a7, %struct.Memory** %MEMORY
  br label %block_.L_41b8b2

block_.L_41b8b2:                                  ; preds = %block_41b8a7, %block_.L_41b897
  %loadMem_41b8b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11275 = getelementptr inbounds %struct.GPR, %struct.GPR* %11274, i32 0, i32 33
  %11276 = getelementptr inbounds %struct.Reg, %struct.Reg* %11275, i32 0, i32 0
  %PC.i396 = bitcast %union.anon* %11276 to i64*
  %11277 = load i64, i64* %PC.i396
  %11278 = add i64 %11277, -3881
  %11279 = load i64, i64* %PC.i396
  %11280 = add i64 %11279, 5
  store i64 %11280, i64* %PC.i396
  %11281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11278, i64* %11281, align 8
  store %struct.Memory* %loadMem_41b8b2, %struct.Memory** %MEMORY
  br label %block_.L_41a989

block_.L_41b8b7:                                  ; preds = %block_41b7a0, %block_41b73e
  %loadMem_41b8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11283 = getelementptr inbounds %struct.GPR, %struct.GPR* %11282, i32 0, i32 33
  %11284 = getelementptr inbounds %struct.Reg, %struct.Reg* %11283, i32 0, i32 0
  %PC.i395 = bitcast %union.anon* %11284 to i64*
  %11285 = load i64, i64* %PC.i395
  %11286 = add i64 %11285, 5
  %11287 = load i64, i64* %PC.i395
  %11288 = add i64 %11287, 5
  store i64 %11288, i64* %PC.i395
  %11289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11286, i64* %11289, align 8
  store %struct.Memory* %loadMem_41b8b7, %struct.Memory** %MEMORY
  br label %block_.L_41b8bc

block_.L_41b8bc:                                  ; preds = %block_.L_41b8b7, %block_41b730, %block_41b722, %block_.L_41b714, %block_41b706
  %loadMem_41b8bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11291 = getelementptr inbounds %struct.GPR, %struct.GPR* %11290, i32 0, i32 33
  %11292 = getelementptr inbounds %struct.Reg, %struct.Reg* %11291, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %11292 to i64*
  %11293 = load i64, i64* %PC.i394
  %11294 = add i64 %11293, 5
  %11295 = load i64, i64* %PC.i394
  %11296 = add i64 %11295, 5
  store i64 %11296, i64* %PC.i394
  %11297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11294, i64* %11297, align 8
  store %struct.Memory* %loadMem_41b8bc, %struct.Memory** %MEMORY
  br label %block_.L_41b8c1

block_.L_41b8c1:                                  ; preds = %block_.L_41b8bc, %block_.L_41b6d2
  %loadMem_41b8c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11299 = getelementptr inbounds %struct.GPR, %struct.GPR* %11298, i32 0, i32 33
  %11300 = getelementptr inbounds %struct.Reg, %struct.Reg* %11299, i32 0, i32 0
  %PC.i393 = bitcast %union.anon* %11300 to i64*
  %11301 = load i64, i64* %PC.i393
  %11302 = add i64 %11301, 8
  store i64 %11302, i64* %PC.i393
  %11303 = load i32, i32* bitcast (%G_0x62e51c_type* @G_0x62e51c to i32*)
  %11304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11304, align 1
  %11305 = and i32 %11303, 255
  %11306 = call i32 @llvm.ctpop.i32(i32 %11305)
  %11307 = trunc i32 %11306 to i8
  %11308 = and i8 %11307, 1
  %11309 = xor i8 %11308, 1
  %11310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11309, i8* %11310, align 1
  %11311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11311, align 1
  %11312 = icmp eq i32 %11303, 0
  %11313 = zext i1 %11312 to i8
  %11314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11313, i8* %11314, align 1
  %11315 = lshr i32 %11303, 31
  %11316 = trunc i32 %11315 to i8
  %11317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11316, i8* %11317, align 1
  %11318 = lshr i32 %11303, 31
  %11319 = xor i32 %11315, %11318
  %11320 = add i32 %11319, %11318
  %11321 = icmp eq i32 %11320, 2
  %11322 = zext i1 %11321 to i8
  %11323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11322, i8* %11323, align 1
  store %struct.Memory* %loadMem_41b8c1, %struct.Memory** %MEMORY
  %loadMem_41b8c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11325 = getelementptr inbounds %struct.GPR, %struct.GPR* %11324, i32 0, i32 33
  %11326 = getelementptr inbounds %struct.Reg, %struct.Reg* %11325, i32 0, i32 0
  %PC.i392 = bitcast %union.anon* %11326 to i64*
  %11327 = load i64, i64* %PC.i392
  %11328 = add i64 %11327, 30
  %11329 = load i64, i64* %PC.i392
  %11330 = add i64 %11329, 6
  %11331 = load i64, i64* %PC.i392
  %11332 = add i64 %11331, 6
  store i64 %11332, i64* %PC.i392
  %11333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11334 = load i8, i8* %11333, align 1
  store i8 %11334, i8* %BRANCH_TAKEN, align 1
  %11335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11336 = icmp ne i8 %11334, 0
  %11337 = select i1 %11336, i64 %11328, i64 %11330
  store i64 %11337, i64* %11335, align 8
  store %struct.Memory* %loadMem_41b8c9, %struct.Memory** %MEMORY
  %loadBr_41b8c9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b8c9 = icmp eq i8 %loadBr_41b8c9, 1
  br i1 %cmpBr_41b8c9, label %block_.L_41b8e7, label %block_41b8cf

block_41b8cf:                                     ; preds = %block_.L_41b8c1
  %loadMem_41b8cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %11338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11339 = getelementptr inbounds %struct.GPR, %struct.GPR* %11338, i32 0, i32 33
  %11340 = getelementptr inbounds %struct.Reg, %struct.Reg* %11339, i32 0, i32 0
  %PC.i389 = bitcast %union.anon* %11340 to i64*
  %11341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11342 = getelementptr inbounds %struct.GPR, %struct.GPR* %11341, i32 0, i32 1
  %11343 = getelementptr inbounds %struct.Reg, %struct.Reg* %11342, i32 0, i32 0
  %RAX.i390 = bitcast %union.anon* %11343 to i64*
  %11344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11345 = getelementptr inbounds %struct.GPR, %struct.GPR* %11344, i32 0, i32 15
  %11346 = getelementptr inbounds %struct.Reg, %struct.Reg* %11345, i32 0, i32 0
  %RBP.i391 = bitcast %union.anon* %11346 to i64*
  %11347 = load i64, i64* %RBP.i391
  %11348 = sub i64 %11347, 72
  %11349 = load i64, i64* %PC.i389
  %11350 = add i64 %11349, 4
  store i64 %11350, i64* %PC.i389
  %11351 = inttoptr i64 %11348 to i64*
  %11352 = load i64, i64* %11351
  store i64 %11352, i64* %RAX.i390, align 8
  store %struct.Memory* %loadMem_41b8cf, %struct.Memory** %MEMORY
  %loadMem_41b8d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11354 = getelementptr inbounds %struct.GPR, %struct.GPR* %11353, i32 0, i32 33
  %11355 = getelementptr inbounds %struct.Reg, %struct.Reg* %11354, i32 0, i32 0
  %PC.i386 = bitcast %union.anon* %11355 to i64*
  %11356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11357 = getelementptr inbounds %struct.GPR, %struct.GPR* %11356, i32 0, i32 1
  %11358 = getelementptr inbounds %struct.Reg, %struct.Reg* %11357, i32 0, i32 0
  %RAX.i387 = bitcast %union.anon* %11358 to i64*
  %11359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11360 = getelementptr inbounds %struct.GPR, %struct.GPR* %11359, i32 0, i32 15
  %11361 = getelementptr inbounds %struct.Reg, %struct.Reg* %11360, i32 0, i32 0
  %RBP.i388 = bitcast %union.anon* %11361 to i64*
  %11362 = load i64, i64* %RBP.i388
  %11363 = sub i64 %11362, 24
  %11364 = load i64, i64* %RAX.i387
  %11365 = load i64, i64* %PC.i386
  %11366 = add i64 %11365, 4
  store i64 %11366, i64* %PC.i386
  %11367 = inttoptr i64 %11363 to i64*
  store i64 %11364, i64* %11367
  store %struct.Memory* %loadMem_41b8d3, %struct.Memory** %MEMORY
  %loadMem_41b8d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11369 = getelementptr inbounds %struct.GPR, %struct.GPR* %11368, i32 0, i32 33
  %11370 = getelementptr inbounds %struct.Reg, %struct.Reg* %11369, i32 0, i32 0
  %PC.i383 = bitcast %union.anon* %11370 to i64*
  %11371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11372 = getelementptr inbounds %struct.GPR, %struct.GPR* %11371, i32 0, i32 1
  %11373 = getelementptr inbounds %struct.Reg, %struct.Reg* %11372, i32 0, i32 0
  %RAX.i384 = bitcast %union.anon* %11373 to i64*
  %11374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11375 = getelementptr inbounds %struct.GPR, %struct.GPR* %11374, i32 0, i32 15
  %11376 = getelementptr inbounds %struct.Reg, %struct.Reg* %11375, i32 0, i32 0
  %RBP.i385 = bitcast %union.anon* %11376 to i64*
  %11377 = load i64, i64* %RBP.i385
  %11378 = sub i64 %11377, 64
  %11379 = load i64, i64* %PC.i383
  %11380 = add i64 %11379, 4
  store i64 %11380, i64* %PC.i383
  %11381 = inttoptr i64 %11378 to i64*
  %11382 = load i64, i64* %11381
  store i64 %11382, i64* %RAX.i384, align 8
  store %struct.Memory* %loadMem_41b8d7, %struct.Memory** %MEMORY
  %loadMem_41b8db = load %struct.Memory*, %struct.Memory** %MEMORY
  %11383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11384 = getelementptr inbounds %struct.GPR, %struct.GPR* %11383, i32 0, i32 33
  %11385 = getelementptr inbounds %struct.Reg, %struct.Reg* %11384, i32 0, i32 0
  %PC.i380 = bitcast %union.anon* %11385 to i64*
  %11386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11387 = getelementptr inbounds %struct.GPR, %struct.GPR* %11386, i32 0, i32 1
  %11388 = getelementptr inbounds %struct.Reg, %struct.Reg* %11387, i32 0, i32 0
  %RAX.i381 = bitcast %union.anon* %11388 to i64*
  %11389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11390 = getelementptr inbounds %struct.GPR, %struct.GPR* %11389, i32 0, i32 15
  %11391 = getelementptr inbounds %struct.Reg, %struct.Reg* %11390, i32 0, i32 0
  %RBP.i382 = bitcast %union.anon* %11391 to i64*
  %11392 = load i64, i64* %RBP.i382
  %11393 = sub i64 %11392, 16
  %11394 = load i64, i64* %RAX.i381
  %11395 = load i64, i64* %PC.i380
  %11396 = add i64 %11395, 4
  store i64 %11396, i64* %PC.i380
  %11397 = inttoptr i64 %11393 to i64*
  store i64 %11394, i64* %11397
  store %struct.Memory* %loadMem_41b8db, %struct.Memory** %MEMORY
  %loadMem_41b8df = load %struct.Memory*, %struct.Memory** %MEMORY
  %11398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11399 = getelementptr inbounds %struct.GPR, %struct.GPR* %11398, i32 0, i32 33
  %11400 = getelementptr inbounds %struct.Reg, %struct.Reg* %11399, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %11400 to i64*
  %11401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11402 = getelementptr inbounds %struct.GPR, %struct.GPR* %11401, i32 0, i32 1
  %11403 = getelementptr inbounds %struct.Reg, %struct.Reg* %11402, i32 0, i32 0
  %RAX.i378 = bitcast %union.anon* %11403 to i64*
  %11404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11405 = getelementptr inbounds %struct.GPR, %struct.GPR* %11404, i32 0, i32 15
  %11406 = getelementptr inbounds %struct.Reg, %struct.Reg* %11405, i32 0, i32 0
  %RBP.i379 = bitcast %union.anon* %11406 to i64*
  %11407 = load i64, i64* %RBP.i379
  %11408 = sub i64 %11407, 56
  %11409 = load i64, i64* %PC.i377
  %11410 = add i64 %11409, 4
  store i64 %11410, i64* %PC.i377
  %11411 = inttoptr i64 %11408 to i64*
  %11412 = load i64, i64* %11411
  store i64 %11412, i64* %RAX.i378, align 8
  store %struct.Memory* %loadMem_41b8df, %struct.Memory** %MEMORY
  %loadMem_41b8e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11414 = getelementptr inbounds %struct.GPR, %struct.GPR* %11413, i32 0, i32 33
  %11415 = getelementptr inbounds %struct.Reg, %struct.Reg* %11414, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %11415 to i64*
  %11416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11417 = getelementptr inbounds %struct.GPR, %struct.GPR* %11416, i32 0, i32 1
  %11418 = getelementptr inbounds %struct.Reg, %struct.Reg* %11417, i32 0, i32 0
  %RAX.i375 = bitcast %union.anon* %11418 to i64*
  %11419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11420 = getelementptr inbounds %struct.GPR, %struct.GPR* %11419, i32 0, i32 15
  %11421 = getelementptr inbounds %struct.Reg, %struct.Reg* %11420, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %11421 to i64*
  %11422 = load i64, i64* %RBP.i376
  %11423 = sub i64 %11422, 8
  %11424 = load i64, i64* %RAX.i375
  %11425 = load i64, i64* %PC.i374
  %11426 = add i64 %11425, 4
  store i64 %11426, i64* %PC.i374
  %11427 = inttoptr i64 %11423 to i64*
  store i64 %11424, i64* %11427
  store %struct.Memory* %loadMem_41b8e3, %struct.Memory** %MEMORY
  br label %block_.L_41b8e7

block_.L_41b8e7:                                  ; preds = %block_41b8cf, %block_.L_41b8c1
  %loadMem_41b8e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11429 = getelementptr inbounds %struct.GPR, %struct.GPR* %11428, i32 0, i32 33
  %11430 = getelementptr inbounds %struct.Reg, %struct.Reg* %11429, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %11430 to i64*
  %11431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11432 = getelementptr inbounds %struct.GPR, %struct.GPR* %11431, i32 0, i32 15
  %11433 = getelementptr inbounds %struct.Reg, %struct.Reg* %11432, i32 0, i32 0
  %RBP.i373 = bitcast %union.anon* %11433 to i64*
  %11434 = load i64, i64* %RBP.i373
  %11435 = sub i64 %11434, 12416
  %11436 = load i64, i64* %PC.i372
  %11437 = add i64 %11436, 7
  store i64 %11437, i64* %PC.i372
  %11438 = inttoptr i64 %11435 to i32*
  %11439 = load i32, i32* %11438
  %11440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11440, align 1
  %11441 = and i32 %11439, 255
  %11442 = call i32 @llvm.ctpop.i32(i32 %11441)
  %11443 = trunc i32 %11442 to i8
  %11444 = and i8 %11443, 1
  %11445 = xor i8 %11444, 1
  %11446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11445, i8* %11446, align 1
  %11447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11447, align 1
  %11448 = icmp eq i32 %11439, 0
  %11449 = zext i1 %11448 to i8
  %11450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11449, i8* %11450, align 1
  %11451 = lshr i32 %11439, 31
  %11452 = trunc i32 %11451 to i8
  %11453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11452, i8* %11453, align 1
  %11454 = lshr i32 %11439, 31
  %11455 = xor i32 %11451, %11454
  %11456 = add i32 %11455, %11454
  %11457 = icmp eq i32 %11456, 2
  %11458 = zext i1 %11457 to i8
  %11459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11458, i8* %11459, align 1
  store %struct.Memory* %loadMem_41b8e7, %struct.Memory** %MEMORY
  %loadMem_41b8ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %11460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11461 = getelementptr inbounds %struct.GPR, %struct.GPR* %11460, i32 0, i32 33
  %11462 = getelementptr inbounds %struct.Reg, %struct.Reg* %11461, i32 0, i32 0
  %PC.i371 = bitcast %union.anon* %11462 to i64*
  %11463 = load i64, i64* %PC.i371
  %11464 = add i64 %11463, 108
  %11465 = load i64, i64* %PC.i371
  %11466 = add i64 %11465, 6
  %11467 = load i64, i64* %PC.i371
  %11468 = add i64 %11467, 6
  store i64 %11468, i64* %PC.i371
  %11469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11470 = load i8, i8* %11469, align 1
  store i8 %11470, i8* %BRANCH_TAKEN, align 1
  %11471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11472 = icmp ne i8 %11470, 0
  %11473 = select i1 %11472, i64 %11464, i64 %11466
  store i64 %11473, i64* %11471, align 8
  store %struct.Memory* %loadMem_41b8ee, %struct.Memory** %MEMORY
  %loadBr_41b8ee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b8ee = icmp eq i8 %loadBr_41b8ee, 1
  br i1 %cmpBr_41b8ee, label %block_.L_41b95a, label %block_41b8f4

block_41b8f4:                                     ; preds = %block_.L_41b8e7
  %loadMem_41b8f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11475 = getelementptr inbounds %struct.GPR, %struct.GPR* %11474, i32 0, i32 33
  %11476 = getelementptr inbounds %struct.Reg, %struct.Reg* %11475, i32 0, i32 0
  %PC.i370 = bitcast %union.anon* %11476 to i64*
  %11477 = load i64, i64* %PC.i370
  %11478 = add i64 %11477, 8
  store i64 %11478, i64* %PC.i370
  %11479 = load i32, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*)
  %11480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11480, align 1
  %11481 = and i32 %11479, 255
  %11482 = call i32 @llvm.ctpop.i32(i32 %11481)
  %11483 = trunc i32 %11482 to i8
  %11484 = and i8 %11483, 1
  %11485 = xor i8 %11484, 1
  %11486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11485, i8* %11486, align 1
  %11487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11487, align 1
  %11488 = icmp eq i32 %11479, 0
  %11489 = zext i1 %11488 to i8
  %11490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11489, i8* %11490, align 1
  %11491 = lshr i32 %11479, 31
  %11492 = trunc i32 %11491 to i8
  %11493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11492, i8* %11493, align 1
  %11494 = lshr i32 %11479, 31
  %11495 = xor i32 %11491, %11494
  %11496 = add i32 %11495, %11494
  %11497 = icmp eq i32 %11496, 2
  %11498 = zext i1 %11497 to i8
  %11499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11498, i8* %11499, align 1
  store %struct.Memory* %loadMem_41b8f4, %struct.Memory** %MEMORY
  %loadMem_41b8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %11500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11501 = getelementptr inbounds %struct.GPR, %struct.GPR* %11500, i32 0, i32 33
  %11502 = getelementptr inbounds %struct.Reg, %struct.Reg* %11501, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %11502 to i64*
  %11503 = load i64, i64* %PC.i369
  %11504 = add i64 %11503, 94
  %11505 = load i64, i64* %PC.i369
  %11506 = add i64 %11505, 6
  %11507 = load i64, i64* %PC.i369
  %11508 = add i64 %11507, 6
  store i64 %11508, i64* %PC.i369
  %11509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11510 = load i8, i8* %11509, align 1
  store i8 %11510, i8* %BRANCH_TAKEN, align 1
  %11511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11512 = icmp ne i8 %11510, 0
  %11513 = select i1 %11512, i64 %11504, i64 %11506
  store i64 %11513, i64* %11511, align 8
  store %struct.Memory* %loadMem_41b8fc, %struct.Memory** %MEMORY
  %loadBr_41b8fc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b8fc = icmp eq i8 %loadBr_41b8fc, 1
  br i1 %cmpBr_41b8fc, label %block_.L_41b95a, label %block_41b902

block_41b902:                                     ; preds = %block_41b8f4
  %loadMem_41b902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11515 = getelementptr inbounds %struct.GPR, %struct.GPR* %11514, i32 0, i32 33
  %11516 = getelementptr inbounds %struct.Reg, %struct.Reg* %11515, i32 0, i32 0
  %PC.i366 = bitcast %union.anon* %11516 to i64*
  %11517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11518 = getelementptr inbounds %struct.GPR, %struct.GPR* %11517, i32 0, i32 1
  %11519 = getelementptr inbounds %struct.Reg, %struct.Reg* %11518, i32 0, i32 0
  %RAX.i367 = bitcast %union.anon* %11519 to i64*
  %11520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11521 = getelementptr inbounds %struct.GPR, %struct.GPR* %11520, i32 0, i32 15
  %11522 = getelementptr inbounds %struct.Reg, %struct.Reg* %11521, i32 0, i32 0
  %RBP.i368 = bitcast %union.anon* %11522 to i64*
  %11523 = load i64, i64* %RBP.i368
  %11524 = sub i64 %11523, 24
  %11525 = load i64, i64* %PC.i366
  %11526 = add i64 %11525, 4
  store i64 %11526, i64* %PC.i366
  store i64 %11524, i64* %RAX.i367, align 8
  store %struct.Memory* %loadMem_41b902, %struct.Memory** %MEMORY
  %loadMem_41b906 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11528 = getelementptr inbounds %struct.GPR, %struct.GPR* %11527, i32 0, i32 33
  %11529 = getelementptr inbounds %struct.Reg, %struct.Reg* %11528, i32 0, i32 0
  %PC.i363 = bitcast %union.anon* %11529 to i64*
  %11530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11531 = getelementptr inbounds %struct.GPR, %struct.GPR* %11530, i32 0, i32 11
  %11532 = getelementptr inbounds %struct.Reg, %struct.Reg* %11531, i32 0, i32 0
  %RDI.i364 = bitcast %union.anon* %11532 to i64*
  %11533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11534 = getelementptr inbounds %struct.GPR, %struct.GPR* %11533, i32 0, i32 15
  %11535 = getelementptr inbounds %struct.Reg, %struct.Reg* %11534, i32 0, i32 0
  %RBP.i365 = bitcast %union.anon* %11535 to i64*
  %11536 = load i64, i64* %RBP.i365
  %11537 = sub i64 %11536, 12428
  %11538 = load i64, i64* %PC.i363
  %11539 = add i64 %11538, 7
  store i64 %11539, i64* %PC.i363
  store i64 %11537, i64* %RDI.i364, align 8
  store %struct.Memory* %loadMem_41b906, %struct.Memory** %MEMORY
  %loadMem_41b90d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11541 = getelementptr inbounds %struct.GPR, %struct.GPR* %11540, i32 0, i32 33
  %11542 = getelementptr inbounds %struct.Reg, %struct.Reg* %11541, i32 0, i32 0
  %PC.i360 = bitcast %union.anon* %11542 to i64*
  %11543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11544 = getelementptr inbounds %struct.GPR, %struct.GPR* %11543, i32 0, i32 1
  %11545 = getelementptr inbounds %struct.Reg, %struct.Reg* %11544, i32 0, i32 0
  %RAX.i361 = bitcast %union.anon* %11545 to i64*
  %11546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11547 = getelementptr inbounds %struct.GPR, %struct.GPR* %11546, i32 0, i32 5
  %11548 = getelementptr inbounds %struct.Reg, %struct.Reg* %11547, i32 0, i32 0
  %RCX.i362 = bitcast %union.anon* %11548 to i64*
  %11549 = load i64, i64* %RAX.i361
  %11550 = load i64, i64* %PC.i360
  %11551 = add i64 %11550, 3
  store i64 %11551, i64* %PC.i360
  %11552 = inttoptr i64 %11549 to i64*
  %11553 = load i64, i64* %11552
  store i64 %11553, i64* %RCX.i362, align 8
  store %struct.Memory* %loadMem_41b90d, %struct.Memory** %MEMORY
  %loadMem_41b910 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11555 = getelementptr inbounds %struct.GPR, %struct.GPR* %11554, i32 0, i32 33
  %11556 = getelementptr inbounds %struct.Reg, %struct.Reg* %11555, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %11556 to i64*
  %11557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11558 = getelementptr inbounds %struct.GPR, %struct.GPR* %11557, i32 0, i32 5
  %11559 = getelementptr inbounds %struct.Reg, %struct.Reg* %11558, i32 0, i32 0
  %RCX.i358 = bitcast %union.anon* %11559 to i64*
  %11560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11561 = getelementptr inbounds %struct.GPR, %struct.GPR* %11560, i32 0, i32 13
  %11562 = getelementptr inbounds %struct.Reg, %struct.Reg* %11561, i32 0, i32 0
  %RSP.i359 = bitcast %union.anon* %11562 to i64*
  %11563 = load i64, i64* %RSP.i359
  %11564 = load i64, i64* %RCX.i358
  %11565 = load i64, i64* %PC.i357
  %11566 = add i64 %11565, 4
  store i64 %11566, i64* %PC.i357
  %11567 = inttoptr i64 %11563 to i64*
  store i64 %11564, i64* %11567
  store %struct.Memory* %loadMem_41b910, %struct.Memory** %MEMORY
  %loadMem_41b914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11569 = getelementptr inbounds %struct.GPR, %struct.GPR* %11568, i32 0, i32 33
  %11570 = getelementptr inbounds %struct.Reg, %struct.Reg* %11569, i32 0, i32 0
  %PC.i354 = bitcast %union.anon* %11570 to i64*
  %11571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11572 = getelementptr inbounds %struct.GPR, %struct.GPR* %11571, i32 0, i32 1
  %11573 = getelementptr inbounds %struct.Reg, %struct.Reg* %11572, i32 0, i32 0
  %RAX.i355 = bitcast %union.anon* %11573 to i64*
  %11574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11575 = getelementptr inbounds %struct.GPR, %struct.GPR* %11574, i32 0, i32 5
  %11576 = getelementptr inbounds %struct.Reg, %struct.Reg* %11575, i32 0, i32 0
  %RCX.i356 = bitcast %union.anon* %11576 to i64*
  %11577 = load i64, i64* %RAX.i355
  %11578 = add i64 %11577, 8
  %11579 = load i64, i64* %PC.i354
  %11580 = add i64 %11579, 4
  store i64 %11580, i64* %PC.i354
  %11581 = inttoptr i64 %11578 to i64*
  %11582 = load i64, i64* %11581
  store i64 %11582, i64* %RCX.i356, align 8
  store %struct.Memory* %loadMem_41b914, %struct.Memory** %MEMORY
  %loadMem_41b918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11584 = getelementptr inbounds %struct.GPR, %struct.GPR* %11583, i32 0, i32 33
  %11585 = getelementptr inbounds %struct.Reg, %struct.Reg* %11584, i32 0, i32 0
  %PC.i351 = bitcast %union.anon* %11585 to i64*
  %11586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11587 = getelementptr inbounds %struct.GPR, %struct.GPR* %11586, i32 0, i32 5
  %11588 = getelementptr inbounds %struct.Reg, %struct.Reg* %11587, i32 0, i32 0
  %RCX.i352 = bitcast %union.anon* %11588 to i64*
  %11589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11590 = getelementptr inbounds %struct.GPR, %struct.GPR* %11589, i32 0, i32 13
  %11591 = getelementptr inbounds %struct.Reg, %struct.Reg* %11590, i32 0, i32 0
  %RSP.i353 = bitcast %union.anon* %11591 to i64*
  %11592 = load i64, i64* %RSP.i353
  %11593 = add i64 %11592, 8
  %11594 = load i64, i64* %RCX.i352
  %11595 = load i64, i64* %PC.i351
  %11596 = add i64 %11595, 5
  store i64 %11596, i64* %PC.i351
  %11597 = inttoptr i64 %11593 to i64*
  store i64 %11594, i64* %11597
  store %struct.Memory* %loadMem_41b918, %struct.Memory** %MEMORY
  %loadMem_41b91d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11599 = getelementptr inbounds %struct.GPR, %struct.GPR* %11598, i32 0, i32 33
  %11600 = getelementptr inbounds %struct.Reg, %struct.Reg* %11599, i32 0, i32 0
  %PC.i349 = bitcast %union.anon* %11600 to i64*
  %11601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11602 = getelementptr inbounds %struct.GPR, %struct.GPR* %11601, i32 0, i32 1
  %11603 = getelementptr inbounds %struct.Reg, %struct.Reg* %11602, i32 0, i32 0
  %RAX.i350 = bitcast %union.anon* %11603 to i64*
  %11604 = load i64, i64* %RAX.i350
  %11605 = add i64 %11604, 16
  %11606 = load i64, i64* %PC.i349
  %11607 = add i64 %11606, 4
  store i64 %11607, i64* %PC.i349
  %11608 = inttoptr i64 %11605 to i64*
  %11609 = load i64, i64* %11608
  store i64 %11609, i64* %RAX.i350, align 8
  store %struct.Memory* %loadMem_41b91d, %struct.Memory** %MEMORY
  %loadMem_41b921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11611 = getelementptr inbounds %struct.GPR, %struct.GPR* %11610, i32 0, i32 33
  %11612 = getelementptr inbounds %struct.Reg, %struct.Reg* %11611, i32 0, i32 0
  %PC.i346 = bitcast %union.anon* %11612 to i64*
  %11613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11614 = getelementptr inbounds %struct.GPR, %struct.GPR* %11613, i32 0, i32 1
  %11615 = getelementptr inbounds %struct.Reg, %struct.Reg* %11614, i32 0, i32 0
  %RAX.i347 = bitcast %union.anon* %11615 to i64*
  %11616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11617 = getelementptr inbounds %struct.GPR, %struct.GPR* %11616, i32 0, i32 13
  %11618 = getelementptr inbounds %struct.Reg, %struct.Reg* %11617, i32 0, i32 0
  %RSP.i348 = bitcast %union.anon* %11618 to i64*
  %11619 = load i64, i64* %RSP.i348
  %11620 = add i64 %11619, 16
  %11621 = load i64, i64* %RAX.i347
  %11622 = load i64, i64* %PC.i346
  %11623 = add i64 %11622, 5
  store i64 %11623, i64* %PC.i346
  %11624 = inttoptr i64 %11620 to i64*
  store i64 %11621, i64* %11624
  store %struct.Memory* %loadMem_41b921, %struct.Memory** %MEMORY
  %loadMem1_41b926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11626 = getelementptr inbounds %struct.GPR, %struct.GPR* %11625, i32 0, i32 33
  %11627 = getelementptr inbounds %struct.Reg, %struct.Reg* %11626, i32 0, i32 0
  %PC.i345 = bitcast %union.anon* %11627 to i64*
  %11628 = load i64, i64* %PC.i345
  %11629 = add i64 %11628, 24650
  %11630 = load i64, i64* %PC.i345
  %11631 = add i64 %11630, 5
  %11632 = load i64, i64* %PC.i345
  %11633 = add i64 %11632, 5
  store i64 %11633, i64* %PC.i345
  %11634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11635 = load i64, i64* %11634, align 8
  %11636 = add i64 %11635, -8
  %11637 = inttoptr i64 %11636 to i64*
  store i64 %11631, i64* %11637
  store i64 %11636, i64* %11634, align 8
  %11638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11629, i64* %11638, align 8
  store %struct.Memory* %loadMem1_41b926, %struct.Memory** %MEMORY
  %loadMem2_41b926 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b926 = load i64, i64* %3
  %call2_41b926 = call %struct.Memory* @sub_421970.comp_to_san(%struct.State* %0, i64 %loadPC_41b926, %struct.Memory* %loadMem2_41b926)
  store %struct.Memory* %call2_41b926, %struct.Memory** %MEMORY
  %loadMem_41b92b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11640 = getelementptr inbounds %struct.GPR, %struct.GPR* %11639, i32 0, i32 33
  %11641 = getelementptr inbounds %struct.Reg, %struct.Reg* %11640, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %11641 to i64*
  %11642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11643 = getelementptr inbounds %struct.GPR, %struct.GPR* %11642, i32 0, i32 11
  %11644 = getelementptr inbounds %struct.Reg, %struct.Reg* %11643, i32 0, i32 0
  %RDI.i344 = bitcast %union.anon* %11644 to i64*
  %11645 = load i64, i64* %PC.i343
  %11646 = add i64 %11645, 10
  store i64 %11646, i64* %PC.i343
  store i64 ptrtoint (%G__0x4290cd_type* @G__0x4290cd to i64), i64* %RDI.i344, align 8
  store %struct.Memory* %loadMem_41b92b, %struct.Memory** %MEMORY
  %loadMem_41b935 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11648 = getelementptr inbounds %struct.GPR, %struct.GPR* %11647, i32 0, i32 33
  %11649 = getelementptr inbounds %struct.Reg, %struct.Reg* %11648, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %11649 to i64*
  %11650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11651 = getelementptr inbounds %struct.GPR, %struct.GPR* %11650, i32 0, i32 7
  %11652 = getelementptr inbounds %struct.Reg, %struct.Reg* %11651, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %11652 to i64*
  %11653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11654 = getelementptr inbounds %struct.GPR, %struct.GPR* %11653, i32 0, i32 15
  %11655 = getelementptr inbounds %struct.Reg, %struct.Reg* %11654, i32 0, i32 0
  %RBP.i342 = bitcast %union.anon* %11655 to i64*
  %11656 = load i64, i64* %RBP.i342
  %11657 = sub i64 %11656, 12428
  %11658 = load i64, i64* %PC.i341
  %11659 = add i64 %11658, 7
  store i64 %11659, i64* %PC.i341
  store i64 %11657, i64* %RDX.i, align 8
  store %struct.Memory* %loadMem_41b935, %struct.Memory** %MEMORY
  %loadMem_41b93c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11661 = getelementptr inbounds %struct.GPR, %struct.GPR* %11660, i32 0, i32 33
  %11662 = getelementptr inbounds %struct.Reg, %struct.Reg* %11661, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %11662 to i64*
  %11663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11664 = getelementptr inbounds %struct.GPR, %struct.GPR* %11663, i32 0, i32 9
  %11665 = getelementptr inbounds %struct.Reg, %struct.Reg* %11664, i32 0, i32 0
  %RSI.i339 = bitcast %union.anon* %11665 to i64*
  %11666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11667 = getelementptr inbounds %struct.GPR, %struct.GPR* %11666, i32 0, i32 15
  %11668 = getelementptr inbounds %struct.Reg, %struct.Reg* %11667, i32 0, i32 0
  %RBP.i340 = bitcast %union.anon* %11668 to i64*
  %11669 = load i64, i64* %RBP.i340
  %11670 = sub i64 %11669, 12416
  %11671 = load i64, i64* %PC.i338
  %11672 = add i64 %11671, 6
  store i64 %11672, i64* %PC.i338
  %11673 = inttoptr i64 %11670 to i32*
  %11674 = load i32, i32* %11673
  %11675 = zext i32 %11674 to i64
  store i64 %11675, i64* %RSI.i339, align 8
  store %struct.Memory* %loadMem_41b93c, %struct.Memory** %MEMORY
  %loadMem_41b942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11677 = getelementptr inbounds %struct.GPR, %struct.GPR* %11676, i32 0, i32 33
  %11678 = getelementptr inbounds %struct.Reg, %struct.Reg* %11677, i32 0, i32 0
  %PC.i336 = bitcast %union.anon* %11678 to i64*
  %11679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11680 = getelementptr inbounds %struct.GPR, %struct.GPR* %11679, i32 0, i32 1
  %11681 = getelementptr inbounds %struct.Reg, %struct.Reg* %11680, i32 0, i32 0
  %11682 = bitcast %union.anon* %11681 to %struct.anon.2*
  %AL.i337 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %11682, i32 0, i32 0
  %11683 = load i64, i64* %PC.i336
  %11684 = add i64 %11683, 2
  store i64 %11684, i64* %PC.i336
  store i8 0, i8* %AL.i337, align 1
  store %struct.Memory* %loadMem_41b942, %struct.Memory** %MEMORY
  %loadMem1_41b944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11686 = getelementptr inbounds %struct.GPR, %struct.GPR* %11685, i32 0, i32 33
  %11687 = getelementptr inbounds %struct.Reg, %struct.Reg* %11686, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %11687 to i64*
  %11688 = load i64, i64* %PC.i335
  %11689 = add i64 %11688, -109716
  %11690 = load i64, i64* %PC.i335
  %11691 = add i64 %11690, 5
  %11692 = load i64, i64* %PC.i335
  %11693 = add i64 %11692, 5
  store i64 %11693, i64* %PC.i335
  %11694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11695 = load i64, i64* %11694, align 8
  %11696 = add i64 %11695, -8
  %11697 = inttoptr i64 %11696 to i64*
  store i64 %11691, i64* %11697
  store i64 %11696, i64* %11694, align 8
  %11698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11689, i64* %11698, align 8
  store %struct.Memory* %loadMem1_41b944, %struct.Memory** %MEMORY
  %loadMem2_41b944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b944 = load i64, i64* %3
  %11699 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41b944)
  store %struct.Memory* %11699, %struct.Memory** %MEMORY
  %loadMem_41b949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11701 = getelementptr inbounds %struct.GPR, %struct.GPR* %11700, i32 0, i32 33
  %11702 = getelementptr inbounds %struct.Reg, %struct.Reg* %11701, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %11702 to i64*
  %11703 = load i64, i64* %PC.i333
  %11704 = add i64 %11703, 11
  store i64 %11704, i64* %PC.i333
  store i32 0, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  store %struct.Memory* %loadMem_41b949, %struct.Memory** %MEMORY
  %loadMem_41b954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11706 = getelementptr inbounds %struct.GPR, %struct.GPR* %11705, i32 0, i32 33
  %11707 = getelementptr inbounds %struct.Reg, %struct.Reg* %11706, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %11707 to i64*
  %11708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11709 = getelementptr inbounds %struct.GPR, %struct.GPR* %11708, i32 0, i32 1
  %11710 = getelementptr inbounds %struct.Reg, %struct.Reg* %11709, i32 0, i32 0
  %EAX.i331 = bitcast %union.anon* %11710 to i32*
  %11711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11712 = getelementptr inbounds %struct.GPR, %struct.GPR* %11711, i32 0, i32 15
  %11713 = getelementptr inbounds %struct.Reg, %struct.Reg* %11712, i32 0, i32 0
  %RBP.i332 = bitcast %union.anon* %11713 to i64*
  %11714 = load i64, i64* %RBP.i332
  %11715 = sub i64 %11714, 12576
  %11716 = load i32, i32* %EAX.i331
  %11717 = zext i32 %11716 to i64
  %11718 = load i64, i64* %PC.i330
  %11719 = add i64 %11718, 6
  store i64 %11719, i64* %PC.i330
  %11720 = inttoptr i64 %11715 to i32*
  store i32 %11716, i32* %11720
  store %struct.Memory* %loadMem_41b954, %struct.Memory** %MEMORY
  br label %block_.L_41b95a

block_.L_41b95a:                                  ; preds = %block_41b902, %block_41b8f4, %block_.L_41b8e7
  %loadMem1_41b95a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11722 = getelementptr inbounds %struct.GPR, %struct.GPR* %11721, i32 0, i32 33
  %11723 = getelementptr inbounds %struct.Reg, %struct.Reg* %11722, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %11723 to i64*
  %11724 = load i64, i64* %PC.i329
  %11725 = add i64 %11724, 32262
  %11726 = load i64, i64* %PC.i329
  %11727 = add i64 %11726, 5
  %11728 = load i64, i64* %PC.i329
  %11729 = add i64 %11728, 5
  store i64 %11729, i64* %PC.i329
  %11730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11731 = load i64, i64* %11730, align 8
  %11732 = add i64 %11731, -8
  %11733 = inttoptr i64 %11732 to i64*
  store i64 %11727, i64* %11733
  store i64 %11732, i64* %11730, align 8
  %11734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11725, i64* %11734, align 8
  store %struct.Memory* %loadMem1_41b95a, %struct.Memory** %MEMORY
  %loadMem2_41b95a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b95a = load i64, i64* %3
  %call2_41b95a = call %struct.Memory* @sub_423760.rtime(%struct.State* %0, i64 %loadPC_41b95a, %struct.Memory* %loadMem2_41b95a)
  store %struct.Memory* %call2_41b95a, %struct.Memory** %MEMORY
  %loadMem_41b95f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11736 = getelementptr inbounds %struct.GPR, %struct.GPR* %11735, i32 0, i32 33
  %11737 = getelementptr inbounds %struct.Reg, %struct.Reg* %11736, i32 0, i32 0
  %PC.i327 = bitcast %union.anon* %11737 to i64*
  %11738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11739 = getelementptr inbounds %struct.GPR, %struct.GPR* %11738, i32 0, i32 9
  %11740 = getelementptr inbounds %struct.Reg, %struct.Reg* %11739, i32 0, i32 0
  %RSI.i328 = bitcast %union.anon* %11740 to i64*
  %11741 = load i64, i64* %PC.i327
  %11742 = add i64 %11741, 8
  store i64 %11742, i64* %PC.i327
  %11743 = load i64, i64* bitcast (%G_0x8662e8_type* @G_0x8662e8 to i64*)
  store i64 %11743, i64* %RSI.i328, align 8
  store %struct.Memory* %loadMem_41b95f, %struct.Memory** %MEMORY
  %loadMem_41b967 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11745 = getelementptr inbounds %struct.GPR, %struct.GPR* %11744, i32 0, i32 33
  %11746 = getelementptr inbounds %struct.Reg, %struct.Reg* %11745, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %11746 to i64*
  %11747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11748 = getelementptr inbounds %struct.GPR, %struct.GPR* %11747, i32 0, i32 1
  %11749 = getelementptr inbounds %struct.Reg, %struct.Reg* %11748, i32 0, i32 0
  %RAX.i325 = bitcast %union.anon* %11749 to i64*
  %11750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11751 = getelementptr inbounds %struct.GPR, %struct.GPR* %11750, i32 0, i32 11
  %11752 = getelementptr inbounds %struct.Reg, %struct.Reg* %11751, i32 0, i32 0
  %RDI.i326 = bitcast %union.anon* %11752 to i64*
  %11753 = load i64, i64* %RAX.i325
  %11754 = load i64, i64* %PC.i324
  %11755 = add i64 %11754, 3
  store i64 %11755, i64* %PC.i324
  store i64 %11753, i64* %RDI.i326, align 8
  store %struct.Memory* %loadMem_41b967, %struct.Memory** %MEMORY
  %loadMem1_41b96a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11757 = getelementptr inbounds %struct.GPR, %struct.GPR* %11756, i32 0, i32 33
  %11758 = getelementptr inbounds %struct.Reg, %struct.Reg* %11757, i32 0, i32 0
  %PC.i323 = bitcast %union.anon* %11758 to i64*
  %11759 = load i64, i64* %PC.i323
  %11760 = add i64 %11759, 32262
  %11761 = load i64, i64* %PC.i323
  %11762 = add i64 %11761, 5
  %11763 = load i64, i64* %PC.i323
  %11764 = add i64 %11763, 5
  store i64 %11764, i64* %PC.i323
  %11765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %11766 = load i64, i64* %11765, align 8
  %11767 = add i64 %11766, -8
  %11768 = inttoptr i64 %11767 to i64*
  store i64 %11762, i64* %11768
  store i64 %11767, i64* %11765, align 8
  %11769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11760, i64* %11769, align 8
  store %struct.Memory* %loadMem1_41b96a, %struct.Memory** %MEMORY
  %loadMem2_41b96a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41b96a = load i64, i64* %3
  %call2_41b96a = call %struct.Memory* @sub_423770.rdifftime(%struct.State* %0, i64 %loadPC_41b96a, %struct.Memory* %loadMem2_41b96a)
  store %struct.Memory* %call2_41b96a, %struct.Memory** %MEMORY
  %loadMem_41b96f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11771 = getelementptr inbounds %struct.GPR, %struct.GPR* %11770, i32 0, i32 33
  %11772 = getelementptr inbounds %struct.Reg, %struct.Reg* %11771, i32 0, i32 0
  %PC.i320 = bitcast %union.anon* %11772 to i64*
  %11773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11774 = getelementptr inbounds %struct.GPR, %struct.GPR* %11773, i32 0, i32 1
  %11775 = getelementptr inbounds %struct.Reg, %struct.Reg* %11774, i32 0, i32 0
  %EAX.i321 = bitcast %union.anon* %11775 to i32*
  %11776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11777 = getelementptr inbounds %struct.GPR, %struct.GPR* %11776, i32 0, i32 15
  %11778 = getelementptr inbounds %struct.Reg, %struct.Reg* %11777, i32 0, i32 0
  %RBP.i322 = bitcast %union.anon* %11778 to i64*
  %11779 = load i64, i64* %RBP.i322
  %11780 = sub i64 %11779, 88
  %11781 = load i32, i32* %EAX.i321
  %11782 = zext i32 %11781 to i64
  %11783 = load i64, i64* %PC.i320
  %11784 = add i64 %11783, 3
  store i64 %11784, i64* %PC.i320
  %11785 = inttoptr i64 %11780 to i32*
  store i32 %11781, i32* %11785
  store %struct.Memory* %loadMem_41b96f, %struct.Memory** %MEMORY
  %loadMem_41b972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11787 = getelementptr inbounds %struct.GPR, %struct.GPR* %11786, i32 0, i32 33
  %11788 = getelementptr inbounds %struct.Reg, %struct.Reg* %11787, i32 0, i32 0
  %PC.i317 = bitcast %union.anon* %11788 to i64*
  %11789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11790 = getelementptr inbounds %struct.GPR, %struct.GPR* %11789, i32 0, i32 1
  %11791 = getelementptr inbounds %struct.Reg, %struct.Reg* %11790, i32 0, i32 0
  %RAX.i318 = bitcast %union.anon* %11791 to i64*
  %11792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11793 = getelementptr inbounds %struct.GPR, %struct.GPR* %11792, i32 0, i32 15
  %11794 = getelementptr inbounds %struct.Reg, %struct.Reg* %11793, i32 0, i32 0
  %RBP.i319 = bitcast %union.anon* %11794 to i64*
  %11795 = load i64, i64* %RBP.i319
  %11796 = sub i64 %11795, 88
  %11797 = load i64, i64* %PC.i317
  %11798 = add i64 %11797, 3
  store i64 %11798, i64* %PC.i317
  %11799 = inttoptr i64 %11796 to i32*
  %11800 = load i32, i32* %11799
  %11801 = zext i32 %11800 to i64
  store i64 %11801, i64* %RAX.i318, align 8
  store %struct.Memory* %loadMem_41b972, %struct.Memory** %MEMORY
  %loadMem_41b975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11803 = getelementptr inbounds %struct.GPR, %struct.GPR* %11802, i32 0, i32 33
  %11804 = getelementptr inbounds %struct.Reg, %struct.Reg* %11803, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %11804 to i64*
  %11805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11806 = getelementptr inbounds %struct.GPR, %struct.GPR* %11805, i32 0, i32 5
  %11807 = getelementptr inbounds %struct.Reg, %struct.Reg* %11806, i32 0, i32 0
  %RCX.i316 = bitcast %union.anon* %11807 to i64*
  %11808 = load i64, i64* %PC.i315
  %11809 = add i64 %11808, 7
  store i64 %11809, i64* %PC.i315
  %11810 = load i32, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*)
  %11811 = zext i32 %11810 to i64
  store i64 %11811, i64* %RCX.i316, align 8
  store %struct.Memory* %loadMem_41b975, %struct.Memory** %MEMORY
  %loadMem_41b97c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11813 = getelementptr inbounds %struct.GPR, %struct.GPR* %11812, i32 0, i32 33
  %11814 = getelementptr inbounds %struct.Reg, %struct.Reg* %11813, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %11814 to i64*
  %11815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11816 = getelementptr inbounds %struct.GPR, %struct.GPR* %11815, i32 0, i32 1
  %11817 = getelementptr inbounds %struct.Reg, %struct.Reg* %11816, i32 0, i32 0
  %EAX.i313 = bitcast %union.anon* %11817 to i32*
  %11818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11819 = getelementptr inbounds %struct.GPR, %struct.GPR* %11818, i32 0, i32 5
  %11820 = getelementptr inbounds %struct.Reg, %struct.Reg* %11819, i32 0, i32 0
  %RCX.i314 = bitcast %union.anon* %11820 to i64*
  %11821 = load i64, i64* %RCX.i314
  %11822 = load i32, i32* %EAX.i313
  %11823 = zext i32 %11822 to i64
  %11824 = load i64, i64* %PC.i312
  %11825 = add i64 %11824, 2
  store i64 %11825, i64* %PC.i312
  %11826 = trunc i64 %11821 to i32
  %11827 = sub i32 %11826, %11822
  %11828 = zext i32 %11827 to i64
  store i64 %11828, i64* %RCX.i314, align 8
  %11829 = icmp ult i32 %11826, %11822
  %11830 = zext i1 %11829 to i8
  %11831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11830, i8* %11831, align 1
  %11832 = and i32 %11827, 255
  %11833 = call i32 @llvm.ctpop.i32(i32 %11832)
  %11834 = trunc i32 %11833 to i8
  %11835 = and i8 %11834, 1
  %11836 = xor i8 %11835, 1
  %11837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11836, i8* %11837, align 1
  %11838 = xor i64 %11823, %11821
  %11839 = trunc i64 %11838 to i32
  %11840 = xor i32 %11839, %11827
  %11841 = lshr i32 %11840, 4
  %11842 = trunc i32 %11841 to i8
  %11843 = and i8 %11842, 1
  %11844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11843, i8* %11844, align 1
  %11845 = icmp eq i32 %11827, 0
  %11846 = zext i1 %11845 to i8
  %11847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11846, i8* %11847, align 1
  %11848 = lshr i32 %11827, 31
  %11849 = trunc i32 %11848 to i8
  %11850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11849, i8* %11850, align 1
  %11851 = lshr i32 %11826, 31
  %11852 = lshr i32 %11822, 31
  %11853 = xor i32 %11852, %11851
  %11854 = xor i32 %11848, %11851
  %11855 = add i32 %11854, %11853
  %11856 = icmp eq i32 %11855, 2
  %11857 = zext i1 %11856 to i8
  %11858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11857, i8* %11858, align 1
  store %struct.Memory* %loadMem_41b97c, %struct.Memory** %MEMORY
  %loadMem_41b97e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11860 = getelementptr inbounds %struct.GPR, %struct.GPR* %11859, i32 0, i32 33
  %11861 = getelementptr inbounds %struct.Reg, %struct.Reg* %11860, i32 0, i32 0
  %PC.i310 = bitcast %union.anon* %11861 to i64*
  %11862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11863 = getelementptr inbounds %struct.GPR, %struct.GPR* %11862, i32 0, i32 5
  %11864 = getelementptr inbounds %struct.Reg, %struct.Reg* %11863, i32 0, i32 0
  %ECX.i311 = bitcast %union.anon* %11864 to i32*
  %11865 = load i32, i32* %ECX.i311
  %11866 = zext i32 %11865 to i64
  %11867 = load i64, i64* %PC.i310
  %11868 = add i64 %11867, 7
  store i64 %11868, i64* %PC.i310
  store i32 %11865, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*)
  store %struct.Memory* %loadMem_41b97e, %struct.Memory** %MEMORY
  %loadMem_41b985 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11870 = getelementptr inbounds %struct.GPR, %struct.GPR* %11869, i32 0, i32 33
  %11871 = getelementptr inbounds %struct.Reg, %struct.Reg* %11870, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %11871 to i64*
  %11872 = load i64, i64* %PC.i309
  %11873 = add i64 %11872, 8
  store i64 %11873, i64* %PC.i309
  %11874 = load i32, i32* bitcast (%G_0x8661d8_type* @G_0x8661d8 to i32*)
  %11875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11875, align 1
  %11876 = and i32 %11874, 255
  %11877 = call i32 @llvm.ctpop.i32(i32 %11876)
  %11878 = trunc i32 %11877 to i8
  %11879 = and i8 %11878, 1
  %11880 = xor i8 %11879, 1
  %11881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11880, i8* %11881, align 1
  %11882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11882, align 1
  %11883 = icmp eq i32 %11874, 0
  %11884 = zext i1 %11883 to i8
  %11885 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11884, i8* %11885, align 1
  %11886 = lshr i32 %11874, 31
  %11887 = trunc i32 %11886 to i8
  %11888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11887, i8* %11888, align 1
  %11889 = lshr i32 %11874, 31
  %11890 = xor i32 %11886, %11889
  %11891 = add i32 %11890, %11889
  %11892 = icmp eq i32 %11891, 2
  %11893 = zext i1 %11892 to i8
  %11894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11893, i8* %11894, align 1
  store %struct.Memory* %loadMem_41b985, %struct.Memory** %MEMORY
  %loadMem_41b98d = load %struct.Memory*, %struct.Memory** %MEMORY
  %11895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11896 = getelementptr inbounds %struct.GPR, %struct.GPR* %11895, i32 0, i32 33
  %11897 = getelementptr inbounds %struct.Reg, %struct.Reg* %11896, i32 0, i32 0
  %PC.i308 = bitcast %union.anon* %11897 to i64*
  %11898 = load i64, i64* %PC.i308
  %11899 = add i64 %11898, 51
  %11900 = load i64, i64* %PC.i308
  %11901 = add i64 %11900, 6
  %11902 = load i64, i64* %PC.i308
  %11903 = add i64 %11902, 6
  store i64 %11903, i64* %PC.i308
  %11904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11905 = load i8, i8* %11904, align 1
  store i8 %11905, i8* %BRANCH_TAKEN, align 1
  %11906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11907 = icmp ne i8 %11905, 0
  %11908 = select i1 %11907, i64 %11899, i64 %11901
  store i64 %11908, i64* %11906, align 8
  store %struct.Memory* %loadMem_41b98d, %struct.Memory** %MEMORY
  %loadBr_41b98d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b98d = icmp eq i8 %loadBr_41b98d, 1
  br i1 %cmpBr_41b98d, label %block_.L_41b9c0, label %block_41b993

block_41b993:                                     ; preds = %block_.L_41b95a
  %loadMem_41b993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11910 = getelementptr inbounds %struct.GPR, %struct.GPR* %11909, i32 0, i32 33
  %11911 = getelementptr inbounds %struct.Reg, %struct.Reg* %11910, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %11911 to i64*
  %11912 = load i64, i64* %PC.i307
  %11913 = add i64 %11912, 8
  store i64 %11913, i64* %PC.i307
  %11914 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %11915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %11915, align 1
  %11916 = and i32 %11914, 255
  %11917 = call i32 @llvm.ctpop.i32(i32 %11916)
  %11918 = trunc i32 %11917 to i8
  %11919 = and i8 %11918, 1
  %11920 = xor i8 %11919, 1
  %11921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11920, i8* %11921, align 1
  %11922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11922, align 1
  %11923 = icmp eq i32 %11914, 0
  %11924 = zext i1 %11923 to i8
  %11925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11924, i8* %11925, align 1
  %11926 = lshr i32 %11914, 31
  %11927 = trunc i32 %11926 to i8
  %11928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11927, i8* %11928, align 1
  %11929 = lshr i32 %11914, 31
  %11930 = xor i32 %11926, %11929
  %11931 = add i32 %11930, %11929
  %11932 = icmp eq i32 %11931, 2
  %11933 = zext i1 %11932 to i8
  %11934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11933, i8* %11934, align 1
  store %struct.Memory* %loadMem_41b993, %struct.Memory** %MEMORY
  %loadMem_41b99b = load %struct.Memory*, %struct.Memory** %MEMORY
  %11935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11936 = getelementptr inbounds %struct.GPR, %struct.GPR* %11935, i32 0, i32 33
  %11937 = getelementptr inbounds %struct.Reg, %struct.Reg* %11936, i32 0, i32 0
  %PC.i306 = bitcast %union.anon* %11937 to i64*
  %11938 = load i64, i64* %PC.i306
  %11939 = add i64 %11938, 37
  %11940 = load i64, i64* %PC.i306
  %11941 = add i64 %11940, 6
  %11942 = load i64, i64* %PC.i306
  %11943 = add i64 %11942, 6
  store i64 %11943, i64* %PC.i306
  %11944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11945 = load i8, i8* %11944, align 1
  %11946 = icmp eq i8 %11945, 0
  %11947 = zext i1 %11946 to i8
  store i8 %11947, i8* %BRANCH_TAKEN, align 1
  %11948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11949 = select i1 %11946, i64 %11939, i64 %11941
  store i64 %11949, i64* %11948, align 8
  store %struct.Memory* %loadMem_41b99b, %struct.Memory** %MEMORY
  %loadBr_41b99b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b99b = icmp eq i8 %loadBr_41b99b, 1
  br i1 %cmpBr_41b99b, label %block_.L_41b9c0, label %block_41b9a1

block_41b9a1:                                     ; preds = %block_41b993
  %loadMem_41b9a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11951 = getelementptr inbounds %struct.GPR, %struct.GPR* %11950, i32 0, i32 33
  %11952 = getelementptr inbounds %struct.Reg, %struct.Reg* %11951, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %11952 to i64*
  %11953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11954 = getelementptr inbounds %struct.GPR, %struct.GPR* %11953, i32 0, i32 1
  %11955 = getelementptr inbounds %struct.Reg, %struct.Reg* %11954, i32 0, i32 0
  %RAX.i305 = bitcast %union.anon* %11955 to i64*
  %11956 = load i64, i64* %PC.i304
  %11957 = add i64 %11956, 7
  store i64 %11957, i64* %PC.i304
  %11958 = load i32, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  %11959 = zext i32 %11958 to i64
  store i64 %11959, i64* %RAX.i305, align 8
  store %struct.Memory* %loadMem_41b9a1, %struct.Memory** %MEMORY
  %loadMem_41b9a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11961 = getelementptr inbounds %struct.GPR, %struct.GPR* %11960, i32 0, i32 33
  %11962 = getelementptr inbounds %struct.Reg, %struct.Reg* %11961, i32 0, i32 0
  %PC.i301 = bitcast %union.anon* %11962 to i64*
  %11963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11964 = getelementptr inbounds %struct.GPR, %struct.GPR* %11963, i32 0, i32 1
  %11965 = getelementptr inbounds %struct.Reg, %struct.Reg* %11964, i32 0, i32 0
  %RAX.i302 = bitcast %union.anon* %11965 to i64*
  %11966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11967 = getelementptr inbounds %struct.GPR, %struct.GPR* %11966, i32 0, i32 15
  %11968 = getelementptr inbounds %struct.Reg, %struct.Reg* %11967, i32 0, i32 0
  %RBP.i303 = bitcast %union.anon* %11968 to i64*
  %11969 = load i64, i64* %RAX.i302
  %11970 = load i64, i64* %RBP.i303
  %11971 = sub i64 %11970, 88
  %11972 = load i64, i64* %PC.i301
  %11973 = add i64 %11972, 3
  store i64 %11973, i64* %PC.i301
  %11974 = trunc i64 %11969 to i32
  %11975 = inttoptr i64 %11971 to i32*
  %11976 = load i32, i32* %11975
  %11977 = sub i32 %11974, %11976
  %11978 = zext i32 %11977 to i64
  store i64 %11978, i64* %RAX.i302, align 8
  %11979 = icmp ult i32 %11974, %11976
  %11980 = zext i1 %11979 to i8
  %11981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11980, i8* %11981, align 1
  %11982 = and i32 %11977, 255
  %11983 = call i32 @llvm.ctpop.i32(i32 %11982)
  %11984 = trunc i32 %11983 to i8
  %11985 = and i8 %11984, 1
  %11986 = xor i8 %11985, 1
  %11987 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11986, i8* %11987, align 1
  %11988 = xor i32 %11976, %11974
  %11989 = xor i32 %11988, %11977
  %11990 = lshr i32 %11989, 4
  %11991 = trunc i32 %11990 to i8
  %11992 = and i8 %11991, 1
  %11993 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11992, i8* %11993, align 1
  %11994 = icmp eq i32 %11977, 0
  %11995 = zext i1 %11994 to i8
  %11996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11995, i8* %11996, align 1
  %11997 = lshr i32 %11977, 31
  %11998 = trunc i32 %11997 to i8
  %11999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11998, i8* %11999, align 1
  %12000 = lshr i32 %11974, 31
  %12001 = lshr i32 %11976, 31
  %12002 = xor i32 %12001, %12000
  %12003 = xor i32 %11997, %12000
  %12004 = add i32 %12003, %12002
  %12005 = icmp eq i32 %12004, 2
  %12006 = zext i1 %12005 to i8
  %12007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12006, i8* %12007, align 1
  store %struct.Memory* %loadMem_41b9a8, %struct.Memory** %MEMORY
  %loadMem_41b9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %12008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12009 = getelementptr inbounds %struct.GPR, %struct.GPR* %12008, i32 0, i32 33
  %12010 = getelementptr inbounds %struct.Reg, %struct.Reg* %12009, i32 0, i32 0
  %PC.i299 = bitcast %union.anon* %12010 to i64*
  %12011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12012 = getelementptr inbounds %struct.GPR, %struct.GPR* %12011, i32 0, i32 1
  %12013 = getelementptr inbounds %struct.Reg, %struct.Reg* %12012, i32 0, i32 0
  %RAX.i300 = bitcast %union.anon* %12013 to i64*
  %12014 = load i64, i64* %RAX.i300
  %12015 = load i64, i64* %PC.i299
  %12016 = add i64 %12015, 7
  store i64 %12016, i64* %PC.i299
  %12017 = trunc i64 %12014 to i32
  %12018 = load i32, i32* bitcast (%G_0x8a0a78_type* @G_0x8a0a78 to i32*)
  %12019 = add i32 %12018, %12017
  %12020 = zext i32 %12019 to i64
  store i64 %12020, i64* %RAX.i300, align 8
  %12021 = icmp ult i32 %12019, %12017
  %12022 = icmp ult i32 %12019, %12018
  %12023 = or i1 %12021, %12022
  %12024 = zext i1 %12023 to i8
  %12025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12024, i8* %12025, align 1
  %12026 = and i32 %12019, 255
  %12027 = call i32 @llvm.ctpop.i32(i32 %12026)
  %12028 = trunc i32 %12027 to i8
  %12029 = and i8 %12028, 1
  %12030 = xor i8 %12029, 1
  %12031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12030, i8* %12031, align 1
  %12032 = xor i32 %12018, %12017
  %12033 = xor i32 %12032, %12019
  %12034 = lshr i32 %12033, 4
  %12035 = trunc i32 %12034 to i8
  %12036 = and i8 %12035, 1
  %12037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12036, i8* %12037, align 1
  %12038 = icmp eq i32 %12019, 0
  %12039 = zext i1 %12038 to i8
  %12040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12039, i8* %12040, align 1
  %12041 = lshr i32 %12019, 31
  %12042 = trunc i32 %12041 to i8
  %12043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12042, i8* %12043, align 1
  %12044 = lshr i32 %12017, 31
  %12045 = lshr i32 %12018, 31
  %12046 = xor i32 %12041, %12044
  %12047 = xor i32 %12041, %12045
  %12048 = add i32 %12046, %12047
  %12049 = icmp eq i32 %12048, 2
  %12050 = zext i1 %12049 to i8
  %12051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12050, i8* %12051, align 1
  store %struct.Memory* %loadMem_41b9ab, %struct.Memory** %MEMORY
  %loadMem_41b9b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12053 = getelementptr inbounds %struct.GPR, %struct.GPR* %12052, i32 0, i32 33
  %12054 = getelementptr inbounds %struct.Reg, %struct.Reg* %12053, i32 0, i32 0
  %PC.i297 = bitcast %union.anon* %12054 to i64*
  %12055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12056 = getelementptr inbounds %struct.GPR, %struct.GPR* %12055, i32 0, i32 1
  %12057 = getelementptr inbounds %struct.Reg, %struct.Reg* %12056, i32 0, i32 0
  %RAX.i298 = bitcast %union.anon* %12057 to i64*
  %12058 = load i64, i64* %RAX.i298
  %12059 = load i64, i64* %PC.i297
  %12060 = add i64 %12059, 7
  store i64 %12060, i64* %PC.i297
  %12061 = trunc i64 %12058 to i32
  %12062 = load i32, i32* bitcast (%G_0x86bd88_type* @G_0x86bd88 to i32*)
  %12063 = add i32 %12062, %12061
  %12064 = zext i32 %12063 to i64
  store i64 %12064, i64* %RAX.i298, align 8
  %12065 = icmp ult i32 %12063, %12061
  %12066 = icmp ult i32 %12063, %12062
  %12067 = or i1 %12065, %12066
  %12068 = zext i1 %12067 to i8
  %12069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12068, i8* %12069, align 1
  %12070 = and i32 %12063, 255
  %12071 = call i32 @llvm.ctpop.i32(i32 %12070)
  %12072 = trunc i32 %12071 to i8
  %12073 = and i8 %12072, 1
  %12074 = xor i8 %12073, 1
  %12075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12074, i8* %12075, align 1
  %12076 = xor i32 %12062, %12061
  %12077 = xor i32 %12076, %12063
  %12078 = lshr i32 %12077, 4
  %12079 = trunc i32 %12078 to i8
  %12080 = and i8 %12079, 1
  %12081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12080, i8* %12081, align 1
  %12082 = icmp eq i32 %12063, 0
  %12083 = zext i1 %12082 to i8
  %12084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12083, i8* %12084, align 1
  %12085 = lshr i32 %12063, 31
  %12086 = trunc i32 %12085 to i8
  %12087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12086, i8* %12087, align 1
  %12088 = lshr i32 %12061, 31
  %12089 = lshr i32 %12062, 31
  %12090 = xor i32 %12085, %12088
  %12091 = xor i32 %12085, %12089
  %12092 = add i32 %12090, %12091
  %12093 = icmp eq i32 %12092, 2
  %12094 = zext i1 %12093 to i8
  %12095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12094, i8* %12095, align 1
  store %struct.Memory* %loadMem_41b9b2, %struct.Memory** %MEMORY
  %loadMem_41b9b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12097 = getelementptr inbounds %struct.GPR, %struct.GPR* %12096, i32 0, i32 33
  %12098 = getelementptr inbounds %struct.Reg, %struct.Reg* %12097, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %12098 to i64*
  %12099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12100 = getelementptr inbounds %struct.GPR, %struct.GPR* %12099, i32 0, i32 1
  %12101 = getelementptr inbounds %struct.Reg, %struct.Reg* %12100, i32 0, i32 0
  %EAX.i296 = bitcast %union.anon* %12101 to i32*
  %12102 = load i32, i32* %EAX.i296
  %12103 = zext i32 %12102 to i64
  %12104 = load i64, i64* %PC.i295
  %12105 = add i64 %12104, 7
  store i64 %12105, i64* %PC.i295
  store i32 %12102, i32* bitcast (%G_0x86bd88_type* @G_0x86bd88 to i32*)
  store %struct.Memory* %loadMem_41b9b9, %struct.Memory** %MEMORY
  br label %block_.L_41b9c0

block_.L_41b9c0:                                  ; preds = %block_41b9a1, %block_41b993, %block_.L_41b95a
  %loadMem_41b9c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12107 = getelementptr inbounds %struct.GPR, %struct.GPR* %12106, i32 0, i32 33
  %12108 = getelementptr inbounds %struct.Reg, %struct.Reg* %12107, i32 0, i32 0
  %PC.i293 = bitcast %union.anon* %12108 to i64*
  %12109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12110 = getelementptr inbounds %struct.GPR, %struct.GPR* %12109, i32 0, i32 15
  %12111 = getelementptr inbounds %struct.Reg, %struct.Reg* %12110, i32 0, i32 0
  %RBP.i294 = bitcast %union.anon* %12111 to i64*
  %12112 = load i64, i64* %RBP.i294
  %12113 = sub i64 %12112, 92
  %12114 = load i64, i64* %PC.i293
  %12115 = add i64 %12114, 7
  store i64 %12115, i64* %PC.i293
  %12116 = inttoptr i64 %12113 to i32*
  %12117 = load i32, i32* %12116
  %12118 = sub i32 %12117, 999998
  %12119 = icmp ult i32 %12117, 999998
  %12120 = zext i1 %12119 to i8
  %12121 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12120, i8* %12121, align 1
  %12122 = and i32 %12118, 255
  %12123 = call i32 @llvm.ctpop.i32(i32 %12122)
  %12124 = trunc i32 %12123 to i8
  %12125 = and i8 %12124, 1
  %12126 = xor i8 %12125, 1
  %12127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12126, i8* %12127, align 1
  %12128 = xor i32 %12117, 999998
  %12129 = xor i32 %12128, %12118
  %12130 = lshr i32 %12129, 4
  %12131 = trunc i32 %12130 to i8
  %12132 = and i8 %12131, 1
  %12133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12132, i8* %12133, align 1
  %12134 = icmp eq i32 %12118, 0
  %12135 = zext i1 %12134 to i8
  %12136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12135, i8* %12136, align 1
  %12137 = lshr i32 %12118, 31
  %12138 = trunc i32 %12137 to i8
  %12139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12138, i8* %12139, align 1
  %12140 = lshr i32 %12117, 31
  %12141 = xor i32 %12137, %12140
  %12142 = add i32 %12141, %12140
  %12143 = icmp eq i32 %12142, 2
  %12144 = zext i1 %12143 to i8
  %12145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12144, i8* %12145, align 1
  store %struct.Memory* %loadMem_41b9c0, %struct.Memory** %MEMORY
  %loadMem_41b9c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12147 = getelementptr inbounds %struct.GPR, %struct.GPR* %12146, i32 0, i32 33
  %12148 = getelementptr inbounds %struct.Reg, %struct.Reg* %12147, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %12148 to i64*
  %12149 = load i64, i64* %PC.i292
  %12150 = add i64 %12149, 66
  %12151 = load i64, i64* %PC.i292
  %12152 = add i64 %12151, 6
  %12153 = load i64, i64* %PC.i292
  %12154 = add i64 %12153, 6
  store i64 %12154, i64* %PC.i292
  %12155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12156 = load i8, i8* %12155, align 1
  %12157 = icmp eq i8 %12156, 0
  %12158 = zext i1 %12157 to i8
  store i8 %12158, i8* %BRANCH_TAKEN, align 1
  %12159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12160 = select i1 %12157, i64 %12150, i64 %12152
  store i64 %12160, i64* %12159, align 8
  store %struct.Memory* %loadMem_41b9c7, %struct.Memory** %MEMORY
  %loadBr_41b9c7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b9c7 = icmp eq i8 %loadBr_41b9c7, 1
  br i1 %cmpBr_41b9c7, label %block_.L_41ba09, label %block_41b9cd

block_41b9cd:                                     ; preds = %block_.L_41b9c0
  %loadMem_41b9cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12161 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12162 = getelementptr inbounds %struct.GPR, %struct.GPR* %12161, i32 0, i32 33
  %12163 = getelementptr inbounds %struct.Reg, %struct.Reg* %12162, i32 0, i32 0
  %PC.i291 = bitcast %union.anon* %12163 to i64*
  %12164 = load i64, i64* %PC.i291
  %12165 = add i64 %12164, 8
  store i64 %12165, i64* %PC.i291
  %12166 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %12167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12167, align 1
  %12168 = and i32 %12166, 255
  %12169 = call i32 @llvm.ctpop.i32(i32 %12168)
  %12170 = trunc i32 %12169 to i8
  %12171 = and i8 %12170, 1
  %12172 = xor i8 %12171, 1
  %12173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12172, i8* %12173, align 1
  %12174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12174, align 1
  %12175 = icmp eq i32 %12166, 0
  %12176 = zext i1 %12175 to i8
  %12177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12176, i8* %12177, align 1
  %12178 = lshr i32 %12166, 31
  %12179 = trunc i32 %12178 to i8
  %12180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12179, i8* %12180, align 1
  %12181 = lshr i32 %12166, 31
  %12182 = xor i32 %12178, %12181
  %12183 = add i32 %12182, %12181
  %12184 = icmp eq i32 %12183, 2
  %12185 = zext i1 %12184 to i8
  %12186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12185, i8* %12186, align 1
  store %struct.Memory* %loadMem_41b9cd, %struct.Memory** %MEMORY
  %loadMem_41b9d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12188 = getelementptr inbounds %struct.GPR, %struct.GPR* %12187, i32 0, i32 33
  %12189 = getelementptr inbounds %struct.Reg, %struct.Reg* %12188, i32 0, i32 0
  %PC.i290 = bitcast %union.anon* %12189 to i64*
  %12190 = load i64, i64* %PC.i290
  %12191 = add i64 %12190, 52
  %12192 = load i64, i64* %PC.i290
  %12193 = add i64 %12192, 6
  %12194 = load i64, i64* %PC.i290
  %12195 = add i64 %12194, 6
  store i64 %12195, i64* %PC.i290
  %12196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12197 = load i8, i8* %12196, align 1
  %12198 = icmp eq i8 %12197, 0
  %12199 = zext i1 %12198 to i8
  store i8 %12199, i8* %BRANCH_TAKEN, align 1
  %12200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12201 = select i1 %12198, i64 %12191, i64 %12193
  store i64 %12201, i64* %12200, align 8
  store %struct.Memory* %loadMem_41b9d5, %struct.Memory** %MEMORY
  %loadBr_41b9d5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b9d5 = icmp eq i8 %loadBr_41b9d5, 1
  br i1 %cmpBr_41b9d5, label %block_.L_41ba09, label %block_41b9db

block_41b9db:                                     ; preds = %block_41b9cd
  %loadMem_41b9db = load %struct.Memory*, %struct.Memory** %MEMORY
  %12202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12203 = getelementptr inbounds %struct.GPR, %struct.GPR* %12202, i32 0, i32 33
  %12204 = getelementptr inbounds %struct.Reg, %struct.Reg* %12203, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %12204 to i64*
  %12205 = load i64, i64* %PC.i289
  %12206 = add i64 %12205, 8
  store i64 %12206, i64* %PC.i289
  %12207 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %12208 = sub i32 %12207, 1
  %12209 = icmp ult i32 %12207, 1
  %12210 = zext i1 %12209 to i8
  %12211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12210, i8* %12211, align 1
  %12212 = and i32 %12208, 255
  %12213 = call i32 @llvm.ctpop.i32(i32 %12212)
  %12214 = trunc i32 %12213 to i8
  %12215 = and i8 %12214, 1
  %12216 = xor i8 %12215, 1
  %12217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12216, i8* %12217, align 1
  %12218 = xor i32 %12207, 1
  %12219 = xor i32 %12218, %12208
  %12220 = lshr i32 %12219, 4
  %12221 = trunc i32 %12220 to i8
  %12222 = and i8 %12221, 1
  %12223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12222, i8* %12223, align 1
  %12224 = icmp eq i32 %12208, 0
  %12225 = zext i1 %12224 to i8
  %12226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12225, i8* %12226, align 1
  %12227 = lshr i32 %12208, 31
  %12228 = trunc i32 %12227 to i8
  %12229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12228, i8* %12229, align 1
  %12230 = lshr i32 %12207, 31
  %12231 = xor i32 %12227, %12230
  %12232 = add i32 %12231, %12230
  %12233 = icmp eq i32 %12232, 2
  %12234 = zext i1 %12233 to i8
  %12235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12234, i8* %12235, align 1
  store %struct.Memory* %loadMem_41b9db, %struct.Memory** %MEMORY
  %loadMem_41b9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12237 = getelementptr inbounds %struct.GPR, %struct.GPR* %12236, i32 0, i32 33
  %12238 = getelementptr inbounds %struct.Reg, %struct.Reg* %12237, i32 0, i32 0
  %PC.i288 = bitcast %union.anon* %12238 to i64*
  %12239 = load i64, i64* %PC.i288
  %12240 = add i64 %12239, 22
  %12241 = load i64, i64* %PC.i288
  %12242 = add i64 %12241, 6
  %12243 = load i64, i64* %PC.i288
  %12244 = add i64 %12243, 6
  store i64 %12244, i64* %PC.i288
  %12245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12246 = load i8, i8* %12245, align 1
  %12247 = icmp eq i8 %12246, 0
  %12248 = zext i1 %12247 to i8
  store i8 %12248, i8* %BRANCH_TAKEN, align 1
  %12249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12250 = select i1 %12247, i64 %12240, i64 %12242
  store i64 %12250, i64* %12249, align 8
  store %struct.Memory* %loadMem_41b9e3, %struct.Memory** %MEMORY
  %loadBr_41b9e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41b9e3 = icmp eq i8 %loadBr_41b9e3, 1
  br i1 %cmpBr_41b9e3, label %block_.L_41b9f9, label %block_41b9e9

block_41b9e9:                                     ; preds = %block_41b9db
  %loadMem_41b9e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12252 = getelementptr inbounds %struct.GPR, %struct.GPR* %12251, i32 0, i32 33
  %12253 = getelementptr inbounds %struct.Reg, %struct.Reg* %12252, i32 0, i32 0
  %PC.i287 = bitcast %union.anon* %12253 to i64*
  %12254 = load i64, i64* %PC.i287
  %12255 = add i64 %12254, 11
  store i64 %12255, i64* %PC.i287
  store i32 3, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  store %struct.Memory* %loadMem_41b9e9, %struct.Memory** %MEMORY
  %loadMem_41b9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12257 = getelementptr inbounds %struct.GPR, %struct.GPR* %12256, i32 0, i32 33
  %12258 = getelementptr inbounds %struct.Reg, %struct.Reg* %12257, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %12258 to i64*
  %12259 = load i64, i64* %PC.i286
  %12260 = add i64 %12259, 16
  %12261 = load i64, i64* %PC.i286
  %12262 = add i64 %12261, 5
  store i64 %12262, i64* %PC.i286
  %12263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12260, i64* %12263, align 8
  store %struct.Memory* %loadMem_41b9f4, %struct.Memory** %MEMORY
  br label %block_.L_41ba04

block_.L_41b9f9:                                  ; preds = %block_41b9db
  %loadMem_41b9f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12265 = getelementptr inbounds %struct.GPR, %struct.GPR* %12264, i32 0, i32 33
  %12266 = getelementptr inbounds %struct.Reg, %struct.Reg* %12265, i32 0, i32 0
  %PC.i285 = bitcast %union.anon* %12266 to i64*
  %12267 = load i64, i64* %PC.i285
  %12268 = add i64 %12267, 11
  store i64 %12268, i64* %PC.i285
  store i32 2, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  store %struct.Memory* %loadMem_41b9f9, %struct.Memory** %MEMORY
  br label %block_.L_41ba04

block_.L_41ba04:                                  ; preds = %block_.L_41b9f9, %block_41b9e9
  %loadMem_41ba04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12270 = getelementptr inbounds %struct.GPR, %struct.GPR* %12269, i32 0, i32 33
  %12271 = getelementptr inbounds %struct.Reg, %struct.Reg* %12270, i32 0, i32 0
  %PC.i284 = bitcast %union.anon* %12271 to i64*
  %12272 = load i64, i64* %PC.i284
  %12273 = add i64 %12272, 83
  %12274 = load i64, i64* %PC.i284
  %12275 = add i64 %12274, 5
  store i64 %12275, i64* %PC.i284
  %12276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12273, i64* %12276, align 8
  store %struct.Memory* %loadMem_41ba04, %struct.Memory** %MEMORY
  br label %block_.L_41ba57

block_.L_41ba09:                                  ; preds = %block_41b9cd, %block_.L_41b9c0
  %loadMem_41ba09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12278 = getelementptr inbounds %struct.GPR, %struct.GPR* %12277, i32 0, i32 33
  %12279 = getelementptr inbounds %struct.Reg, %struct.Reg* %12278, i32 0, i32 0
  %PC.i282 = bitcast %union.anon* %12279 to i64*
  %12280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12281 = getelementptr inbounds %struct.GPR, %struct.GPR* %12280, i32 0, i32 15
  %12282 = getelementptr inbounds %struct.Reg, %struct.Reg* %12281, i32 0, i32 0
  %RBP.i283 = bitcast %union.anon* %12282 to i64*
  %12283 = load i64, i64* %RBP.i283
  %12284 = sub i64 %12283, 92
  %12285 = load i64, i64* %PC.i282
  %12286 = add i64 %12285, 7
  store i64 %12286, i64* %PC.i282
  %12287 = inttoptr i64 %12284 to i32*
  %12288 = load i32, i32* %12287
  %12289 = sub i32 %12288, -999998
  %12290 = icmp ult i32 %12288, -999998
  %12291 = zext i1 %12290 to i8
  %12292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12291, i8* %12292, align 1
  %12293 = and i32 %12289, 255
  %12294 = call i32 @llvm.ctpop.i32(i32 %12293)
  %12295 = trunc i32 %12294 to i8
  %12296 = and i8 %12295, 1
  %12297 = xor i8 %12296, 1
  %12298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12297, i8* %12298, align 1
  %12299 = xor i32 %12288, -999998
  %12300 = xor i32 %12299, %12289
  %12301 = lshr i32 %12300, 4
  %12302 = trunc i32 %12301 to i8
  %12303 = and i8 %12302, 1
  %12304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12303, i8* %12304, align 1
  %12305 = icmp eq i32 %12289, 0
  %12306 = zext i1 %12305 to i8
  %12307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12306, i8* %12307, align 1
  %12308 = lshr i32 %12289, 31
  %12309 = trunc i32 %12308 to i8
  %12310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12309, i8* %12310, align 1
  %12311 = lshr i32 %12288, 31
  %12312 = xor i32 %12311, 1
  %12313 = xor i32 %12308, %12311
  %12314 = add i32 %12313, %12312
  %12315 = icmp eq i32 %12314, 2
  %12316 = zext i1 %12315 to i8
  %12317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12316, i8* %12317, align 1
  store %struct.Memory* %loadMem_41ba09, %struct.Memory** %MEMORY
  %loadMem_41ba10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12319 = getelementptr inbounds %struct.GPR, %struct.GPR* %12318, i32 0, i32 33
  %12320 = getelementptr inbounds %struct.Reg, %struct.Reg* %12319, i32 0, i32 0
  %PC.i281 = bitcast %union.anon* %12320 to i64*
  %12321 = load i64, i64* %PC.i281
  %12322 = add i64 %12321, 66
  %12323 = load i64, i64* %PC.i281
  %12324 = add i64 %12323, 6
  %12325 = load i64, i64* %PC.i281
  %12326 = add i64 %12325, 6
  store i64 %12326, i64* %PC.i281
  %12327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12328 = load i8, i8* %12327, align 1
  %12329 = icmp eq i8 %12328, 0
  %12330 = zext i1 %12329 to i8
  store i8 %12330, i8* %BRANCH_TAKEN, align 1
  %12331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12332 = select i1 %12329, i64 %12322, i64 %12324
  store i64 %12332, i64* %12331, align 8
  store %struct.Memory* %loadMem_41ba10, %struct.Memory** %MEMORY
  %loadBr_41ba10 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ba10 = icmp eq i8 %loadBr_41ba10, 1
  br i1 %cmpBr_41ba10, label %block_.L_41ba52, label %block_41ba16

block_41ba16:                                     ; preds = %block_.L_41ba09
  %loadMem_41ba16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12334 = getelementptr inbounds %struct.GPR, %struct.GPR* %12333, i32 0, i32 33
  %12335 = getelementptr inbounds %struct.Reg, %struct.Reg* %12334, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %12335 to i64*
  %12336 = load i64, i64* %PC.i280
  %12337 = add i64 %12336, 8
  store i64 %12337, i64* %PC.i280
  %12338 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %12339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12339, align 1
  %12340 = and i32 %12338, 255
  %12341 = call i32 @llvm.ctpop.i32(i32 %12340)
  %12342 = trunc i32 %12341 to i8
  %12343 = and i8 %12342, 1
  %12344 = xor i8 %12343, 1
  %12345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12344, i8* %12345, align 1
  %12346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12346, align 1
  %12347 = icmp eq i32 %12338, 0
  %12348 = zext i1 %12347 to i8
  %12349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12348, i8* %12349, align 1
  %12350 = lshr i32 %12338, 31
  %12351 = trunc i32 %12350 to i8
  %12352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12351, i8* %12352, align 1
  %12353 = lshr i32 %12338, 31
  %12354 = xor i32 %12350, %12353
  %12355 = add i32 %12354, %12353
  %12356 = icmp eq i32 %12355, 2
  %12357 = zext i1 %12356 to i8
  %12358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12357, i8* %12358, align 1
  store %struct.Memory* %loadMem_41ba16, %struct.Memory** %MEMORY
  %loadMem_41ba1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12360 = getelementptr inbounds %struct.GPR, %struct.GPR* %12359, i32 0, i32 33
  %12361 = getelementptr inbounds %struct.Reg, %struct.Reg* %12360, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %12361 to i64*
  %12362 = load i64, i64* %PC.i279
  %12363 = add i64 %12362, 52
  %12364 = load i64, i64* %PC.i279
  %12365 = add i64 %12364, 6
  %12366 = load i64, i64* %PC.i279
  %12367 = add i64 %12366, 6
  store i64 %12367, i64* %PC.i279
  %12368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12369 = load i8, i8* %12368, align 1
  %12370 = icmp eq i8 %12369, 0
  %12371 = zext i1 %12370 to i8
  store i8 %12371, i8* %BRANCH_TAKEN, align 1
  %12372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12373 = select i1 %12370, i64 %12363, i64 %12365
  store i64 %12373, i64* %12372, align 8
  store %struct.Memory* %loadMem_41ba1e, %struct.Memory** %MEMORY
  %loadBr_41ba1e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ba1e = icmp eq i8 %loadBr_41ba1e, 1
  br i1 %cmpBr_41ba1e, label %block_.L_41ba52, label %block_41ba24

block_41ba24:                                     ; preds = %block_41ba16
  %loadMem_41ba24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12375 = getelementptr inbounds %struct.GPR, %struct.GPR* %12374, i32 0, i32 33
  %12376 = getelementptr inbounds %struct.Reg, %struct.Reg* %12375, i32 0, i32 0
  %PC.i278 = bitcast %union.anon* %12376 to i64*
  %12377 = load i64, i64* %PC.i278
  %12378 = add i64 %12377, 8
  store i64 %12378, i64* %PC.i278
  %12379 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %12380 = sub i32 %12379, 1
  %12381 = icmp ult i32 %12379, 1
  %12382 = zext i1 %12381 to i8
  %12383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12382, i8* %12383, align 1
  %12384 = and i32 %12380, 255
  %12385 = call i32 @llvm.ctpop.i32(i32 %12384)
  %12386 = trunc i32 %12385 to i8
  %12387 = and i8 %12386, 1
  %12388 = xor i8 %12387, 1
  %12389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12388, i8* %12389, align 1
  %12390 = xor i32 %12379, 1
  %12391 = xor i32 %12390, %12380
  %12392 = lshr i32 %12391, 4
  %12393 = trunc i32 %12392 to i8
  %12394 = and i8 %12393, 1
  %12395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12394, i8* %12395, align 1
  %12396 = icmp eq i32 %12380, 0
  %12397 = zext i1 %12396 to i8
  %12398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12397, i8* %12398, align 1
  %12399 = lshr i32 %12380, 31
  %12400 = trunc i32 %12399 to i8
  %12401 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12400, i8* %12401, align 1
  %12402 = lshr i32 %12379, 31
  %12403 = xor i32 %12399, %12402
  %12404 = add i32 %12403, %12402
  %12405 = icmp eq i32 %12404, 2
  %12406 = zext i1 %12405 to i8
  %12407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12406, i8* %12407, align 1
  store %struct.Memory* %loadMem_41ba24, %struct.Memory** %MEMORY
  %loadMem_41ba2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12409 = getelementptr inbounds %struct.GPR, %struct.GPR* %12408, i32 0, i32 33
  %12410 = getelementptr inbounds %struct.Reg, %struct.Reg* %12409, i32 0, i32 0
  %PC.i277 = bitcast %union.anon* %12410 to i64*
  %12411 = load i64, i64* %PC.i277
  %12412 = add i64 %12411, 22
  %12413 = load i64, i64* %PC.i277
  %12414 = add i64 %12413, 6
  %12415 = load i64, i64* %PC.i277
  %12416 = add i64 %12415, 6
  store i64 %12416, i64* %PC.i277
  %12417 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12418 = load i8, i8* %12417, align 1
  %12419 = icmp eq i8 %12418, 0
  %12420 = zext i1 %12419 to i8
  store i8 %12420, i8* %BRANCH_TAKEN, align 1
  %12421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12422 = select i1 %12419, i64 %12412, i64 %12414
  store i64 %12422, i64* %12421, align 8
  store %struct.Memory* %loadMem_41ba2c, %struct.Memory** %MEMORY
  %loadBr_41ba2c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ba2c = icmp eq i8 %loadBr_41ba2c, 1
  br i1 %cmpBr_41ba2c, label %block_.L_41ba42, label %block_41ba32

block_41ba32:                                     ; preds = %block_41ba24
  %loadMem_41ba32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12424 = getelementptr inbounds %struct.GPR, %struct.GPR* %12423, i32 0, i32 33
  %12425 = getelementptr inbounds %struct.Reg, %struct.Reg* %12424, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %12425 to i64*
  %12426 = load i64, i64* %PC.i276
  %12427 = add i64 %12426, 11
  store i64 %12427, i64* %PC.i276
  store i32 2, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  store %struct.Memory* %loadMem_41ba32, %struct.Memory** %MEMORY
  %loadMem_41ba3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12429 = getelementptr inbounds %struct.GPR, %struct.GPR* %12428, i32 0, i32 33
  %12430 = getelementptr inbounds %struct.Reg, %struct.Reg* %12429, i32 0, i32 0
  %PC.i275 = bitcast %union.anon* %12430 to i64*
  %12431 = load i64, i64* %PC.i275
  %12432 = add i64 %12431, 16
  %12433 = load i64, i64* %PC.i275
  %12434 = add i64 %12433, 5
  store i64 %12434, i64* %PC.i275
  %12435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12432, i64* %12435, align 8
  store %struct.Memory* %loadMem_41ba3d, %struct.Memory** %MEMORY
  br label %block_.L_41ba4d

block_.L_41ba42:                                  ; preds = %block_41ba24
  %loadMem_41ba42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12437 = getelementptr inbounds %struct.GPR, %struct.GPR* %12436, i32 0, i32 33
  %12438 = getelementptr inbounds %struct.Reg, %struct.Reg* %12437, i32 0, i32 0
  %PC.i274 = bitcast %union.anon* %12438 to i64*
  %12439 = load i64, i64* %PC.i274
  %12440 = add i64 %12439, 11
  store i64 %12440, i64* %PC.i274
  store i32 3, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  store %struct.Memory* %loadMem_41ba42, %struct.Memory** %MEMORY
  br label %block_.L_41ba4d

block_.L_41ba4d:                                  ; preds = %block_.L_41ba42, %block_41ba32
  %loadMem_41ba4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12442 = getelementptr inbounds %struct.GPR, %struct.GPR* %12441, i32 0, i32 33
  %12443 = getelementptr inbounds %struct.Reg, %struct.Reg* %12442, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %12443 to i64*
  %12444 = load i64, i64* %PC.i273
  %12445 = add i64 %12444, 5
  %12446 = load i64, i64* %PC.i273
  %12447 = add i64 %12446, 5
  store i64 %12447, i64* %PC.i273
  %12448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12445, i64* %12448, align 8
  store %struct.Memory* %loadMem_41ba4d, %struct.Memory** %MEMORY
  br label %block_.L_41ba52

block_.L_41ba52:                                  ; preds = %block_.L_41ba4d, %block_41ba16, %block_.L_41ba09
  %loadMem_41ba52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12450 = getelementptr inbounds %struct.GPR, %struct.GPR* %12449, i32 0, i32 33
  %12451 = getelementptr inbounds %struct.Reg, %struct.Reg* %12450, i32 0, i32 0
  %PC.i272 = bitcast %union.anon* %12451 to i64*
  %12452 = load i64, i64* %PC.i272
  %12453 = add i64 %12452, 5
  %12454 = load i64, i64* %PC.i272
  %12455 = add i64 %12454, 5
  store i64 %12455, i64* %PC.i272
  %12456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12453, i64* %12456, align 8
  store %struct.Memory* %loadMem_41ba52, %struct.Memory** %MEMORY
  br label %block_.L_41ba57

block_.L_41ba57:                                  ; preds = %block_.L_41ba52, %block_.L_41ba04
  %loadMem_41ba57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12458 = getelementptr inbounds %struct.GPR, %struct.GPR* %12457, i32 0, i32 33
  %12459 = getelementptr inbounds %struct.Reg, %struct.Reg* %12458, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %12459 to i64*
  %12460 = load i64, i64* %PC.i271
  %12461 = add i64 %12460, 8
  store i64 %12461, i64* %PC.i271
  %12462 = load i32, i32* bitcast (%G_0x86679c_type* @G_0x86679c to i32*)
  %12463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12463, align 1
  %12464 = and i32 %12462, 255
  %12465 = call i32 @llvm.ctpop.i32(i32 %12464)
  %12466 = trunc i32 %12465 to i8
  %12467 = and i8 %12466, 1
  %12468 = xor i8 %12467, 1
  %12469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12468, i8* %12469, align 1
  %12470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12470, align 1
  %12471 = icmp eq i32 %12462, 0
  %12472 = zext i1 %12471 to i8
  %12473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12472, i8* %12473, align 1
  %12474 = lshr i32 %12462, 31
  %12475 = trunc i32 %12474 to i8
  %12476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12475, i8* %12476, align 1
  %12477 = lshr i32 %12462, 31
  %12478 = xor i32 %12474, %12477
  %12479 = add i32 %12478, %12477
  %12480 = icmp eq i32 %12479, 2
  %12481 = zext i1 %12480 to i8
  %12482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12481, i8* %12482, align 1
  store %struct.Memory* %loadMem_41ba57, %struct.Memory** %MEMORY
  %loadMem_41ba5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12484 = getelementptr inbounds %struct.GPR, %struct.GPR* %12483, i32 0, i32 33
  %12485 = getelementptr inbounds %struct.Reg, %struct.Reg* %12484, i32 0, i32 0
  %PC.i270 = bitcast %union.anon* %12485 to i64*
  %12486 = load i64, i64* %PC.i270
  %12487 = add i64 %12486, 270
  %12488 = load i64, i64* %PC.i270
  %12489 = add i64 %12488, 6
  %12490 = load i64, i64* %PC.i270
  %12491 = add i64 %12490, 6
  store i64 %12491, i64* %PC.i270
  %12492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12493 = load i8, i8* %12492, align 1
  store i8 %12493, i8* %BRANCH_TAKEN, align 1
  %12494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12495 = icmp ne i8 %12493, 0
  %12496 = select i1 %12495, i64 %12487, i64 %12489
  store i64 %12496, i64* %12494, align 8
  store %struct.Memory* %loadMem_41ba5f, %struct.Memory** %MEMORY
  %loadBr_41ba5f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ba5f = icmp eq i8 %loadBr_41ba5f, 1
  br i1 %cmpBr_41ba5f, label %block_.L_41bb6d, label %block_41ba65

block_41ba65:                                     ; preds = %block_.L_41ba57
  %loadMem_41ba65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12498 = getelementptr inbounds %struct.GPR, %struct.GPR* %12497, i32 0, i32 33
  %12499 = getelementptr inbounds %struct.Reg, %struct.Reg* %12498, i32 0, i32 0
  %PC.i269 = bitcast %union.anon* %12499 to i64*
  %12500 = load i64, i64* %PC.i269
  %12501 = add i64 %12500, 8
  store i64 %12501, i64* %PC.i269
  %12502 = load i32, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*)
  %12503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12503, align 1
  %12504 = and i32 %12502, 255
  %12505 = call i32 @llvm.ctpop.i32(i32 %12504)
  %12506 = trunc i32 %12505 to i8
  %12507 = and i8 %12506, 1
  %12508 = xor i8 %12507, 1
  %12509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12508, i8* %12509, align 1
  %12510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12510, align 1
  %12511 = icmp eq i32 %12502, 0
  %12512 = zext i1 %12511 to i8
  %12513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12512, i8* %12513, align 1
  %12514 = lshr i32 %12502, 31
  %12515 = trunc i32 %12514 to i8
  %12516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12515, i8* %12516, align 1
  %12517 = lshr i32 %12502, 31
  %12518 = xor i32 %12514, %12517
  %12519 = add i32 %12518, %12517
  %12520 = icmp eq i32 %12519, 2
  %12521 = zext i1 %12520 to i8
  %12522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12521, i8* %12522, align 1
  store %struct.Memory* %loadMem_41ba65, %struct.Memory** %MEMORY
  %loadMem_41ba6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12524 = getelementptr inbounds %struct.GPR, %struct.GPR* %12523, i32 0, i32 33
  %12525 = getelementptr inbounds %struct.Reg, %struct.Reg* %12524, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %12525 to i64*
  %12526 = load i64, i64* %PC.i268
  %12527 = add i64 %12526, 256
  %12528 = load i64, i64* %PC.i268
  %12529 = add i64 %12528, 6
  %12530 = load i64, i64* %PC.i268
  %12531 = add i64 %12530, 6
  store i64 %12531, i64* %PC.i268
  %12532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12533 = load i8, i8* %12532, align 1
  store i8 %12533, i8* %BRANCH_TAKEN, align 1
  %12534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12535 = icmp ne i8 %12533, 0
  %12536 = select i1 %12535, i64 %12527, i64 %12529
  store i64 %12536, i64* %12534, align 8
  store %struct.Memory* %loadMem_41ba6d, %struct.Memory** %MEMORY
  %loadBr_41ba6d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ba6d = icmp eq i8 %loadBr_41ba6d, 1
  br i1 %cmpBr_41ba6d, label %block_.L_41bb6d, label %block_41ba73

block_41ba73:                                     ; preds = %block_41ba65
  %loadMem_41ba73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12538 = getelementptr inbounds %struct.GPR, %struct.GPR* %12537, i32 0, i32 33
  %12539 = getelementptr inbounds %struct.Reg, %struct.Reg* %12538, i32 0, i32 0
  %PC.i267 = bitcast %union.anon* %12539 to i64*
  %12540 = load i64, i64* %PC.i267
  %12541 = add i64 %12540, 8
  store i64 %12541, i64* %PC.i267
  %12542 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %12543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12543, align 1
  %12544 = and i32 %12542, 255
  %12545 = call i32 @llvm.ctpop.i32(i32 %12544)
  %12546 = trunc i32 %12545 to i8
  %12547 = and i8 %12546, 1
  %12548 = xor i8 %12547, 1
  %12549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12548, i8* %12549, align 1
  %12550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12550, align 1
  %12551 = icmp eq i32 %12542, 0
  %12552 = zext i1 %12551 to i8
  %12553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12552, i8* %12553, align 1
  %12554 = lshr i32 %12542, 31
  %12555 = trunc i32 %12554 to i8
  %12556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12555, i8* %12556, align 1
  %12557 = lshr i32 %12542, 31
  %12558 = xor i32 %12554, %12557
  %12559 = add i32 %12558, %12557
  %12560 = icmp eq i32 %12559, 2
  %12561 = zext i1 %12560 to i8
  %12562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12561, i8* %12562, align 1
  store %struct.Memory* %loadMem_41ba73, %struct.Memory** %MEMORY
  %loadMem_41ba7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %12563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12564 = getelementptr inbounds %struct.GPR, %struct.GPR* %12563, i32 0, i32 33
  %12565 = getelementptr inbounds %struct.Reg, %struct.Reg* %12564, i32 0, i32 0
  %PC.i266 = bitcast %union.anon* %12565 to i64*
  %12566 = load i64, i64* %PC.i266
  %12567 = add i64 %12566, 242
  %12568 = load i64, i64* %PC.i266
  %12569 = add i64 %12568, 6
  %12570 = load i64, i64* %PC.i266
  %12571 = add i64 %12570, 6
  store i64 %12571, i64* %PC.i266
  %12572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12573 = load i8, i8* %12572, align 1
  %12574 = icmp eq i8 %12573, 0
  %12575 = zext i1 %12574 to i8
  store i8 %12575, i8* %BRANCH_TAKEN, align 1
  %12576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12577 = select i1 %12574, i64 %12567, i64 %12569
  store i64 %12577, i64* %12576, align 8
  store %struct.Memory* %loadMem_41ba7b, %struct.Memory** %MEMORY
  %loadBr_41ba7b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ba7b = icmp eq i8 %loadBr_41ba7b, 1
  br i1 %cmpBr_41ba7b, label %block_.L_41bb6d, label %block_41ba81

block_41ba81:                                     ; preds = %block_41ba73
  %loadMem_41ba81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12579 = getelementptr inbounds %struct.GPR, %struct.GPR* %12578, i32 0, i32 33
  %12580 = getelementptr inbounds %struct.Reg, %struct.Reg* %12579, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %12580 to i64*
  %12581 = load i64, i64* %PC.i265
  %12582 = add i64 %12581, 8
  store i64 %12582, i64* %PC.i265
  %12583 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %12584 = sub i32 %12583, 3
  %12585 = icmp ult i32 %12583, 3
  %12586 = zext i1 %12585 to i8
  %12587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12586, i8* %12587, align 1
  %12588 = and i32 %12584, 255
  %12589 = call i32 @llvm.ctpop.i32(i32 %12588)
  %12590 = trunc i32 %12589 to i8
  %12591 = and i8 %12590, 1
  %12592 = xor i8 %12591, 1
  %12593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12592, i8* %12593, align 1
  %12594 = xor i32 %12583, 3
  %12595 = xor i32 %12594, %12584
  %12596 = lshr i32 %12595, 4
  %12597 = trunc i32 %12596 to i8
  %12598 = and i8 %12597, 1
  %12599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12598, i8* %12599, align 1
  %12600 = icmp eq i32 %12584, 0
  %12601 = zext i1 %12600 to i8
  %12602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12601, i8* %12602, align 1
  %12603 = lshr i32 %12584, 31
  %12604 = trunc i32 %12603 to i8
  %12605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12604, i8* %12605, align 1
  %12606 = lshr i32 %12583, 31
  %12607 = xor i32 %12603, %12606
  %12608 = add i32 %12607, %12606
  %12609 = icmp eq i32 %12608, 2
  %12610 = zext i1 %12609 to i8
  %12611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12610, i8* %12611, align 1
  store %struct.Memory* %loadMem_41ba81, %struct.Memory** %MEMORY
  %loadMem_41ba89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12613 = getelementptr inbounds %struct.GPR, %struct.GPR* %12612, i32 0, i32 33
  %12614 = getelementptr inbounds %struct.Reg, %struct.Reg* %12613, i32 0, i32 0
  %PC.i264 = bitcast %union.anon* %12614 to i64*
  %12615 = load i64, i64* %PC.i264
  %12616 = add i64 %12615, 228
  %12617 = load i64, i64* %PC.i264
  %12618 = add i64 %12617, 6
  %12619 = load i64, i64* %PC.i264
  %12620 = add i64 %12619, 6
  store i64 %12620, i64* %PC.i264
  %12621 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12622 = load i8, i8* %12621, align 1
  store i8 %12622, i8* %BRANCH_TAKEN, align 1
  %12623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12624 = icmp ne i8 %12622, 0
  %12625 = select i1 %12624, i64 %12616, i64 %12618
  store i64 %12625, i64* %12623, align 8
  store %struct.Memory* %loadMem_41ba89, %struct.Memory** %MEMORY
  %loadBr_41ba89 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ba89 = icmp eq i8 %loadBr_41ba89, 1
  br i1 %cmpBr_41ba89, label %block_.L_41bb6d, label %block_41ba8f

block_41ba8f:                                     ; preds = %block_41ba81
  %loadMem_41ba8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12627 = getelementptr inbounds %struct.GPR, %struct.GPR* %12626, i32 0, i32 33
  %12628 = getelementptr inbounds %struct.Reg, %struct.Reg* %12627, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %12628 to i64*
  %12629 = load i64, i64* %PC.i263
  %12630 = add i64 %12629, 8
  store i64 %12630, i64* %PC.i263
  %12631 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %12632 = sub i32 %12631, 2
  %12633 = icmp ult i32 %12631, 2
  %12634 = zext i1 %12633 to i8
  %12635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12634, i8* %12635, align 1
  %12636 = and i32 %12632, 255
  %12637 = call i32 @llvm.ctpop.i32(i32 %12636)
  %12638 = trunc i32 %12637 to i8
  %12639 = and i8 %12638, 1
  %12640 = xor i8 %12639, 1
  %12641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12640, i8* %12641, align 1
  %12642 = xor i32 %12631, 2
  %12643 = xor i32 %12642, %12632
  %12644 = lshr i32 %12643, 4
  %12645 = trunc i32 %12644 to i8
  %12646 = and i8 %12645, 1
  %12647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12646, i8* %12647, align 1
  %12648 = icmp eq i32 %12632, 0
  %12649 = zext i1 %12648 to i8
  %12650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12649, i8* %12650, align 1
  %12651 = lshr i32 %12632, 31
  %12652 = trunc i32 %12651 to i8
  %12653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12652, i8* %12653, align 1
  %12654 = lshr i32 %12631, 31
  %12655 = xor i32 %12651, %12654
  %12656 = add i32 %12655, %12654
  %12657 = icmp eq i32 %12656, 2
  %12658 = zext i1 %12657 to i8
  %12659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12658, i8* %12659, align 1
  store %struct.Memory* %loadMem_41ba8f, %struct.Memory** %MEMORY
  %loadMem_41ba97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12661 = getelementptr inbounds %struct.GPR, %struct.GPR* %12660, i32 0, i32 33
  %12662 = getelementptr inbounds %struct.Reg, %struct.Reg* %12661, i32 0, i32 0
  %PC.i262 = bitcast %union.anon* %12662 to i64*
  %12663 = load i64, i64* %PC.i262
  %12664 = add i64 %12663, 214
  %12665 = load i64, i64* %PC.i262
  %12666 = add i64 %12665, 6
  %12667 = load i64, i64* %PC.i262
  %12668 = add i64 %12667, 6
  store i64 %12668, i64* %PC.i262
  %12669 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12670 = load i8, i8* %12669, align 1
  store i8 %12670, i8* %BRANCH_TAKEN, align 1
  %12671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12672 = icmp ne i8 %12670, 0
  %12673 = select i1 %12672, i64 %12664, i64 %12666
  store i64 %12673, i64* %12671, align 8
  store %struct.Memory* %loadMem_41ba97, %struct.Memory** %MEMORY
  %loadBr_41ba97 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41ba97 = icmp eq i8 %loadBr_41ba97, 1
  br i1 %cmpBr_41ba97, label %block_.L_41bb6d, label %block_41ba9d

block_41ba9d:                                     ; preds = %block_41ba8f
  %loadMem_41ba9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12675 = getelementptr inbounds %struct.GPR, %struct.GPR* %12674, i32 0, i32 33
  %12676 = getelementptr inbounds %struct.Reg, %struct.Reg* %12675, i32 0, i32 0
  %PC.i261 = bitcast %union.anon* %12676 to i64*
  %12677 = load i64, i64* %PC.i261
  %12678 = add i64 %12677, 8
  store i64 %12678, i64* %PC.i261
  %12679 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %12680 = sub i32 %12679, 4
  %12681 = icmp ult i32 %12679, 4
  %12682 = zext i1 %12681 to i8
  %12683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12682, i8* %12683, align 1
  %12684 = and i32 %12680, 255
  %12685 = call i32 @llvm.ctpop.i32(i32 %12684)
  %12686 = trunc i32 %12685 to i8
  %12687 = and i8 %12686, 1
  %12688 = xor i8 %12687, 1
  %12689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12688, i8* %12689, align 1
  %12690 = xor i32 %12679, 4
  %12691 = xor i32 %12690, %12680
  %12692 = lshr i32 %12691, 4
  %12693 = trunc i32 %12692 to i8
  %12694 = and i8 %12693, 1
  %12695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12694, i8* %12695, align 1
  %12696 = icmp eq i32 %12680, 0
  %12697 = zext i1 %12696 to i8
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12697, i8* %12698, align 1
  %12699 = lshr i32 %12680, 31
  %12700 = trunc i32 %12699 to i8
  %12701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12700, i8* %12701, align 1
  %12702 = lshr i32 %12679, 31
  %12703 = xor i32 %12699, %12702
  %12704 = add i32 %12703, %12702
  %12705 = icmp eq i32 %12704, 2
  %12706 = zext i1 %12705 to i8
  %12707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12706, i8* %12707, align 1
  store %struct.Memory* %loadMem_41ba9d, %struct.Memory** %MEMORY
  %loadMem_41baa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12709 = getelementptr inbounds %struct.GPR, %struct.GPR* %12708, i32 0, i32 33
  %12710 = getelementptr inbounds %struct.Reg, %struct.Reg* %12709, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %12710 to i64*
  %12711 = load i64, i64* %PC.i260
  %12712 = add i64 %12711, 200
  %12713 = load i64, i64* %PC.i260
  %12714 = add i64 %12713, 6
  %12715 = load i64, i64* %PC.i260
  %12716 = add i64 %12715, 6
  store i64 %12716, i64* %PC.i260
  %12717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12718 = load i8, i8* %12717, align 1
  store i8 %12718, i8* %BRANCH_TAKEN, align 1
  %12719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12720 = icmp ne i8 %12718, 0
  %12721 = select i1 %12720, i64 %12712, i64 %12714
  store i64 %12721, i64* %12719, align 8
  store %struct.Memory* %loadMem_41baa5, %struct.Memory** %MEMORY
  %loadBr_41baa5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41baa5 = icmp eq i8 %loadBr_41baa5, 1
  br i1 %cmpBr_41baa5, label %block_.L_41bb6d, label %block_41baab

block_41baab:                                     ; preds = %block_41ba9d
  %loadMem_41baab = load %struct.Memory*, %struct.Memory** %MEMORY
  %12722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12723 = getelementptr inbounds %struct.GPR, %struct.GPR* %12722, i32 0, i32 33
  %12724 = getelementptr inbounds %struct.Reg, %struct.Reg* %12723, i32 0, i32 0
  %PC.i259 = bitcast %union.anon* %12724 to i64*
  %12725 = load i64, i64* %PC.i259
  %12726 = add i64 %12725, 8
  store i64 %12726, i64* %PC.i259
  %12727 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %12728 = sub i32 %12727, 5
  %12729 = icmp ult i32 %12727, 5
  %12730 = zext i1 %12729 to i8
  %12731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12730, i8* %12731, align 1
  %12732 = and i32 %12728, 255
  %12733 = call i32 @llvm.ctpop.i32(i32 %12732)
  %12734 = trunc i32 %12733 to i8
  %12735 = and i8 %12734, 1
  %12736 = xor i8 %12735, 1
  %12737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12736, i8* %12737, align 1
  %12738 = xor i32 %12727, 5
  %12739 = xor i32 %12738, %12728
  %12740 = lshr i32 %12739, 4
  %12741 = trunc i32 %12740 to i8
  %12742 = and i8 %12741, 1
  %12743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12742, i8* %12743, align 1
  %12744 = icmp eq i32 %12728, 0
  %12745 = zext i1 %12744 to i8
  %12746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12745, i8* %12746, align 1
  %12747 = lshr i32 %12728, 31
  %12748 = trunc i32 %12747 to i8
  %12749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12748, i8* %12749, align 1
  %12750 = lshr i32 %12727, 31
  %12751 = xor i32 %12747, %12750
  %12752 = add i32 %12751, %12750
  %12753 = icmp eq i32 %12752, 2
  %12754 = zext i1 %12753 to i8
  %12755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12754, i8* %12755, align 1
  store %struct.Memory* %loadMem_41baab, %struct.Memory** %MEMORY
  %loadMem_41bab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12757 = getelementptr inbounds %struct.GPR, %struct.GPR* %12756, i32 0, i32 33
  %12758 = getelementptr inbounds %struct.Reg, %struct.Reg* %12757, i32 0, i32 0
  %PC.i258 = bitcast %union.anon* %12758 to i64*
  %12759 = load i64, i64* %PC.i258
  %12760 = add i64 %12759, 186
  %12761 = load i64, i64* %PC.i258
  %12762 = add i64 %12761, 6
  %12763 = load i64, i64* %PC.i258
  %12764 = add i64 %12763, 6
  store i64 %12764, i64* %PC.i258
  %12765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12766 = load i8, i8* %12765, align 1
  store i8 %12766, i8* %BRANCH_TAKEN, align 1
  %12767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12768 = icmp ne i8 %12766, 0
  %12769 = select i1 %12768, i64 %12760, i64 %12762
  store i64 %12769, i64* %12767, align 8
  store %struct.Memory* %loadMem_41bab3, %struct.Memory** %MEMORY
  %loadBr_41bab3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bab3 = icmp eq i8 %loadBr_41bab3, 1
  br i1 %cmpBr_41bab3, label %block_.L_41bb6d, label %block_41bab9

block_41bab9:                                     ; preds = %block_41baab
  %loadMem_41bab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12771 = getelementptr inbounds %struct.GPR, %struct.GPR* %12770, i32 0, i32 33
  %12772 = getelementptr inbounds %struct.Reg, %struct.Reg* %12771, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %12772 to i64*
  %12773 = load i64, i64* %PC.i257
  %12774 = add i64 %12773, 8
  store i64 %12774, i64* %PC.i257
  %12775 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %12776 = sub i32 %12775, 1
  %12777 = icmp ult i32 %12775, 1
  %12778 = zext i1 %12777 to i8
  %12779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12778, i8* %12779, align 1
  %12780 = and i32 %12776, 255
  %12781 = call i32 @llvm.ctpop.i32(i32 %12780)
  %12782 = trunc i32 %12781 to i8
  %12783 = and i8 %12782, 1
  %12784 = xor i8 %12783, 1
  %12785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12784, i8* %12785, align 1
  %12786 = xor i32 %12775, 1
  %12787 = xor i32 %12786, %12776
  %12788 = lshr i32 %12787, 4
  %12789 = trunc i32 %12788 to i8
  %12790 = and i8 %12789, 1
  %12791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12790, i8* %12791, align 1
  %12792 = icmp eq i32 %12776, 0
  %12793 = zext i1 %12792 to i8
  %12794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12793, i8* %12794, align 1
  %12795 = lshr i32 %12776, 31
  %12796 = trunc i32 %12795 to i8
  %12797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12796, i8* %12797, align 1
  %12798 = lshr i32 %12775, 31
  %12799 = xor i32 %12795, %12798
  %12800 = add i32 %12799, %12798
  %12801 = icmp eq i32 %12800, 2
  %12802 = zext i1 %12801 to i8
  %12803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12802, i8* %12803, align 1
  store %struct.Memory* %loadMem_41bab9, %struct.Memory** %MEMORY
  %loadMem_41bac1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12805 = getelementptr inbounds %struct.GPR, %struct.GPR* %12804, i32 0, i32 33
  %12806 = getelementptr inbounds %struct.Reg, %struct.Reg* %12805, i32 0, i32 0
  %PC.i256 = bitcast %union.anon* %12806 to i64*
  %12807 = load i64, i64* %PC.i256
  %12808 = add i64 %12807, 172
  %12809 = load i64, i64* %PC.i256
  %12810 = add i64 %12809, 6
  %12811 = load i64, i64* %PC.i256
  %12812 = add i64 %12811, 6
  store i64 %12812, i64* %PC.i256
  %12813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12814 = load i8, i8* %12813, align 1
  store i8 %12814, i8* %BRANCH_TAKEN, align 1
  %12815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12816 = icmp ne i8 %12814, 0
  %12817 = select i1 %12816, i64 %12808, i64 %12810
  store i64 %12817, i64* %12815, align 8
  store %struct.Memory* %loadMem_41bac1, %struct.Memory** %MEMORY
  %loadBr_41bac1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bac1 = icmp eq i8 %loadBr_41bac1, 1
  br i1 %cmpBr_41bac1, label %block_.L_41bb6d, label %block_41bac7

block_41bac7:                                     ; preds = %block_41bab9
  %loadMem_41bac7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12819 = getelementptr inbounds %struct.GPR, %struct.GPR* %12818, i32 0, i32 33
  %12820 = getelementptr inbounds %struct.Reg, %struct.Reg* %12819, i32 0, i32 0
  %PC.i255 = bitcast %union.anon* %12820 to i64*
  %12821 = load i64, i64* %PC.i255
  %12822 = add i64 %12821, 8
  store i64 %12822, i64* %PC.i255
  %12823 = load i32, i32* bitcast (%G_0x62e4f8_type* @G_0x62e4f8 to i32*)
  %12824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12824, align 1
  %12825 = and i32 %12823, 255
  %12826 = call i32 @llvm.ctpop.i32(i32 %12825)
  %12827 = trunc i32 %12826 to i8
  %12828 = and i8 %12827, 1
  %12829 = xor i8 %12828, 1
  %12830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12829, i8* %12830, align 1
  %12831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12831, align 1
  %12832 = icmp eq i32 %12823, 0
  %12833 = zext i1 %12832 to i8
  %12834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12833, i8* %12834, align 1
  %12835 = lshr i32 %12823, 31
  %12836 = trunc i32 %12835 to i8
  %12837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12836, i8* %12837, align 1
  %12838 = lshr i32 %12823, 31
  %12839 = xor i32 %12835, %12838
  %12840 = add i32 %12839, %12838
  %12841 = icmp eq i32 %12840, 2
  %12842 = zext i1 %12841 to i8
  %12843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12842, i8* %12843, align 1
  store %struct.Memory* %loadMem_41bac7, %struct.Memory** %MEMORY
  %loadMem_41bacf = load %struct.Memory*, %struct.Memory** %MEMORY
  %12844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12845 = getelementptr inbounds %struct.GPR, %struct.GPR* %12844, i32 0, i32 33
  %12846 = getelementptr inbounds %struct.Reg, %struct.Reg* %12845, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %12846 to i64*
  %12847 = load i64, i64* %PC.i254
  %12848 = add i64 %12847, 158
  %12849 = load i64, i64* %PC.i254
  %12850 = add i64 %12849, 6
  %12851 = load i64, i64* %PC.i254
  %12852 = add i64 %12851, 6
  store i64 %12852, i64* %PC.i254
  %12853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12854 = load i8, i8* %12853, align 1
  %12855 = icmp eq i8 %12854, 0
  %12856 = zext i1 %12855 to i8
  store i8 %12856, i8* %BRANCH_TAKEN, align 1
  %12857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12858 = select i1 %12855, i64 %12848, i64 %12850
  store i64 %12858, i64* %12857, align 8
  store %struct.Memory* %loadMem_41bacf, %struct.Memory** %MEMORY
  %loadBr_41bacf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bacf = icmp eq i8 %loadBr_41bacf, 1
  br i1 %cmpBr_41bacf, label %block_.L_41bb6d, label %block_41bad5

block_41bad5:                                     ; preds = %block_41bac7
  %loadMem_41bad5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12860 = getelementptr inbounds %struct.GPR, %struct.GPR* %12859, i32 0, i32 33
  %12861 = getelementptr inbounds %struct.Reg, %struct.Reg* %12860, i32 0, i32 0
  %PC.i252 = bitcast %union.anon* %12861 to i64*
  %12862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12863 = getelementptr inbounds %struct.GPR, %struct.GPR* %12862, i32 0, i32 15
  %12864 = getelementptr inbounds %struct.Reg, %struct.Reg* %12863, i32 0, i32 0
  %RBP.i253 = bitcast %union.anon* %12864 to i64*
  %12865 = load i64, i64* %RBP.i253
  %12866 = sub i64 %12865, 92
  %12867 = load i64, i64* %PC.i252
  %12868 = add i64 %12867, 7
  store i64 %12868, i64* %PC.i252
  %12869 = inttoptr i64 %12866 to i32*
  %12870 = load i32, i32* %12869
  %12871 = sub i32 %12870, 999600
  %12872 = icmp ult i32 %12870, 999600
  %12873 = zext i1 %12872 to i8
  %12874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12873, i8* %12874, align 1
  %12875 = and i32 %12871, 255
  %12876 = call i32 @llvm.ctpop.i32(i32 %12875)
  %12877 = trunc i32 %12876 to i8
  %12878 = and i8 %12877, 1
  %12879 = xor i8 %12878, 1
  %12880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12879, i8* %12880, align 1
  %12881 = xor i32 %12870, 999600
  %12882 = xor i32 %12881, %12871
  %12883 = lshr i32 %12882, 4
  %12884 = trunc i32 %12883 to i8
  %12885 = and i8 %12884, 1
  %12886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12885, i8* %12886, align 1
  %12887 = icmp eq i32 %12871, 0
  %12888 = zext i1 %12887 to i8
  %12889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12888, i8* %12889, align 1
  %12890 = lshr i32 %12871, 31
  %12891 = trunc i32 %12890 to i8
  %12892 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12891, i8* %12892, align 1
  %12893 = lshr i32 %12870, 31
  %12894 = xor i32 %12890, %12893
  %12895 = add i32 %12894, %12893
  %12896 = icmp eq i32 %12895, 2
  %12897 = zext i1 %12896 to i8
  %12898 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12897, i8* %12898, align 1
  store %struct.Memory* %loadMem_41bad5, %struct.Memory** %MEMORY
  %loadMem_41badc = load %struct.Memory*, %struct.Memory** %MEMORY
  %12899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12900 = getelementptr inbounds %struct.GPR, %struct.GPR* %12899, i32 0, i32 33
  %12901 = getelementptr inbounds %struct.Reg, %struct.Reg* %12900, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %12901 to i64*
  %12902 = load i64, i64* %PC.i251
  %12903 = add i64 %12902, 140
  %12904 = load i64, i64* %PC.i251
  %12905 = add i64 %12904, 6
  %12906 = load i64, i64* %PC.i251
  %12907 = add i64 %12906, 6
  store i64 %12907, i64* %PC.i251
  %12908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12909 = load i8, i8* %12908, align 1
  %12910 = icmp ne i8 %12909, 0
  %12911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12912 = load i8, i8* %12911, align 1
  %12913 = icmp ne i8 %12912, 0
  %12914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12915 = load i8, i8* %12914, align 1
  %12916 = icmp ne i8 %12915, 0
  %12917 = xor i1 %12913, %12916
  %12918 = or i1 %12910, %12917
  %12919 = zext i1 %12918 to i8
  store i8 %12919, i8* %BRANCH_TAKEN, align 1
  %12920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12921 = select i1 %12918, i64 %12903, i64 %12905
  store i64 %12921, i64* %12920, align 8
  store %struct.Memory* %loadMem_41badc, %struct.Memory** %MEMORY
  %loadBr_41badc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41badc = icmp eq i8 %loadBr_41badc, 1
  br i1 %cmpBr_41badc, label %block_.L_41bb68, label %block_41bae2

block_41bae2:                                     ; preds = %block_41bad5
  %loadMem_41bae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12923 = getelementptr inbounds %struct.GPR, %struct.GPR* %12922, i32 0, i32 33
  %12924 = getelementptr inbounds %struct.Reg, %struct.Reg* %12923, i32 0, i32 0
  %PC.i250 = bitcast %union.anon* %12924 to i64*
  %12925 = load i64, i64* %PC.i250
  %12926 = add i64 %12925, 8
  store i64 %12926, i64* %PC.i250
  %12927 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %12928 = sub i32 %12927, 1
  %12929 = icmp ult i32 %12927, 1
  %12930 = zext i1 %12929 to i8
  %12931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12930, i8* %12931, align 1
  %12932 = and i32 %12928, 255
  %12933 = call i32 @llvm.ctpop.i32(i32 %12932)
  %12934 = trunc i32 %12933 to i8
  %12935 = and i8 %12934, 1
  %12936 = xor i8 %12935, 1
  %12937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12936, i8* %12937, align 1
  %12938 = xor i32 %12927, 1
  %12939 = xor i32 %12938, %12928
  %12940 = lshr i32 %12939, 4
  %12941 = trunc i32 %12940 to i8
  %12942 = and i8 %12941, 1
  %12943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12942, i8* %12943, align 1
  %12944 = icmp eq i32 %12928, 0
  %12945 = zext i1 %12944 to i8
  %12946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12945, i8* %12946, align 1
  %12947 = lshr i32 %12928, 31
  %12948 = trunc i32 %12947 to i8
  %12949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12948, i8* %12949, align 1
  %12950 = lshr i32 %12927, 31
  %12951 = xor i32 %12947, %12950
  %12952 = add i32 %12951, %12950
  %12953 = icmp eq i32 %12952, 2
  %12954 = zext i1 %12953 to i8
  %12955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12954, i8* %12955, align 1
  store %struct.Memory* %loadMem_41bae2, %struct.Memory** %MEMORY
  %loadMem_41baea = load %struct.Memory*, %struct.Memory** %MEMORY
  %12956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12957 = getelementptr inbounds %struct.GPR, %struct.GPR* %12956, i32 0, i32 33
  %12958 = getelementptr inbounds %struct.Reg, %struct.Reg* %12957, i32 0, i32 0
  %PC.i249 = bitcast %union.anon* %12958 to i64*
  %12959 = load i64, i64* %PC.i249
  %12960 = add i64 %12959, 66
  %12961 = load i64, i64* %PC.i249
  %12962 = add i64 %12961, 6
  %12963 = load i64, i64* %PC.i249
  %12964 = add i64 %12963, 6
  store i64 %12964, i64* %PC.i249
  %12965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12966 = load i8, i8* %12965, align 1
  store i8 %12966, i8* %BRANCH_TAKEN, align 1
  %12967 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12968 = icmp ne i8 %12966, 0
  %12969 = select i1 %12968, i64 %12960, i64 %12962
  store i64 %12969, i64* %12967, align 8
  store %struct.Memory* %loadMem_41baea, %struct.Memory** %MEMORY
  %loadBr_41baea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41baea = icmp eq i8 %loadBr_41baea, 1
  br i1 %cmpBr_41baea, label %block_.L_41bb2c, label %block_41baf0

block_41baf0:                                     ; preds = %block_41bae2
  %loadMem_41baf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12971 = getelementptr inbounds %struct.GPR, %struct.GPR* %12970, i32 0, i32 33
  %12972 = getelementptr inbounds %struct.Reg, %struct.Reg* %12971, i32 0, i32 0
  %PC.i247 = bitcast %union.anon* %12972 to i64*
  %12973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12974 = getelementptr inbounds %struct.GPR, %struct.GPR* %12973, i32 0, i32 11
  %12975 = getelementptr inbounds %struct.Reg, %struct.Reg* %12974, i32 0, i32 0
  %RDI.i248 = bitcast %union.anon* %12975 to i64*
  %12976 = load i64, i64* %PC.i247
  %12977 = add i64 %12976, 10
  store i64 %12977, i64* %PC.i247
  store i64 ptrtoint (%G__0x4290fe_type* @G__0x4290fe to i64), i64* %RDI.i248, align 8
  store %struct.Memory* %loadMem_41baf0, %struct.Memory** %MEMORY
  %loadMem_41bafa = load %struct.Memory*, %struct.Memory** %MEMORY
  %12978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12979 = getelementptr inbounds %struct.GPR, %struct.GPR* %12978, i32 0, i32 33
  %12980 = getelementptr inbounds %struct.Reg, %struct.Reg* %12979, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %12980 to i64*
  %12981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12982 = getelementptr inbounds %struct.GPR, %struct.GPR* %12981, i32 0, i32 1
  %12983 = getelementptr inbounds %struct.Reg, %struct.Reg* %12982, i32 0, i32 0
  %RAX.i246 = bitcast %union.anon* %12983 to i64*
  %12984 = load i64, i64* %PC.i245
  %12985 = add i64 %12984, 5
  store i64 %12985, i64* %PC.i245
  store i64 2, i64* %RAX.i246, align 8
  store %struct.Memory* %loadMem_41bafa, %struct.Memory** %MEMORY
  %loadMem_41baff = load %struct.Memory*, %struct.Memory** %MEMORY
  %12986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12987 = getelementptr inbounds %struct.GPR, %struct.GPR* %12986, i32 0, i32 33
  %12988 = getelementptr inbounds %struct.Reg, %struct.Reg* %12987, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %12988 to i64*
  %12989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12990 = getelementptr inbounds %struct.GPR, %struct.GPR* %12989, i32 0, i32 5
  %12991 = getelementptr inbounds %struct.Reg, %struct.Reg* %12990, i32 0, i32 0
  %RCX.i244 = bitcast %union.anon* %12991 to i64*
  %12992 = load i64, i64* %PC.i243
  %12993 = add i64 %12992, 5
  store i64 %12993, i64* %PC.i243
  store i64 1000000, i64* %RCX.i244, align 8
  store %struct.Memory* %loadMem_41baff, %struct.Memory** %MEMORY
  %loadMem_41bb04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12995 = getelementptr inbounds %struct.GPR, %struct.GPR* %12994, i32 0, i32 33
  %12996 = getelementptr inbounds %struct.Reg, %struct.Reg* %12995, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %12996 to i64*
  %12997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12998 = getelementptr inbounds %struct.GPR, %struct.GPR* %12997, i32 0, i32 5
  %12999 = getelementptr inbounds %struct.Reg, %struct.Reg* %12998, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %12999 to i64*
  %13000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13001 = getelementptr inbounds %struct.GPR, %struct.GPR* %13000, i32 0, i32 15
  %13002 = getelementptr inbounds %struct.Reg, %struct.Reg* %13001, i32 0, i32 0
  %RBP.i242 = bitcast %union.anon* %13002 to i64*
  %13003 = load i64, i64* %RCX.i241
  %13004 = load i64, i64* %RBP.i242
  %13005 = sub i64 %13004, 92
  %13006 = load i64, i64* %PC.i240
  %13007 = add i64 %13006, 3
  store i64 %13007, i64* %PC.i240
  %13008 = trunc i64 %13003 to i32
  %13009 = inttoptr i64 %13005 to i32*
  %13010 = load i32, i32* %13009
  %13011 = sub i32 %13008, %13010
  %13012 = zext i32 %13011 to i64
  store i64 %13012, i64* %RCX.i241, align 8
  %13013 = icmp ult i32 %13008, %13010
  %13014 = zext i1 %13013 to i8
  %13015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13014, i8* %13015, align 1
  %13016 = and i32 %13011, 255
  %13017 = call i32 @llvm.ctpop.i32(i32 %13016)
  %13018 = trunc i32 %13017 to i8
  %13019 = and i8 %13018, 1
  %13020 = xor i8 %13019, 1
  %13021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13020, i8* %13021, align 1
  %13022 = xor i32 %13010, %13008
  %13023 = xor i32 %13022, %13011
  %13024 = lshr i32 %13023, 4
  %13025 = trunc i32 %13024 to i8
  %13026 = and i8 %13025, 1
  %13027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13026, i8* %13027, align 1
  %13028 = icmp eq i32 %13011, 0
  %13029 = zext i1 %13028 to i8
  %13030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13029, i8* %13030, align 1
  %13031 = lshr i32 %13011, 31
  %13032 = trunc i32 %13031 to i8
  %13033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13032, i8* %13033, align 1
  %13034 = lshr i32 %13008, 31
  %13035 = lshr i32 %13010, 31
  %13036 = xor i32 %13035, %13034
  %13037 = xor i32 %13031, %13034
  %13038 = add i32 %13037, %13036
  %13039 = icmp eq i32 %13038, 2
  %13040 = zext i1 %13039 to i8
  %13041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13040, i8* %13041, align 1
  store %struct.Memory* %loadMem_41bb04, %struct.Memory** %MEMORY
  %loadMem_41bb07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13043 = getelementptr inbounds %struct.GPR, %struct.GPR* %13042, i32 0, i32 33
  %13044 = getelementptr inbounds %struct.Reg, %struct.Reg* %13043, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %13044 to i64*
  %13045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13046 = getelementptr inbounds %struct.GPR, %struct.GPR* %13045, i32 0, i32 1
  %13047 = getelementptr inbounds %struct.Reg, %struct.Reg* %13046, i32 0, i32 0
  %EAX.i238 = bitcast %union.anon* %13047 to i32*
  %13048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13049 = getelementptr inbounds %struct.GPR, %struct.GPR* %13048, i32 0, i32 15
  %13050 = getelementptr inbounds %struct.Reg, %struct.Reg* %13049, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %13050 to i64*
  %13051 = load i64, i64* %RBP.i239
  %13052 = sub i64 %13051, 12580
  %13053 = load i32, i32* %EAX.i238
  %13054 = zext i32 %13053 to i64
  %13055 = load i64, i64* %PC.i237
  %13056 = add i64 %13055, 6
  store i64 %13056, i64* %PC.i237
  %13057 = inttoptr i64 %13052 to i32*
  store i32 %13053, i32* %13057
  store %struct.Memory* %loadMem_41bb07, %struct.Memory** %MEMORY
  %loadMem_41bb0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13059 = getelementptr inbounds %struct.GPR, %struct.GPR* %13058, i32 0, i32 33
  %13060 = getelementptr inbounds %struct.Reg, %struct.Reg* %13059, i32 0, i32 0
  %PC.i234 = bitcast %union.anon* %13060 to i64*
  %13061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13062 = getelementptr inbounds %struct.GPR, %struct.GPR* %13061, i32 0, i32 5
  %13063 = getelementptr inbounds %struct.Reg, %struct.Reg* %13062, i32 0, i32 0
  %ECX.i235 = bitcast %union.anon* %13063 to i32*
  %13064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13065 = getelementptr inbounds %struct.GPR, %struct.GPR* %13064, i32 0, i32 1
  %13066 = getelementptr inbounds %struct.Reg, %struct.Reg* %13065, i32 0, i32 0
  %RAX.i236 = bitcast %union.anon* %13066 to i64*
  %13067 = load i32, i32* %ECX.i235
  %13068 = zext i32 %13067 to i64
  %13069 = load i64, i64* %PC.i234
  %13070 = add i64 %13069, 2
  store i64 %13070, i64* %PC.i234
  %13071 = and i64 %13068, 4294967295
  store i64 %13071, i64* %RAX.i236, align 8
  store %struct.Memory* %loadMem_41bb0d, %struct.Memory** %MEMORY
  %loadMem_41bb0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13073 = getelementptr inbounds %struct.GPR, %struct.GPR* %13072, i32 0, i32 33
  %13074 = getelementptr inbounds %struct.Reg, %struct.Reg* %13073, i32 0, i32 0
  %PC.i233 = bitcast %union.anon* %13074 to i64*
  %13075 = load i64, i64* %PC.i233
  %13076 = add i64 %13075, 1
  store i64 %13076, i64* %PC.i233
  %13077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %13078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13079 = bitcast %union.anon* %13078 to i32*
  %13080 = load i32, i32* %13079, align 8
  %13081 = sext i32 %13080 to i64
  %13082 = lshr i64 %13081, 32
  store i64 %13082, i64* %13077, align 8
  store %struct.Memory* %loadMem_41bb0f, %struct.Memory** %MEMORY
  %loadMem_41bb10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13084 = getelementptr inbounds %struct.GPR, %struct.GPR* %13083, i32 0, i32 33
  %13085 = getelementptr inbounds %struct.Reg, %struct.Reg* %13084, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %13085 to i64*
  %13086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13087 = getelementptr inbounds %struct.GPR, %struct.GPR* %13086, i32 0, i32 5
  %13088 = getelementptr inbounds %struct.Reg, %struct.Reg* %13087, i32 0, i32 0
  %RCX.i231 = bitcast %union.anon* %13088 to i64*
  %13089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13090 = getelementptr inbounds %struct.GPR, %struct.GPR* %13089, i32 0, i32 15
  %13091 = getelementptr inbounds %struct.Reg, %struct.Reg* %13090, i32 0, i32 0
  %RBP.i232 = bitcast %union.anon* %13091 to i64*
  %13092 = load i64, i64* %RBP.i232
  %13093 = sub i64 %13092, 12580
  %13094 = load i64, i64* %PC.i230
  %13095 = add i64 %13094, 6
  store i64 %13095, i64* %PC.i230
  %13096 = inttoptr i64 %13093 to i32*
  %13097 = load i32, i32* %13096
  %13098 = zext i32 %13097 to i64
  store i64 %13098, i64* %RCX.i231, align 8
  store %struct.Memory* %loadMem_41bb10, %struct.Memory** %MEMORY
  %loadMem_41bb16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13100 = getelementptr inbounds %struct.GPR, %struct.GPR* %13099, i32 0, i32 33
  %13101 = getelementptr inbounds %struct.Reg, %struct.Reg* %13100, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %13101 to i64*
  %13102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13103 = getelementptr inbounds %struct.GPR, %struct.GPR* %13102, i32 0, i32 5
  %13104 = getelementptr inbounds %struct.Reg, %struct.Reg* %13103, i32 0, i32 0
  %ECX.i225 = bitcast %union.anon* %13104 to i32*
  %13105 = load i32, i32* %ECX.i225
  %13106 = zext i32 %13105 to i64
  %13107 = load i64, i64* %PC.i224
  %13108 = add i64 %13107, 2
  store i64 %13108, i64* %PC.i224
  %13109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13110 = bitcast %union.anon* %13109 to i32*
  %13111 = load i32, i32* %13110, align 8
  %13112 = zext i32 %13111 to i64
  %13113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %13114 = bitcast %union.anon* %13113 to i32*
  %13115 = load i32, i32* %13114, align 8
  %13116 = zext i32 %13115 to i64
  %13117 = shl i64 %13106, 32
  %13118 = ashr exact i64 %13117, 32
  %13119 = shl i64 %13116, 32
  %13120 = or i64 %13119, %13112
  %13121 = sdiv i64 %13120, %13118
  %13122 = shl i64 %13121, 32
  %13123 = ashr exact i64 %13122, 32
  %13124 = icmp eq i64 %13121, %13123
  br i1 %13124, label %13129, label %13125

; <label>:13125:                                  ; preds = %block_41baf0
  %13126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13127 = load i64, i64* %13126, align 8
  %13128 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13127, %struct.Memory* %loadMem_41bb16)
  br label %routine_idivl__ecx.exit226

; <label>:13129:                                  ; preds = %block_41baf0
  %13130 = srem i64 %13120, %13118
  %13131 = getelementptr inbounds %union.anon, %union.anon* %13109, i64 0, i32 0
  %13132 = and i64 %13121, 4294967295
  store i64 %13132, i64* %13131, align 8
  %13133 = getelementptr inbounds %union.anon, %union.anon* %13113, i64 0, i32 0
  %13134 = and i64 %13130, 4294967295
  store i64 %13134, i64* %13133, align 8
  %13135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13135, align 1
  %13136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %13136, align 1
  %13137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13137, align 1
  %13138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13138, align 1
  %13139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13139, align 1
  %13140 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13140, align 1
  br label %routine_idivl__ecx.exit226

routine_idivl__ecx.exit226:                       ; preds = %13125, %13129
  %13141 = phi %struct.Memory* [ %13128, %13125 ], [ %loadMem_41bb16, %13129 ]
  store %struct.Memory* %13141, %struct.Memory** %MEMORY
  %loadMem_41bb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13143 = getelementptr inbounds %struct.GPR, %struct.GPR* %13142, i32 0, i32 33
  %13144 = getelementptr inbounds %struct.Reg, %struct.Reg* %13143, i32 0, i32 0
  %PC.i221 = bitcast %union.anon* %13144 to i64*
  %13145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13146 = getelementptr inbounds %struct.GPR, %struct.GPR* %13145, i32 0, i32 1
  %13147 = getelementptr inbounds %struct.Reg, %struct.Reg* %13146, i32 0, i32 0
  %EAX.i222 = bitcast %union.anon* %13147 to i32*
  %13148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13149 = getelementptr inbounds %struct.GPR, %struct.GPR* %13148, i32 0, i32 9
  %13150 = getelementptr inbounds %struct.Reg, %struct.Reg* %13149, i32 0, i32 0
  %RSI.i223 = bitcast %union.anon* %13150 to i64*
  %13151 = load i32, i32* %EAX.i222
  %13152 = zext i32 %13151 to i64
  %13153 = load i64, i64* %PC.i221
  %13154 = add i64 %13153, 2
  store i64 %13154, i64* %PC.i221
  %13155 = and i64 %13152, 4294967295
  store i64 %13155, i64* %RSI.i223, align 8
  store %struct.Memory* %loadMem_41bb18, %struct.Memory** %MEMORY
  %loadMem_41bb1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13157 = getelementptr inbounds %struct.GPR, %struct.GPR* %13156, i32 0, i32 33
  %13158 = getelementptr inbounds %struct.Reg, %struct.Reg* %13157, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %13158 to i64*
  %13159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13160 = getelementptr inbounds %struct.GPR, %struct.GPR* %13159, i32 0, i32 1
  %13161 = getelementptr inbounds %struct.Reg, %struct.Reg* %13160, i32 0, i32 0
  %13162 = bitcast %union.anon* %13161 to %struct.anon.2*
  %AL.i220 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13162, i32 0, i32 0
  %13163 = load i64, i64* %PC.i219
  %13164 = add i64 %13163, 2
  store i64 %13164, i64* %PC.i219
  store i8 0, i8* %AL.i220, align 1
  store %struct.Memory* %loadMem_41bb1a, %struct.Memory** %MEMORY
  %loadMem1_41bb1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13166 = getelementptr inbounds %struct.GPR, %struct.GPR* %13165, i32 0, i32 33
  %13167 = getelementptr inbounds %struct.Reg, %struct.Reg* %13166, i32 0, i32 0
  %PC.i218 = bitcast %union.anon* %13167 to i64*
  %13168 = load i64, i64* %PC.i218
  %13169 = add i64 %13168, -110188
  %13170 = load i64, i64* %PC.i218
  %13171 = add i64 %13170, 5
  %13172 = load i64, i64* %PC.i218
  %13173 = add i64 %13172, 5
  store i64 %13173, i64* %PC.i218
  %13174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13175 = load i64, i64* %13174, align 8
  %13176 = add i64 %13175, -8
  %13177 = inttoptr i64 %13176 to i64*
  store i64 %13171, i64* %13177
  store i64 %13176, i64* %13174, align 8
  %13178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13169, i64* %13178, align 8
  store %struct.Memory* %loadMem1_41bb1c, %struct.Memory** %MEMORY
  %loadMem2_41bb1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bb1c = load i64, i64* %3
  %13179 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41bb1c)
  store %struct.Memory* %13179, %struct.Memory** %MEMORY
  %loadMem_41bb21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13181 = getelementptr inbounds %struct.GPR, %struct.GPR* %13180, i32 0, i32 33
  %13182 = getelementptr inbounds %struct.Reg, %struct.Reg* %13181, i32 0, i32 0
  %PC.i212 = bitcast %union.anon* %13182 to i64*
  %13183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13184 = getelementptr inbounds %struct.GPR, %struct.GPR* %13183, i32 0, i32 1
  %13185 = getelementptr inbounds %struct.Reg, %struct.Reg* %13184, i32 0, i32 0
  %EAX.i213 = bitcast %union.anon* %13185 to i32*
  %13186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13187 = getelementptr inbounds %struct.GPR, %struct.GPR* %13186, i32 0, i32 15
  %13188 = getelementptr inbounds %struct.Reg, %struct.Reg* %13187, i32 0, i32 0
  %RBP.i214 = bitcast %union.anon* %13188 to i64*
  %13189 = load i64, i64* %RBP.i214
  %13190 = sub i64 %13189, 12584
  %13191 = load i32, i32* %EAX.i213
  %13192 = zext i32 %13191 to i64
  %13193 = load i64, i64* %PC.i212
  %13194 = add i64 %13193, 6
  store i64 %13194, i64* %PC.i212
  %13195 = inttoptr i64 %13190 to i32*
  store i32 %13191, i32* %13195
  store %struct.Memory* %loadMem_41bb21, %struct.Memory** %MEMORY
  %loadMem_41bb27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13197 = getelementptr inbounds %struct.GPR, %struct.GPR* %13196, i32 0, i32 33
  %13198 = getelementptr inbounds %struct.Reg, %struct.Reg* %13197, i32 0, i32 0
  %PC.i211 = bitcast %union.anon* %13198 to i64*
  %13199 = load i64, i64* %PC.i211
  %13200 = add i64 %13199, 60
  %13201 = load i64, i64* %PC.i211
  %13202 = add i64 %13201, 5
  store i64 %13202, i64* %PC.i211
  %13203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13200, i64* %13203, align 8
  store %struct.Memory* %loadMem_41bb27, %struct.Memory** %MEMORY
  br label %block_.L_41bb63

block_.L_41bb2c:                                  ; preds = %block_41bae2
  %loadMem_41bb2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13205 = getelementptr inbounds %struct.GPR, %struct.GPR* %13204, i32 0, i32 33
  %13206 = getelementptr inbounds %struct.Reg, %struct.Reg* %13205, i32 0, i32 0
  %PC.i209 = bitcast %union.anon* %13206 to i64*
  %13207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13208 = getelementptr inbounds %struct.GPR, %struct.GPR* %13207, i32 0, i32 11
  %13209 = getelementptr inbounds %struct.Reg, %struct.Reg* %13208, i32 0, i32 0
  %RDI.i210 = bitcast %union.anon* %13209 to i64*
  %13210 = load i64, i64* %PC.i209
  %13211 = add i64 %13210, 10
  store i64 %13211, i64* %PC.i209
  store i64 ptrtoint (%G__0x429119_type* @G__0x429119 to i64), i64* %RDI.i210, align 8
  store %struct.Memory* %loadMem_41bb2c, %struct.Memory** %MEMORY
  %loadMem_41bb36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13213 = getelementptr inbounds %struct.GPR, %struct.GPR* %13212, i32 0, i32 33
  %13214 = getelementptr inbounds %struct.Reg, %struct.Reg* %13213, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %13214 to i64*
  %13215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13216 = getelementptr inbounds %struct.GPR, %struct.GPR* %13215, i32 0, i32 1
  %13217 = getelementptr inbounds %struct.Reg, %struct.Reg* %13216, i32 0, i32 0
  %RAX.i208 = bitcast %union.anon* %13217 to i64*
  %13218 = load i64, i64* %PC.i207
  %13219 = add i64 %13218, 5
  store i64 %13219, i64* %PC.i207
  store i64 2, i64* %RAX.i208, align 8
  store %struct.Memory* %loadMem_41bb36, %struct.Memory** %MEMORY
  %loadMem_41bb3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13221 = getelementptr inbounds %struct.GPR, %struct.GPR* %13220, i32 0, i32 33
  %13222 = getelementptr inbounds %struct.Reg, %struct.Reg* %13221, i32 0, i32 0
  %PC.i205 = bitcast %union.anon* %13222 to i64*
  %13223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13224 = getelementptr inbounds %struct.GPR, %struct.GPR* %13223, i32 0, i32 5
  %13225 = getelementptr inbounds %struct.Reg, %struct.Reg* %13224, i32 0, i32 0
  %RCX.i206 = bitcast %union.anon* %13225 to i64*
  %13226 = load i64, i64* %PC.i205
  %13227 = add i64 %13226, 5
  store i64 %13227, i64* %PC.i205
  store i64 1000000, i64* %RCX.i206, align 8
  store %struct.Memory* %loadMem_41bb3b, %struct.Memory** %MEMORY
  %loadMem_41bb40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13229 = getelementptr inbounds %struct.GPR, %struct.GPR* %13228, i32 0, i32 33
  %13230 = getelementptr inbounds %struct.Reg, %struct.Reg* %13229, i32 0, i32 0
  %PC.i202 = bitcast %union.anon* %13230 to i64*
  %13231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13232 = getelementptr inbounds %struct.GPR, %struct.GPR* %13231, i32 0, i32 5
  %13233 = getelementptr inbounds %struct.Reg, %struct.Reg* %13232, i32 0, i32 0
  %RCX.i203 = bitcast %union.anon* %13233 to i64*
  %13234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13235 = getelementptr inbounds %struct.GPR, %struct.GPR* %13234, i32 0, i32 15
  %13236 = getelementptr inbounds %struct.Reg, %struct.Reg* %13235, i32 0, i32 0
  %RBP.i204 = bitcast %union.anon* %13236 to i64*
  %13237 = load i64, i64* %RCX.i203
  %13238 = load i64, i64* %RBP.i204
  %13239 = sub i64 %13238, 92
  %13240 = load i64, i64* %PC.i202
  %13241 = add i64 %13240, 3
  store i64 %13241, i64* %PC.i202
  %13242 = trunc i64 %13237 to i32
  %13243 = inttoptr i64 %13239 to i32*
  %13244 = load i32, i32* %13243
  %13245 = sub i32 %13242, %13244
  %13246 = zext i32 %13245 to i64
  store i64 %13246, i64* %RCX.i203, align 8
  %13247 = icmp ult i32 %13242, %13244
  %13248 = zext i1 %13247 to i8
  %13249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13248, i8* %13249, align 1
  %13250 = and i32 %13245, 255
  %13251 = call i32 @llvm.ctpop.i32(i32 %13250)
  %13252 = trunc i32 %13251 to i8
  %13253 = and i8 %13252, 1
  %13254 = xor i8 %13253, 1
  %13255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13254, i8* %13255, align 1
  %13256 = xor i32 %13244, %13242
  %13257 = xor i32 %13256, %13245
  %13258 = lshr i32 %13257, 4
  %13259 = trunc i32 %13258 to i8
  %13260 = and i8 %13259, 1
  %13261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13260, i8* %13261, align 1
  %13262 = icmp eq i32 %13245, 0
  %13263 = zext i1 %13262 to i8
  %13264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13263, i8* %13264, align 1
  %13265 = lshr i32 %13245, 31
  %13266 = trunc i32 %13265 to i8
  %13267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13266, i8* %13267, align 1
  %13268 = lshr i32 %13242, 31
  %13269 = lshr i32 %13244, 31
  %13270 = xor i32 %13269, %13268
  %13271 = xor i32 %13265, %13268
  %13272 = add i32 %13271, %13270
  %13273 = icmp eq i32 %13272, 2
  %13274 = zext i1 %13273 to i8
  %13275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13274, i8* %13275, align 1
  store %struct.Memory* %loadMem_41bb40, %struct.Memory** %MEMORY
  %loadMem_41bb43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13277 = getelementptr inbounds %struct.GPR, %struct.GPR* %13276, i32 0, i32 33
  %13278 = getelementptr inbounds %struct.Reg, %struct.Reg* %13277, i32 0, i32 0
  %PC.i199 = bitcast %union.anon* %13278 to i64*
  %13279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13280 = getelementptr inbounds %struct.GPR, %struct.GPR* %13279, i32 0, i32 1
  %13281 = getelementptr inbounds %struct.Reg, %struct.Reg* %13280, i32 0, i32 0
  %EAX.i200 = bitcast %union.anon* %13281 to i32*
  %13282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13283 = getelementptr inbounds %struct.GPR, %struct.GPR* %13282, i32 0, i32 15
  %13284 = getelementptr inbounds %struct.Reg, %struct.Reg* %13283, i32 0, i32 0
  %RBP.i201 = bitcast %union.anon* %13284 to i64*
  %13285 = load i64, i64* %RBP.i201
  %13286 = sub i64 %13285, 12588
  %13287 = load i32, i32* %EAX.i200
  %13288 = zext i32 %13287 to i64
  %13289 = load i64, i64* %PC.i199
  %13290 = add i64 %13289, 6
  store i64 %13290, i64* %PC.i199
  %13291 = inttoptr i64 %13286 to i32*
  store i32 %13287, i32* %13291
  store %struct.Memory* %loadMem_41bb43, %struct.Memory** %MEMORY
  %loadMem_41bb49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13293 = getelementptr inbounds %struct.GPR, %struct.GPR* %13292, i32 0, i32 33
  %13294 = getelementptr inbounds %struct.Reg, %struct.Reg* %13293, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %13294 to i64*
  %13295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13296 = getelementptr inbounds %struct.GPR, %struct.GPR* %13295, i32 0, i32 5
  %13297 = getelementptr inbounds %struct.Reg, %struct.Reg* %13296, i32 0, i32 0
  %ECX.i197 = bitcast %union.anon* %13297 to i32*
  %13298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13299 = getelementptr inbounds %struct.GPR, %struct.GPR* %13298, i32 0, i32 1
  %13300 = getelementptr inbounds %struct.Reg, %struct.Reg* %13299, i32 0, i32 0
  %RAX.i198 = bitcast %union.anon* %13300 to i64*
  %13301 = load i32, i32* %ECX.i197
  %13302 = zext i32 %13301 to i64
  %13303 = load i64, i64* %PC.i196
  %13304 = add i64 %13303, 2
  store i64 %13304, i64* %PC.i196
  %13305 = and i64 %13302, 4294967295
  store i64 %13305, i64* %RAX.i198, align 8
  store %struct.Memory* %loadMem_41bb49, %struct.Memory** %MEMORY
  %loadMem_41bb4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13307 = getelementptr inbounds %struct.GPR, %struct.GPR* %13306, i32 0, i32 33
  %13308 = getelementptr inbounds %struct.Reg, %struct.Reg* %13307, i32 0, i32 0
  %PC.i195 = bitcast %union.anon* %13308 to i64*
  %13309 = load i64, i64* %PC.i195
  %13310 = add i64 %13309, 1
  store i64 %13310, i64* %PC.i195
  %13311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %13312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13313 = bitcast %union.anon* %13312 to i32*
  %13314 = load i32, i32* %13313, align 8
  %13315 = sext i32 %13314 to i64
  %13316 = lshr i64 %13315, 32
  store i64 %13316, i64* %13311, align 8
  store %struct.Memory* %loadMem_41bb4b, %struct.Memory** %MEMORY
  %loadMem_41bb4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13318 = getelementptr inbounds %struct.GPR, %struct.GPR* %13317, i32 0, i32 33
  %13319 = getelementptr inbounds %struct.Reg, %struct.Reg* %13318, i32 0, i32 0
  %PC.i192 = bitcast %union.anon* %13319 to i64*
  %13320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13321 = getelementptr inbounds %struct.GPR, %struct.GPR* %13320, i32 0, i32 5
  %13322 = getelementptr inbounds %struct.Reg, %struct.Reg* %13321, i32 0, i32 0
  %RCX.i193 = bitcast %union.anon* %13322 to i64*
  %13323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13324 = getelementptr inbounds %struct.GPR, %struct.GPR* %13323, i32 0, i32 15
  %13325 = getelementptr inbounds %struct.Reg, %struct.Reg* %13324, i32 0, i32 0
  %RBP.i194 = bitcast %union.anon* %13325 to i64*
  %13326 = load i64, i64* %RBP.i194
  %13327 = sub i64 %13326, 12588
  %13328 = load i64, i64* %PC.i192
  %13329 = add i64 %13328, 6
  store i64 %13329, i64* %PC.i192
  %13330 = inttoptr i64 %13327 to i32*
  %13331 = load i32, i32* %13330
  %13332 = zext i32 %13331 to i64
  store i64 %13332, i64* %RCX.i193, align 8
  store %struct.Memory* %loadMem_41bb4c, %struct.Memory** %MEMORY
  %loadMem_41bb52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13334 = getelementptr inbounds %struct.GPR, %struct.GPR* %13333, i32 0, i32 33
  %13335 = getelementptr inbounds %struct.Reg, %struct.Reg* %13334, i32 0, i32 0
  %PC.i189 = bitcast %union.anon* %13335 to i64*
  %13336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13337 = getelementptr inbounds %struct.GPR, %struct.GPR* %13336, i32 0, i32 5
  %13338 = getelementptr inbounds %struct.Reg, %struct.Reg* %13337, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %13338 to i32*
  %13339 = load i32, i32* %ECX.i
  %13340 = zext i32 %13339 to i64
  %13341 = load i64, i64* %PC.i189
  %13342 = add i64 %13341, 2
  store i64 %13342, i64* %PC.i189
  %13343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %13344 = bitcast %union.anon* %13343 to i32*
  %13345 = load i32, i32* %13344, align 8
  %13346 = zext i32 %13345 to i64
  %13347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %13348 = bitcast %union.anon* %13347 to i32*
  %13349 = load i32, i32* %13348, align 8
  %13350 = zext i32 %13349 to i64
  %13351 = shl i64 %13340, 32
  %13352 = ashr exact i64 %13351, 32
  %13353 = shl i64 %13350, 32
  %13354 = or i64 %13353, %13346
  %13355 = sdiv i64 %13354, %13352
  %13356 = shl i64 %13355, 32
  %13357 = ashr exact i64 %13356, 32
  %13358 = icmp eq i64 %13355, %13357
  br i1 %13358, label %13363, label %13359

; <label>:13359:                                  ; preds = %block_.L_41bb2c
  %13360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13361 = load i64, i64* %13360, align 8
  %13362 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %13361, %struct.Memory* %loadMem_41bb52)
  br label %routine_idivl__ecx.exit

; <label>:13363:                                  ; preds = %block_.L_41bb2c
  %13364 = srem i64 %13354, %13352
  %13365 = getelementptr inbounds %union.anon, %union.anon* %13343, i64 0, i32 0
  %13366 = and i64 %13355, 4294967295
  store i64 %13366, i64* %13365, align 8
  %13367 = getelementptr inbounds %union.anon, %union.anon* %13347, i64 0, i32 0
  %13368 = and i64 %13364, 4294967295
  store i64 %13368, i64* %13367, align 8
  %13369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13369, align 1
  %13370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %13370, align 1
  %13371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13371, align 1
  %13372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13372, align 1
  %13373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %13373, align 1
  %13374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13374, align 1
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %13359, %13363
  %13375 = phi %struct.Memory* [ %13362, %13359 ], [ %loadMem_41bb52, %13363 ]
  store %struct.Memory* %13375, %struct.Memory** %MEMORY
  %loadMem_41bb54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13377 = getelementptr inbounds %struct.GPR, %struct.GPR* %13376, i32 0, i32 33
  %13378 = getelementptr inbounds %struct.Reg, %struct.Reg* %13377, i32 0, i32 0
  %PC.i187 = bitcast %union.anon* %13378 to i64*
  %13379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13380 = getelementptr inbounds %struct.GPR, %struct.GPR* %13379, i32 0, i32 1
  %13381 = getelementptr inbounds %struct.Reg, %struct.Reg* %13380, i32 0, i32 0
  %EAX.i188 = bitcast %union.anon* %13381 to i32*
  %13382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13383 = getelementptr inbounds %struct.GPR, %struct.GPR* %13382, i32 0, i32 9
  %13384 = getelementptr inbounds %struct.Reg, %struct.Reg* %13383, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %13384 to i64*
  %13385 = load i32, i32* %EAX.i188
  %13386 = zext i32 %13385 to i64
  %13387 = load i64, i64* %PC.i187
  %13388 = add i64 %13387, 2
  store i64 %13388, i64* %PC.i187
  %13389 = and i64 %13386, 4294967295
  store i64 %13389, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_41bb54, %struct.Memory** %MEMORY
  %loadMem_41bb56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13391 = getelementptr inbounds %struct.GPR, %struct.GPR* %13390, i32 0, i32 33
  %13392 = getelementptr inbounds %struct.Reg, %struct.Reg* %13391, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %13392 to i64*
  %13393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13394 = getelementptr inbounds %struct.GPR, %struct.GPR* %13393, i32 0, i32 1
  %13395 = getelementptr inbounds %struct.Reg, %struct.Reg* %13394, i32 0, i32 0
  %13396 = bitcast %union.anon* %13395 to %struct.anon.2*
  %AL.i186 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13396, i32 0, i32 0
  %13397 = load i64, i64* %PC.i185
  %13398 = add i64 %13397, 2
  store i64 %13398, i64* %PC.i185
  store i8 0, i8* %AL.i186, align 1
  store %struct.Memory* %loadMem_41bb56, %struct.Memory** %MEMORY
  %loadMem1_41bb58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13400 = getelementptr inbounds %struct.GPR, %struct.GPR* %13399, i32 0, i32 33
  %13401 = getelementptr inbounds %struct.Reg, %struct.Reg* %13400, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %13401 to i64*
  %13402 = load i64, i64* %PC.i184
  %13403 = add i64 %13402, -110248
  %13404 = load i64, i64* %PC.i184
  %13405 = add i64 %13404, 5
  %13406 = load i64, i64* %PC.i184
  %13407 = add i64 %13406, 5
  store i64 %13407, i64* %PC.i184
  %13408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13409 = load i64, i64* %13408, align 8
  %13410 = add i64 %13409, -8
  %13411 = inttoptr i64 %13410 to i64*
  store i64 %13405, i64* %13411
  store i64 %13410, i64* %13408, align 8
  %13412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13403, i64* %13412, align 8
  store %struct.Memory* %loadMem1_41bb58, %struct.Memory** %MEMORY
  %loadMem2_41bb58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bb58 = load i64, i64* %3
  %13413 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41bb58)
  store %struct.Memory* %13413, %struct.Memory** %MEMORY
  %loadMem_41bb5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13415 = getelementptr inbounds %struct.GPR, %struct.GPR* %13414, i32 0, i32 33
  %13416 = getelementptr inbounds %struct.Reg, %struct.Reg* %13415, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %13416 to i64*
  %13417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13418 = getelementptr inbounds %struct.GPR, %struct.GPR* %13417, i32 0, i32 1
  %13419 = getelementptr inbounds %struct.Reg, %struct.Reg* %13418, i32 0, i32 0
  %EAX.i181 = bitcast %union.anon* %13419 to i32*
  %13420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13421 = getelementptr inbounds %struct.GPR, %struct.GPR* %13420, i32 0, i32 15
  %13422 = getelementptr inbounds %struct.Reg, %struct.Reg* %13421, i32 0, i32 0
  %RBP.i182 = bitcast %union.anon* %13422 to i64*
  %13423 = load i64, i64* %RBP.i182
  %13424 = sub i64 %13423, 12592
  %13425 = load i32, i32* %EAX.i181
  %13426 = zext i32 %13425 to i64
  %13427 = load i64, i64* %PC.i180
  %13428 = add i64 %13427, 6
  store i64 %13428, i64* %PC.i180
  %13429 = inttoptr i64 %13424 to i32*
  store i32 %13425, i32* %13429
  store %struct.Memory* %loadMem_41bb5d, %struct.Memory** %MEMORY
  br label %block_.L_41bb63

block_.L_41bb63:                                  ; preds = %routine_idivl__ecx.exit, %routine_idivl__ecx.exit226
  %loadMem_41bb63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13431 = getelementptr inbounds %struct.GPR, %struct.GPR* %13430, i32 0, i32 33
  %13432 = getelementptr inbounds %struct.Reg, %struct.Reg* %13431, i32 0, i32 0
  %PC.i179 = bitcast %union.anon* %13432 to i64*
  %13433 = load i64, i64* %PC.i179
  %13434 = add i64 %13433, 5
  %13435 = load i64, i64* %PC.i179
  %13436 = add i64 %13435, 5
  store i64 %13436, i64* %PC.i179
  %13437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13434, i64* %13437, align 8
  store %struct.Memory* %loadMem_41bb63, %struct.Memory** %MEMORY
  br label %block_.L_41bb68

block_.L_41bb68:                                  ; preds = %block_.L_41bb63, %block_41bad5
  %loadMem_41bb68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13439 = getelementptr inbounds %struct.GPR, %struct.GPR* %13438, i32 0, i32 33
  %13440 = getelementptr inbounds %struct.Reg, %struct.Reg* %13439, i32 0, i32 0
  %PC.i178 = bitcast %union.anon* %13440 to i64*
  %13441 = load i64, i64* %PC.i178
  %13442 = add i64 %13441, 5
  %13443 = load i64, i64* %PC.i178
  %13444 = add i64 %13443, 5
  store i64 %13444, i64* %PC.i178
  %13445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13442, i64* %13445, align 8
  store %struct.Memory* %loadMem_41bb68, %struct.Memory** %MEMORY
  br label %block_.L_41bb6d

block_.L_41bb6d:                                  ; preds = %block_.L_41bb68, %block_41bac7, %block_41bab9, %block_41baab, %block_41ba9d, %block_41ba8f, %block_41ba81, %block_41ba73, %block_41ba65, %block_.L_41ba57
  %loadMem_41bb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13447 = getelementptr inbounds %struct.GPR, %struct.GPR* %13446, i32 0, i32 33
  %13448 = getelementptr inbounds %struct.Reg, %struct.Reg* %13447, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %13448 to i64*
  %13449 = load i64, i64* %PC.i177
  %13450 = add i64 %13449, 8
  store i64 %13450, i64* %PC.i177
  %13451 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %13452 = sub i32 %13451, 2
  %13453 = icmp ult i32 %13451, 2
  %13454 = zext i1 %13453 to i8
  %13455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13454, i8* %13455, align 1
  %13456 = and i32 %13452, 255
  %13457 = call i32 @llvm.ctpop.i32(i32 %13456)
  %13458 = trunc i32 %13457 to i8
  %13459 = and i8 %13458, 1
  %13460 = xor i8 %13459, 1
  %13461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13460, i8* %13461, align 1
  %13462 = xor i32 %13451, 2
  %13463 = xor i32 %13462, %13452
  %13464 = lshr i32 %13463, 4
  %13465 = trunc i32 %13464 to i8
  %13466 = and i8 %13465, 1
  %13467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13466, i8* %13467, align 1
  %13468 = icmp eq i32 %13452, 0
  %13469 = zext i1 %13468 to i8
  %13470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13469, i8* %13470, align 1
  %13471 = lshr i32 %13452, 31
  %13472 = trunc i32 %13471 to i8
  %13473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13472, i8* %13473, align 1
  %13474 = lshr i32 %13451, 31
  %13475 = xor i32 %13471, %13474
  %13476 = add i32 %13475, %13474
  %13477 = icmp eq i32 %13476, 2
  %13478 = zext i1 %13477 to i8
  %13479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13478, i8* %13479, align 1
  store %struct.Memory* %loadMem_41bb6d, %struct.Memory** %MEMORY
  %loadMem_41bb75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13481 = getelementptr inbounds %struct.GPR, %struct.GPR* %13480, i32 0, i32 33
  %13482 = getelementptr inbounds %struct.Reg, %struct.Reg* %13481, i32 0, i32 0
  %PC.i176 = bitcast %union.anon* %13482 to i64*
  %13483 = load i64, i64* %PC.i176
  %13484 = add i64 %13483, 156
  %13485 = load i64, i64* %PC.i176
  %13486 = add i64 %13485, 6
  %13487 = load i64, i64* %PC.i176
  %13488 = add i64 %13487, 6
  store i64 %13488, i64* %PC.i176
  %13489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13490 = load i8, i8* %13489, align 1
  store i8 %13490, i8* %BRANCH_TAKEN, align 1
  %13491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13492 = icmp ne i8 %13490, 0
  %13493 = select i1 %13492, i64 %13484, i64 %13486
  store i64 %13493, i64* %13491, align 8
  store %struct.Memory* %loadMem_41bb75, %struct.Memory** %MEMORY
  %loadBr_41bb75 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bb75 = icmp eq i8 %loadBr_41bb75, 1
  br i1 %cmpBr_41bb75, label %block_.L_41bc11, label %block_41bb7b

block_41bb7b:                                     ; preds = %block_.L_41bb6d
  %loadMem_41bb7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %13494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13495 = getelementptr inbounds %struct.GPR, %struct.GPR* %13494, i32 0, i32 33
  %13496 = getelementptr inbounds %struct.Reg, %struct.Reg* %13495, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %13496 to i64*
  %13497 = load i64, i64* %PC.i175
  %13498 = add i64 %13497, 8
  store i64 %13498, i64* %PC.i175
  %13499 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %13500 = sub i32 %13499, 3
  %13501 = icmp ult i32 %13499, 3
  %13502 = zext i1 %13501 to i8
  %13503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13502, i8* %13503, align 1
  %13504 = and i32 %13500, 255
  %13505 = call i32 @llvm.ctpop.i32(i32 %13504)
  %13506 = trunc i32 %13505 to i8
  %13507 = and i8 %13506, 1
  %13508 = xor i8 %13507, 1
  %13509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13508, i8* %13509, align 1
  %13510 = xor i32 %13499, 3
  %13511 = xor i32 %13510, %13500
  %13512 = lshr i32 %13511, 4
  %13513 = trunc i32 %13512 to i8
  %13514 = and i8 %13513, 1
  %13515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13514, i8* %13515, align 1
  %13516 = icmp eq i32 %13500, 0
  %13517 = zext i1 %13516 to i8
  %13518 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13517, i8* %13518, align 1
  %13519 = lshr i32 %13500, 31
  %13520 = trunc i32 %13519 to i8
  %13521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13520, i8* %13521, align 1
  %13522 = lshr i32 %13499, 31
  %13523 = xor i32 %13519, %13522
  %13524 = add i32 %13523, %13522
  %13525 = icmp eq i32 %13524, 2
  %13526 = zext i1 %13525 to i8
  %13527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13526, i8* %13527, align 1
  store %struct.Memory* %loadMem_41bb7b, %struct.Memory** %MEMORY
  %loadMem_41bb83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13529 = getelementptr inbounds %struct.GPR, %struct.GPR* %13528, i32 0, i32 33
  %13530 = getelementptr inbounds %struct.Reg, %struct.Reg* %13529, i32 0, i32 0
  %PC.i174 = bitcast %union.anon* %13530 to i64*
  %13531 = load i64, i64* %PC.i174
  %13532 = add i64 %13531, 142
  %13533 = load i64, i64* %PC.i174
  %13534 = add i64 %13533, 6
  %13535 = load i64, i64* %PC.i174
  %13536 = add i64 %13535, 6
  store i64 %13536, i64* %PC.i174
  %13537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13538 = load i8, i8* %13537, align 1
  store i8 %13538, i8* %BRANCH_TAKEN, align 1
  %13539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13540 = icmp ne i8 %13538, 0
  %13541 = select i1 %13540, i64 %13532, i64 %13534
  store i64 %13541, i64* %13539, align 8
  store %struct.Memory* %loadMem_41bb83, %struct.Memory** %MEMORY
  %loadBr_41bb83 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bb83 = icmp eq i8 %loadBr_41bb83, 1
  br i1 %cmpBr_41bb83, label %block_.L_41bc11, label %block_41bb89

block_41bb89:                                     ; preds = %block_41bb7b
  %loadMem_41bb89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13543 = getelementptr inbounds %struct.GPR, %struct.GPR* %13542, i32 0, i32 33
  %13544 = getelementptr inbounds %struct.Reg, %struct.Reg* %13543, i32 0, i32 0
  %PC.i173 = bitcast %union.anon* %13544 to i64*
  %13545 = load i64, i64* %PC.i173
  %13546 = add i64 %13545, 8
  store i64 %13546, i64* %PC.i173
  %13547 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %13548 = sub i32 %13547, 1
  %13549 = icmp ult i32 %13547, 1
  %13550 = zext i1 %13549 to i8
  %13551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13550, i8* %13551, align 1
  %13552 = and i32 %13548, 255
  %13553 = call i32 @llvm.ctpop.i32(i32 %13552)
  %13554 = trunc i32 %13553 to i8
  %13555 = and i8 %13554, 1
  %13556 = xor i8 %13555, 1
  %13557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13556, i8* %13557, align 1
  %13558 = xor i32 %13547, 1
  %13559 = xor i32 %13558, %13548
  %13560 = lshr i32 %13559, 4
  %13561 = trunc i32 %13560 to i8
  %13562 = and i8 %13561, 1
  %13563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13562, i8* %13563, align 1
  %13564 = icmp eq i32 %13548, 0
  %13565 = zext i1 %13564 to i8
  %13566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13565, i8* %13566, align 1
  %13567 = lshr i32 %13548, 31
  %13568 = trunc i32 %13567 to i8
  %13569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13568, i8* %13569, align 1
  %13570 = lshr i32 %13547, 31
  %13571 = xor i32 %13567, %13570
  %13572 = add i32 %13571, %13570
  %13573 = icmp eq i32 %13572, 2
  %13574 = zext i1 %13573 to i8
  %13575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13574, i8* %13575, align 1
  store %struct.Memory* %loadMem_41bb89, %struct.Memory** %MEMORY
  %loadMem_41bb91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13577 = getelementptr inbounds %struct.GPR, %struct.GPR* %13576, i32 0, i32 33
  %13578 = getelementptr inbounds %struct.Reg, %struct.Reg* %13577, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %13578 to i64*
  %13579 = load i64, i64* %PC.i172
  %13580 = add i64 %13579, 128
  %13581 = load i64, i64* %PC.i172
  %13582 = add i64 %13581, 6
  %13583 = load i64, i64* %PC.i172
  %13584 = add i64 %13583, 6
  store i64 %13584, i64* %PC.i172
  %13585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13586 = load i8, i8* %13585, align 1
  store i8 %13586, i8* %BRANCH_TAKEN, align 1
  %13587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13588 = icmp ne i8 %13586, 0
  %13589 = select i1 %13588, i64 %13580, i64 %13582
  store i64 %13589, i64* %13587, align 8
  store %struct.Memory* %loadMem_41bb91, %struct.Memory** %MEMORY
  %loadBr_41bb91 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bb91 = icmp eq i8 %loadBr_41bb91, 1
  br i1 %cmpBr_41bb91, label %block_.L_41bc11, label %block_41bb97

block_41bb97:                                     ; preds = %block_41bb89
  %loadMem_41bb97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13591 = getelementptr inbounds %struct.GPR, %struct.GPR* %13590, i32 0, i32 33
  %13592 = getelementptr inbounds %struct.Reg, %struct.Reg* %13591, i32 0, i32 0
  %PC.i171 = bitcast %union.anon* %13592 to i64*
  %13593 = load i64, i64* %PC.i171
  %13594 = add i64 %13593, 8
  store i64 %13594, i64* %PC.i171
  %13595 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %13596 = sub i32 %13595, 4
  %13597 = icmp ult i32 %13595, 4
  %13598 = zext i1 %13597 to i8
  %13599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13598, i8* %13599, align 1
  %13600 = and i32 %13596, 255
  %13601 = call i32 @llvm.ctpop.i32(i32 %13600)
  %13602 = trunc i32 %13601 to i8
  %13603 = and i8 %13602, 1
  %13604 = xor i8 %13603, 1
  %13605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13604, i8* %13605, align 1
  %13606 = xor i32 %13595, 4
  %13607 = xor i32 %13606, %13596
  %13608 = lshr i32 %13607, 4
  %13609 = trunc i32 %13608 to i8
  %13610 = and i8 %13609, 1
  %13611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13610, i8* %13611, align 1
  %13612 = icmp eq i32 %13596, 0
  %13613 = zext i1 %13612 to i8
  %13614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13613, i8* %13614, align 1
  %13615 = lshr i32 %13596, 31
  %13616 = trunc i32 %13615 to i8
  %13617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13616, i8* %13617, align 1
  %13618 = lshr i32 %13595, 31
  %13619 = xor i32 %13615, %13618
  %13620 = add i32 %13619, %13618
  %13621 = icmp eq i32 %13620, 2
  %13622 = zext i1 %13621 to i8
  %13623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13622, i8* %13623, align 1
  store %struct.Memory* %loadMem_41bb97, %struct.Memory** %MEMORY
  %loadMem_41bb9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13625 = getelementptr inbounds %struct.GPR, %struct.GPR* %13624, i32 0, i32 33
  %13626 = getelementptr inbounds %struct.Reg, %struct.Reg* %13625, i32 0, i32 0
  %PC.i170 = bitcast %union.anon* %13626 to i64*
  %13627 = load i64, i64* %PC.i170
  %13628 = add i64 %13627, 114
  %13629 = load i64, i64* %PC.i170
  %13630 = add i64 %13629, 6
  %13631 = load i64, i64* %PC.i170
  %13632 = add i64 %13631, 6
  store i64 %13632, i64* %PC.i170
  %13633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13634 = load i8, i8* %13633, align 1
  store i8 %13634, i8* %BRANCH_TAKEN, align 1
  %13635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13636 = icmp ne i8 %13634, 0
  %13637 = select i1 %13636, i64 %13628, i64 %13630
  store i64 %13637, i64* %13635, align 8
  store %struct.Memory* %loadMem_41bb9f, %struct.Memory** %MEMORY
  %loadBr_41bb9f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bb9f = icmp eq i8 %loadBr_41bb9f, 1
  br i1 %cmpBr_41bb9f, label %block_.L_41bc11, label %block_41bba5

block_41bba5:                                     ; preds = %block_41bb97
  %loadMem_41bba5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13639 = getelementptr inbounds %struct.GPR, %struct.GPR* %13638, i32 0, i32 33
  %13640 = getelementptr inbounds %struct.Reg, %struct.Reg* %13639, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %13640 to i64*
  %13641 = load i64, i64* %PC.i169
  %13642 = add i64 %13641, 8
  store i64 %13642, i64* %PC.i169
  %13643 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %13644 = sub i32 %13643, 5
  %13645 = icmp ult i32 %13643, 5
  %13646 = zext i1 %13645 to i8
  %13647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13646, i8* %13647, align 1
  %13648 = and i32 %13644, 255
  %13649 = call i32 @llvm.ctpop.i32(i32 %13648)
  %13650 = trunc i32 %13649 to i8
  %13651 = and i8 %13650, 1
  %13652 = xor i8 %13651, 1
  %13653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13652, i8* %13653, align 1
  %13654 = xor i32 %13643, 5
  %13655 = xor i32 %13654, %13644
  %13656 = lshr i32 %13655, 4
  %13657 = trunc i32 %13656 to i8
  %13658 = and i8 %13657, 1
  %13659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13658, i8* %13659, align 1
  %13660 = icmp eq i32 %13644, 0
  %13661 = zext i1 %13660 to i8
  %13662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13661, i8* %13662, align 1
  %13663 = lshr i32 %13644, 31
  %13664 = trunc i32 %13663 to i8
  %13665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13664, i8* %13665, align 1
  %13666 = lshr i32 %13643, 31
  %13667 = xor i32 %13663, %13666
  %13668 = add i32 %13667, %13666
  %13669 = icmp eq i32 %13668, 2
  %13670 = zext i1 %13669 to i8
  %13671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13670, i8* %13671, align 1
  store %struct.Memory* %loadMem_41bba5, %struct.Memory** %MEMORY
  %loadMem_41bbad = load %struct.Memory*, %struct.Memory** %MEMORY
  %13672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13673 = getelementptr inbounds %struct.GPR, %struct.GPR* %13672, i32 0, i32 33
  %13674 = getelementptr inbounds %struct.Reg, %struct.Reg* %13673, i32 0, i32 0
  %PC.i168 = bitcast %union.anon* %13674 to i64*
  %13675 = load i64, i64* %PC.i168
  %13676 = add i64 %13675, 100
  %13677 = load i64, i64* %PC.i168
  %13678 = add i64 %13677, 6
  %13679 = load i64, i64* %PC.i168
  %13680 = add i64 %13679, 6
  store i64 %13680, i64* %PC.i168
  %13681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13682 = load i8, i8* %13681, align 1
  store i8 %13682, i8* %BRANCH_TAKEN, align 1
  %13683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13684 = icmp ne i8 %13682, 0
  %13685 = select i1 %13684, i64 %13676, i64 %13678
  store i64 %13685, i64* %13683, align 8
  store %struct.Memory* %loadMem_41bbad, %struct.Memory** %MEMORY
  %loadBr_41bbad = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bbad = icmp eq i8 %loadBr_41bbad, 1
  br i1 %cmpBr_41bbad, label %block_.L_41bc11, label %block_41bbb3

block_41bbb3:                                     ; preds = %block_41bba5
  %loadMem_41bbb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13687 = getelementptr inbounds %struct.GPR, %struct.GPR* %13686, i32 0, i32 33
  %13688 = getelementptr inbounds %struct.Reg, %struct.Reg* %13687, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %13688 to i64*
  %13689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13690 = getelementptr inbounds %struct.GPR, %struct.GPR* %13689, i32 0, i32 1
  %13691 = getelementptr inbounds %struct.Reg, %struct.Reg* %13690, i32 0, i32 0
  %RAX.i167 = bitcast %union.anon* %13691 to i64*
  %13692 = load i64, i64* %PC.i166
  %13693 = add i64 %13692, 8
  store i64 %13693, i64* %PC.i166
  %13694 = load i8, i8* getelementptr inbounds (%G_0x86678c_type, %G_0x86678c_type* @G_0x86678c, i32 0, i32 0, i32 0)
  %13695 = sext i8 %13694 to i64
  %13696 = and i64 %13695, 4294967295
  store i64 %13696, i64* %RAX.i167, align 8
  store %struct.Memory* %loadMem_41bbb3, %struct.Memory** %MEMORY
  %loadMem_41bbbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13698 = getelementptr inbounds %struct.GPR, %struct.GPR* %13697, i32 0, i32 33
  %13699 = getelementptr inbounds %struct.Reg, %struct.Reg* %13698, i32 0, i32 0
  %PC.i164 = bitcast %union.anon* %13699 to i64*
  %13700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13701 = getelementptr inbounds %struct.GPR, %struct.GPR* %13700, i32 0, i32 1
  %13702 = getelementptr inbounds %struct.Reg, %struct.Reg* %13701, i32 0, i32 0
  %EAX.i165 = bitcast %union.anon* %13702 to i32*
  %13703 = load i32, i32* %EAX.i165
  %13704 = zext i32 %13703 to i64
  %13705 = load i64, i64* %PC.i164
  %13706 = add i64 %13705, 3
  store i64 %13706, i64* %PC.i164
  %13707 = sub i32 %13703, 3
  %13708 = icmp ult i32 %13703, 3
  %13709 = zext i1 %13708 to i8
  %13710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13709, i8* %13710, align 1
  %13711 = and i32 %13707, 255
  %13712 = call i32 @llvm.ctpop.i32(i32 %13711)
  %13713 = trunc i32 %13712 to i8
  %13714 = and i8 %13713, 1
  %13715 = xor i8 %13714, 1
  %13716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13715, i8* %13716, align 1
  %13717 = xor i64 3, %13704
  %13718 = trunc i64 %13717 to i32
  %13719 = xor i32 %13718, %13707
  %13720 = lshr i32 %13719, 4
  %13721 = trunc i32 %13720 to i8
  %13722 = and i8 %13721, 1
  %13723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13722, i8* %13723, align 1
  %13724 = icmp eq i32 %13707, 0
  %13725 = zext i1 %13724 to i8
  %13726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13725, i8* %13726, align 1
  %13727 = lshr i32 %13707, 31
  %13728 = trunc i32 %13727 to i8
  %13729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13728, i8* %13729, align 1
  %13730 = lshr i32 %13703, 31
  %13731 = xor i32 %13727, %13730
  %13732 = add i32 %13731, %13730
  %13733 = icmp eq i32 %13732, 2
  %13734 = zext i1 %13733 to i8
  %13735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13734, i8* %13735, align 1
  store %struct.Memory* %loadMem_41bbbb, %struct.Memory** %MEMORY
  %loadMem_41bbbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %13736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13737 = getelementptr inbounds %struct.GPR, %struct.GPR* %13736, i32 0, i32 33
  %13738 = getelementptr inbounds %struct.Reg, %struct.Reg* %13737, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %13738 to i64*
  %13739 = load i64, i64* %PC.i163
  %13740 = add i64 %13739, 83
  %13741 = load i64, i64* %PC.i163
  %13742 = add i64 %13741, 6
  %13743 = load i64, i64* %PC.i163
  %13744 = add i64 %13743, 6
  store i64 %13744, i64* %PC.i163
  %13745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13746 = load i8, i8* %13745, align 1
  %13747 = icmp ne i8 %13746, 0
  %13748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %13749 = load i8, i8* %13748, align 1
  %13750 = icmp ne i8 %13749, 0
  %13751 = xor i1 %13747, %13750
  %13752 = zext i1 %13751 to i8
  store i8 %13752, i8* %BRANCH_TAKEN, align 1
  %13753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13754 = select i1 %13751, i64 %13740, i64 %13742
  store i64 %13754, i64* %13753, align 8
  store %struct.Memory* %loadMem_41bbbe, %struct.Memory** %MEMORY
  %loadBr_41bbbe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bbbe = icmp eq i8 %loadBr_41bbbe, 1
  br i1 %cmpBr_41bbbe, label %block_.L_41bc11, label %block_41bbc4

block_41bbc4:                                     ; preds = %block_41bbb3
  %loadMem_41bbc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13756 = getelementptr inbounds %struct.GPR, %struct.GPR* %13755, i32 0, i32 33
  %13757 = getelementptr inbounds %struct.Reg, %struct.Reg* %13756, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %13757 to i64*
  %13758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13759 = getelementptr inbounds %struct.GPR, %struct.GPR* %13758, i32 0, i32 1
  %13760 = getelementptr inbounds %struct.Reg, %struct.Reg* %13759, i32 0, i32 0
  %RAX.i162 = bitcast %union.anon* %13760 to i64*
  %13761 = load i64, i64* %PC.i161
  %13762 = add i64 %13761, 7
  store i64 %13762, i64* %PC.i161
  %13763 = load i32, i32* bitcast (%G_0x62ea24_type* @G_0x62ea24 to i32*)
  %13764 = zext i32 %13763 to i64
  store i64 %13764, i64* %RAX.i162, align 8
  store %struct.Memory* %loadMem_41bbc4, %struct.Memory** %MEMORY
  %loadMem_41bbcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %13765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13766 = getelementptr inbounds %struct.GPR, %struct.GPR* %13765, i32 0, i32 33
  %13767 = getelementptr inbounds %struct.Reg, %struct.Reg* %13766, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %13767 to i64*
  %13768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13769 = getelementptr inbounds %struct.GPR, %struct.GPR* %13768, i32 0, i32 1
  %13770 = getelementptr inbounds %struct.Reg, %struct.Reg* %13769, i32 0, i32 0
  %EAX.i160 = bitcast %union.anon* %13770 to i32*
  %13771 = load i32, i32* %EAX.i160
  %13772 = zext i32 %13771 to i64
  %13773 = load i64, i64* %PC.i159
  %13774 = add i64 %13773, 7
  store i64 %13774, i64* %PC.i159
  %13775 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*)
  %13776 = sub i32 %13771, %13775
  %13777 = icmp ult i32 %13771, %13775
  %13778 = zext i1 %13777 to i8
  %13779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13778, i8* %13779, align 1
  %13780 = and i32 %13776, 255
  %13781 = call i32 @llvm.ctpop.i32(i32 %13780)
  %13782 = trunc i32 %13781 to i8
  %13783 = and i8 %13782, 1
  %13784 = xor i8 %13783, 1
  %13785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13784, i8* %13785, align 1
  %13786 = xor i32 %13775, %13771
  %13787 = xor i32 %13786, %13776
  %13788 = lshr i32 %13787, 4
  %13789 = trunc i32 %13788 to i8
  %13790 = and i8 %13789, 1
  %13791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13790, i8* %13791, align 1
  %13792 = icmp eq i32 %13776, 0
  %13793 = zext i1 %13792 to i8
  %13794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13793, i8* %13794, align 1
  %13795 = lshr i32 %13776, 31
  %13796 = trunc i32 %13795 to i8
  %13797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13796, i8* %13797, align 1
  %13798 = lshr i32 %13771, 31
  %13799 = lshr i32 %13775, 31
  %13800 = xor i32 %13799, %13798
  %13801 = xor i32 %13795, %13798
  %13802 = add i32 %13801, %13800
  %13803 = icmp eq i32 %13802, 2
  %13804 = zext i1 %13803 to i8
  %13805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13804, i8* %13805, align 1
  store %struct.Memory* %loadMem_41bbcb, %struct.Memory** %MEMORY
  %loadMem_41bbd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13807 = getelementptr inbounds %struct.GPR, %struct.GPR* %13806, i32 0, i32 33
  %13808 = getelementptr inbounds %struct.Reg, %struct.Reg* %13807, i32 0, i32 0
  %PC.i158 = bitcast %union.anon* %13808 to i64*
  %13809 = load i64, i64* %PC.i158
  %13810 = add i64 %13809, 63
  %13811 = load i64, i64* %PC.i158
  %13812 = add i64 %13811, 6
  %13813 = load i64, i64* %PC.i158
  %13814 = add i64 %13813, 6
  store i64 %13814, i64* %PC.i158
  %13815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13816 = load i8, i8* %13815, align 1
  %13817 = icmp eq i8 %13816, 0
  %13818 = zext i1 %13817 to i8
  store i8 %13818, i8* %BRANCH_TAKEN, align 1
  %13819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13820 = select i1 %13817, i64 %13810, i64 %13812
  store i64 %13820, i64* %13819, align 8
  store %struct.Memory* %loadMem_41bbd2, %struct.Memory** %MEMORY
  %loadBr_41bbd2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bbd2 = icmp eq i8 %loadBr_41bbd2, 1
  br i1 %cmpBr_41bbd2, label %block_.L_41bc11, label %block_41bbd8

block_41bbd8:                                     ; preds = %block_41bbc4
  %loadMem_41bbd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13822 = getelementptr inbounds %struct.GPR, %struct.GPR* %13821, i32 0, i32 33
  %13823 = getelementptr inbounds %struct.Reg, %struct.Reg* %13822, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %13823 to i64*
  %13824 = load i64, i64* %PC.i157
  %13825 = add i64 %13824, 8
  store i64 %13825, i64* %PC.i157
  %13826 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %13827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13827, align 1
  %13828 = and i32 %13826, 255
  %13829 = call i32 @llvm.ctpop.i32(i32 %13828)
  %13830 = trunc i32 %13829 to i8
  %13831 = and i8 %13830, 1
  %13832 = xor i8 %13831, 1
  %13833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13832, i8* %13833, align 1
  %13834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13834, align 1
  %13835 = icmp eq i32 %13826, 0
  %13836 = zext i1 %13835 to i8
  %13837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13836, i8* %13837, align 1
  %13838 = lshr i32 %13826, 31
  %13839 = trunc i32 %13838 to i8
  %13840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13839, i8* %13840, align 1
  %13841 = lshr i32 %13826, 31
  %13842 = xor i32 %13838, %13841
  %13843 = add i32 %13842, %13841
  %13844 = icmp eq i32 %13843, 2
  %13845 = zext i1 %13844 to i8
  %13846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13845, i8* %13846, align 1
  store %struct.Memory* %loadMem_41bbd8, %struct.Memory** %MEMORY
  %loadMem_41bbe0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13848 = getelementptr inbounds %struct.GPR, %struct.GPR* %13847, i32 0, i32 33
  %13849 = getelementptr inbounds %struct.Reg, %struct.Reg* %13848, i32 0, i32 0
  %PC.i156 = bitcast %union.anon* %13849 to i64*
  %13850 = load i64, i64* %PC.i156
  %13851 = add i64 %13850, 49
  %13852 = load i64, i64* %PC.i156
  %13853 = add i64 %13852, 6
  %13854 = load i64, i64* %PC.i156
  %13855 = add i64 %13854, 6
  store i64 %13855, i64* %PC.i156
  %13856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13857 = load i8, i8* %13856, align 1
  %13858 = icmp eq i8 %13857, 0
  %13859 = zext i1 %13858 to i8
  store i8 %13859, i8* %BRANCH_TAKEN, align 1
  %13860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13861 = select i1 %13858, i64 %13851, i64 %13853
  store i64 %13861, i64* %13860, align 8
  store %struct.Memory* %loadMem_41bbe0, %struct.Memory** %MEMORY
  %loadBr_41bbe0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bbe0 = icmp eq i8 %loadBr_41bbe0, 1
  br i1 %cmpBr_41bbe0, label %block_.L_41bc11, label %block_41bbe6

block_41bbe6:                                     ; preds = %block_41bbd8
  %loadMem_41bbe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13863 = getelementptr inbounds %struct.GPR, %struct.GPR* %13862, i32 0, i32 33
  %13864 = getelementptr inbounds %struct.Reg, %struct.Reg* %13863, i32 0, i32 0
  %PC.i155 = bitcast %union.anon* %13864 to i64*
  %13865 = load i64, i64* %PC.i155
  %13866 = add i64 %13865, 8
  store i64 %13866, i64* %PC.i155
  %13867 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %13868 = sub i32 %13867, 1
  %13869 = icmp ult i32 %13867, 1
  %13870 = zext i1 %13869 to i8
  %13871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13870, i8* %13871, align 1
  %13872 = and i32 %13868, 255
  %13873 = call i32 @llvm.ctpop.i32(i32 %13872)
  %13874 = trunc i32 %13873 to i8
  %13875 = and i8 %13874, 1
  %13876 = xor i8 %13875, 1
  %13877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13876, i8* %13877, align 1
  %13878 = xor i32 %13867, 1
  %13879 = xor i32 %13878, %13868
  %13880 = lshr i32 %13879, 4
  %13881 = trunc i32 %13880 to i8
  %13882 = and i8 %13881, 1
  %13883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13882, i8* %13883, align 1
  %13884 = icmp eq i32 %13868, 0
  %13885 = zext i1 %13884 to i8
  %13886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13885, i8* %13886, align 1
  %13887 = lshr i32 %13868, 31
  %13888 = trunc i32 %13887 to i8
  %13889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13888, i8* %13889, align 1
  %13890 = lshr i32 %13867, 31
  %13891 = xor i32 %13887, %13890
  %13892 = add i32 %13891, %13890
  %13893 = icmp eq i32 %13892, 2
  %13894 = zext i1 %13893 to i8
  %13895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13894, i8* %13895, align 1
  store %struct.Memory* %loadMem_41bbe6, %struct.Memory** %MEMORY
  %loadMem_41bbee = load %struct.Memory*, %struct.Memory** %MEMORY
  %13896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13897 = getelementptr inbounds %struct.GPR, %struct.GPR* %13896, i32 0, i32 33
  %13898 = getelementptr inbounds %struct.Reg, %struct.Reg* %13897, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %13898 to i64*
  %13899 = load i64, i64* %PC.i154
  %13900 = add i64 %13899, 35
  %13901 = load i64, i64* %PC.i154
  %13902 = add i64 %13901, 6
  %13903 = load i64, i64* %PC.i154
  %13904 = add i64 %13903, 6
  store i64 %13904, i64* %PC.i154
  %13905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13906 = load i8, i8* %13905, align 1
  store i8 %13906, i8* %BRANCH_TAKEN, align 1
  %13907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13908 = icmp ne i8 %13906, 0
  %13909 = select i1 %13908, i64 %13900, i64 %13902
  store i64 %13909, i64* %13907, align 8
  store %struct.Memory* %loadMem_41bbee, %struct.Memory** %MEMORY
  %loadBr_41bbee = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bbee = icmp eq i8 %loadBr_41bbee, 1
  br i1 %cmpBr_41bbee, label %block_.L_41bc11, label %block_41bbf4

block_41bbf4:                                     ; preds = %block_41bbe6
  %loadMem_41bbf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13911 = getelementptr inbounds %struct.GPR, %struct.GPR* %13910, i32 0, i32 33
  %13912 = getelementptr inbounds %struct.Reg, %struct.Reg* %13911, i32 0, i32 0
  %PC.i153 = bitcast %union.anon* %13912 to i64*
  %13913 = load i64, i64* %PC.i153
  %13914 = add i64 %13913, 8
  store i64 %13914, i64* %PC.i153
  %13915 = load i32, i32* bitcast (%G_0x8825f8_type* @G_0x8825f8 to i32*)
  %13916 = sub i32 %13915, -1
  %13917 = icmp ult i32 %13915, -1
  %13918 = zext i1 %13917 to i8
  %13919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13918, i8* %13919, align 1
  %13920 = and i32 %13916, 255
  %13921 = call i32 @llvm.ctpop.i32(i32 %13920)
  %13922 = trunc i32 %13921 to i8
  %13923 = and i8 %13922, 1
  %13924 = xor i8 %13923, 1
  %13925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13924, i8* %13925, align 1
  %13926 = xor i32 %13915, -1
  %13927 = xor i32 %13926, %13916
  %13928 = lshr i32 %13927, 4
  %13929 = trunc i32 %13928 to i8
  %13930 = and i8 %13929, 1
  %13931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13930, i8* %13931, align 1
  %13932 = icmp eq i32 %13916, 0
  %13933 = zext i1 %13932 to i8
  %13934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13933, i8* %13934, align 1
  %13935 = lshr i32 %13916, 31
  %13936 = trunc i32 %13935 to i8
  %13937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13936, i8* %13937, align 1
  %13938 = lshr i32 %13915, 31
  %13939 = xor i32 %13938, 1
  %13940 = xor i32 %13935, %13938
  %13941 = add i32 %13940, %13939
  %13942 = icmp eq i32 %13941, 2
  %13943 = zext i1 %13942 to i8
  %13944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13943, i8* %13944, align 1
  store %struct.Memory* %loadMem_41bbf4, %struct.Memory** %MEMORY
  %loadMem_41bbfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13946 = getelementptr inbounds %struct.GPR, %struct.GPR* %13945, i32 0, i32 33
  %13947 = getelementptr inbounds %struct.Reg, %struct.Reg* %13946, i32 0, i32 0
  %PC.i152 = bitcast %union.anon* %13947 to i64*
  %13948 = load i64, i64* %PC.i152
  %13949 = add i64 %13948, 16
  %13950 = load i64, i64* %PC.i152
  %13951 = add i64 %13950, 6
  %13952 = load i64, i64* %PC.i152
  %13953 = add i64 %13952, 6
  store i64 %13953, i64* %PC.i152
  %13954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13955 = load i8, i8* %13954, align 1
  %13956 = icmp eq i8 %13955, 0
  %13957 = zext i1 %13956 to i8
  store i8 %13957, i8* %BRANCH_TAKEN, align 1
  %13958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13959 = select i1 %13956, i64 %13949, i64 %13951
  store i64 %13959, i64* %13958, align 8
  store %struct.Memory* %loadMem_41bbfc, %struct.Memory** %MEMORY
  %loadBr_41bbfc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bbfc = icmp eq i8 %loadBr_41bbfc, 1
  br i1 %cmpBr_41bbfc, label %block_.L_41bc0c, label %block_41bc02

block_41bc02:                                     ; preds = %block_41bbf4
  %loadMem_41bc02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13961 = getelementptr inbounds %struct.GPR, %struct.GPR* %13960, i32 0, i32 33
  %13962 = getelementptr inbounds %struct.Reg, %struct.Reg* %13961, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %13962 to i64*
  %13963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13964 = getelementptr inbounds %struct.GPR, %struct.GPR* %13963, i32 0, i32 1
  %13965 = getelementptr inbounds %struct.Reg, %struct.Reg* %13964, i32 0, i32 0
  %EAX.i150 = bitcast %union.anon* %13965 to i32*
  %13966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13967 = getelementptr inbounds %struct.GPR, %struct.GPR* %13966, i32 0, i32 1
  %13968 = getelementptr inbounds %struct.Reg, %struct.Reg* %13967, i32 0, i32 0
  %RAX.i151 = bitcast %union.anon* %13968 to i64*
  %13969 = load i64, i64* %RAX.i151
  %13970 = load i32, i32* %EAX.i150
  %13971 = zext i32 %13970 to i64
  %13972 = load i64, i64* %PC.i149
  %13973 = add i64 %13972, 2
  store i64 %13973, i64* %PC.i149
  %13974 = xor i64 %13971, %13969
  %13975 = trunc i64 %13974 to i32
  %13976 = and i64 %13974, 4294967295
  store i64 %13976, i64* %RAX.i151, align 8
  %13977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13977, align 1
  %13978 = and i32 %13975, 255
  %13979 = call i32 @llvm.ctpop.i32(i32 %13978)
  %13980 = trunc i32 %13979 to i8
  %13981 = and i8 %13980, 1
  %13982 = xor i8 %13981, 1
  %13983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13982, i8* %13983, align 1
  %13984 = icmp eq i32 %13975, 0
  %13985 = zext i1 %13984 to i8
  %13986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13985, i8* %13986, align 1
  %13987 = lshr i32 %13975, 31
  %13988 = trunc i32 %13987 to i8
  %13989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13988, i8* %13989, align 1
  %13990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %13990, align 1
  %13991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13991, align 1
  store %struct.Memory* %loadMem_41bc02, %struct.Memory** %MEMORY
  %loadMem_41bc04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13993 = getelementptr inbounds %struct.GPR, %struct.GPR* %13992, i32 0, i32 33
  %13994 = getelementptr inbounds %struct.Reg, %struct.Reg* %13993, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %13994 to i64*
  %13995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13996 = getelementptr inbounds %struct.GPR, %struct.GPR* %13995, i32 0, i32 1
  %13997 = getelementptr inbounds %struct.Reg, %struct.Reg* %13996, i32 0, i32 0
  %EAX.i147 = bitcast %union.anon* %13997 to i32*
  %13998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13999 = getelementptr inbounds %struct.GPR, %struct.GPR* %13998, i32 0, i32 5
  %14000 = getelementptr inbounds %struct.Reg, %struct.Reg* %13999, i32 0, i32 0
  %RCX.i148 = bitcast %union.anon* %14000 to i64*
  %14001 = load i32, i32* %EAX.i147
  %14002 = zext i32 %14001 to i64
  %14003 = load i64, i64* %PC.i146
  %14004 = add i64 %14003, 2
  store i64 %14004, i64* %PC.i146
  %14005 = and i64 %14002, 4294967295
  store i64 %14005, i64* %RCX.i148, align 8
  store %struct.Memory* %loadMem_41bc04, %struct.Memory** %MEMORY
  %loadMem_41bc06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14007 = getelementptr inbounds %struct.GPR, %struct.GPR* %14006, i32 0, i32 33
  %14008 = getelementptr inbounds %struct.Reg, %struct.Reg* %14007, i32 0, i32 0
  %PC.i144 = bitcast %union.anon* %14008 to i64*
  %14009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14010 = getelementptr inbounds %struct.GPR, %struct.GPR* %14009, i32 0, i32 5
  %14011 = getelementptr inbounds %struct.Reg, %struct.Reg* %14010, i32 0, i32 0
  %RCX.i145 = bitcast %union.anon* %14011 to i64*
  %14012 = load i64, i64* %RCX.i145
  %14013 = load i64, i64* %PC.i144
  %14014 = add i64 %14013, 6
  store i64 %14014, i64* %PC.i144
  %14015 = inttoptr i64 %14012 to i32*
  store i32 0, i32* %14015
  store %struct.Memory* %loadMem_41bc06, %struct.Memory** %MEMORY
  br label %block_.L_41bc0c

block_.L_41bc0c:                                  ; preds = %block_41bc02, %block_41bbf4
  %loadMem_41bc0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14017 = getelementptr inbounds %struct.GPR, %struct.GPR* %14016, i32 0, i32 33
  %14018 = getelementptr inbounds %struct.Reg, %struct.Reg* %14017, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %14018 to i64*
  %14019 = load i64, i64* %PC.i143
  %14020 = add i64 %14019, 5
  %14021 = load i64, i64* %PC.i143
  %14022 = add i64 %14021, 5
  store i64 %14022, i64* %PC.i143
  %14023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14020, i64* %14023, align 8
  store %struct.Memory* %loadMem_41bc0c, %struct.Memory** %MEMORY
  br label %block_.L_41bc11

block_.L_41bc11:                                  ; preds = %block_.L_41bc0c, %block_41bbe6, %block_41bbd8, %block_41bbc4, %block_41bbb3, %block_41bba5, %block_41bb97, %block_41bb89, %block_41bb7b, %block_.L_41bb6d
  %loadMem_41bc11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14025 = getelementptr inbounds %struct.GPR, %struct.GPR* %14024, i32 0, i32 33
  %14026 = getelementptr inbounds %struct.Reg, %struct.Reg* %14025, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %14026 to i64*
  %14027 = load i64, i64* %PC.i142
  %14028 = add i64 %14027, 8
  store i64 %14028, i64* %PC.i142
  %14029 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %14030 = sub i32 %14029, 1
  %14031 = icmp ult i32 %14029, 1
  %14032 = zext i1 %14031 to i8
  %14033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14032, i8* %14033, align 1
  %14034 = and i32 %14030, 255
  %14035 = call i32 @llvm.ctpop.i32(i32 %14034)
  %14036 = trunc i32 %14035 to i8
  %14037 = and i8 %14036, 1
  %14038 = xor i8 %14037, 1
  %14039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14038, i8* %14039, align 1
  %14040 = xor i32 %14029, 1
  %14041 = xor i32 %14040, %14030
  %14042 = lshr i32 %14041, 4
  %14043 = trunc i32 %14042 to i8
  %14044 = and i8 %14043, 1
  %14045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14044, i8* %14045, align 1
  %14046 = icmp eq i32 %14030, 0
  %14047 = zext i1 %14046 to i8
  %14048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14047, i8* %14048, align 1
  %14049 = lshr i32 %14030, 31
  %14050 = trunc i32 %14049 to i8
  %14051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14050, i8* %14051, align 1
  %14052 = lshr i32 %14029, 31
  %14053 = xor i32 %14049, %14052
  %14054 = add i32 %14053, %14052
  %14055 = icmp eq i32 %14054, 2
  %14056 = zext i1 %14055 to i8
  %14057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14056, i8* %14057, align 1
  store %struct.Memory* %loadMem_41bc11, %struct.Memory** %MEMORY
  %loadMem_41bc19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14059 = getelementptr inbounds %struct.GPR, %struct.GPR* %14058, i32 0, i32 33
  %14060 = getelementptr inbounds %struct.Reg, %struct.Reg* %14059, i32 0, i32 0
  %PC.i141 = bitcast %union.anon* %14060 to i64*
  %14061 = load i64, i64* %PC.i141
  %14062 = add i64 %14061, 86
  %14063 = load i64, i64* %PC.i141
  %14064 = add i64 %14063, 6
  %14065 = load i64, i64* %PC.i141
  %14066 = add i64 %14065, 6
  store i64 %14066, i64* %PC.i141
  %14067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14068 = load i8, i8* %14067, align 1
  %14069 = icmp eq i8 %14068, 0
  %14070 = zext i1 %14069 to i8
  store i8 %14070, i8* %BRANCH_TAKEN, align 1
  %14071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14072 = select i1 %14069, i64 %14062, i64 %14064
  store i64 %14072, i64* %14071, align 8
  store %struct.Memory* %loadMem_41bc19, %struct.Memory** %MEMORY
  %loadBr_41bc19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bc19 = icmp eq i8 %loadBr_41bc19, 1
  br i1 %cmpBr_41bc19, label %block_.L_41bc6f, label %block_41bc1f

block_41bc1f:                                     ; preds = %block_.L_41bc11
  %loadMem_41bc1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14074 = getelementptr inbounds %struct.GPR, %struct.GPR* %14073, i32 0, i32 33
  %14075 = getelementptr inbounds %struct.Reg, %struct.Reg* %14074, i32 0, i32 0
  %PC.i139 = bitcast %union.anon* %14075 to i64*
  %14076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14077 = getelementptr inbounds %struct.GPR, %struct.GPR* %14076, i32 0, i32 15
  %14078 = getelementptr inbounds %struct.Reg, %struct.Reg* %14077, i32 0, i32 0
  %RBP.i140 = bitcast %union.anon* %14078 to i64*
  %14079 = load i64, i64* %RBP.i140
  %14080 = sub i64 %14079, 92
  %14081 = load i64, i64* %PC.i139
  %14082 = add i64 %14081, 7
  store i64 %14082, i64* %PC.i139
  %14083 = inttoptr i64 %14080 to i32*
  %14084 = load i32, i32* %14083
  %14085 = sub i32 %14084, -999900
  %14086 = icmp ult i32 %14084, -999900
  %14087 = zext i1 %14086 to i8
  %14088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14087, i8* %14088, align 1
  %14089 = and i32 %14085, 255
  %14090 = call i32 @llvm.ctpop.i32(i32 %14089)
  %14091 = trunc i32 %14090 to i8
  %14092 = and i8 %14091, 1
  %14093 = xor i8 %14092, 1
  %14094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14093, i8* %14094, align 1
  %14095 = xor i32 %14084, -999900
  %14096 = xor i32 %14095, %14085
  %14097 = lshr i32 %14096, 4
  %14098 = trunc i32 %14097 to i8
  %14099 = and i8 %14098, 1
  %14100 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14099, i8* %14100, align 1
  %14101 = icmp eq i32 %14085, 0
  %14102 = zext i1 %14101 to i8
  %14103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14102, i8* %14103, align 1
  %14104 = lshr i32 %14085, 31
  %14105 = trunc i32 %14104 to i8
  %14106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14105, i8* %14106, align 1
  %14107 = lshr i32 %14084, 31
  %14108 = xor i32 %14107, 1
  %14109 = xor i32 %14104, %14107
  %14110 = add i32 %14109, %14108
  %14111 = icmp eq i32 %14110, 2
  %14112 = zext i1 %14111 to i8
  %14113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14112, i8* %14113, align 1
  store %struct.Memory* %loadMem_41bc1f, %struct.Memory** %MEMORY
  %loadMem_41bc26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14115 = getelementptr inbounds %struct.GPR, %struct.GPR* %14114, i32 0, i32 33
  %14116 = getelementptr inbounds %struct.Reg, %struct.Reg* %14115, i32 0, i32 0
  %PC.i138 = bitcast %union.anon* %14116 to i64*
  %14117 = load i64, i64* %PC.i138
  %14118 = add i64 %14117, 73
  %14119 = load i64, i64* %PC.i138
  %14120 = add i64 %14119, 6
  %14121 = load i64, i64* %PC.i138
  %14122 = add i64 %14121, 6
  store i64 %14122, i64* %PC.i138
  %14123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14124 = load i8, i8* %14123, align 1
  %14125 = icmp ne i8 %14124, 0
  %14126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14127 = load i8, i8* %14126, align 1
  %14128 = icmp ne i8 %14127, 0
  %14129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14130 = load i8, i8* %14129, align 1
  %14131 = icmp ne i8 %14130, 0
  %14132 = xor i1 %14128, %14131
  %14133 = or i1 %14125, %14132
  %14134 = zext i1 %14133 to i8
  store i8 %14134, i8* %BRANCH_TAKEN, align 1
  %14135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14136 = select i1 %14133, i64 %14118, i64 %14120
  store i64 %14136, i64* %14135, align 8
  store %struct.Memory* %loadMem_41bc26, %struct.Memory** %MEMORY
  %loadBr_41bc26 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bc26 = icmp eq i8 %loadBr_41bc26, 1
  br i1 %cmpBr_41bc26, label %block_.L_41bc6f, label %block_41bc2c

block_41bc2c:                                     ; preds = %block_41bc1f
  %loadMem_41bc2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14138 = getelementptr inbounds %struct.GPR, %struct.GPR* %14137, i32 0, i32 33
  %14139 = getelementptr inbounds %struct.Reg, %struct.Reg* %14138, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %14139 to i64*
  %14140 = load i64, i64* %PC.i137
  %14141 = add i64 %14140, 8
  store i64 %14141, i64* %PC.i137
  %14142 = load i32, i32* bitcast (%G_0x62e9e4_type* @G_0x62e9e4 to i32*)
  %14143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14143, align 1
  %14144 = and i32 %14142, 255
  %14145 = call i32 @llvm.ctpop.i32(i32 %14144)
  %14146 = trunc i32 %14145 to i8
  %14147 = and i8 %14146, 1
  %14148 = xor i8 %14147, 1
  %14149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14148, i8* %14149, align 1
  %14150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14150, align 1
  %14151 = icmp eq i32 %14142, 0
  %14152 = zext i1 %14151 to i8
  %14153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14152, i8* %14153, align 1
  %14154 = lshr i32 %14142, 31
  %14155 = trunc i32 %14154 to i8
  %14156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14155, i8* %14156, align 1
  %14157 = lshr i32 %14142, 31
  %14158 = xor i32 %14154, %14157
  %14159 = add i32 %14158, %14157
  %14160 = icmp eq i32 %14159, 2
  %14161 = zext i1 %14160 to i8
  %14162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14161, i8* %14162, align 1
  store %struct.Memory* %loadMem_41bc2c, %struct.Memory** %MEMORY
  %loadMem_41bc34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14164 = getelementptr inbounds %struct.GPR, %struct.GPR* %14163, i32 0, i32 33
  %14165 = getelementptr inbounds %struct.Reg, %struct.Reg* %14164, i32 0, i32 0
  %PC.i136 = bitcast %union.anon* %14165 to i64*
  %14166 = load i64, i64* %PC.i136
  %14167 = add i64 %14166, 54
  %14168 = load i64, i64* %PC.i136
  %14169 = add i64 %14168, 6
  %14170 = load i64, i64* %PC.i136
  %14171 = add i64 %14170, 6
  store i64 %14171, i64* %PC.i136
  %14172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14173 = load i8, i8* %14172, align 1
  %14174 = icmp eq i8 %14173, 0
  %14175 = zext i1 %14174 to i8
  store i8 %14175, i8* %BRANCH_TAKEN, align 1
  %14176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14177 = select i1 %14174, i64 %14167, i64 %14169
  store i64 %14177, i64* %14176, align 8
  store %struct.Memory* %loadMem_41bc34, %struct.Memory** %MEMORY
  %loadBr_41bc34 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bc34 = icmp eq i8 %loadBr_41bc34, 1
  br i1 %cmpBr_41bc34, label %block_.L_41bc6a, label %block_41bc3a

block_41bc3a:                                     ; preds = %block_41bc2c
  %loadMem_41bc3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14179 = getelementptr inbounds %struct.GPR, %struct.GPR* %14178, i32 0, i32 33
  %14180 = getelementptr inbounds %struct.Reg, %struct.Reg* %14179, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %14180 to i64*
  %14181 = load i64, i64* %PC.i135
  %14182 = add i64 %14181, 8
  store i64 %14182, i64* %PC.i135
  %14183 = load i32, i32* bitcast (%G_0x86bd84_type* @G_0x86bd84 to i32*)
  %14184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14184, align 1
  %14185 = and i32 %14183, 255
  %14186 = call i32 @llvm.ctpop.i32(i32 %14185)
  %14187 = trunc i32 %14186 to i8
  %14188 = and i8 %14187, 1
  %14189 = xor i8 %14188, 1
  %14190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14189, i8* %14190, align 1
  %14191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14191, align 1
  %14192 = icmp eq i32 %14183, 0
  %14193 = zext i1 %14192 to i8
  %14194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14193, i8* %14194, align 1
  %14195 = lshr i32 %14183, 31
  %14196 = trunc i32 %14195 to i8
  %14197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14196, i8* %14197, align 1
  %14198 = lshr i32 %14183, 31
  %14199 = xor i32 %14195, %14198
  %14200 = add i32 %14199, %14198
  %14201 = icmp eq i32 %14200, 2
  %14202 = zext i1 %14201 to i8
  %14203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14202, i8* %14203, align 1
  store %struct.Memory* %loadMem_41bc3a, %struct.Memory** %MEMORY
  %loadMem_41bc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14205 = getelementptr inbounds %struct.GPR, %struct.GPR* %14204, i32 0, i32 33
  %14206 = getelementptr inbounds %struct.Reg, %struct.Reg* %14205, i32 0, i32 0
  %PC.i134 = bitcast %union.anon* %14206 to i64*
  %14207 = load i64, i64* %PC.i134
  %14208 = add i64 %14207, 40
  %14209 = load i64, i64* %PC.i134
  %14210 = add i64 %14209, 6
  %14211 = load i64, i64* %PC.i134
  %14212 = add i64 %14211, 6
  store i64 %14212, i64* %PC.i134
  %14213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14214 = load i8, i8* %14213, align 1
  %14215 = icmp eq i8 %14214, 0
  %14216 = zext i1 %14215 to i8
  store i8 %14216, i8* %BRANCH_TAKEN, align 1
  %14217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14218 = select i1 %14215, i64 %14208, i64 %14210
  store i64 %14218, i64* %14217, align 8
  store %struct.Memory* %loadMem_41bc42, %struct.Memory** %MEMORY
  %loadBr_41bc42 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bc42 = icmp eq i8 %loadBr_41bc42, 1
  br i1 %cmpBr_41bc42, label %block_.L_41bc6a, label %block_41bc48

block_41bc48:                                     ; preds = %block_41bc3a
  %loadMem_41bc48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14220 = getelementptr inbounds %struct.GPR, %struct.GPR* %14219, i32 0, i32 33
  %14221 = getelementptr inbounds %struct.Reg, %struct.Reg* %14220, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %14221 to i64*
  %14222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14223 = getelementptr inbounds %struct.GPR, %struct.GPR* %14222, i32 0, i32 11
  %14224 = getelementptr inbounds %struct.Reg, %struct.Reg* %14223, i32 0, i32 0
  %RDI.i133 = bitcast %union.anon* %14224 to i64*
  %14225 = load i64, i64* %PC.i132
  %14226 = add i64 %14225, 10
  store i64 %14226, i64* %PC.i132
  store i64 ptrtoint (%G__0x42914d_type* @G__0x42914d to i64), i64* %RDI.i133, align 8
  store %struct.Memory* %loadMem_41bc48, %struct.Memory** %MEMORY
  %loadMem_41bc52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14228 = getelementptr inbounds %struct.GPR, %struct.GPR* %14227, i32 0, i32 33
  %14229 = getelementptr inbounds %struct.Reg, %struct.Reg* %14228, i32 0, i32 0
  %PC.i131 = bitcast %union.anon* %14229 to i64*
  %14230 = load i64, i64* %PC.i131
  %14231 = add i64 %14230, 11
  store i64 %14231, i64* %PC.i131
  store i32 1, i32* bitcast (%G_0x62e9e4_type* @G_0x62e9e4 to i32*)
  store %struct.Memory* %loadMem_41bc52, %struct.Memory** %MEMORY
  %loadMem_41bc5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %14232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14233 = getelementptr inbounds %struct.GPR, %struct.GPR* %14232, i32 0, i32 33
  %14234 = getelementptr inbounds %struct.Reg, %struct.Reg* %14233, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %14234 to i64*
  %14235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14236 = getelementptr inbounds %struct.GPR, %struct.GPR* %14235, i32 0, i32 1
  %14237 = getelementptr inbounds %struct.Reg, %struct.Reg* %14236, i32 0, i32 0
  %14238 = bitcast %union.anon* %14237 to %struct.anon.2*
  %AL.i130 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14238, i32 0, i32 0
  %14239 = load i64, i64* %PC.i129
  %14240 = add i64 %14239, 2
  store i64 %14240, i64* %PC.i129
  store i8 0, i8* %AL.i130, align 1
  store %struct.Memory* %loadMem_41bc5d, %struct.Memory** %MEMORY
  %loadMem1_41bc5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14242 = getelementptr inbounds %struct.GPR, %struct.GPR* %14241, i32 0, i32 33
  %14243 = getelementptr inbounds %struct.Reg, %struct.Reg* %14242, i32 0, i32 0
  %PC.i128 = bitcast %union.anon* %14243 to i64*
  %14244 = load i64, i64* %PC.i128
  %14245 = add i64 %14244, -110511
  %14246 = load i64, i64* %PC.i128
  %14247 = add i64 %14246, 5
  %14248 = load i64, i64* %PC.i128
  %14249 = add i64 %14248, 5
  store i64 %14249, i64* %PC.i128
  %14250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14251 = load i64, i64* %14250, align 8
  %14252 = add i64 %14251, -8
  %14253 = inttoptr i64 %14252 to i64*
  store i64 %14247, i64* %14253
  store i64 %14252, i64* %14250, align 8
  %14254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14245, i64* %14254, align 8
  store %struct.Memory* %loadMem1_41bc5f, %struct.Memory** %MEMORY
  %loadMem2_41bc5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bc5f = load i64, i64* %3
  %14255 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41bc5f)
  store %struct.Memory* %14255, %struct.Memory** %MEMORY
  %loadMem_41bc64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14257 = getelementptr inbounds %struct.GPR, %struct.GPR* %14256, i32 0, i32 33
  %14258 = getelementptr inbounds %struct.Reg, %struct.Reg* %14257, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %14258 to i64*
  %14259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14260 = getelementptr inbounds %struct.GPR, %struct.GPR* %14259, i32 0, i32 1
  %14261 = getelementptr inbounds %struct.Reg, %struct.Reg* %14260, i32 0, i32 0
  %EAX.i124 = bitcast %union.anon* %14261 to i32*
  %14262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14263 = getelementptr inbounds %struct.GPR, %struct.GPR* %14262, i32 0, i32 15
  %14264 = getelementptr inbounds %struct.Reg, %struct.Reg* %14263, i32 0, i32 0
  %RBP.i125 = bitcast %union.anon* %14264 to i64*
  %14265 = load i64, i64* %RBP.i125
  %14266 = sub i64 %14265, 12596
  %14267 = load i32, i32* %EAX.i124
  %14268 = zext i32 %14267 to i64
  %14269 = load i64, i64* %PC.i123
  %14270 = add i64 %14269, 6
  store i64 %14270, i64* %PC.i123
  %14271 = inttoptr i64 %14266 to i32*
  store i32 %14267, i32* %14271
  store %struct.Memory* %loadMem_41bc64, %struct.Memory** %MEMORY
  br label %block_.L_41bc6a

block_.L_41bc6a:                                  ; preds = %block_41bc48, %block_41bc3a, %block_41bc2c
  %loadMem_41bc6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14273 = getelementptr inbounds %struct.GPR, %struct.GPR* %14272, i32 0, i32 33
  %14274 = getelementptr inbounds %struct.Reg, %struct.Reg* %14273, i32 0, i32 0
  %PC.i122 = bitcast %union.anon* %14274 to i64*
  %14275 = load i64, i64* %PC.i122
  %14276 = add i64 %14275, 376
  %14277 = load i64, i64* %PC.i122
  %14278 = add i64 %14277, 5
  store i64 %14278, i64* %PC.i122
  %14279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14276, i64* %14279, align 8
  store %struct.Memory* %loadMem_41bc6a, %struct.Memory** %MEMORY
  br label %block_.L_41bde2

block_.L_41bc6f:                                  ; preds = %block_41bc1f, %block_.L_41bc11
  %loadMem_41bc6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %14280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14281 = getelementptr inbounds %struct.GPR, %struct.GPR* %14280, i32 0, i32 33
  %14282 = getelementptr inbounds %struct.Reg, %struct.Reg* %14281, i32 0, i32 0
  %PC.i120 = bitcast %union.anon* %14282 to i64*
  %14283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14284 = getelementptr inbounds %struct.GPR, %struct.GPR* %14283, i32 0, i32 15
  %14285 = getelementptr inbounds %struct.Reg, %struct.Reg* %14284, i32 0, i32 0
  %RBP.i121 = bitcast %union.anon* %14285 to i64*
  %14286 = load i64, i64* %RBP.i121
  %14287 = sub i64 %14286, 92
  %14288 = load i64, i64* %PC.i120
  %14289 = add i64 %14288, 7
  store i64 %14289, i64* %PC.i120
  %14290 = inttoptr i64 %14287 to i32*
  %14291 = load i32, i32* %14290
  %14292 = sub i32 %14291, -999900
  %14293 = icmp ult i32 %14291, -999900
  %14294 = zext i1 %14293 to i8
  %14295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14294, i8* %14295, align 1
  %14296 = and i32 %14292, 255
  %14297 = call i32 @llvm.ctpop.i32(i32 %14296)
  %14298 = trunc i32 %14297 to i8
  %14299 = and i8 %14298, 1
  %14300 = xor i8 %14299, 1
  %14301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14300, i8* %14301, align 1
  %14302 = xor i32 %14291, -999900
  %14303 = xor i32 %14302, %14292
  %14304 = lshr i32 %14303, 4
  %14305 = trunc i32 %14304 to i8
  %14306 = and i8 %14305, 1
  %14307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14306, i8* %14307, align 1
  %14308 = icmp eq i32 %14292, 0
  %14309 = zext i1 %14308 to i8
  %14310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14309, i8* %14310, align 1
  %14311 = lshr i32 %14292, 31
  %14312 = trunc i32 %14311 to i8
  %14313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14312, i8* %14313, align 1
  %14314 = lshr i32 %14291, 31
  %14315 = xor i32 %14314, 1
  %14316 = xor i32 %14311, %14314
  %14317 = add i32 %14316, %14315
  %14318 = icmp eq i32 %14317, 2
  %14319 = zext i1 %14318 to i8
  %14320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14319, i8* %14320, align 1
  store %struct.Memory* %loadMem_41bc6f, %struct.Memory** %MEMORY
  %loadMem_41bc76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14322 = getelementptr inbounds %struct.GPR, %struct.GPR* %14321, i32 0, i32 33
  %14323 = getelementptr inbounds %struct.Reg, %struct.Reg* %14322, i32 0, i32 0
  %PC.i119 = bitcast %union.anon* %14323 to i64*
  %14324 = load i64, i64* %PC.i119
  %14325 = add i64 %14324, 246
  %14326 = load i64, i64* %PC.i119
  %14327 = add i64 %14326, 6
  %14328 = load i64, i64* %PC.i119
  %14329 = add i64 %14328, 6
  store i64 %14329, i64* %PC.i119
  %14330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14331 = load i8, i8* %14330, align 1
  %14332 = icmp ne i8 %14331, 0
  %14333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14334 = load i8, i8* %14333, align 1
  %14335 = icmp ne i8 %14334, 0
  %14336 = xor i1 %14332, %14335
  %14337 = xor i1 %14336, true
  %14338 = zext i1 %14337 to i8
  store i8 %14338, i8* %BRANCH_TAKEN, align 1
  %14339 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14340 = select i1 %14336, i64 %14327, i64 %14325
  store i64 %14340, i64* %14339, align 8
  store %struct.Memory* %loadMem_41bc76, %struct.Memory** %MEMORY
  %loadBr_41bc76 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bc76 = icmp eq i8 %loadBr_41bc76, 1
  br i1 %cmpBr_41bc76, label %block_.L_41bd6c, label %block_41bc7c

block_41bc7c:                                     ; preds = %block_.L_41bc6f
  %loadMem_41bc7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14342 = getelementptr inbounds %struct.GPR, %struct.GPR* %14341, i32 0, i32 33
  %14343 = getelementptr inbounds %struct.Reg, %struct.Reg* %14342, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %14343 to i64*
  %14344 = load i64, i64* %PC.i118
  %14345 = add i64 %14344, 8
  store i64 %14345, i64* %PC.i118
  %14346 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %14347 = sub i32 %14346, 1
  %14348 = icmp ult i32 %14346, 1
  %14349 = zext i1 %14348 to i8
  %14350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14349, i8* %14350, align 1
  %14351 = and i32 %14347, 255
  %14352 = call i32 @llvm.ctpop.i32(i32 %14351)
  %14353 = trunc i32 %14352 to i8
  %14354 = and i8 %14353, 1
  %14355 = xor i8 %14354, 1
  %14356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14355, i8* %14356, align 1
  %14357 = xor i32 %14346, 1
  %14358 = xor i32 %14357, %14347
  %14359 = lshr i32 %14358, 4
  %14360 = trunc i32 %14359 to i8
  %14361 = and i8 %14360, 1
  %14362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14361, i8* %14362, align 1
  %14363 = icmp eq i32 %14347, 0
  %14364 = zext i1 %14363 to i8
  %14365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14364, i8* %14365, align 1
  %14366 = lshr i32 %14347, 31
  %14367 = trunc i32 %14366 to i8
  %14368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14367, i8* %14368, align 1
  %14369 = lshr i32 %14346, 31
  %14370 = xor i32 %14366, %14369
  %14371 = add i32 %14370, %14369
  %14372 = icmp eq i32 %14371, 2
  %14373 = zext i1 %14372 to i8
  %14374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14373, i8* %14374, align 1
  store %struct.Memory* %loadMem_41bc7c, %struct.Memory** %MEMORY
  %loadMem_41bc84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14376 = getelementptr inbounds %struct.GPR, %struct.GPR* %14375, i32 0, i32 33
  %14377 = getelementptr inbounds %struct.Reg, %struct.Reg* %14376, i32 0, i32 0
  %PC.i117 = bitcast %union.anon* %14377 to i64*
  %14378 = load i64, i64* %PC.i117
  %14379 = add i64 %14378, 232
  %14380 = load i64, i64* %PC.i117
  %14381 = add i64 %14380, 6
  %14382 = load i64, i64* %PC.i117
  %14383 = add i64 %14382, 6
  store i64 %14383, i64* %PC.i117
  %14384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14385 = load i8, i8* %14384, align 1
  %14386 = icmp eq i8 %14385, 0
  %14387 = zext i1 %14386 to i8
  store i8 %14387, i8* %BRANCH_TAKEN, align 1
  %14388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14389 = select i1 %14386, i64 %14379, i64 %14381
  store i64 %14389, i64* %14388, align 8
  store %struct.Memory* %loadMem_41bc84, %struct.Memory** %MEMORY
  %loadBr_41bc84 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bc84 = icmp eq i8 %loadBr_41bc84, 1
  br i1 %cmpBr_41bc84, label %block_.L_41bd6c, label %block_41bc8a

block_41bc8a:                                     ; preds = %block_41bc7c
  %loadMem_41bc8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14391 = getelementptr inbounds %struct.GPR, %struct.GPR* %14390, i32 0, i32 33
  %14392 = getelementptr inbounds %struct.Reg, %struct.Reg* %14391, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %14392 to i64*
  %14393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14394 = getelementptr inbounds %struct.GPR, %struct.GPR* %14393, i32 0, i32 1
  %14395 = getelementptr inbounds %struct.Reg, %struct.Reg* %14394, i32 0, i32 0
  %RAX.i116 = bitcast %union.anon* %14395 to i64*
  %14396 = load i64, i64* %PC.i115
  %14397 = add i64 %14396, 7
  store i64 %14397, i64* %PC.i115
  %14398 = load i32, i32* bitcast (%G_0x62ea24_type* @G_0x62ea24 to i32*)
  %14399 = zext i32 %14398 to i64
  store i64 %14399, i64* %RAX.i116, align 8
  store %struct.Memory* %loadMem_41bc8a, %struct.Memory** %MEMORY
  %loadMem_41bc91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14401 = getelementptr inbounds %struct.GPR, %struct.GPR* %14400, i32 0, i32 33
  %14402 = getelementptr inbounds %struct.Reg, %struct.Reg* %14401, i32 0, i32 0
  %PC.i113 = bitcast %union.anon* %14402 to i64*
  %14403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14404 = getelementptr inbounds %struct.GPR, %struct.GPR* %14403, i32 0, i32 1
  %14405 = getelementptr inbounds %struct.Reg, %struct.Reg* %14404, i32 0, i32 0
  %EAX.i114 = bitcast %union.anon* %14405 to i32*
  %14406 = load i32, i32* %EAX.i114
  %14407 = zext i32 %14406 to i64
  %14408 = load i64, i64* %PC.i113
  %14409 = add i64 %14408, 7
  store i64 %14409, i64* %PC.i113
  %14410 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*)
  %14411 = sub i32 %14406, %14410
  %14412 = icmp ult i32 %14406, %14410
  %14413 = zext i1 %14412 to i8
  %14414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14413, i8* %14414, align 1
  %14415 = and i32 %14411, 255
  %14416 = call i32 @llvm.ctpop.i32(i32 %14415)
  %14417 = trunc i32 %14416 to i8
  %14418 = and i8 %14417, 1
  %14419 = xor i8 %14418, 1
  %14420 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14419, i8* %14420, align 1
  %14421 = xor i32 %14410, %14406
  %14422 = xor i32 %14421, %14411
  %14423 = lshr i32 %14422, 4
  %14424 = trunc i32 %14423 to i8
  %14425 = and i8 %14424, 1
  %14426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14425, i8* %14426, align 1
  %14427 = icmp eq i32 %14411, 0
  %14428 = zext i1 %14427 to i8
  %14429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14428, i8* %14429, align 1
  %14430 = lshr i32 %14411, 31
  %14431 = trunc i32 %14430 to i8
  %14432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14431, i8* %14432, align 1
  %14433 = lshr i32 %14406, 31
  %14434 = lshr i32 %14410, 31
  %14435 = xor i32 %14434, %14433
  %14436 = xor i32 %14430, %14433
  %14437 = add i32 %14436, %14435
  %14438 = icmp eq i32 %14437, 2
  %14439 = zext i1 %14438 to i8
  %14440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14439, i8* %14440, align 1
  store %struct.Memory* %loadMem_41bc91, %struct.Memory** %MEMORY
  %loadMem_41bc98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14442 = getelementptr inbounds %struct.GPR, %struct.GPR* %14441, i32 0, i32 33
  %14443 = getelementptr inbounds %struct.Reg, %struct.Reg* %14442, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %14443 to i64*
  %14444 = load i64, i64* %PC.i112
  %14445 = add i64 %14444, 212
  %14446 = load i64, i64* %PC.i112
  %14447 = add i64 %14446, 6
  %14448 = load i64, i64* %PC.i112
  %14449 = add i64 %14448, 6
  store i64 %14449, i64* %PC.i112
  %14450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14451 = load i8, i8* %14450, align 1
  %14452 = icmp eq i8 %14451, 0
  %14453 = zext i1 %14452 to i8
  store i8 %14453, i8* %BRANCH_TAKEN, align 1
  %14454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14455 = select i1 %14452, i64 %14445, i64 %14447
  store i64 %14455, i64* %14454, align 8
  store %struct.Memory* %loadMem_41bc98, %struct.Memory** %MEMORY
  %loadBr_41bc98 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bc98 = icmp eq i8 %loadBr_41bc98, 1
  br i1 %cmpBr_41bc98, label %block_.L_41bd6c, label %block_41bc9e

block_41bc9e:                                     ; preds = %block_41bc8a
  %loadMem_41bc9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %14456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14457 = getelementptr inbounds %struct.GPR, %struct.GPR* %14456, i32 0, i32 33
  %14458 = getelementptr inbounds %struct.Reg, %struct.Reg* %14457, i32 0, i32 0
  %PC.i111 = bitcast %union.anon* %14458 to i64*
  %14459 = load i64, i64* %PC.i111
  %14460 = add i64 %14459, 8
  store i64 %14460, i64* %PC.i111
  %14461 = load i32, i32* bitcast (%G_0x86bd84_type* @G_0x86bd84 to i32*)
  %14462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14462, align 1
  %14463 = and i32 %14461, 255
  %14464 = call i32 @llvm.ctpop.i32(i32 %14463)
  %14465 = trunc i32 %14464 to i8
  %14466 = and i8 %14465, 1
  %14467 = xor i8 %14466, 1
  %14468 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14467, i8* %14468, align 1
  %14469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14469, align 1
  %14470 = icmp eq i32 %14461, 0
  %14471 = zext i1 %14470 to i8
  %14472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14471, i8* %14472, align 1
  %14473 = lshr i32 %14461, 31
  %14474 = trunc i32 %14473 to i8
  %14475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14474, i8* %14475, align 1
  %14476 = lshr i32 %14461, 31
  %14477 = xor i32 %14473, %14476
  %14478 = add i32 %14477, %14476
  %14479 = icmp eq i32 %14478, 2
  %14480 = zext i1 %14479 to i8
  %14481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14480, i8* %14481, align 1
  store %struct.Memory* %loadMem_41bc9e, %struct.Memory** %MEMORY
  %loadMem_41bca6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14483 = getelementptr inbounds %struct.GPR, %struct.GPR* %14482, i32 0, i32 33
  %14484 = getelementptr inbounds %struct.Reg, %struct.Reg* %14483, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %14484 to i64*
  %14485 = load i64, i64* %PC.i110
  %14486 = add i64 %14485, 22
  %14487 = load i64, i64* %PC.i110
  %14488 = add i64 %14487, 6
  %14489 = load i64, i64* %PC.i110
  %14490 = add i64 %14489, 6
  store i64 %14490, i64* %PC.i110
  %14491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14492 = load i8, i8* %14491, align 1
  store i8 %14492, i8* %BRANCH_TAKEN, align 1
  %14493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14494 = icmp ne i8 %14492, 0
  %14495 = select i1 %14494, i64 %14486, i64 %14488
  store i64 %14495, i64* %14493, align 8
  store %struct.Memory* %loadMem_41bca6, %struct.Memory** %MEMORY
  %loadBr_41bca6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bca6 = icmp eq i8 %loadBr_41bca6, 1
  br i1 %cmpBr_41bca6, label %block_.L_41bcbc, label %block_41bcac

block_41bcac:                                     ; preds = %block_41bc9e
  %loadMem_41bcac = load %struct.Memory*, %struct.Memory** %MEMORY
  %14496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14497 = getelementptr inbounds %struct.GPR, %struct.GPR* %14496, i32 0, i32 33
  %14498 = getelementptr inbounds %struct.Reg, %struct.Reg* %14497, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %14498 to i64*
  %14499 = load i64, i64* %PC.i109
  %14500 = add i64 %14499, 11
  store i64 %14500, i64* %PC.i109
  store i32 1, i32* bitcast (%G_0x86bd90_type* @G_0x86bd90 to i32*)
  store %struct.Memory* %loadMem_41bcac, %struct.Memory** %MEMORY
  %loadMem_41bcb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14502 = getelementptr inbounds %struct.GPR, %struct.GPR* %14501, i32 0, i32 33
  %14503 = getelementptr inbounds %struct.Reg, %struct.Reg* %14502, i32 0, i32 0
  %PC.i108 = bitcast %union.anon* %14503 to i64*
  %14504 = load i64, i64* %PC.i108
  %14505 = add i64 %14504, 70
  %14506 = load i64, i64* %PC.i108
  %14507 = add i64 %14506, 5
  store i64 %14507, i64* %PC.i108
  %14508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14505, i64* %14508, align 8
  store %struct.Memory* %loadMem_41bcb7, %struct.Memory** %MEMORY
  br label %block_.L_41bcfd

block_.L_41bcbc:                                  ; preds = %block_41bc9e
  %loadMem_41bcbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %14509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14510 = getelementptr inbounds %struct.GPR, %struct.GPR* %14509, i32 0, i32 33
  %14511 = getelementptr inbounds %struct.Reg, %struct.Reg* %14510, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %14511 to i64*
  %14512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14513 = getelementptr inbounds %struct.GPR, %struct.GPR* %14512, i32 0, i32 11
  %14514 = getelementptr inbounds %struct.Reg, %struct.Reg* %14513, i32 0, i32 0
  %RDI.i107 = bitcast %union.anon* %14514 to i64*
  %14515 = load i64, i64* %PC.i106
  %14516 = add i64 %14515, 10
  store i64 %14516, i64* %PC.i106
  store i64 ptrtoint (%G__0x85f1f0_type* @G__0x85f1f0 to i64), i64* %RDI.i107, align 8
  store %struct.Memory* %loadMem_41bcbc, %struct.Memory** %MEMORY
  %loadMem_41bcc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14518 = getelementptr inbounds %struct.GPR, %struct.GPR* %14517, i32 0, i32 33
  %14519 = getelementptr inbounds %struct.Reg, %struct.Reg* %14518, i32 0, i32 0
  %PC.i105 = bitcast %union.anon* %14519 to i64*
  %14520 = load i64, i64* %PC.i105
  %14521 = add i64 %14520, 11
  store i64 %14521, i64* %PC.i105
  store i32 1, i32* bitcast (%G_0x86bd84_type* @G_0x86bd84 to i32*)
  store %struct.Memory* %loadMem_41bcc6, %struct.Memory** %MEMORY
  %loadMem1_41bcd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14523 = getelementptr inbounds %struct.GPR, %struct.GPR* %14522, i32 0, i32 33
  %14524 = getelementptr inbounds %struct.Reg, %struct.Reg* %14523, i32 0, i32 0
  %PC.i104 = bitcast %union.anon* %14524 to i64*
  %14525 = load i64, i64* %PC.i104
  %14526 = add i64 %14525, -106737
  %14527 = load i64, i64* %PC.i104
  %14528 = add i64 %14527, 5
  %14529 = load i64, i64* %PC.i104
  %14530 = add i64 %14529, 5
  store i64 %14530, i64* %PC.i104
  %14531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14532 = load i64, i64* %14531, align 8
  %14533 = add i64 %14532, -8
  %14534 = inttoptr i64 %14533 to i64*
  store i64 %14528, i64* %14534
  store i64 %14533, i64* %14531, align 8
  %14535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14526, i64* %14535, align 8
  store %struct.Memory* %loadMem1_41bcd1, %struct.Memory** %MEMORY
  %loadMem2_41bcd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bcd1 = load i64, i64* %3
  %call2_41bcd1 = call %struct.Memory* @sub_401be0.ProcessHoldings(%struct.State* %0, i64 %loadPC_41bcd1, %struct.Memory* %loadMem2_41bcd1)
  store %struct.Memory* %call2_41bcd1, %struct.Memory** %MEMORY
  %loadMem_41bcd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14537 = getelementptr inbounds %struct.GPR, %struct.GPR* %14536, i32 0, i32 33
  %14538 = getelementptr inbounds %struct.Reg, %struct.Reg* %14537, i32 0, i32 0
  %PC.i102 = bitcast %union.anon* %14538 to i64*
  %14539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14540 = getelementptr inbounds %struct.GPR, %struct.GPR* %14539, i32 0, i32 11
  %14541 = getelementptr inbounds %struct.Reg, %struct.Reg* %14540, i32 0, i32 0
  %RDI.i103 = bitcast %union.anon* %14541 to i64*
  %14542 = load i64, i64* %PC.i102
  %14543 = add i64 %14542, 10
  store i64 %14543, i64* %PC.i102
  store i64 ptrtoint (%G__0x429172_type* @G__0x429172 to i64), i64* %RDI.i103, align 8
  store %struct.Memory* %loadMem_41bcd6, %struct.Memory** %MEMORY
  %loadMem_41bce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14545 = getelementptr inbounds %struct.GPR, %struct.GPR* %14544, i32 0, i32 33
  %14546 = getelementptr inbounds %struct.Reg, %struct.Reg* %14545, i32 0, i32 0
  %PC.i101 = bitcast %union.anon* %14546 to i64*
  %14547 = load i64, i64* %PC.i101
  %14548 = add i64 %14547, 11
  store i64 %14548, i64* %PC.i101
  store i32 0, i32* bitcast (%G_0x62e9e4_type* @G_0x62e9e4 to i32*)
  store %struct.Memory* %loadMem_41bce0, %struct.Memory** %MEMORY
  %loadMem_41bceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %14549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14550 = getelementptr inbounds %struct.GPR, %struct.GPR* %14549, i32 0, i32 33
  %14551 = getelementptr inbounds %struct.Reg, %struct.Reg* %14550, i32 0, i32 0
  %PC.i99 = bitcast %union.anon* %14551 to i64*
  %14552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14553 = getelementptr inbounds %struct.GPR, %struct.GPR* %14552, i32 0, i32 1
  %14554 = getelementptr inbounds %struct.Reg, %struct.Reg* %14553, i32 0, i32 0
  %14555 = bitcast %union.anon* %14554 to %struct.anon.2*
  %AL.i100 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14555, i32 0, i32 0
  %14556 = load i64, i64* %PC.i99
  %14557 = add i64 %14556, 2
  store i64 %14557, i64* %PC.i99
  store i8 0, i8* %AL.i100, align 1
  store %struct.Memory* %loadMem_41bceb, %struct.Memory** %MEMORY
  %loadMem1_41bced = load %struct.Memory*, %struct.Memory** %MEMORY
  %14558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14559 = getelementptr inbounds %struct.GPR, %struct.GPR* %14558, i32 0, i32 33
  %14560 = getelementptr inbounds %struct.Reg, %struct.Reg* %14559, i32 0, i32 0
  %PC.i98 = bitcast %union.anon* %14560 to i64*
  %14561 = load i64, i64* %PC.i98
  %14562 = add i64 %14561, -110653
  %14563 = load i64, i64* %PC.i98
  %14564 = add i64 %14563, 5
  %14565 = load i64, i64* %PC.i98
  %14566 = add i64 %14565, 5
  store i64 %14566, i64* %PC.i98
  %14567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14568 = load i64, i64* %14567, align 8
  %14569 = add i64 %14568, -8
  %14570 = inttoptr i64 %14569 to i64*
  store i64 %14564, i64* %14570
  store i64 %14569, i64* %14567, align 8
  %14571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14562, i64* %14571, align 8
  store %struct.Memory* %loadMem1_41bced, %struct.Memory** %MEMORY
  %loadMem2_41bced = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bced = load i64, i64* %3
  %14572 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41bced)
  store %struct.Memory* %14572, %struct.Memory** %MEMORY
  %loadMem_41bcf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14574 = getelementptr inbounds %struct.GPR, %struct.GPR* %14573, i32 0, i32 33
  %14575 = getelementptr inbounds %struct.Reg, %struct.Reg* %14574, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %14575 to i64*
  %14576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14577 = getelementptr inbounds %struct.GPR, %struct.GPR* %14576, i32 0, i32 1
  %14578 = getelementptr inbounds %struct.Reg, %struct.Reg* %14577, i32 0, i32 0
  %EAX.i94 = bitcast %union.anon* %14578 to i32*
  %14579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14580 = getelementptr inbounds %struct.GPR, %struct.GPR* %14579, i32 0, i32 15
  %14581 = getelementptr inbounds %struct.Reg, %struct.Reg* %14580, i32 0, i32 0
  %RBP.i95 = bitcast %union.anon* %14581 to i64*
  %14582 = load i64, i64* %RBP.i95
  %14583 = sub i64 %14582, 12600
  %14584 = load i32, i32* %EAX.i94
  %14585 = zext i32 %14584 to i64
  %14586 = load i64, i64* %PC.i93
  %14587 = add i64 %14586, 6
  store i64 %14587, i64* %PC.i93
  %14588 = inttoptr i64 %14583 to i32*
  store i32 %14584, i32* %14588
  store %struct.Memory* %loadMem_41bcf2, %struct.Memory** %MEMORY
  %loadMem_41bcf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14590 = getelementptr inbounds %struct.GPR, %struct.GPR* %14589, i32 0, i32 33
  %14591 = getelementptr inbounds %struct.Reg, %struct.Reg* %14590, i32 0, i32 0
  %PC.i92 = bitcast %union.anon* %14591 to i64*
  %14592 = load i64, i64* %PC.i92
  %14593 = add i64 %14592, -4975
  %14594 = load i64, i64* %PC.i92
  %14595 = add i64 %14594, 5
  store i64 %14595, i64* %PC.i92
  %14596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14593, i64* %14596, align 8
  store %struct.Memory* %loadMem_41bcf8, %struct.Memory** %MEMORY
  br label %block_.L_41a989

block_.L_41bcfd:                                  ; preds = %block_41bcac
  %loadMem_41bcfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %14597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14598 = getelementptr inbounds %struct.GPR, %struct.GPR* %14597, i32 0, i32 33
  %14599 = getelementptr inbounds %struct.Reg, %struct.Reg* %14598, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %14599 to i64*
  %14600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14601 = getelementptr inbounds %struct.GPR, %struct.GPR* %14600, i32 0, i32 15
  %14602 = getelementptr inbounds %struct.Reg, %struct.Reg* %14601, i32 0, i32 0
  %RBP.i91 = bitcast %union.anon* %14602 to i64*
  %14603 = load i64, i64* %RBP.i91
  %14604 = sub i64 %14603, 92
  %14605 = load i64, i64* %PC.i90
  %14606 = add i64 %14605, 7
  store i64 %14606, i64* %PC.i90
  %14607 = inttoptr i64 %14604 to i32*
  %14608 = load i32, i32* %14607
  %14609 = sub i32 %14608, -1000000
  %14610 = icmp ult i32 %14608, -1000000
  %14611 = zext i1 %14610 to i8
  %14612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14611, i8* %14612, align 1
  %14613 = and i32 %14609, 255
  %14614 = call i32 @llvm.ctpop.i32(i32 %14613)
  %14615 = trunc i32 %14614 to i8
  %14616 = and i8 %14615, 1
  %14617 = xor i8 %14616, 1
  %14618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14617, i8* %14618, align 1
  %14619 = xor i32 %14608, -1000000
  %14620 = xor i32 %14619, %14609
  %14621 = lshr i32 %14620, 4
  %14622 = trunc i32 %14621 to i8
  %14623 = and i8 %14622, 1
  %14624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14623, i8* %14624, align 1
  %14625 = icmp eq i32 %14609, 0
  %14626 = zext i1 %14625 to i8
  %14627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14626, i8* %14627, align 1
  %14628 = lshr i32 %14609, 31
  %14629 = trunc i32 %14628 to i8
  %14630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14629, i8* %14630, align 1
  %14631 = lshr i32 %14608, 31
  %14632 = xor i32 %14631, 1
  %14633 = xor i32 %14628, %14631
  %14634 = add i32 %14633, %14632
  %14635 = icmp eq i32 %14634, 2
  %14636 = zext i1 %14635 to i8
  %14637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14636, i8* %14637, align 1
  store %struct.Memory* %loadMem_41bcfd, %struct.Memory** %MEMORY
  %loadMem_41bd04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14639 = getelementptr inbounds %struct.GPR, %struct.GPR* %14638, i32 0, i32 33
  %14640 = getelementptr inbounds %struct.Reg, %struct.Reg* %14639, i32 0, i32 0
  %PC.i89 = bitcast %union.anon* %14640 to i64*
  %14641 = load i64, i64* %PC.i89
  %14642 = add i64 %14641, 99
  %14643 = load i64, i64* %PC.i89
  %14644 = add i64 %14643, 6
  %14645 = load i64, i64* %PC.i89
  %14646 = add i64 %14645, 6
  store i64 %14646, i64* %PC.i89
  %14647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14648 = load i8, i8* %14647, align 1
  %14649 = icmp ne i8 %14648, 0
  %14650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14651 = load i8, i8* %14650, align 1
  %14652 = icmp ne i8 %14651, 0
  %14653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14654 = load i8, i8* %14653, align 1
  %14655 = icmp ne i8 %14654, 0
  %14656 = xor i1 %14652, %14655
  %14657 = or i1 %14649, %14656
  %14658 = zext i1 %14657 to i8
  store i8 %14658, i8* %BRANCH_TAKEN, align 1
  %14659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14660 = select i1 %14657, i64 %14642, i64 %14644
  store i64 %14660, i64* %14659, align 8
  store %struct.Memory* %loadMem_41bd04, %struct.Memory** %MEMORY
  %loadBr_41bd04 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd04 = icmp eq i8 %loadBr_41bd04, 1
  br i1 %cmpBr_41bd04, label %block_.L_41bd67, label %block_41bd0a

block_41bd0a:                                     ; preds = %block_.L_41bcfd
  %loadMem_41bd0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %14661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14662 = getelementptr inbounds %struct.GPR, %struct.GPR* %14661, i32 0, i32 33
  %14663 = getelementptr inbounds %struct.Reg, %struct.Reg* %14662, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %14663 to i64*
  %14664 = load i64, i64* %PC.i88
  %14665 = add i64 %14664, 8
  store i64 %14665, i64* %PC.i88
  %14666 = load i32, i32* bitcast (%G_0x86bd78_type* @G_0x86bd78 to i32*)
  %14667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %14667, align 1
  %14668 = and i32 %14666, 255
  %14669 = call i32 @llvm.ctpop.i32(i32 %14668)
  %14670 = trunc i32 %14669 to i8
  %14671 = and i8 %14670, 1
  %14672 = xor i8 %14671, 1
  %14673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14672, i8* %14673, align 1
  %14674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %14674, align 1
  %14675 = icmp eq i32 %14666, 0
  %14676 = zext i1 %14675 to i8
  %14677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14676, i8* %14677, align 1
  %14678 = lshr i32 %14666, 31
  %14679 = trunc i32 %14678 to i8
  %14680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14679, i8* %14680, align 1
  %14681 = lshr i32 %14666, 31
  %14682 = xor i32 %14678, %14681
  %14683 = add i32 %14682, %14681
  %14684 = icmp eq i32 %14683, 2
  %14685 = zext i1 %14684 to i8
  %14686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14685, i8* %14686, align 1
  store %struct.Memory* %loadMem_41bd0a, %struct.Memory** %MEMORY
  %loadMem_41bd12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14688 = getelementptr inbounds %struct.GPR, %struct.GPR* %14687, i32 0, i32 33
  %14689 = getelementptr inbounds %struct.Reg, %struct.Reg* %14688, i32 0, i32 0
  %PC.i87 = bitcast %union.anon* %14689 to i64*
  %14690 = load i64, i64* %PC.i87
  %14691 = add i64 %14690, 57
  %14692 = load i64, i64* %PC.i87
  %14693 = add i64 %14692, 6
  %14694 = load i64, i64* %PC.i87
  %14695 = add i64 %14694, 6
  store i64 %14695, i64* %PC.i87
  %14696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14697 = load i8, i8* %14696, align 1
  store i8 %14697, i8* %BRANCH_TAKEN, align 1
  %14698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14699 = icmp ne i8 %14697, 0
  %14700 = select i1 %14699, i64 %14691, i64 %14693
  store i64 %14700, i64* %14698, align 8
  store %struct.Memory* %loadMem_41bd12, %struct.Memory** %MEMORY
  %loadBr_41bd12 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd12 = icmp eq i8 %loadBr_41bd12, 1
  br i1 %cmpBr_41bd12, label %block_.L_41bd4b, label %block_41bd18

block_41bd18:                                     ; preds = %block_41bd0a
  %loadMem_41bd18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14702 = getelementptr inbounds %struct.GPR, %struct.GPR* %14701, i32 0, i32 33
  %14703 = getelementptr inbounds %struct.Reg, %struct.Reg* %14702, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %14703 to i64*
  %14704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14705 = getelementptr inbounds %struct.GPR, %struct.GPR* %14704, i32 0, i32 11
  %14706 = getelementptr inbounds %struct.Reg, %struct.Reg* %14705, i32 0, i32 0
  %RDI.i86 = bitcast %union.anon* %14706 to i64*
  %14707 = load i64, i64* %PC.i85
  %14708 = add i64 %14707, 10
  store i64 %14708, i64* %PC.i85
  store i64 ptrtoint (%G__0x42918b_type* @G__0x42918b to i64), i64* %RDI.i86, align 8
  store %struct.Memory* %loadMem_41bd18, %struct.Memory** %MEMORY
  %loadMem_41bd22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14710 = getelementptr inbounds %struct.GPR, %struct.GPR* %14709, i32 0, i32 33
  %14711 = getelementptr inbounds %struct.Reg, %struct.Reg* %14710, i32 0, i32 0
  %PC.i83 = bitcast %union.anon* %14711 to i64*
  %14712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14713 = getelementptr inbounds %struct.GPR, %struct.GPR* %14712, i32 0, i32 1
  %14714 = getelementptr inbounds %struct.Reg, %struct.Reg* %14713, i32 0, i32 0
  %14715 = bitcast %union.anon* %14714 to %struct.anon.2*
  %AL.i84 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14715, i32 0, i32 0
  %14716 = load i64, i64* %PC.i83
  %14717 = add i64 %14716, 2
  store i64 %14717, i64* %PC.i83
  store i8 0, i8* %AL.i84, align 1
  store %struct.Memory* %loadMem_41bd22, %struct.Memory** %MEMORY
  %loadMem1_41bd24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14719 = getelementptr inbounds %struct.GPR, %struct.GPR* %14718, i32 0, i32 33
  %14720 = getelementptr inbounds %struct.Reg, %struct.Reg* %14719, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %14720 to i64*
  %14721 = load i64, i64* %PC.i82
  %14722 = add i64 %14721, -110708
  %14723 = load i64, i64* %PC.i82
  %14724 = add i64 %14723, 5
  %14725 = load i64, i64* %PC.i82
  %14726 = add i64 %14725, 5
  store i64 %14726, i64* %PC.i82
  %14727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14728 = load i64, i64* %14727, align 8
  %14729 = add i64 %14728, -8
  %14730 = inttoptr i64 %14729 to i64*
  store i64 %14724, i64* %14730
  store i64 %14729, i64* %14727, align 8
  %14731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14722, i64* %14731, align 8
  store %struct.Memory* %loadMem1_41bd24, %struct.Memory** %MEMORY
  %loadMem2_41bd24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bd24 = load i64, i64* %3
  %14732 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41bd24)
  store %struct.Memory* %14732, %struct.Memory** %MEMORY
  %loadMem_41bd29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14734 = getelementptr inbounds %struct.GPR, %struct.GPR* %14733, i32 0, i32 33
  %14735 = getelementptr inbounds %struct.Reg, %struct.Reg* %14734, i32 0, i32 0
  %PC.i78 = bitcast %union.anon* %14735 to i64*
  %14736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14737 = getelementptr inbounds %struct.GPR, %struct.GPR* %14736, i32 0, i32 11
  %14738 = getelementptr inbounds %struct.Reg, %struct.Reg* %14737, i32 0, i32 0
  %RDI.i79 = bitcast %union.anon* %14738 to i64*
  %14739 = load i64, i64* %PC.i78
  %14740 = add i64 %14739, 10
  store i64 %14740, i64* %PC.i78
  store i64 ptrtoint (%G__0x4291bc_type* @G__0x4291bc to i64), i64* %RDI.i79, align 8
  store %struct.Memory* %loadMem_41bd29, %struct.Memory** %MEMORY
  %loadMem_41bd33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14742 = getelementptr inbounds %struct.GPR, %struct.GPR* %14741, i32 0, i32 33
  %14743 = getelementptr inbounds %struct.Reg, %struct.Reg* %14742, i32 0, i32 0
  %PC.i75 = bitcast %union.anon* %14743 to i64*
  %14744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14745 = getelementptr inbounds %struct.GPR, %struct.GPR* %14744, i32 0, i32 1
  %14746 = getelementptr inbounds %struct.Reg, %struct.Reg* %14745, i32 0, i32 0
  %EAX.i76 = bitcast %union.anon* %14746 to i32*
  %14747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14748 = getelementptr inbounds %struct.GPR, %struct.GPR* %14747, i32 0, i32 15
  %14749 = getelementptr inbounds %struct.Reg, %struct.Reg* %14748, i32 0, i32 0
  %RBP.i77 = bitcast %union.anon* %14749 to i64*
  %14750 = load i64, i64* %RBP.i77
  %14751 = sub i64 %14750, 12604
  %14752 = load i32, i32* %EAX.i76
  %14753 = zext i32 %14752 to i64
  %14754 = load i64, i64* %PC.i75
  %14755 = add i64 %14754, 6
  store i64 %14755, i64* %PC.i75
  %14756 = inttoptr i64 %14751 to i32*
  store i32 %14752, i32* %14756
  store %struct.Memory* %loadMem_41bd33, %struct.Memory** %MEMORY
  %loadMem_41bd39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14758 = getelementptr inbounds %struct.GPR, %struct.GPR* %14757, i32 0, i32 33
  %14759 = getelementptr inbounds %struct.Reg, %struct.Reg* %14758, i32 0, i32 0
  %PC.i73 = bitcast %union.anon* %14759 to i64*
  %14760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14761 = getelementptr inbounds %struct.GPR, %struct.GPR* %14760, i32 0, i32 1
  %14762 = getelementptr inbounds %struct.Reg, %struct.Reg* %14761, i32 0, i32 0
  %14763 = bitcast %union.anon* %14762 to %struct.anon.2*
  %AL.i74 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14763, i32 0, i32 0
  %14764 = load i64, i64* %PC.i73
  %14765 = add i64 %14764, 2
  store i64 %14765, i64* %PC.i73
  store i8 0, i8* %AL.i74, align 1
  store %struct.Memory* %loadMem_41bd39, %struct.Memory** %MEMORY
  %loadMem1_41bd3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14767 = getelementptr inbounds %struct.GPR, %struct.GPR* %14766, i32 0, i32 33
  %14768 = getelementptr inbounds %struct.Reg, %struct.Reg* %14767, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %14768 to i64*
  %14769 = load i64, i64* %PC.i72
  %14770 = add i64 %14769, -110731
  %14771 = load i64, i64* %PC.i72
  %14772 = add i64 %14771, 5
  %14773 = load i64, i64* %PC.i72
  %14774 = add i64 %14773, 5
  store i64 %14774, i64* %PC.i72
  %14775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14776 = load i64, i64* %14775, align 8
  %14777 = add i64 %14776, -8
  %14778 = inttoptr i64 %14777 to i64*
  store i64 %14772, i64* %14778
  store i64 %14777, i64* %14775, align 8
  %14779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14770, i64* %14779, align 8
  store %struct.Memory* %loadMem1_41bd3b, %struct.Memory** %MEMORY
  %loadMem2_41bd3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bd3b = load i64, i64* %3
  %14780 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41bd3b)
  store %struct.Memory* %14780, %struct.Memory** %MEMORY
  %loadMem_41bd40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14782 = getelementptr inbounds %struct.GPR, %struct.GPR* %14781, i32 0, i32 33
  %14783 = getelementptr inbounds %struct.Reg, %struct.Reg* %14782, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %14783 to i64*
  %14784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14785 = getelementptr inbounds %struct.GPR, %struct.GPR* %14784, i32 0, i32 1
  %14786 = getelementptr inbounds %struct.Reg, %struct.Reg* %14785, i32 0, i32 0
  %EAX.i67 = bitcast %union.anon* %14786 to i32*
  %14787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14788 = getelementptr inbounds %struct.GPR, %struct.GPR* %14787, i32 0, i32 15
  %14789 = getelementptr inbounds %struct.Reg, %struct.Reg* %14788, i32 0, i32 0
  %RBP.i68 = bitcast %union.anon* %14789 to i64*
  %14790 = load i64, i64* %RBP.i68
  %14791 = sub i64 %14790, 12608
  %14792 = load i32, i32* %EAX.i67
  %14793 = zext i32 %14792 to i64
  %14794 = load i64, i64* %PC.i66
  %14795 = add i64 %14794, 6
  store i64 %14795, i64* %PC.i66
  %14796 = inttoptr i64 %14791 to i32*
  store i32 %14792, i32* %14796
  store %struct.Memory* %loadMem_41bd40, %struct.Memory** %MEMORY
  %loadMem_41bd46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14798 = getelementptr inbounds %struct.GPR, %struct.GPR* %14797, i32 0, i32 33
  %14799 = getelementptr inbounds %struct.Reg, %struct.Reg* %14798, i32 0, i32 0
  %PC.i65 = bitcast %union.anon* %14799 to i64*
  %14800 = load i64, i64* %PC.i65
  %14801 = add i64 %14800, 28
  %14802 = load i64, i64* %PC.i65
  %14803 = add i64 %14802, 5
  store i64 %14803, i64* %PC.i65
  %14804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14801, i64* %14804, align 8
  store %struct.Memory* %loadMem_41bd46, %struct.Memory** %MEMORY
  br label %block_.L_41bd62

block_.L_41bd4b:                                  ; preds = %block_41bd0a
  %loadMem_41bd4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %14805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14806 = getelementptr inbounds %struct.GPR, %struct.GPR* %14805, i32 0, i32 33
  %14807 = getelementptr inbounds %struct.Reg, %struct.Reg* %14806, i32 0, i32 0
  %PC.i63 = bitcast %union.anon* %14807 to i64*
  %14808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14809 = getelementptr inbounds %struct.GPR, %struct.GPR* %14808, i32 0, i32 11
  %14810 = getelementptr inbounds %struct.Reg, %struct.Reg* %14809, i32 0, i32 0
  %RDI.i64 = bitcast %union.anon* %14810 to i64*
  %14811 = load i64, i64* %PC.i63
  %14812 = add i64 %14811, 10
  store i64 %14812, i64* %PC.i63
  store i64 ptrtoint (%G__0x4291cc_type* @G__0x4291cc to i64), i64* %RDI.i64, align 8
  store %struct.Memory* %loadMem_41bd4b, %struct.Memory** %MEMORY
  %loadMem_41bd55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14814 = getelementptr inbounds %struct.GPR, %struct.GPR* %14813, i32 0, i32 33
  %14815 = getelementptr inbounds %struct.Reg, %struct.Reg* %14814, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %14815 to i64*
  %14816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14817 = getelementptr inbounds %struct.GPR, %struct.GPR* %14816, i32 0, i32 1
  %14818 = getelementptr inbounds %struct.Reg, %struct.Reg* %14817, i32 0, i32 0
  %14819 = bitcast %union.anon* %14818 to %struct.anon.2*
  %AL.i62 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14819, i32 0, i32 0
  %14820 = load i64, i64* %PC.i61
  %14821 = add i64 %14820, 2
  store i64 %14821, i64* %PC.i61
  store i8 0, i8* %AL.i62, align 1
  store %struct.Memory* %loadMem_41bd55, %struct.Memory** %MEMORY
  %loadMem1_41bd57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14823 = getelementptr inbounds %struct.GPR, %struct.GPR* %14822, i32 0, i32 33
  %14824 = getelementptr inbounds %struct.Reg, %struct.Reg* %14823, i32 0, i32 0
  %PC.i60 = bitcast %union.anon* %14824 to i64*
  %14825 = load i64, i64* %PC.i60
  %14826 = add i64 %14825, -110759
  %14827 = load i64, i64* %PC.i60
  %14828 = add i64 %14827, 5
  %14829 = load i64, i64* %PC.i60
  %14830 = add i64 %14829, 5
  store i64 %14830, i64* %PC.i60
  %14831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14832 = load i64, i64* %14831, align 8
  %14833 = add i64 %14832, -8
  %14834 = inttoptr i64 %14833 to i64*
  store i64 %14828, i64* %14834
  store i64 %14833, i64* %14831, align 8
  %14835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14826, i64* %14835, align 8
  store %struct.Memory* %loadMem1_41bd57, %struct.Memory** %MEMORY
  %loadMem2_41bd57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bd57 = load i64, i64* %3
  %14836 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41bd57)
  store %struct.Memory* %14836, %struct.Memory** %MEMORY
  %loadMem_41bd5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14838 = getelementptr inbounds %struct.GPR, %struct.GPR* %14837, i32 0, i32 33
  %14839 = getelementptr inbounds %struct.Reg, %struct.Reg* %14838, i32 0, i32 0
  %PC.i55 = bitcast %union.anon* %14839 to i64*
  %14840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14841 = getelementptr inbounds %struct.GPR, %struct.GPR* %14840, i32 0, i32 1
  %14842 = getelementptr inbounds %struct.Reg, %struct.Reg* %14841, i32 0, i32 0
  %EAX.i56 = bitcast %union.anon* %14842 to i32*
  %14843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14844 = getelementptr inbounds %struct.GPR, %struct.GPR* %14843, i32 0, i32 15
  %14845 = getelementptr inbounds %struct.Reg, %struct.Reg* %14844, i32 0, i32 0
  %RBP.i57 = bitcast %union.anon* %14845 to i64*
  %14846 = load i64, i64* %RBP.i57
  %14847 = sub i64 %14846, 12612
  %14848 = load i32, i32* %EAX.i56
  %14849 = zext i32 %14848 to i64
  %14850 = load i64, i64* %PC.i55
  %14851 = add i64 %14850, 6
  store i64 %14851, i64* %PC.i55
  %14852 = inttoptr i64 %14847 to i32*
  store i32 %14848, i32* %14852
  store %struct.Memory* %loadMem_41bd5c, %struct.Memory** %MEMORY
  br label %block_.L_41bd62

block_.L_41bd62:                                  ; preds = %block_.L_41bd4b, %block_41bd18
  %loadMem_41bd62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14854 = getelementptr inbounds %struct.GPR, %struct.GPR* %14853, i32 0, i32 33
  %14855 = getelementptr inbounds %struct.Reg, %struct.Reg* %14854, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %14855 to i64*
  %14856 = load i64, i64* %PC.i54
  %14857 = add i64 %14856, 5
  %14858 = load i64, i64* %PC.i54
  %14859 = add i64 %14858, 5
  store i64 %14859, i64* %PC.i54
  %14860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14857, i64* %14860, align 8
  store %struct.Memory* %loadMem_41bd62, %struct.Memory** %MEMORY
  br label %block_.L_41bd67

block_.L_41bd67:                                  ; preds = %block_.L_41bd62, %block_.L_41bcfd
  %loadMem_41bd67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14862 = getelementptr inbounds %struct.GPR, %struct.GPR* %14861, i32 0, i32 33
  %14863 = getelementptr inbounds %struct.Reg, %struct.Reg* %14862, i32 0, i32 0
  %PC.i53 = bitcast %union.anon* %14863 to i64*
  %14864 = load i64, i64* %PC.i53
  %14865 = add i64 %14864, 118
  %14866 = load i64, i64* %PC.i53
  %14867 = add i64 %14866, 5
  store i64 %14867, i64* %PC.i53
  %14868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %14865, i64* %14868, align 8
  store %struct.Memory* %loadMem_41bd67, %struct.Memory** %MEMORY
  br label %block_.L_41bddd

block_.L_41bd6c:                                  ; preds = %block_41bc8a, %block_41bc7c, %block_.L_41bc6f
  %loadMem_41bd6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %14869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14870 = getelementptr inbounds %struct.GPR, %struct.GPR* %14869, i32 0, i32 33
  %14871 = getelementptr inbounds %struct.Reg, %struct.Reg* %14870, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %14871 to i64*
  %14872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14873 = getelementptr inbounds %struct.GPR, %struct.GPR* %14872, i32 0, i32 15
  %14874 = getelementptr inbounds %struct.Reg, %struct.Reg* %14873, i32 0, i32 0
  %RBP.i52 = bitcast %union.anon* %14874 to i64*
  %14875 = load i64, i64* %RBP.i52
  %14876 = sub i64 %14875, 92
  %14877 = load i64, i64* %PC.i51
  %14878 = add i64 %14877, 7
  store i64 %14878, i64* %PC.i51
  %14879 = inttoptr i64 %14876 to i32*
  %14880 = load i32, i32* %14879
  %14881 = sub i32 %14880, -60000
  %14882 = icmp ult i32 %14880, -60000
  %14883 = zext i1 %14882 to i8
  %14884 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14883, i8* %14884, align 1
  %14885 = and i32 %14881, 255
  %14886 = call i32 @llvm.ctpop.i32(i32 %14885)
  %14887 = trunc i32 %14886 to i8
  %14888 = and i8 %14887, 1
  %14889 = xor i8 %14888, 1
  %14890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14889, i8* %14890, align 1
  %14891 = xor i32 %14880, -60000
  %14892 = xor i32 %14891, %14881
  %14893 = lshr i32 %14892, 4
  %14894 = trunc i32 %14893 to i8
  %14895 = and i8 %14894, 1
  %14896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14895, i8* %14896, align 1
  %14897 = icmp eq i32 %14881, 0
  %14898 = zext i1 %14897 to i8
  %14899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14898, i8* %14899, align 1
  %14900 = lshr i32 %14881, 31
  %14901 = trunc i32 %14900 to i8
  %14902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14901, i8* %14902, align 1
  %14903 = lshr i32 %14880, 31
  %14904 = xor i32 %14903, 1
  %14905 = xor i32 %14900, %14903
  %14906 = add i32 %14905, %14904
  %14907 = icmp eq i32 %14906, 2
  %14908 = zext i1 %14907 to i8
  %14909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14908, i8* %14909, align 1
  store %struct.Memory* %loadMem_41bd6c, %struct.Memory** %MEMORY
  %loadMem_41bd73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14911 = getelementptr inbounds %struct.GPR, %struct.GPR* %14910, i32 0, i32 33
  %14912 = getelementptr inbounds %struct.Reg, %struct.Reg* %14911, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %14912 to i64*
  %14913 = load i64, i64* %PC.i50
  %14914 = add i64 %14913, 101
  %14915 = load i64, i64* %PC.i50
  %14916 = add i64 %14915, 6
  %14917 = load i64, i64* %PC.i50
  %14918 = add i64 %14917, 6
  store i64 %14918, i64* %PC.i50
  %14919 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %14920 = load i8, i8* %14919, align 1
  %14921 = icmp ne i8 %14920, 0
  %14922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14923 = load i8, i8* %14922, align 1
  %14924 = icmp ne i8 %14923, 0
  %14925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14926 = load i8, i8* %14925, align 1
  %14927 = icmp ne i8 %14926, 0
  %14928 = xor i1 %14924, %14927
  %14929 = or i1 %14921, %14928
  %14930 = zext i1 %14929 to i8
  store i8 %14930, i8* %BRANCH_TAKEN, align 1
  %14931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14932 = select i1 %14929, i64 %14914, i64 %14916
  store i64 %14932, i64* %14931, align 8
  store %struct.Memory* %loadMem_41bd73, %struct.Memory** %MEMORY
  %loadBr_41bd73 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd73 = icmp eq i8 %loadBr_41bd73, 1
  br i1 %cmpBr_41bd73, label %block_.L_41bdd8, label %block_41bd79

block_41bd79:                                     ; preds = %block_.L_41bd6c
  %loadMem_41bd79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14934 = getelementptr inbounds %struct.GPR, %struct.GPR* %14933, i32 0, i32 33
  %14935 = getelementptr inbounds %struct.Reg, %struct.Reg* %14934, i32 0, i32 0
  %PC.i48 = bitcast %union.anon* %14935 to i64*
  %14936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14937 = getelementptr inbounds %struct.GPR, %struct.GPR* %14936, i32 0, i32 15
  %14938 = getelementptr inbounds %struct.Reg, %struct.Reg* %14937, i32 0, i32 0
  %RBP.i49 = bitcast %union.anon* %14938 to i64*
  %14939 = load i64, i64* %RBP.i49
  %14940 = sub i64 %14939, 92
  %14941 = load i64, i64* %PC.i48
  %14942 = add i64 %14941, 7
  store i64 %14942, i64* %PC.i48
  %14943 = inttoptr i64 %14940 to i32*
  %14944 = load i32, i32* %14943
  %14945 = sub i32 %14944, -40000
  %14946 = icmp ult i32 %14944, -40000
  %14947 = zext i1 %14946 to i8
  %14948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14947, i8* %14948, align 1
  %14949 = and i32 %14945, 255
  %14950 = call i32 @llvm.ctpop.i32(i32 %14949)
  %14951 = trunc i32 %14950 to i8
  %14952 = and i8 %14951, 1
  %14953 = xor i8 %14952, 1
  %14954 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14953, i8* %14954, align 1
  %14955 = xor i32 %14944, -40000
  %14956 = xor i32 %14955, %14945
  %14957 = lshr i32 %14956, 4
  %14958 = trunc i32 %14957 to i8
  %14959 = and i8 %14958, 1
  %14960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %14959, i8* %14960, align 1
  %14961 = icmp eq i32 %14945, 0
  %14962 = zext i1 %14961 to i8
  %14963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %14962, i8* %14963, align 1
  %14964 = lshr i32 %14945, 31
  %14965 = trunc i32 %14964 to i8
  %14966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %14965, i8* %14966, align 1
  %14967 = lshr i32 %14944, 31
  %14968 = xor i32 %14967, 1
  %14969 = xor i32 %14964, %14967
  %14970 = add i32 %14969, %14968
  %14971 = icmp eq i32 %14970, 2
  %14972 = zext i1 %14971 to i8
  %14973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %14972, i8* %14973, align 1
  store %struct.Memory* %loadMem_41bd79, %struct.Memory** %MEMORY
  %loadMem_41bd80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14975 = getelementptr inbounds %struct.GPR, %struct.GPR* %14974, i32 0, i32 33
  %14976 = getelementptr inbounds %struct.Reg, %struct.Reg* %14975, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %14976 to i64*
  %14977 = load i64, i64* %PC.i47
  %14978 = add i64 %14977, 88
  %14979 = load i64, i64* %PC.i47
  %14980 = add i64 %14979, 6
  %14981 = load i64, i64* %PC.i47
  %14982 = add i64 %14981, 6
  store i64 %14982, i64* %PC.i47
  %14983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %14984 = load i8, i8* %14983, align 1
  %14985 = icmp ne i8 %14984, 0
  %14986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %14987 = load i8, i8* %14986, align 1
  %14988 = icmp ne i8 %14987, 0
  %14989 = xor i1 %14985, %14988
  %14990 = xor i1 %14989, true
  %14991 = zext i1 %14990 to i8
  store i8 %14991, i8* %BRANCH_TAKEN, align 1
  %14992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %14993 = select i1 %14989, i64 %14980, i64 %14978
  store i64 %14993, i64* %14992, align 8
  store %struct.Memory* %loadMem_41bd80, %struct.Memory** %MEMORY
  %loadBr_41bd80 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd80 = icmp eq i8 %loadBr_41bd80, 1
  br i1 %cmpBr_41bd80, label %block_.L_41bdd8, label %block_41bd86

block_41bd86:                                     ; preds = %block_41bd79
  %loadMem_41bd86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %14994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14995 = getelementptr inbounds %struct.GPR, %struct.GPR* %14994, i32 0, i32 33
  %14996 = getelementptr inbounds %struct.Reg, %struct.Reg* %14995, i32 0, i32 0
  %PC.i46 = bitcast %union.anon* %14996 to i64*
  %14997 = load i64, i64* %PC.i46
  %14998 = add i64 %14997, 8
  store i64 %14998, i64* %PC.i46
  %14999 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %15000 = sub i32 %14999, 1
  %15001 = icmp ult i32 %14999, 1
  %15002 = zext i1 %15001 to i8
  %15003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15002, i8* %15003, align 1
  %15004 = and i32 %15000, 255
  %15005 = call i32 @llvm.ctpop.i32(i32 %15004)
  %15006 = trunc i32 %15005 to i8
  %15007 = and i8 %15006, 1
  %15008 = xor i8 %15007, 1
  %15009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15008, i8* %15009, align 1
  %15010 = xor i32 %14999, 1
  %15011 = xor i32 %15010, %15000
  %15012 = lshr i32 %15011, 4
  %15013 = trunc i32 %15012 to i8
  %15014 = and i8 %15013, 1
  %15015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15014, i8* %15015, align 1
  %15016 = icmp eq i32 %15000, 0
  %15017 = zext i1 %15016 to i8
  %15018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15017, i8* %15018, align 1
  %15019 = lshr i32 %15000, 31
  %15020 = trunc i32 %15019 to i8
  %15021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15020, i8* %15021, align 1
  %15022 = lshr i32 %14999, 31
  %15023 = xor i32 %15019, %15022
  %15024 = add i32 %15023, %15022
  %15025 = icmp eq i32 %15024, 2
  %15026 = zext i1 %15025 to i8
  %15027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15026, i8* %15027, align 1
  store %struct.Memory* %loadMem_41bd86, %struct.Memory** %MEMORY
  %loadMem_41bd8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15029 = getelementptr inbounds %struct.GPR, %struct.GPR* %15028, i32 0, i32 33
  %15030 = getelementptr inbounds %struct.Reg, %struct.Reg* %15029, i32 0, i32 0
  %PC.i45 = bitcast %union.anon* %15030 to i64*
  %15031 = load i64, i64* %PC.i45
  %15032 = add i64 %15031, 74
  %15033 = load i64, i64* %PC.i45
  %15034 = add i64 %15033, 6
  %15035 = load i64, i64* %PC.i45
  %15036 = add i64 %15035, 6
  store i64 %15036, i64* %PC.i45
  %15037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15038 = load i8, i8* %15037, align 1
  %15039 = icmp eq i8 %15038, 0
  %15040 = zext i1 %15039 to i8
  store i8 %15040, i8* %BRANCH_TAKEN, align 1
  %15041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15042 = select i1 %15039, i64 %15032, i64 %15034
  store i64 %15042, i64* %15041, align 8
  store %struct.Memory* %loadMem_41bd8e, %struct.Memory** %MEMORY
  %loadBr_41bd8e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd8e = icmp eq i8 %loadBr_41bd8e, 1
  br i1 %cmpBr_41bd8e, label %block_.L_41bdd8, label %block_41bd94

block_41bd94:                                     ; preds = %block_41bd86
  %loadMem_41bd94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15044 = getelementptr inbounds %struct.GPR, %struct.GPR* %15043, i32 0, i32 33
  %15045 = getelementptr inbounds %struct.Reg, %struct.Reg* %15044, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %15045 to i64*
  %15046 = load i64, i64* %PC.i44
  %15047 = add i64 %15046, 8
  store i64 %15047, i64* %PC.i44
  %15048 = load i32, i32* bitcast (%G_0x86bd78_type* @G_0x86bd78 to i32*)
  %15049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15049, align 1
  %15050 = and i32 %15048, 255
  %15051 = call i32 @llvm.ctpop.i32(i32 %15050)
  %15052 = trunc i32 %15051 to i8
  %15053 = and i8 %15052, 1
  %15054 = xor i8 %15053, 1
  %15055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15054, i8* %15055, align 1
  %15056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %15056, align 1
  %15057 = icmp eq i32 %15048, 0
  %15058 = zext i1 %15057 to i8
  %15059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15058, i8* %15059, align 1
  %15060 = lshr i32 %15048, 31
  %15061 = trunc i32 %15060 to i8
  %15062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15061, i8* %15062, align 1
  %15063 = lshr i32 %15048, 31
  %15064 = xor i32 %15060, %15063
  %15065 = add i32 %15064, %15063
  %15066 = icmp eq i32 %15065, 2
  %15067 = zext i1 %15066 to i8
  %15068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15067, i8* %15068, align 1
  store %struct.Memory* %loadMem_41bd94, %struct.Memory** %MEMORY
  %loadMem_41bd9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %15069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15070 = getelementptr inbounds %struct.GPR, %struct.GPR* %15069, i32 0, i32 33
  %15071 = getelementptr inbounds %struct.Reg, %struct.Reg* %15070, i32 0, i32 0
  %PC.i43 = bitcast %union.anon* %15071 to i64*
  %15072 = load i64, i64* %PC.i43
  %15073 = add i64 %15072, 60
  %15074 = load i64, i64* %PC.i43
  %15075 = add i64 %15074, 6
  %15076 = load i64, i64* %PC.i43
  %15077 = add i64 %15076, 6
  store i64 %15077, i64* %PC.i43
  %15078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15079 = load i8, i8* %15078, align 1
  %15080 = icmp eq i8 %15079, 0
  %15081 = zext i1 %15080 to i8
  store i8 %15081, i8* %BRANCH_TAKEN, align 1
  %15082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15083 = select i1 %15080, i64 %15073, i64 %15075
  store i64 %15083, i64* %15082, align 8
  store %struct.Memory* %loadMem_41bd9c, %struct.Memory** %MEMORY
  %loadBr_41bd9c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bd9c = icmp eq i8 %loadBr_41bd9c, 1
  br i1 %cmpBr_41bd9c, label %block_.L_41bdd8, label %block_41bda2

block_41bda2:                                     ; preds = %block_41bd94
  %loadMem_41bda2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15085 = getelementptr inbounds %struct.GPR, %struct.GPR* %15084, i32 0, i32 33
  %15086 = getelementptr inbounds %struct.Reg, %struct.Reg* %15085, i32 0, i32 0
  %PC.i41 = bitcast %union.anon* %15086 to i64*
  %15087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15088 = getelementptr inbounds %struct.GPR, %struct.GPR* %15087, i32 0, i32 1
  %15089 = getelementptr inbounds %struct.Reg, %struct.Reg* %15088, i32 0, i32 0
  %RAX.i42 = bitcast %union.anon* %15089 to i64*
  %15090 = load i64, i64* %PC.i41
  %15091 = add i64 %15090, 7
  store i64 %15091, i64* %PC.i41
  %15092 = load i32, i32* bitcast (%G_0x62ea24_type* @G_0x62ea24 to i32*)
  %15093 = zext i32 %15092 to i64
  store i64 %15093, i64* %RAX.i42, align 8
  store %struct.Memory* %loadMem_41bda2, %struct.Memory** %MEMORY
  %loadMem_41bda9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15095 = getelementptr inbounds %struct.GPR, %struct.GPR* %15094, i32 0, i32 33
  %15096 = getelementptr inbounds %struct.Reg, %struct.Reg* %15095, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %15096 to i64*
  %15097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15098 = getelementptr inbounds %struct.GPR, %struct.GPR* %15097, i32 0, i32 1
  %15099 = getelementptr inbounds %struct.Reg, %struct.Reg* %15098, i32 0, i32 0
  %EAX.i40 = bitcast %union.anon* %15099 to i32*
  %15100 = load i32, i32* %EAX.i40
  %15101 = zext i32 %15100 to i64
  %15102 = load i64, i64* %PC.i39
  %15103 = add i64 %15102, 7
  store i64 %15103, i64* %PC.i39
  %15104 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*)
  %15105 = sub i32 %15100, %15104
  %15106 = icmp ult i32 %15100, %15104
  %15107 = zext i1 %15106 to i8
  %15108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15107, i8* %15108, align 1
  %15109 = and i32 %15105, 255
  %15110 = call i32 @llvm.ctpop.i32(i32 %15109)
  %15111 = trunc i32 %15110 to i8
  %15112 = and i8 %15111, 1
  %15113 = xor i8 %15112, 1
  %15114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15113, i8* %15114, align 1
  %15115 = xor i32 %15104, %15100
  %15116 = xor i32 %15115, %15105
  %15117 = lshr i32 %15116, 4
  %15118 = trunc i32 %15117 to i8
  %15119 = and i8 %15118, 1
  %15120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15119, i8* %15120, align 1
  %15121 = icmp eq i32 %15105, 0
  %15122 = zext i1 %15121 to i8
  %15123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15122, i8* %15123, align 1
  %15124 = lshr i32 %15105, 31
  %15125 = trunc i32 %15124 to i8
  %15126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15125, i8* %15126, align 1
  %15127 = lshr i32 %15100, 31
  %15128 = lshr i32 %15104, 31
  %15129 = xor i32 %15128, %15127
  %15130 = xor i32 %15124, %15127
  %15131 = add i32 %15130, %15129
  %15132 = icmp eq i32 %15131, 2
  %15133 = zext i1 %15132 to i8
  %15134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15133, i8* %15134, align 1
  store %struct.Memory* %loadMem_41bda9, %struct.Memory** %MEMORY
  %loadMem_41bdb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15136 = getelementptr inbounds %struct.GPR, %struct.GPR* %15135, i32 0, i32 33
  %15137 = getelementptr inbounds %struct.Reg, %struct.Reg* %15136, i32 0, i32 0
  %PC.i38 = bitcast %union.anon* %15137 to i64*
  %15138 = load i64, i64* %PC.i38
  %15139 = add i64 %15138, 40
  %15140 = load i64, i64* %PC.i38
  %15141 = add i64 %15140, 6
  %15142 = load i64, i64* %PC.i38
  %15143 = add i64 %15142, 6
  store i64 %15143, i64* %PC.i38
  %15144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15145 = load i8, i8* %15144, align 1
  %15146 = icmp eq i8 %15145, 0
  %15147 = zext i1 %15146 to i8
  store i8 %15147, i8* %BRANCH_TAKEN, align 1
  %15148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15149 = select i1 %15146, i64 %15139, i64 %15141
  store i64 %15149, i64* %15148, align 8
  store %struct.Memory* %loadMem_41bdb0, %struct.Memory** %MEMORY
  %loadBr_41bdb0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41bdb0 = icmp eq i8 %loadBr_41bdb0, 1
  br i1 %cmpBr_41bdb0, label %block_.L_41bdd8, label %block_41bdb6

block_41bdb6:                                     ; preds = %block_41bda2
  %loadMem_41bdb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15151 = getelementptr inbounds %struct.GPR, %struct.GPR* %15150, i32 0, i32 33
  %15152 = getelementptr inbounds %struct.Reg, %struct.Reg* %15151, i32 0, i32 0
  %PC.i37 = bitcast %union.anon* %15152 to i64*
  %15153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15154 = getelementptr inbounds %struct.GPR, %struct.GPR* %15153, i32 0, i32 11
  %15155 = getelementptr inbounds %struct.Reg, %struct.Reg* %15154, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %15155 to i64*
  %15156 = load i64, i64* %PC.i37
  %15157 = add i64 %15156, 10
  store i64 %15157, i64* %PC.i37
  store i64 ptrtoint (%G__0x42921d_type* @G__0x42921d to i64), i64* %RDI.i, align 8
  store %struct.Memory* %loadMem_41bdb6, %struct.Memory** %MEMORY
  %loadMem_41bdc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15159 = getelementptr inbounds %struct.GPR, %struct.GPR* %15158, i32 0, i32 33
  %15160 = getelementptr inbounds %struct.Reg, %struct.Reg* %15159, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %15160 to i64*
  %15161 = load i64, i64* %PC.i36
  %15162 = add i64 %15161, 11
  store i64 %15162, i64* %PC.i36
  store i32 1, i32* bitcast (%G_0x86bd90_type* @G_0x86bd90 to i32*)
  store %struct.Memory* %loadMem_41bdc0, %struct.Memory** %MEMORY
  %loadMem_41bdcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %15163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15164 = getelementptr inbounds %struct.GPR, %struct.GPR* %15163, i32 0, i32 33
  %15165 = getelementptr inbounds %struct.Reg, %struct.Reg* %15164, i32 0, i32 0
  %PC.i35 = bitcast %union.anon* %15165 to i64*
  %15166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15167 = getelementptr inbounds %struct.GPR, %struct.GPR* %15166, i32 0, i32 1
  %15168 = getelementptr inbounds %struct.Reg, %struct.Reg* %15167, i32 0, i32 0
  %15169 = bitcast %union.anon* %15168 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %15169, i32 0, i32 0
  %15170 = load i64, i64* %PC.i35
  %15171 = add i64 %15170, 2
  store i64 %15171, i64* %PC.i35
  store i8 0, i8* %AL.i, align 1
  store %struct.Memory* %loadMem_41bdcb, %struct.Memory** %MEMORY
  %loadMem1_41bdcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %15172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15173 = getelementptr inbounds %struct.GPR, %struct.GPR* %15172, i32 0, i32 33
  %15174 = getelementptr inbounds %struct.Reg, %struct.Reg* %15173, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %15174 to i64*
  %15175 = load i64, i64* %PC.i34
  %15176 = add i64 %15175, -110877
  %15177 = load i64, i64* %PC.i34
  %15178 = add i64 %15177, 5
  %15179 = load i64, i64* %PC.i34
  %15180 = add i64 %15179, 5
  store i64 %15180, i64* %PC.i34
  %15181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15182 = load i64, i64* %15181, align 8
  %15183 = add i64 %15182, -8
  %15184 = inttoptr i64 %15183 to i64*
  store i64 %15178, i64* %15184
  store i64 %15183, i64* %15181, align 8
  %15185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15176, i64* %15185, align 8
  store %struct.Memory* %loadMem1_41bdcd, %struct.Memory** %MEMORY
  %loadMem2_41bdcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_41bdcd = load i64, i64* %3
  %15186 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %loadMem2_41bdcd)
  store %struct.Memory* %15186, %struct.Memory** %MEMORY
  %loadMem_41bdd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15188 = getelementptr inbounds %struct.GPR, %struct.GPR* %15187, i32 0, i32 33
  %15189 = getelementptr inbounds %struct.Reg, %struct.Reg* %15188, i32 0, i32 0
  %PC.i29 = bitcast %union.anon* %15189 to i64*
  %15190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15191 = getelementptr inbounds %struct.GPR, %struct.GPR* %15190, i32 0, i32 1
  %15192 = getelementptr inbounds %struct.Reg, %struct.Reg* %15191, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %15192 to i32*
  %15193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15194 = getelementptr inbounds %struct.GPR, %struct.GPR* %15193, i32 0, i32 15
  %15195 = getelementptr inbounds %struct.Reg, %struct.Reg* %15194, i32 0, i32 0
  %RBP.i30 = bitcast %union.anon* %15195 to i64*
  %15196 = load i64, i64* %RBP.i30
  %15197 = sub i64 %15196, 12616
  %15198 = load i32, i32* %EAX.i
  %15199 = zext i32 %15198 to i64
  %15200 = load i64, i64* %PC.i29
  %15201 = add i64 %15200, 6
  store i64 %15201, i64* %PC.i29
  %15202 = inttoptr i64 %15197 to i32*
  store i32 %15198, i32* %15202
  store %struct.Memory* %loadMem_41bdd2, %struct.Memory** %MEMORY
  br label %block_.L_41bdd8

block_.L_41bdd8:                                  ; preds = %block_41bdb6, %block_41bda2, %block_41bd94, %block_41bd86, %block_41bd79, %block_.L_41bd6c
  %loadMem_41bdd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15204 = getelementptr inbounds %struct.GPR, %struct.GPR* %15203, i32 0, i32 33
  %15205 = getelementptr inbounds %struct.Reg, %struct.Reg* %15204, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %15205 to i64*
  %15206 = load i64, i64* %PC.i28
  %15207 = add i64 %15206, 5
  %15208 = load i64, i64* %PC.i28
  %15209 = add i64 %15208, 5
  store i64 %15209, i64* %PC.i28
  %15210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15207, i64* %15210, align 8
  store %struct.Memory* %loadMem_41bdd8, %struct.Memory** %MEMORY
  br label %block_.L_41bddd

block_.L_41bddd:                                  ; preds = %block_.L_41bdd8, %block_.L_41bd67
  %loadMem_41bddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %15211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15212 = getelementptr inbounds %struct.GPR, %struct.GPR* %15211, i32 0, i32 33
  %15213 = getelementptr inbounds %struct.Reg, %struct.Reg* %15212, i32 0, i32 0
  %PC.i27 = bitcast %union.anon* %15213 to i64*
  %15214 = load i64, i64* %PC.i27
  %15215 = add i64 %15214, 5
  %15216 = load i64, i64* %PC.i27
  %15217 = add i64 %15216, 5
  store i64 %15217, i64* %PC.i27
  %15218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %15215, i64* %15218, align 8
  store %struct.Memory* %loadMem_41bddd, %struct.Memory** %MEMORY
  br label %block_.L_41bde2

block_.L_41bde2:                                  ; preds = %block_.L_41bddd, %block_.L_41bc6a
  %loadMem_41bde2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15220 = getelementptr inbounds %struct.GPR, %struct.GPR* %15219, i32 0, i32 33
  %15221 = getelementptr inbounds %struct.Reg, %struct.Reg* %15220, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %15221 to i64*
  %15222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15223 = getelementptr inbounds %struct.GPR, %struct.GPR* %15222, i32 0, i32 1
  %15224 = getelementptr inbounds %struct.Reg, %struct.Reg* %15223, i32 0, i32 0
  %RAX.i25 = bitcast %union.anon* %15224 to i64*
  %15225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15226 = getelementptr inbounds %struct.GPR, %struct.GPR* %15225, i32 0, i32 15
  %15227 = getelementptr inbounds %struct.Reg, %struct.Reg* %15226, i32 0, i32 0
  %RBP.i26 = bitcast %union.anon* %15227 to i64*
  %15228 = load i64, i64* %RBP.i26
  %15229 = sub i64 %15228, 24
  %15230 = load i64, i64* %PC.i24
  %15231 = add i64 %15230, 4
  store i64 %15231, i64* %PC.i24
  %15232 = inttoptr i64 %15229 to i64*
  %15233 = load i64, i64* %15232
  store i64 %15233, i64* %RAX.i25, align 8
  store %struct.Memory* %loadMem_41bde2, %struct.Memory** %MEMORY
  %loadMem_41bde6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15235 = getelementptr inbounds %struct.GPR, %struct.GPR* %15234, i32 0, i32 33
  %15236 = getelementptr inbounds %struct.Reg, %struct.Reg* %15235, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %15236 to i64*
  %15237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15238 = getelementptr inbounds %struct.GPR, %struct.GPR* %15237, i32 0, i32 5
  %15239 = getelementptr inbounds %struct.Reg, %struct.Reg* %15238, i32 0, i32 0
  %RCX.i22 = bitcast %union.anon* %15239 to i64*
  %15240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15241 = getelementptr inbounds %struct.GPR, %struct.GPR* %15240, i32 0, i32 15
  %15242 = getelementptr inbounds %struct.Reg, %struct.Reg* %15241, i32 0, i32 0
  %RBP.i23 = bitcast %union.anon* %15242 to i64*
  %15243 = load i64, i64* %RBP.i23
  %15244 = sub i64 %15243, 12544
  %15245 = load i64, i64* %PC.i21
  %15246 = add i64 %15245, 7
  store i64 %15246, i64* %PC.i21
  %15247 = inttoptr i64 %15244 to i64*
  %15248 = load i64, i64* %15247
  store i64 %15248, i64* %RCX.i22, align 8
  store %struct.Memory* %loadMem_41bde6, %struct.Memory** %MEMORY
  %loadMem_41bded = load %struct.Memory*, %struct.Memory** %MEMORY
  %15249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15250 = getelementptr inbounds %struct.GPR, %struct.GPR* %15249, i32 0, i32 33
  %15251 = getelementptr inbounds %struct.Reg, %struct.Reg* %15250, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %15251 to i64*
  %15252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15253 = getelementptr inbounds %struct.GPR, %struct.GPR* %15252, i32 0, i32 1
  %15254 = getelementptr inbounds %struct.Reg, %struct.Reg* %15253, i32 0, i32 0
  %RAX.i19 = bitcast %union.anon* %15254 to i64*
  %15255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15256 = getelementptr inbounds %struct.GPR, %struct.GPR* %15255, i32 0, i32 5
  %15257 = getelementptr inbounds %struct.Reg, %struct.Reg* %15256, i32 0, i32 0
  %RCX.i20 = bitcast %union.anon* %15257 to i64*
  %15258 = load i64, i64* %RCX.i20
  %15259 = load i64, i64* %RAX.i19
  %15260 = load i64, i64* %PC.i18
  %15261 = add i64 %15260, 3
  store i64 %15261, i64* %PC.i18
  %15262 = inttoptr i64 %15258 to i64*
  store i64 %15259, i64* %15262
  store %struct.Memory* %loadMem_41bded, %struct.Memory** %MEMORY
  %loadMem_41bdf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15264 = getelementptr inbounds %struct.GPR, %struct.GPR* %15263, i32 0, i32 33
  %15265 = getelementptr inbounds %struct.Reg, %struct.Reg* %15264, i32 0, i32 0
  %PC.i15 = bitcast %union.anon* %15265 to i64*
  %15266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15267 = getelementptr inbounds %struct.GPR, %struct.GPR* %15266, i32 0, i32 1
  %15268 = getelementptr inbounds %struct.Reg, %struct.Reg* %15267, i32 0, i32 0
  %RAX.i16 = bitcast %union.anon* %15268 to i64*
  %15269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15270 = getelementptr inbounds %struct.GPR, %struct.GPR* %15269, i32 0, i32 15
  %15271 = getelementptr inbounds %struct.Reg, %struct.Reg* %15270, i32 0, i32 0
  %RBP.i17 = bitcast %union.anon* %15271 to i64*
  %15272 = load i64, i64* %RBP.i17
  %15273 = sub i64 %15272, 16
  %15274 = load i64, i64* %PC.i15
  %15275 = add i64 %15274, 4
  store i64 %15275, i64* %PC.i15
  %15276 = inttoptr i64 %15273 to i64*
  %15277 = load i64, i64* %15276
  store i64 %15277, i64* %RAX.i16, align 8
  store %struct.Memory* %loadMem_41bdf0, %struct.Memory** %MEMORY
  %loadMem_41bdf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15279 = getelementptr inbounds %struct.GPR, %struct.GPR* %15278, i32 0, i32 33
  %15280 = getelementptr inbounds %struct.Reg, %struct.Reg* %15279, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %15280 to i64*
  %15281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15282 = getelementptr inbounds %struct.GPR, %struct.GPR* %15281, i32 0, i32 1
  %15283 = getelementptr inbounds %struct.Reg, %struct.Reg* %15282, i32 0, i32 0
  %RAX.i13 = bitcast %union.anon* %15283 to i64*
  %15284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15285 = getelementptr inbounds %struct.GPR, %struct.GPR* %15284, i32 0, i32 5
  %15286 = getelementptr inbounds %struct.Reg, %struct.Reg* %15285, i32 0, i32 0
  %RCX.i14 = bitcast %union.anon* %15286 to i64*
  %15287 = load i64, i64* %RCX.i14
  %15288 = add i64 %15287, 8
  %15289 = load i64, i64* %RAX.i13
  %15290 = load i64, i64* %PC.i12
  %15291 = add i64 %15290, 4
  store i64 %15291, i64* %PC.i12
  %15292 = inttoptr i64 %15288 to i64*
  store i64 %15289, i64* %15292
  store %struct.Memory* %loadMem_41bdf4, %struct.Memory** %MEMORY
  %loadMem_41bdf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15294 = getelementptr inbounds %struct.GPR, %struct.GPR* %15293, i32 0, i32 33
  %15295 = getelementptr inbounds %struct.Reg, %struct.Reg* %15294, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %15295 to i64*
  %15296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15297 = getelementptr inbounds %struct.GPR, %struct.GPR* %15296, i32 0, i32 1
  %15298 = getelementptr inbounds %struct.Reg, %struct.Reg* %15297, i32 0, i32 0
  %RAX.i10 = bitcast %union.anon* %15298 to i64*
  %15299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15300 = getelementptr inbounds %struct.GPR, %struct.GPR* %15299, i32 0, i32 15
  %15301 = getelementptr inbounds %struct.Reg, %struct.Reg* %15300, i32 0, i32 0
  %RBP.i11 = bitcast %union.anon* %15301 to i64*
  %15302 = load i64, i64* %RBP.i11
  %15303 = sub i64 %15302, 8
  %15304 = load i64, i64* %PC.i9
  %15305 = add i64 %15304, 4
  store i64 %15305, i64* %PC.i9
  %15306 = inttoptr i64 %15303 to i64*
  %15307 = load i64, i64* %15306
  store i64 %15307, i64* %RAX.i10, align 8
  store %struct.Memory* %loadMem_41bdf8, %struct.Memory** %MEMORY
  %loadMem_41bdfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %15308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15309 = getelementptr inbounds %struct.GPR, %struct.GPR* %15308, i32 0, i32 33
  %15310 = getelementptr inbounds %struct.Reg, %struct.Reg* %15309, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %15310 to i64*
  %15311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15312 = getelementptr inbounds %struct.GPR, %struct.GPR* %15311, i32 0, i32 1
  %15313 = getelementptr inbounds %struct.Reg, %struct.Reg* %15312, i32 0, i32 0
  %RAX.i8 = bitcast %union.anon* %15313 to i64*
  %15314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15315 = getelementptr inbounds %struct.GPR, %struct.GPR* %15314, i32 0, i32 5
  %15316 = getelementptr inbounds %struct.Reg, %struct.Reg* %15315, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %15316 to i64*
  %15317 = load i64, i64* %RCX.i
  %15318 = add i64 %15317, 16
  %15319 = load i64, i64* %RAX.i8
  %15320 = load i64, i64* %PC.i7
  %15321 = add i64 %15320, 4
  store i64 %15321, i64* %PC.i7
  %15322 = inttoptr i64 %15318 to i64*
  store i64 %15319, i64* %15322
  store %struct.Memory* %loadMem_41bdfc, %struct.Memory** %MEMORY
  br label %block_.L_41be00

block_.L_41be00:                                  ; preds = %block_.L_41bde2, %block_41b588, %block_41b50f, %block_41b01e, %block_41ad13, %block_.L_41aae0
  %loadMem_41be00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15324 = getelementptr inbounds %struct.GPR, %struct.GPR* %15323, i32 0, i32 33
  %15325 = getelementptr inbounds %struct.Reg, %struct.Reg* %15324, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %15325 to i64*
  %15326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15327 = getelementptr inbounds %struct.GPR, %struct.GPR* %15326, i32 0, i32 1
  %15328 = getelementptr inbounds %struct.Reg, %struct.Reg* %15327, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %15328 to i64*
  %15329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15330 = getelementptr inbounds %struct.GPR, %struct.GPR* %15329, i32 0, i32 15
  %15331 = getelementptr inbounds %struct.Reg, %struct.Reg* %15330, i32 0, i32 0
  %RBP.i6 = bitcast %union.anon* %15331 to i64*
  %15332 = load i64, i64* %RBP.i6
  %15333 = sub i64 %15332, 12536
  %15334 = load i64, i64* %PC.i5
  %15335 = add i64 %15334, 7
  store i64 %15335, i64* %PC.i5
  %15336 = inttoptr i64 %15333 to i64*
  %15337 = load i64, i64* %15336
  store i64 %15337, i64* %RAX.i, align 8
  store %struct.Memory* %loadMem_41be00, %struct.Memory** %MEMORY
  %loadMem_41be07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %15338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15339 = getelementptr inbounds %struct.GPR, %struct.GPR* %15338, i32 0, i32 33
  %15340 = getelementptr inbounds %struct.Reg, %struct.Reg* %15339, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %15340 to i64*
  %15341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15342 = getelementptr inbounds %struct.GPR, %struct.GPR* %15341, i32 0, i32 13
  %15343 = getelementptr inbounds %struct.Reg, %struct.Reg* %15342, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %15343 to i64*
  %15344 = load i64, i64* %RSP.i
  %15345 = load i64, i64* %PC.i4
  %15346 = add i64 %15345, 7
  store i64 %15346, i64* %PC.i4
  %15347 = add i64 12640, %15344
  store i64 %15347, i64* %RSP.i, align 8
  %15348 = icmp ult i64 %15347, %15344
  %15349 = icmp ult i64 %15347, 12640
  %15350 = or i1 %15348, %15349
  %15351 = zext i1 %15350 to i8
  %15352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15351, i8* %15352, align 1
  %15353 = trunc i64 %15347 to i32
  %15354 = and i32 %15353, 255
  %15355 = call i32 @llvm.ctpop.i32(i32 %15354)
  %15356 = trunc i32 %15355 to i8
  %15357 = and i8 %15356, 1
  %15358 = xor i8 %15357, 1
  %15359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15358, i8* %15359, align 1
  %15360 = xor i64 12640, %15344
  %15361 = xor i64 %15360, %15347
  %15362 = lshr i64 %15361, 4
  %15363 = trunc i64 %15362 to i8
  %15364 = and i8 %15363, 1
  %15365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %15364, i8* %15365, align 1
  %15366 = icmp eq i64 %15347, 0
  %15367 = zext i1 %15366 to i8
  %15368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %15367, i8* %15368, align 1
  %15369 = lshr i64 %15347, 63
  %15370 = trunc i64 %15369 to i8
  %15371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %15370, i8* %15371, align 1
  %15372 = lshr i64 %15344, 63
  %15373 = xor i64 %15369, %15372
  %15374 = add i64 %15373, %15369
  %15375 = icmp eq i64 %15374, 2
  %15376 = zext i1 %15375 to i8
  %15377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %15376, i8* %15377, align 1
  store %struct.Memory* %loadMem_41be07, %struct.Memory** %MEMORY
  %loadMem_41be0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %15378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15379 = getelementptr inbounds %struct.GPR, %struct.GPR* %15378, i32 0, i32 33
  %15380 = getelementptr inbounds %struct.Reg, %struct.Reg* %15379, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %15380 to i64*
  %15381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15382 = getelementptr inbounds %struct.GPR, %struct.GPR* %15381, i32 0, i32 15
  %15383 = getelementptr inbounds %struct.Reg, %struct.Reg* %15382, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %15383 to i64*
  %15384 = load i64, i64* %PC.i2
  %15385 = add i64 %15384, 1
  store i64 %15385, i64* %PC.i2
  %15386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15387 = load i64, i64* %15386, align 8
  %15388 = add i64 %15387, 8
  %15389 = inttoptr i64 %15387 to i64*
  %15390 = load i64, i64* %15389
  store i64 %15390, i64* %RBP.i3, align 8
  store i64 %15388, i64* %15386, align 8
  store %struct.Memory* %loadMem_41be0e, %struct.Memory** %MEMORY
  %loadMem_41be0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %15391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %15392 = getelementptr inbounds %struct.GPR, %struct.GPR* %15391, i32 0, i32 33
  %15393 = getelementptr inbounds %struct.Reg, %struct.Reg* %15392, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %15393 to i64*
  %15394 = load i64, i64* %PC.i1
  %15395 = add i64 %15394, 1
  store i64 %15395, i64* %PC.i1
  %15396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %15398 = load i64, i64* %15397, align 8
  %15399 = inttoptr i64 %15398 to i64*
  %15400 = load i64, i64* %15399
  store i64 %15400, i64* %15396, align 8
  %15401 = add i64 %15398, 8
  store i64 %15401, i64* %15397, align 8
  store %struct.Memory* %loadMem_41be0f, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_41be0f
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x3160___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 12640
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 12640
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 12640, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x3078__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12408
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x86bd84(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x86bd84_type* @G_0x86bd84 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x3080__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12416
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x30f8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12536
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x3100__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12544
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x864500(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x864500_type* @G_0x864500 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x63ae44(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x63ae44_type* @G_0x63ae44 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x886bc0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x886bc0_type* @G_0x886bc0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x880b10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x880b10_type* @G_0x880b10 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e4f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62e4f0_type* @G_0x62e4f0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62ea14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62ea14_type* @G_0x62ea14 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8667a4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8667a4_type* @G_0x8667a4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x864508(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x864508_type* @G_0x864508 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x86bd6c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x86bd6c_type* @G_0x86bd6c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8870a4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8870a4_type* @G_0x8870a4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x886a68(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x886a68_type* @G_0x886a68 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8a0a70(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8a0a70_type* @G_0x8a0a70 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8662e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8662e0_type* @G_0x8662e0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e9fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62e9fc_type* @G_0x62e9fc to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x866538(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x866538_type* @G_0x866538 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x881df0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x881df0_type* @G_0x881df0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e9f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62e9f8_type* @G_0x62e9f8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x866780(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x866780_type* @G_0x866780 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e9f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62e9f4_type* @G_0x62e9f4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x864504(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x864504_type* @G_0x864504 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8870a0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8870a0_type* @G_0x8870a0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8a0a74(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8a0a74_type* @G_0x8a0a74 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 112
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62ea1c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62ea1c_type* @G_0x62ea1c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e4f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62e4f8_type* @G_0x62e4f8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xc8__0x62ea18(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 200, i32* bitcast (%G_0x62ea18_type* @G_0x62ea18 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0__0x86678c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  store i8 0, i8* getelementptr inbounds (%G_0x86678c_type, %G_0x86678c_type* @G_0x86678c, i32 0, i32 0, i32 0)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xffffffff__0x8825f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 -1, i32* bitcast (%G_0x8825f8_type* @G_0x8825f8 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.interrupt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41ab0f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x62e514(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x62e514_type* @G_0x62e514 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41aae0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x886bbc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x886bbc_type* @G_0x886bbc to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db08___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x3100__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db10___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db18___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x10__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41be00(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.rtime(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x8662e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x8662e8_type* @G_0x8662e8 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e9e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__0x85f154(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %9 = sub i32 %8, 4
  %10 = icmp ult i32 %8, 4
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 4
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41ab45(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x85f164(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x85f164_type* @G_0x85f164 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ab50(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x85f164(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x85f164_type* @G_0x85f164 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x3070__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.gen(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x85f150___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x85f150_type* @G_0x85f150 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3084__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12420
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.in_check(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x307c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12412
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x3074__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12404
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3074__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x85f150___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x85f150_type* @G_0x85f150 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41ac07(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3074__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12404
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.make(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x307c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12412
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.check_legal(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41abe1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62e9e0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x62e9e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3078__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12408
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.unmake(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3074__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12404
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ab7e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41ace9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x62e9e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x3084__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12420
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41ace4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41acbe(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ac5b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ace9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x85f154(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %9 = sub i32 %8, 1
  %10 = icmp ult i32 %8, 1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41ad65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41ad65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x62e9e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  %9 = sub i32 %8, 1
  %10 = icmp ult i32 %8, 1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41ad60(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x3070__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12400
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imull__0x64__0x8a0a78___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a0a78_type* @G_0x8a0a78 to i32*)
  %12 = sext i32 %11 to i64
  %13 = mul i64 %12, 100
  %14 = trunc i64 %13 to i32
  %15 = and i64 %13, 4294967295
  store i64 %15, i64* %RCX, align 8
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  %18 = icmp ne i64 %17, %13
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %19, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x86bd88___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x86bd88_type* @G_0x86bd88 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RCX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x86bd88(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x86bd88_type* @G_0x86bd88 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x3078__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12408
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i64*
  %16 = load i64, i64* %15
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x3100__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx____rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rax____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__0x8__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 8
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x10__rax____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i64*
  %14 = load i64, i64* %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x10__rsi_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = add i64 %12, 16
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ad65(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.check_phase(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x46bd08__rip____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0x46bd08__rip__type* @G_0x46bd08__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 6
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_testl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %EAX
  %12 = zext i32 %11 to i64
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = and i64 %12, %10
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %17, align 1
  %18 = and i32 %16, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %16, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %16, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %31, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3104__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12548
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41adb7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ad83(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3104__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12548
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3108__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12552
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41add3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ad9d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 2
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 2
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 2, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x310c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12556
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41adef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ae06(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x429086___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x429086_type* @G__0x429086 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  store i8 0, i8* %AL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.printf_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3110__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12560
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x429096___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x429096_type* @G__0x429096 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3114__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12564
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4290a9___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4290a9_type* @G__0x4290a9 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3118__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12568
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41ae85(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x886b80(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41ae72(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x886a60(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x886a60_type* @G_0x886a60 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41ae61(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.allocate_time(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x28__MINUS0x6c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 108
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 40
  %16 = icmp ult i32 %14, 40
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 40
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_41ae52(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x28__0x633b44(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 40, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ae5c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x6c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 108
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x633b44(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ae6d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ae80(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x886b80___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x886b80_type* @G_0x886b80 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ae90(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xf423f__0x633b44(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 999999, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x3080__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12416
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1
  %16 = and i32 %14, 255
  %17 = call i32 @llvm.ctpop.i32(i32 %16)
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  %23 = icmp eq i32 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %14, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %14, 31
  %30 = xor i32 %26, %29
  %31 = add i32 %30, %29
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41aedd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd50b__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xd50b__rip__type* @G_0xd50b__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movss_0xd4f7__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xd4f7__rip__type* @G_0xd4f7__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to float*
  %14 = load float, float* %13
  %15 = bitcast i8* %8 to float*
  store float %14, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 4
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  %18 = getelementptr inbounds i8, i8* %8, i64 8
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 12
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl_0x633b44___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = bitcast i8* %8 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 1
  %16 = load i32, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  %17 = sitofp i32 %16 to float
  %18 = bitcast i8* %8 to float*
  store float %17, float* %18, align 1
  %19 = extractelement <2 x i32> %12, i32 1
  %20 = getelementptr inbounds i8, i8* %8, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 1
  %22 = extractelement <2 x i32> %15, i32 0
  %23 = bitcast i8* %13 to i32*
  store i32 %22, i32* %23, align 1
  %24 = extractelement <2 x i32> %15, i32 1
  %25 = getelementptr inbounds i8, i8* %8, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulss__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to <2 x i32>*
  %19 = load <2 x i32>, <2 x i32>* %18, align 1
  %20 = bitcast i8* %12 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 1
  %22 = extractelement <2 x float> %16, i32 0
  %23 = extractelement <2 x float> %21, i32 0
  %24 = fmul float %22, %23
  %25 = bitcast i8* %10 to float*
  store float %24, float* %25, align 1
  %26 = bitcast <2 x float> %16 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 1
  %28 = getelementptr inbounds i8, i8* %10, i64 4
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 1
  %30 = extractelement <2 x i32> %19, i32 0
  %31 = getelementptr inbounds i8, i8* %10, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  %33 = extractelement <2 x i32> %19, i32 1
  %34 = getelementptr inbounds i8, i8* %10, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = fpext float %16 to double
  %18 = bitcast i8* %10 to double*
  store double %17, double* %18, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2ssl_MINUS0x3080__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = bitcast i8* %11 to <2 x i32>*
  %17 = load <2 x i32>, <2 x i32>* %16, align 1
  %18 = getelementptr inbounds i8, i8* %11, i64 8
  %19 = bitcast i8* %18 to <2 x i32>*
  %20 = load <2 x i32>, <2 x i32>* %19, align 1
  %21 = inttoptr i64 %13 to i32*
  %22 = load i32, i32* %21
  %23 = sitofp i32 %22 to float
  %24 = bitcast i8* %11 to float*
  store float %23, float* %24, align 1
  %25 = extractelement <2 x i32> %17, i32 1
  %26 = getelementptr inbounds i8, i8* %11, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  %28 = extractelement <2 x i32> %20, i32 0
  %29 = bitcast i8* %18 to i32*
  store i32 %28, i32* %29, align 1
  %30 = extractelement <2 x i32> %20, i32 1
  %31 = getelementptr inbounds i8, i8* %11, i64 12
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtss2sd__xmm2___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 1
  %16 = extractelement <2 x float> %15, i32 0
  %17 = fpext float %16 to double
  %18 = bitcast i8* %10 to double*
  store double %17, double* %18, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fadd double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm2___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4290b9___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4290b9_type* @G__0x4290b9 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x633b44___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x311c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12572
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41af2d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.clear_tt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.reset_ecache(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x886bf0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x886bf0_type* @G__0x886bf0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__esi___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RSI, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x4b0___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1200, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.memset_plt(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41afba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x85f154(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %9 = sub i32 %8, 3
  %10 = icmp ult i32 %8, 3
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 3
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41af64(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x63ae48(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x63ae48_type* @G_0x63ae48 to i32*)
  %9 = sub i32 %8, 3
  %10 = icmp ult i32 %8, 3
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 3
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_41af80(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41afba(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd430__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xd430__rip__type* @G_0xd430__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd420__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xd420__rip__type* @G_0xd420__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm1___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvttsd2si__xmm2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %11 to double*
  %15 = load double, double* %14, align 1
  %16 = call double @llvm.trunc.f64(double %15)
  %17 = call double @llvm.fabs.f64(double %16)
  %18 = fcmp ogt double %17, 0x41DFFFFFFFC00000
  %19 = fptosi double %16 to i32
  %20 = zext i32 %19 to i64
  %21 = select i1 %18, i64 2147483648, i64 %20
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x85f168(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x85f168_type* @G_0x85f168 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.proofnumberscan(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41affc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41aff7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x62ea20(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x62ea20_type* @G_0x62ea20 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x62ea28(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x62ea28_type* @G_0x62ea28 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x62ea30(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  store i64 %9, i64* bitcast (%G_0x62ea30_type* @G_0x62ea30 to i64*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x866530(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b04d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x62ea24___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x62ea24_type* @G_0x62ea24 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x62db0c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x62db0c_type* @G_0x62db0c to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b04d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62ea20___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62ea20_type* @G_0x62ea20 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62ea28___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62ea28_type* @G_0x62ea28 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62ea30___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62ea30_type* @G_0x62ea30 to i64*)
  store i64 %11, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x62e4f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x62e4f8_type* @G_0x62e4f8 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b069(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b0b4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b0b4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x10__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x8__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b6d2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x12c__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 76
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 300
  %16 = icmp ult i32 %14, 300
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 300
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41b143(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x12c__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 300
  %16 = icmp ult i32 %14, 300
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 300
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41b130(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x63ae50___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x63ae50_type* @G__0x63ae50 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x1c20___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 7200, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x50__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db08___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db10___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__0x8__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db18___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %11, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__0x10__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x50__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b0cf(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b135(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x4c__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b0bb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x86bda0___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x86bda0_type* @G__0x86bda0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x14400___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 82944, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41b255(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x882600___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x882600_type* @G__0x882600 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x639220___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x639220_type* @G__0x639220 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x884b20___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x884b20_type* @G__0x884b20 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e530___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 6481200
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x638c60___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 6524000
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x881e00___rsi_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8920576
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x18___rsi___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 24, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RSI, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rsi___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db08___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi____rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db10___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__0x8__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db18___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsi__0x10__rdx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RCX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db08___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db08_type* @G_0x62db08 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db10___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db10_type* @G_0x62db10 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__0x8__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x62db18___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x62db18_type* @G_0x62db18 to i64*)
  store i64 %11, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdx__0x10__rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b165(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x884320___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x884320_type* @G__0x884320 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x800___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2048, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x86450c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 96
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x633b50(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x633b50___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x880b18___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x880b18_type* @G_0x880b18 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_41b6cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8662e8___rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i64, i64* bitcast (%G_0x8662e8_type* @G_0x8662e8 to i64*)
  store i64 %11, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.rdifftime(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd0f3__rip____xmm0(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xd0f3__rip__type* @G_0xd0f3__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsd_0xd0f3__rip____xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, ptrtoint (%G_0xd0f3__rip__type* @G_0xd0f3__rip_ to i64)
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to double*
  %14 = load double, double* %13
  %15 = bitcast i8* %8 to double*
  store double %14, double* %15, align 1
  %16 = getelementptr inbounds i8, i8* %8, i64 8
  %17 = bitcast i8* %16 to double*
  store double 0.000000e+00, double* %17, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_MINUS0x58__rbp____xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sitofp i32 %17 to double
  %19 = bitcast i8* %11 to double*
  store double %18, double* %19, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cvtsi2sdl_0x633b44___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  %12 = sitofp i32 %11 to double
  %13 = bitcast i8* %8 to double*
  store double %12, double* %13, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_mulsd__xmm1___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fmul double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divsd__xmm0___xmm3(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = bitcast %union.vec128_t* %XMM0 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = bitcast i8* %11 to double*
  %16 = load double, double* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = bitcast i8* %12 to double*
  %21 = load double, double* %20, align 1
  %22 = fdiv double %16, %21
  %23 = bitcast i8* %10 to double*
  store double %22, double* %23, align 1
  %24 = getelementptr inbounds i8, i8* %10, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm3___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM2 to i8*
  %11 = bitcast %union.vec128_t* %XMM3 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = bitcast i8* %10 to double*
  %15 = load double, double* %14, align 1
  %16 = bitcast i8* %11 to double*
  %17 = load double, double* %16, align 1
  %18 = fcmp uno double %15, %17
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %block_400488
  %20 = fadd double %15, %17
  %21 = bitcast double %20 to i64
  %22 = and i64 %21, 9221120237041090560
  %23 = icmp eq i64 %22, 9218868437227405312
  %24 = and i64 %21, 2251799813685247
  %25 = icmp ne i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %29, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:31:                                     ; preds = %block_400488
  %32 = fcmp ogt double %15, %17
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %31
  %34 = fcmp olt double %15, %17
  br i1 %34, label %37, label %35

; <label>:35:                                     ; preds = %33
  %36 = fcmp oeq double %15, %17
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %35, %33, %31, %19
  %38 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 1, %35 ], [ 1, %19 ]
  %39 = phi i8 [ 0, %31 ], [ 0, %33 ], [ 0, %35 ], [ 1, %19 ]
  %40 = phi i8 [ 0, %31 ], [ 1, %33 ], [ 0, %35 ], [ 1, %19 ]
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %39, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %40, i8* %43, align 1
  br label %44

; <label>:44:                                     ; preds = %37, %35
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %47, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %27, %44
  %48 = phi %struct.Memory* [ %30, %27 ], [ %2, %44 ]
  ret %struct.Memory* %48
}

define %struct.Memory* @routine_jbe_.L_41b303(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = or i8 %15, %13
  %17 = icmp ne i8 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %BRANCH_TAKEN, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %7, i64 %9
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x633b50(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %9 = sub i32 %8, 2
  %10 = icmp ult i32 %8, 2
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 2
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_41b303(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b6cd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x30a8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x64___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 100, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x23___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 35, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x8644f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x8644f4_type* @G_0x8644f4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x85f154(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x85f154_type* @G_0x85f154 to i32*)
  %9 = sub i32 %8, 2
  %10 = icmp ult i32 %8, 2
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 2
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovel__ecx___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp ne i8 %17, 0
  %19 = load i64, i64* %RSI, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__esi___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmovel__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %17 = load i8, i8* %16, align 1
  %18 = icmp ne i8 %17, 0
  %19 = load i64, i64* %RAX, align 8
  %20 = select i1 %18, i64 %13, i64 %19
  %21 = and i64 %20, 4294967295
  store i64 %21, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__eax___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = add i32 %13, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RDX, align 8
  %20 = icmp ult i32 %18, %17
  %21 = icmp ult i32 %18, %13
  %22 = or i1 %20, %21
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %18, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i64 %14, %12
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, %18
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %18, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %18, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %17, 31
  %45 = lshr i32 %13, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x64__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x633b50___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.search_root(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30a8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12456
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30a0__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x3098__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rdi__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b38d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x86450c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 100
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_41b3ad(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x8644f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x8644f4_type* @G_0x8644f4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b3b8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jg_.L_41b43b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = xor i1 %21, true
  %23 = and i1 %14, %22
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %BRANCH_TAKEN, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %26 = select i1 %23, i64 %7, i64 %9
  store i64 %26, i64* %25, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x866788(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x866788_type* @G_0x866788 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b43b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x30c0__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xfff0bdc0___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 4293967296, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xf4240___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1000000, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30c0__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30b8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30b0__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b436(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b4e5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 104
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_41b4e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b4e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x30d8__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x86450c___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x70__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30d8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12504
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30d0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12496
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30c8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12488
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x20__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b4db(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b4e0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b55b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x633b50(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %9 = sub i32 %8, 1
  %10 = icmp ult i32 %8, 1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_41b55b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b53e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b551(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b556(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b55b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x8661dc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x8661dc_type* @G_0x8661dc to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b650(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x8644f4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x8644f4_type* @G_0x8644f4 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xfff0bdc0__0x86450c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %9 = sub i32 %8, -1000000
  %10 = icmp ult i32 %8, -1000000
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, -1000000
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %31, 1
  %33 = xor i32 %28, %31
  %34 = add i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b5b7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x8822b0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x8822b0_type* @G__0x8822b0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.stringize_pv(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b606(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__al___cl(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  store i8 %14, i8* %CL, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movb__cl__0x86678c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %CL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  store i8 %10, i8* getelementptr inbounds (%G_0x86678c_type, %G_0x86678c_type* @G_0x86678c, i32 0, i32 0, i32 0)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_41b620(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x86450c___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.post_thinking(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xdbba0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 900000
  %16 = icmp ult i32 %14, 900000
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 900000
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_41b64b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xf4240___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1000000, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_0x86450c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x86450c_type* @G_0x86450c to i32*)
  %14 = sub i32 %12, %13
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %12, %13
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %14, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %13, %12
  %26 = xor i32 %25, %14
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %14, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %14, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = lshr i32 %13, 31
  %39 = xor i32 %38, %37
  %40 = xor i32 %34, %37
  %41 = add i32 %40, %39
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x633b50___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41b64b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b650(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b663(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41b6b2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x50__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e530___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 6481200
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x638c60___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 6524000
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x881e00___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8920576
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 0, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b66a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b6b7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x633b50(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x633b50_type* @G_0x633b50 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b294(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b8c1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x10__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b714(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b8bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x62e51c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x62e51c_type* @G_0x62e51c to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x30f0__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x18__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62ea10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62ea10_type* @G_0x62ea10 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq___rax____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i64*
  %16 = load i64, i64* %15
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx____rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %12 to i64*
  store i64 %13, i64* %16
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x8__rax____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__0x8__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 8
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__0x10__rsp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.proofnumbercheck(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30f0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12528
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30e8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12520
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30e0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xa__MINUS0x3080__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 12416
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 10
  %16 = icmp ult i32 %14, 10
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 10
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41b8b7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x62ea10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x62ea10_type* @G_0x62ea10 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b8b7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3080__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3080__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12416
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x3084__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 12420
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41b853(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x48__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 72
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b840(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x44__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 68
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xc__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x3c__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 60
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x4c__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x886bf0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8940528
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 11
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  store i32 1, i32* %14
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b853(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b845(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b7c4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41b897(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x886bf0___rax_4_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 8940528
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %16, align 1
  %17 = and i32 %15, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  %24 = icmp eq i32 %15, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %15, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %15, 31
  %31 = xor i32 %27, %30
  %32 = add i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b884(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b889(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b85a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x62e9e0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x62e9e0_type* @G_0x62e9e0 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b8b2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x62e51c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x62e51c_type* @G_0x62e51c to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41a989(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b8bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41b8c1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b8e7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b95a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x8a2a04(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x8a2a04_type* @G_0x8a2a04 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x308c__rbp____rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.comp_to_san(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4290cd___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4290cd_type* @G__0x4290cd to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_leaq_MINUS0x308c__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12428
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3080__rbp____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12416
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x866530(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3120__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12576
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x8a05b4___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = sub i32 %17, %13
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RCX, align 8
  %20 = icmp ult i32 %17, %13
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %21, i8* %22, align 1
  %23 = and i32 %18, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %14, %12
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, %18
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %18, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %18, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %17, 31
  %43 = lshr i32 %13, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx__0x8a05b4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x8a05b4_type* @G_0x8a05b4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x8661d8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x8661d8_type* @G_0x8661d8 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41b9c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b9c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x633b44___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x633b44_type* @G_0x633b44 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x58__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RAX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x8a0a78___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x8a0a78_type* @G_0x8a0a78 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl_0x86bd88___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = load i32, i32* bitcast (%G_0x86bd88_type* @G_0x86bd88 to i32*)
  %14 = add i32 %13, %12
  %15 = zext i32 %14 to i64
  store i64 %15, i64* %RAX, align 8
  %16 = icmp ult i32 %14, %12
  %17 = icmp ult i32 %14, %13
  %18 = or i1 %16, %17
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %19, i8* %20, align 1
  %21 = and i32 %14, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = xor i32 %13, %12
  %28 = xor i32 %27, %14
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %14, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %14, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = lshr i32 %13, 31
  %41 = xor i32 %36, %39
  %42 = xor i32 %36, %40
  %43 = add i32 %41, %42
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %45, i8* %46, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__0x86bd88(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x86bd88_type* @G_0x86bd88 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xf423e__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 999998
  %16 = icmp ult i32 %14, 999998
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 999998
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41ba09(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x8661bc(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x8661bc_type* @G_0x8661bc to i32*)
  %9 = sub i32 %8, 1
  %10 = icmp ult i32 %8, 1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41b9f9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x3__0x866530(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 3, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ba04(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2__0x866530(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 2, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ba57(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xfff0bdc2__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -999998
  %16 = icmp ult i32 %14, -999998
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -999998
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41ba52(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41ba42(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ba4d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41ba52(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x86679c(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x86679c_type* @G_0x86679c to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41bb6d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41bb6d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3__0x866530(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %9 = sub i32 %8, 3
  %10 = icmp ult i32 %8, 3
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 3
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0x866530(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %9 = sub i32 %8, 2
  %10 = icmp ult i32 %8, 2
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 2
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x4__0x866530(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %9 = sub i32 %8, 4
  %10 = icmp ult i32 %8, 4
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 4
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x5__0x866530(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %9 = sub i32 %8, 5
  %10 = icmp ult i32 %8, 5
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 5
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0x866530(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x866530_type* @G_0x866530 to i32*)
  %9 = sub i32 %8, 1
  %10 = icmp ult i32 %8, 1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, 1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %28, %31
  %33 = add i32 %32, %31
  %34 = icmp eq i32 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xf40b0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 999600
  %16 = icmp ult i32 %14, 999600
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 999600
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_41bb68(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41bb2c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4290fe___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4290fe_type* @G__0x4290fe to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x2___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 2, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0xf4240___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  store i64 1000000, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl_MINUS0x5c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 92
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = trunc i64 %12 to i32
  %18 = inttoptr i64 %14 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  %22 = icmp ult i32 %17, %19
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %23, i8* %24, align 1
  %25 = and i32 %20, 255
  %26 = call i32 @llvm.ctpop.i32(i32 %25)
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = xor i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %29, i8* %30, align 1
  %31 = xor i32 %19, %17
  %32 = xor i32 %31, %20
  %33 = lshr i32 %32, 4
  %34 = trunc i32 %33 to i8
  %35 = and i8 %34, 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %35, i8* %36, align 1
  %37 = icmp eq i32 %20, 0
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %38, i8* %39, align 1
  %40 = lshr i32 %20, 31
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %41, i8* %42, align 1
  %43 = lshr i32 %17, 31
  %44 = lshr i32 %19, 31
  %45 = xor i32 %44, %43
  %46 = xor i32 %40, %43
  %47 = add i32 %46, %45
  %48 = icmp eq i32 %47, 2
  %49 = zext i1 %48 to i8
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %49, i8* %50, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3124__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12580
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cltd(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = lshr i64 %12, 32
  store i64 %13, i64* %8, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x3124__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12580
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %18 = bitcast %union.anon* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = shl i64 %10, 32
  %22 = ashr exact i64 %21, 32
  %23 = shl i64 %20, 32
  %24 = or i64 %23, %16
  %25 = sdiv i64 %24, %22
  %26 = shl i64 %25, 32
  %27 = ashr exact i64 %26, 32
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %block_400488
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %31, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:33:                                     ; preds = %block_400488
  %34 = srem i64 %24, %22
  %35 = getelementptr inbounds %union.anon, %union.anon* %13, i64 0, i32 0
  %36 = and i64 %25, 4294967295
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0
  %38 = and i64 %34, 4294967295
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %44, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %29, %33
  %45 = phi %struct.Memory* [ %32, %29 ], [ %2, %33 ]
  ret %struct.Memory* %45
}

define %struct.Memory* @routine_movl__eax__MINUS0x3128__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12584
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41bb63(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x429119___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x429119_type* @G__0x429119 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x312c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12588
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x312c__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12588
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3130__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12592
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41bb68(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41bb6d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41bc11(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movsbl_0x86678c___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = load i8, i8* getelementptr inbounds (%G_0x86678c_type, %G_0x86678c_type* @G_0x86678c, i32 0, i32 0, i32 0)
  %12 = sext i8 %11 to i64
  %13 = and i64 %12, 4294967295
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jl_.L_41bc11(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %BRANCH_TAKEN, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %21 = select i1 %18, i64 %7, i64 %9
  store i64 %21, i64* %20, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41bc11(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffffffff__0x8825f8(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x8825f8_type* @G_0x8825f8 to i32*)
  %9 = sub i32 %8, -1
  %10 = icmp ult i32 %8, -1
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %8, -1
  %20 = xor i32 %19, %9
  %21 = lshr i32 %20, 4
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i32 %9, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i32 %9, 31
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = xor i32 %31, 1
  %33 = xor i32 %28, %31
  %34 = add i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41bc0c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = xor i64 %14, %12
  %18 = trunc i64 %17 to i32
  %19 = and i64 %17, 4294967295
  store i64 %19, i64* %RAX, align 8
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %20, align 1
  %21 = and i32 %18, 255
  %22 = call i32 @llvm.ctpop.i32(i32 %21)
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = xor i8 %24, 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %25, i8* %26, align 1
  %27 = icmp eq i32 %18, 0
  %28 = zext i1 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %18, 31
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = and i64 %13, 4294967295
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = inttoptr i64 %9 to i32*
  store i32 0, i32* %12
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41bc11(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41bc6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xfff0be24__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -999900
  %16 = icmp ult i32 %14, -999900
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -999900
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_41bc6f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x62e9e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x62e9e4_type* @G_0x62e9e4 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41bc6a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x86bd84(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x86bd84_type* @G_0x86bd84 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x42914d___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x42914d_type* @G__0x42914d to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x62e9e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x62e9e4_type* @G_0x62e9e4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3134__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12596
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41bde2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41bd6c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41bd6c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41bcbc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x86bd90(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x86bd90_type* @G_0x86bd90 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41bcfd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x85f1f0___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x85f1f0_type* @G__0x85f1f0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x1__0x86bd84(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 1, i32* bitcast (%G_0x86bd84_type* @G_0x86bd84 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_callq_.ProcessHoldings(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x429172___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x429172_type* @G__0x429172 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__0x62e9e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  store i32 0, i32* bitcast (%G_0x62e9e4_type* @G_0x62e9e4 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3138__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12600
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xfff0bdc0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -1000000
  %16 = icmp ult i32 %14, -1000000
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -1000000
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_41bd67(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0__0x86bd78(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = load i32, i32* bitcast (%G_0x86bd78_type* @G_0x86bd78 to i32*)
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %8, 255
  %11 = call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %16, align 1
  %17 = icmp eq i32 %8, 0
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %18, i8* %19, align 1
  %20 = lshr i32 %8, 31
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %21, i8* %22, align 1
  %23 = lshr i32 %8, 31
  %24 = xor i32 %20, %23
  %25 = add i32 %24, %23
  %26 = icmp eq i32 %25, 2
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41bd4b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x42918b___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x42918b_type* @G__0x42918b to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4291bc___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4291bc_type* @G__0x4291bc to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x313c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12604
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3140__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12608
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41bd62(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x4291cc___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x4291cc_type* @G__0x4291cc to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3144__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12612
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41bd67(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41bddd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffff15a0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -60000
  %16 = icmp ult i32 %14, -60000
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -60000
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jle_.L_41bdd8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = xor i1 %17, %20
  %22 = or i1 %14, %21
  %23 = zext i1 %22 to i8
  store i8 %23, i8* %BRANCH_TAKEN, align 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = select i1 %22, i64 %7, i64 %9
  store i64 %25, i64* %24, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0xffff63c0__MINUS0x5c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 92
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, -40000
  %16 = icmp ult i32 %14, -40000
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, -40000
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %37, 1
  %39 = xor i32 %34, %37
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41bdd8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41bdd8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0x42921d___rdi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0x42921d_type* @G__0x42921d to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x3148__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12616
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30f8__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 12536
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x3160___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = add i64 12640, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 12640
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 12640, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
